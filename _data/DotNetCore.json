{"Data":{"Blog":{"FeedItems":[{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0","PublishedOn":"2019-09-23T16:00:29+00:00","CommentsCount":56,"FacebookCount":0,"Summary":"Announcing .NET Core 3.0\nWe’re excited to announce the release of .NET Core 3.0. It includes many improvements, including adding Windows Forms and WPF, adding new JSON APIs, support for ARM64 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/","RawContent":null},{"Title":"Release Candidate builds of Entity Framework Core 3.0 and Entity Framework 6.3 are now available","PublishedOn":"2019-09-16T21:47:32+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We previously said that preview 9 would be your last chance to test EF Core 3.0 and EF 6.3 before general availability. But it turns out that we made enough improvements to our libraries and across...","Href":"https://devblogs.microsoft.com/dotnet/release-candidate-builds-of-entity-framework-core-3-0-and-entity-framework-6-3-are-now-available/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Release Candidate 1","PublishedOn":"2019-09-16T18:45:09+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.0 Release Candidate 1. Just like with Preview 9, we&#8217;ve focused on polishing .NET Core 3.0 for a final release. We are now getting very, very close. We...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/","RawContent":null},{"Title":"Finalization implementation details","PublishedOn":"2019-09-16T17:43:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Years ago I wrote a document on making finalization scanning concurrent. At the time there was an internal team that was using finalization as a way to resurrect objects and putting them back in their...","Href":"https://devblogs.microsoft.com/dotnet/finalization-implementation-details/","RawContent":null},{"Title":".NET Framework September 2019 Security and Quality Rollup","PublishedOn":"2019-09-10T18:54:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the September 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update for .NET Framework.\nSecurity\nCVE-2019-1142– .NET Framework Elevation of Privilege...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core September 2019 Updates – 2.1.13 and 2.2.7","PublishedOn":"2019-09-10T17:17:31+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core September 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a...","Href":"https://devblogs.microsoft.com/dotnet/net-core-september-2019/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10486020433","Type":"IssuesEvent","CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Opened issue \".NET Core `latest` Docker tags updated to 3.0\" (#124) at dotnet/announcements","RelatedBody":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n"},{"Id":"10427072993","Type":"IssuesEvent","CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Opened issue \".NET Core 3.0 RC 1\" (#123) at dotnet/announcements","RelatedBody":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10387173702","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:23:27","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Opened issue \"September 2019 .NET Updates\" (#122) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10387041341","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:04:51","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32971\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.7\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.8, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n"},{"Id":"10348207363","Type":"IssuesEvent","CreatedAt":"2019-09-04T19:14:06","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Opened issue \".NET Core 3.0 Preview 9\" (#120) at dotnet/announcements","RelatedBody":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n[EF Core](https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-9-and-entity-framework-6-3-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10488285184","Type":"PullRequestEvent","CreatedAt":"2019-09-25T02:07:05","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26876","RelatedDescription":"Opened pull request \"[WIP] test PR\" (#26876) at dotnet/coreclr","RelatedBody":""},{"Id":"10488237202","Type":"PullRequestEvent","CreatedAt":"2019-09-25T01:55:00","Actor":"davidwrighton","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26868","RelatedDescription":"Merged pull request \"Mergefrommaster\" (#26868) at dotnet/coreclr","RelatedBody":""},{"Id":"10488164219","Type":"PullRequestEvent","CreatedAt":"2019-09-25T01:36:08","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26875","RelatedDescription":"Opened pull request \"update branding for servicing\" (#26875) at dotnet/coreclr","RelatedBody":""},{"Id":"10488144229","Type":"IssuesEvent","CreatedAt":"2019-09-25T01:31:03","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26874","RelatedDescription":"Opened issue \"Linux build.sh failing with segmentation fault in crossgen\" (#26874) at dotnet/coreclr","RelatedBody":"Linux amd64 build failing\r\n```\r\nGenerating native image of System.Private.CoreLib.dll for Linux.x64.Debug. Logging to \"/home/stmaclea/git/coreclr/bin/Logs/CrossgenCoreLib_Linux.x64.Debug.log\".\r\n/home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/crossgen /Platform_Assemblies_Paths /home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/IL  /out /home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll /home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/IL/System.Private.CoreLib.dll\r\n./build.sh: line 363: 29032 Segmentation fault      (core dumped)\r\n```"},{"Id":"10488024129","Type":"PullRequestEvent","CreatedAt":"2019-09-25T01:00:33","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26853","RelatedDescription":"Merged pull request \"Replace gtLclNum with GetLclNum()\" (#26853) at dotnet/coreclr","RelatedBody":"@am11  @jkotas @janvorli @sandreenko "},{"Id":"10487962956","Type":"IssuesEvent","CreatedAt":"2019-09-25T00:44:16","Actor":"303248153","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26873","RelatedDescription":"Opened issue \".NET Core 3.0 RTM Freeze on Ubuntu 16.04\" (#26873) at dotnet/coreclr","RelatedBody":"Today I installed .NET Core 3.0 RTM (3.0.100) on my ubuntu 16.04.6 x86-64 vps, when I trying to build a hello world console project, the dotnet process with following arguments freeze:\r\n\r\n``` text\r\ndotnet exec /usr/share/dotnet/sdk/3.0.100/MSBuild.dll -maxcpucount -verbosity:m -nologo -target:Restore -verbosity:diag -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/usr/share/dotnet/sdk/3.0.100/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/usr/share/dotnet/sdk/3.0.100/dotnet.dll\r\n```\r\n\r\nThe previous version (.NET Core 2.2) doesn't have this issue.\r\n\r\nThen I trying to build coreclr from source to find why it happends.\r\nI clone coreclr repository, checkout release/3.1 branch, then run build.sh, and it freeze again.\r\nThe command line:\r\n\r\n``` text\r\n/home/ubuntu/tmp/coreclr/.dotnet/dotnet msbuild /home/ubuntu/tmp/coreclr/src/.nuget/optdata/optdata.csproj /t:DumpPgoDataPackageVersion /p:__BuildArch=x64 /p:__BuildType=Debug /p:__BuildOS=Linux /nodeReuse:false /p:RestoreDuringBuild=true /p:PgoDataPackageVersionOutputFile=/home/ubuntu/tmp/coreclr/bin/obj/Linux.x64.Debug/optdataversion.txt /nologo\r\n```\r\n\r\nI attach the process with gdb and run `thread apply all bt`, here is the output messages, looks like .NET Core 3.0 have some deadlock bug on ubuntu 16.04, both RTM and preview 7.\r\n\r\n``` text\r\nThread 19 (Thread 0x7f1ed5ea0700 (LWP 12863)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45a8422 in CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed4200435 in CrstBase::Enter() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed4349e47 in ThreadSuspend::LockThreadStore(ThreadSuspend::SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed42796cb in ThreadStore::AddThread(Thread*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed42797c2 in SetupUnstartedThread(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed429e020 in ThreadpoolMgr::CreateUnimpersonatedThread(unsigned int (*)(void*), void*, int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed429d000 in ThreadpoolMgr::MaybeAddWorkingWorker() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed42a07dd in ThreadpoolMgr::GateThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1ed5ea0700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 18 (Thread 0x7f1d8a1fa700 (LWP 12856)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed446da9d in WKS::gc_heap::wait_for_gc_done(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44a1311 in WKS::GCHeap::WaitUntilGCComplete(bool) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed429e567 in ThreadpoolMgr::WorkerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1d8a1fa700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 17 (Thread 0x7f1d8abfb700 (LWP 12847)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed42798e6 in Thread::OnThreadTerminate(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed429e8e3 in ThreadpoolMgr::WorkerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1d8abfb700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 16 (Thread 0x7f1d8b5fc700 (LWP 12845)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed446da9d in WKS::gc_heap::wait_for_gc_done(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44a1311 in WKS::GCHeap::WaitUntilGCComplete(bool) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed429e567 in ThreadpoolMgr::WorkerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1d8b5fc700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 15 (Thread 0x7f1d8bffd700 (LWP 12841)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed427ca04 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1e5aa7942d in ?? ()\r\n#9  0x00007f1d8bffcc40 in ?? ()\r\n#10 0x00007f1d8c1bc8a8 in ?? ()\r\n#11 0x00007f1d8c1d20b8 in ?? ()\r\n#12 0x00007f1d00000001 in ?? ()\r\n#13 0x00007f1d8c1d20a0 in ?? ()\r\n#14 0x00007f1d8c1bc8a8 in ?? ()\r\n#15 0x00007f1d8bffcc90 in ?? ()\r\n#16 0x00007f1e5aa79314 in ?? ()\r\n#17 0x00007f1d8c1d20a0 in ?? ()\r\n#18 0x00007f1d8c1bc8a8 in ?? ()\r\n#19 0x00007f1d8bffcce0 in ?? ()\r\n#20 0x00007f1e5aa82ebf in ?? ()\r\n#21 0x00007f1d8bffcca0 in ?? ()\r\n#22 0x00007f1d8c1bc888 in ?? ()\r\n#23 0x00007f1d8c1bc858 in ?? ()\r\n#24 0x0000000200000000 in ?? ()\r\n#25 0x0000000200000002 in ?? ()\r\n#26 0x00000000ffffffff in ?? ()\r\n#27 0x00007f1d8c1bc858 in ?? ()\r\n#28 0x0000000000000009 in ?? ()\r\n#29 0x00007f1d8bffcd70 in ?? ()\r\n#30 0x00007f1e5aa81e80 in ?? ()\r\n#31 0xa1a168411a874f10 in ?? ()\r\n#32 0x1318fdefacd62aa6 in ?? ()\r\n#33 0x97fce06f1e159f73 in ?? ()\r\n#34 0xa4460fe33eb93df9 in ?? ()\r\n#35 0x46000000ac000000 in ?? ()\r\n#36 0x00007f1d8c1bc858 in ?? ()\r\n#37 0x00000000ffffffff in ?? ()\r\n#38 0x0000000000000000 in ?? ()\r\n\r\nThread 14 (Thread 0x7f1e59140700 (LWP 12840)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed427cc85 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1e5aa7942d in ?? ()\r\n#11 0x00007f1e5913f6e0 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\nThread 13 (Thread 0x7f1e59b41700 (LWP 12839)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed427cc85 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1e5aa7942d in ?? ()\r\n#11 0x00007f1e59b406d0 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\nThread 12 (Thread 0x7f1ebd0c1700 (LWP 12837)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434af73 in ThreadSuspend::SuspendRuntime(ThreadSuspend::SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed434c60e in ThreadSuspend::SuspendEE(ThreadSuspend::SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed44a2e53 in GCToEEInterface::SuspendEE(SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44793b8 in WKS::GCHeap::GarbageCollectGeneration(unsigned int, gc_reason) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed447b440 in WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, unsigned int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#11 0x00007f1ed449d080 in WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#12 0x00007f1ed42de450 in AllocateSzArray(MethodTable*, int, GC_ALLOC_FLAGS, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#13 0x00007f1ed42ebc8b in JIT_NewArr1(CORINFO_CLASS_STRUCT_*, long) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#14 0x00007f1e5bfd8819 in ?? ()\r\n#15 0x0000000000001000 in ?? ()\r\n#16 0x00007f1d8c3f5860 in ?? ()\r\n#17 0x0000000000000000 in ?? ()\r\n\r\nThread 11 (Thread 0x7f1ebdac2700 (LWP 12836)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed427cc85 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1e5aa7942d in ?? ()\r\n#11 0x00007f1ebdac16d0 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\nThread 10 (Thread 0x7f1ebed8f700 (LWP 12834)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b1c89 in SleepEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed42e233a in __SwitchToThread(unsigned int, unsigned int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed429dd35 in ThreadpoolMgr::GetRecycledMemory(ThreadpoolMgr::MemType) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed43fcdd2 in DelegateInfo::MakeDelegateInfo(Object**, Object**, Object**) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed43fe2ea in ThreadPoolNative::CorRegisterWaitForSingleObject(Object*, Object*, unsigned int, bool, Object*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1e5aa7711a in ?? ()\r\n#9  0x00007f1d8c1c2ca0 in ?? ()\r\n#10 0x00007f1d8c1c2d20 in ?? ()\r\n#11 0x00007f1d8c1c2ce0 in ?? ()\r\n#12 0x00007f1d8c1c2ce0 in ?? ()\r\n#13 0x0000000100000001 in ?? ()\r\n#14 0x00007f1d8c1c2ca0 in ?? ()\r\n#15 0x00007f1d8c1c2c20 in ?? ()\r\n#16 0x00007f1d8c1c2c68 in ?? ()\r\n#17 0x00007f1d8c1c2c88 in ?? ()\r\n#18 0x000000000000322a in ?? ()\r\n#19 0x00007f1ebed8e380 in ?? ()\r\n#20 0x00007f1e5aa773ee in ?? ()\r\n#21 0x00007f1d8c1c2ca0 in ?? ()\r\n#22 0x00007f1d8c1c2c88 in ?? ()\r\n#23 0x00007f1ebed8e3c0 in ?? ()\r\n#24 0x00007f1e5b945064 in ?? ()\r\n#25 0x00007f1ebed8e390 in ?? ()\r\n#26 0x00007f1d8c1bc2c8 in ?? ()\r\n#27 0x00007f1d8c1bc2c8 in ?? ()\r\n#28 0x00007f1d00000001 in ?? ()\r\n#29 0x00000000000002c0 in ?? ()\r\n#30 0x00007f1d8c1c2a90 in ?? ()\r\n#31 0x00007f1ebed8e4e0 in ?? ()\r\n#32 0x00007f1e5b93dfce in ?? ()\r\n#33 0x0000000000000001 in ?? ()\r\n#34 0x0000000000000000 in ?? ()\r\n\r\nThread 9 (Thread 0x7f1ed5ee9700 (LWP 12833)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b1c89 in SleepEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed42a0f8d in ThreadpoolMgr::TimerThreadFire() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed42a0e55 in ThreadpoolMgr::TimerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed5ee9700) at pthread_create.c:333\r\n#8  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 8 (Thread 0x7f1ec1a3d700 (LWP 12832)):\r\n#0  0x00007f1ed5beb76d in accept () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f1ed44dffdd in IpcStream::DiagnosticsIpc::Accept(void (*)(char const*, unsigned int)) const ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed42c47c0 in DiagnosticsServerThread(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed5be26ba in start_thread (arg=0x7f1ec1a3d700) at pthread_create.c:333\r\n#5  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 7 (Thread 0x7f1ec243e700 (LWP 12831)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed42dcc4e in FinalizerThread::WaitForFinalizerEvent(CLREvent*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed42dcd62 in FinalizerThread::FinalizerThreadWorker(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed4280225 in ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed42808dd in ManagedThreadBase::FinalizerBase(void (*)(void*)) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed42dcf9c in FinalizerThread::FinalizerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#11 0x00007f1ed5be26ba in start_thread (arg=0x7f1ec243e700) at pthread_create.c:333\r\n#12 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 6 (Thread 0x7f1e5a546700 (LWP 12830)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed44d71a6 in DebuggerRCThread::MainLoop() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed44d704b in DebuggerRCThread::ThreadProc() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44d6d69 in DebuggerRCThread::ThreadProcStatic(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed5be26ba in start_thread (arg=0x7f1e5a546700) at pthread_create.c:333\r\n#10 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 5 (Thread 0x7f1ed1403700 (LWP 12829)):\r\n#0  0x00007f1ed5bebc7d in open64 () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f1ed44e024f in TwoWayPipe::WaitForConnection() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed44d9af2 in DbgTransportSession::TransportWorker() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed44d8a09 in DbgTransportSession::TransportWorkerStatic(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed1403700) at pthread_create.c:333\r\n#6  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 4 (Thread 0x7f1ed200f700 (LWP 12828)):\r\n#0  0x00007f1ed4e6774d in poll () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f1ed45af30e in CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(int, unsigned char*, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45aeee8 in CorUnix::CPalSynchronizationManager::ReadCmdFromProcessPipe(int, CorUnix::CPalSynchronizationManager::SynchWorkerCmd*, void**, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45aeb64 in CorUnix::CPalSynchronizationManager::WorkerThread(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed200f700) at pthread_create.c:333\r\n#6  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 3 (Thread 0x7f1ed2a10700 (LWP 12827)):\r\n#0  syscall () at ../sysdeps/unix/sysv/linux/x86_64/syscall.S:38\r\n#1  0x00007f1ed3a5287c in ?? () from /usr/lib/x86_64-linux-gnu/liblttng-ust.so.0\r\n#2  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed2a10700) at pthread_create.c:333\r\n#3  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 2 (Thread 0x7f1ed3411700 (LWP 12826)):\r\n#0  syscall () at ../sysdeps/unix/sysv/linux/x86_64/syscall.S:38\r\n#1  0x00007f1ed3a5287c in ?? () from /usr/lib/x86_64-linux-gnu/liblttng-ust.so.0\r\n#2  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed3411700) at pthread_create.c:333\r\n#3  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 1 (Thread 0x7f1ed600e740 (LWP 12825)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed427ca04 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1e5aa7942d in ?? ()\r\n#9  0x00007ffec2b34b90 in ?? ()\r\n#10 0x00007f1d8c213740 in ?? ()\r\n#11 0x00007f1d8c213758 in ?? ()\r\n#12 0x00007f1d00000001 in ?? ()\r\n#13 0x00007f1d8c213740 in ?? ()\r\n#14 0x00007f1d8c1bc8a8 in ?? ()\r\n#15 0x00007ffec2b34be0 in ?? ()\r\n#16 0x00007f1e5aa79314 in ?? ()\r\n#17 0x00007f1d8c213740 in ?? ()\r\n#18 0x00007f1d8c1bc8a8 in ?? ()\r\n#19 0x00007ffec2b34c30 in ?? ()\r\n#20 0x00007f1e5aa82ebf in ?? ()\r\n#21 0x00007ffec2b34bf0 in ?? ()\r\n#22 0x00007f1d8c1bc88c in ?? ()\r\n#23 0x00007f1d8c1bc858 in ?? ()\r\n#24 0x0000000000000000 in ?? ()\r\n```"},{"Id":"10487946132","Type":"PullRequestEvent","CreatedAt":"2019-09-25T00:39:40","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26872","RelatedDescription":"Opened pull request \"More Corelib cleanup\" (#26872) at dotnet/coreclr","RelatedBody":"Trying out the https://www.nuget.org/packages/Roslynator.Analyzers/ package."},{"Id":"10487887687","Type":"PullRequestEvent","CreatedAt":"2019-09-25T00:24:03","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26867","RelatedDescription":"Merged pull request \"Add CollectionsMarshal\" (#26867) at dotnet/coreclr","RelatedBody":"Resolves https://github.com/dotnet/corefx/issues/31597"},{"Id":"10487868555","Type":"PullRequestEvent","CreatedAt":"2019-09-25T00:19:07","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26869","RelatedDescription":"Merged pull request \"resolve several issues found by cppcheck\" (#26869) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10487782185","Type":"IssuesEvent","CreatedAt":"2019-09-24T23:57:53","Actor":"javadparvaresh","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/12702","RelatedDescription":"Opened issue \"dotnet build failed exit code\" (#12702) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nWhen `dotnet build` fails with error, it doesn't return `-1` exit code and also it prints out Build succeeded`.\r\nin previous  version when one of projects failed to build all build process was failing. \r\n\r\n## Expected  behavior\r\nWhen one or more project fails to build, it should return `-1` exit code.\r\n\r\n## Actual behavior\r\nWhen one or more project fails to build, it returns success exit code.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10487741773","Type":"IssuesEvent","CreatedAt":"2019-09-24T23:47:31","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/12701","RelatedDescription":"Closed issue \"Package dependency directory has changed since preview\" (#12701) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nBuild project with any of various Microsoft.Extensions.XYZ packages (eg: Microsoft.Extensions.Configuration) using .NET Core 3.0 release.\r\n\r\n## Actual behavior\r\n\r\nThe `Appname.deps.json` file that is produced on build points to reference directories such as \"lib/**netcoreapp3.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\n## Expected  behavior\r\n\r\nPreviously, when using preview builds of .NET Core 3, and also what I would normally expect, the `.deps.json` file that is produced on build pointed to reference directories such as \"lib/**netstandard2.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\nIf I check in the packages repository on my drive, there are subdirectories for both `netstandard2.0` and `netcoreapp3.0`.  Since these extensions are just .dll libraries, and not full apps, I would expect the dependencies to be referenced using netstandard rather than netcoreapp.  If there are dependencies on anything that is netstandard2.1 dependent (corresponding to netcoreapp3.0), I would expect a netstandard2.1 subdirectory to be used instead.\r\n\r\nThis introduces uncertainty regarding usage and accessibility of dependency files, since some other packages still point to `netstandard2.0` directories.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10487656137","Type":"IssuesEvent","CreatedAt":"2019-09-24T23:26:30","Actor":"Kinematics","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/12701","RelatedDescription":"Opened issue \"Package dependency directory has changed since preview\" (#12701) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nBuild project with any of various Microsoft.Extensions.XYZ packages (eg: Microsoft.Extensions.Configuration) using .NET Core 3.0 release.\r\n\r\n## Actual behavior\r\n\r\nThe `Appname.deps.json` file that is produced on build points to reference directories such as \"lib/**netcoreapp3.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\n## Expected  behavior\r\n\r\nPreviously, when using preview builds of .NET Core 3, and also what I would normally expect, the `.deps.json` file that is produced on build pointed to reference directories such as \"lib/**netstandard2.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\nIf I check in the packages repository on my drive, there are subdirectories for both `netstandard2.0` and `netcoreapp3.0`.  Since these extensions are just .dll libraries, and not full apps, I would expect the dependencies to be referenced using netstandard rather than netcoreapp.  If there are dependencies on anything that is netstandard2.1 dependent (corresponding to netcoreapp3.0), I would expect a netstandard2.1 subdirectory to be used instead.\r\n\r\nThis introduces uncertainty regarding usage and accessibility of dependency files, since some other packages still point to `netstandard2.0` directories.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10487589908","Type":"PullRequestEvent","CreatedAt":"2019-09-24T23:11:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12700","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12700) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190919.1\r\n- **Date Produced**: 9/24/2019 10:10 PM\r\n- **Commit**: 902380600200731914d936fca50b60e3e06dcb16\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19469.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10487430416","Type":"PullRequestEvent","CreatedAt":"2019-09-24T22:36:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12700","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12700) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190919.1\r\n- **Date Produced**: 9/24/2019 10:10 PM\r\n- **Commit**: 902380600200731914d936fca50b60e3e06dcb16\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19469.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10482774078","Type":"PullRequestEvent","CreatedAt":"2019-09-24T12:59:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1570","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1570) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/23/2019 10:04 PM\r\n- **Commit**: 485441f79ead7878af206a6af61a300e1458616a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10482708227","Type":"PullRequestEvent","CreatedAt":"2019-09-24T12:58:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1570","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1570) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/23/2019 10:04 PM\r\n- **Commit**: 485441f79ead7878af206a6af61a300e1458616a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10482137085","Type":"IssuesEvent","CreatedAt":"2019-09-24T11:15:45","Actor":"GammaFour","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1569","RelatedDescription":"Opened issue \"Massive problems with no support of UWP in .NET Standard 2.1\" (#1569) at dotnet/standard","RelatedBody":"How can you release .NET Standard 2.1 and not support UWP. I made the mistake of upgrading my NuGet packages yesterday to the recommended versions and I've been untangling this mess ever since. My server code wants to be .NET Standard 2.1. So I go through and retarget all my common libraries only to find that I've screwed the pooch on my UWP client. This is seriously a big miss."},{"Id":"10481296189","Type":"IssuesEvent","CreatedAt":"2019-09-24T09:24:12","Actor":"nikolay-dimitrov","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1568","RelatedDescription":"Opened issue \"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found\" (#1568) at dotnet/standard","RelatedBody":"I have custom method over DbContext(EF 6.3) with class library targeting .NET Framework 4.7.1\r\nIm trying to migrate to .NET Standart 2.1 but into the both cases i got this error when im calling the method above from any places(the example is calling from .NET Standart 2.1 library with installed EF 6.3)\r\n\r\n    public static async Task<IList<T>> SqlQueryAsync<T>(this DbContext db, CommandType type, string sql, List<SqlParameter> parameters) where T : new()\r\n        {\r\n            var conn = db.Database.Connection.State;\r\n\r\n            if (conn == ConnectionState.Closed)\r\n                await db.Database.Connection.OpenAsync();\r\n            using (var command =  db.Database.Connection.CreateCommand())\r\n            {\r\n                command.CommandText = sql;\r\n                command.CommandType = type;\r\n                if (parameters != null && parameters.Count() > 0)\r\n                {\r\n                    foreach (var item in parameters)\r\n                    {\r\n                        DbParameter p = command.CreateParameter();\r\n                        p.DbType = item.DbType;\r\n                        p.ParameterName = item.ParameterName;\r\n                        p.Value = item.Value;\r\n                        command.Parameters.Add(p);\r\n                    }\r\n                }\r\n                var propts = typeof(T).GetProperties();\r\n                var rtnList = new List<T>();\r\n                T model;\r\n                object val;\r\n                using (var reader = await command.ExecuteReaderAsync())\r\n                {\r\n                    while (await reader.ReadAsync())\r\n                    {\r\n                        model = new T();\r\n                        foreach (var l in propts)\r\n                        {\r\n\r\n                            if (Enumerable.Range(0, reader.FieldCount).Any(i => string.Equals(reader.GetName(i), l.Name, StringComparison.OrdinalIgnoreCase)))\r\n                            {\r\n                                val = reader[l.Name];\r\n                                if (val == DBNull.Value)\r\n                                    l.SetValue(model, null);\r\n                                else\r\n                                    l.SetValue(model, val);\r\n                            }\r\n                            \r\n                        }\r\n                        rtnList.Add(model);\r\n                    }\r\n                }\r\n                return rtnList;\r\n            }\r\n        }\r\n\r\nI found simular issue https://github.com/dotnet/corefx/issues/27247# but the proposals there do not resolve the error"},{"Id":"10480529588","Type":"IssuesEvent","CreatedAt":"2019-09-24T07:46:11","Actor":"YZahringer","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1567","RelatedDescription":"Opened issue \".NET Standard 2.1 support on Universal Windows Platform\" (#1567) at dotnet/standard","RelatedBody":"Regarding the support of `.NET Standard 2.1` in UWP projects, it is written that it will be supported in the upcoming version.\r\n\r\nThis means that there will be the same problem as with the `.NET Standard 2.0` version and that we will not be able to target older versions of Windows 10? `.NET Standard 2.0` requires as min target version Windows 10 Fall Creators Update `16299`.\r\n\r\nThis is a big problem for my projects and backward compatibility. I can't remove support for older versions of Windows 10, especially `LTSC` editions. This means that my projects are blocked in `.NET Standard 1.4` and it also blocks any dependency updates:\r\n- `Xamarin.Forms 2.5` because version `>=3.0` requires `.NET Standard 2.0`\r\n- `Microsoft.EntityFrameworkCore 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n- `.NET Core 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n\r\nI can't ask my users to have the latest version installed, especially in business applications and Windows `LTSC` editions. I have to wait several years before removing the support of an old version.\r\n\r\nIs it planned to continue support the min target version `16299` of UWP projects with `.NET Standard 2.1`? I understand the constraints, but with Xcode I can still min target `iOS 7` and with Android I can still min target `4.4 KitKat`, still with the latest version of frameworks. And with Windows I can only support the latest version? That doesn't make much sense."},{"Id":"10479591821","Type":"IssuesEvent","CreatedAt":"2019-09-24T04:51:49","Actor":"shyamutty","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Closed issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566) at dotnet/standard","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n"},{"Id":"10479585734","Type":"IssuesEvent","CreatedAt":"2019-09-24T04:50:15","Actor":"shyamutty","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Opened issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566) at dotnet/standard","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n"},{"Id":"10479114837","Type":"IssuesEvent","CreatedAt":"2019-09-24T02:51:23","Actor":"goldmannyc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1565","RelatedDescription":"Opened issue \"Where to download the netstandard.dll 2.1?\" (#1565) at dotnet/standard","RelatedBody":""},{"Id":"10477225494","Type":"PullRequestEvent","CreatedAt":"2019-09-23T20:25:01","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Merged pull request \"Ns21 summary\" (#1564) at dotnet/standard","RelatedBody":""},{"Id":"10477224561","Type":"PullRequestEvent","CreatedAt":"2019-09-23T20:24:53","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Opened pull request \"Ns21 summary\" (#1564) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10488698810","Type":"PullRequestEvent","CreatedAt":"2019-09-25T03:50:25","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41303","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#41303) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams"},{"Id":"10488538206","Type":"PullRequestEvent","CreatedAt":"2019-09-25T03:09:31","Actor":"benaadams","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41306","RelatedDescription":"Opened pull request \"Add CollectionsMarshal ref assemblies\" (#41306) at dotnet/corefx","RelatedBody":"Resolves dotnet/corefx#31597\r\n\r\n/cc @tannergooding @ahsonkhan "},{"Id":"10488500820","Type":"IssuesEvent","CreatedAt":"2019-09-25T03:00:11","Actor":"Milkitic","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41305","RelatedDescription":"Opened issue \"System.Text.Json interface member deserialization handling\" (#41305) at dotnet/corefx","RelatedBody":"For some reasons that Json for configuration use, I did a test on how the System.Text.Json handles the interface deserialization. I read the API and can't find anything about this function. First I tried `IEnumerable<T>`. Here is the code:\r\n``` csharp\r\nusing System.Collections.Generic;\r\nusing System.Text.Json;\r\n\r\nnamespace dotnet30test\r\n{\r\n    class Program2\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var obj = new TestSerializationObj2\r\n            {\r\n                Names = new HashSet<string> { \"1\", \"2\" }\r\n            };\r\n            var sysContent = JsonSerializer.Serialize(obj, new JsonSerializerOptions { WriteIndented = true, });\r\n            var sysNewObj = JsonSerializer.Deserialize<TestSerializationObj>(sysContent);\r\n        }\r\n    }\r\n\r\n    public class TestSerializationObj2\r\n    {\r\n        public IEnumerable<string> Names { get; set; }\r\n    }\r\n}\r\n```\r\nThe `Names` property is forced to convert from `Hashset<string>` to `List<string>`, but it works successfully indeedly. \r\nAnd then I try the custom interface, it throws `JsonException`. What I think that needed is something like Json.NET's auto type name handling. Here is the code:\r\n``` csharp\r\nusing System;\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing NewtonJson = Newtonsoft.Json;\r\nusing SysJson = System.Text.Json;\r\n\r\nnamespace dotnet30test\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var obj = new TestSerializationObj\r\n            {\r\n                CustomObj = new DefaultCustom()\r\n            };\r\n\r\n            var newtonContent = NewtonJson.JsonConvert.SerializeObject(obj,\r\n                new NewtonJson.JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = NewtonJson.TypeNameHandling.Auto,\r\n                    Formatting = NewtonJson.Formatting.Indented\r\n                });\r\n            var newtonNewObj = NewtonJson.JsonConvert.DeserializeObject<TestSerializationObj>(newtonContent,\r\n                new NewtonJson.JsonSerializerSettings { TypeNameHandling = NewtonJson.TypeNameHandling.Auto }); // works\r\n\r\n            var sysContent = SysJson.JsonSerializer.Serialize(obj, new SysJson.JsonSerializerOptions { WriteIndented = true, });\r\n            var sysNewObj = SysJson.JsonSerializer.Deserialize<TestSerializationObj>(sysContent); // throws exception\r\n        }\r\n    }\r\n\r\n\r\n    public sealed class TestSerializationObj\r\n    {\r\n        public Dictionary<string, int> Dictionary { get; set; } = new Dictionary<string, int>() { [\"a\"] = 0, [\"b\"] = 1 };\r\n        public ICustom CustomObj { get; set; }\r\n    }\r\n\r\n    public class DefaultCustom : ICustom\r\n    {\r\n        public string Name { get; set; } = \"Default Implementation\";\r\n        public int Id { get; set; } = 300;\r\n    }\r\n\r\n    public interface ICustom\r\n    {\r\n        int Id { get; set; }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThanks!"},{"Id":"10488387255","Type":"IssuesEvent","CreatedAt":"2019-09-25T02:32:19","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41304","RelatedDescription":"Closed issue \"In async the System.Text.Json throw \"The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. LineNumber: 0 | BytePositionInLine: 0.\"\" (#41304) at dotnet/corefx","RelatedBody":"The code like this:\r\n```Charp\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        try\r\n        {\r\n            var type = typeof(TestModel);\r\n            var testModel = new TestModel {Id = Guid.NewGuid(), Name = \"Test\"};\r\n\r\n            await using var ms = new MemoryStream();\r\n            await JsonSerializer.SerializeAsync(ms, testModel, type);\r\n            var result = await JsonSerializer.DeserializeAsync(ms, type);\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            Console.WriteLine(e);\r\n            throw;\r\n        }\r\n    }\r\n}\r\n\r\npublic class TestModel\r\n{\r\n    public Guid Id { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10489017474","Type":"PullRequestEvent","CreatedAt":"2019-09-25T05:14:19","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38839","RelatedDescription":"Merged pull request \"Update required version of VS in Building doc\" (#38839) at dotnet/roslyn","RelatedBody":"Now that we've merged 16.3-vs-deps back, we should update the required version of VS."},{"Id":"10488727721","Type":"IssuesEvent","CreatedAt":"2019-09-25T03:57:54","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37531","RelatedDescription":"Closed issue \"Replace Target-Typed Completion Icon\" (#37531) at dotnet/roslyn","RelatedBody":"See the instructions at `<server>\\public\\davip\\TargetTypedCompletion\\IconInstructions`"},{"Id":"10488727653","Type":"PullRequestEvent","CreatedAt":"2019-09-25T03:57:53","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38831","RelatedDescription":"Merged pull request \"Change icon for target type completion filter\" (#38831) at dotnet/roslyn","RelatedBody":"Fix #37531 \r\n\r\n![image](https://user-images.githubusercontent.com/788783/65548648-ae478f80-ded0-11e9-90b9-083cd4792087.png)\r\n"},{"Id":"10488720295","Type":"PullRequestEvent","CreatedAt":"2019-09-25T03:55:53","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38834","RelatedDescription":"Merged pull request \"Merge dev16.4 preview1-vs-deps into dev16.4 preview1\" (#38834) at dotnet/roslyn","RelatedBody":"Per @jaredpar, our policy for codeflow is the following:\r\n\t\r\n1. Developers should always be able to build master in dotnet/roslyn with a publicly available version of VS. \r\n2. The version of VS should preferably be an RTM one but can be a preview if circumstances warrant it.\r\n\r\nNow that 16.4 Preview 1 is out, I'd like to get vs-deps flows back so all our changes related to completion are all in the same branch, which will make it easier for us to make further code change in this area.\r\n\r\n@dotnet/roslyn-infrastructure Please let me know if it's OK to do this, otherwise I will probably need to cherry pick those changes manually."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10485089955","Type":"PullRequestEvent","CreatedAt":"2019-09-24T16:58:39","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7797) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10478497423","Type":"IssuesEvent","CreatedAt":"2019-09-24T00:16:59","Actor":"Unreal-System","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795) at dotnet/corert","RelatedBody":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds."},{"Id":"10469447456","Type":"IssuesEvent","CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Opened issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796) at dotnet/corert","RelatedBody":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]"},{"Id":"10456718650","Type":"IssuesEvent","CreatedAt":"2019-09-20T02:21:36","Actor":"Unreal-System","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Opened issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795) at dotnet/corert","RelatedBody":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds."},{"Id":"10433855669","Type":"PullRequestEvent","CreatedAt":"2019-09-17T14:13:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#7794) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10432892147","Type":"PullRequestEvent","CreatedAt":"2019-09-17T12:22:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7794) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10430907028","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:56:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5899","RelatedDescription":"Closed issue \"Corrupted Guid stored to database (using Entity framework) via LINQ to SQL with .NET native toolchain\" (#5899) at dotnet/corert","RelatedBody":"Recently we've found an issue when Guid stored to database (we're using Entity Framework, and LINQ to SQL) become corrupted in the our UWP application built in Release mode (i.e. with the .NET Native toolchain). It looks like some pointer corruption 'cause value stored in database has a part of original Guid, for example, original guid visible via debugging in release mode:\r\nD4E4301C**A88EEE4A8591699604370085**\r\nStored value: **A88EEE4A8591699604370085**00000000\r\n\r\nOne more time, without .NET native toolchain everything is working as expected, it's happened in Release mode only!\r\n\r\nWe've found a temporarily workaround, changing Guid to string, but will be good if you can fix this bug ASAP!"},{"Id":"10430904163","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:56:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6685","RelatedDescription":"Closed issue \"Ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are properly handled with regards to struct packing/layout\" (#6685) at dotnet/corert","RelatedBody":"The `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are special and are directly mapped as the primitive ABI types (typically referred to as `__m64`, `__m128`, and `__m256`). ProjectN should ensure that these types are appropriately handled before they ship so that types are laid out appropriately in memory and so that it does not become a breaking change to fix them in the future.\r\n\r\nCoreCLR is already correctly handling these types in the VM layer: https://github.com/dotnet/coreclr/blob/master/src/vm/methodtablebuilder.cpp#L9521"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10487773868","Type":"IssuesEvent","CreatedAt":"2019-09-24T23:55:43","Actor":"fugaku","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3667","RelatedDescription":"Closed issue \"Error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3667) at dotnet/sdk","RelatedBody":"I'm trying to upgrade my library project from .net core 2.2 to .net core 3.0 using below setup for the `.csproj`\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"LibLog\" Version=\"5.0.6\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.2.6\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n    <PackageReference Include=\"System.Runtime.Loader\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nI have this dotnet sdk versions installed\r\n```\r\n.NET Core SDK (reflecting any global.json):                                                                                                                                                    Version:   3.0.100                                                                                                                                                                            Commit:    04339c3a26                                                                                                                                                                                                                                                                                                                                                                      Runtime Environment:                                                                                                                                                                           OS Name:     Windows                                                                                                                                                                          OS Version:  10.0.18362                                                                                                                                                                       OS Platform: Windows                                                                                                                                                                          RID:         win10-x64                                                                                                                                                                        Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\                                                                                                                                                                                                                                                                                                                                          Host (useful for support):                                                                                                                                                                      Version: 3.0.0                                                                                                                                                                                Commit:  7d57652f33                                                                                                                                                                                                                                                                                                                                                                       .NET Core SDKs installed:                                                                                                                                                                       2.1.200 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.302 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.503 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.504 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.505 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.507 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.602 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]Modules\\CustomsInventory.Modules>\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\nBuilding the project gives me the error \r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(263,5): error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n```\r\n\r\nIs there any documentation regarding referencing Microsoft.AspNetCore.* libraries from a netstandard projects ?"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"498007366","IsPullRequest":true,"CreatedAt":"2019-09-25T02:07:04","Actor":"sandreenko","Number":"26876","RawContent":null,"Title":"[WIP] test PR","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26876","RelatedDescription":"Open PR \"[WIP] test PR\" (#26876)"},{"Id":"497920444","IsPullRequest":true,"CreatedAt":"2019-09-25T01:54:59","Actor":"davidwrighton","Number":"26868","RawContent":null,"Title":"Mergefrommaster","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26868","RelatedDescription":"Closed or merged PR \"Mergefrommaster\" (#26868)"},{"Id":"498000721","IsPullRequest":true,"CreatedAt":"2019-09-25T01:36:07","Actor":"Anipik","Number":"26875","RawContent":null,"Title":"update branding for servicing","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26875","RelatedDescription":"Open PR \"update branding for servicing\" (#26875)"},{"Id":"497999670","IsPullRequest":false,"CreatedAt":"2019-09-25T01:31:03","Actor":"sdmaclea","Number":"26874","RawContent":null,"Title":"Linux build.sh failing with segmentation fault in crossgen using COMPlus_LogEnable","State":"open","Body":"Linux amd64 build failing with `COMPlus_LogEnable=1`...\r\n\r\nUbuntu 16.04\r\n```bash\r\nexport COMPlus_LogLevel=10\r\nexport COMPlus_LogEnable=1\r\nexport COMPlus_LogFacility=ffffffff\r\nexport COMPlus_LogFile=/home/stmaclea/mdbg.log\r\nexport COMPlus_LogToFile=1\r\nbuild.sh\r\n```\r\n```\r\nGenerating native image of System.Private.CoreLib.dll for Linux.x64.Debug. Logging to \"/home/stmaclea/git/coreclr/bin/Logs/CrossgenCoreLib_Linux.x64.Debug.log\".\r\n/home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/crossgen /Platform_Assemblies_Paths /home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/IL  /out /home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/System.Private.CoreLib.dll /home/stmaclea/git/coreclr/bin/Product/Linux.x64.Debug/IL/System.Private.CoreLib.dll\r\n./build.sh: line 363: 29032 Segmentation fault      (core dumped)\r\n```\r\n\r\n```\r\n(gdb) bt\r\n#0  0x0000555555accce4 in _output_s (stream=0x7fffffff74b8, format=0x555555af19fc \": offset %d (normalized %d), size %d not at natural alignment; not enregistering struct\\n\", arg\r\nptr=0x7fffffff77a0) at /home/stmaclea/git/coreclr/src/pal/src/safecrt/output.inl:993\r\n#1  0x0000555555a76622 in _vsnprintf_helper (outfn=0x555555acbef0 <_output_s(miniFILE_struct*, char const*, __va_list_tag*)>, string=0x555555f0302a <LogSpewAlwaysValist(char cons\r\nt*, __va_list_tag*)::rgchBuffer+10> \"     xxxx Field 4 ulo64LE: offset 0 (normalized 0), size 8, union with uniqueOffsetField 0, field type classification Integer, reclassified f\r\nield to Integer\\n\", count=990, format=0x555555af19e4 \"     %*sxxxx Field %d %s: offset %d (normalized %d), size %d not at natural alignment; not enregistering struct\\n\", ap=0x7ff\r\nfffff77a0) at /home/stmaclea/git/coreclr/src/pal/src/safecrt/vsprintf.cpp:104\r\n#2  0x0000555555a769de in _vsnprintf_s (string=0x555555f0302a <LogSpewAlwaysValist(char const*, __va_list_tag*)::rgchBuffer+10> \"     xxxx Field 4 ulo64LE: offset 0 (normalized 0\r\n), size 8, union with uniqueOffsetField 0, field type classification Integer, reclassified field to Integer\\n\", sizeInBytes=990, count=18446744073709551615, format=0x555555af19e4\r\n \"     %*sxxxx Field %d %s: offset %d (normalized %d), size %d not at natural alignment; not enregistering struct\\n\", ap=0x7fffffff77a0) at /home/stmaclea/git/coreclr/src/pal/src\r\n/safecrt/vsprintf.cpp:191\r\n#3  0x00005555559a6ef4 in LogSpewAlwaysValist (fmt=0x555555af19e4 \"     %*sxxxx Field %d %s: offset %d (normalized %d), size %d not at natural alignment; not enregistering struct\r\n\\n\", args=0x7fffffff77a0) at /home/stmaclea/git/coreclr/src/utilcode/log.cpp:328\r\n#4  0x00005555559a6e14 in LogSpewValist (facility=8, level=10, fmt=0x555555af19e4 \"     %*sxxxx Field %d %s: offset %d (normalized %d), size %d not at natural alignment; not enre\r\ngistering struct\\n\", args=0x7fffffff77a0) at /home/stmaclea/git/coreclr/src/utilcode/log.cpp:270\r\n#5  0x00005555559a6a4e in LogSpew (facility=8, level=10, fmt=0x555555af19e4 \"     %*sxxxx Field %d %s: offset %d (normalized %d), size %d not at natural alignment; not enregister\r\ning struct\\n\") at /home/stmaclea/git/coreclr/src/utilcode/log.cpp:399\r\n```\r\nCalled by this macro invocation:\r\nhttps://github.com/dotnet/coreclr/blob/d0b65d12cc9d692b2f78062fa9621a120470afbd/src/vm/methodtable.cpp#L2443-L2444\r\n\r\nThe var arg arguments are incorrect.","Url":"https://github.com/dotnet/coreclr/issues/26874","RelatedDescription":"Open issue \"Linux build.sh failing with segmentation fault in crossgen using COMPlus_LogEnable\" (#26874)"},{"Id":"497477689","IsPullRequest":true,"CreatedAt":"2019-09-25T01:00:32","Actor":"franksinankaya","Number":"26853","RawContent":null,"Title":"Replace gtLclNum with GetLclNum()","State":"closed","Body":"@am11  @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/26853","RelatedDescription":"Closed or merged PR \"Replace gtLclNum with GetLclNum()\" (#26853)"},{"Id":"497989329","IsPullRequest":false,"CreatedAt":"2019-09-25T00:44:16","Actor":"303248153","Number":"26873","RawContent":null,"Title":".NET Core 3.0 RTM Freeze on Ubuntu 16.04","State":"open","Body":"Today I installed .NET Core 3.0 RTM (3.0.100) on my ubuntu 16.04.6 x86-64 vps, when I trying to build a hello world console project, the dotnet process with following arguments freeze:\r\n\r\n``` text\r\ndotnet exec /usr/share/dotnet/sdk/3.0.100/MSBuild.dll -maxcpucount -verbosity:m -nologo -target:Restore -verbosity:diag -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/usr/share/dotnet/sdk/3.0.100/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/usr/share/dotnet/sdk/3.0.100/dotnet.dll\r\n```\r\n\r\nThe previous version (.NET Core 2.2) doesn't have this issue.\r\n\r\nThen I trying to build coreclr from source to find why it happends.\r\nI clone coreclr repository, checkout release/3.1 branch, then run build.sh, and it freeze again.\r\nThe command line:\r\n\r\n``` text\r\n/home/ubuntu/tmp/coreclr/.dotnet/dotnet msbuild /home/ubuntu/tmp/coreclr/src/.nuget/optdata/optdata.csproj /t:DumpPgoDataPackageVersion /p:__BuildArch=x64 /p:__BuildType=Debug /p:__BuildOS=Linux /nodeReuse:false /p:RestoreDuringBuild=true /p:PgoDataPackageVersionOutputFile=/home/ubuntu/tmp/coreclr/bin/obj/Linux.x64.Debug/optdataversion.txt /nologo\r\n```\r\n\r\nI attach the process with gdb and run `thread apply all bt`, here is the output messages, looks like .NET Core 3.0 have some deadlock bug on ubuntu 16.04, both RTM and preview 7.\r\n\r\n``` text\r\nThread 19 (Thread 0x7f1ed5ea0700 (LWP 12863)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45a8422 in CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed4200435 in CrstBase::Enter() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed4349e47 in ThreadSuspend::LockThreadStore(ThreadSuspend::SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed42796cb in ThreadStore::AddThread(Thread*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed42797c2 in SetupUnstartedThread(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed429e020 in ThreadpoolMgr::CreateUnimpersonatedThread(unsigned int (*)(void*), void*, int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed429d000 in ThreadpoolMgr::MaybeAddWorkingWorker() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed42a07dd in ThreadpoolMgr::GateThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1ed5ea0700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 18 (Thread 0x7f1d8a1fa700 (LWP 12856)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed446da9d in WKS::gc_heap::wait_for_gc_done(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44a1311 in WKS::GCHeap::WaitUntilGCComplete(bool) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed429e567 in ThreadpoolMgr::WorkerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1d8a1fa700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 17 (Thread 0x7f1d8abfb700 (LWP 12847)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed42798e6 in Thread::OnThreadTerminate(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed429e8e3 in ThreadpoolMgr::WorkerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1d8abfb700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 16 (Thread 0x7f1d8b5fc700 (LWP 12845)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed446da9d in WKS::gc_heap::wait_for_gc_done(int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44a1311 in WKS::GCHeap::WaitUntilGCComplete(bool) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed429e567 in ThreadpoolMgr::WorkerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed5be26ba in start_thread (arg=0x7f1d8b5fc700) at pthread_create.c:333\r\n#11 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 15 (Thread 0x7f1d8bffd700 (LWP 12841)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed427ca04 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1e5aa7942d in ?? ()\r\n#9  0x00007f1d8bffcc40 in ?? ()\r\n#10 0x00007f1d8c1bc8a8 in ?? ()\r\n#11 0x00007f1d8c1d20b8 in ?? ()\r\n#12 0x00007f1d00000001 in ?? ()\r\n#13 0x00007f1d8c1d20a0 in ?? ()\r\n#14 0x00007f1d8c1bc8a8 in ?? ()\r\n#15 0x00007f1d8bffcc90 in ?? ()\r\n#16 0x00007f1e5aa79314 in ?? ()\r\n#17 0x00007f1d8c1d20a0 in ?? ()\r\n#18 0x00007f1d8c1bc8a8 in ?? ()\r\n#19 0x00007f1d8bffcce0 in ?? ()\r\n#20 0x00007f1e5aa82ebf in ?? ()\r\n#21 0x00007f1d8bffcca0 in ?? ()\r\n#22 0x00007f1d8c1bc888 in ?? ()\r\n#23 0x00007f1d8c1bc858 in ?? ()\r\n#24 0x0000000200000000 in ?? ()\r\n#25 0x0000000200000002 in ?? ()\r\n#26 0x00000000ffffffff in ?? ()\r\n#27 0x00007f1d8c1bc858 in ?? ()\r\n#28 0x0000000000000009 in ?? ()\r\n#29 0x00007f1d8bffcd70 in ?? ()\r\n#30 0x00007f1e5aa81e80 in ?? ()\r\n#31 0xa1a168411a874f10 in ?? ()\r\n#32 0x1318fdefacd62aa6 in ?? ()\r\n#33 0x97fce06f1e159f73 in ?? ()\r\n#34 0xa4460fe33eb93df9 in ?? ()\r\n#35 0x46000000ac000000 in ?? ()\r\n#36 0x00007f1d8c1bc858 in ?? ()\r\n#37 0x00000000ffffffff in ?? ()\r\n#38 0x0000000000000000 in ?? ()\r\n\r\nThread 14 (Thread 0x7f1e59140700 (LWP 12840)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed427cc85 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1e5aa7942d in ?? ()\r\n#11 0x00007f1e5913f6e0 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\nThread 13 (Thread 0x7f1e59b41700 (LWP 12839)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed427cc85 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1e5aa7942d in ?? ()\r\n#11 0x00007f1e59b406d0 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\nThread 12 (Thread 0x7f1ebd0c1700 (LWP 12837)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434af73 in ThreadSuspend::SuspendRuntime(ThreadSuspend::SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed434c60e in ThreadSuspend::SuspendEE(ThreadSuspend::SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed44a2e53 in GCToEEInterface::SuspendEE(SUSPEND_REASON) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44793b8 in WKS::GCHeap::GarbageCollectGeneration(unsigned int, gc_reason) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed447b440 in WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, unsigned int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#11 0x00007f1ed449d080 in WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#12 0x00007f1ed42de450 in AllocateSzArray(MethodTable*, int, GC_ALLOC_FLAGS, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#13 0x00007f1ed42ebc8b in JIT_NewArr1(CORINFO_CLASS_STRUCT_*, long) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#14 0x00007f1e5bfd8819 in ?? ()\r\n#15 0x0000000000001000 in ?? ()\r\n#16 0x00007f1d8c3f5860 in ?? ()\r\n#17 0x0000000000000000 in ?? ()\r\n\r\nThread 11 (Thread 0x7f1ebdac2700 (LWP 12836)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1759 in WaitForSingleObjectEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed4346d74 in CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed434a11b in Thread::RareDisablePreemptiveGC() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed427cc85 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1e5aa7942d in ?? ()\r\n#11 0x00007f1ebdac16d0 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\nThread 10 (Thread 0x7f1ebed8f700 (LWP 12834)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b1c89 in SleepEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed42e233a in __SwitchToThread(unsigned int, unsigned int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed429dd35 in ThreadpoolMgr::GetRecycledMemory(ThreadpoolMgr::MemType) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed43fcdd2 in DelegateInfo::MakeDelegateInfo(Object**, Object**, Object**) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed43fe2ea in ThreadPoolNative::CorRegisterWaitForSingleObject(Object*, Object*, unsigned int, bool, Object*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1e5aa7711a in ?? ()\r\n#9  0x00007f1d8c1c2ca0 in ?? ()\r\n#10 0x00007f1d8c1c2d20 in ?? ()\r\n#11 0x00007f1d8c1c2ce0 in ?? ()\r\n#12 0x00007f1d8c1c2ce0 in ?? ()\r\n#13 0x0000000100000001 in ?? ()\r\n#14 0x00007f1d8c1c2ca0 in ?? ()\r\n#15 0x00007f1d8c1c2c20 in ?? ()\r\n#16 0x00007f1d8c1c2c68 in ?? ()\r\n#17 0x00007f1d8c1c2c88 in ?? ()\r\n#18 0x000000000000322a in ?? ()\r\n#19 0x00007f1ebed8e380 in ?? ()\r\n#20 0x00007f1e5aa773ee in ?? ()\r\n#21 0x00007f1d8c1c2ca0 in ?? ()\r\n#22 0x00007f1d8c1c2c88 in ?? ()\r\n#23 0x00007f1ebed8e3c0 in ?? ()\r\n#24 0x00007f1e5b945064 in ?? ()\r\n#25 0x00007f1ebed8e390 in ?? ()\r\n#26 0x00007f1d8c1bc2c8 in ?? ()\r\n#27 0x00007f1d8c1bc2c8 in ?? ()\r\n#28 0x00007f1d00000001 in ?? ()\r\n#29 0x00000000000002c0 in ?? ()\r\n#30 0x00007f1d8c1c2a90 in ?? ()\r\n#31 0x00007f1ebed8e4e0 in ?? ()\r\n#32 0x00007f1e5b93dfce in ?? ()\r\n#33 0x0000000000000001 in ?? ()\r\n#34 0x0000000000000000 in ?? ()\r\n\r\nThread 9 (Thread 0x7f1ed5ee9700 (LWP 12833)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b1c89 in SleepEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed42a0f8d in ThreadpoolMgr::TimerThreadFire() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed42a0e55 in ThreadpoolMgr::TimerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed5ee9700) at pthread_create.c:333\r\n#8  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 8 (Thread 0x7f1ec1a3d700 (LWP 12832)):\r\n#0  0x00007f1ed5beb76d in accept () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f1ed44dffdd in IpcStream::DiagnosticsIpc::Accept(void (*)(char const*, unsigned int)) const ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed42c47c0 in DiagnosticsServerThread(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed5be26ba in start_thread (arg=0x7f1ec1a3d700) at pthread_create.c:333\r\n#5  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 7 (Thread 0x7f1ec243e700 (LWP 12831)):\r\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n#1  0x00007f1ed45ad2ab in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed42dcc4e in FinalizerThread::WaitForFinalizerEvent(CLREvent*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed42dcd62 in FinalizerThread::FinalizerThreadWorker(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed4280225 in ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed42808dd in ManagedThreadBase::FinalizerBase(void (*)(void*)) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed42dcf9c in FinalizerThread::FinalizerThreadStart(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#10 0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#11 0x00007f1ed5be26ba in start_thread (arg=0x7f1ec243e700) at pthread_create.c:333\r\n#12 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 6 (Thread 0x7f1e5a546700 (LWP 12830)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed44d71a6 in DebuggerRCThread::MainLoop() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed44d704b in DebuggerRCThread::ThreadProc() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44d6d69 in DebuggerRCThread::ThreadProcStatic(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#9  0x00007f1ed5be26ba in start_thread (arg=0x7f1e5a546700) at pthread_create.c:333\r\n#10 0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 5 (Thread 0x7f1ed1403700 (LWP 12829)):\r\n#0  0x00007f1ed5bebc7d in open64 () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f1ed44e024f in TwoWayPipe::WaitForConnection() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed44d9af2 in DbgTransportSession::TransportWorker() () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed44d8a09 in DbgTransportSession::TransportWorkerStatic(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed1403700) at pthread_create.c:333\r\n#6  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 4 (Thread 0x7f1ed200f700 (LWP 12828)):\r\n#0  0x00007f1ed4e6774d in poll () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f1ed45af30e in CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(int, unsigned char*, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45aeee8 in CorUnix::CPalSynchronizationManager::ReadCmdFromProcessPipe(int, CorUnix::CPalSynchronizationManager::SynchWorkerCmd*, void**, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45aeb64 in CorUnix::CPalSynchronizationManager::WorkerThread(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b743d in CorUnix::CPalThread::ThreadEntry(void*) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed200f700) at pthread_create.c:333\r\n#6  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 3 (Thread 0x7f1ed2a10700 (LWP 12827)):\r\n#0  syscall () at ../sysdeps/unix/sysv/linux/x86_64/syscall.S:38\r\n#1  0x00007f1ed3a5287c in ?? () from /usr/lib/x86_64-linux-gnu/liblttng-ust.so.0\r\n#2  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed2a10700) at pthread_create.c:333\r\n#3  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 2 (Thread 0x7f1ed3411700 (LWP 12826)):\r\n#0  syscall () at ../sysdeps/unix/sysv/linux/x86_64/syscall.S:38\r\n#1  0x00007f1ed3a5287c in ?? () from /usr/lib/x86_64-linux-gnu/liblttng-ust.so.0\r\n#2  0x00007f1ed5be26ba in start_thread (arg=0x7f1ed3411700) at pthread_create.c:333\r\n#3  0x00007f1ed4e7341d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 1 (Thread 0x7f1ed600e740 (LWP 12825)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f1ed45ad2b5 in CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#2  0x00007f1ed45acec4 in CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#3  0x00007f1ed45b14be in CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#4  0x00007f1ed45b1831 in WaitForMultipleObjectsEx () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#5  0x00007f1ed427ca04 in Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#6  0x00007f1ed4277ef9 in Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) ()\r\n   from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#7  0x00007f1ed44000dc in WaitHandleNative::CorWaitOneNative(void*, int) () from /home/ubuntu/tmp/coreclr/.dotnet/shared/Microsoft.NETCore.App/3.0.0-preview7-27912-14/libcoreclr.so\r\n#8  0x00007f1e5aa7942d in ?? ()\r\n#9  0x00007ffec2b34b90 in ?? ()\r\n#10 0x00007f1d8c213740 in ?? ()\r\n#11 0x00007f1d8c213758 in ?? ()\r\n#12 0x00007f1d00000001 in ?? ()\r\n#13 0x00007f1d8c213740 in ?? ()\r\n#14 0x00007f1d8c1bc8a8 in ?? ()\r\n#15 0x00007ffec2b34be0 in ?? ()\r\n#16 0x00007f1e5aa79314 in ?? ()\r\n#17 0x00007f1d8c213740 in ?? ()\r\n#18 0x00007f1d8c1bc8a8 in ?? ()\r\n#19 0x00007ffec2b34c30 in ?? ()\r\n#20 0x00007f1e5aa82ebf in ?? ()\r\n#21 0x00007ffec2b34bf0 in ?? ()\r\n#22 0x00007f1d8c1bc88c in ?? ()\r\n#23 0x00007f1d8c1bc858 in ?? ()\r\n#24 0x0000000000000000 in ?? ()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26873","RelatedDescription":"Open issue \".NET Core 3.0 RTM Freeze on Ubuntu 16.04\" (#26873)"},{"Id":"497988292","IsPullRequest":true,"CreatedAt":"2019-09-25T00:39:39","Actor":"stephentoub","Number":"26872","RawContent":null,"Title":"More Corelib cleanup","State":"open","Body":"Trying out the https://www.nuget.org/packages/Roslynator.Analyzers/ package.","Url":"https://github.com/dotnet/coreclr/pull/26872","RelatedDescription":"Open PR \"More Corelib cleanup\" (#26872)"},{"Id":"497909937","IsPullRequest":true,"CreatedAt":"2019-09-25T00:24:03","Actor":"benaadams","Number":"26867","RawContent":null,"Title":"Add CollectionsMarshal","State":"closed","Body":"Resolves https://github.com/dotnet/corefx/issues/31597","Url":"https://github.com/dotnet/coreclr/pull/26867","RelatedDescription":"Closed or merged PR \"Add CollectionsMarshal\" (#26867)"},{"Id":"497933348","IsPullRequest":true,"CreatedAt":"2019-09-25T00:19:06","Actor":"chipitsine","Number":"26869","RawContent":null,"Title":"resolve several issues found by cppcheck","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26869","RelatedDescription":"Closed or merged PR \"resolve several issues found by cppcheck\" (#26869)"},{"Id":"497981593","IsPullRequest":true,"CreatedAt":"2019-09-25T00:10:48","Actor":"jkoritzinsky","Number":"26871","RawContent":null,"Title":"Initialize variant return value.","State":"open","Body":"Fixes #26139 ","Url":"https://github.com/dotnet/coreclr/pull/26871","RelatedDescription":"Open PR \"Initialize variant return value.\" (#26871)"},{"Id":"497980661","IsPullRequest":false,"CreatedAt":"2019-09-24T22:09:35","Actor":"ViktorHofer","Number":"26870","RawContent":null,"Title":"ExplicitlyCallOperator CSharp test causes Internal CLR error","State":"open","Body":"https://dev.azure.com/dnceng/public/_build/results?buildId=364862&view=ms.vss-test-web.build-test-results-tab&runId=11034910&resultId=179112&paneView=attachments\r\n\r\nConfiguration: netcoreapp-Windows_NT-Release-x86-Windows.7.Amd64.Open\r\n\r\n**A dump is available**\r\n\r\n```\r\nMicrosoft.CSharp.RuntimeBinder.Tests.BindingErrors.ExplicitlyCallOperator\r\n\r\nFatal error. Internal CLR error. (0x80131506)\r\n   at System.Runtime.CompilerServices.CallSiteBinder.GetRuleCache[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]()\r\n   at System.Runtime.CompilerServices.CallSiteOps.GetRuleCache[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Runtime.CompilerServices.CallSite`1<System.__Canon>)\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Runtime.CompilerServices.CallSite, System.__Canon)\r\n   at Microsoft.CSharp.RuntimeBinder.Tests.BindingErrors+<>c__DisplayClass23_0.<ExplicitlyCallOperator>b__0()\r\n   at Xunit.Assert.RecordException(System.Func`1<System.Object>)\r\n   at Xunit.Assert.Throws[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Func`1<System.Object>)\r\n   at Microsoft.CSharp.RuntimeBinder.Tests.BindingErrors.ExplicitlyCallOperator()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CallTestMethod(System.Object)\r\n   at Xunit.Sdk.TestInvoker`1+<>c__DisplayClass48_1+<<InvokeTestMethodAsync>b__1>d[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestInvoker`1+<>c__DisplayClass48_1+<<InvokeTestMethodAsync>b__1>d[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<<InvokeTestMethodAsync>b__1>d<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Xunit.Sdk.TestInvoker`1+<>c__DisplayClass48_1+<<InvokeTestMethodAsync>b__1>d[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<<InvokeTestMethodAsync>b__1>d<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestInvoker`1+<>c__DisplayClass48_1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].<InvokeTestMethodAsync>b__1()\r\n   at Xunit.Sdk.ExecutionTimer+<AggregateAsync>d__4.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExecutionTimer+<AggregateAsync>d__4, xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<AggregateAsync>d__4 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Xunit.Sdk.ExecutionTimer+<AggregateAsync>d__4, xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<AggregateAsync>d__4 ByRef)\r\n   at Xunit.Sdk.ExecutionTimer.AggregateAsync(System.Func`1<System.Threading.Tasks.Task>)\r\n   at Xunit.Sdk.TestInvoker`1+<>c__DisplayClass48_1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].<InvokeTestMethodAsync>b__0()\r\n   at Xunit.Sdk.ExceptionAggregator+<RunAsync>d__9.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExceptionAggregator+<RunAsync>d__9, xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__9 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Xunit.Sdk.ExceptionAggregator+<RunAsync>d__9, xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__9 ByRef)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync(System.Func`1<System.Threading.Tasks.Task>)\r\n   at Xunit.Sdk.TestInvoker`1+<InvokeTestMethodAsync>d__48[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestInvoker`1+<InvokeTestMethodAsync>d__48[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<InvokeTestMethodAsync>d__48<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Decimal, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestInvoker`1+<InvokeTestMethodAsync>d__48[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<InvokeTestMethodAsync>d__48<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].InvokeTestMethodAsync(System.Object)\r\n   at Xunit.Sdk.XunitTestInvoker.InvokeTestMethodAsync(System.Object)\r\n   at Xunit.Sdk.TestInvoker`1+<<RunAsync>b__47_0>d[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestInvoker`1+<<RunAsync>b__47_0>d[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<<RunAsync>b__47_0>d<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Decimal, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestInvoker`1+<<RunAsync>b__47_0>d[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<<RunAsync>b__47_0>d<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].<RunAsync>b__47_0()\r\n   at Xunit.Sdk.ExceptionAggregator+<RunAsync>d__10`1[[System.Decimal, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExceptionAggregator+<RunAsync>d__10`1[[System.Decimal, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__10`1<System.Decimal> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Decimal, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.ExceptionAggregator+<RunAsync>d__10`1[[System.Decimal, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__10`1<System.Decimal> ByRef)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync[[System.Decimal, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Func`1<System.Threading.Tasks.Task`1<System.Decimal>>)\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestRunner.InvokeTestMethodAsync(Xunit.Sdk.ExceptionAggregator)\r\n   at Xunit.Sdk.XunitTestRunner+<InvokeTestAsync>d__4.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.XunitTestRunner+<InvokeTestAsync>d__4, xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<InvokeTestAsync>d__4 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.XunitTestRunner+<InvokeTestAsync>d__4, xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<InvokeTestAsync>d__4 ByRef)\r\n   at Xunit.Sdk.XunitTestRunner.InvokeTestAsync(Xunit.Sdk.ExceptionAggregator)\r\n   at Xunit.Sdk.TestRunner`1+<>c__DisplayClass43_0[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].<RunAsync>b__0()\r\n   at Xunit.Sdk.ExceptionAggregator+<RunAsync>d__10`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExceptionAggregator+<RunAsync>d__10`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__10`1<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.ExceptionAggregator+<RunAsync>d__10`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__10`1<System.__Canon> ByRef)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Func`1<System.Threading.Tasks.Task`1<System.__Canon>>)\r\n   at Xunit.Sdk.TestRunner`1+<RunAsync>d__43[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestRunner`1+<RunAsync>d__43[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__43<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestRunner`1+<RunAsync>d__43[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__43<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestCaseRunner.RunTestAsync()\r\n   at Xunit.Sdk.TestCaseRunner`1+<RunAsync>d__19[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestCaseRunner`1+<RunAsync>d__19[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__19<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestCaseRunner`1+<RunAsync>d__19[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__19<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestCaseRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestCase.RunAsync(Xunit.Abstractions.IMessageSink, Xunit.Sdk.IMessageBus, System.Object[], Xunit.Sdk.ExceptionAggregator, System.Threading.CancellationTokenSource)\r\n   at Xunit.Sdk.XunitTestMethodRunner.RunTestCaseAsync(Xunit.Sdk.IXunitTestCase)\r\n   at Xunit.Sdk.TestMethodRunner`1+<RunTestCasesAsync>d__32[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestMethodRunner`1+<RunTestCasesAsync>d__32[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunTestCasesAsync>d__32<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestMethodRunner`1+<RunTestCasesAsync>d__32[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunTestCasesAsync>d__32<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestMethodRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTestCasesAsync()\r\n   at Xunit.Sdk.TestMethodRunner`1+<RunAsync>d__31[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestMethodRunner`1+<RunAsync>d__31[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__31<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestMethodRunner`1+<RunAsync>d__31[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__31<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestMethodRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod, Xunit.Abstractions.IReflectionMethodInfo, System.Collections.Generic.IEnumerable`1<Xunit.Sdk.IXunitTestCase>, System.Object[])\r\n   at Xunit.Sdk.TestClassRunner`1+<RunTestMethodsAsync>d__38[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestClassRunner`1+<RunTestMethodsAsync>d__38[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunTestMethodsAsync>d__38<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestClassRunner`1+<RunTestMethodsAsync>d__38[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunTestMethodsAsync>d__38<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestClassRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTestMethodsAsync()\r\n   at Xunit.Sdk.TestClassRunner`1+<RunAsync>d__37[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestClassRunner`1+<RunAsync>d__37[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__37<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestClassRunner`1+<RunAsync>d__37[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__37<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestClassRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestCollectionRunner.RunTestClassAsync(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable`1<Xunit.Sdk.IXunitTestCase>)\r\n   at Xunit.Sdk.TestCollectionRunner`1+<RunTestClassesAsync>d__28[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestCollectionRunner`1+<RunTestClassesAsync>d__28[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunTestClassesAsync>d__28<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestCollectionRunner`1+<RunTestClassesAsync>d__28[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunTestClassesAsync>d__28<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestCollectionRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTestClassesAsync()\r\n   at Xunit.Sdk.TestCollectionRunner`1+<RunAsync>d__27[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestCollectionRunner`1+<RunAsync>d__27[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__27<System.__Canon> ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestCollectionRunner`1+<RunAsync>d__27[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](<RunAsync>d__27<System.__Canon> ByRef)\r\n   at Xunit.Sdk.TestCollectionRunner`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestAssemblyRunner.RunTestCollectionAsync(Xunit.Sdk.IMessageBus, Xunit.Abstractions.ITestCollection, System.Collections.Generic.IEnumerable`1<Xunit.Sdk.IXunitTestCase>, System.Threading.CancellationTokenSource)\r\n   at Xunit.Sdk.XunitTestAssemblyRunner+<>c__DisplayClass14_2.<RunTestCollectionsAsync>b__2()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntry()\r\n   at System.Threading.Tasks.SynchronizationContextTaskScheduler+<>c.<.cctor>b__8_0(System.Object)\r\n   at Xunit.Sdk.MaxConcurrencySyncContext.RunOnSyncContext(System.Threading.SendOrPostCallback, System.Object)\r\n   at Xunit.Sdk.MaxConcurrencySyncContext+<>c__DisplayClass11_0.<WorkerThreadProc>b__0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at DynamicClass.lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object)\r\n   at Xunit.Sdk.ExecutionContextHelper.Run(System.Object, System.Action`1<System.Object>)\r\n   at Xunit.Sdk.MaxConcurrencySyncContext.WorkerThreadProc()\r\n   at Xunit.Sdk.XunitWorkerThread+<>c.<QueueUserWorkItem>b__5_0(System.Object)\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n----- end Tue 09/24/2019 21:34:01.14 ----- exit code -1073741819 ----------------------------------------------------------\r\n```\r\n\r\ncc @cston, @333fred, @ericstj, @stephentoub ","Url":"https://github.com/dotnet/coreclr/issues/26870","RelatedDescription":"Open issue \"ExplicitlyCallOperator CSharp test causes Internal CLR error\" (#26870)"},{"Id":"497371553","IsPullRequest":true,"CreatedAt":"2019-09-24T20:54:37","Actor":"GrabYourPitchforks","Number":"26848","RawContent":null,"Title":"Perf improvements to char.IsWhiteSpace / char.IsUpper / char.IsLower","State":"closed","Body":"This is especially noticeable in benchmarks for APIs like `ReadOnlySpan.Trim()`.\r\n\r\n|          Method | Toolchain |                input |      Mean |     Error |    StdDev |    Median | Ratio | RatioSD | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------------- |---------- |--------------------- |----------:|----------:|----------:|----------:|------:|--------:|------:|------:|------:|----------:|\r\n|            **Trim** |    **master** |                     **{empty}** |  **3.509 ns** | **0.0475 ns** | **0.0444 ns** |  **3.501 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n|            Trim |     proto |                    {empty}  |  3.423 ns | 0.0801 ns | 0.0710 ns |  3.399 ns |  0.98 |    0.03 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n|            **Trim** |    **master** |            **{spaces on both sides}** |  **9.161 ns** | **0.2052 ns** | **0.2195 ns** |  **9.091 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n|            Trim |     proto |             {spaces on both sides}  |  7.299 ns | 0.1714 ns | 0.1519 ns |  7.287 ns |  0.79 |    0.02 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n| **CountLowerChars** |    **master** | **Hello(...)able! [23]** | **55.934 ns** | **0.8882 ns** | **0.8308 ns** | **55.705 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n| CountLowerChars |     proto | Hello(...)able! [23] | 47.130 ns | 0.4410 ns | 0.4125 ns | 47.166 ns |  0.84 |    0.01 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n| CountUpperChars |    master | Hello(...)able! [23] | 61.556 ns | 0.6651 ns | 0.5554 ns | 61.641 ns |  1.00 |    0.00 |     - |     - |     - |         - |\r\n| CountUpperChars |     proto | Hello(...)able! [23] | 53.805 ns | 0.3064 ns | 0.2717 ns | 53.747 ns |  0.87 |    0.01 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n|            **Trim** |    **master** |              **abcdefg** |  **5.753 ns** | **0.0402 ns** | **0.0376 ns** |  **5.753 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n|            Trim |     proto |              abcdefg |  5.249 ns | 0.1380 ns | 0.2970 ns |  5.137 ns |  0.97 |    0.05 |     - |     - |     - |         - |\r\n\r\nBenchmark code:\r\n\r\n```cs\r\n[Benchmark]\r\n[ArgumentsSource(nameof(TrimArguments))]\r\npublic ReadOnlySpan<char> Trim(string input) => input.AsSpan().Trim();\r\n\r\n[Benchmark]\r\n[Arguments(\"Hello there, Constable!\")]\r\npublic int CountLowerChars(string input)\r\n{\r\n    int count = 0;\r\n\r\n    foreach (char ch in input)\r\n    {\r\n        if (char.IsLower(ch)) { count++; }\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\n[Benchmark]\r\n[Arguments(\"Hello there, Constable!\")]\r\npublic int CountUpperChars(string input)\r\n{\r\n    int count = 0;\r\n\r\n    foreach (char ch in input)\r\n    {\r\n        if (char.IsUpper(ch)) { count++; }\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\npublic static IEnumerable<object> TrimArguments()\r\n{\r\n    yield return \"\";\r\n    yield return \" abcdefg \";\r\n    yield return \"abcdefg\";\r\n}\r\n```\r\n\r\nThe performance should improve even further when https://github.com/dotnet/coreclr/issues/26845 is fixed.","Url":"https://github.com/dotnet/coreclr/pull/26848","RelatedDescription":"Closed or merged PR \"Perf improvements to char.IsWhiteSpace / char.IsUpper / char.IsLower\" (#26848)"},{"Id":"497896742","IsPullRequest":true,"CreatedAt":"2019-09-24T20:11:35","Actor":"jashook","Number":"26866","RawContent":null,"Title":"Disable b79250","State":"closed","Body":"This gets our outerloop testing green again.","Url":"https://github.com/dotnet/coreclr/pull/26866","RelatedDescription":"Closed or merged PR \"Disable b79250\" (#26866)"},{"Id":"497896111","IsPullRequest":false,"CreatedAt":"2019-09-24T20:11:32","Actor":"jashook","Number":"26865","RawContent":null,"Title":"JIT\\\\Regression\\\\CLR-x86-JIT\\\\V1-M12-Beta2\\\\b79250\\\\b79250\\\\b79250.cmd fails in CI","State":"closed","Body":"Looks like https://github.com/dotnet/coreclr/pull/26551 is the first commit that repros this.\r\n\r\n@briansull ","Url":"https://github.com/dotnet/coreclr/issues/26865","RelatedDescription":"Closed issue \"JIT\\\\Regression\\\\CLR-x86-JIT\\\\V1-M12-Beta2\\\\b79250\\\\b79250\\\\b79250.cmd fails in CI\" (#26865)"},{"Id":"497481865","IsPullRequest":true,"CreatedAt":"2019-09-24T19:56:43","Actor":"franksinankaya","Number":"26854","RawContent":null,"Title":"Replace genInterruptible with getInterruptible()","State":"closed","Body":"@am11  @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/26854","RelatedDescription":"Closed or merged PR \"Replace genInterruptible with getInterruptible()\" (#26854)"},{"Id":"497885431","IsPullRequest":false,"CreatedAt":"2019-09-24T19:39:12","Actor":"vitek-karas","Number":"26864","RawContent":null,"Title":"There's no way to call native library resolution on a specific AssemblyLoadContext","State":"open","Body":"Currently it's possible to create a \"chain\" of `AssemblyLoadContext` instances such that there's a `ParentALC` and `ChildALC`. `ChildALC` has a reference to `ParentALC` and every time the `ChildALC.Load` is called, if it can't resolve the assembly it falls back to parent by calling `ParentALC.LoadFromAssemblyName` (which will in turn call `ParentALC.Load` and so on).\r\n\r\nIt is not possible to do the same for native library resolution. While the child can overload `ChildALC.LoadUnmanagedDll`, there's no API it can call on the `ParentALC` to fall back to its native library resolution. There might be some workarounds using contextual reflection and `NativeLibrary` but that would be rather tricky and absolutely non-discoverable.\r\n\r\nGiven the current API design, it would probably be cleaner to add a new API to `NativeLibrary`  - something like `IntPtr NativeLibrary.Load(string libraryName, AssemblyLoadContext context)`. Or alternatively expose something similar on the ALC itself.","Url":"https://github.com/dotnet/coreclr/issues/26864","RelatedDescription":"Open issue \"There's no way to call native library resolution on a specific AssemblyLoadContext\" (#26864)"},{"Id":"497871904","IsPullRequest":true,"CreatedAt":"2019-09-24T19:08:41","Actor":"CarolEidt","Number":"26863","RawContent":null,"Title":"Preparatory changes for EH WriteThru","State":"open","Body":"- Add a method on BasicBlock to determine EH flow in or out\r\n- Abstract out some of the logic for tracking registers to free","Url":"https://github.com/dotnet/coreclr/pull/26863","RelatedDescription":"Open PR \"Preparatory changes for EH WriteThru\" (#26863)"},{"Id":"497758069","IsPullRequest":true,"CreatedAt":"2019-09-24T18:29:09","Actor":"jkotas","Number":"26860","RawContent":null,"Title":"Revert \"Don't allow the hoisting of GT_CLS_VARs that were assigned a constant value. (#26551)\"","State":"closed","Body":"This reverts commit 2342c8231f1b1b3c17baaefbd0357aa4f228f5d1.","Url":"https://github.com/dotnet/coreclr/pull/26860","RelatedDescription":"Closed or merged PR \"Revert \"Don't allow the hoisting of GT_CLS_VARs that were assigned a constant value. (#26551)\"\" (#26860)"},{"Id":"497841253","IsPullRequest":true,"CreatedAt":"2019-09-24T18:02:59","Actor":"jkoritzinsky","Number":"26862","RawContent":null,"Title":"[NO MERGE] Test dump collection","State":"open","Body":"Get logs for jobs on Helix queues where there are core-eng issues open for dump uploading.\r\n\r\n\r\ncc: @epananth ","Url":"https://github.com/dotnet/coreclr/pull/26862","RelatedDescription":"Open PR \"[NO MERGE] Test dump collection\" (#26862)"},{"Id":"497669155","IsPullRequest":true,"CreatedAt":"2019-09-24T15:44:09","Actor":"MichalStrehovsky","Number":"26858","RawContent":null,"Title":"Add doc on JIT-EE interface changes","State":"closed","Body":"Fixes #26841.","Url":"https://github.com/dotnet/coreclr/pull/26858","RelatedDescription":"Closed or merged PR \"Add doc on JIT-EE interface changes\" (#26858)"},{"Id":"497389015","IsPullRequest":true,"CreatedAt":"2019-09-24T14:24:04","Actor":"trylek","Number":"26850","RawContent":null,"Title":"Skip the MethodRef optimization for ArrayMethod's","State":"closed","Body":"As Jan Vorlicek discovered during his investigation of the remaining\r\nCPAOT bugs, CoreCLR runtime doesn't support the MethodRef encoding\r\nflavor for the special array methods. My understanding is that this\r\nis due to the fact that array types are somewhat weird as they are\r\nkind of \"generic types in disguise\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/26850","RelatedDescription":"Closed or merged PR \"Skip the MethodRef optimization for ArrayMethod's\" (#26850)"},{"Id":"497721143","IsPullRequest":false,"CreatedAt":"2019-09-24T14:21:14","Actor":"MichalStrehovsky","Number":"26859","RawContent":null,"Title":"Remove System.CommandLine dependency","State":"open","Body":"System.CommandLine is a corefxlab package that got abandoned. We shouldn't use it in shipping products.","Url":"https://github.com/dotnet/coreclr/issues/26859","RelatedDescription":"Open issue \"Remove System.CommandLine dependency\" (#26859)"},{"Id":"497647787","IsPullRequest":true,"CreatedAt":"2019-09-24T12:10:57","Actor":"dotnet-maestro[bot]","Number":"26856","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:13 AM\r\n- **Commit**: d7f6c5e944e500f44b8536aed8f6a05320f7729a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19473.5\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26856","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#26856)"},{"Id":"497647592","IsPullRequest":true,"CreatedAt":"2019-09-24T12:10:30","Actor":"dotnet-maestro[bot]","Number":"26855","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/23/2019 10:04 PM\r\n- **Commit**: 485441f79ead7878af206a6af61a300e1458616a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19473.4\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26855","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#26855)"},{"Id":"497771244","IsPullRequest":false,"CreatedAt":"2019-09-24T07:29:42","Actor":"sdg002","Number":"26861","RawContent":null,"Title":".NET Core 3.0 and plugin scenario - Assembly.LoadFrom fails when an older version of dependency assembly has already been loaded","State":"open","Body":"Hi All,\r\nI had initially reported this issue under DOTNET/CORE repository. Since, I did not receive any response, I though I should verify if this issue belongs to DOTNET/COREFX.\r\n\r\n## Original issue\r\n[.NET Core 3.0 and plugin scenario - Assembly.LoadFrom fails when an older version of dependency assembly has already been loaded](https://github.com/dotnet/core/issues/3426)\r\nI am happy to re-submit this issue here.\r\n\r\n\r\n\r\n## Related issue - using Managed Extensibility Framework approach\r\nThis was another issue that I had logged under DOTNET/CORE. The symptoms are identical, albeit I was using MEF to load the plugins\r\n\r\n[MEF on .NET Core 2.1 fails to load plugins from folder , but works well with .NET Framework 4.6.1](https://github.com/dotnet/core/issues/3376)\r\n\r\n\r\nThanks,\r\nSau\r\n","Url":"https://github.com/dotnet/coreclr/issues/26861","RelatedDescription":"Open issue \".NET Core 3.0 and plugin scenario - Assembly.LoadFrom fails when an older version of dependency assembly has already been loaded\" (#26861)"},{"Id":"497470453","IsPullRequest":false,"CreatedAt":"2019-09-24T05:49:41","Actor":"giordi91","Number":"26852","RawContent":null,"Title":"Issues comparing types from dynamically loaded dlls","State":"open","Body":"I am working on a project where I am hosting a .net core 3.0 context in my c++ application, trying to use c# as scripting language. The main idea is to bootstrap a high level c# class, and do all the heavy lifting inside there and minimize as much as possible c++ and c# interaction. Here is a structure of my project:\r\n\r\n![Untitled Diagram(1)](https://user-images.githubusercontent.com/2525797/65462034-dab9c800-de4c-11e9-894b-1d9cc447e432.png)\r\n\r\nThe c++ application starts and loads a \"context.dll\" This is the c# class I will be using to do the heavy lifting, such class is loaded using hostfxr.I get a delegate to a static function and call it. \r\nThat context.dll is then used to load scripting dlls. Basically user defined classes. I am interested on all classes which inherit from \"ScriptingComponent\" base class. Such class is defined in core.dll \r\nI do not explicitly load such .dll It is set as reference in the context.dll project. The context.dll uses the ScriptingComponent symbol to use reflection on the loaded assemblies. \r\n\r\nThe context.dll loads then script.dll, Inside that dll there is a signle class, inheriting from Scriptable component. To do the loading I was using AssemblyLoadContext.Default.LoadFromPath, the issue with that was it did not correctly resolve the core.dll dependency. Then I moved to use the same code showed here:\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support\r\n\r\nThis allowed to correctly resolve the core.dll dependency of the script.dll library. Everything seems to work fine but then every method I am using of reflection to ask if the class in script.dll inherits from ScriptableComponents it fails. \r\nI can post a lot of tests I did to make sure 100% that they are the same, even the GUID \r\nwas exactly the same, although my comparison fails.\r\n \r\nNow that made me thinking, might that be that symbol is loaded twice into two different contexts? The first is contex.dll which loads the Symbol from core.dll, but then the symbol might be loaded again as a dependency of script.dll and somehow the two don't match across contexts?\r\n\r\nThis is the context of core.dll, a single base class and nothing else\r\n```c#\r\n    public class ScriptableComponent\r\n    {\r\n        public virtual void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From base\");\r\n        }\r\n\r\n        public virtual void PostAnimationEval()\r\n        {\r\n        }\r\n    }\r\n```\r\n\r\nMy script.dll has this inside, a single base class inheriting from ScriptableComponent:\r\n```c#\r\npublic class TestLib : ScriptableComponent\r\n    {\r\n        public override void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From override\");\r\n        }\r\n    }\r\n```\r\n\r\nFinally in the context.dll I load the assembly and check for the types inherithing from my type.\r\n```c#\r\n                PluginLoadContext loadContext = new PluginLoadContext(path);             \r\n                Assembly ass = loadContext.LoadFromAssemblyName(new AssemblyName(assemblyName));\r\n\r\n                List<MethodInfo> methods = new List<MethodInfo>();\r\n\r\n                foreach (Type type in ass.GetTypes())\r\n                {\r\n\r\n                    if(type.IsSubclassOf(typeof(ScriptableComponent)))\r\n                    {\r\n                        Console.WriteLine(\"Found scriptable component: \" + type.Name);\r\n                    }\r\n                 }\r\n```\r\n\r\nThe documentation of the Microsoft tutorial on plugin architecture mentions that AssemblyLoadContext is made to load stuff in isolation, might that be the prolem? Ideally I would want to load in the same context my main dll (contex.dll) is in. \r\n\r\nCan you advice on the matter? \r\nI understand is not a simple issue and hope it is not too confusing.\r\n\r\nEnviroment:\r\nLatest Windows 10\r\nLatest Visual Studio preview 2019\r\nAppHost package: Microsoft.NETCore.App.Host.win-x64\\3.0.0-rc1-19456-20","Url":"https://github.com/dotnet/coreclr/issues/26852","RelatedDescription":"Open issue \"Issues comparing types from dynamically loaded dlls\" (#26852)"},{"Id":"497414638","IsPullRequest":false,"CreatedAt":"2019-09-24T02:09:11","Actor":"VincentBu","Number":"26851","RawContent":null,"Title":"Test failed: JIT/SIMD/VectorMax_ro/VectorMax_ro.sh","State":"open","Body":"**Job:**\r\n[coreclr-r2r-extra #20190922.1 Run Test Pri1 R2R Linux x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=362899)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/601d11ee-7c38-43d9-ade5-193ab5df5959/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\n\r\n**Mode:**\r\nRunCrossGen=1\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=2\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on my Linux x64 machine\r\n\r\n**Log:**\r\n```\r\nJIT/SIMD/VectorMax_ro/VectorMax_ro.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/Reports/JIT.SIMD/VectorMax_ro/VectorMax_ro.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      in takeLock\r\n      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload/crossgen /Platform_Assemblies_Paths /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload:/home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/VectorMax_ro/IL:/home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/VectorMax_ro /in VectorMax_ro.org /out VectorMax_ro.dll\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Native image VectorMax_ro.dll generated successfully.\r\n      in ReleaseLock\r\n      in takeLock\r\n      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload/corerun VectorMax_ro.dll ''\r\n      Method System.Numerics.Vector4:Max was compiled but should not have been\r\n      Method System.Numerics.Vector3:Max was compiled but should not have been\r\n      Method System.Numerics.Vector2:Max was compiled but should not have been\r\n      in ReleaseLock\r\n      Expected: 100\r\n      Actual: 255\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26851","RelatedDescription":"Open issue \"Test failed: JIT/SIMD/VectorMax_ro/VectorMax_ro.sh\" (#26851)"},{"Id":"497382855","IsPullRequest":false,"CreatedAt":"2019-09-23T23:54:09","Actor":"briansull","Number":"26849","RawContent":null,"Title":"Improve the the hoisting of  loop invariant expressions that contain Constant ValueNumbers","State":"open","Body":"If the hoisted expression contains any Constant Value numbers that are not true constant nodes we should replace them with true constants.\r\n\r\nWe can remove the current  fix #26551 when we implement this.","Url":"https://github.com/dotnet/coreclr/issues/26849","RelatedDescription":"Open issue \"Improve the the hoisting of  loop invariant expressions that contain Constant ValueNumbers\" (#26849)"},{"Id":"497369628","IsPullRequest":false,"CreatedAt":"2019-09-23T23:03:35","Actor":"GrabYourPitchforks","Number":"26847","RawContent":null,"Title":"Inefficient register allocation in simple method which dereferences a span","State":"open","Body":"```cs\r\n    public static int DerefAndReturn(int index, ReadOnlySpan<int> span) {\r\n        int retVal = default;\r\n        \r\n        if ((uint)index < (uint)span.Length)\r\n        {\r\n            retVal = span[index];\r\n        }\r\n        \r\n        return retVal;\r\n    }\r\n```\r\n\r\n```asm\r\nC.DerefAndReturn(Int32, System.ReadOnlySpan`1<Int32>)\r\n    L0000: mov rax, [rdx]\r\n    L0003: mov edx, [rdx+0x8]\r\n    L0006: xor r8d, r8d\r\n    L0009: cmp ecx, edx\r\n    L000b: jae L0014\r\n    L000d: movsxd r8, ecx\r\n    L0010: mov r8d, [rax+r8*4]\r\n    L0014: mov eax, r8d\r\n    L0017: ret\r\n```\r\n\r\nIn this code sample which utilizes a \"single return from function\" pattern, the local _retVal_ is stored in the `r8d` register instead of the `eax` register. This necessitates an additional `mov` instruction near the end of the method (L0014) to get the result into the correct return register. By using `r8` to hold the span reference and `eax` to hold the return value, we can eliminate this instruction and reduce the size of the code gen.\r\n\r\nThe `movsxd` instruction is also unnecessary and can be replaced with a simpler `mov` instruction: that's being tracked by https://github.com/dotnet/coreclr/issues/23127.","Url":"https://github.com/dotnet/coreclr/issues/26847","RelatedDescription":"Open issue \"Inefficient register allocation in simple method which dereferences a span\" (#26847)"},{"Id":"497367698","IsPullRequest":false,"CreatedAt":"2019-09-23T22:56:45","Actor":"Maoni0","Number":"26846","RawContent":null,"Title":"change the default of cpu group to be enabled on Windows","State":"open","Body":"historically the default has been disabled. in 3.0 by default we will use > 64 procs on linux since we got rid of the (simulated) cpu group concept there. we should change the default on windows to match this. \r\nthis includes changing the default for both GCCpuGroup and Thread_UseAllCpuGroups. \r\n\r\nCC @janvorli ","Url":"https://github.com/dotnet/coreclr/issues/26846","RelatedDescription":"Open issue \"change the default of cpu group to be enabled on Windows\" (#26846)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"497978403","IsPullRequest":false,"CreatedAt":"2019-09-24T23:57:53","Actor":"javadparvaresh","Number":"12702","RawContent":null,"Title":"dotnet build failed exit code","State":"open","Body":"## Steps to reproduce\r\nWhen `dotnet build` fails with error, it doesn't return `-1` exit code and also it prints out Build succeeded`.\r\nin previous  version when one of projects failed to build all build process was failing. \r\n\r\n## Expected  behavior\r\nWhen one or more project fails to build, it should return `-1` exit code.\r\n\r\n## Actual behavior\r\nWhen one or more project fails to build, it returns success exit code.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12702","RelatedDescription":"Open issue \"dotnet build failed exit code\" (#12702)"},{"Id":"497970601","IsPullRequest":false,"CreatedAt":"2019-09-24T23:47:31","Actor":"Kinematics","Number":"12701","RawContent":null,"Title":"Package dependency directory has changed since preview","State":"closed","Body":"## Steps to reproduce\r\nBuild project with any of various Microsoft.Extensions.XYZ packages (eg: Microsoft.Extensions.Configuration) using .NET Core 3.0 release.\r\n\r\n## Actual behavior\r\n\r\nThe `Appname.deps.json` file that is produced on build points to reference directories such as \"lib/**netcoreapp3.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\n## Expected  behavior\r\n\r\nPreviously, when using preview builds of .NET Core 3, and also what I would normally expect, the `.deps.json` file that is produced on build pointed to reference directories such as \"lib/**netstandard2.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\nIf I check in the packages repository on my drive, there are subdirectories for both `netstandard2.0` and `netcoreapp3.0`.  Since these extensions are just .dll libraries, and not full apps, I would expect the dependencies to be referenced using netstandard rather than netcoreapp.  If there are dependencies on anything that is netstandard2.1 dependent (corresponding to netcoreapp3.0), I would expect a netstandard2.1 subdirectory to be used instead.\r\n\r\nThis introduces uncertainty regarding usage and accessibility of dependency files, since some other packages still point to `netstandard2.0` directories.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12701","RelatedDescription":"Closed issue \"Package dependency directory has changed since preview\" (#12701)"},{"Id":"497956733","IsPullRequest":true,"CreatedAt":"2019-09-24T23:11:37","Actor":"dotnet-maestro[bot]","Number":"12700","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190919.1\r\n- **Date Produced**: 9/24/2019 10:10 PM\r\n- **Commit**: 902380600200731914d936fca50b60e3e06dcb16\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19469.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12700","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12700)"},{"Id":"497906057","IsPullRequest":false,"CreatedAt":"2019-09-24T20:25:12","Actor":"javadparvaresh","Number":"12699","RawContent":null,"Title":"`dotnet run` fails to restore packages run application outside of the project directory","State":"open","Body":"## Steps to reproduce\r\nMy solution structure is something like this:\r\n\r\n```\r\n+ solution.sln\r\n+ src\r\n- - + Project1\r\n- - - + project1.csproj\r\n- - + Project2\r\n- - - + project2.csproj\r\n```\r\n\r\n> The `Project1` has referenced by `Project2`.\r\n\r\nI tried to execute `dotnet run  --project=$PWD/src/Project1/project1.csproj` but it seems in restore process, The paths can't resolve properly and it returns `error CS0012`, but if i run the command inside project2 it will work perfectly.\r\n\r\n\r\n## Expected  behavior\r\nby running `dotnet run --project=$PWD/src/project2/project2.csproj` it should restore dependencies, build and run the project.\r\n\r\n## Actual behavior\r\nby running `dotnet run --project=$PWD/src/project2/project2.csproj` it throw errors which the dependencies not found.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12699","RelatedDescription":"Open issue \"`dotnet run` fails to restore packages run application outside of the project directory\" (#12699)"},{"Id":"497842206","IsPullRequest":true,"CreatedAt":"2019-09-24T18:40:22","Actor":"dotnet-maestro[bot]","Number":"12698","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190918.1\r\n- **Date Produced**: 9/18/2019 7:40 PM\r\n- **Commit**: 744d7099d35de3a556e12088c6a829dcaebc3432\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19468.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12698","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12698)"},{"Id":"497828033","IsPullRequest":true,"CreatedAt":"2019-09-24T18:10:40","Actor":"dotnet-maestro[bot]","Number":"12697","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190924.1\r\n- **Date Produced**: 9/24/2019 4:18 PM\r\n- **Commit**: d7f6c5e944e500f44b8536aed8f6a05320f7729a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19474.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12697","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12697)"},{"Id":"497817953","IsPullRequest":false,"CreatedAt":"2019-09-24T17:14:21","Actor":"mkArtakMSFT","Number":"12696","RawContent":null,"Title":"dotnet publish (3.0)","State":"open","Body":"_From @pranavkm on Monday, September 23, 2019 6:04:07 PM_\r\n\r\n_From @zygimantas on Monday, September 23, 2019 5:46:20 PM_\r\n\r\n\r\n[Enter feedback here]\r\n\r\n.NET 3.0 breaking change - I had to change after upgrade from 2.2 to 3.0:\r\n\r\n`dotnet publish --configuration=Release --no-restore --output=../../dist src/Website`\r\n\r\nto\r\n\r\n`dotnet publish --configuration=Release --no-restore --output=dist src/Website`\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 76f39eec-9dd1-6167-56ec-47b26e0b5063\r\n* Version Independent ID: f9f2b0f3-01eb-cf58-8767-194fe0fc0e44\r\n* Content: [Migrate from ASP.NET Core 2.2 to 3.0 Preview](https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-3.0&tabs=visual-studio#feedback)\r\n* Content Source: [aspnetcore/migration/22-to-30.md](https://github.com/aspnet/AspNetCore.Docs/blob/master/aspnetcore/migration/22-to-30.md)\r\n* Product: **aspnet-core**\r\n* Technology: **aspnetcore-migration**\r\n* GitHub Login: @Rick-Anderson\r\n* Microsoft Alias: **riande**\r\n\r\n_Copied from original issue: aspnet/AspNetCore.Docs#14494_\r\n\r\n_Copied from original issue: aspnet/AspNetCore#14262_","Url":"https://github.com/dotnet/cli/issues/12696","RelatedDescription":"Open issue \"dotnet publish (3.0)\" (#12696)"},{"Id":"497689648","IsPullRequest":false,"CreatedAt":"2019-09-24T15:53:56","Actor":"RobSwDev","Number":"12693","RawContent":null,"Title":"dotnet tools and runtime versions","State":"closed","Body":"## Steps to reproduce\r\nWe are using sgen to generate Xml Serialization assemblies. We've started to use the dotnet tool [microsoft.xmlserializer.generator](https://www.nuget.org/packages/Microsoft.XmlSerializer.Generator/2.1.0).  This worked initially. However, after installing net core 3.0, it stopped working on some machines, while continuing to work on others.\r\n\r\nThe issue *seems* to be this:\r\nThe tool asks for runtime 2.1.0\r\nIf that runtime does not exist, it will roll forward to the first available 2.1.x or 2.2.x\r\nHowever, once we installed net core 3 sdk, the \"roll forward\" behaviour is disabled. \r\nAfter this, it seems to choose the lowest 2.x.\r\n\r\nOn my machine, my earliest 2.x is 2.1.6, which works.\r\nOn other build machines that have runtime 2.0.9, it fails.\r\nI can get it to work on these machines by removing the 2.0.9 runtime, so that the lowest 2.x is > 2.1.\r\n\r\nThe tool fails with\r\n`Method 'System.Xml.Serialization.XmlSerializer.GenerateSerializer' was not found. This is likely because you are using an older version of the framework. Please update to .NET Core v2.1 or later.`\r\n\r\nOutput from the tool diagnostics:\r\n```\r\nPackagedCommandSpecFactory: Looking for prefercliruntime file at `C:\\Users\\user\\.nuget\\packages\\microsoft.xmlserializer.generator\\2.1.0\\lib\\netstandard2.0\\..\\..\\prefercliruntime`\r\nPackagedCommandSpecFactory: Ignoring prefercliruntime file as the tool target framework (2.0.0) has a different major version than the current CLI runtime (3.0.0-preview8-28405-07)\r\n\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12693","RelatedDescription":"Closed issue \"dotnet tools and runtime versions\" (#12693)"},{"Id":"497691855","IsPullRequest":false,"CreatedAt":"2019-09-24T15:50:09","Actor":"javadparvaresh","Number":"12694","RawContent":null,"Title":"Terminal Freezes for a seconds on boot","State":"closed","Body":"## Steps to reproduce\r\nUbuntu 18\r\nTerminator : \r\ndotnet-cli version : 3.0.100\r\n\r\n## Expected  behavior\r\nTerminal freezes after for about 10 seconds until application booted and started working \r\n\r\n## Actual behavior\r\nAs soon as you call `dotnet run` command, it freezes terminal for a seconds until firs log prints out, then it start working\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12694","RelatedDescription":"Closed issue \"Terminal Freezes for a seconds on boot\" (#12694)"},{"Id":"497763032","IsPullRequest":false,"CreatedAt":"2019-09-24T15:28:36","Actor":"javadparvaresh","Number":"12695","RawContent":null,"Title":"`Project cannot be packaged` warning even when `<IsPackable>true</IsPackable>` in project file has defined","State":"open","Body":"## Steps to reproduce\r\nI have a `netcoreapp2.2` project which i'm trying to build by using `dotnet (3.0.100)` getting the `warning` for `warning : This project cannot be packaged because packaging has been disabled. Add <IsPackable>true</IsPackable> to the project file to enable producing a package from this project.`\r\n\r\n\r\n## Expected  behavior\r\nIgnore projects which has defined `<IsPackable>true</IsPackable>`.\r\n\r\n## Actual behavior\r\nNow cli prints out a warning which should not.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12695","RelatedDescription":"Open issue \"`Project cannot be packaged` warning even when `<IsPackable>true</IsPackable>` in project file has defined\" (#12695)"},{"Id":"496578307","IsPullRequest":true,"CreatedAt":"2019-09-24T06:05:23","Actor":"dotnet-maestro[bot]","Number":"12687","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:13 AM\r\n- **Commit**: d7f6c5e944e500f44b8536aed8f6a05320f7729a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19473.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12687","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12687)"},{"Id":"496450588","IsPullRequest":false,"CreatedAt":"2019-09-23T21:15:46","Actor":"giordi91","Number":"12684","RawContent":null,"Title":"dotnet publish does not generate runtimeconfig.json","State":"closed","Body":"## Steps to reproduce\r\nGood evening, I am trying to integrate .net core 3.0 in my engine as a scripting language. As such I want to be able to kick c# code from my c++ code. I am following the sample code for hosting. \r\nThe code, requires a runtimeconfig.json for my c# dll that I want to load and execute at runtime. Unluckily I am unable to generate such file when using dotnet publish. \r\n\r\nI have tried to both create a visual studio project which a 3.0 class library and do\r\n```\r\ndotnet new classlib\r\n```\r\nAnd upgrade the project to netcoreapp3.0. Only the deps.json file is generated, not the runtimeconfig.json one.\r\n\r\n\r\nto repdoruce:\r\n* run : dotnet new classlib\r\n* modified project file for netcoreapp3.0\r\n* run dotnet publish\r\n* check build directory\r\n\r\n## Expected  behavior\r\nI would expect the see a *.runtimeconfig.json file generated along the *.dll *.pbd *.deps.json \r\nI tried to do both self contained and not, force x64 etc. No luck. \r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nAm I doing anything wrong?\r\n\r\nBest regards\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12684","RelatedDescription":"Closed issue \"dotnet publish does not generate runtimeconfig.json\" (#12684)"},{"Id":"497242401","IsPullRequest":false,"CreatedAt":"2019-09-23T19:22:29","Actor":"Zanadar","Number":"12692","RawContent":null,"Title":"Please publish SDK 3.0.100+dependencies","State":"closed","Body":"Hello! \r\nVery excited about this new release. Congrats!\r\nWhen you get a chance can we get a `+dependencies` release, please? \r\nThanks you.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12692","RelatedDescription":"Closed issue \"Please publish SDK 3.0.100+dependencies\" (#12692)"},{"Id":"497239994","IsPullRequest":true,"CreatedAt":"2019-09-23T17:52:25","Actor":"am11","Number":"12691","RawContent":null,"Title":"Update manpages using dockerized pandoc tool","State":"open","Body":"Using `run_docker.sh` and fixes from https://github.com/dotnet/cli/pull/12690.\r\n","Url":"https://github.com/dotnet/cli/pull/12691","RelatedDescription":"Open PR \"Update manpages using dockerized pandoc tool\" (#12691)"},{"Id":"497235172","IsPullRequest":true,"CreatedAt":"2019-09-23T17:41:26","Actor":"am11","Number":"12690","RawContent":null,"Title":"Add Dockerfile for manpage tool and fixes","State":"open","Body":"* Simplify usage with docker: `run_docker.sh`\r\n* Add support for git to acquire dotnet/docs repo\r\n* Fix bug in `remove_references` filter which was throwing on processing `dotnet-test.md`\r\n  * filter breaks with this pattern: ``[some `code`](/path)``\r\n  * change filter to return nested AST generated array as is (without next sibling, which is path)\r\n    to fulfill its purpose\r\n\r\n---\r\n\r\nI will send separate PR for manpage update.","Url":"https://github.com/dotnet/cli/pull/12690","RelatedDescription":"Open PR \"Add Dockerfile for manpage tool and fixes\" (#12690)"},{"Id":"496766219","IsPullRequest":false,"CreatedAt":"2019-09-22T11:23:40","Actor":"alrz","Number":"12689","RawContent":null,"Title":"Roslyn analyzer project templates","State":"closed","Body":"It would be nice to be able to run `dotnet new analyzer|codefix` to create roslyn analyzer/codefix projects.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12689","RelatedDescription":"Closed issue \"Roslyn analyzer project templates\" (#12689)"},{"Id":"496585413","IsPullRequest":true,"CreatedAt":"2019-09-21T00:20:37","Actor":"dotnet-maestro[bot]","Number":"12688","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 10:30 PM\r\n- **Commit**: 72b39b0473993b932a08c8fc24a8988d45b416a5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12688","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12688)"},{"Id":"496554419","IsPullRequest":true,"CreatedAt":"2019-09-20T22:05:44","Actor":"dotnet-maestro[bot]","Number":"12686","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.5\r\n- **Date Produced**: 9/20/2019 8:16 PM\r\n- **Commit**: b0ea03ec3af2a9c388f718fbb4978984ab339953\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.5\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12686","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12686)"},{"Id":"496514144","IsPullRequest":true,"CreatedAt":"2019-09-20T20:10:38","Actor":"dotnet-maestro[bot]","Number":"12685","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 6:28 PM\r\n- **Commit**: 9817f3a7023df0fdda0511309010397bd5218384\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12685","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12685)"},{"Id":"496091035","IsPullRequest":false,"CreatedAt":"2019-09-20T17:06:00","Actor":"krwq","Number":"12681","RawContent":null,"Title":"Removing template from disk leaves dotnet new in unusable state","State":"closed","Body":"## Steps to reproduce\r\n\r\n- `dotnet new -i <path to any template>`\r\n- `rm -rf <path to the template>`\r\n- `dotnet new --help`\r\n\r\n## Expected  behavior\r\n\r\nWarning or actionable error message\r\n\r\n## Actual behavior\r\n\r\nError:\r\n\r\n```\r\nCould not find a part of the path '<path to the template>'.\r\n   at System.IO.Enumeration.FileSystemEnumerator`1.CreateDirectoryHandle(String path, Boolean ignoreNotFound)\r\n   at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerableFactory.UserEntries(String directory, String expression, EnumerationOptions options)\r\n   at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options)\r\n   at System.IO.Directory.EnumerateFileSystemEntries(String path, String searchPattern, SearchOption searchOption)\r\n   at Microsoft.TemplateEngine.Utils.PhysicalFileSystem.EnumerateFileSystemEntries(String directoryName, String pattern, SearchOption searchOption)\r\n   at Microsoft.TemplateEngine.Edge.Settings.Scanner.DetermineDirectoriesToScan(String baseDir)\r\n   at Microsoft.TemplateEngine.Edge.Settings.Scanner.Scan(String baseDir, Boolean allowDevInstall)\r\n   at Microsoft.TemplateEngine.Edge.Settings.TemplateCache.Scan(String installDir, IReadOnlyList`1& mountPointIdsForNewInstalls, Boolean allowDevInstall)\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.RebuildCacheFromSettingsIfNotCurrent(Boolean forceRebuild)\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ExecuteAsync()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.NewCommandInputCli.<>c__DisplayClass19_0.<<OnExecute>b__0>d.MoveNext()\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.10\r\n OS Platform: Linux\r\n RID:         ubuntu.18.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview-010184/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [/usr/share/dotnet/sdk]\r\n  2.1.801 [/usr/share/dotnet/sdk]\r\n  2.2.401 [/usr/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nRemoving all of the ~10 entries of my app from json files under `~/.templateengine` I'm able to use it again\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12681","RelatedDescription":"Closed issue \"Removing template from disk leaves dotnet new in unusable state\" (#12681)"},{"Id":"496280317","IsPullRequest":false,"CreatedAt":"2019-09-20T10:41:02","Actor":"xianyun666","Number":"12683","RawContent":null,"Title":"PublishSingleFile,After run,system error:api-ms-win-crt-runtime-l1-1-0.dll is missing","State":"open","Body":"## Steps to reproduce\r\nRun the software\r\n## Expected  behavior\r\nRun successfully\r\n\r\n## Actual behavior\r\nsystem error,api-ms-win-crt-runtime-l1-1-0.dll is missing\r\n\r\n## Environment data\r\nwindows7 sp1 64bit\r\nInstalled KB2533623\r\nNot installed KB2999226\r\n\r\n\r\nPublishSingleFile,This error will occur.But,--self-contained does not.\r\nI also found that,Found it in my cache directory.\r\n**C:\\Users\\liu\\AppData\\Local\\Temp\\\\.net\\myApp\\hym3u0df.ls0**\r\nThere are many files whose filenames begin with 'api-ms'\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12683","RelatedDescription":"Open issue \"PublishSingleFile,After run,system error:api-ms-win-crt-runtime-l1-1-0.dll is missing\" (#12683)"},{"Id":"496150626","IsPullRequest":true,"CreatedAt":"2019-09-20T05:55:38","Actor":"dotnet-maestro[bot]","Number":"12682","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/20/2019 4:11 AM\r\n- **Commit**: 33723cfa72892e93656fe53350da35835d64c099\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19469.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12682)"},{"Id":"495994223","IsPullRequest":false,"CreatedAt":"2019-09-19T20:05:11","Actor":"Raviuppa","Number":"12680","RawContent":null,"Title":"Help URL for failed dotnet tool installation pointing to wrong page","State":"closed","Body":"## Steps to reproduce\r\n\r\nWhen tried to install a wrong version of tool (dotnet-sos in this case) or when the tool unable to find the relevant version of the tool, it errors out with detailed information. However, the [URL ](https://aka.ms/failure-installing-tool)that spits out is pointing to Microsoft Docs [main page](https://docs.microsoft.com/en-us/) instead to the actual tool failure assistance page.\r\n\r\nRemember, today the RC2 tool is not there yet so the error happens. Once Rc2 or RTM too chain is up for consumption, you may not see the error but the Issue here is about the URL in the error message.\r\n\r\n- Open a Command Window\r\n- Execute dotnet tool install -g dotnet-sos --version 3.0.100-rc2-014234\r\n- Check the error message for the URL.\r\n\r\n## Expected  behavior\r\nThe [help URL](https://aka.ms/failure-installing-tool) should point to the tooling doc page\r\n\r\n## Actual behavior\r\n\r\nHelp URL pointing to the Docs [main page](https://docs.microsoft.com/en-us/).\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc2-014234\r\n Commit:    118e4306cb\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc2-014234\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc2-19460-02\r\n  Commit:  4421cfb105\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc2-014234 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc2.19460.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc2-19460-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc2-19460-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12680","RelatedDescription":"Closed issue \"Help URL for failed dotnet tool installation pointing to wrong page\" (#12680)"},{"Id":"495894353","IsPullRequest":false,"CreatedAt":"2019-09-19T19:53:42","Actor":"basbossink","Number":"12679","RawContent":null,"Title":"Warning NU1603 should include the approximate best match found in the message","State":"closed","Body":"## Steps to reproduce\r\nCreate a project that depends on a pre-release package that is not available (yet).\r\n```sh\r\ndotnet restore\r\n```\r\n\r\n## Expected  behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.0 was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\nSo the feature request is to add the actual version that was resolved to the warning message, since that information is more useful than repeating the version of the package that caused the warning.\r\n\r\n## Actual behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match of Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1.debug was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12679","RelatedDescription":"Closed issue \"Warning NU1603 should include the approximate best match found in the message\" (#12679)"},{"Id":"495836384","IsPullRequest":false,"CreatedAt":"2019-09-19T19:52:43","Actor":"sdcb","Number":"12678","RawContent":null,"Title":"dotnet pack nuget package don't contains update time on file attributes","State":"closed","Body":"## Steps to reproduce\r\nJust run: `dotnet pack` on a project folder.\r\n\r\n## Expected  behavior\r\nDll file on nuget package should contains update time attribute.\r\n![image](https://user-images.githubusercontent.com/1317141/65253001-79cc8000-db2c-11e9-8895-5f17b1274d87.png)\r\n\r\n## Actual behavior\r\nBut it fixed to 01/01/1980\r\n![image](https://user-images.githubusercontent.com/1317141/65252957-67eadd00-db2c-11e9-9f9a-431df324b910.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc2-014266\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n```\r\n\r\n# Note: \r\n* I'm experience this issue on just .NET Core 3.0, maybe since preview9(or earlier).\r\n* When I using `dotnet pack` on .NET Core SDK 2.2, this is all good.\r\n* If I create nuget package using msbuild.exe or by `nuget pack {projectFile} -build`, this is also all good.","Url":"https://github.com/dotnet/cli/issues/12678","RelatedDescription":"Closed issue \"dotnet pack nuget package don't contains update time on file attributes\" (#12678)"},{"Id":"495636122","IsPullRequest":false,"CreatedAt":"2019-09-19T19:51:01","Actor":"xianyun666","Number":"12675","RawContent":null,"Title":"Can I customize the publish self-contained runtimes path？","State":"closed","Body":"At present, after publish self-contained, exe sibling directory, generate a lot of dll files and folders, \r\n\r\nsuch as System.Net.dll, api-ms-won-core-console-l1-1-0.dll, vcruntime140_cor3.dll, etc.\r\n**It's such a mess.**\r\nIt is best to publish with a parameter that separates exe from the runtimes directory, \r\nsuch as `dotnet publish --self-contained --runtime-packs myruntimes`?\r\nruntime-packs parameter supports absolute and relative paths.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12675","RelatedDescription":"Closed issue \"Can I customize the publish self-contained runtimes path？\" (#12675)"},{"Id":"495755704","IsPullRequest":true,"CreatedAt":"2019-09-19T12:03:17","Actor":"dotnet-maestro[bot]","Number":"12677","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12677","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#12677)"},{"Id":"495654112","IsPullRequest":false,"CreatedAt":"2019-09-19T08:36:50","Actor":"donhuvy","Number":"12676","RawContent":null,"Title":"dotnet cli version 3.0.100-rc1-014190 still generate *.SLN with # Visual Studio 15","State":"open","Body":"## Steps to reproduce\r\nInstall .NET Core 3 RC1\r\n\r\n```\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n```\r\nthen\r\n```\r\ncd Actio\r\ndotnet new sln\r\n```\r\n\r\nResult of file `Actio.sln`\r\n\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Api\", \"src\\Actio.Api\\Actio.Api.csproj\", \"{21E41DE9-5142-4D5C-96A4-CC19BCA24620}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Common\", \"src\\Actio.Common\\Actio.Common.csproj\", \"{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Services.Identity\", \"src\\Actio.Services.Identity\\Actio.Services.Identity.csproj\", \"{8830705C-FBD0-4190-8DD7-5AD513187E5E}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Services.Activities\", \"src\\Actio.Services.Activities\\Actio.Services.Activities.csproj\", \"{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x86.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\tEndGlobalSection\r\nEndGlobal\r\n\r\n```\r\n\r\n## Expected  behavior\r\n```\r\n# Visual Studio 15\r\n```\r\nbecome to \r\n```\r\n# Visual Studio 16\r\n```\r\nand other related things.\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nE:\\Actio>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12676","RelatedDescription":"Open issue \"dotnet cli version 3.0.100-rc1-014190 still generate *.SLN with # Visual Studio 15\" (#12676)"},{"Id":"495520454","IsPullRequest":true,"CreatedAt":"2019-09-19T01:35:40","Actor":"dotnet-maestro[bot]","Number":"12674","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190918.6\r\n- **Date Produced**: 9/18/2019 11:51 PM\r\n- **Commit**: 30c4a25a9a675d632b6e7180e53a87e6fcacb909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19468.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12674","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12674)"},{"Id":"495462077","IsPullRequest":false,"CreatedAt":"2019-09-18T21:23:19","Actor":"CamSoper","Number":"12673","RawContent":null,"Title":"Launching with `dotnet run &` fails to run in background on Linux","State":"open","Body":"This might be a regression of https://github.com/dotnet/cli/issues/6216.\r\n\r\n## Steps to reproduce\r\nFrom bash:\r\n\r\n1. `mkdir temp && cd temp`\r\n1. `dotnet new api`\r\n1. `dotnet run &`  Note the job ID. \r\n1. `jobs`\r\n\r\n## Expected  behavior\r\nNew job is listed in *Running* state. App is running in background and responds to `curl` commands.\r\n\r\n## Actual behavior\r\nNew job is listed is *Stopped* state. App is not running in background.\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /home/cam/.dotnet/sdk/3.0.100-rc1-014190/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-rc1-014190 [/home/cam/.dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [/home/cam/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [/home/cam/.dotnet/shared/Microsoft.NETCore.App]\r\n\r\ncc: @scottaddie \r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12673","RelatedDescription":"Open issue \"Launching with `dotnet run &` fails to run in background on Linux\" (#12673)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"497649559","IsPullRequest":true,"CreatedAt":"2019-09-24T12:24:38","Actor":"dotnet-maestro[bot]","Number":"1570","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/23/2019 10:04 PM\r\n- **Commit**: 485441f79ead7878af206a6af61a300e1458616a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1570","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1570)"},{"Id":"497622081","IsPullRequest":false,"CreatedAt":"2019-09-24T11:15:45","Actor":"GammaFour","Number":"1569","RawContent":null,"Title":"Massive problems with no support of UWP in .NET Standard 2.1","State":"open","Body":"How can you release .NET Standard 2.1 and not support UWP. I made the mistake of upgrading my NuGet packages yesterday to the recommended versions and I've been untangling this mess ever since. My server code wants to be .NET Standard 2.1. So I go through and retarget all my common libraries only to find that I've screwed the pooch on my UWP client. This is seriously a big miss.","Url":"https://github.com/dotnet/standard/issues/1569","RelatedDescription":"Open issue \"Massive problems with no support of UWP in .NET Standard 2.1\" (#1569)"},{"Id":"497566465","IsPullRequest":false,"CreatedAt":"2019-09-24T09:24:09","Actor":"nikolay-dimitrov","Number":"1568","RawContent":null,"Title":"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found","State":"open","Body":"I have custom method over DbContext(EF 6.3) with class library targeting .NET Framework 4.7.1\r\nIm trying to migrate to .NET Standart 2.1 but into the both cases i got this error when im calling the method above from any places(the example is calling from .NET Standart 2.1 library with installed EF 6.3)\r\n\r\n    public static async Task<IList<T>> SqlQueryAsync<T>(this DbContext db, CommandType type, string sql, List<SqlParameter> parameters) where T : new()\r\n        {\r\n            var conn = db.Database.Connection.State;\r\n\r\n            if (conn == ConnectionState.Closed)\r\n                await db.Database.Connection.OpenAsync();\r\n            using (var command =  db.Database.Connection.CreateCommand())\r\n            {\r\n                command.CommandText = sql;\r\n                command.CommandType = type;\r\n                if (parameters != null && parameters.Count() > 0)\r\n                {\r\n                    foreach (var item in parameters)\r\n                    {\r\n                        DbParameter p = command.CreateParameter();\r\n                        p.DbType = item.DbType;\r\n                        p.ParameterName = item.ParameterName;\r\n                        p.Value = item.Value;\r\n                        command.Parameters.Add(p);\r\n                    }\r\n                }\r\n                var propts = typeof(T).GetProperties();\r\n                var rtnList = new List<T>();\r\n                T model;\r\n                object val;\r\n                using (var reader = await command.ExecuteReaderAsync())\r\n                {\r\n                    while (await reader.ReadAsync())\r\n                    {\r\n                        model = new T();\r\n                        foreach (var l in propts)\r\n                        {\r\n\r\n                            if (Enumerable.Range(0, reader.FieldCount).Any(i => string.Equals(reader.GetName(i), l.Name, StringComparison.OrdinalIgnoreCase)))\r\n                            {\r\n                                val = reader[l.Name];\r\n                                if (val == DBNull.Value)\r\n                                    l.SetValue(model, null);\r\n                                else\r\n                                    l.SetValue(model, val);\r\n                            }\r\n                            \r\n                        }\r\n                        rtnList.Add(model);\r\n                    }\r\n                }\r\n                return rtnList;\r\n            }\r\n        }\r\n\r\nI found simular issue https://github.com/dotnet/corefx/issues/27247# but the proposals there do not resolve the error","Url":"https://github.com/dotnet/standard/issues/1568","RelatedDescription":"Open issue \"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found\" (#1568)"},{"Id":"497516549","IsPullRequest":false,"CreatedAt":"2019-09-24T07:46:11","Actor":"YZahringer","Number":"1567","RawContent":null,"Title":".NET Standard 2.1 support on Universal Windows Platform","State":"open","Body":"Regarding the support of `.NET Standard 2.1` in UWP projects, it is written that it will be supported in the upcoming version.\r\n\r\nThis means that there will be the same problem as with the `.NET Standard 2.0` version and that we will not be able to target older versions of Windows 10? `.NET Standard 2.0` requires as min target version Windows 10 Fall Creators Update `16299`.\r\n\r\nThis is a big problem for my projects and backward compatibility. I can't remove support for older versions of Windows 10, especially `LTSC` editions. This means that my projects are blocked in `.NET Standard 1.4` and it also blocks any dependency updates:\r\n- `Xamarin.Forms 2.5` because version `>=3.0` requires `.NET Standard 2.0`\r\n- `Microsoft.EntityFrameworkCore 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n- `.NET Core 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n\r\nI can't ask my users to have the latest version installed, especially in business applications and Windows `LTSC` editions. I have to wait several years before removing the support of an old version.\r\n\r\nIs it planned to continue support the min target version `16299` of UWP projects with `.NET Standard 2.1`? I understand the constraints, but with Xcode I can still min target `iOS 7` and with Android I can still min target `4.4 KitKat`, still with the latest version of frameworks. And with Windows I can only support the latest version? That doesn't make much sense.","Url":"https://github.com/dotnet/standard/issues/1567","RelatedDescription":"Open issue \".NET Standard 2.1 support on Universal Windows Platform\" (#1567)"},{"Id":"497453537","IsPullRequest":false,"CreatedAt":"2019-09-24T04:51:49","Actor":"shyamutty","Number":"1566","RawContent":null,"Title":"Grpc .net client issue with .NET Core and .NET standard (2.0)","State":"closed","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Closed issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566)"},{"Id":"497424795","IsPullRequest":false,"CreatedAt":"2019-09-24T02:51:23","Actor":"goldmannyc","Number":"1565","RawContent":null,"Title":"Where to download the netstandard.dll 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1565","RelatedDescription":"Open issue \"Where to download the netstandard.dll 2.1?\" (#1565)"},{"Id":"497309683","IsPullRequest":true,"CreatedAt":"2019-09-23T20:25:00","Actor":"terrajobst","Number":"1564","RawContent":null,"Title":"Ns21 summary","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Closed or merged PR \"Ns21 summary\" (#1564)"},{"Id":"497303937","IsPullRequest":true,"CreatedAt":"2019-09-23T20:15:45","Actor":"terrajobst","Number":"1563","RawContent":null,"Title":"Update diffs to final product","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1563","RelatedDescription":"Closed or merged PR \"Update diffs to final product\" (#1563)"},{"Id":"497024033","IsPullRequest":false,"CreatedAt":"2019-09-23T10:49:00","Actor":"yb199478","Number":"1562","RawContent":null,"Title":"Is it possible to add a method that kills the process tree?","State":"open","Body":".Net standard does not provide any method to kill a process tree.","Url":"https://github.com/dotnet/standard/issues/1562","RelatedDescription":"Open issue \"Is it possible to add a method that kills the process tree?\" (#1562)"},{"Id":"496771346","IsPullRequest":true,"CreatedAt":"2019-09-22T12:23:49","Actor":"dotnet-maestro[bot]","Number":"1561","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190921.2\r\n- **Date Produced**: 9/21/2019 6:26 PM\r\n- **Commit**: 4c074ae47660448eae66a362076124177709640a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19471.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1561","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1561)"},{"Id":"496650404","IsPullRequest":true,"CreatedAt":"2019-09-21T12:33:22","Actor":"dotnet-maestro[bot]","Number":"1560","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 4:58 PM\r\n- **Commit**: 0286bce5fd360207ca707fe7024248be428cf0e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1560","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1560)"},{"Id":"496648540","IsPullRequest":true,"CreatedAt":"2019-09-21T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1559","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1559","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1559)"},{"Id":"496322557","IsPullRequest":true,"CreatedAt":"2019-09-20T12:34:19","Actor":"dotnet-maestro[bot]","Number":"1558","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1558","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1558)"},{"Id":"496312709","IsPullRequest":true,"CreatedAt":"2019-09-20T12:11:37","Actor":"dotnet-maestro[bot]","Number":"1557","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1557","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1557)"},{"Id":"496006418","IsPullRequest":true,"CreatedAt":"2019-09-19T20:28:51","Actor":"dotnet-maestro[bot]","Number":"1556","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1556","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1556)"},{"Id":"495468017","IsPullRequest":false,"CreatedAt":"2019-09-19T14:08:45","Actor":"mstoffel-infraserv","Number":"1553","RawContent":null,"Title":"Regex Match Hangs forever","State":"closed","Body":"During processing with one of our applications we ran into an issue with Regex Match method hanging forever with a specific regular expression and specific text. See attached code for details.\r\n[BadRegex.zip](https://github.com/dotnet/standard/files/3628478/BadRegex.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1553","RelatedDescription":"Closed issue \"Regex Match Hangs forever\" (#1553)"},{"Id":"495764912","IsPullRequest":true,"CreatedAt":"2019-09-19T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1555","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1555","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1555)"},{"Id":"495754976","IsPullRequest":true,"CreatedAt":"2019-09-19T12:21:51","Actor":"dotnet-maestro[bot]","Number":"1554","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 8:56 PM\r\n- **Commit**: a28ee518026d2c5d477472f44d391cf9379fc7cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19468.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1554","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1554)"},{"Id":"495184946","IsPullRequest":true,"CreatedAt":"2019-09-18T12:19:39","Actor":"dotnet-maestro[bot]","Number":"1552","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190917.6\r\n- **Date Produced**: 9/18/2019 3:17 AM\r\n- **Commit**: 4ca1feeeb484e8a7089ce8a9d377703ad5b8a53e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19467.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1552","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1552)"},{"Id":"494584582","IsPullRequest":true,"CreatedAt":"2019-09-17T12:26:25","Actor":"dotnet-maestro[bot]","Number":"1551","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190916.8\r\n- **Date Produced**: 9/17/2019 7:53 AM\r\n- **Commit**: 4aea703673e942756c02b222e6b5babaf8612a25\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19466.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1551","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1551)"},{"Id":"494010485","IsPullRequest":true,"CreatedAt":"2019-09-16T12:21:02","Actor":"dotnet-maestro[bot]","Number":"1550","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190915.2\r\n- **Date Produced**: 9/15/2019 6:42 PM\r\n- **Commit**: e8efb815275c8323fedc950ca3596474fa5e23c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19465.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1550","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1550)"},{"Id":"493907721","IsPullRequest":false,"CreatedAt":"2019-09-16T08:19:30","Actor":"HamidTheGeek","Number":"1549","RawContent":null,"Title":"SqlParameter.DbType is set to Datetime when I am setting it to Time","State":"open","Body":"It seems like an intentional behavior but I don't get the reason. \r\n\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nConsole.WriteLine(param.DbType.ToString());\r\n```\r\n`DateTime` will be printed in the console. Therefore, the following value would be `false`.\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nvar value = param.DbType == DbType.Time;\r\n```\r\n\r\nI have tested this in `netstandard2.0`.","Url":"https://github.com/dotnet/standard/issues/1549","RelatedDescription":"Open issue \"SqlParameter.DbType is set to Datetime when I am setting it to Time\" (#1549)"},{"Id":"493730129","IsPullRequest":true,"CreatedAt":"2019-09-15T12:21:32","Actor":"dotnet-maestro[bot]","Number":"1548","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190914.4\r\n- **Date Produced**: 9/15/2019 5:48 AM\r\n- **Commit**: cbcc2a5e6f8be1e43b16874ed358c18c5d6bcd5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19464.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1548","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1548)"},{"Id":"493617725","IsPullRequest":true,"CreatedAt":"2019-09-14T12:32:41","Actor":"dotnet-maestro[bot]","Number":"1547","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190913.7\r\n- **Date Produced**: 9/14/2019 3:54 AM\r\n- **Commit**: f07730eedb1f7e2cb5e178d988bc2255f7ce7021\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19463.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1547","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1547)"},{"Id":"493616084","IsPullRequest":true,"CreatedAt":"2019-09-14T12:11:29","Actor":"dotnet-maestro[bot]","Number":"1546","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.3\r\n- **Date Produced**: 9/13/2019 11:47 PM\r\n- **Commit**: 7b731032220c21a3ed0021c72757b1f3122579b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19463.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1546","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1546)"},{"Id":"493518578","IsPullRequest":false,"CreatedAt":"2019-09-13T21:11:22","Actor":"BobHein","Number":"1545","RawContent":null,"Title":"When writing .Net Standard projects, is it OK to include Nuget packages which are part of .Net Core as dependencies?","State":"open","Body":"There are many Microsoft Nuget packages which contain classes which are not part of .Net Standard, but these packages are available as standalone Nuget packages. Most of them seem to be components of .Net core. A few Examples of many are:\r\n\r\nSystem.Data.SqlClient\r\nSystem.Data.DataSetExtensions\r\nSystem.Drawing.Common\r\n\r\nThese all seems to indicate that they are supported under .Net Standard in the Nuget documentation.  My questions:\r\n\r\n1) Are they really safe to use under .Net Standard DLLs, which will run in both .Net Core and .Net Framework environments?\r\n2) If they are safe to use, why aren't they included as part of .Net Standard? Note that I also want them to run under Linux as well.\r\n3) If they are not safe to use, why not? And how do you know what is and isn't safe to use?","Url":"https://github.com/dotnet/standard/issues/1545","RelatedDescription":"Open issue \"When writing .Net Standard projects, is it OK to include Nuget packages which are part of .Net Core as dependencies?\" (#1545)"},{"Id":"493297430","IsPullRequest":true,"CreatedAt":"2019-09-13T12:35:42","Actor":"dotnet-maestro[bot]","Number":"1544","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190912.15\r\n- **Date Produced**: 9/13/2019 5:08 AM\r\n- **Commit**: 31a5bba0e79a5ae875f691d70ec3b9789691136d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19462.15\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19462.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19462.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1544","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1544)"},{"Id":"493287649","IsPullRequest":true,"CreatedAt":"2019-09-13T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1543","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190912.5\r\n- **Date Produced**: 9/13/2019 5:59 AM\r\n- **Commit**: 6003ee189f456c92a18b097f226d4927309def27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19462.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1543","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1543)"},{"Id":"493039917","IsPullRequest":false,"CreatedAt":"2019-09-12T21:31:56","Actor":"Anipik","Number":"1542","RawContent":null,"Title":"Using Dotnet pack to produce the packages for Netstandard/Library packages.","State":"open","Body":"Currently we are using pkgproj and a lot of arcade & custom infrastructure to build packages.\r\n\r\nGoing forward we will be only publishing the ref assembly packages so it becomes more useful to move towards using dotnet pack.\r\n\r\nHaving the same architecture for preview and the final release will help us avoid problems in the release pipelines. \r\n\r\ncc @ericstj @ViktorHofer @danmosemsft ","Url":"https://github.com/dotnet/standard/issues/1542","RelatedDescription":"Open issue \"Using Dotnet pack to produce the packages for Netstandard/Library packages.\" (#1542)"},{"Id":"493029008","IsPullRequest":true,"CreatedAt":"2019-09-12T21:17:00","Actor":"mmitche","Number":"1541","RawContent":null,"Title":"Stabilize package verions","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1541","RelatedDescription":"Closed or merged PR \"Stabilize package verions\" (#1541)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"498004917","IsPullRequest":true,"CreatedAt":"2019-09-25T03:50:25","Actor":"Dotnet-GitSync-Bot","Number":"41303","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams","Url":"https://github.com/dotnet/corefx/pull/41303","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#41303)"},{"Id":"498022402","IsPullRequest":true,"CreatedAt":"2019-09-25T03:09:31","Actor":"benaadams","Number":"41306","RawContent":null,"Title":"Add CollectionsMarshal ref assemblies","State":"open","Body":"Resolves dotnet/corefx#31597\r\n\r\n/cc @tannergooding @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/41306","RelatedDescription":"Open PR \"Add CollectionsMarshal ref assemblies\" (#41306)"},{"Id":"498020281","IsPullRequest":false,"CreatedAt":"2019-09-25T03:00:10","Actor":"Milkitic","Number":"41305","RawContent":null,"Title":"System.Text.Json interface member deserialization handling","State":"open","Body":"For some reasons that Json for configuration use, I did a test on how the System.Text.Json handles the interface deserialization. I read the API and can't find anything about this function. First I tried `IEnumerable<T>`. Here is the code:\r\n``` csharp\r\nusing System.Collections.Generic;\r\nusing System.Text.Json;\r\n\r\nnamespace dotnet30test\r\n{\r\n    class Program2\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var obj = new TestSerializationObj2\r\n            {\r\n                Names = new HashSet<string> { \"1\", \"2\" }\r\n            };\r\n            var sysContent = JsonSerializer.Serialize(obj, new JsonSerializerOptions { WriteIndented = true, });\r\n            var sysNewObj = JsonSerializer.Deserialize<TestSerializationObj>(sysContent);\r\n        }\r\n    }\r\n\r\n    public class TestSerializationObj2\r\n    {\r\n        public IEnumerable<string> Names { get; set; }\r\n    }\r\n}\r\n```\r\nThe `Names` property is forced to convert from `Hashset<string>` to `List<string>`, but it works successfully indeedly. \r\nAnd then I try the custom interface, it throws `JsonException`. What I think that needed is something like Json.NET's auto type name handling. Here is the code:\r\n``` csharp\r\nusing System;\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing NewtonJson = Newtonsoft.Json;\r\nusing SysJson = System.Text.Json;\r\n\r\nnamespace dotnet30test\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var obj = new TestSerializationObj\r\n            {\r\n                CustomObj = new DefaultCustom()\r\n            };\r\n\r\n            var newtonContent = NewtonJson.JsonConvert.SerializeObject(obj,\r\n                new NewtonJson.JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = NewtonJson.TypeNameHandling.Auto,\r\n                    Formatting = NewtonJson.Formatting.Indented\r\n                });\r\n            var newtonNewObj = NewtonJson.JsonConvert.DeserializeObject<TestSerializationObj>(newtonContent,\r\n                new NewtonJson.JsonSerializerSettings { TypeNameHandling = NewtonJson.TypeNameHandling.Auto }); // works\r\n\r\n            var sysContent = SysJson.JsonSerializer.Serialize(obj, new SysJson.JsonSerializerOptions { WriteIndented = true, });\r\n            var sysNewObj = SysJson.JsonSerializer.Deserialize<TestSerializationObj>(sysContent); // throws exception\r\n        }\r\n    }\r\n\r\n\r\n    public sealed class TestSerializationObj\r\n    {\r\n        public Dictionary<string, int> Dictionary { get; set; } = new Dictionary<string, int>() { [\"a\"] = 0, [\"b\"] = 1 };\r\n        public ICustom CustomObj { get; set; }\r\n    }\r\n\r\n    public class DefaultCustom : ICustom\r\n    {\r\n        public string Name { get; set; } = \"Default Implementation\";\r\n        public int Id { get; set; } = 300;\r\n    }\r\n\r\n    public interface ICustom\r\n    {\r\n        int Id { get; set; }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThanks!","Url":"https://github.com/dotnet/corefx/issues/41305","RelatedDescription":"Open issue \"System.Text.Json interface member deserialization handling\" (#41305)"},{"Id":"498009112","IsPullRequest":false,"CreatedAt":"2019-09-25T02:32:18","Actor":"Mutuduxf","Number":"41304","RawContent":null,"Title":"In async the System.Text.Json throw \"The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. LineNumber: 0 | BytePositionInLine: 0.\"","State":"closed","Body":"The code like this:\r\n```Charp\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        try\r\n        {\r\n            var type = typeof(TestModel);\r\n            var testModel = new TestModel {Id = Guid.NewGuid(), Name = \"Test\"};\r\n\r\n            await using var ms = new MemoryStream();\r\n            await JsonSerializer.SerializeAsync(ms, testModel, type);\r\n            var result = await JsonSerializer.DeserializeAsync(ms, type);\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            Console.WriteLine(e);\r\n            throw;\r\n        }\r\n    }\r\n}\r\n\r\npublic class TestModel\r\n{\r\n    public Guid Id { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/41304","RelatedDescription":"Closed issue \"In async the System.Text.Json throw \"The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. LineNumber: 0 | BytePositionInLine: 0.\"\" (#41304)"},{"Id":"497810620","IsPullRequest":true,"CreatedAt":"2019-09-25T01:50:50","Actor":"Dotnet-GitSync-Bot","Number":"41289","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corefx/pull/41289","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#41289)"},{"Id":"497977447","IsPullRequest":true,"CreatedAt":"2019-09-24T23:53:58","Actor":"GrabYourPitchforks","Number":"41302","RawContent":null,"Title":"Add unit tests for Utf8Span, react to Utf8String changes","State":"open","Body":"Ref asm + unit tests for https://github.com/dotnet/coreclr/pull/26711. This PR will not pass CI until that build makes its way from coreclr to corefx.","Url":"https://github.com/dotnet/corefx/pull/41302","RelatedDescription":"Open PR \"Add unit tests for Utf8Span, react to Utf8String changes\" (#41302)"},{"Id":"497970900","IsPullRequest":true,"CreatedAt":"2019-09-24T23:27:44","Actor":"ViktorHofer","Number":"41301","RawContent":null,"Title":"Update dotnet SDK to 3.0.100 + darc update","State":"open","Body":"Updating the dotnet SDK to the latest stable version 3.0.100.\r\n\r\ncc @danmosemsft @ericstj ","Url":"https://github.com/dotnet/corefx/pull/41301","RelatedDescription":"Open PR \"Update dotnet SDK to 3.0.100 + darc update\" (#41301)"},{"Id":"497730534","IsPullRequest":false,"CreatedAt":"2019-09-24T23:20:13","Actor":"eliashdezr","Number":"41283","RawContent":null,"Title":"System.Text.Json cannot serialize dictionary with deep values","State":"closed","Body":"Project to reproduce the error:\r\n[JsonDemo.zip](https://github.com/dotnet/corefx/files/3647718/JsonDemo.zip)\r\n\r\nUsing `.NET Core 3.0.100`\r\n\r\nError:\r\n```xml\r\nSystem.NotSupportedException: The collection type 'System.Collections.Generic.Dictionary`2[System.Int32,JsonDemo.Controllers.Root]' on 'JsonDemo.Controllers.RootTest.Roots' is not supported.\r\n   at System.Text.Json.JsonClassInfo.GetElementType(Type propertyType, Type parentType, MemberInfo memberInfo, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonClassInfo.CreateProperty(Type declaredPropertyType, Type runtimePropertyType, Type implementedPropertyType, PropertyInfo propertyInfo, Type parentClassType, JsonConverter converter, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonClassInfo.AddProperty(Type propertyType, PropertyInfo propertyInfo, Type classType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonClassInfo..ctor(Type type, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializerOptions.GetOrAddClass(Type classType)\r\n   at System.Text.Json.WriteStackFrame.Initialize(Type type, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.WriteAsyncCore(Stream utf8Json, Object value, Type inputType, JsonSerializerOptions options, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n\r\nUsing the `Newtonsoft` NuGet package and adding `AddNewtonsoftJson()` in `Startup.cs` worked. This is the expected result from the object that I'm trying to serialize:\r\n```json\r\n{\r\n    \"roots\": {\r\n        \"1\": {\r\n            \"rootId\": 1,\r\n            \"rootChildrens\": {\r\n                \"1\": {\r\n                    \"rootChildrenId\": 1,\r\n                    \"childrenDetails\": [{\r\n                            \"data\": \"Children One Data\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"2\": {\r\n                    \"rootChildrenId\": 2,\r\n                    \"childrenDetails\": [{\r\n                            \"data\": \"Children Two Data\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        \"2\": {\r\n            \"rootId\": 2,\r\n            \"rootChildrens\": {\r\n                \"3\": {\r\n                    \"rootChildrenId\": 3,\r\n                    \"childrenDetails\": [{\r\n                            \"data\": \"Children Three Data\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41283","RelatedDescription":"Closed issue \"System.Text.Json cannot serialize dictionary with deep values\" (#41283)"},{"Id":"497951159","IsPullRequest":false,"CreatedAt":"2019-09-24T22:57:42","Actor":"dynamiclynk","Number":"41298","RawContent":null,"Title":"NuGet: System.Collections.Concurrent targeting .NetCore,Version=5? preventing the library reference.","State":"closed","Body":"NuGet: System.Collections.Concurrent targeting .NetCore,Version=5? preventing the library reference.\r\n\r\n![image](https://user-images.githubusercontent.com/621804/65554412-160cd300-deef-11e9-9c21-f70caf93e852.png)\r\n","Url":"https://github.com/dotnet/corefx/issues/41298","RelatedDescription":"Closed issue \"NuGet: System.Collections.Concurrent targeting .NetCore,Version=5? preventing the library reference.\" (#41298)"},{"Id":"497957944","IsPullRequest":true,"CreatedAt":"2019-09-24T22:40:24","Actor":"bartonjs","Number":"41300","RawContent":null,"Title":"Exploration: Retry STATUS_UNSUCCESSFUL from CNG","State":"open","Body":"This is an attempt to address #37994, but since it's a very intermittent failure it's not really easy to say if the fix \"works\" or not.\r\n\r\nSuccess will be measured by seeing no failures in CI for a month or so.  If it doesn't work, we'll just back it out.","Url":"https://github.com/dotnet/corefx/pull/41300","RelatedDescription":"Open PR \"Exploration: Retry STATUS_UNSUCCESSFUL from CNG\" (#41300)"},{"Id":"497955078","IsPullRequest":false,"CreatedAt":"2019-09-24T22:30:39","Actor":"terrajobst","Number":"41299","RawContent":null,"Title":"Indenting and unindenting JSON should be easier","State":"open","Body":"Imagine I need to unindent some raw JSON (for example, for error messages and logging). There is no simple way to do that; instead, I ended up writing the following, which seems a bit clunky:\r\n\r\n```C#\r\npublic static string ChangeIndentation(string value, bool indented)\r\n{\r\n    using (var stream = new MemoryStream())\r\n    {\r\n        var options = new JsonWriterOptions { Indented = indented };\r\n\r\n        using (var writer = new Utf8JsonWriter(stream, options))\r\n        {\r\n            using var document = JsonDocument.Parse(value);\r\n            document.WriteTo(writer);\r\n        }\r\n\r\n        stream.Position = 0;\r\n\r\n        using (var reader = new StreamReader(stream))\r\n            return reader.ReadToEnd();\r\n    }\r\n}\r\n```\r\n\r\n### Proposal\r\n\r\n```C#\r\nnamespace System.Text.Json\r\n{\r\n    partial class JsonDocument\r\n    {\r\n        public override string ToString() => ToString(indented: true);\r\n        public string ToString(bool indented);\r\n    }\r\n}\r\n```\r\n\r\n### Usage\r\n\r\n```C#\r\npublic static string ChangeIndentation(string value, bool indented)\r\n{\r\n    using var document = JsonDocument.Parse(value);\r\n    return document.ToString(indented);\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/41299","RelatedDescription":"Open issue \"Indenting and unindenting JSON should be easier\" (#41299)"},{"Id":"497925418","IsPullRequest":true,"CreatedAt":"2019-09-24T21:08:59","Actor":"scalablecory","Number":"41295","RawContent":null,"Title":"HTTP2: Support receiving dynamic table headers","State":"open","Body":"Dynamic table code was actually fixed/tested in 3.0, but the feature was left disabled. This re-enables it and adds functional tests to verify it. Resolves #41208 \r\n\r\nA future change might add an API to let users configure the dynamic table size. Currently it is kept at default of 4KiB.","Url":"https://github.com/dotnet/corefx/pull/41295","RelatedDescription":"Open PR \"HTTP2: Support receiving dynamic table headers\" (#41295)"},{"Id":"497922093","IsPullRequest":true,"CreatedAt":"2019-09-24T21:01:05","Actor":"Anipik","Number":"41294","RawContent":null,"Title":"freezing the version for the System.IO.Pipes.AccessControl","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/40978\r\n","Url":"https://github.com/dotnet/corefx/pull/41294","RelatedDescription":"Open PR \"freezing the version for the System.IO.Pipes.AccessControl\" (#41294)"},{"Id":"497749415","IsPullRequest":true,"CreatedAt":"2019-09-24T19:54:37","Actor":"oleggolovkovuss","Number":"41285","RawContent":null,"Title":"Fixing outdated method name","State":"closed","Body":".Net Core release notes lead to this sample for JSON serializing, it's using non-existent static `ToString` method though, this changes updates the docs","Url":"https://github.com/dotnet/corefx/pull/41285","RelatedDescription":"Closed or merged PR \"Fixing outdated method name\" (#41285)"},{"Id":"497863217","IsPullRequest":true,"CreatedAt":"2019-09-24T18:49:55","Actor":"Anipik","Number":"41293","RawContent":null,"Title":"Updating branding to 3.0.1-servicing","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/41293","RelatedDescription":"Open PR \"Updating branding to 3.0.1-servicing\" (#41293)"},{"Id":"497848997","IsPullRequest":false,"CreatedAt":"2019-09-24T18:20:01","Actor":"endofunk","Number":"41292","RawContent":null,"Title":"DrawString render issue with .Net Core 3.0","State":"open","Body":"### **Related to:** https://www.nuget.org/packages/System.Drawing.Common/ (4.6.0)\r\n\r\nWith everything else being equal; simply upgrading a project from .Net Core 2.2 to .Net Core 3.0 results in a new `DrawString` render issue; downgrading from 3.0 to 2.2 resolves this? (see attached screen shots)\r\n\r\n**Note:** \r\nI tried a number of different font families including `GenericSansSerif`, `GenericSerif` and `GenericMonospace` -- all result in the same render issue. It works as expected on .Net Core 2.2 but not on .Net Core 3.0\r\n\r\n**.Dot Net 2.2** \r\n![dotnetcore22](https://user-images.githubusercontent.com/22223342/65538811-70665d80-df08-11e9-9a4e-90301233206f.png)\r\n\r\n**.Dot Net 3.0** \r\n![dotnetcore30](https://user-images.githubusercontent.com/22223342/65538813-72302100-df08-11e9-9732-5a98379a9a43.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41292","RelatedDescription":"Open issue \"DrawString render issue with .Net Core 3.0\" (#41292)"},{"Id":"497832095","IsPullRequest":false,"CreatedAt":"2019-09-24T17:43:41","Actor":"GrabYourPitchforks","Number":"41291","RawContent":null,"Title":"Missing API: Guid.TryWriteBytes(..., out int bytesWritten)","State":"open","Body":"Per API review, our `Guid.TryWriteBytes` method should have an overload which outs the number of bytes written to the destination buffer.\r\n\r\n@tannergooding - you had also mentioned adding a similar API to `decimal`, but I don't see offhand which overload would be affected.\r\n\r\n/cc @bartonjs","Url":"https://github.com/dotnet/corefx/issues/41291","RelatedDescription":"Open issue \"Missing API: Guid.TryWriteBytes(..., out int bytesWritten)\" (#41291)"},{"Id":"497829564","IsPullRequest":false,"CreatedAt":"2019-09-24T17:42:59","Actor":"Corys9","Number":"41290","RawContent":null,"Title":"JsonSerializer.Deserialize<dynamic> is not producing a dynamic","State":"closed","Body":"JsonSerializer.Deserialize&lt;dynamic&gt; does not produce a dynamic, but System.Text.Json.JsonElement instead. Is this going to be supported in the near future?","Url":"https://github.com/dotnet/corefx/issues/41290","RelatedDescription":"Closed issue \"JsonSerializer.Deserialize<dynamic> is not producing a dynamic\" (#41290)"},{"Id":"497800447","IsPullRequest":false,"CreatedAt":"2019-09-24T16:53:36","Actor":"GammaFour","Number":"41288","RawContent":null,"Title":"Throws an exception on a simple JSON structure return.","State":"closed","Body":"I don't have time to figure out exactly what's buggy about the **System.Text.JSON**, but this code was working in .NET Core 2.2.\r\n\r\n```\r\n            return this.Ok(\r\n                new\r\n                {\r\n                    deletedEntityTrees,\r\n                    entities,\r\n                    entityTrees,\r\n                    users,\r\n                });\r\n\r\n```\r\nNow I get:\r\n\r\n> fail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n>       Connection id \"0HLQ11IPL386G\", Request id \"0HLQ11IPL386G:00000001\": An unhandled exception was thrown by the application.\r\n> System.Text.Json.JsonException: A possible object cycle was detected which is not supported. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32.\r\n>    at System.Text.Json.ThrowHelper.ThrowInvalidOperationException_SerializerCycleDetected(Int32 maxDepth)\r\n>    at System.Text.Json.JsonSerializer.Write(Utf8JsonWriter writer, Int32 originalWriterDepth, Int32 flushThreshold, JsonSerializerOptions options, WriteStack& state)\r\n>    at System.Text.Json.JsonSerializer.WriteAsyncCore(Stream utf8Json, Object value, Type inputType, JsonSerializerOptions options, CancellationToken cancellationToken)\r\n>    at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n>    at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n>    at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n>    at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n>    at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\n> \r\n\r\nWhen I switch back to NewtonSoft, it works just like it did before the upgrade to .NET Core 3.0.","Url":"https://github.com/dotnet/corefx/issues/41288","RelatedDescription":"Closed issue \"Throws an exception on a simple JSON structure return.\" (#41288)"},{"Id":"497662848","IsPullRequest":false,"CreatedAt":"2019-09-24T16:48:17","Actor":"nicecatch","Number":"41281","RawContent":null,"Title":"System.Text.Json deserializes all properties to null","State":"closed","Body":"I have a class that looks like this\r\n\r\n```\r\n    public class ApartmentCreatedEvent\r\n    {\r\n        protected ApartmentCreatedEvent() { }\r\n        public ApartmentCreatedEvent(string creatorId, string name, DateTimeOffset dateTime)\r\n        {\r\n            Name = name;\r\n            CreatorId = creatorId;\r\n            DateTime = dateTime;\r\n        }\r\n\r\n        public string CreatorId { get; }\r\n        public DateTimeOffset DateTime { get; }\r\n        public string Name { get; }\r\n    }\r\n```\r\n\r\nI had to create a parameterless constructor because I was getting an exception that it couldn't deserialize without it\r\n\r\nRunning this code:\r\n\r\n```\r\n            var event  = new ApartmentCreatedEvent(\"creatorId\", \"name\", DateTimeOffset.UtcNow);\r\n            var ser = JsonSerializer.Serialize(event  );\r\n            var des = JsonSerializer.Deserialize(ser, typeof(ApartmentCreatedEvent));\r\n```\r\ngives me back an object with all the properties set to default (null, and DateTimeOffset.MinValue)","Url":"https://github.com/dotnet/corefx/issues/41281","RelatedDescription":"Closed issue \"System.Text.Json deserializes all properties to null\" (#41281)"},{"Id":"497788399","IsPullRequest":false,"CreatedAt":"2019-09-24T16:13:37","Actor":"nick2893","Number":"41287","RawContent":null,"Title":"System.Numerics.Vectors and System.Threading.Tasks.Extensions still in preview?","State":"open","Body":"With the release of .NET Core 3.0, I thought these would become official releases as well.  What are the plans to make these two packages \"final\" releases?","Url":"https://github.com/dotnet/corefx/issues/41287","RelatedDescription":"Open issue \"System.Numerics.Vectors and System.Threading.Tasks.Extensions still in preview?\" (#41287)"},{"Id":"497741152","IsPullRequest":false,"CreatedAt":"2019-09-24T14:52:36","Actor":"jormenjanssen","Number":"41284","RawContent":null,"Title":"Skip codepath Environment.OSVersion.Platform on publish trimmed with linker","State":"open","Body":"The publish trimmed feature in .NET core 3 is not trimming code on specific code paths (see example below) which are  unable to get hit when published with specific runtime-rid e.g. windows and readytorun\r\n\r\nAnother approach would be #if but this has several disadvantages in Visual Studio etc.\r\n\r\n```csharp\r\npublic static IServiceCollection AddSocketCAN(this IServiceCollection serviceCollection)\r\n        {\r\n            if (Environment.OSVersion.Platform != PlatformID.Unix)\r\n                return serviceCollection;\r\n\r\n            serviceCollection\r\n                .AddSingleton<ICanFactory, SocketCanFactory>()\r\n                .AddSingleton<ISafetyRequestProvider, UnixDiagramSafetyRequestProvider>();\r\n            \r\n            return serviceCollection;\r\n        }\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41284","RelatedDescription":"Open issue \"Skip codepath Environment.OSVersion.Platform on publish trimmed with linker\" (#41284)"},{"Id":"497600022","IsPullRequest":true,"CreatedAt":"2019-09-24T13:49:42","Actor":"ViktorHofer","Number":"41277","RawContent":null,"Title":"Replace RS4 with Client19H1 in CI","State":"closed","Body":"For a short time (https://github.com/dotnet/core-eng/issues/7464) we will not have multi-lang coverage in our CI but I prefer that over failing builds because of an underlying crypto issue in RS4: https://github.com/dotnet/corefx/pull/40761#issuecomment-527474695\r\n\r\ncc @safern @bartonjs ","Url":"https://github.com/dotnet/corefx/pull/41277","RelatedDescription":"Closed or merged PR \"Replace RS4 with Client19H1 in CI\" (#41277)"},{"Id":"497677945","IsPullRequest":false,"CreatedAt":"2019-09-24T13:08:38","Actor":"niemyjski","Number":"41282","RawContent":null,"Title":"Synchronous deserialize and serialize to a stream with JsonSerializer.","State":"open","Body":"We have a serializer interface (https://github.com/FoundatioFx/Foundatio/blob/master/src/Foundatio/Serializer/ISerializer.cs#L6-L9) which takes a stream as the input and we have extensions that work from it. In our use cases the payloads are usually very small and fit inside normal buffer lengths. Now I totally understand async io and the benefits but we use in memory streams for our serialization and we don't want to do async serialization as it totally kills performance and really complicates some scenarios (esp in messaging handlers at scale). Can you add overloads for this? It would make  it a little bit easier for this use case?","Url":"https://github.com/dotnet/corefx/issues/41282","RelatedDescription":"Open issue \"Synchronous deserialize and serialize to a stream with JsonSerializer.\" (#41282)"},{"Id":"497763924","IsPullRequest":false,"CreatedAt":"2019-09-24T12:48:42","Actor":"uffebjorklund","Number":"41286","RawContent":null,"Title":"AssemblyLoadContext crash when collectible assembly use XmlSerializer","State":"open","Body":"When creating a collectible AssemblyLoadContext and then use `System.Xml.Serialization.XmlSerializer` inside of a collectible assembly you will get a crash.\r\n\r\nI have a repro project: https://github.com/uffebjorklund/AssemblyLoadContextBug\r\n\r\nHave tried a few different things\r\n - If creating the ALC as `collectible = false` there is no crash\r\n - If the `XmlSerializer` code is removed from the collectible assembly there is no crash\r\n - The crash will occur regardless of using `netstandard2.0` or `netstandard2.1` on the collectible assembly\r\n\r\n## Exception\r\n`A non-collectible assembly may not reference a collectible assembly`\r\n\r\n## Stacktrace\r\n```\r\nat System.Reflection.Emit.ModuleBuilder.GetTypeRef(QCallModule module, String strFullName, QCallModule refedModule, String strRefedModuleFileName, Int32 tkResolution)\r\nat System.Reflection.Emit.ModuleBuilder.GetTypeRefNested(Type type, Module refedModule, String strRefedModuleFileName)\r\nat System.Reflection.Emit.ModuleBuilder.GetTypeTokenWorkerNoLock(Type type, Boolean getGenericDefinition)\r\nat System.Reflection.Emit.ModuleBuilder.GetTypeTokenInternal(Type type, Boolean getGenericDefinition)\r\nat System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, Type cls)\r\nat System.Xml.Serialization.CodeGenerator.Castclass(Type target)\r\nat System.Xml.Serialization.CodeGenerator.InternalConvert(Type source, Type target, Boolean isAddress)\r\nat System.Xml.Serialization.SourceInfo.InternalLoad(Type elementType, Boolean asAddress)\r\nat System.Xml.Serialization.XmlSerializationWriterILGen.WriteElement(SourceInfo source, ElementAccessor element, String arrayName, Boolean writeAccessor)\r\nat System.Xml.Serialization.XmlSerializationWriterILGen.WriteElements(SourceInfo source, String enumSource, ElementAccessor[] elements, TextAccessor text, ChoiceIdentifierAccessor choice, String arrayName, Boolean writeAccessors, Boolean isNullable)\r\nat System.Xml.Serialization.XmlSerializationWriterILGen.WriteMember(SourceInfo source, String choiceSource, ElementAccessor[] elements, TextAccessor text, ChoiceIdentifierAccessor choice, TypeDesc memberTypeDesc, Boolean writeAccessors)\r\nat System.Xml.Serialization.XmlSerializationWriterILGen.GenerateTypeElement(XmlTypeMapping xmlTypeMapping)\r\nat System.Xml.Serialization.XmlSerializationWriterILGen.GenerateElement(XmlMapping xmlMapping)\r\nat System.Xml.Serialization.TempAssembly.GenerateRefEmitAssembly(XmlMapping[] xmlMappings, Type[] types, String defaultNamespace)\r\nat System.Xml.Serialization.TempAssembly..ctor(XmlMapping[] xmlMappings, Type[] types, String defaultNamespace, String location)\r\nat System.Xml.Serialization.XmlSerializer.GenerateTempAssembly(XmlMapping xmlMapping, Type type, String defaultNamespace, String location)\r\nat System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n```\r\n\r\n## dotnet --info\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.13-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.301 [/usr/local/share/dotnet/sdk]\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.1.400 [/usr/local/share/dotnet/sdk]\r\n  2.1.401 [/usr/local/share/dotnet/sdk]\r\n  2.1.403 [/usr/local/share/dotnet/sdk]\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.100-preview3-009430 [/usr/local/share/dotnet/sdk]\r\n  2.2.101 [/usr/local/share/dotnet/sdk]\r\n  2.2.102 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n  2.2.106 [/usr/local/share/dotnet/sdk]\r\n  2.2.203 [/usr/local/share/dotnet/sdk]\r\n  2.2.300 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-alpha1-009708 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview3-010431 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview8-013656 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview9-014004 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35497 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10062 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35497 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10062 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19405.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview9.19424.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27014-02 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview1-27029-03 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview9-19423-09 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/corefx/issues/41286","RelatedDescription":"Open issue \"AssemblyLoadContext crash when collectible assembly use XmlSerializer\" (#41286)"},{"Id":"497605115","IsPullRequest":false,"CreatedAt":"2019-09-24T12:40:49","Actor":"andriysavin","Number":"41278","RawContent":null,"Title":"Path.GetPathRoot should have NotNullIfNotNull(\"path\")","State":"closed","Body":"Path.GetPathRoot is currently [defined](https://github.com/dotnet/corefx/blob/d58a51f911efb3c98beca21b6cf08cc703424fdf/src/Common/src/CoreLib/System/IO/Path.Windows.cs#L214) as this: \r\n```csharp\r\npublic static string? GetPathRoot(string? path)\r\n```\r\nAnd the docs state: \r\n\r\n> The resulting string is null if path is null\r\n\r\nHowever, nullable reference types annotations on this method don't match the docs and make think the compiler/analyzer that it can return `null` under any conditions. So even if I check the path for `null` I can't use returned value without checking it for `null` as well or using `!` operator.\r\n\r\nThus, I believe this method should be annotated with \r\n```csharp\r\n[return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull(\"path\")]\r\n```","Url":"https://github.com/dotnet/corefx/issues/41278","RelatedDescription":"Closed issue \"Path.GetPathRoot should have NotNullIfNotNull(\"path\")\" (#41278)"},{"Id":"497648537","IsPullRequest":true,"CreatedAt":"2019-09-24T12:12:29","Actor":"dotnet-maestro[bot]","Number":"41280","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190923.2\r\n- **Date Produced**: 9/24/2019 12:44 AM\r\n- **Commit**: 2342c8231f1b1b3c17baaefbd0357aa4f228f5d1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19473.2\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19473.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19473.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41280","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/coreclr\" (#41280)"},{"Id":"497607933","IsPullRequest":true,"CreatedAt":"2019-09-24T10:46:12","Actor":"ViktorHofer","Number":"41279","RawContent":null,"Title":"Disable UWP pkg publishing to fix official builds","State":"closed","Body":"Fixes regression introduced in https://github.com/dotnet/corefx/commit/49ba6ef9cb8120c87eae636fc41b79e07e88e707. We don't publish packages anymore in UWP therefore we need to disable the upload step.\r\n\r\n@safern not sure if that's possible, would a directory exists check also work in the upload artifacts condition?\r\n\r\nI will merge this after I validated that legs are en queued correctly to unblock failing official builds.","Url":"https://github.com/dotnet/corefx/pull/41279","RelatedDescription":"Closed or merged PR \"Disable UWP pkg publishing to fix official builds\" (#41279)"},{"Id":"497492242","IsPullRequest":false,"CreatedAt":"2019-09-24T06:48:04","Actor":"kristofferpagels","Number":"41275","RawContent":null,"Title":"SocketException when sending on httpclient after upgrading to core 2.2","State":"open","Body":"Hi,\r\n\r\nWe are in the process of upgrading from DotNetFramework 4.6.2 to DotNetCore 2.2. After upgrading a lot of our tests are failing when executing a send on a httpclient. It seems to be timing related as the same http requests are working fine if executed by themselves. Any help would be deeply appreciated.\r\n\r\nException details:\r\n```csharp\r\nSystem.Net.Http.HttpRequestException : An error occurred while sending the request.\r\n---- System.IO.IOException : Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request.\r\n-------- System.Net.Sockets.SocketException : The I/O operation has been aborted because of either a thread exit or an application request\r\n   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithNtConnectionAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at MyTest.Test.MyTest.RunTest(HttpClient httpClient) in C:\\workinprogress\\20190924 httpclienterror\\MyTest\\MyTest\\MyTest.cs:line 37\r\n   at MyTest.Test.MyTest.GIVEN_WithStaticHttpClient() in C:\\workinprogress\\20190924 httpclienterror\\MyTest\\MyTest\\MyTest.cs:line 16\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error)\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.GetResult(Int16 token)\r\n   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n----- Inner Stack Trace -----\r\n```\r\n\r\nWe have created a sample to reproduce the error. It fails when sending the second http request:\r\n```csharp\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\nusing Xunit;\r\n\r\nnamespace MyTest.Test\r\n{\r\n    public class MyTest\r\n    {\r\n        private static readonly HttpClient _httpClient = new HttpClient();\r\n\r\n        [Fact]\r\n        public async Task GIVEN_WithStaticHttpClient()\r\n        {\r\n            await RunTest(_httpClient);\r\n        }\r\n\r\n        [Fact]\r\n        public async Task GIVEN_WithNewHttpClient()\r\n        {\r\n            using (var httpClient = new HttpClient())\r\n            {\r\n                await RunTest(httpClient);\r\n            }\r\n        }\r\n\r\n        private async Task RunTest(HttpClient httpClient)\r\n        {\r\n            var serviceUri = new Uri(\"http://httpstat.us/200\");\r\n\r\n            var response = await httpClient.SendAsync(new HttpRequestMessage(HttpMethod.Post, serviceUri));\r\n            response.EnsureSuccessStatusCode();\r\n\r\n            DoSomeAction();\r\n\r\n            response = await httpClient.SendAsync(new HttpRequestMessage(HttpMethod.Put, serviceUri) { Content = new StringContent(\"my message\") });\r\n            response.EnsureSuccessStatusCode();\r\n        }\r\n\r\n        private void DoSomeAction()\r\n        {\r\n            var process = new Process\r\n            {\r\n                StartInfo = new ProcessStartInfo\r\n                {\r\n                    CreateNoWindow = true,\r\n                    FileName = \"ping.exe\",\r\n                    UseShellExecute = false\r\n                }\r\n            };\r\n\r\n            process.Start();\r\n\r\n            process.WaitForExit();\r\n            process.Close();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe csproj file for the project contains the following nuget packages:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.3.0\" />    \r\n    <PackageReference Include=\"xunit\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.1\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41275","RelatedDescription":"Open issue \"SocketException when sending on httpclient after upgrading to core 2.2\" (#41275)"},{"Id":"497929640","IsPullRequest":false,"CreatedAt":"2019-09-16T01:42:55","Actor":"Crono1981","Number":"41296","RawContent":null,"Title":"Why is `MemberExpression.Member` ownership not resolved the same way reflection does?","State":"open","Body":"Consider the following code:\r\n\r\n```cs\r\nusing System;\r\nusing System.Linq.Expressions;\r\n\r\npublic class Program\r\n{\r\n\tpublic static void Main()\r\n\t{\r\n\t\tvar propFromReflection = typeof(Bar).GetProperty(\"Property\");\r\n\r\n\t\tExpression<Func<Bar, int>> expression = bar => bar.Property;\r\n\t\tvar memberExpr = expression.Body as MemberExpression;\r\n\r\n\t\tvar propFromExpression = memberExpr.Member;\r\n\r\n\t\tConsole.WriteLine(\"Reflection says \" + propFromReflection.DeclaringType.Name);\r\n\t\tConsole.WriteLine(\"Expression says \" + propFromExpression.DeclaringType.Name);\r\n\t}\r\n}\r\n\r\npublic abstract class Foo\r\n{\r\n\tpublic abstract int Property { get; set; }\r\n}\r\n\r\npublic class Bar : Foo\r\n{\r\n\tpublic override int Property { get; set; }\r\n}\r\n```\r\n\r\nThe output in console will state that\r\n\r\n> Reflection says Bar\r\n> Expression says Foo\r\n\r\nWhy are they different? How come the Expression engine won't get the exact `MemberInfo` instance used within the lambda expression? Technically it has everything it needs to do so, doesn't it?","Url":"https://github.com/dotnet/corefx/issues/41296","RelatedDescription":"Open issue \"Why is `MemberExpression.Member` ownership not resolved the same way reflection does?\" (#41296)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"497988181","IsPullRequest":true,"CreatedAt":"2019-09-25T05:14:19","Actor":"JoeRobich","Number":"38839","RawContent":null,"Title":"Update required version of VS in Building doc","State":"closed","Body":"Now that we've merged 16.3-vs-deps back, we should update the required version of VS.","Url":"https://github.com/dotnet/roslyn/pull/38839","RelatedDescription":"Closed or merged PR \"Update required version of VS in Building doc\" (#38839)"},{"Id":"497912435","IsPullRequest":true,"CreatedAt":"2019-09-25T03:57:51","Actor":"genlu","Number":"38831","RawContent":null,"Title":"Change icon for target type completion filter","State":"closed","Body":"Fix #37531 \r\n\r\n![image](https://user-images.githubusercontent.com/788783/65548648-ae478f80-ded0-11e9-90b9-083cd4792087.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/38831","RelatedDescription":"Closed or merged PR \"Change icon for target type completion filter\" (#38831)"},{"Id":"497950648","IsPullRequest":true,"CreatedAt":"2019-09-25T03:55:53","Actor":"genlu","Number":"38834","RawContent":null,"Title":"Merge dev16.4 preview1-vs-deps into dev16.4 preview1","State":"closed","Body":"Per @jaredpar, our policy for codeflow is the following:\r\n\t\r\n1. Developers should always be able to build master in dotnet/roslyn with a publicly available version of VS. \r\n2. The version of VS should preferably be an RTM one but can be a preview if circumstances warrant it.\r\n\r\nNow that 16.4 Preview 1 is out, I'd like to get vs-deps flows back so all our changes related to completion are all in the same branch, which will make it easier for us to make further code change in this area.\r\n\r\n@dotnet/roslyn-infrastructure Please let me know if it's OK to do this, otherwise I will probably need to cherry pick those changes manually.","Url":"https://github.com/dotnet/roslyn/pull/38834","RelatedDescription":"Closed or merged PR \"Merge dev16.4 preview1-vs-deps into dev16.4 preview1\" (#38834)"},{"Id":"497989930","IsPullRequest":true,"CreatedAt":"2019-09-25T00:47:01","Actor":"CyrusNajmabadi","Number":"38841","RawContent":null,"Title":"Fix crash that would happen when renaming in mixed f#/c# project.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/28474","Url":"https://github.com/dotnet/roslyn/pull/38841","RelatedDescription":"Open PR \"Fix crash that would happen when renaming in mixed f#/c# project.\" (#38841)"},{"Id":"497989251","IsPullRequest":false,"CreatedAt":"2019-09-25T00:43:56","Actor":"CyrusNajmabadi","Number":"38840","RawContent":null,"Title":"Test output contains hundreds of useless messages.","State":"open","Body":"Messages are of the form:\r\n\r\n```\r\n[9/24/2019 5:42:57.705 PM Informational] Updating view 437433286\r\n[9/24/2019 5:42:57.710 PM Informational] Updating view 437433286\r\n[9/24/2019 5:42:58.251 PM Informational] [xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.1-pre.build.4059 (32-bit Desktop .NET 4.0.30319.42000)\r\n[9/24/2019 5:42:58.783 PM Informational] [xUnit.net 00:00:00.53]   Starting:    Microsoft.CodeAnalysis.EditorFeatures2.UnitTests\r\n[9/24/2019 5:43:00.080 PM Informational] Trying to update view 437433286\r\n[9/24/2019 5:43:00.080 PM Informational] Updating view 437433286\r\n[9/24/2019 5:43:00.135 PM Informational] Updating view 437433286\r\n```\r\n\r\nLooks like someone may have left in unintentional debug spew, causing all these pointless \"updating view\" messages to go into the output log.","Url":"https://github.com/dotnet/roslyn/issues/38840","RelatedDescription":"Open issue \"Test output contains hundreds of useless messages.\" (#38840)"},{"Id":"497963052","IsPullRequest":true,"CreatedAt":"2019-09-25T00:16:22","Actor":"mavasani","Number":"38835","RawContent":null,"Title":"Fix an RPS regression where we are eagerly loading all assemblies wit…","State":"closed","Body":"…h ITableColumnDefinition implementations\r\n\r\nRecent change #37802 to enable new containing type and containing member colums removed the perf optimization done in #36562 to ensure that we do not eagerly load all assemblies that contain ITableColumnDefinition implementations. This caused an RPS regression, which is fixed by this PR.","Url":"https://github.com/dotnet/roslyn/pull/38835","RelatedDescription":"Closed or merged PR \"Fix an RPS regression where we are eagerly loading all assemblies wit…\" (#38835)"},{"Id":"497979428","IsPullRequest":true,"CreatedAt":"2019-09-25T00:02:14","Actor":"dotnet-bot","Number":"38838","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38838","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#38838)"},{"Id":"497979241","IsPullRequest":true,"CreatedAt":"2019-09-25T00:01:27","Actor":"dotnet-bot","Number":"38837","RawContent":null,"Title":"Merge release/dev16.4-preview1-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.4-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38837","RelatedDescription":"Open PR \"Merge release/dev16.4-preview1-vs-deps to master-vs-deps\" (#38837)"},{"Id":"497968828","IsPullRequest":false,"CreatedAt":"2019-09-24T23:48:51","Actor":"agocke","Number":"38836","RawContent":null,"Title":"`is object` is not considered a \"pure\" null test","State":"closed","Body":"```C#\r\n\r\nusing System;\r\n#nullable enable\r\npublic class C {\r\n    public void M(String s) {\r\n        if (s is object) s.ToString();\r\n        \r\n        s.ToCharArray(); // no warning here?\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38836","RelatedDescription":"Closed issue \"`is object` is not considered a \"pure\" null test\" (#38836)"},{"Id":"497925693","IsPullRequest":true,"CreatedAt":"2019-09-24T21:09:41","Actor":"dibarbet","Number":"38833","RawContent":null,"Title":"Pass the actual code action span to the server when calculating code …","State":"open","Body":"…actions.\r\n\r\nPreviously, liveshare was computing the diagnostics on the code action location and passing the diagnostic's span to the server.  This caused code actions that expect a caret position to never work if there was another diagnostic at the same location (e.g. move type to file, I've fixed that in https://github.com/dotnet/roslyn/pull/38787).\r\n\r\nEither way, we shouldn't be modifying the user specified span.","Url":"https://github.com/dotnet/roslyn/pull/38833","RelatedDescription":"Open PR \"Pass the actual code action span to the server when calculating code …\" (#38833)"},{"Id":"497921154","IsPullRequest":true,"CreatedAt":"2019-09-24T20:58:53","Actor":"CyrusNajmabadi","Number":"38832","RawContent":null,"Title":"Map string offsets to columns to ensure proper tab indentation.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/38819","Url":"https://github.com/dotnet/roslyn/pull/38832","RelatedDescription":"Open PR \"Map string offsets to columns to ensure proper tab indentation.\" (#38832)"},{"Id":"497643723","IsPullRequest":true,"CreatedAt":"2019-09-24T20:30:07","Actor":"dotnet-bot","Number":"38814","RawContent":null,"Title":"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps\ngit reset --hard upstream/release/dev16.4-preview1-vs-deps\ngit merge upstream/release/dev16.4-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38814","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps\" (#38814)"},{"Id":"497643796","IsPullRequest":true,"CreatedAt":"2019-09-24T20:00:07","Actor":"dotnet-bot","Number":"38815","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38815","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#38815)"},{"Id":"497886345","IsPullRequest":false,"CreatedAt":"2019-09-24T19:41:15","Actor":"jcouv","Number":"38830","RawContent":null,"Title":"Test plan for \"function pointers\"","State":"open","Body":"- [Proposal](https://github.com/dotnet/csharplang/blob/master/proposals/function-pointers.md)\r\n- [Championed issue](https://github.com/dotnet/csharplang/issues/191)","Url":"https://github.com/dotnet/roslyn/issues/38830","RelatedDescription":"Open issue \"Test plan for \"function pointers\"\" (#38830)"},{"Id":"497883734","IsPullRequest":true,"CreatedAt":"2019-09-24T19:35:18","Actor":"nnpcYvIVl","Number":"38829","RawContent":null,"Title":"Update AnalysisContextInfoTests.cs","State":"open","Body":"Spelling fix","Url":"https://github.com/dotnet/roslyn/pull/38829","RelatedDescription":"Open PR \"Update AnalysisContextInfoTests.cs\" (#38829)"},{"Id":"497881788","IsPullRequest":true,"CreatedAt":"2019-09-24T19:30:50","Actor":"nnpcYvIVl","Number":"38828","RawContent":null,"Title":"Update Binder_Lookup.vb","State":"open","Body":"Spelling fix","Url":"https://github.com/dotnet/roslyn/pull/38828","RelatedDescription":"Open PR \"Update Binder_Lookup.vb\" (#38828)"},{"Id":"497881308","IsPullRequest":false,"CreatedAt":"2019-09-24T19:29:49","Actor":"JiriCepelkaFirstLineSoftware","Number":"38827","RawContent":null,"Title":"Add support for SuppressMessageAttribute.MessageId ","State":"open","Body":"There is no option to avoid consequent violation to suppressed rule applied to method. To do so analyzers should support [_MessageId_](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.codeanalysis.suppressmessageattribute.messageid?view=netframework-4.8#System_Diagnostics_CodeAnalysis_SuppressMessageAttribute_MessageId) property.\r\n\r\n    [SuppressMessage(\"SomeCat\", \"SomeRule\")]\r\n    void SomeMethod()\r\n    {\r\n     // line violating SomeRule\r\n    } \r\n\r\nRelevant articles:\r\n1. SuppressMessageAttribute Class/[Examples](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.codeanalysis.suppressmessageattribute?view=netframework-4.8#examples)\r\n2. Suppress code analysis warnings/[Suppress selective violations within a method body](https://docs.microsoft.com/en-us/visualstudio/code-quality/in-source-suppression-overview?view=vs-2019#suppress-selective-violations-within-a-method-body)\r\n\r\nFurther more if _MessageId_ is specified, _SuppressMessageAttribute_ is ignored, i.e. error is reported anyway (by _Managed Binary Analysis_).\r\n\r\n`[SuppressMessage(\"SomeCat\", \"SomeRule, MessageId = \"someVar\")]`\r\n\r\n_Pragma warning disable_ is not symbol based. Since using statements denotes code blocks, pragma can disable consequent violations also.","Url":"https://github.com/dotnet/roslyn/issues/38827","RelatedDescription":"Open issue \"Add support for SuppressMessageAttribute.MessageId \" (#38827)"},{"Id":"497880306","IsPullRequest":true,"CreatedAt":"2019-09-24T19:27:25","Actor":"nnpcYvIVl","Number":"38826","RawContent":null,"Title":"Update CompilerNuGetCheckerUtil.cs","State":"open","Body":"Spelling fixes","Url":"https://github.com/dotnet/roslyn/pull/38826","RelatedDescription":"Open PR \"Update CompilerNuGetCheckerUtil.cs\" (#38826)"},{"Id":"497879864","IsPullRequest":true,"CreatedAt":"2019-09-24T19:26:26","Actor":"dibarbet","Number":"38825","RawContent":null,"Title":"Fix server capabilities initialization and remove previous experiment…","State":"open","Body":"… iteration.\r\n\r\nSince we're going to test with the new tagger, remove the previous experiment implementation.","Url":"https://github.com/dotnet/roslyn/pull/38825","RelatedDescription":"Open PR \"Fix server capabilities initialization and remove previous experiment…\" (#38825)"},{"Id":"497878725","IsPullRequest":true,"CreatedAt":"2019-09-24T19:23:54","Actor":"nnpcYvIVl","Number":"38824","RawContent":null,"Title":"Update README.md","State":"open","Body":"Spelling fixes","Url":"https://github.com/dotnet/roslyn/pull/38824","RelatedDescription":"Open PR \"Update README.md\" (#38824)"},{"Id":"497876971","IsPullRequest":true,"CreatedAt":"2019-09-24T19:20:04","Actor":"nnpcYvIVl","Number":"38823","RawContent":null,"Title":"Update utils.ps1","State":"open","Body":"Spelling fixes","Url":"https://github.com/dotnet/roslyn/pull/38823","RelatedDescription":"Open PR \"Update utils.ps1\" (#38823)"},{"Id":"497861924","IsPullRequest":false,"CreatedAt":"2019-09-24T18:47:12","Actor":"Zenexer","Number":"38822","RawContent":null,"Title":"IDE1008 when constructor called without optional parameters inside incomplete lambda","State":"open","Body":"**Version Used**: .NET Core 3.0.100 (stable), Visual Studio Community 2019 version 16.3.0 (stable)\r\n\r\n``` csharp\r\nusing System;\r\n\r\nnamespace Test\r\n{\r\n    public class InstanceType\r\n    {\r\n        public InstanceType(object? a = null) { }\r\n    }\r\n\r\n    public static class Example\r\n    {\r\n        public static void Test()\r\n        {\r\n            Action lambda = () =>\r\n            {\r\n                var _ = new InstanceType();  // IDE1008: 'InstanceType' does not contain a constructor that takes that many arguments\r\n                var _ = 0  // CS1002: ; expected\r\n            };\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThere are two types of errors displayed in this code:\r\n\r\n* CS1002: This is expected.  My cursor is at the end of this line; I'm currently writing the remainder of the lambda.  I haven't completed the line yet.\r\n* IDE1008: This is unexpected even with my code in an incomplete state.\r\n\r\nFor this issue to occur, the following conditions have to be met:\r\n\r\n* The constructor definition must have at least one optional parameter.\r\n* The constructor call must omit at least one optional parameter.\r\n* The constructor call must be inside a statement lambda.\r\n* There must be an unterminated statement inside the lambda.\r\n\r\nThis is problematic in some scenarios.  For example, say I'm in the process of writing a lambda:\r\n\r\n``` csharp\r\nAction lambda = () =>\r\n{\r\n    var a = new InstanceType();\r\n\r\n    // ...\r\n\r\n    a.  // My cursor is here.\r\n};\r\n```\r\n\r\nI've written a line to instantiate an `InstanceType` and store it in `a`.  I want to do something with `a`, so I type `a.` expecting to see autocompletion options.  The autocompletion list will appear, but I'll also receive an error on my constructor call, which brings into question the validity of the autocompletion results--did I make a mistake that will cause `a` to be a different type from what I intended?  So I go back to fix the error before completing the line on which I'm currently working--but the error isn't real.\r\n\r\nNow, I understand that this is incomplete code, so errors are expected to appear.  However, Visual Studio normally seems to be quite intelligent about handling incomplete code; for example, this problem doesn't occur in normal method bodies, only statement lambdas.  The errors it does display typically make sense, such as when non-void lambda doesn't have a return statement yet.","Url":"https://github.com/dotnet/roslyn/issues/38822","RelatedDescription":"Open issue \"IDE1008 when constructor called without optional parameters inside incomplete lambda\" (#38822)"},{"Id":"497822392","IsPullRequest":false,"CreatedAt":"2019-09-24T17:23:44","Actor":"jcouv","Number":"38821","RawContent":null,"Title":"Test plan for \"native ints\"","State":"open","Body":"[Championed issue](https://github.com/dotnet/csharplang/issues/435)","Url":"https://github.com/dotnet/roslyn/issues/38821","RelatedDescription":"Open issue \"Test plan for \"native ints\"\" (#38821)"},{"Id":"497821536","IsPullRequest":false,"CreatedAt":"2019-09-24T17:22:04","Actor":"jcouv","Number":"38820","RawContent":null,"Title":"Test plan for \"lambda discard parameters\"","State":"open","Body":"[Championed issue](https://github.com/dotnet/csharplang/issues/111)","Url":"https://github.com/dotnet/roslyn/issues/38820","RelatedDescription":"Open issue \"Test plan for \"lambda discard parameters\"\" (#38820)"},{"Id":"497820033","IsPullRequest":false,"CreatedAt":"2019-09-24T17:18:48","Actor":"decriptor","Number":"38819","RawContent":null,"Title":"Code formatting breaks briefly after code is fixed","State":"open","Body":"**Version Used**: \r\nRoslyn (Language Service)\r\n3.3.1-beta3-19454-05+3b423bd305daf81076d4d7b105101361c2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Put a C# file into a non-compilable state briefly and fix it. ie, a simple if block condition\r\n2. Hit enter. The cursor isn't aligned to the expected location\r\n\r\n**Expected Behavior**:\r\nCorrect indentation\r\n\r\n**Actual Behavior**:\r\nOnly indents once\r\n\r\n\r\nTabs are used for all indenting in this file.\r\n\r\n![incorrect_formatting_csharp](https://user-images.githubusercontent.com/49821/65534575-ff4d8880-debc-11e9-8fa4-088cd82141f2.gif)\r\n","Url":"https://github.com/dotnet/roslyn/issues/38819","RelatedDescription":"Open issue \"Code formatting breaks briefly after code is fixed\" (#38819)"},{"Id":"497819891","IsPullRequest":true,"CreatedAt":"2019-09-24T17:18:29","Actor":"jcouv","Number":"38818","RawContent":null,"Title":"Update Language Feature Status","State":"open","Body":"@jaredpar @gafter Let me know if we need more updates. \r\n@jaredpar We'll need to start thinking about assigning buddies.","Url":"https://github.com/dotnet/roslyn/pull/38818","RelatedDescription":"Open PR \"Update Language Feature Status\" (#38818)"},{"Id":"497781805","IsPullRequest":false,"CreatedAt":"2019-09-24T16:01:09","Actor":"Nitin5acc","Number":"38817","RawContent":null,"Title":"roslyn analyzers (to check xml documentation) reporting error on build but later removed on live analysis","State":"open","Body":"**Version Used**: 2.9.2\r\n\r\n**Steps to Reproduce**:\r\nwe have an analyzer to check XML comments on methods. While building the solution, Analyzer reports errors wrongly. it shows an error even if there are XML comments. These errors are later removed upon opening the file -\r\n\r\n```\r\nprivate static void AnalyzeMethodsToCheckXmlComments(SyntaxNodeAnalysisContext syntaxNodeAnalysisContext)\r\n        {\r\n\r\n           var a= syntaxNodeAnalysisContext.Node.SyntaxTree?.Options.DocumentationMode\r\n                != DocumentationMode.None;\r\n            if (a) { \r\n                var node = syntaxNodeAnalysisContext.Node as MethodDeclarationSyntax;\r\n\r\n                if (node != null && !node.Modifiers.Any(SyntaxKind.PublicKeyword))\r\n                    return;\r\n\r\n                var xmlTrivia = node?.GetLeadingTrivia()\r\n                    .Select(i => i.GetStructure())\r\n                    .OfType<DocumentationCommentTriviaSyntax>()\r\n                    .FirstOrDefault();\r\n\r\n                if (xmlTrivia == null)\r\n                {\r\n                    syntaxNodeAnalysisContext.ReportDiagnostic(\r\n                        Diagnostic.Create(Rule, node?.Identifier.GetLocation(), \"Missing Xml Comments.\"));\r\n                    return;\r\n                }\r\n\r\n                var hasSummary = xmlTrivia.ChildNodes()\r\n                    .OfType<XmlElementSyntax>()\r\n                    .Any(i => i.StartTag.Name.ToString().Equals(\"summary\"));\r\n\r\n                if (!hasSummary)\r\n                {\r\n                    syntaxNodeAnalysisContext.ReportDiagnostic(\r\n                        Diagnostic.Create(Rule, node.Identifier.GetLocation(), \"Missing Summary in Xml Comments.\"));\r\n                    return;\r\n                }\r\n\r\n                var allParamNameAttributes = xmlTrivia.ChildNodes()\r\n                    .OfType<XmlElementSyntax>()\r\n                    .Where(i => i.StartTag.Name.ToString().Equals(\"param\"))\r\n                    .SelectMany(i => i.StartTag.Attributes.OfType<XmlNameAttributeSyntax>()).ToList();\r\n\r\n                foreach (var param in node.ParameterList.Parameters)\r\n                {\r\n                    var existsInXmlTrivia = allParamNameAttributes\r\n                        .Any(i => i.Identifier.ToString().Equals(param.Identifier.Text));\r\n\r\n                    if (existsInXmlTrivia)\r\n                    {\r\n                        continue;\r\n                    }\r\n                    syntaxNodeAnalysisContext.ReportDiagnostic(\r\n                        Diagnostic.Create(ParameterRule, param.GetLocation(), \"Parameter Not Documented in Xml Comments.\"));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n**Expected Behavior**:\r\nErrors should not show up on the build\r\n**Actual Behavior**:\r\n Errors show up on build but removed when the file is opened","Url":"https://github.com/dotnet/roslyn/issues/38817","RelatedDescription":"Open issue \"roslyn analyzers (to check xml documentation) reporting error on build but later removed on live analysis\" (#38817)"},{"Id":"497746928","IsPullRequest":false,"CreatedAt":"2019-09-24T15:01:48","Actor":"Herrmel","Number":"38816","RawContent":null,"Title":"NetCore-CSharpCompilation does not resolve systemtypes like enum in referenced assemblies","State":"open","Body":"**Version Used**: 3.3.1 and many lower versions with NetCore3.0\r\n\r\n**Steps to Reproduce**: ExampleCode:\r\n```csharp\r\nusing Microsoft.CodeAnalysis;\r\nusing Microsoft.CodeAnalysis.CSharp;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n\r\nnamespace CSharpCompilationTest\r\n{\r\n    class Program\r\n    {\r\n        const string document = @\"\r\nnamespace ProjectWithAssembly\r\n{\r\n    public enum TestEnum\r\n    {\r\n        Hello, World\r\n    }\r\n\r\n}\r\n\";\r\n        static void Main(string[] args)\r\n        {\r\n            var assemblies = new[] { typeof(object).Assembly.Location, typeof(TestEnum).Assembly.Location }.Select(path=>MetadataReference.CreateFromFile(path)).ToList();\r\n            var options = new CSharpCompilationOptions(OutputKind.DynamicallyLinkedLibrary);\r\n            var complilation = CSharpCompilation.Create(\"ProjectWithAssembly\", new SyntaxTree[] { SyntaxFactory.ParseSyntaxTree(document) }, assemblies, options);\r\n            var enumType = complilation.GetTypeByMetadataName(\"CSharpCompilationTest.TestEnum\");\r\n            var alsoEnumType = complilation.GetTypeByMetadataName(\"ProjectWithAssembly.TestEnum\");\r\n\r\n            Console.WriteLine($\"{enumType}:\\t{enumType.TypeKind}\\r\\n{alsoEnumType}:\\t{alsoEnumType.TypeKind}\");\r\n        }\r\n    }\r\n\r\n    public enum TestEnum\r\n    {\r\n        Hello, World\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**: Both TypeSymbols are `TypeKind.Enum`.\r\n\r\n**Actual Behavior**: The TypeSymbol in the referenced assembly is `TypeKind.Class`. Seems like it can not link from the assembly to the CoreLib since the baseclass is ErrorType. This does work in netframework and maybe some earlier versions of net core.\r\n\r\nI discovered this while investigating why docfx can not generate documentation correctly for netCore. [For Reference](https://github.com/dotnet/docfx/issues/4952).","Url":"https://github.com/dotnet/roslyn/issues/38816","RelatedDescription":"Open issue \"NetCore-CSharpCompilation does not resolve systemtypes like enum in referenced assemblies\" (#38816)"},{"Id":"497642986","IsPullRequest":true,"CreatedAt":"2019-09-24T12:00:54","Actor":"dotnet-bot","Number":"38813","RawContent":null,"Title":"Merge release/dev16.4-preview1 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38813","RelatedDescription":"Open PR \"Merge release/dev16.4-preview1 to master\" (#38813)"},{"Id":"497560852","IsPullRequest":false,"CreatedAt":"2019-09-24T09:13:40","Actor":"Bonuspunkt","Number":"38812","RawContent":null,"Title":"C#8 compiler reports CS8620 for IEnumerable<T?> after filtering for not null","State":"open","Body":"**Version Used**: \r\ndotnet-sdk-3.0.100\r\n\r\n**Steps to Reproduce**:\r\nenable nullable\r\n```csharp\r\npublic static void Run()\r\n{\r\n    var enumerable = Enumerable.Range(1, 10).Select(i => i % 2 == 0 ? null : i.ToString());\r\n    var notNulls = enumerable.Where(item => item != null);\r\n    Check(notNulls);\r\n}\r\nprivate static void Check(IEnumerable<string> notNull) { }\r\n```\r\n\r\n**Expected Behavior**:\r\nno warning\r\n\r\n**Actual Behavior**:\r\nWarning CS8620 Argument of type 'IEnumerable<string?>' cannot be used for parameter 'notNull' of type 'IEnumerable<string>' in 'void Check(IEnumerable<string> notNull)' due to differences in the nullability of reference types.\r\n\r\nmy current workaround is\r\n```csharp\r\n    var notNulls = enumerable.Where(item => item != null).Select(item => item!);\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38812","RelatedDescription":"Open issue \"C#8 compiler reports CS8620 for IEnumerable<T?> after filtering for not null\" (#38812)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"497810701","IsPullRequest":true,"CreatedAt":"2019-09-24T16:58:38","Actor":"Dotnet-GitSync-Bot","Number":"7797","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7797)"},{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-24T00:16:58","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"closed","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"496830692","IsPullRequest":false,"CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Number":"7796","RawContent":null,"Title":"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure","State":"open","Body":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Open issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796)"},{"Id":"494589847","IsPullRequest":true,"CreatedAt":"2019-09-17T14:13:36","Actor":"Dotnet-GitSync-Bot","Number":"7794","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7794)"},{"Id":"494273259","IsPullRequest":true,"CreatedAt":"2019-09-16T23:13:23","Actor":"Dotnet-GitSync-Bot","Number":"7793","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7793)"},{"Id":"493430075","IsPullRequest":false,"CreatedAt":"2019-09-16T15:38:33","Actor":"RalfKornmannEnvision","Number":"7790","RawContent":null,"Title":"GC on ARM64 based \"kind of unix\" system","State":"closed","Body":"I am sorry to bother again. After fixing some more minor issues and brush up my ARM64 assembler knowledge I was finally able to run a simple hello world on my ARM64 system without crashing. Doing things like writing to the log (the system doesn't have a text based console at all), Thread.Sleep, Environment.TickCount, printing the command line arguments etc works fine. But than I made the \"mistake\" to trigger the GC. \r\n\r\nTo make a long story short after some more debugging I noticed that the unwind of the stack does not work. The reason was pretty obvious. Libunwind doesn't have any information about the function were the stack walk should be started. I am aware that there are some parts missing for ARM64 targets that I need to fill but there is one question I was not able to answer so far. Does the GC only need unwind information for the managed code part? Or do I need to provide information for the C/C++ parts and even the dynamic libs of the OS? I am aware that libunwind can fetch these information by it's own. Unfortunately the function that it uses for this is not supported by the OS my system is using.  I may be able to get the unwind sections from the runtime C/C++ code.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7790","RelatedDescription":"Closed issue \"GC on ARM64 based \"kind of unix\" system\" (#7790)"},{"Id":"493684541","IsPullRequest":true,"CreatedAt":"2019-09-15T07:35:11","Actor":"Dotnet-GitSync-Bot","Number":"7792","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7792","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7792)"},{"Id":"493500562","IsPullRequest":true,"CreatedAt":"2019-09-14T14:02:26","Actor":"MichalStrehovsky","Number":"7791","RawContent":null,"Title":"Fix casting to pointers","State":"closed","Body":"Porting a fix made for .NET Native.\r\n\r\nA popular game engine has a `castclass void*` IL instruction in one of the generated files it ships with. This construct is weird enough that it crashes the .NET Native compiler. It doesn't crash the CoreRT compiler, but we still want the runtime side of the fix.","Url":"https://github.com/dotnet/corert/pull/7791","RelatedDescription":"Closed or merged PR \"Fix casting to pointers\" (#7791)"},{"Id":"492984849","IsPullRequest":true,"CreatedAt":"2019-09-13T13:52:21","Actor":"Dotnet-GitSync-Bot","Number":"7789","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @NextTurn","Url":"https://github.com/dotnet/corert/pull/7789","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7789)"},{"Id":"489459547","IsPullRequest":true,"CreatedAt":"2019-09-12T19:12:20","Actor":"cshung","Number":"7775","RawContent":null,"Title":"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7775","RelatedDescription":"Closed or merged PR \"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization\" (#7775)"},{"Id":"492918947","IsPullRequest":true,"CreatedAt":"2019-09-12T19:11:42","Actor":"Dotnet-GitSync-Bot","Number":"7788","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @TylerBrinkley @tarekgh @obligaron @marek-safar @jkotas @sywhang","Url":"https://github.com/dotnet/corert/pull/7788","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7788)"},{"Id":"491162081","IsPullRequest":true,"CreatedAt":"2019-09-11T00:16:26","Actor":"Dotnet-GitSync-Bot","Number":"7786","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7786","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7786)"},{"Id":"490571600","IsPullRequest":true,"CreatedAt":"2019-09-09T17:52:58","Actor":"davidwrighton","Number":"7779","RawContent":null,"Title":"Resource writing","State":"closed","Body":"- Refactor the win32 resource reading code to use more natural managed data structures\r\n- Build a Win32 resource emitter on top of refactored data structures\r\n- Replace resource section copy logic with new node to generate win32 resources","Url":"https://github.com/dotnet/corert/pull/7779","RelatedDescription":"Closed or merged PR \"Resource writing\" (#7779)"},{"Id":"491229182","IsPullRequest":false,"CreatedAt":"2019-09-09T17:33:38","Actor":"RalfKornmannEnvision","Number":"7787","RawContent":null,"Title":"finally funclets brocken for ARM64!?","State":"open","Body":"I am not sure if this is a corert or coreclr issue but as I am working on a corert port for an custom ARM64 system I start with posting it here.\r\n\r\nAfter adding code to the objectwriter and the ilcompiler I managed to get a simple hello world app running to the main method. But it than crashed during the shutdown. After some debugging i figured out that the static constructors are never called. After some more debugging I noticed that ClassConstructorRunner.GetCctor corrupts the stack frame,\r\n\r\nIt happens at the end of the method in an assembler block that i believe is the finally funclet for the using. It looks like this\r\n\r\n  28667c: a9be7bfd stp x29, x30, [sp, #-32]!\r\n  286680: f90013f3 str x19, [sp, #32]\r\n  286684: 9103a3a0 add x0, x29, #0xe8\r\n  286688: 97fc0d42 bl 189b90 <S_P_CoreLib_System_Threading_LockHolder__Dispose>\r\n  28668c: d503201f nop\r\n  286690: d503201f nop\r\n  286694: f94013f3 ldr x19, [sp, #32]\r\n  286698: a8c27bfd ldp x29, x30, [sp], #32\r\n  28669c: d65f03c0 ret\r\n\r\nThe fact that x19 is stored with an offset of 32 looks strange for me and it overwrites the already stored data. Based on other stackframes I would expect an offset of 16 here. Or the new stackframe for the funclet needs to be 16 bytes larger.\r\n\r\nDisclaimer: As the development system for the custom ARM64 system runs on windows I although use a ARM64 jit that is build to run on X64. Very simular to the protonojit but not as alt jit to get all the data needed to write the arm64 elf file that the linker for the custom ARM64 system needs. Unfortunately I don't have an ARM64 windows or linux system to check if a non cross jit generates the same code.\r\n\r\nI assume there is no ready to use jit for my use case and I need to build it anyway. In this case I could properly fix the issue but I would need a hint how the code is expected to look like.  ","Url":"https://github.com/dotnet/corert/issues/7787","RelatedDescription":"Open issue \"finally funclets brocken for ARM64!?\" (#7787)"},{"Id":"490799316","IsPullRequest":true,"CreatedAt":"2019-09-08T23:57:41","Actor":"MichalStrehovsky","Number":"7785","RawContent":null,"Title":"Mark unsafe intrinsics as reflection blocked","State":"closed","Body":"Keeping these reflection enabled pulls in quite a bit of junk (generic dictionaries, standalone method bodies, bookkeeping) that adds up to 1.5% of the size of Hello World...","Url":"https://github.com/dotnet/corert/pull/7785","RelatedDescription":"Closed or merged PR \"Mark unsafe intrinsics as reflection blocked\" (#7785)"},{"Id":"490775070","IsPullRequest":false,"CreatedAt":"2019-09-08T21:11:53","Actor":"mrzaxaryan","Number":"7784","RawContent":null,"Title":"Non-trivial marshalling is not yet supported by this compiler.","State":"closed","Body":"Can't save image to MemoryStream \r\n.NET Core v3.0.0-preview9\r\nVisual Studio 16.3.0 Preview 3.0\r\nException: `System.Exception: Method '[System.Drawing.Common]System.Drawing.SafeNativeMethods+Gdip.GdipSaveImageToStream(HandleRef,IStream,Guid&,HandleRef)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipSaveImageToStream(HandleRef, Interop.Ole32.IStream, Guid&, HandleRef) + 0x39\r\n   at System.Drawing.Image.Save(Stream, ImageCodecInfo, EncoderParameters) + 0x1af`\r\n","Url":"https://github.com/dotnet/corert/issues/7784","RelatedDescription":"Closed issue \"Non-trivial marshalling is not yet supported by this compiler.\" (#7784)"},{"Id":"490757817","IsPullRequest":true,"CreatedAt":"2019-09-08T20:09:59","Actor":"MichalStrehovsky","Number":"7782","RawContent":null,"Title":"Port GC changes from CoreCLR","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/commit/cd42ee8fe410f71026467ad2e90116115b85f68d\r\nPorts https://github.com/dotnet/coreclr/commit/740752c9d206a465e96a4d01e7dafb6adb6ded63","Url":"https://github.com/dotnet/corert/pull/7782","RelatedDescription":"Closed or merged PR \"Port GC changes from CoreCLR\" (#7782)"},{"Id":"490760342","IsPullRequest":true,"CreatedAt":"2019-09-08T20:08:39","Actor":"MichalStrehovsky","Number":"7783","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7783","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#7783)"},{"Id":"490704961","IsPullRequest":true,"CreatedAt":"2019-09-08T05:12:25","Actor":"Dotnet-GitSync-Bot","Number":"7781","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7781","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7781)"},{"Id":"490412146","IsPullRequest":true,"CreatedAt":"2019-09-08T00:46:12","Actor":"trylek","Number":"7777","RawContent":null,"Title":"Output raw test lists for the individual outcomes from SuperIlc","State":"closed","Body":"This change tweaks SuperIlc to emit simple line-oriented test lists\r\nfor the various compilation and execution outcomes. I found this\r\nquite useful for comparing various runs. I have also deleted a bit\r\nof dead code I noticed.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7777","RelatedDescription":"Closed or merged PR \"Output raw test lists for the individual outcomes from SuperIlc\" (#7777)"},{"Id":"490662770","IsPullRequest":false,"CreatedAt":"2019-09-07T17:55:27","Actor":"nexon33","Number":"7780","RawContent":null,"Title":"Implement GetInterfaceMap","State":"open","Body":"I want to be able to render a view in asp.net core, I need the controller inheritance to be able to call View();\r\nIs there any simple way of doing this or should I forget about it for now?","Url":"https://github.com/dotnet/corert/issues/7780","RelatedDescription":"Open issue \"Implement GetInterfaceMap\" (#7780)"},{"Id":"490072419","IsPullRequest":true,"CreatedAt":"2019-09-06T23:34:35","Actor":"davidwrighton","Number":"7776","RawContent":null,"Title":"Partial compilation and generic ibc processing","State":"closed","Body":"- Support for partial compilation\r\n- Support for parsing generics in IBC data\r\n - Bonus feature of searching referenced and input assemblies for types if the module in the IBC data is invalid","Url":"https://github.com/dotnet/corert/pull/7776","RelatedDescription":"Closed or merged PR \"Partial compilation and generic ibc processing\" (#7776)"},{"Id":"490437186","IsPullRequest":true,"CreatedAt":"2019-09-06T22:57:58","Actor":"Dotnet-GitSync-Bot","Number":"7778","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7778","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7778)"},{"Id":"489360143","IsPullRequest":true,"CreatedAt":"2019-09-05T19:38:18","Actor":"fadimounir","Number":"7772","RawContent":null,"Title":"Compile cross-module generics in the same version bubble.","State":"closed","Body":"This work is related to the single-exe prototype, but after discussing with @davidwrighton, these are changes that we can have in master as well.\r\n\r\nCompiling generics from external modules in the version bubble is enabled using a command line switch.\r\n\r\nOther changes: Changing signatures in hashtable of instantiations to include owning type as a way of encoding the module override info\r\n","Url":"https://github.com/dotnet/corert/pull/7772","RelatedDescription":"Closed or merged PR \"Compile cross-module generics in the same version bubble.\" (#7772)"},{"Id":"489380977","IsPullRequest":true,"CreatedAt":"2019-09-05T14:33:56","Actor":"MichalStrehovsky","Number":"7773","RawContent":null,"Title":"Get jitwrapper building on x86","State":"closed","Body":"CoreCLR repo is going to build it that way. I could exclude that outside x64, but it's just better to fix it...","Url":"https://github.com/dotnet/corert/pull/7773","RelatedDescription":"Closed or merged PR \"Get jitwrapper building on x86\" (#7773)"},{"Id":"489406467","IsPullRequest":true,"CreatedAt":"2019-09-04T23:16:31","Actor":"Dotnet-GitSync-Bot","Number":"7774","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @NextTurn","Url":"https://github.com/dotnet/corert/pull/7774","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7774)"},{"Id":"488925681","IsPullRequest":true,"CreatedAt":"2019-09-04T16:39:39","Actor":"Dotnet-GitSync-Bot","Number":"7771","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7771","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7771)"},{"Id":"488893657","IsPullRequest":true,"CreatedAt":"2019-09-04T02:16:33","Actor":"Dotnet-GitSync-Bot","Number":"7770","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7770","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7770)"},{"Id":"488826953","IsPullRequest":true,"CreatedAt":"2019-09-04T01:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7769","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7769","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7769)"},{"Id":"488782037","IsPullRequest":true,"CreatedAt":"2019-09-03T21:33:47","Actor":"trylek","Number":"7768","RawContent":null,"Title":"Minor triage improvement in SuperIlc","State":"closed","Body":"For tests with unhandled runtime exceptions, we can improve SuperIlc\r\ntriage by using the exception as the triage string instead of just\r\nreporting a non-zero exit code. Part of the logic already existed\r\nbut it apparently had a typo in the exception message check due to\r\nwhich it failed to kick in.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7768","RelatedDescription":"Closed or merged PR \"Minor triage improvement in SuperIlc\" (#7768)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"497578216","IsPullRequest":false,"CreatedAt":"2019-09-24T23:55:42","Actor":"fugaku","Number":"3667","RawContent":null,"Title":"Error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized","State":"closed","Body":"I'm trying to upgrade my library project from .net core 2.2 to .net core 3.0 using below setup for the `.csproj`\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"LibLog\" Version=\"5.0.6\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.2.6\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n    <PackageReference Include=\"System.Runtime.Loader\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nI have this dotnet sdk versions installed\r\n```\r\n.NET Core SDK (reflecting any global.json):                                                                                                                                                    Version:   3.0.100                                                                                                                                                                            Commit:    04339c3a26                                                                                                                                                                                                                                                                                                                                                                      Runtime Environment:                                                                                                                                                                           OS Name:     Windows                                                                                                                                                                          OS Version:  10.0.18362                                                                                                                                                                       OS Platform: Windows                                                                                                                                                                          RID:         win10-x64                                                                                                                                                                        Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\                                                                                                                                                                                                                                                                                                                                          Host (useful for support):                                                                                                                                                                      Version: 3.0.0                                                                                                                                                                                Commit:  7d57652f33                                                                                                                                                                                                                                                                                                                                                                       .NET Core SDKs installed:                                                                                                                                                                       2.1.200 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.302 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.503 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.504 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.505 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.507 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.602 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]Modules\\CustomsInventory.Modules>\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\nBuilding the project gives me the error \r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(263,5): error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n```\r\n\r\nIs there any documentation regarding referencing Microsoft.AspNetCore.* libraries from a netstandard projects ?","Url":"https://github.com/dotnet/sdk/issues/3667","RelatedDescription":"Closed issue \"Error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3667)"},{"Id":"497966698","IsPullRequest":true,"CreatedAt":"2019-09-24T23:11:41","Actor":"dsplaisted","Number":"3673","RawContent":null,"Title":"Fix build error when UserSecretsId property is defined but API is not referenced","State":"open","Body":"Fixes dotnet/core#3290","Url":"https://github.com/dotnet/sdk/pull/3673","RelatedDescription":"Open PR \"Fix build error when UserSecretsId property is defined but API is not referenced\" (#3673)"},{"Id":"497919543","IsPullRequest":false,"CreatedAt":"2019-09-24T20:55:16","Actor":"nguerrera","Number":"3672","RawContent":null,"Title":"It_publishes_and_runs_self_contained_wpf_app assumes `dotnet new wpf` targets 3.0","State":"open","Body":"Test is failing in merge of core-sdk 3.0 to 3.1 as it starts running is unprepared for the fact that `dotnet new wpf` now targets 3.1.","Url":"https://github.com/dotnet/sdk/issues/3672","RelatedDescription":"Open issue \"It_publishes_and_runs_self_contained_wpf_app assumes `dotnet new wpf` targets 3.0\" (#3672)"},{"Id":"497912531","IsPullRequest":false,"CreatedAt":"2019-09-24T20:39:51","Actor":"nguerrera","Number":"3671","RawContent":null,"Title":"ReadyToRun failing in 3.1 due to bad assumption about known framework references","State":"open","Body":"```\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: The \"PrepareForReadyToRunCompilation\" task failed unexpectedly. [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: System.InvalidOperationException: Sequence contains more than one element [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowMoreThanOneElementException() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source) [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.PrepareForReadyToRunCompilation.ExecuteCore() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\n```\r\n\r\nThe code is doing a SingleOrDefault on the KnownFrameworkReferences with Microsoft.NETCore.App framework name, but now there are two that are known: 3.0 and 3.1 so it fails.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3671","RelatedDescription":"Open issue \"ReadyToRun failing in 3.1 due to bad assumption about known framework references\" (#3671)"},{"Id":"497674518","IsPullRequest":false,"CreatedAt":"2019-09-24T13:02:29","Actor":"smoothdeveloper","Number":"3670","RawContent":null,"Title":"Suggestion: location of global.json (and like files), should they move to a .dotnet subfolder?","State":"open","Body":"Asking if `global.json` (and other similar files) could be resolved from a `.dotnet` subfolder rather than at the root of repository.\r\n\r\nMotives:\r\n1. root folder is a crawded place\r\n1. `global.json` is to  generic of a name, doesn't convey anything related to dotnet, moving it to a folder, and maybe renaming it?\r\n\r\nSorry if this issue has been brought up, tried to search, and it has been bothering me due to point 1.","Url":"https://github.com/dotnet/sdk/issues/3670","RelatedDescription":"Open issue \"Suggestion: location of global.json (and like files), should they move to a .dotnet subfolder?\" (#3670)"},{"Id":"497672701","IsPullRequest":false,"CreatedAt":"2019-09-24T12:59:18","Actor":"retifrav","Number":"3669","RawContent":null,"Title":"dotnet build ignores .config files from .csproj CopyToOutputDirectory","State":"open","Body":"I noticed that `.csproj` rule\r\n\r\n```\r\n<ItemGroup>\r\n  <None Update=\"log4net.config\" CopyToOutputDirectory=\"Always\" />\r\n</ItemGroup>\r\n```\r\n\r\nis ignored for files with `.config` extension when performing `dotnet build`.\r\n\r\nI've done some testing with the following project:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Update=\"ololo.config\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"ololo.config2\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"ololo.confi\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"log4net.config\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"some.txt\" CopyToOutputDirectory=\"Always\" />\r\n  </ItemGroup>\r\n\r\n  ...\r\n\r\n</Project>\r\n```\r\n\r\nThe following files are successfully copied to the output directory:\r\n\r\n- `ololo.config2`\r\n- `ololo.confi`\r\n- `some.txt`\r\n\r\nBut these files are not copied:\r\n\r\n- `ololo.config`\r\n- `log4net.config`\r\n\r\nLike I said, this happens on `dotnet build`. At the same time `dotnet publish` works fine and copies all the files.\r\n\r\nMy environment:\r\n\r\n```\r\n> dotnet --info\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3669","RelatedDescription":"Open issue \"dotnet build ignores .config files from .csproj CopyToOutputDirectory\" (#3669)"},{"Id":"497596539","IsPullRequest":false,"CreatedAt":"2019-09-24T10:21:19","Actor":"gmeks","Number":"3668","RawContent":null,"Title":" error MSB6006: \"dotnet.exe\" exited with code -532462766. (With PublishTrimmed=true)","State":"open","Body":"Host (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\nIf i enabled PublishTrimmed=true when trying to publish a .net Core 3.0 application ( Newly updated from .net Core 2.2) i get the following error:\r\nC:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent>dotnet publish -c Release -r win10-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n```\r\n  Restore completed in 26,23 ms for C:\\SourceCode\\PlaniaHomeMVC\\PlaniaHomeShared\\PlaniaHomeShared.csproj.\r\n  Restore completed in 40,52 ms for C:\\SourceCode\\PlaniaHomeMVC\\HomeAgentShared\\HomeAgentShared.csproj.\r\n  Restore completed in 40,68 ms for C:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent\\BuildServerAgent.csproj.\r\n  PlaniaHomeShared -> C:\\SourceCode\\PlaniaHomeMVC\\PlaniaHomeShared\\bin\\Release\\netcoreapp3.0\\PlaniaHomeShared.dll\r\n  HomeAgentShared -> C:\\SourceCode\\PlaniaHomeMVC\\HomeAgentShared\\bin\\Release\\netcoreapp3.0\\HomeAgentShared.dll\r\n  BuildServerAgent -> C:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent\\bin\\Release\\netcoreapp3.0\\win10-x64\\BuildServerAgent.dll\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(87,5): error MSB6006: \"dotnet.exe\" exited with code -532462766. [C:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent\\BuildServerAgent.csproj]\r\n\r\n```\r\nAnd im unsure what i have done wrong, i assume i missed something in the upgrade to .NET Core 3.0. If i remove PublishTrimmed it works","Url":"https://github.com/dotnet/sdk/issues/3668","RelatedDescription":"Open issue \" error MSB6006: \"dotnet.exe\" exited with code -532462766. (With PublishTrimmed=true)\" (#3668)"},{"Id":"497330597","IsPullRequest":false,"CreatedAt":"2019-09-24T05:53:28","Actor":"giordi91","Number":"3665","RawContent":null,"Title":"Issues comparing types from hosted .net core contexts in c++","State":"closed","Body":"Good evening, apologies if this is not the right place for this question. If this is the case please let me know. \r\n\r\nI am working on a project where I am hosting a .net core 3.0 context in my c++ application, trying to use c# as scripting language. The main idea is to bootstrap a high level c# class, and do all the heavy lifting inside there and minimize as much as possible c++ and c# interaction. Here is a structure of my project:\r\n\r\n![Untitled Diagram(1)](https://user-images.githubusercontent.com/2525797/65462034-dab9c800-de4c-11e9-894b-1d9cc447e432.png)\r\n\r\nThe c++ application starts and loads a \"context.dll\" This is the c# class I will be using to do the heavy lifting, such class is loaded using hostfxr.I get a delegate to a static function and call it. \r\nThat context.dll is then used to load scripting dlls. Basically user defined classes. I am interested on all classes which inherit from \"ScriptingComponent\" base class. Such class is defined in core.dll \r\nI do not explicitly load such .dll It is set as reference in the context.dll project. The context.dll uses the ScriptingComponent symbol to use reflection on the loaded assemblies. \r\n\r\nThe context.dll loads then script.dll, Inside that dll there is a signle class, inheriting from Scriptable component. To do the loading I was using AssemblyLoadContext.Default.LoadFromPath, the issue with that was it did not correctly resolve the core.dll dependency. Then I moved to use the same code showed here:\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support\r\n\r\nThis allowed to correctly resolve the core.dll dependency of the script.dll library. Everything seems to work fine but then every method I am using of reflection to ask if the class in script.dll inherits from ScriptableComponents it fails. \r\nI can post a lot of tests I did to make sure 100% that they are the same, even the GUID \r\nwas exactly the same, although my comparison fails.\r\n \r\nNow that made me thinking, might that be that symbol is loaded twice into two different contexts? The first is contex.dll which loads the Symbol from core.dll, but then the symbol might be loaded again as a dependency of script.dll and somehow the two don't match across contexts?\r\n\r\nThis is the context of core.dll, a single base class and nothing else\r\n```c#\r\n    public class ScriptableComponent\r\n    {\r\n        public virtual void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From base\");\r\n        }\r\n\r\n        public virtual void PostAnimationEval()\r\n        {\r\n        }\r\n    }\r\n```\r\n\r\nMy script.dll has this inside, a single base class inheriting from ScriptableComponent:\r\n```c#\r\npublic class TestLib : ScriptableComponent\r\n    {\r\n        public override void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From override\");\r\n        }\r\n    }\r\n```\r\n\r\nFinally in the context.dll I load the assembly and check for the types inherithing from my type.\r\n```c#\r\n                PluginLoadContext loadContext = new PluginLoadContext(path);             \r\n                Assembly ass = loadContext.LoadFromAssemblyName(new AssemblyName(assemblyName));\r\n\r\n                List<MethodInfo> methods = new List<MethodInfo>();\r\n\r\n                foreach (Type type in ass.GetTypes())\r\n                {\r\n\r\n                    if(type.IsSubclassOf(typeof(ScriptableComponent)))\r\n                    {\r\n                        Console.WriteLine(\"Found scriptable component: \" + type.Name);\r\n                    }\r\n                 }\r\n```\r\n\r\nThe documentation of the Microsoft tutorial on plugin architecture mentions that AssemblyLoadContext is made to load stuff in isolation, might that be the prolem? Ideally I would want to load in the same context my main dll (contex.dll) is in. \r\n\r\nCan you advice on the matter? \r\nI understand is not a simple issue and hope it is not too confusing.","Url":"https://github.com/dotnet/sdk/issues/3665","RelatedDescription":"Closed issue \"Issues comparing types from hosted .net core contexts in c++\" (#3665)"},{"Id":"497396166","IsPullRequest":true,"CreatedAt":"2019-09-24T00:49:46","Actor":"wli3","Number":"3666","RawContent":null,"Title":"WIP Helix test","State":"open","Body":"will that work?","Url":"https://github.com/dotnet/sdk/pull/3666","RelatedDescription":"Open PR \"WIP Helix test\" (#3666)"},{"Id":"497311467","IsPullRequest":false,"CreatedAt":"2019-09-23T20:28:38","Actor":"yingnanl","Number":"3664","RawContent":null,"Title":"Set GCCpuGroup and Thread_UseAllCpuGroups via project file options","State":"open","Body":"Currently I can set ServerGarbageCollection by project file options as below.\r\n\r\n  <PropertyGroup>\r\n    <ServerGarbageCollection>true</ServerGarbageCollection>\r\n    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>    \r\n  </PropertyGroup>\r\n\r\nIs it ok to support GCCpuGroup and Thread_UseAllCpuGroups too?","Url":"https://github.com/dotnet/sdk/issues/3664","RelatedDescription":"Open issue \"Set GCCpuGroup and Thread_UseAllCpuGroups via project file options\" (#3664)"},{"Id":"497008416","IsPullRequest":false,"CreatedAt":"2019-09-23T10:12:46","Actor":"giordi91","Number":"3663","RawContent":null,"Title":"Debugging .net core 3.0 from hosted application","State":"open","Body":"I am hosting a .net core 3.0 context into my c++ application. Unluckily no matter what I try I am  not able to debug the c# code. Is there any way to do so? \r\n\r\nI am loading an entry point assembly using hostfxr.h as shown in the dotnet/samples. Then from inside c# I am loading all the other c# dlls using the documentation from here:\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support\r\n\r\nEverything works fine, I am mostly missing the ability to debug the c# code. That is the main reason I picked c# over other languages for the integration. \r\n\r\nI have enabled native code debugging in my c# application, but that did not help. Do I need to load the pbd files manually somehow?\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3663","RelatedDescription":"Open issue \"Debugging .net core 3.0 from hosted application\" (#3663)"},{"Id":"496402326","IsPullRequest":false,"CreatedAt":"2019-09-20T15:02:40","Actor":"rainersigwald","Number":"3662","RawContent":null,"Title":"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata","State":"open","Body":"_From @joeltankam on Friday, September 20, 2019 2:22:39 PM_\r\n\r\n### Steps to reproduce\r\n\r\nI encounter some missing metadata to `ReferenceCopyLocalPaths` item since migrating to `Microsoft.NET.Sdk` format in project files.\r\n\r\nLets consider the following project file :\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net471</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nI use the following code to print metadata from `ReferenceCopyLocalPaths` items : \r\n\r\n```xml\r\n  <UsingTask TaskName=\"GetMetadataTask\" TaskFactory=\"CodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.v4.0.dll\" >\r\n    <ParameterGroup>\r\n      <Items ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\" Required=\"true\" />\r\n      <MetadataString Output=\"true\" />\r\n    </ParameterGroup>\r\n    <Task>\r\n      <Using Namespace=\"System\"/>\r\n      <Code Type=\"Fragment\" Language=\"cs\">\r\n        <![CDATA[\r\n            StringBuilder metadata = new StringBuilder();\r\n            foreach (var item in Items)\r\n            {\r\n                metadata.AppendFormat(\"{0}\\r\\n\", item);\r\n                foreach (string name in item.MetadataNames)\r\n                {\r\n                    metadata.AppendFormat(\"  {0}={1}\\r\\n\", name, item.GetMetadata(name));\r\n                }\r\n                metadata.AppendFormat(\"\\r\\n\");\r\n            }\r\n            MetadataString = metadata.ToString();\r\n        ]]>\r\n      </Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveAssemblyReferences\">\r\n    <ItemGroup>\r\n      <PrintItems Include=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\" />\r\n    </ItemGroup>\r\n    <GetMetadataTask Items=\"@(PrintItems)\">\r\n      <Output TaskParameter=\"MetadataString\" PropertyName=\"MyBeautifulMetadata\"/>\r\n    </GetMetadataTask>\r\n    <Message Importance=\"High\" Text=\"$(MyBeautifulMetadata)\" />\r\n  </Target>\r\n```\r\n\r\n### Expected  behavior\r\nWhen using old project files format, I had the following metadata : \r\n\r\n```txt\r\n  ItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\n### Actual behavior\r\n\r\nNow I get the following : \r\n\r\n```txt\r\nItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\nThe difference being the absence of : \r\n\r\n```txt\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n```\r\n\r\nHowever, I need the `NuGetSourceType` metadata in my build process. \r\nIs there please any reason why this this metadata disappeared ? Is there a way to set it back ?\r\n\r\nI currently use this custom target to set back `NuGetSourceType` :\r\n\r\n```xml\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveReferences\">\r\n    <ItemGroup>\r\n      <ReferenceCopyLocalPaths Update=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\">\r\n        <NuGetSourceType>Package</NuGetSourceType>\r\n      </ReferenceCopyLocalPaths>\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.9.21.664\r\n.NET Core SDK version : 2.2.108\r\nVisual Studio : Professional 2017, v 15.9.16\r\n\r\n\r\n_Copied from original issue: microsoft/msbuild#4754_","Url":"https://github.com/dotnet/sdk/issues/3662","RelatedDescription":"Open issue \"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata\" (#3662)"},{"Id":"494301303","IsPullRequest":false,"CreatedAt":"2019-09-19T23:50:33","Actor":"wli3","Number":"3649","RawContent":null,"Title":"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64","State":"closed","Body":"https://github.com/dotnet/sdk/blob/fe6b50c78426124e34e56ecb7df8b6b86e6e0b48/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L118\r\n\r\ndoes not consider ARM and ARM64","Url":"https://github.com/dotnet/sdk/issues/3649","RelatedDescription":"Closed issue \"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64\" (#3649)"},{"Id":"496051527","IsPullRequest":false,"CreatedAt":"2019-09-19T22:15:19","Actor":"billwert","Number":"3661","RawContent":null,"Title":"PrepareForReadyToRunCompilation task fails on 5.0","State":"open","Body":"Trying to publish with ready to run on a console app with the 5.0 SDK fails as below.\r\n\r\ncc: @nguerrera @fadimounir \r\n\r\n```console\r\nC:\\test>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-014713\r\n Commit:    60688b13db\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18986\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha1.19468.6\r\n  Commit:  30c4a25a9a\r\n\r\n.NET Core SDKs installed:\r\n  5.0.100-alpha1-014713 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0-alpha1.19468.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n```console\r\nC:\\test>dotnet publish -c Release -bl /p:PublishReadyToRun=true -r win-x64\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19456-02+ee8294b55 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\MSBuild.dll -bl -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll -maxcpucount -property:Configuration=Release -property:RuntimeIdentifier=win-x64 /p:PublishReadyToRun=true -restore -target:Publish -verbosity:m .\\test.csproj\r\n  Restore completed in 2.38 sec for C:\\test\\test.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  test -> C:\\test\\bin\\Release\\netcoreapp3.0\\win-x64\\test.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: The \"PrepareForReadyToRunCompilation\" task failed unexpectedly. [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: System.InvalidOperationException: Sequence contains more than one element [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowMoreThanOneElementException() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source) [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.PrepareForReadyToRunCompilation.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/PrepareForReadyToRunCompilation.cs:line 69 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\test\\test.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3661","RelatedDescription":"Open issue \"PrepareForReadyToRunCompilation task fails on 5.0\" (#3661)"},{"Id":"495449618","IsPullRequest":true,"CreatedAt":"2019-09-19T16:35:52","Actor":"wli3","Number":"3657","RawContent":null,"Title":"Default app host runtime identifier for arm and arm64","State":"closed","Body":"Fix https://github.com/dotnet/sdk/issues/3649\r\n\r\nDue to https://github.com/dotnet/sdk/issues/3636 I cannot test it. And https://github.com/dotnet/sdk/issues/3636 's fix will be in core-sdk. So I think we should check it in for now.","Url":"https://github.com/dotnet/sdk/pull/3657","RelatedDescription":"Closed or merged PR \"Default app host runtime identifier for arm and arm64\" (#3657)"},{"Id":"495755187","IsPullRequest":true,"CreatedAt":"2019-09-19T12:02:08","Actor":"dotnet-maestro[bot]","Number":"3660","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3660","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3660)"},{"Id":"495642530","IsPullRequest":false,"CreatedAt":"2019-09-19T08:13:09","Actor":"thomaslevesque","Number":"3659","RawContent":null,"Title":"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7","State":"open","Body":"As I understand it, .NET Core 3 SDK installer is supposed to uninstall previous versions.\r\nHowever, I had preview7 and just installed RC1, and preview7 wasn't removed:\r\n\r\n```\r\n> dotnet --info\r\n...\r\n    .NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nIs this expected?\r\n\r\nAlso, preview7 no longer appears in \"Apps and features\", so I'm not sure how to remove it...","Url":"https://github.com/dotnet/sdk/issues/3659","RelatedDescription":"Open issue \"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7\" (#3659)"},{"Id":"495584268","IsPullRequest":true,"CreatedAt":"2019-09-19T05:40:40","Actor":"nguerrera","Number":"3658","RawContent":null,"Title":"Speed up tests","State":"open","Body":"Hacked up implementation for now, draft to measure impact in PR validation. Not ready for review","Url":"https://github.com/dotnet/sdk/pull/3658","RelatedDescription":"Open PR \"Speed up tests\" (#3658)"},{"Id":"493793478","IsPullRequest":false,"CreatedAt":"2019-09-18T20:57:29","Actor":"wli3","Number":"3648","RawContent":null,"Title":"[Investigate] Test the build of c# -> C++ -> C# works or not","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/issues/3648","RelatedDescription":"Closed issue \"[Investigate] Test the build of c# -> C++ -> C# works or not\" (#3648)"},{"Id":"494904114","IsPullRequest":true,"CreatedAt":"2019-09-18T18:17:46","Actor":"wli3","Number":"3652","RawContent":null,"Title":"Block non library","State":"closed","Body":"Instead of blocking exe only, considering there are also StaticLibrary and empty (utility)","Url":"https://github.com/dotnet/sdk/pull/3652","RelatedDescription":"Closed or merged PR \"Block non library\" (#3652)"},{"Id":"494997302","IsPullRequest":true,"CreatedAt":"2019-09-18T05:30:50","Actor":"livarcocc","Number":"3656","RawContent":null,"Title":"Change the installed 2.2 runtime to 2.2.7.","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3656","RelatedDescription":"Open PR \"Change the installed 2.2 runtime to 2.2.7.\" (#3656)"},{"Id":"494996231","IsPullRequest":false,"CreatedAt":"2019-09-18T05:26:58","Actor":"mmitche","Number":"3655","RawContent":null,"Title":"Reenable Helix perf on 3.0.1xx ","State":"open","Body":"Re-enable helix perf on 3.0.1xx. Removed at: https://github.com/dotnet/sdk/pull/3654","Url":"https://github.com/dotnet/sdk/issues/3655","RelatedDescription":"Open issue \"Reenable Helix perf on 3.0.1xx \" (#3655)"},{"Id":"494995531","IsPullRequest":true,"CreatedAt":"2019-09-18T05:25:16","Actor":"mmitche","Number":"3654","RawContent":null,"Title":"Remove perf from builds","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3654","RelatedDescription":"Closed or merged PR \"Remove perf from builds\" (#3654)"},{"Id":"494906082","IsPullRequest":true,"CreatedAt":"2019-09-18T05:15:21","Actor":"dotnet-maestro[bot]","Number":"3653","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.0.6251\r\n- **Date Produced**: 9/17/2019 11:35 PM\r\n- **Commit**: b75150f2f4127a77a166c9552845e86fb24a3282\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.0-rtm.6251\r\n\r\n[marker]: <> (End:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3653","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#3653)"},{"Id":"494846089","IsPullRequest":false,"CreatedAt":"2019-09-17T20:52:01","Actor":"wli3","Number":"3651","RawContent":null,"Title":"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/issues/3651","RelatedDescription":"Open issue \"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)\" (#3651)"},{"Id":"494423594","IsPullRequest":false,"CreatedAt":"2019-09-17T06:18:24","Actor":"dasMulli","Number":"3650","RawContent":null,"Title":"Warn on publishing solutions / path forward for publishing solutions","State":"open","Body":"There are many issues with doing a publish on solution files.\r\n\r\nI suggest emitting a Warning when trying to do so. I think this may be possible through solution extension points.\r\n\r\nso `dotnet publish the.sln` would emit something like `NETSDK999: Publishing whole solutions can lead to unintended side-effects`.\r\nThis could then be disabled with `dotnet publish the.sln -p:WarnOnPublishingSolutions=False`.\r\n\r\nWhile there are suggestions of allowing base paths for solution publishing to create folders for each project are possible, it has a few edge cases (same csproj names in different solution folders etc.).","Url":"https://github.com/dotnet/sdk/issues/3650","RelatedDescription":"Open issue \"Warn on publishing solutions / path forward for publishing solutions\" (#3650)"},{"Id":"493792608","IsPullRequest":false,"CreatedAt":"2019-09-16T22:11:30","Actor":"wli3","Number":"3647","RawContent":null,"Title":"[Investigate] Setting Runtimeidentifier in C++ props and target might not be needed","State":"closed","Body":"It works today without setting it. Need to understand how we derive the RID. And ensure it is ok not setting it","Url":"https://github.com/dotnet/sdk/issues/3647","RelatedDescription":"Closed issue \"[Investigate] Setting Runtimeidentifier in C++ props and target might not be needed\" (#3647)"},{"Id":"493678850","IsPullRequest":true,"CreatedAt":"2019-09-15T00:05:26","Actor":"dotnet-bot","Number":"3646","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3646","RelatedDescription":"Open PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3646)"},{"Id":"493651275","IsPullRequest":true,"CreatedAt":"2019-09-14T18:13:58","Actor":"lg2de","Number":"3645","RawContent":null,"Title":"do not overwrite \"all warnings as errors\" (fixes #3613)","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3645","RelatedDescription":"Open PR \"do not overwrite \"all warnings as errors\" (fixes #3613)\" (#3645)"},{"Id":"493616393","IsPullRequest":true,"CreatedAt":"2019-09-14T12:05:32","Actor":"dotnet-bot","Number":"3644","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3644","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3644)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1176647998287179776","CreatedAt":"2019-09-25T00:01:58+00:00","UserScreenname":"dotnet","Text":"Okay we're rolling now... #dotNETConf continues on https://t.co/EMXJydiV5n all night!!!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":8,"RawContent":null},{"Id":"1176646147894415360","CreatedAt":"2019-09-24T23:54:37+00:00","UserScreenname":"dotnet","Text":"Join us on https://t.co/EMXJydiV5n for the rest of #dotNETConf. Broadcast will start shortly! Technical difficulties...","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":4,"RawContent":null},{"Id":"1176638699091742720","CreatedAt":"2019-09-24T23:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Secure your NuGet package eco-system with @karann9. Live stream:… https://t.co/UibtIuhYWX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null},{"Id":"1176638232450093056","CreatedAt":"2019-09-24T23:23:10+00:00","UserScreenname":"dotnet","Text":"Ask your questions live for @LyalinDotCom about XAML via #dotNETConf now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1176631150162452480","CreatedAt":"2019-09-24T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Tour the XAML tools in #VS2019 for WPF &amp; UWP with @lyalindotcom. Watch here:… https://t.co/bnzH2BiMMI","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1176623599769268226","CreatedAt":"2019-09-24T22:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf, @codemillmatt takes on on a journey of building amazing cloud connected apps with… https://t.co/dHdhdvMFVF","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":8,"FavoriteCount":2,"RawContent":null},{"Id":"1176623500024377344","CreatedAt":"2019-09-24T22:24:37+00:00","UserScreenname":"dotnet","Text":"Ask your #Unity questions live to @ChristosMatskas via #dotNETConf now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1176616051213328386","CreatedAt":"2019-09-24T21:55:01+00:00","UserScreenname":"dotnet","Text":".@ChristosMatskas shows us how to make awesome games with .NET, #VS2019, and #Unity 2019. Now streaming @… https://t.co/CFIeWeJRyV","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":18,"FavoriteCount":8,"RawContent":null},{"Id":"1176608500061016069","CreatedAt":"2019-09-24T21:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Diagnostics Improvements in .NET Core 3.0 with @sshirhatti &amp; @jsalem206. Watch here:… https://t.co/BY1uN1WYtF","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1176607549581221889","CreatedAt":"2019-09-24T21:21:14+00:00","UserScreenname":"dotnet","Text":"Ask your @Azure questions for @timheuer live via #dotNETConf -  Try to stump the band!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":1,"RawContent":null},{"Id":"1176600949126828032","CreatedAt":"2019-09-24T20:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Azure Services Every .NET Developer Needs to Know with @timheuer. Tune in:… https://t.co/PEliGKhsgB","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1176600171121008640","CreatedAt":"2019-09-24T20:51:55+00:00","UserScreenname":"dotnet","Text":"Ask your @Azure configuration questions live right now @jimmypc15 via #dotNETConf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":0,"RawContent":null},{"Id":"1176593401262891008","CreatedAt":"2019-09-24T20:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Azure App Configuration - Making Centralized Configuration Easy with @jimmypc15. The l… https://t.co/6WWX0ae4zB","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null},{"Id":"1176591443546107904","CreatedAt":"2019-09-24T20:17:14+00:00","UserScreenname":"dotnet","Text":"Any questions about .NET Core support policy for @KathleenDollard right now on #dotNETConf ? Ask live!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1176585850999705603","CreatedAt":"2019-09-24T19:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf, @kathleendollard gives us some good tips and tricks for moving to .NET Core. Watch her… https://t.co/m9hyoXeUw2","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1176585016937050112","CreatedAt":"2019-09-24T19:51:42+00:00","UserScreenname":"dotnet","Text":"Any #fsharp questions? Ask @_cartermp live now #dotNETConf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":0,"RawContent":null},{"Id":"1176578300665376768","CreatedAt":"2019-09-24T19:25:01+00:00","UserScreenname":"dotnet","Text":"What's new in F#? Find out now from @_cartermp  at #dotNETConf: https://t.co/irKAH46tsn https://t.co/lqPAL4q73l","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"1176577733595283456","CreatedAt":"2019-09-24T19:22:46+00:00","UserScreenname":"dotnet","Text":"Ask @LadyNaggaga your #dotNETConf questions live! You might end up on the stream :-)","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":0,"RawContent":null},{"Id":"1176575175883665412","CreatedAt":"2019-09-24T19:12:36+00:00","UserScreenname":"dotnet","Text":".NET Core 'latest' Docker tags updated to 3.0 https://t.co/A8fSpc5I8u","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":37,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2019-09-25T05:30:37.9702702Z","RunDurationInMilliseconds":15580}