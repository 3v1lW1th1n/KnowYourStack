{"Data":{"Blog":{"FeedItems":[{"Title":"Webinar Recording | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-11-14T19:49:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join David Antognoli in this pre-recorded webinar and see how to take your Unity games to the next level with powerful cloud services. He walks through how to connect your apps to Microsoft Azure,...","Href":"https://blog.xamarin.com/webinar-recording-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Adding Sound to a Xamarin.Forms App","PublishedOn":"2017-11-13T20:15:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Audio has many uses in mobile applications. Sounds can be essential to your app; they may notify users of important events or make your app accessible to visually-impaired users. We can also use sound...","Href":"https://blog.xamarin.com/adding-sound-xamarin-forms-app/","RawContent":null},{"Title":".NET Standard Comes to Xamarin.Forms Project Templates!","PublishedOn":"2017-11-10T19:06:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Standard is a formal specification of the .NET APIs that allow you to share even more code across the platforms you target. Xamarin developers are able to use .NET Standard libraries for sharing...","Href":"https://blog.xamarin.com/net-standard-comes-xamarin-forms-project-templates/","RawContent":null},{"Title":"Xamarin and Xamarin University Sessions at Microsoft Connect(); 2017","PublishedOn":"2017-11-09T20:47:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We invite you to join us for Microsoft&#8217;s annual Connect(); developer event, scheduled to stream live online November 15–17, 2017! Save the date now to ensure you don&#8217;t miss a minute of...","Href":"https://blog.xamarin.com/xamarin-xamarin-university-sessions-microsoft-connect-2017/","RawContent":null},{"Title":"Android Oreo Notification Channels","PublishedOn":"2017-11-07T20:52:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important features introduced in Android 8.0 Oreo is notification channels. Notification channels make it possible for you to group notifications so that all notifications posted to a...","Href":"https://blog.xamarin.com/android-oreo-notification-channels/","RawContent":null},{"Title":"Simplified App Signing with Secure Files in Visual Studio Team Services","PublishedOn":"2017-11-06T21:00:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing I never want to worry about when building my apps is needing to remember where I stored my provisioning profiles, certificates, and keystores. Thanks to Visual Studio Team Services (VSTS), I...","Href":"https://blog.xamarin.com/simplified-app-signing-secure-files-visual-studio-team-services/","RawContent":null},{"Title":"Making iOS 11 Even Easier with Xamarin.Forms","PublishedOn":"2017-11-03T21:31:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 has introduced a few new visual design updates that you may want to take advantage of, including safe area layout guides and large titles. For Xamarin.iOS developers, we’ve recently published...","Href":"https://blog.xamarin.com/making-ios-11-even-easier-xamarin-forms/","RawContent":null},{"Title":"Publish to Azure from Visual Studio for Mac","PublishedOn":"2017-11-02T19:28:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a cloud first, mobile first IDE, Visual Studio for Mac is designed to work side by side with Azure. In this post, you&#8217;ll create an ASP.NET Core project, edit the site to be unique, and then...","Href":"https://blog.xamarin.com/publish-azure-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in November","PublishedOn":"2017-11-02T12:55:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin and .Net mobile developer community is growing like never before and with so many new events upcoming, there is more opportunity than ever to learn about new and exciting releases,...","Href":"https://blog.xamarin.com/xamarin-developer-events-november/","RawContent":null},{"Title":"Augmented Reality in Xamarin.Android with ARCore","PublishedOn":"2017-10-30T19:50:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Now that you&#8217;ve had a chance to augment reality in your Xamarin iOS apps with ARKit, it&#8217;s time to explore Google&#8217;s take on AR in your Xamarin Android apps. The new ARCore SDK...","Href":"https://blog.xamarin.com/augmented-reality-xamarin-android-arcore/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6855593427","Type":"PullRequestEvent","CreatedAt":"2017-11-14T23:05:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1023","RelatedDescription":"Merged pull request \"Bump to mono/1ce0cc6e; move LinkerDescription.xml into mono\" (#1023) at xamarin/xamarin-android","RelatedBody":"With https://github.com/mono/mono/pull/5984 we now have additional tests and embed the LinkerDescription.xml directly into the test assembly in Mono so we can remove it here."},{"Id":"6855582931","Type":"PullRequestEvent","CreatedAt":"2017-11-14T23:02:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1024","RelatedDescription":"Merged pull request \"[tests] option to include/exclude categories from Test APKs\" (#1024) at xamarin/xamarin-android","RelatedBody":"In some QA needs to run tests on devices without a network connection,\r\nso an option to disable tests that rely on the network in Mono.Android-Tests\r\nis needed.\r\n\r\nNUnit has the option to include or exclude tests based on the\r\n`CategoryAttribute`. Various tests were decorated with\r\n`[Category(\"InetAccess\")]` that appeared to use the internet. To verify\r\nthis works, I ran the tests with my internet disabled. The test run for\r\nMono.Android-Tests went down from 106 to 84 tests, with no failures.\r\n\r\nTo exclude a category, on Windows:\r\n```\r\n    msbuild Xamarin.Android.sln /t:RunApkTests /p:ExcludeCategories=InetAccess\r\n```\r\nOn MacOS/Linux:\r\n```\r\n    make run-apk-tests EXCLUDECATEGORIES=InetAccess\r\n```\r\nIf you want to specify multiple categories, use `:` (colon) to delimit\r\neach category. This delimiter is used for various values throughout\r\nXamarin.Android's build because it works well from the command line for both\r\nMSBuild and make.\r\n\r\nI also added the option specify `Include` as well, but it isn't particularly\r\nuseful for this case."},{"Id":"6855076117","Type":"PullRequestEvent","CreatedAt":"2017-11-14T21:08:51","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1028","RelatedDescription":"Opened pull request \"[Tests] Run runtime test in Release/Aot configuration again\" (#1028) at xamarin/xamarin-android","RelatedBody":"Recently the migration of running the apk tests to msbuild (https://github.com/xamarin/xamarin-android/commit/cdf3bcc11aaf036b68daaec504f6ffa4dbbc120a)\r\nstopped running runtime test with Aot.\r\n\r\nThe reason of it is that `_AotName` property is not set, when calling\r\n`MSBuild` task to run the apk tests. This patch moves the property to\r\n`Configuration.props` and renames to `TestsAotName`, so that it is set\r\nin the test project."},{"Id":"6854998730","Type":"PullRequestEvent","CreatedAt":"2017-11-14T20:52:12","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1027","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/f90f006\" (#1027) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/java.interop/pull/211\r\n\r\nLooking to fix `ANDROID_SDK_PATH` not set in tests on Windows."},{"Id":"6854989298","Type":"PullRequestEvent","CreatedAt":"2017-11-14T20:50:08","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/606","RelatedDescription":"Closed pull request \"[README] Document \"`autopoint` in $PATH\" requirement\" (#606) at xamarin/xamarin-android","RelatedBody":"We [recently discovered][0] that a mono bump was failing to build\r\nbecause:\r\n\r\n 1. The Jenkins machine building the PR has Homebrew 1.2.1 installed.\r\n\r\n 2. The Jenkins machine attempting to build the PR has never built\r\n    MXE before, as MXE is only required for *full* builds in which the\r\n    mono runtime has changed.\r\n\r\n 3. The MXE build failed, because `autopoint` wasn't in `$PATH`:\r\n\r\n        Executing: make MXE_TARGETS=\"i686-w64-mingw32.static\" gcc cmake zlib pthreads dlfcn-win32 mman-win32 PREFIX=\"/Users/builder/android-toolchain /mxe\"\r\n        Missing requirement: autopoint\r\n\r\nThe result is a very sad panda.\r\n\r\nWe (hopefully) fixed this issue by force-linking `gettext`:\r\n\r\n\t$ brew link --force gettext\r\n\r\nDocument this new requirement so that we don't forget about it.\r\n\r\n[0]: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/966"},{"Id":"6854987570","Type":"PullRequestEvent","CreatedAt":"2017-11-14T20:49:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1026","RelatedDescription":"Opened pull request \"[android-toolchain] Provide path to `autopoint`\" (#1026) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1138882&_a=summary\r\nContext: https://github.com/xamarin/xamarin-android/pull/606#issuecomment-304171702\r\n\r\nWe [discovered 6 months ago][0] that a mono bump was failing to build\r\nbecause:\r\n\r\n[0]: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/966\r\n\r\n 1. The Jenkins machine building the PR has Homebrew 1.2.1 installed.\r\n\r\n 2. The Jenkins machine attempting to build the PR has never built\r\n    MXE before, as MXE is only required for *full* builds in which the\r\n    mono runtime has changed.\r\n\r\n 3. The MXE build failed, because `autopoint` wasn't in `$PATH`:\r\n\r\n        Executing: make MXE_TARGETS=\"i686-w64-mingw32.static\" gcc cmake zlib pthreads dlfcn-win32 mman-win32 PREFIX=\"/Users/builder/android-toolchain /mxe\"\r\n        Missing requirement: autopoint\r\n\r\nThe result is a very sad panda.\r\n\r\nThis *could* be fixed by force-linking the `gettext` package:\r\n\r\n\t$ brew link --force gettext\r\n\r\nHowever, this is considered to be overkill, as there may be multiple\r\nother `autopoint`s in `$PATH`. (Presumably there's *some* reason why\r\nBrew 1.2 doesn't install `autopoint` into `$PATH`...)\r\n\r\nThis same issue also reappeared while attempting to build\r\nxamarin-android within VSTS, as the VSTS bots similarly haven't run\r\n`brew link --force gettext` either.\r\n\r\nFix this issue by overriding `$PATH` when building MXE so that it\r\ncontains the path to `autopoint`, as returned by:\r\n\r\n\tdirname $(brew list gettext | grep autopoint$)"},{"Id":"6851706604","Type":"PullRequestEvent","CreatedAt":"2017-11-14T09:57:38","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1025","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Use `adb install -r`\" (#1025) at xamarin/xamarin-android","RelatedBody":"Commit 70d9e2ff added a \"rudimentary `Install` target\". This worked in\r\nthat it would install a package, but was less than ideal because it\r\nwould *fail* on multiple installs:\r\n\r\n\t$ msbuild /t:Install App.csproj\r\n\t# works\r\n\t$ msbuild /t:Install App.csproj\r\n\tFailed to install App-Signed.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install App without first uninstalling.]\r\n\r\nUse `adb install -r` instead of `adb install` so that we *replace*\r\nexisting packages, should there be an existing package.\r\n\r\nThis should remove a potential headache from using the OSS bits with\r\nVisual Studio for Mac/etc."},{"Id":"6850001579","Type":"PullRequestEvent","CreatedAt":"2017-11-14T00:43:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1016","RelatedDescription":"Merged pull request \"[tests] fix Java.Interop test results copying\" (#1016) at xamarin/xamarin-android","RelatedBody":"On Windows, under MSBuild, I noticed a clean build was not copying the\r\ntest results from `external/Java.Interop` to the root directory. Two\r\nthings were causing this to be overlooked: the `<Copy />` task left the\r\noriginal files from past test runs, and the `@(_JavaInteropTestResults)`\r\n`ItemGroup` was calculated at the top of the file. I *think* this is\r\nsomehow working on xbuild.\r\n\r\nTo fix this, I moved the location of the `@(_JavaInteropTestResults)`\r\n`ItemGroup` to happen during the target, instead of at the top of the\r\nfile. I also added a `<Delete />` task after the `<Copy />` to keep a clean\r\n`external/Java.Interop` directory. It doesn't look like xbuild supports\r\n`<Move />`."},{"Id":"6849192338","Type":"PullRequestEvent","CreatedAt":"2017-11-13T21:11:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1025","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Use `adb install -r`\" (#1025) at xamarin/xamarin-android","RelatedBody":"Commit 70d9e2ff added a \"rudimentary `Install` target\". This worked in\r\nthat it would install a package, but was less than ideal because it\r\nwould *fail* on multiple installs:\r\n\r\n\t$ msbuild /t:Install App.csproj\r\n\t# works\r\n\t$ msbuild /t:Install App.csproj\r\n\tFailed to install App-Signed.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install App without first uninstalling.]\r\n\r\nUse `adb install -r` instead of `adb install` so that we *replace*\r\nexisting packages, should there be an existing package.\r\n\r\nThis should remove a potential headache from using the OSS bits with\r\nVisual Studio for Mac/etc."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6856097877","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:45:37","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1275","RelatedDescription":"Opened pull request \"Fix 59896; Add empty listView group twice\" (#1275) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nExpect adding two empty groups to a ListView won't crash app. Actually crashes. Test TryGetValue for null instead of indexing with bad index.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59896\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6854312263","Type":"PullRequestEvent","CreatedAt":"2017-11-14T18:29:17","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1274","RelatedDescription":"Opened pull request \"[iOS] Fix issue when enabling SafeArea and scrolling \" (#1274) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSince on iOS11 the NavigationBar has a interaction with UIScrollView it will change it's size, Forms needs to be able to handle that. \r\n\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60659\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"6853674985","Type":"PullRequestEvent","CreatedAt":"2017-11-14T16:27:34","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1273","RelatedDescription":"Opened pull request \"[UITest] Update UITest package to 2.2.1.1670-dev\" (#1273) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTry fix API25 pinch issues \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6852954528","Type":"PullRequestEvent","CreatedAt":"2017-11-14T14:26:06","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1271","RelatedDescription":"Merged pull request \"[Xaml[C]] route loading of RD through ResourceLoader\" (#1271) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml[C]] route loading of RD through ResourceLoader\r\n - allows the Previewer to inject modified RD (without code-behind) without recompiling\r\n - will allow CSS to work in the previewer\r\n - add tests for ResourceLoader\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\nResourceLoader now takes a path (vs a ResourceId). That's no problem as it's internal API, and the previewer doesn't use that yet.\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6852952556","Type":"PullRequestEvent","CreatedAt":"2017-11-14T14:25:44","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1272","RelatedDescription":"Merged pull request \"[Xaml] do not report unhandled node on XmlDeclaration\" (#1272) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml] do not report unhandled node on XmlDeclaration\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6852725231","Type":"PullRequestEvent","CreatedAt":"2017-11-14T13:41:45","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1272","RelatedDescription":"Opened pull request \"[Xaml] do not report unhandled node on XmlDeclaration\" (#1272) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml] do not report unhandled node on XmlDeclaration\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"6852527487","Type":"PullRequestEvent","CreatedAt":"2017-11-14T12:59:54","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1271","RelatedDescription":"Opened pull request \"[Xaml[C]] route loading of RD through ResourceLoader\" (#1271) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml[C]] route loading of RD through ResourceLoader\r\n - allows the Previewer to inject modified RD (without code-behind) without recompiling\r\n - will allow CSS to work in the previewer\r\n - add tests for ResourceLoader\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\nResourceLoader now takes a path (vs a ResourceId). That's no problem as it's internal API, and the previewer doesn't use that yet.\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6855803943","Type":"PullRequestEvent","CreatedAt":"2017-11-15T00:06:46","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3008","RelatedDescription":"Opened pull request \"[Foundation] Expose initWithDictionary:copyItems: in NS[Mutable]Array, Fixes bug 60541\" (#3008) at xamarin/xamarin-macios","RelatedBody":"https://bugzilla.xamarin.com/show_bug.cgi?id=60541"},{"Id":"6855082819","Type":"PullRequestEvent","CreatedAt":"2017-11-14T21:10:20","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3006","RelatedDescription":"Merged pull request \"[monotouch-test] Fix ContactStoreTest for watchOS\" (#3006) at xamarin/xamarin-macios","RelatedBody":"Backport/merge of PR #306 to avoid random failures on bots.\nShould fix https://github.com/xamarin/maccore/issues/577"},{"Id":"6854897060","Type":"PullRequestEvent","CreatedAt":"2017-11-14T20:30:09","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2905","RelatedDescription":"Merged pull request \"[runtime] integrate mono 2017-10\" (#2905) at xamarin/xamarin-macios","RelatedBody":"either this PR or https://github.com/xamarin/xamarin-macios/pull/2906"},{"Id":"6854536396","Type":"PullRequestEvent","CreatedAt":"2017-11-14T19:15:28","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3006","RelatedDescription":"Opened pull request \"[monotouch-test] Fix ContactStoreTest for watchOS\" (#3006) at xamarin/xamarin-macios","RelatedBody":"Backport/merge of PR #306 to avoid random failures on bots.\nShould fix https://github.com/xamarin/maccore/issues/577"},{"Id":"6854364728","Type":"PullRequestEvent","CreatedAt":"2017-11-14T18:40:12","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3003","RelatedDescription":"Merged pull request \"Include the mono version in Versions.plist.\" (#3003) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6853986609","Type":"PullRequestEvent","CreatedAt":"2017-11-14T17:22:16","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3005","RelatedDescription":"Opened pull request \" [MetalPerformanceShaders] Xcode 9 bindings\" (#3005) at xamarin/xamarin-macios","RelatedBody":"Activate bindings for Xamarin.Mac"},{"Id":"6853224478","Type":"PullRequestEvent","CreatedAt":"2017-11-14T15:12:59","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2998","RelatedDescription":"Merged pull request \"[storekit] Fix SKCloudServiceSetupOptions strong dictionary's 'Action'\" (#2998) at xamarin/xamarin-macios","RelatedBody":"- Fixes bug [#59928](https://bugzilla.xamarin.com/show_bug.cgi?id=59928): SKCloudServiceSetupViewController.LoadAsync() does not work correctly when passed an SKCloudServiceSetupOptions object instead of a manually-created NSDictionary"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"930533047761502209","CreatedAt":"2017-11-14T20:29:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build better games using #Unity3D and Microsoft #Azure in this previously recorded webinar:… https://t.co/wmTSoKZrLu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":13,"RawContent":null},{"Id":"930482715643858944","CreatedAt":"2017-11-14T17:09:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss out! #MSFTConnect starts TOMORROW with a full schedule of keynotes, sessions, + more. Set a reminder:… https://t.co/kbER7zYaJk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":12,"FavoriteCount":12,"RawContent":null},{"Id":"930284906827182080","CreatedAt":"2017-11-14T04:03:00+00:00","UserScreenname":"xamarinhq","Text":"Build better enterprise apps with our eBook, \"Enterprise Application Patterns using #XamarinForms\": https://t.co/YryVqlrejk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":80,"FavoriteCount":39,"RawContent":null},{"Id":"930170523077808128","CreatedAt":"2017-11-13T20:28:29+00:00","UserScreenname":"xamarinhq","Text":"Add sound to your #XamarinForms app with the open-source SimpleAudioPlayer #NuGet plugin: https://t.co/r8NSFRpl33 https://t.co/4usO1fHLdw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":29,"RawContent":null},{"Id":"929876716981489664","CreatedAt":"2017-11-13T01:01:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample Android camera app with facial tracking and recognition using Microsoft Cognitive Services’ Face API: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":99,"FavoriteCount":50,"RawContent":null},{"Id":"929511313910501376","CreatedAt":"2017-11-12T00:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/vZZBmv3SFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":169,"FavoriteCount":62,"RawContent":null},{"Id":"929066506620669953","CreatedAt":"2017-11-10T19:21:31+00:00","UserScreenname":"xamarinhq","Text":"#dotNET Standard comes to the #XamarinForms project templates: https://t.co/ZSlHPxw0IV https://t.co/UrhhsHZsvx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":52,"RawContent":null},{"Id":"929031145395810304","CreatedAt":"2017-11-10T17:01:00+00:00","UserScreenname":"xamarinhq","Text":"Build a remote control companion app for Android with Microsoft's Project Rome: https://t.co/SLeQw6q4YO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":10,"RawContent":null},{"Id":"928728202394177536","CreatedAt":"2017-11-09T20:57:13+00:00","UserScreenname":"xamarinhq","Text":"Details on the exciting #Xamarin and @XamarinU Sessions at #MSFTConnect 2017! Check them out, and make sure to save… https://t.co/Pgu0dQ0cvB","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":24,"FavoriteCount":14,"RawContent":null},{"Id":"928668030825123841","CreatedAt":"2017-11-09T16:58:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSMobileCenter: https://t.co/XHMCHeVNSB https://t.co/Hls7p2NJXr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":33,"RawContent":null},{"Id":"928305615264460801","CreatedAt":"2017-11-08T16:58:00+00:00","UserScreenname":"xamarinhq","Text":"Taking advantage of Active Directory for apps is now easier thanks to new APIs for authentication &amp; #MicrosoftGraph: https://t.co/d9Rlu92TWT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":26,"RawContent":null},{"Id":"928004385258508288","CreatedAt":"2017-11-07T21:01:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/OyNYhgtg0U","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":26,"RawContent":null},{"Id":"927940459388899328","CreatedAt":"2017-11-07T16:47:00+00:00","UserScreenname":"xamarinhq","Text":"Last call for the \"Build Better Games with #Unity3D and Microsoft #Azure\" webinar at 9 am PT / 12 pm ET! Join us: https://t.co/745qhvt8Gi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":13,"FavoriteCount":13,"RawContent":null},{"Id":"927644032351776768","CreatedAt":"2017-11-06T21:09:06+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/QlMPzx5vJC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":28,"RawContent":null},{"Id":"927582097828732928","CreatedAt":"2017-11-06T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to \"Build Better Games with #Unity3D &amp; Microsoft #Azure\" in our webinar tomorrow 11/7 @ 9am PT / 12 pm ET: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":23,"RawContent":null},{"Id":"927338995150999553","CreatedAt":"2017-11-06T00:57:00+00:00","UserScreenname":"xamarinhq","Text":"Get the most out of Binding in #XamarinForms with this overview of the powerful features that you should be using: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":87,"FavoriteCount":38,"RawContent":null},{"Id":"926954720652156928","CreatedAt":"2017-11-04T23:30:02+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/xI35uybGVl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":22,"RawContent":null},{"Id":"926564395592937479","CreatedAt":"2017-11-03T21:39:01+00:00","UserScreenname":"xamarinhq","Text":"Making iOS 11 even easier with #XamarinForms: https://t.co/nIDGNXGuF1 https://t.co/vATfam9JyU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":107,"FavoriteCount":69,"RawContent":null},{"Id":"926479834141937664","CreatedAt":"2017-11-03T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Embedding #XamarinForms in #Xamarin.iOS and https://t.co/3QxhuBuvHc: https://t.co/U3QvCAOeFf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2017-11-15T05:30:40.3254511Z","RunDurationInMilliseconds":4121}