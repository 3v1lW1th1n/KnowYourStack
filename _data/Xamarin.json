{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7760006055","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:06:04","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1776","RelatedDescription":"Opened pull request \"Make sure to remove previous Xamarin.Android.Sdk.(props|targets)\" (#1776) at xamarin/xamarin-android","RelatedBody":"They have been kept old in their directory, and updates have been prevented.\r\nThat resulted in incorrect TargetFrameworkRootPath setting in the previous\r\nbogus property definition. Removing this file fixes it."},{"Id":"7759909821","Type":"IssuesEvent","CreatedAt":"2018-06-01T02:30:15","Actor":"plynkus","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1775","RelatedDescription":"Opened issue \"MSBuildWorkspace load failures (Microsoft.CodeAnalysis.*) for Xamarin.Android projects.\" (#1775) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a simple console app.  Add nuget packages: Microsoft.CodeAnalysis, Microsoft.Build.Locator.\r\n2. Add boilerplate code to load a project in a workspace, e.g.:\r\n\r\n```\r\nusing Microsoft.CodeAnalysis;\r\nusing Microsoft.CodeAnalysis.MSBuild;\r\n\r\nusing System.Threading.Tasks;\r\n\r\nnamespace AndroidRoslynFailure\r\n{\r\n    class Program\r\n    {\r\n        static async Task Main(string[] args)\r\n        {\r\n            var workspace = MSBuildWorkspace.Create();\r\n            workspace.WorkspaceFailed += WorkspaceFailed;\r\n            var project = await workspace.OpenProjectAsync(@\"C:\\path\\to\\android.csproj\");\r\n\r\n            return;\r\n        }\r\n\r\n        private static void WorkspaceFailed(object sender, WorkspaceDiagnosticEventArgs e)\r\n        {\r\n            return;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n3. Set breakpoints at both returns above (to catch the success/failure cases).\r\n\r\n### Expected Behavior\r\n\r\nSuccess.  (Works for other project types---iOS, UWP, etc.)\r\n\r\n### Actual Behavior\r\n\r\nFailure.  The WorkspaceFailed handler is called with diagnostic information of the form:\r\n\r\n```\r\n{[Failure] Msbuild failed when processing the file 'C:\\Temp\\AndroidRoslynFailure\\App\\App.csproj' with message: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets: (52, 5): The \"Csc\" task failed unexpectedly.\r\nSystem.InvalidOperationException: MSB3087: An incompatible host object was passed into the \"Csc\" task.  The host object for this task must implement the \"ICscHostObject\" interface.\r\n   at Microsoft.CodeAnalysis.BuildTasks.Csc.AddResponseFileCommands(CommandLineBuilderExtension commandLine)\r\n   at Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler.GenerateResponseFileCommands()\r\n   at Microsoft.Build.Utilities.ToolTask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()}\r\n```\r\n\r\nThis issue began fairly recently (at least in the Visual studio 15.7.2+ timeframe).  We perform custom build tasks that do some of their work through code analysis and these steps now fail for Xamarin.Android projects only.\r\n\r\nIf you believe this is not due to some difference in the Xamarin.Android toolchain itself, I can kick this over to the Roslyn issues list as well.  I'll be taking a look at the repositories to try and understand from where ICscHostObject implementers are provided per platform.\r\n\r\n### Version Information\r\n\r\nCurrently stock Visual Studio 15.7.3, tip nuget packages for those cited above.\r\n\r\n### Log File\r\n\r\nn/a\r\n"},{"Id":"7759881040","Type":"PullRequestEvent","CreatedAt":"2018-06-01T02:19:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1774","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] AndroidCodegenTarget=XAJavaInterop1\" (#1774) at xamarin/xamarin-android","RelatedBody":"When `$(AndroidCodegenTarget)`=XAJavaInterop1, `generator` output uses\r\n`Java.Interop.JniPeerMembers` for JNI member invocations instead of\r\nthe legacy `Android.Runtime.JNIEnv` methods.\r\n\r\nThis has a number of benefits, such as:\r\n\r\n  * Reduced memory use (less garbage generated)\r\n  * Smaller assemblies.\r\n  * Faster `base.Method()` invocations.\r\n  * Improved `jmethodID` caching of Java Callable Wrapper constructors\r\n    for type subclasses.\r\n\r\nThe problem?  Assemblies built under `XAJavaInterop1` cannot run on\r\nXamarin.Android 6.0 and earlier.\r\n\r\nXamarin.Android 6.0 was over 2.5 *years* ago.  We do not consider this\r\nto be a signifiant concern, while the *memory and performance\r\nbenefits* are significant.\r\n\r\nUpdate the default `$(AndroidCodegenTarget)` value to `XAJavaInterop1`.\r\n\r\nIf this is undesirable, projects can set the `$(AndroidCodegenTarget)`\r\nMSBuild property to `XamarinAndroid` for the previous behavior."},{"Id":"7759746263","Type":"PullRequestEvent","CreatedAt":"2018-06-01T01:28:16","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1773","RelatedDescription":"Opened pull request \"[Xamarin.Forms Integration] only set `$(AndroidUseAapt2)` on non-Windows platforms\" (#1773) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1771\r\n\r\nThe `Xamarin.Forms-Performance-Integration` project is currently\r\nsetting `$(AndroidUseAapt2)` as a way to test its performance\r\nimprovements.\r\n\r\nSince setting `$(AndroidUseAapt2)` would cause `aapt.exe` to operate\r\nacross different drives on VSTS (`C:\\` and `E:\\`), this is breaking\r\nthe build.\r\n\r\nFor now, let's not set `$(AndroidUseAapt2)` on Windows. We also have\r\nto move the property *after* `Configuration.props` is imported, so\r\n`$(HostOS)` is set."},{"Id":"7759718555","Type":"PullRequestEvent","CreatedAt":"2018-06-01T01:17:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1757","RelatedDescription":"Merged pull request \"[build] fix Java.Interop's Mono.Cecil usage on Windows\" (#1757) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/9bc51aed62d6e00035496dc3c6a76fb303a5fa90#diff-b67911656ef5d18c4ae36cb6741b7965R114\r\n\r\nJava.Interop was recently configured to use Mono's copy of\r\n`Mono.Cecil`. This change was setup in the `Makefile`:\r\n\r\n    prepare-props: prepare-deps\r\n        cp $(call GetPath,JavaInterop)/external/Mono.Cecil* \"$(call GetPath,MonoSource)/external\"\r\n        cp \"$(call GetPath,JavaInterop)/product.snk\" \"$(call GetPath,MonoSource)\"\r\n\r\nWe have to run the equivalent of these `cp` commands in\r\n`PrepareWindows.targets`."},{"Id":"7759702540","Type":"PullRequestEvent","CreatedAt":"2018-06-01T01:10:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1772","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/5efe5c29\" (#1772) at xamarin/xamarin-android","RelatedBody":"Updates Java.Interop's `make prepare` to generate\r\n`src/Java.Runtime.Environment/Java.Runtime.Environment.dll.config`."},{"Id":"7759679105","Type":"PullRequestEvent","CreatedAt":"2018-06-01T01:01:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1767","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Per-TFV IOP on Windows\" (#1767) at xamarin/xamarin-android","RelatedBody":"Context: 13d216fd86b4419eee8029abecf2ef24115edf26\r\nContext: 96b735273bb70b5ef40698d9ed4c287108792b9d\r\n\r\nAfter internal deliberation, we have decided that it is sufficiently\r\n\"safe enough\" to set\r\n`$(AppendTargetFrameworkToIntermediateOutputPath)`=True on Windows,\r\nso that `$(IntermediateOutputPath)` contains\r\n`$(TargetFrameworkVersion)`."},{"Id":"7759215249","Type":"IssuesEvent","CreatedAt":"2018-05-31T22:23:14","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1769","RelatedDescription":"Closed issue \"Android app build fails when referencing package (e.g. Entity Framework Core 2.1) that depends on newer System.Memory\" (#1769) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download, extract, and load the sample solution in Visual Studio 15.7.2.\r\n[AndroidEFCore21Soln.zip](https://github.com/xamarin/xamarin-android/files/2059733/AndroidEFCore21Soln.zip)\r\n\r\n2. Build and run the project.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nThe project should build and run.\r\n\r\n### Actual Behavior\r\n\r\nThe project won't build. The build fails with the following error:\r\n\r\n> 1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1590,2): error : Exception while loading assemblies: System.IO.FileNotFoundException: Could not load assembly 'System.Memory, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. Perhaps it doesn't exist in the Mono for Android profile?\r\n\r\nEF Core v2.1 or one of its dependencies in turn depends on package `System.Memory` v4.5.0, while the build appears to be trying to link the app with v4.0.1.0 of the `System.Memory` assembly.\r\n\r\nThe previous release of EF Core, v2.0.3, could be included in a Xamarin.Android project without causing this problem. If you change the sample solution to refer to package `Microsoft.EntityFrameworkCore.Sqlite` v2.0.3 instead of v2.1, the project builds and the app runs as expected.\r\n\r\n### Version Information\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.2\r\nVisualStudio.15.Release/15.7.2+27703.2018\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA398\r\nMicrosoft Visual C++ 2017\r\n\r\nAdd New File   3.5\r\nThe fastest and easiest way to add new files to any project - including files that start with a dot\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40511.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.21208.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCodeMaid   10.4.53\r\nCodeMaid is an open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.2.2    Build 109.0.20171006.122324\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOpen Command Line   2.1.179\r\nOpens a command line at the root of the project. Support for all consoles such as CMD, PowerShell, Bash etc. Provides syntax highlighting, Intellisense and execution of .cmd and .bat files.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSearch in Velocity by Silverlake Software LLC   0.7.1\r\nProvides a command to search in Velocity the offline documentation and docset viewer for Windows\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQLite & SQL Server Compact Toolbox   4.7\r\nSQLite & SQL Server Compact Toolbox adds scripting, import, export, rename, query execution and much more to SQL Server Compact & SQLite Data Connections.\r\n\r\nSyntax Visualizer   1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 56f97a8dd4353d897336941f3e644423b87c794f.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2018\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nVSColorOutput   2.5.1\r\nColor output for build and debug windows - http://mike-ward.net/vscoloroutput\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.448 (4373404db)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.270 (82d750d12)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.178 (408d357)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\n1>------ Build started: Project: AndroidEFCore21, Configuration: Debug Any CPU ------\r\n1>  AndroidEFCore21 -> D:\\Projects\\AndroidEFCore21Soln\\AndroidEFCore21\\bin\\Debug\\AndroidEFCore21.dll\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1590,2): error : Exception while loading assemblies: System.IO.FileNotFoundException: Could not load assembly 'System.Memory, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. Perhaps it doesn't exist in the Mono for Android profile?\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1590,2): error : File name: 'System.Memory.dll'\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1590,2): error :    at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1590,2): error :    at Xamarin.Android.Tasks.ResolveAssemblies.AddAssemblyReferences(DirectoryAssemblyResolver resolver, ICollection`1 assemblies, AssemblyDefinition assembly, Boolean topLevel)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1590,2): error :    at Xamarin.Android.Tasks.ResolveAssemblies.Execute(DirectoryAssemblyResolver resolver)\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\r\n\r\nProjects build report:\r\n  Status    | Project [Config|platform]\r\n -----------|---------------------------------------------------------------------------------------------------\r\n  Failed    | AndroidEFCore21\\AndroidEFCore21.csproj [Debug|Any CPU]\r\n\r\nTime Elapsed 00:00:07.753\r\n\r\n```\r\n\r\n### Log File\r\n\r\n`adb logcat` output is not applicable as the app didn't even build.\r\n\r\n### Example Project\r\n\r\n[AndroidEFCore21Soln.zip](https://github.com/xamarin/xamarin-android/files/2059733/AndroidEFCore21Soln.zip)\r\n"},{"Id":"7759130867","Type":"IssuesEvent","CreatedAt":"2018-05-31T22:00:56","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1771","RelatedDescription":"Opened issue \"[Aapt2] Can't operate across drives on Windows\" (#1771) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nSee VSTS build here: http://build.devdiv.io/1735992\r\n\r\n1. Create a project into `E:\\` or some secondary drive with Aapt2 enabled\r\n2. Your system has `%TEMP%` in `C:\\`\r\n3. `aapt2.exe` fails an error such as:\r\n\r\n```\r\nerror APT0000: failed to create directory 'C:\\Users\\myuser\\AppData\\Local\\Temp\\3\\hyxjnzdb.0d1\\xamarin\\forms_performance_integration'.\r\n```\r\n\r\nOther links about this:\r\n- https://stackoverflow.com/questions/46512990/gradle-error-failed-to-create-directory\r\n- https://github.com/xamarin/xamarin-android/pull/1757\r\n\r\n### Expected Behavior\r\n\r\n`Aapt2` works even if you have the project on a second drive.\r\n\r\n### Actual Behavior\r\n\r\n`Aapt` fails.\r\n\r\n### Version Information\r\n\r\nI was using `xamarin-android/master/1cbac614061df022d93fcff2384afdbba813e37e`.\r\n\r\nDon't know what we should even do about this, but I thought I would file it..."},{"Id":"7759030362","Type":"IssuesEvent","CreatedAt":"2018-05-31T21:36:51","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1770","RelatedDescription":"Opened issue \"[Aapt2] Unable to build project targeting Android 5.0 (TargetFrameworkVersion) on Windows with Aapt2 enabled\" (#1770) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. `msbuild /t:SignAndroidPackage /p:AndroidUseAapt2=true monodroid-samples\\Button\\DroidButton.csproj /v:diag`\r\n\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/Button \r\n\r\nI can reproduce this with the default TargetFrameworkVersion of the project (v2.3), as well as v4.0.4, and v4.4. However, if I target v5.0 or greater then my build succeeds.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProject builds successfully with Aapt2 enabled.\r\n\r\n### Actual Behavior\r\n```\r\nExecuting link --manifest C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03\\manifest\\AndroidManifest.xml --java C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03 --custom-package mono.samples.button -R obj\\\\Debug\\\\compiled.flata --auto-add-overlay -I \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-10\\android.jar\" --output-text-symbols obj\\\\Debug\\R.txt -o C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03\\resources.apk (TaskId:97)\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053d, entry index(1341) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053e, entry index(1342) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053b, entry index(1339) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053c, entry index(1340) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nDone executing task \"Aapt2Link\" -- FAILED. (TaskId:97)\r\n```\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/220d551af40c4ccc18db3e7df0c1b72f\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/57dec1bd340d9212129c1d8a0a779433\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7758910721","Type":"PullRequestEvent","CreatedAt":"2018-05-31T21:11:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1765","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/e0a0daf6\" (#1765) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/projects/1\r\n\r\nUpdates `java_interop_gc_bridge_new()` to call\r\n`monodroid_dylib_mono_init()` on macOS.  This is so that\r\n`jnimarshalmethod-gen.exe` under xamarin-android can use the (already\r\nexisting) `libmono-android.debug.dylib`.\r\n\r\nUpdate `Xamarin.Android.ApiTools.ParameterNameExtractor` to better\r\nhandle Java enum syntax, as the API-P Java stubs needed more."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7759813139","Type":"IssuesEvent","CreatedAt":"2018-06-01T01:53:44","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2893","RelatedDescription":"Closed issue \"The type or namespace name 'WPF' does not exist\" (#2893) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0234\tThe type or namespace name 'WPF' does not exist in the namespace 'Xamarin.Forms.Platform' (are you missing an assembly reference?)\r\n\r\n- Nuget Packages: 3.1 preview\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/33021114/40816487-f6860038-6555-11e8-9c18-5cbd19ca6de1.png)\r\n\r\n"},{"Id":"7759789343","Type":"IssuesEvent","CreatedAt":"2018-06-01T01:44:38","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2894","RelatedDescription":"Opened issue \"[iOS] Gesture Recognizers added to Span after it's been set to FormattedText don't work and can cause an NRE\" (#2894) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n- Adding a TapGestureRecognizer to a span after it's been set to FormattedText on a label doesn't work\r\n- If you now click that Span really fast you'l get an NRE\r\n\r\n### Steps to Reproduce\r\n\r\nclick on the \r\n*\"I will not fire when clicked\"*\r\ntext and notice nothing happens\r\nclick on it really fast and see an NRE exception\r\n\r\n```c#\r\nvar label = new Label();\r\n\r\n\t\t\tvar s = new FormattedString();\r\n\t\t\tvar span = new Span { Text = \"I will fire when clicked\", FontAttributes = FontAttributes.Bold };\r\n\t\t\tvar span2 = new Span { Text = \"I will not fire when clicked\", FontAttributes = FontAttributes.Bold };\r\n\t\t\tspan.GestureRecognizers.Add(new TapGestureRecognizer()\r\n\t\t\t{\r\n\t\t\t\tCommand = new Command(async () =>\r\n\t\t\t   {\r\n\t\t\t\t   await MainPage.DisplayAlert(\"Yay clicked\", \"yay clicked\", \"yay clicked\");\r\n\t\t\t   })\r\n\t\t\t});\r\n\r\n\t\t\ts.Spans.Add(span);\r\n\t\t\ts.Spans.Add(span2);\r\n\r\n\t\t\tlabel.FormattedText = s;\r\n\t\t\tspan2.GestureRecognizers.Add(new TapGestureRecognizer()\r\n\t\t\t{\r\n\t\t\t\tCommand = new Command(async () =>\r\n\t\t\t   {\r\n\t\t\t\t\tawait MainPage.DisplayAlert(\"not working\", \"not working\", \"not working\");\r\n\t\t\t   })\r\n\t\t\t});\r\n\r\n\t\t\treturn new ContentPage()\r\n\t\t\t{\r\n\t\t\t\tContent = new StackLayout()\r\n\t\t\t\t{\r\n\t\t\t\t\tChildren = { label },\r\n\t\t\t\t\tPadding = 40\r\n\t\t\t\t}\r\n\t\t\t};\r\n```\r\n\r\n### Expected Behavior\r\nBoth spans should be clickable and clicking rapidly shouldn't cause a NRE\r\n\r\n### Actual Behavior\r\nWhen clicking on the second span nothing happens.\r\nIf you click the span really fast it'll cause a NRE\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1 nightly\r\n- IDE: VS for Mac\r\n- Platform Target Frameworks:  \r\n  - iOS:  11.2  \r\n\r\n "},{"Id":"7759780956","Type":"IssuesEvent","CreatedAt":"2018-06-01T01:41:15","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2893","RelatedDescription":"Opened issue \"The type or namespace name 'WPF' does not exist\" (#2893) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0234\tThe type or namespace name 'WPF' does not exist in the namespace 'Xamarin.Forms.Platform' (are you missing an assembly reference?)\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: 3.1 preveiew\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/33021114/40816487-f6860038-6555-11e8-9c18-5cbd19ca6de1.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7759776299","Type":"IssuesEvent","CreatedAt":"2018-06-01T01:39:30","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2892","RelatedDescription":"Opened issue \"[Android, UWP] Span Gesture Recognizer issues with two adjacent spans\" (#2892) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen adding TapGestureRecognizer (and probably other Recognizers) to two adjacent spans the Tap behavior isn't consistent across platforms\r\n\r\n### Steps to Reproduce\r\n\r\n```C#\r\nvar label = new Label();\r\n\r\n\t\t\tvar s = new FormattedString();\r\n\t\t\tvar span = new Span { Text = \"I will fire when clicked\", FontAttributes = FontAttributes.Bold };\r\n\t\t\tvar span2 = new Span { Text = \"I will not fire when clicked\", FontAttributes = FontAttributes.Bold };\r\n\t\t\tspan.GestureRecognizers.Add(new TapGestureRecognizer()\r\n\t\t\t{\r\n\t\t\t\tCommand = new Command(async () =>\r\n\t\t\t   {\r\n\t\t\t\t   await MainPage.DisplayAlert(\"Yay clicked\", \"yay clicked\", \"yay clicked\");\r\n\t\t\t   })\r\n\t\t\t});\r\n\r\n\t\t\ts.Spans.Add(span);\r\n\t\t\ts.Spans.Add(span2);\r\n\r\n\t\t\t// Android: can click span or span2 once but that's it\r\n\t\t\t// UWP: doesn't work at all\r\n\t\t\t// iOS: can click span but not span2. If you click span really fast on span you'll get an NRE\r\n\t\t\t// label.FormattedText = s;\r\n\t\t\tspan2.GestureRecognizers.Add(new TapGestureRecognizer()\r\n\t\t\t{\r\n\t\t\t\tCommand = new Command(async () =>\r\n\t\t\t   {\r\n\t\t\t\t\tawait MainPage.DisplayAlert(\"not working\", \"not working\", \"not working\");\r\n\t\t\t   })\r\n\t\t\t});\r\n\t\t\t// Android: can click span or span2 once but that's it\r\n\t\t\t// UWP: doesn't work at all\r\n\t\t\t// iOS: you can click both spans but if you comment out the display alerts and click really fast you'll get an NRE\r\n\t\t\tlabel.FormattedText = s;\r\n\r\n\t\t\treturn new ContentPage()\r\n\t\t\t{\r\n\t\t\t\tContent = new StackLayout()\r\n\t\t\t\t{\r\n\t\t\t\t\tChildren = { label },\r\n\t\t\t\t\tPadding = 40\r\n\t\t\t\t}\r\n\t\t\t};\r\n```\r\n\r\n### Expected Behavior\r\nBoth spans should be clickable and remain clickable\r\n\r\n### Actual Behavior\r\nAndroid - can click once but no more\r\nUWP - can't click at all\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1 nightly\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks:\r\n  - Android: api 19\r\n  - UWP:  16299\r\n \r\n### Reproduction Link\r\n\r\nCode in description\r\n"},{"Id":"7758087889","Type":"IssuesEvent","CreatedAt":"2018-05-31T18:26:18","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2891","RelatedDescription":"Opened issue \"[CSS] vendor prefix\" (#2891) at xamarin/Xamarin.Forms","RelatedBody":"In addition to the already supported properties, we should introduce vendor prefixes `-xf-`, or `-forms-` and map them to some other of our properties.\r\n\r\nSee also #1723\r\n\r\n"},{"Id":"7757840200","Type":"IssuesEvent","CreatedAt":"2018-05-31T17:36:54","Actor":"sonic1015","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2890","RelatedDescription":"Opened issue \"Feature Request: Implement RaiseEvent function for Android BackButton Event\" (#2890) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCurrently it is impossible to override the default back button behaviour AND respect whether Forms has handled the button event or not.\r\n\r\n### Sample Use Case\r\n\r\n1.  Suppose I would like the back button to send app to the background instead of destroying the activity\r\n2. Would also like to maintain the behaviour with regards to Navigation, Closing Modal Popups, etc.\r\n\r\n### What is Stopping This\r\n\r\nSince we can't invoke the BackPressed Event, we can't inform Forms of the event, and can't tell if Forms handled the event. Thus we are stuck with either sending the app to the background on back pressed OR allowing Forms to handle BackEvents but not both.\r\n\r\n### Basic Information\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: All\r\n  - UWP:  Possibly??? Don't know about this one...\r\n- Affected Devices: All devices with a back button"},{"Id":"7757772129","Type":"IssuesEvent","CreatedAt":"2018-05-31T17:23:20","Actor":"anirugu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2889","RelatedDescription":"Opened issue \"In vs 2015, I can't create project, someone check this log #helpneeded\" (#2889) at xamarin/Xamarin.Forms","RelatedBody":"---------------------------\r\nMicrosoft Visual Studio\r\n---------------------------\r\nPackage Installation Error\r\n\r\nCould not add all required packages to the project. The following packages failed to install from 'C:\\PROGRAM FILES (X86)\\MICROSOFT VISUAL STUDIO 14.0\\COMMON7\\IDE\\EXTENSIONS\\XAMARIN\\XAMARIN.FORMS\\Packages':\r\n\r\n\r\n\r\nXamarin.Android.Support.Animated.Vector.Drawable.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Animated.Vector.Drawable 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Annotations.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Annotations 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Compat.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Compat 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Core.UI.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Core.UI 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Core.Utils.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Core.Utils 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Design.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Design 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Fragment.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Fragment 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Media.Compat.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Media.Compat 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.v4.25.4.0.2 : Could not install package 'Xamarin.Android.Support.v4 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.v7.AppCompat.25.4.0.2 : Could not install package 'Xamarin.Android.Support.v7.AppCompat 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.v7.CardView.25.4.0.2 : Could not install package 'Xamarin.Android.Support.v7.CardView 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.v7.MediaRouter.25.4.0.2 : Could not install package 'Xamarin.Android.Support.v7.MediaRouter 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.v7.RecyclerView.25.4.0.2 : Could not install package 'Xamarin.Android.Support.v7.RecyclerView 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\nXamarin.Android.Support.Vector.Drawable.25.4.0.2 : Could not install package 'Xamarin.Android.Support.Vector.Drawable 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n---------------------------\r\nOK   \r\n---------------------------\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7760345025","Type":"PullRequestEvent","CreatedAt":"2018-06-01T05:27:44","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4162","RelatedDescription":"Merged pull request \"Optimize NSActionDispatcher usage\" (#4162) at xamarin/xamarin-macios","RelatedBody":"This PR adds the following value:\r\n\r\n1. There is no Action wrapper being constructed on async continuations,\r\nthus on every await call we gain: 1 less allocation (lambda capture),\r\n1 less indirected call to the actual continuation, and possibly\r\nSystem.Action being removed by the linker, as its no longer used in these cases.\r\n\r\n2. NSActionDispatcher* classes can now be linked out completely, due to\r\nthe static selector no longer being used everywhere\r\n\r\n3. One unused class removed\r\n"},{"Id":"7760318233","Type":"PullRequestEvent","CreatedAt":"2018-06-01T05:17:22","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4167","RelatedDescription":"Merged pull request \"[xharness] Hide summary of test failures in an expandable block in the markdown summary.\" (#4167) at xamarin/xamarin-macios","RelatedBody":"Hide summary of test failures in an expandable block in the markdown summary,\nso that when there are many failures it's still a summary and not pages and\npages of text.\n\nHorror example this will fix: https://github.com/xamarin/xamarin-macios/pull/4163#issuecomment-393566282"},{"Id":"7760318231","Type":"PullRequestEvent","CreatedAt":"2018-06-01T05:17:22","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4163","RelatedDescription":"Closed pull request \"Update XML references wrt XI 11.12 (d15-7 with xcode9.4 support) and bump to 11.13\" (#4163) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7758591798","Type":"IssuesEvent","CreatedAt":"2018-05-31T20:07:31","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4078","RelatedDescription":"Closed issue \"Xcode 9.3 integration - Could not insert new outlet connection\" (#4078) at xamarin/xamarin-macios","RelatedBody":"There are multiple people using Xcode 9.3 with Xamarin.Mac who are unable to add outlets to the Xcode project when editing a storyboard.\r\n\r\n<img width=\"268\" alt=\"screen shot 2018-05-10 at 11 20 34 am\" src=\"https://user-images.githubusercontent.com/6392201/39936315-b1218714-5511-11e8-8a50-7a78131f78bf.png\">\r\n\r\nIt appears inconsistent, as it failed for me yesterday but works today?\r\n\r\nI am not certain that this is a XM bug, but opened this for tracking.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open storyboard\r\n2. In Xcode add control and attempt to create outlet\r\n3. ??\r\n\r\n### Expected Behavior\r\n\r\nXcode to allow outlet\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/chamons/c414e2a969a123db4ed3de3930b99a8d"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1002218901680377858","CreatedAt":"2018-05-31T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/I2dYlz1Tfo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":13,"RawContent":null},{"Id":"1001900437233119234","CreatedAt":"2018-05-30T18:57:33+00:00","UserScreenname":"xamarinhq","Text":"We've got some great @XamarinU Guest Lectures coming up that you won't want to miss! Check them out, and make sure… https://t.co/REGhq5ZF12","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":17,"RawContent":null},{"Id":"1001568114855890945","CreatedAt":"2018-05-29T20:57:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/UH3gpAFFHj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":39,"RawContent":null},{"Id":"1000859470057132032","CreatedAt":"2018-05-27T22:01:07+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/iNmDBtF3zX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1000408472083673089","CreatedAt":"2018-05-26T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/t7b1GH4pMp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":10,"RawContent":null},{"Id":"1000081068660330497","CreatedAt":"2018-05-25T18:28:02+00:00","UserScreenname":"xamarinhq","Text":"Join our open source family and help make https://t.co/3QxhuBuvHc even better: https://t.co/6h1HH1dTAM https://t.co/5go35jCm9N","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"999682195089436672","CreatedAt":"2018-05-24T16:03:03+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/81dQ3CWoSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":13,"RawContent":null},{"Id":"999389007191728134","CreatedAt":"2018-05-23T20:38:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to secure and version your #Xamarin apps in this guest post on Mobile.BuildTools: https://t.co/NTtOmsdDTl https://t.co/ks5Q3K2joU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":17,"RawContent":null},{"Id":"998953429568573440","CreatedAt":"2018-05-22T15:47:11+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/2E1zBel6Cr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"998352195631435777","CreatedAt":"2018-05-20T23:58:06+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/tO3s7DT35f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":124,"FavoriteCount":46,"RawContent":null},{"Id":"997143964397572096","CreatedAt":"2018-05-17T15:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/LeAoHXXaA6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"996824503241052160","CreatedAt":"2018-05-16T18:47:36+00:00","UserScreenname":"xamarinhq","Text":"Get started with #XamarinEssentials cross-platform APIs: https://t.co/sW5UgLfeGb https://t.co/Bw4ufWhGP8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":151,"FavoriteCount":79,"RawContent":null},{"Id":"996785351665463297","CreatedAt":"2018-05-16T16:12:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/UZ5l6JaWcB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"996750580969365506","CreatedAt":"2018-05-16T13:53:51+00:00","UserScreenname":"xamarinhq","Text":"Learn about some small changes coming as we integrate https://t.co/iLyxWYOFfj content into Microsoft sites: https://t.co/RcvPgvkPTD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":8,"RawContent":null},{"Id":"996423969308921856","CreatedAt":"2018-05-15T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/2LzUatSvjX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":24,"RawContent":null},{"Id":"996420693481938944","CreatedAt":"2018-05-15T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/aiwQSbkh1B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":24,"RawContent":null},{"Id":"995782486859964418","CreatedAt":"2018-05-13T21:47:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":34,"RawContent":null},{"Id":"995405503118430215","CreatedAt":"2018-05-12T20:49:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2018-06-01T05:30:53.2164492Z","RunDurationInMilliseconds":4252}