{"Data":{"Blog":{"FeedItems":[{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 previews are now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7609573634","Type":"PullRequestEvent","CreatedAt":"2018-05-01T01:24:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1617","RelatedDescription":"Closed pull request \"Bump to mono/2018-02/b4a42e6\" (#1617) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/pull/8498\r\n\r\nTrying to fix upstream build in monodroid"},{"Id":"7609153923","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:49:23","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1308","RelatedDescription":"Closed issue \"The \"LinkAssemblies\" task failed unexpectedly\" (#1308) at xamarin/xamarin-android","RelatedBody":"When trying to archive a release version of an Android wear project, it errors out with the following:\r\n\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018: The \"LinkAssemblies\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018: System.NullReferenceException: Object reference not set to an instance of an object\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.TypeReferenceExtensions+<GetMethods>d__4.MoveNext () [0x00038] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.TryMatchMethod (Mono.Cecil.TypeReference type, Mono.Cecil.MethodDefinition method) [0x00027] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.GetBaseMethodInTypeHierarchy (Mono.Cecil.TypeDefinition type, Mono.Cecil.MethodDefinition method) [0x00009] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.GetBaseMethodInTypeHierarchy (Mono.Cecil.MethodDefinition method) [0x00006] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.MapVirtualBaseMethod (Mono.Cecil.MethodDefinition method) [0x00000] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.MapVirtualMethod (Mono.Cecil.MethodDefinition method) [0x00000] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.MapVirtualMethods (Mono.Cecil.TypeDefinition type) [0x00027] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.MapType (Mono.Cecil.TypeDefinition type) [0x00000] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.TypeMapStep.ProcessAssembly (Mono.Cecil.AssemblyDefinition assembly) [0x0001b] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Steps.BaseStep.Process (Mono.Linker.LinkContext context) [0x00025] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Mono.Linker.Pipeline.Process (Mono.Linker.LinkContext context) [0x0001b] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at MonoDroid.Tuner.Linker.Run (Mono.Linker.Pipeline pipeline, Mono.Linker.LinkContext context) [0x00000] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at MonoDroid.Tuner.Linker.Process (MonoDroid.Tuner.LinkerOptions options, Mono.Linker.LinkContext& context) [0x00070] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Xamarin.Android.Tasks.LinkAssemblies.Execute (Java.Interop.Tools.Cecil.DirectoryAssemblyResolver res) [0x002c8] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Xamarin.Android.Tasks.LinkAssemblies.Execute () [0x001fa] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00023] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/msbuild-15.4/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs:631 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1696,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__26.MoveNext () [0x0022d] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/msbuild-15.4/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs:787 \r\n```\r\n\r\nI tried replicating with a new Wear project but did not run into the error. \r\n\r\n### Version Information\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 12)\r\nInstallation UUID: e83c4285-c0f4-40b6-8a52-ba4afb27614d\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Version: 2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.2.0.11 (Visual Studio Community)\r\nHash: 2f8bbec0\r\nBranch: d15-4-xi\r\nBuild date: 2017-10-05 20:56:05-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.5.0 (Visual Studio Community)\r\nAndroid SDK: /Users/technohead/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 3.8.0.49 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030012\r\nGit revision: b07492f1e48be596bad92dc4b7a3bc2d128ed0f9\r\nBuild date: 2018-01-30 13:15:55-05\r\nXamarin addins: 7c8f967d67207118dd99a1d0cc9c228045b30c5f\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.0\r\nDarwin 17.0.0 Darwin Kernel Version 17.0.0\r\n    Thu Aug 24 21:48:19 PDT 2017\r\n    root:xnu-4570.1.46~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n"},{"Id":"7609132081","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:42:35","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1344","RelatedDescription":"Closed issue \"Android Binding Library issue\" (#1344) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\nIf I run the same code (android camera code) directly from Android Studio , everything works fine.But if I create a binding library in Visual Studio and then call the camera function from C# (Visual Studio) then I see the following warning messages and the camera is not capturing the image.Camera is stuck.But in a newer Android phone, it works fine.This issue is only observed in the older Android phone while using visual studio binding library.\r\n\r\nSkipped XX frames! The application may be doing too much work on its main thread.\r\n\r\nWhat could be the reason?How to fix it?\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7609128688","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:41:34","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1349","RelatedDescription":"Closed issue \"Broadcastreciever on intent Wifi_State_Changed doesn't receive \"Enabling\" state change\" (#1349) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Register broadcast receiver on intent WifiManager.WifiStateChangedAction\r\n2. In the OnReceive handler of the broadcast receiver check additonally the lookup key ExtraWifiState:\r\nintent.GetIntExtra(WifiManager.ExtraWifiState, (int)WifiState.Unknown);\r\n3. Start the app on device. Enable respectively disable the Wifi manually on device. Check the OnReceive handler respectively  the lookup key.\r\n\r\n\r\n### Expected Behavior\r\nEnabling Wifi (if previously disabled): The wifi state changes to enabling then to enabled, so the OnReceive handler gets called two times.\r\nDisabling Wifi (if previously enabled): The wifi state changes to disabling then to disabled, so the OnReceive handler gets called two times.\r\n\r\n### Actual Behavior\r\nEnabling Wifi (if previously disabled): The wifi state changes to enabled, the OnReceive handler gets called one time and the Wifi is not yet enabled. The state changes immediately from disabled to enabled.\r\nDisabling Wifi (if previously enabled): The wifi state changes to disabling then to disabled, the OnReceive handler gets called two times.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.5.3\r\nVisualStudio.15.Release/15.5.3+27130.2020\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual Basic 2017   00370-20003-88521-AA935\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00370-20003-88521-AA935\r\nMicrosoft Visual C# 2017\r\n\r\nVisual F# 4.1   00370-20003-88521-AA935\r\nMicrosoft Visual F# 4.1\r\n\r\nASP.NET and Web Tools 2017   15.0.31127.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAssetsToolWindow Extension   1.0\r\nAssetsToolWindow Visual Studio Extension Detailed Info\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.2.9000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Data Lake Tools for Visual Studio   2.2.9000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitFlow.VS.Extension   1.0\r\nVisual Studio extension that integrates GitFlow\r\n\r\nGitHub.VisualStudio   2.2.0.10\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.2.9000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.2.9000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   1.8\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.2.9000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51120.3\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nResXManager   1.11.893.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nSvgConverterToolWindow Extension   1.0\r\nSvgConverterToolWindow Visual Studio Extension Detailed Info\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27130.2020\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWeb Extension Pack 2017   15.0.4\r\nThe easiest way to set up Visual Studio for the ultimate web development experience.\r\n\r\nWebJobs Tools v1.0.0   15.0.31106.0\r\nWebJobs Tools v1.0.0\r\n\r\nXamarin   4.8.0.757 (7f9ec2a)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.3.0 (HEAD/ef47226b7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.2 (6857dfc)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n"},{"Id":"7609097184","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:32:22","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1383","RelatedDescription":"Closed issue \"Cannot deploy if Java 9 installed together with Java 8\" (#1383) at xamarin/xamarin-android","RelatedBody":"Just a quick bug report. I updated to latest VS, 15.6.1, and my Android project just could not be deployed on any device, getting all kinds of errors, like ``Failure [INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION]`` or ``Android/sdk/tools/lib is not supported. Use -classpath instead.`` or ``Error: Could not create the Java Virtual Machine.`` or ``device does not exist or its version is less than project minimum API version 15``\r\n\r\nSolved by **uninstalling** Java 9 and also the 1.9 JDK, keeping only 8 and 1.8 and updating the Java 8 to latest version.\r\n\r\nIf you want to reproduce, try installing Java 9.\r\n\r\nNOTE: I did not try to use the 9/1.9 explicitly, just the fact that it was installed together with 8/1.8 caused the problems."},{"Id":"7609069062","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:24:17","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1446","RelatedDescription":"Closed issue \"Errors after upgrading to Xamarin.Android 8.2.0.15\" (#1446) at xamarin/xamarin-android","RelatedBody":"### Error\r\n\r\nThe \"LinkAssemblies\" task failed unexpectedly.\r\nJava.Interop.Tools.Diagnostics.XamarinAndroidException: error XA2006: Could not resolve reference to 'Android.Support.V7.App.ActionBarActivity' (defined in assembly 'Xamarin.Android.UserVoice, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null') with scope 'Xamarin.Android.Support.v7.AppCompat, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. When the scope is different from the defining assembly, it usually means that the type is forwarded. ---> Mono.Cecil.ResolutionException: Failed to resolve Android.Support.V7.App.ActionBarActivity\r\n   at Mono.Linker.Steps.MarkStep.HandleUnresolvedType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkType(TypeReference reference)\r\n   at MonoDroid.Tuner.MonoDroidMarkStep.MarkType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkType(TypeReference reference)\r\n   at MonoDroid.Tuner.MonoDroidMarkStep.MarkType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.InitializeType(TypeDefinition type)\r\n   at Mono.Linker.Steps.MarkStep.InitializeAssembly(AssemblyDefinition assembly)\r\n   at Mono.Linker.Steps.MarkStep.Initialize()\r\n   at Mono.Linker.Steps.MarkStep.Process(LinkContext context)\r\n   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n   at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   --- End of inner exception stack trace ---\r\n   at Java.Interop.Tools.Diagnostics.Diagnostic.Error(Int32 code, Exception innerException, String message, Object[] args)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\t\t\t\t\r\n\r\nI've updated all my references but there's no Android.Support.V7.App that I can possibly add. Please advise. The new version of Xamarin sdk has broken this build completely. "},{"Id":"7609055144","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:20:14","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1529","RelatedDescription":"Closed issue \"Android fails to build on MSBuild 15.7\" (#1529) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update to VS2017 preview3\r\n2. Checkout https://github.com/MvvmCross/MvvmCross\r\n3. Set `build.cake` to use new MSBuild: `msBuildPath = new FilePath(\"C:/Program Files (x86)/Microsoft Visual Studio/Preview/Community/MSBuild/15.0/Bin/MSBuild.exe\");`\r\n4. Run MvvmCross build script .\\build.ps1\r\n\r\n### Expected Behavior\r\n\r\nCode should build and generate nupkg output.\r\n\r\n### Actual Behavior\r\n\r\nOn preview2 it failed on Mac(https://github.com/xamarin/xamarin-macios/issues/3746) now it fails to build Android.\r\n\r\n### Version Information\r\n\r\nVisual Studio 2017 15.7 preview3. MSBuild 15.7.127.34537\r\n\r\n### Log File\r\n```\r\naapt.exe : error APT0000: ERROR: unable to open 'obj\\Release\\monoandroid81\\lp\\9\\jl\\bin\\classes.jar' as a zip file: -2 \"\r\nclasses.jar' as a zip file: -2\". [Y:\\Documents\\OpenSource\\MvvmCross\\MvvmCross.Android.Support\\Fragment\\MvvmCross.Droid.\r\nSupport.Fragment.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets\r\n(1426,2): error APT0000: unable to process jar files while packaging 'C:\\Users\\martijn\\AppData\\Local\\Temp\\fkyyfumg.ldi\\\r\nresources.apk.bk' [Y:\\Documents\\OpenSource\\MvvmCross\\MvvmCross.Android.Support\\Fragment\\MvvmCross.Droid.Support.Fragmen\r\nt.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets\r\n(1426,2): error APT0000: packaging of 'C:\\Users\\martijn\\AppData\\Local\\Temp\\fkyyfumg.ldi\\resources.apk.bk' failed [Y:\\Do\r\ncuments\\OpenSource\\MvvmCross\\MvvmCross.Android.Support\\Fragment\\MvvmCross.Droid.Support.Fragment.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets\r\n(1325,2): error APT0000: resource directory 'obj\\Release\\monoandroid81\\res' does not exist [Y:\\Documents\\OpenSource\\Mvv\r\nmCross\\MvvmCross.Android.Support\\V7.RecyclerView\\MvvmCross.Droid.Support.V7.RecyclerView.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets\r\n(1325,2): error APT0000: resource directory 'obj\\Release\\monoandroid81\\res' does not exist [Y:\\Documents\\OpenSource\\Mvv\r\nmCross\\MvvmCross.Android.Support\\V7.RecyclerView\\MvvmCross.Droid.Support.V7.RecyclerView.csproj]\r\n```"},{"Id":"7608978683","Type":"IssuesEvent","CreatedAt":"2018-04-30T21:59:29","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1578","RelatedDescription":"Closed issue \"How to reduce and clean memory usage in android programmatically?\" (#1578) at xamarin/xamarin-android","RelatedBody":"How to reduce and clean memory usage in android programmatically?"},{"Id":"7608876760","Type":"PullRequestEvent","CreatedAt":"2018-04-30T21:34:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1618","RelatedDescription":"Merged pull request \"Bump to mono/2018-02/b4a42e6e\" (#1618) at xamarin/xamarin-android","RelatedBody":"(Hopefully) Fixes `mktemp` use, which (hopefully) will allow\r\nmonodroid/master to once again use xamarin-android/master."},{"Id":"7608860540","Type":"PullRequestEvent","CreatedAt":"2018-04-30T21:30:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1618","RelatedDescription":"Opened pull request \"Bump to mono/2018-02/b4a42e6e\" (#1618) at xamarin/xamarin-android","RelatedBody":"(Hopefully) Fixes `mktemp` use, which (hopefully) will allow\r\nmonodroid/master to once again use xamarin-android/master."},{"Id":"7608859308","Type":"PullRequestEvent","CreatedAt":"2018-04-30T21:30:12","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1617","RelatedDescription":"Opened pull request \"Bump to mono/2018-02/b4a42e6\" (#1617) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/pull/8498\r\n\r\nTrying to fix upstream build in monodroid"},{"Id":"7608773844","Type":"PullRequestEvent","CreatedAt":"2018-04-30T21:10:23","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1616","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] warning codes for signing tasks\" (#1616) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1560\r\nContext: https://github.com/Microsoft/msbuild/blob/637f06e31ef46892faeb40044899a62a15b77f79/src/Utilities/ToolTask.cs\r\nContext: https://github.com/Microsoft/msbuild/blob/177facd63dabfc59515b53ed28892a1705a17ebd/src/Shared/TaskLoggingHelper.cs#L1287\r\n\r\nAlong with the goal of #1560, I'm aiming to fix a pesky warning in\r\nthe `<KeyTool />` MSBuild task that has been around a while:\r\n\r\n    KEYTOOL : warning :\r\n        The JKS keystore uses a proprietary format. It is recommended to migrate to PKCS12 which is an industry standard format using \"keytool -importkeystore -srckeystore C:\\Users\\myuser\\AppData\\Local\\Xamarin\\Mono for Android\\debug.keystore -destkeystore C:\\Users\\myuser\\AppData\\Local\\Xamarin\\Mono for Android\\debug.keystore -deststoretype pkcs12\".\r\n\r\nFrom what I've seen on Windows, this happens basicaly any time an APK\r\nfile is produced in Xamarin.Android, additionally...\r\n\r\nThis message presents itself in the binary log viewer and IDEs in weird\r\nways. Usually the warning just says `KEYTOOL`, and the actual warning\r\ntext is a second MSBuild \"message\"!\r\n\r\nIt turns out we have two things going on here:\r\n1. `keytool`'s output prints \"Warning:\" on a single line by itself, and\r\nprints the actual warning on the following line.\r\n2. `ToolTask.LogEventsFromTextOutput` calls `LogMessageFromText`\r\ninternally in MSBuild. This method has its own logic for detecting\r\nwarnings and errors in generic command line tooling output. This is\r\nelevating the \"Warning:\" line to a warning.\r\n\r\nTo fix the `<KeyTool />` task:\r\n- Look if a line ends with `:` and store it in a variable\r\n- As more input comes in, append the previous line if it ended with `:`\r\n- Don't call `base.LogEventsFromTextOutput`, and just call\r\n`LogFromStandardError` directly\r\n\r\n### Changes for #1560\r\n\r\n- Invented a new `AND0000` error code for generic errors in command-line\r\ntooling. This is similar to `APT0000`, but covers `zipalign`,\r\n`jarsigner`, `apksigner`, etc.\r\n- `<AndroidApkSigner />` and `<AndroidSignPackage />` tasks are now\r\nusing `LogCodedWarning` with `AND0000`. They are including the `filename`\r\nparameter pointing to the underlying command line tool.\r\n- Updated `LogFromStandardError` to use the `AND0000` error code as well\r\nas emit unknown text as messages\r\n- Updated `PackagingTest` to assert there were zero warnings. There\r\nshould never be warnings for a default app!"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7608776099","Type":"IssuesEvent","CreatedAt":"2018-04-30T21:10:53","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2401","RelatedDescription":"Closed issue \"Several Randomly Unhandled Exceptions!\" (#2401) at xamarin/Xamarin.Forms","RelatedBody":"Dear, I have been receiving several unhandled exceptions, unfortunately I not have the steps to reproduce the behavior, its happens randomly (some rarely):\r\n\r\n**java.lang.StackOverflowError:**\r\nhttps://gist.github.com/fernandovm/b7a5823ba705cc84771501a45b6a6a3f. \r\n\r\n**java.lang.NullPointerException:**\r\nhttps://gist.github.com/fernandovm/02aff3af2321271159607bd58292032a\r\n\r\n**System.ArgumentOutOfRangeException:**\r\nhttps://gist.github.com/fernandovm/870398dfc9455f6b2c7d71e11b8e9852\r\n\r\n**java.lang.NullPointerException:**\r\nhttps://gist.github.com/fernandovm/54dca62f1af6c105d1517fcbd76f68bd\r\n\r\n**android.view.WindowManager$BadTokenException:**\r\nhttps://gist.github.com/fernandovm/82cae6d2c04bfa34d02861dbb06fea6e\r\nhttps://gist.github.com/fernandovm/fe6822b6ce14d282e9adb561c61234e5\r\n\r\n**java.util.concurrent.TimeoutException:**\r\nhttps://gist.github.com/fernandovm/506729c4823f757f890e6fb40fc27a40\r\n\r\n**java.lang.RuntimeException:**\r\nhttps://gist.github.com/fernandovm/4c981d63159144999f47dc5aa11f9693\r\n\r\n**android.support.v4.app.SuperNotCalledException:**\r\nhttps://gist.github.com/fernandovm/44789f586d1f035f964cec07ac9eb5f1\r\n**java.lang.IllegalArgumentException:**\r\nhttps://gist.github.com/fernandovm/09060d6421989ef7d8d3eebb35810fd6\r\n\r\n\r\nHow I can deal with this? How I can help you to identify this problems?\r\n\r\n### Basic Information\r\n\r\n- Platform Target Frameworks: \r\n  - Android: 8.1 (Oreo) \r\n- Android Support Library Version: 26.1.0.1\r\n- Nuget Packages: \"Xamarin.Forms 2.5.0.280555\"\r\n- Affected Devices: Several, especially running android versions from 5.1 to bellow.\r\n\r\n"},{"Id":"7608514473","Type":"PullRequestEvent","CreatedAt":"2018-04-30T20:14:43","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2569","RelatedDescription":"Opened pull request \"[C][flex] proper handling of grow in reverse\" (#2569) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[C][flex] proper handling of grow in reverse\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #2551\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7608188253","Type":"IssuesEvent","CreatedAt":"2018-04-30T19:03:11","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2408","RelatedDescription":"Closed issue \"[Bug] PanGestureRecognizer - changing direction doesn't work\" (#2408) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nWhen starting a pan then changing direction, the delta (`TotalX` & `TotalY` of `PanUpdatedEventArgs`), is only indicated by the direction of the first pan action.\r\n\r\nSo if you start a pan, then change the direction while not releasing the touch, the direc\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin.Forms app and attach a `PanGestureRecognizer` to a space.\r\n2. Touch down the space and start panning to raise the event\r\n3. Stop the panning, but don't release the touch, instead change the direction of the pan\r\n3. You'll notice that the sign (positive/negative) of the delta does not change, and is same as the first direction.\r\n\r\n### Expected Behavior\r\nWhen changing direction during a pan action, the sign of the delta should also change.\r\n\r\n### Actual Behavior\r\nChanging direction during a `Pan` gesture doesn't reflect on the sign of the delta.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: \r\n  - UWP: 6.08 (targeting Win 16299)\r\n  - Android: 8.1 (with _Android_Accelerated_x86_Nougat_ 7.1 emulator)\r\n  - iOS: Not tested"},{"Id":"7607900634","Type":"IssuesEvent","CreatedAt":"2018-04-30T18:03:38","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2546","RelatedDescription":"Closed issue \"IndexOutOfRangeException setting Implicit Style in XAML on Android\" (#2546) at xamarin/Xamarin.Forms","RelatedBody":"We're seeing reports of a crash in our logs, but unfortunately don't have a reliable reproduction.\r\n\r\nIt seems to be to be when constructing a page shortly after app launch, where the page has some implicit styles set in a resource dictionary belong to the app. I've included the stack trace below.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1\r\n- IDE:\r\n- Platform Target Frameworks:\r\n  - Android: 8.0\r\n\r\n### Stack Trace\r\n\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n  at (wrapper stelemref) System.Object:virt_stelemref_sealed_class (intptr,object)\r\n  at System.Collections.Generic.List`1[T].Add (T item) [0x0001e] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at Xamarin.Forms.Style.Xamarin.Forms.IStyle.Apply (Xamarin.Forms.BindableObject bindable) [0x0000c] in <0f1ce60dbc6b4e24af01294c7acf41c6>:0 \r\n  at Xamarin.Forms.VisualElement+MergedStyle.Apply (Xamarin.Forms.BindableObject bindable) [0x0000a] in <0f1ce60dbc6b4e24af01294c7acf41c6>:0 \r\n  at Xamarin.Forms.VisualElement+MergedStyle..ctor (System.Type targetType, Xamarin.Forms.BindableObject target) [0x0002c] in <0f1ce60dbc6b4e24af01294c7acf41c6>:0 \r\n  at Xamarin.Forms.VisualElement..ctor () [0x00066] in <0f1ce60dbc6b4e24af01294c7acf41c6>:0 \r\n  at Xamarin.Forms.View..ctor () [0x0000b] in <0f1ce60dbc6b4e24af01294c7acf41c6>:0 \r\n  at Xamarin.Forms.Button..ctor () [0x00000] in <0f1ce60dbc6b4e24af01294c7acf41c6>:0 \r\n  at MyApp.Forms.Views.LoginPage.InitializeComponent () [0x000f7] in <23649eef78004620ad75c13db380755f>:0 \r\n  at MyApp.Forms.Views.LoginPage..ctor () [0x00006] in <23649eef78004620ad75c13db380755f>:0 \r\n  at (wrapper managed-to-native) System.Reflection.MonoCMethod:InternalInvoke (System.Reflection.MonoCMethod,object,object[],System.Exception&)\r\n  at System.Reflection.MonoCMethod.InternalInvoke (System.Object obj, System.Object[] parameters) [0x00002] in <1939da88bd6b4add978029d99b632547>:0 \r\n   --- End of inner exception stack trace ---\r\n  at System.Reflection.MonoCMethod.InternalInvoke (System.Object obj, System.Object[] parameters) [0x00017] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.RuntimeType.CreateInstanceMono (System.Boolean nonPublic) [0x000a8] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.RuntimeType.CreateInstanceSlow (System.Boolean publicOnly, System.Boolean skipCheckThis, System.Boolean fillCache, System.Threading.StackCrawlMark& stackMark) [0x00009] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.RuntimeType.CreateInstanceDefaultCtor (System.Boolean publicOnly, System.Boolean skipCheckThis, System.Boolean fillCache, System.Threading.StackCrawlMark& stackMark) [0x00027] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Activator.CreateInstance (System.Type type, System.Boolean nonPublic) [0x00020] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Activator.CreateInstance (System.Type type) [0x00000] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at MyApp.Forms.Factories.ViewFactory.CreateView (System.Type type, System.Object[] parameter) [0x0005b] in <23649eef78004620ad75c13db380755f>:0 \r\n  at MyApp.Forms.Factories.BoundViewFactory.CreateView (System.Type type, System.Object[] parameter) [0x0000d] in <23649eef78004620ad75c13db380755f>:0 \r\n  at MyApp.Forms.Services.NavigationService.CreatePage (MyApp.Portable.ViewKey pageKey, System.Object[] parameter) [0x00011] in <23649eef78004620ad75c13db380755f>:0 \r\n  at MyApp.Forms.Services.NavigationService.NavigateTo (MyApp.Portable.ViewKey pageKey, System.Object[] parameter) [0x00018] in <23649eef78004620ad75c13db380755f>:0 \r\n  at MyApp.Portable.ViewModels.BuildViewModel+<OnNextBuild>d__10.MoveNext () [0x000a8] in <80e5eb958a7d4e799f99759981fd68c7>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at MyApp.Portable.ViewModels.BuildViewModel+<<LoadBuild>b__11_0>d.MoveNext () [0x00068] in <80e5eb958a7d4e799f99759981fd68c7>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_1 (System.Object state) [0x00000] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) [0x00007] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00071] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00000] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () [0x00021] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Threading.ThreadPoolWorkQueue.Dispatch () [0x00074] in <1939da88bd6b4add978029d99b632547>:0 \r\n  at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00000] in <1939da88bd6b4add978029d99b632547>:0 \r\n"},{"Id":"7607689914","Type":"IssuesEvent","CreatedAt":"2018-04-30T17:19:26","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2535","RelatedDescription":"Closed issue \"Grouped ListView on iOS crashes when a new collection without items is assigned\" (#2535) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nThis is the stacktrace:\r\nSystem.ArgumentOutOfRangeException: <Timeout exceeded getting exception details>\r\n\r\n2018-04-24 11:38:45.557 xx.Touch[1481:19620] ConvertToNSExceptionAndAbort\r\n2018-04-24 11:38:45.564 xx.Touch[1481:19620] Inserted Xamarin Exception Stack Line!\r\n2018-04-24 11:38:45.564 xx.Touch[1481:19620] Name: System.ArgumentOutOfRangeException\r\n2018-04-24 11:38:45.564 xx.Touch[1481:19620] Message: System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.Xamarin Exception Stack:\r\nParameter name: index\r\n  at Xamarin.Forms.ListProxy.get_Item (System.Int32 index) [0x0000b] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:127 \r\n  at Xamarin.Forms.ListProxy.System.Collections.IList.get_Item (System.Int32 index) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:444 \r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].get_Item (System.Int32 index) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:337 \r\n  at Xamarin.Forms.Platform.iOS.ListViewRenderer+ListViewDataSource.HeaderViewDisplayingEnded (UIKit.UITableView tableView, UIKit.UIView headerView, System.nint section) [0x0000e] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\ListViewRenderer.cs:967 \r\n  at (wrapper managed-to-native) ObjCRuntime.Messaging.void_objc_msgSend(intptr,intptr)\r\n  at UIKit.UITableV\r\niew.ReloadData () [0x00010] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.9.1.24/src/Xamarin.iOS/UIKit/UITableView.g.cs:792 \r\n  at Xamarin.Forms.Platform.iOS.ListViewRenderer.UpdateItems (System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Int32 section, System.Boolean resetWhenGrouped) [0x002b2] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\ListViewRenderer.cs:599 \r\n  at Xamarin.Forms.Platform.iOS.ListViewRenderer.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\ListViewRenderer.cs:307 \r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:771 \r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].GroupedReset () [0x000af] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Cor\r\ne\\TemplatedItemsList.cs:719 \r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnCollectionChangedGrouped (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00459] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:900 \r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Boolean fixWindows) [0x00008] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:975 \r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:968 \r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnItemsSourceChanged (System.Boolean fromGrouping) [0x00061] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:949 \r\n  at Xamarin.Forms.Internals\r\n.TemplatedItemsList`2[TView,TItem].BindableOnPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00020] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:661 \r\n  at (wrapper delegate-invoke) <Module>.invoke_void_object_PropertyChangedEventArgs(object,System.ComponentModel.PropertyChangedEventArgs)\r\n  at Xamarin.Forms.BindableObject.OnPropertyChanged (System.String propertyName) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:146 \r\n  at Xamarin.Forms.Element.OnPropertyChanged (System.String propertyName) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\Element.cs:401 \r\n  at Xamarin.Forms.BindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent) [0x00107] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:602 \r\n  at Xamarin.Forms.Bin\r\ndableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes) [0x0015b] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:399 \r\n  at Xamarin.Forms.BindingExpression.ApplyCore (System.Object sourceObject, Xamarin.Forms.BindableObject target, Xamarin.Forms.BindableProperty property, System.Boolean fromTarget) [0x001f9] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\BindingExpression.cs:172 \r\n  at Xamarin.Forms.BindingExpression.Apply (System.Boolean fromTarget) [0x0003e] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\BindingExpression.cs:56 \r\n  at Xamarin.Forms.BindingExpression+BindingExpressionPart.<PropertyChanged>b__47_0 () [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\BindingExpression.cs:557 \r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.9.1.24/src/Xamarin.iOS/Foundation/NSAction.cs:163 \r\n--- End\r\n of stack trace from previous location where exception was thrown ---\r\n  at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain(int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.9.1.24/src/Xamarin.iOS/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.9.1.24/src/Xamarin.iOS/UIKit/UIApplication.cs:63 \r\n  at xx.iOS.Application.Main (System.String[] args) [0x00001] in C:\\Users\\ivani\\Documents\\Visual Studio 2017\\Projects\\xx\\xx.Touch\\Main.cs:12 \r\nThe app has been terminated.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Bind grouped collection to ListView\r\n2. Assign a value to the grouped collection that contains some elements\r\n3. Assign a value to the grouped collection that contains no elements\r\n\r\n### Expected Behavior\r\nThe app should show empty list.\r\n### Actual Behavior\r\nThe app crashes\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: Visual Studio 2017 15.6.6\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <11.3>\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7608117842","Type":"PullRequestEvent","CreatedAt":"2018-04-30T18:49:08","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4015","RelatedDescription":"Opened pull request \"[runtime] bump system 2018-02 mono\" (#4015) at xamarin/xamarin-macios","RelatedBody":"so that this commit is included:\r\nhttps://github.com/mono/mono/commit/4a00c501b21cdb2cb81d4ddefd1115e32d56b4f5\r\n\r\nIt makes roslyn hangs (and crashes?) less likely, so let's use it. Might\r\nhelps with https://bugzilla.xamarin.com/show_bug.cgi?id=57959#c20"},{"Id":"7607664346","Type":"IssuesEvent","CreatedAt":"2018-04-30T17:14:03","Actor":"jassmith","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4014","RelatedDescription":"Opened issue \"ObjCRuntime.RuntimeException: An instance object is required to construct a closed generic method for the open generic method: Xamarin.Forms.Platform.iOS.VisualElementRenderer`1.LayoutSubviews (token reference: 0x10910).\" (#4014) at xamarin/xamarin-macios","RelatedBody":"_From @jordan-surveycom on April 23, 2018 13:59_\n\n### Steps to Reproduce\r\n\r\nShowing up intermittently on AppCenter Crashes. Says to file a bug report. Unsure of the steps to reproduce it as I haven't run into it while testing. Attached a crash log to this issue in case that helps.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: 4255a0d5-48c3-4e98-8894-69902da9081e\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.29 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Community)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Community)\r\nAndroid SDK: /Users/jordan/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 23.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n### Crash Log\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n[crash.txt](https://github.com/xamarin/Xamarin.Forms/files/1938501/crash.txt)\r\n\r\n\n\n_Copied from original issue: xamarin/Xamarin.Forms#2527_"},{"Id":"7607041178","Type":"IssuesEvent","CreatedAt":"2018-04-30T15:13:53","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4013","RelatedDescription":"Opened issue \"MessageHandler Test failure on iOS device\" (#4013) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update System to XI version: 11.10.1.177 (d15-7: 7e782c1e) \r\n2. Execute monotouch-test on device\r\n\r\n### Expected Behavior\r\nAll tests should pass\r\n### Actual Behavior\r\n[FAIL] MessageHandlerTest.DnsFailure(System.Net.Http.HttpClientHandler) :   Exception\r\n[FAIL] MessageHandlerTest.DnsFailure(System.Net.Http.CFNetworkHandler) :   Exception\r\n[FAIL] MessageHandlerTest.DnsFailure(System.Net.Http.NSUrlSessionHandler) :   Exception\r\n\r\n### Environment\r\n\r\n```\r\nOperating System: Mac OS X 10.13.4\r\nMono version: 5.10.1.47 (8eb8f7d5e74)  (2018-04-13 20:18:12 -04:00)\r\nXA version: 8.3.0.19 (HEAD/342b2ce96) \r\nXI version: 11.10.1.177 (d15-7: 7e782c1e) \r\nXM version: 4.4.1.176 (master: 7e782c1e)  (2018-04-25 15:27:14 -04:00)\r\nXVS version: \r\nXS version: 7.5.0.1222 (48907c1)  (2018-04-20 18:20:07 -04:00)\r\n[Device] Name: XQAiPhoneXa, Version: 11.3, Arch: ARM64, FormFactor: iPhone, PairedPhone: \r\n```\r\n\r\n### Build Logs\r\n\r\nBuild Log: http://xqa.blob.core.windows.net/gist/report-4b66fbdb3b3d475d86b210d5f7bda386.txt\r\nTest Log + Device log: http://xqa.blob.core.windows.net/gist/monotouchtest-ios09-33-23aa8c19b57a6d87f53c46766d844888df126c34e209-33-23-331784cae1d544cc930939185b8b1acc.zip\r\n\r\n### Example Project (If Possible)\r\n\r\nxamarin-macios/tests/monotouch-test\r\n\r\n### Additional Info\r\nThis issue is occurring only on certain devices like an iPadMini4 and iPhoneX and the issue is not new. With this test run, CI returned test failure results and continued running other tests. Is there anything specific  that needs to be checked if this is network related? \r\n"},{"Id":"7606914899","Type":"PullRequestEvent","CreatedAt":"2018-04-30T14:51:49","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4002","RelatedDescription":"Merged pull request \"Bump to mono:2018-02\" (#4002) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@a0228295dce [2018-02][interp] Backport interp entry changes (#8464)\r\n* mono/mono@91509419f5f [2018-02] [mini] Don't verify types if you store to a pointer byref. (#8424)\r\n* mono/mono@07ba54237db [arm] Fix a regression introduced by: (#8416)\r\n* mono/mono@5130d89a0dc [watch] Align cinfo->stack_usage to 16 on watchos. (#8376)\r\n* mono/mono@78740e252b4 [2018-02] [runtime] Add a signal handler for sigterm (#8383)\r\n* mono/mono@0d37a86d2c1 [sdks] Match more closely the pre-SDKs configure flags passed to LLVM (#8380)\r\n\r\nDiff: https://github.com/mono/mono/compare/9061f77e7f181057ff27e6900c05d8b1e5c63773...a0228295dcef711f8bbbf4f6f619c194e109c0e6"},{"Id":"7606490666","Type":"PullRequestEvent","CreatedAt":"2018-04-30T13:33:49","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4011","RelatedDescription":"Merged pull request \"[mtouch/mmp] Fix deprecation notice for --force-thread-check/--disable-thread-check.\" (#4011) at xamarin/xamarin-macios","RelatedBody":"The --linker-optimize option is an early version of the current --optimize\noption, and apparently I forgot to update everything when the option changed\nname."},{"Id":"7606320149","Type":"IssuesEvent","CreatedAt":"2018-04-30T12:57:20","Actor":"sharmashiv","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4012","RelatedDescription":"Opened issue \"Getting the error MT3001: Could not AOT the assembly\" (#4012) at xamarin/xamarin-macios","RelatedBody":"/Users/macmini01/Desktop/Per/RunningCode_Both/XXX_Mobile Sourcecode_2Apr2018/XXX/XXX.iOS/MTOUCH: Error MT3001: Could not AOT the assembly '/Users/macmini01/Desktop/Per/RunningCode_Both/XXX_Mobile Sourcecode_2Apr2018/XXX/XXX.iOS/obj/iPhone/Debug/mtouch-cache/64/Build/OsmSharp.UI.dll' (MT3001) (XXX.iOS). This error occurred when trying to build for physical iOS device, but not for simulator."},{"Id":"7605845877","Type":"PullRequestEvent","CreatedAt":"2018-04-30T10:50:11","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4010","RelatedDescription":"Merged pull request \"[monotouch-test] Fix WeakReferenceTest.WeakTest to work on watchOS/LLVM.\" (#4010) at xamarin/xamarin-macios","RelatedBody":"Change WeakReferenceTest.WeakTest so that it doesn't fetch values that should\nbe garbage collected on the main thread.\n\nDoing so on the main thread may cause those values to stay in registers as\ntemporary values, thus preventing the garbage collector from collecting them.\n\nInstead do the fetching in a background thread, whose stack won't exist\nanymore once it's finished.\n\nFixes this test failure when running on watchOS device in release mode:\n\n    [FAIL] WeakReferenceTest.WeakTest : 't.Obj4' should be null\n\nThe reason it only happens on watchOS in release mode, is probably because\nLLVM puts temporary values in different registers than Mono's AOT compiler\ndoes."},{"Id":"7599977649","Type":"PullRequestEvent","CreatedAt":"2018-04-27T22:21:48","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4011","RelatedDescription":"Opened pull request \"[mtouch/mmp] Fix deprecation notice for --force-thread-check/--disable-thread-check.\" (#4011) at xamarin/xamarin-macios","RelatedBody":"The --linker-optimize option is an early version of the current --optimize\noption, and apparently I forgot to update everything when the option changed\nname."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"990330065408970753","CreatedAt":"2018-04-28T20:41:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/7ev5YyMYYG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":26,"RawContent":null},{"Id":"989898469933494275","CreatedAt":"2018-04-27T16:06:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/CLM721aiRu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":16,"RawContent":null},{"Id":"989568663995994112","CreatedAt":"2018-04-26T18:15:29+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/j7zEZKejRt https://t.co/uR4Wn80zw2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":33,"RawContent":null},{"Id":"989535349708816384","CreatedAt":"2018-04-26T16:03:06+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/mCkzHchAxL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"989169416758841344","CreatedAt":"2018-04-25T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from @gshackles on the #VSAppCenter bl… https://t.co/eg1dVsOYzK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"988809546146701312","CreatedAt":"2018-04-24T15:59:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/bAWyV5Zt2G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":14,"RawContent":null},{"Id":"988493654808498176","CreatedAt":"2018-04-23T19:03:47+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/qyMCa5TERh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":101,"FavoriteCount":38,"RawContent":null},{"Id":"988444639064666114","CreatedAt":"2018-04-23T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/lnoWKsVf6F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":16,"RawContent":null},{"Id":"988180901405364225","CreatedAt":"2018-04-22T22:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/WHbOgNnjfL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":16,"RawContent":null},{"Id":"987830341409832966","CreatedAt":"2018-04-21T23:08:01+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/VcwvXVvsi6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":52,"RawContent":null},{"Id":"987416244490993664","CreatedAt":"2018-04-20T19:42:32+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":52,"RawContent":null},{"Id":"987362257762967553","CreatedAt":"2018-04-20T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/4JyHATQW2I","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"986658974685679617","CreatedAt":"2018-04-18T17:33:25+00:00","UserScreenname":"xamarinhq","Text":"Automatic iOS app provisioning with #VS2017 15.7 Preview 3: https://t.co/vFjy3uXtie https://t.co/sLhjkaHc9X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":103,"FavoriteCount":55,"RawContent":null},{"Id":"986626430950920192","CreatedAt":"2018-04-18T15:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/piucqHprNe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":51,"RawContent":null},{"Id":"986268805629345792","CreatedAt":"2018-04-17T15:43:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/eK0geeikW6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":22,"RawContent":null},{"Id":"985953326079594496","CreatedAt":"2018-04-16T18:49:25+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":37,"RawContent":null},{"Id":"985907924479479811","CreatedAt":"2018-04-16T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/HMGMdGgDYr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":15,"RawContent":null},{"Id":"985296899346456576","CreatedAt":"2018-04-14T23:21:01+00:00","UserScreenname":"xamarinhq","Text":"Try out the #Xamarin Android Device Manager Preview, a tool for creating, editing, and controlling Android virtual… https://t.co/POMrs2vlnD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":33,"RawContent":null},{"Id":"984843662428459008","CreatedAt":"2018-04-13T17:20:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/1JLVLvKR0M","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":27,"RawContent":null},{"Id":"984821292938465285","CreatedAt":"2018-04-13T15:51:07+00:00","UserScreenname":"xamarinhq","Text":"Start shipping better apps, faster with this curated list of #VSAppCenter resources: https://t.co/jU0cnONnM8 https://t.co/KTX4gcGjqZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-05-01T05:30:44.1040399Z","RunDurationInMilliseconds":4646}