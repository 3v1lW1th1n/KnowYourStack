{"Data":{"Blog":{"FeedItems":[{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null},{"Title":".NET Highlights in Visual Studio 2017 version 15.7 Preview 4","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"As you know we continue to incrementally improve Visual Studio 2017 (version 15), and our 7th significant update is currently well under way with the 4th preview shipping today. As we’re winding down...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/visual-studio-2017-15-7-preview-4/","RawContent":null},{"Title":".NET Core April 2018 Update","PublishedOn":"2018-04-17T23:50:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2018 Update. This update includes .NET Core 1.0.11, 1.1.8 and 2.0.7. There are no new security fixes in this update. See April 2018 .NET Updates for other...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore Azure Cosmos DB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":65,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"},{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7565055593","Type":"PullRequestEvent","CreatedAt":"2018-04-21T04:59:56","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17720","RelatedDescription":"Opened pull request \"[release/2.0.x] Fix built-in GetHashCode crash on nested structs\" (#17720) at dotnet/coreclr","RelatedBody":"Fixes #17661"},{"Id":"7564998541","Type":"IssuesEvent","CreatedAt":"2018-04-21T04:10:30","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17634","RelatedDescription":"Closed issue \"[x86/Windows] Failure in jitstress=2 jitstressregs=3 job\" (#17634) at dotnet/coreclr","RelatedBody":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_jitstress2_jitstressregs3/473/consoleText\r\n\r\nBEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x86_checked_w---508bfa85\\tests\\..\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" MaskMove_r.exe \r\n        Expected: 100\r\n        Actual: 73294136\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---508bfa85\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n  > D:\\j\\workspace\\x86_checked_w---508bfa85\\bin\\tests\\Windows_NT.x86.Checked\\JIT\\HardwareIntrinsics\\X86\\Sse2\\MaskMove_r\\MaskMove_r.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False"},{"Id":"7564998293","Type":"PullRequestEvent","CreatedAt":"2018-04-21T04:10:18","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17673","RelatedDescription":"Merged pull request \"Treat EDI as killed by MaskMove\" (#17673) at dotnet/coreclr","RelatedBody":"It should really only be a fixed reference, not a kill, but if the reference is changed by `LinearScan::resolveConflictingDefAndUse()` it can fail to cause the value in EDI to be killed."},{"Id":"7564990753","Type":"PullRequestEvent","CreatedAt":"2018-04-21T04:04:00","Actor":"Petermarcu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17714","RelatedDescription":"Merged pull request \"[release/2.1] Port Preserve pinned flag in {ReadOnly}Memory<T>.Slice\" (#17714) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/29239 (from https://github.com/dotnet/coreclr/pull/17712)\r\n\r\ncc @joshfree, @GrabYourPitchforks, @geoffkizer, @stephentoub, @benaadams, @davidfowl  "},{"Id":"7564982381","Type":"PullRequestEvent","CreatedAt":"2018-04-21T03:57:15","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17719","RelatedDescription":"Opened pull request \"Enable Ubuntu arm32 corefx testing\" (#17719) at dotnet/coreclr","RelatedBody":""},{"Id":"7564975934","Type":"IssuesEvent","CreatedAt":"2018-04-21T03:52:23","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17715","RelatedDescription":"Closed issue \"About 40% regression or the XmlDocument performance test Create()\" (#17715) at dotnet/coreclr","RelatedBody":"The Regression for the XmlDocument performance test [Create()](https://github.com/dotnet/corefx/blob/697e2b910e6cccbc1f3d58be111e309db4823ab7/src/System.Private.Xml/tests/XmlDocument/Performance/Perf.XmlDocument.cs#L16) is illustrated in the chart below.\r\n\r\n<img width=\"1062\" alt=\"screen shot 2018-04-20 at 6 03 33 pm\" src=\"https://user-images.githubusercontent.com/5897654/39078880-32feeb30-44c5-11e8-9886-3b5f311fb9c5.png\">\r\n\r\nRefer to [benchview](https://benchview/trendline?build_selector=latest&count=2000&aggregate=arithmeticMean&filterTail=one&filterVal=100&interval=INTERVAL_MIN_MAX&rtids=[957]&archids=[23]&mpids=[1292]&cfgids=[2785,2706]&testids=[61756]&jobid=94550&) for more details.\r\n\r\n@krwq I was looking at the Marvin hashcode commit dotnet/corefx@697e2b9 you submitted in January and it seems when instantiating XmlDocument it suddenly regressed. Was this by design or not intentional?\r\n\r\nOverall the regression is about 45% on Linux (and around 30% on Windows). Although the regression seems to have started from January, there have been some ups and downs since so not exactly sure if I can find the exact root cause for the overall regression here in a straightforward way.\r\n\r\nThe test Create() as seen [here](https://github.com/dotnet/corefx/blob/697e2b910e6cccbc1f3d58be111e309db4823ab7/src/System.Private.Xml/tests/XmlDocument/Performance/Perf.XmlDocument.cs#L16), just attempts to create new XmlDocument() multiple times.\r\n\r\ncc: @kouvel @danmosemsft"},{"Id":"7564969436","Type":"PullRequestEvent","CreatedAt":"2018-04-21T03:46:57","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17718","RelatedDescription":"Opened pull request \"Use volatile load to read brick table entries\" (#17718) at dotnet/coreclr","RelatedBody":"Fixes #17716"},{"Id":"7564968427","Type":"PullRequestEvent","CreatedAt":"2018-04-21T03:46:05","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17717","RelatedDescription":"Opened pull request \"Use volatile load to read brick table entries\" (#17717) at dotnet/coreclr","RelatedBody":"Fixes #17716"},{"Id":"7564937533","Type":"PullRequestEvent","CreatedAt":"2018-04-21T03:22:14","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15339","RelatedDescription":"Merged pull request \"Add better coverage for Marshal.GetDelegateForFunctionPointer\" (#15339) at dotnet/coreclr","RelatedBody":"Also fixes the test Main to correctly collect result codes from all 3 subtests."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7564688844","Type":"PullRequestEvent","CreatedAt":"2018-04-21T00:30:52","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9117","RelatedDescription":"Merged pull request \"Unblock build\" (#9117) at dotnet/cli","RelatedBody":"Test build was causing restore and build in same evaluation, which was\r\nalways incorrect, but with a recent change to sdk, it will always fail\r\noutright instead of sometimes getting lucky enough for it not to matter.\r\nThis was therefore a breaking change and we will discuss separately how\r\nto handle it. This takes the bad pattern out of the test build to unblock\r\nthe build."},{"Id":"7564593031","Type":"PullRequestEvent","CreatedAt":"2018-04-20T23:45:03","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9117","RelatedDescription":"Opened pull request \"Unblock build\" (#9117) at dotnet/cli","RelatedBody":"Test build was causing restore and build in same evaluation, which was\r\nalways incorrect, but with a recent change to sdk, it will always fail\r\noutright instead of sometimes getting lucky enough for it not to matter.\r\nThis was therefore a breaking change and we will discuss separately how\r\nto handle it. This takes the bad pattern out of the test build to unblock\r\nthe build."},{"Id":"7564551774","Type":"PullRequestEvent","CreatedAt":"2018-04-20T23:27:20","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9115","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.7.0-rtm.5122 into cli\" (#9115) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.7.0-rtm.5122 into cli release/2.1.2xx branch"},{"Id":"7564353997","Type":"PullRequestEvent","CreatedAt":"2018-04-20T22:14:40","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9116","RelatedDescription":"Merged pull request \"[release/2.1.3xx] Replace alpine with linux-musl builds\" (#9116) at dotnet/cli","RelatedBody":"Port of change https://github.com/dotnet/cli/pull/9104\r\n\r\ncc @eerhardt @livarcocc @johnbeisner "},{"Id":"7564346812","Type":"PullRequestEvent","CreatedAt":"2018-04-20T22:12:19","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9106","RelatedDescription":"Merged pull request \"Merge release/2.1.1xx to release/2.1.2xx\" (#9106) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.1xx into release/2.1.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.1xx-to-release/2.1.2xx\ngit reset --hard upstream/release/2.1.2xx\ngit merge upstream/release/2.1.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.1xx-to-release/2.1.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7558497238","Type":"PullRequestEvent","CreatedAt":"2018-04-19T22:28:34","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/715","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02719-03 (master)\" (#715) at dotnet/standard","RelatedBody":""},{"Id":"7558201336","Type":"PullRequestEvent","CreatedAt":"2018-04-19T21:18:29","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/714","RelatedDescription":"Merged pull request \"Mark 2.0.3 version of NETStandard.Library package stable\" (#714) at dotnet/standard","RelatedBody":"Release notes for 2.0.3:\r\n - Issue https://github.com/dotnet/standard/issues/708 Wrong reference path in NETStandard.Library.targets - fixed in https://github.com/dotnet/standard/pull/713"},{"Id":"7557781012","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:53:40","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/714","RelatedDescription":"Opened pull request \"Mark 2.0.3 version of NETStandard.Library package stable\" (#714) at dotnet/standard","RelatedBody":"Release notes for 2.0.3:\r\n - Issue https://github.com/dotnet/standard/issues/708 Wrong reference path in NETStandard.Library.targets - fixed in https://github.com/dotnet/standard/pull/713"},{"Id":"7557590498","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:16:00","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/713","RelatedDescription":"Merged pull request \"[release/2.0.0] Fix old project system warnings\" (#713) at dotnet/standard","RelatedBody":"When NETStandard.Library was referenced in a .NETFramework project using the old project system,\r\nit would evaluate the project ignoring conditions on ItemGroups. Apparently this is done to\r\ndisplay the superset of project configurations (eg both debug and release) in the solution heirarchy.\r\nThe warnings were a result of the items never being resolved after design time build finished\r\nresolving references (because of course the items were conditioned out for the target framework).\r\n\r\nWe can workaround this using choose/when. Apparently the evaluation of the project is bold\r\nenough to ignore the conditions on an itemgroup, but not bold enough to choose one of many\r\nwhen (or all) clauses. :)\r\n\r\nFixes #708\r\n\r\nRelease version of https://github.com/dotnet/standard/pull/710"},{"Id":"7557190776","Type":"IssuesEvent","CreatedAt":"2018-04-19T17:59:07","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/standard/issues/708","RelatedDescription":"Reopened issue \"Wrong reference path in NETStandard.Library.targets\" (#708) at dotnet/standard","RelatedBody":"@cannehag commented on [Thu Apr 12 2018](https://github.com/dotnet/core/issues/1440)\n\n# After installing NetStandard.Library 2.0.2, a lot of warning occur.\r\nNetStandard.Library.targets 2.0.2 have \r\n<Reference Include=\"$(MSBuildThisFileDirectory)\\ref\\Microsoft.Win32.Primitives.dll...\r\nAccording to documentation MSBuildThisFileDirectory will include a final slash, thus giving a path with double slash and the error message \r\nThe referenced component 'C:\\Users\\xxx\\.nuget\\packages\\netstandard.library\\2.0.2\\build\\netstandard2.0\\\\ref\\Microsoft.Win32.Primitives.dll could not be found'\r\n\r\nVersion 2.0.1 does not have this issue since the targets file is including *.dll from another path\r\n<ReferenceCopyLocalPaths Condition=\"'$(_NetStandardLibraryLibPath)' != ''\" Include=\"$(_NetStandardLibraryLibPath)*.dll\">\r\n\n\n---\n\n@elementalpete commented on [Mon Apr 16 2018](https://github.com/dotnet/core/issues/1440#issuecomment-381640157)\n\nI experienced the same issue after upgrading (path in warning message contains a double slash, actual path has only a single slash).  Downgrading to 2.0.1 solved the issue for now.\n\n"},{"Id":"7556486567","Type":"PullRequestEvent","CreatedAt":"2018-04-19T15:48:46","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/711","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02719-02 (master)\" (#711) at dotnet/standard","RelatedBody":""},{"Id":"7556361699","Type":"PullRequestEvent","CreatedAt":"2018-04-19T15:29:23","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/713","RelatedDescription":"Opened pull request \"[release/2.0.0] Fix old project system warnings\" (#713) at dotnet/standard","RelatedBody":"When NETStandard.Library was referenced in a .NETFramework project using the old project system,\r\nit would evaluate the project ignoring conditions on ItemGroups. Apparently this is done to\r\ndisplay the superset of project configurations (eg both debug and release) in the solution heirarchy.\r\nThe warnings were a result of the items never being resolved after design time build finished\r\nresolving references (because of course the items were conditioned out for the target framework).\r\n\r\nWe can workaround this using choose/when. Apparently the evaluation of the project is bold\r\nenough to ignore the conditions on an itemgroup, but not bold enough to choose one of many\r\nwhen (or all) clauses. :)\r\n\r\nFixes #708\r\n\r\nRelease version of https://github.com/dotnet/standard/pull/710"},{"Id":"7551243488","Type":"IssuesEvent","CreatedAt":"2018-04-18T19:29:00","Actor":"slozier","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/712","RelatedDescription":"Opened issue \"Is System.Reflection.Emit compatible with .NET Standard 2.0?\" (#712) at dotnet/standard","RelatedBody":"I seem to recall reading somewhere that the System.Reflection.Emit package probably shouldn't be used with .NET Standard 2.0. Is this correct? The issue I have is that users would like us (IronPython) to target netstandard2.0 and since it compiles fine when we reference the package they assume that this is correct. If this scenario is not supported then I'd rather not mislead them. If these should not be used together are there any plans to prevent the package from being referenced from a netstandard2.0 project?"},{"Id":"7550895308","Type":"PullRequestEvent","CreatedAt":"2018-04-18T18:21:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/711","RelatedDescription":"Opened pull request \"Update BuildTools to preview3-02718-02 (master)\" (#711) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7564990566","Type":"PullRequestEvent","CreatedAt":"2018-04-21T04:03:50","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29252","RelatedDescription":"Merged pull request \"[release/2.1] Port Preserve pinned flag in {ReadOnly}Memory<T>.Slice (#29246)\" (#29252) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/29239 (from https://github.com/dotnet/corefx/pull/29246)\r\n\r\ncc @joshfree, @GrabYourPitchforks, @geoffkizer, @stephentoub, @benaadams, @davidfowl  "},{"Id":"7564975901","Type":"IssuesEvent","CreatedAt":"2018-04-21T03:52:21","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29260","RelatedDescription":"Opened issue \"About 40% regression or the XmlDocument performance test Create()\" (#29260) at dotnet/corefx","RelatedBody":"_From @maryamariyan on April 21, 2018 1:43_\n\nThe Regression for the XmlDocument performance test [Create()](https://github.com/dotnet/corefx/blob/697e2b910e6cccbc1f3d58be111e309db4823ab7/src/System.Private.Xml/tests/XmlDocument/Performance/Perf.XmlDocument.cs#L16) is illustrated in the chart below.\r\n\r\n<img width=\"1062\" alt=\"screen shot 2018-04-20 at 6 03 33 pm\" src=\"https://user-images.githubusercontent.com/5897654/39078880-32feeb30-44c5-11e8-9886-3b5f311fb9c5.png\">\r\n\r\nRefer to [benchview](https://benchview/trendline?build_selector=latest&count=2000&aggregate=arithmeticMean&filterTail=one&filterVal=100&interval=INTERVAL_MIN_MAX&rtids=[957]&archids=[23]&mpids=[1292]&cfgids=[2785,2706]&testids=[61756]&jobid=94550&) for more details.\r\n\r\n@krwq I was looking at the Marvin hashcode commit dotnet/corefx@697e2b9 you submitted in January and it seems when instantiating XmlDocument it suddenly regressed. Was this by design or not intentional?\r\n\r\nOverall the regression is about 45% on Linux (and around 30% on Windows). Although the regression seems to have started from January, there have been some ups and downs since so not exactly sure if I can find the exact root cause for the overall regression here in a straightforward way.\r\n\r\nThe test Create() as seen [here](https://github.com/dotnet/corefx/blob/697e2b910e6cccbc1f3d58be111e309db4823ab7/src/System.Private.Xml/tests/XmlDocument/Performance/Perf.XmlDocument.cs#L16), just attempts to create new XmlDocument() multiple times.\r\n\r\ncc: @kouvel @danmosemsft\n\n_Copied from original issue: dotnet/coreclr#17715_"},{"Id":"7564880639","Type":"IssuesEvent","CreatedAt":"2018-04-21T02:43:01","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29188","RelatedDescription":"Closed issue \"Add config to force OpenSsl error queue cleanup before Encrypt/Decrypt\" (#29188) at dotnet/corefx","RelatedBody":"The optimization done in #25646 is risky per OpenSsl documentation: [The current thread's error queue must be empty before the TLS/SSL I/O operation is attempted, or SSL_get_error() will not work reliably.](https://www.openssl.org/docs/man1.0.2/ssl/SSL_get_error.html). We have fixed various locations in which CoreFX code was leaving errors on the SSL error queue, but it is possible that some locations were missid, and also 3rd party libraries may interact with OpenSsl leaving errors on the queue. Adding a config is an escape valve in case the optimization of removing the calls to ERR_clear_error() for each SSL_write/SSL_read causes troubles. There will be a performance impact but depending on the scenario it can be a desired trade-off.\r\n\r\nPR #29186 addresses the issue in 2.2."},{"Id":"7564880470","Type":"PullRequestEvent","CreatedAt":"2018-04-21T02:42:53","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29186","RelatedDescription":"Merged pull request \"Add config to force OpenSsl error queue cleanup before Encrypt/Decrypt\" (#29186) at dotnet/corefx","RelatedBody":"This is an escape valve in case the optimization of removing the calls to ERR_clear_error() for each SSL_write/SSL_read causes troubles. There will be a performance impact but depending on the scenario it can be a desired trade-off.\r\n\r\nThe AppContext switch is \"System.Net.Security.SslStream.ForceOpenSslErrorQueueCleanupBeforeEncryptDecrypt\"\r\nThe env var is \"DOTNET_FORCE_OPENSSL_ERROR_QUEUE_CLEANUP_BEFORE_ENCRYPT_DECRYPT\"\r\n\r\nAny naming suggestion is appreciated... "},{"Id":"7564856038","Type":"PullRequestEvent","CreatedAt":"2018-04-21T02:24:03","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29259","RelatedDescription":"Opened pull request \"Update CoreFx to preview3-26421-01 (master)\" (#29259) at dotnet/corefx","RelatedBody":""},{"Id":"7564837619","Type":"PullRequestEvent","CreatedAt":"2018-04-21T02:10:13","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29256","RelatedDescription":"Merged pull request \"Port three CoreCLR changes missed by mirror.\" (#29256) at dotnet/corefx","RelatedBody":"At least part of this one (although it's old, CoreCLR change is older)\r\n\r\nhttps://github.com/dotnet/coreclr/commit/4456cc99ba0fbe3c02be3a9f54c34282caeb7218\r\nAuthor: Ahson Khan <ahkha@microsoft.com>\r\nDate:   Fri Feb 2 19:30:25 2018 -0800\r\n\r\nChanging Span/Memory to return default on null instead of throwing. (#16186)\r\nAdditional changes based on feedback (bounds checks)\r\nAdding remaining bounds checks\r\n\r\nM       src/mscorlib/shared/System/Memory.cs\r\nM       src/mscorlib/shared/System/ReadOnlyMemory.cs\r\nM       src/mscorlib/shared/System/ReadOnlySpan.Fast.cs\r\nM       src/mscorlib/shared/System/ReadOnlySpan.cs\r\nM       src/mscorlib/shared/System/Span.Fast.cs\r\nM       src/mscorlib/shared/System/Span.NonGeneric.cs\r\nM       src/mscorlib/shared/System/Span.cs\r\n\r\nand two that are only in code not built in CoreFX, porting so we can start the mirror up without issues:\r\n\r\nhttps://github.com/dotnet/coreclr/commit/3b3ef2add7b99d8acc3f0a156527d45a6f9e295b\r\nAuthor: Tarek Mahmoud Sayed <tarekms@microsoft.com>\r\nDate:   Thu Apr 19 13:14:12 2018 -0700\r\n\r\nFix reading Time zone rules using Julian days (#17672)\r\n\r\nM       src/mscorlib/Resources/Strings.resx\r\nM       src/mscorlib/shared/System/TimeZoneInfo.Unix.cs\r\n\r\nhttps://github.com/dotnet/coreclr/commit/3db838482038472ee9d75e3a204a77542d30b82b\r\nAuthor: Stephen Toub <stoub@microsoft.com>\r\nDate:   Fri Apr 13 19:07:34 2018 -0400\r\n\r\nFix default style argument to Double/Single/Decimal.Parse (#17556)\r\n\r\nM       src/mscorlib/shared/System/Double.cs\r\nM       src/mscorlib/shared/System/Single.cs\r\nM       src/mscorlib/src/System/Decimal.cs\r\n\r\nReconciliation on other side is in https://github.com/dotnet/coreclr/pull/17713"},{"Id":"7564829357","Type":"IssuesEvent","CreatedAt":"2018-04-21T02:03:46","Actor":"morganbr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29258","RelatedDescription":"Opened issue \"API Proposal: RuntimeFeature.HasJit and RuntimeFeature.CanEmitCode\" (#29258) at dotnet/corefx","RelatedBody":"# Rationale\r\nThe most efficient patterns for reflection depend on the current runtime. On .NET Core, ```System.Reflection.\r\nEmit``` or LINQ Expressions are usually most efficient because the JIT compiles them at runtime. However, for .NET Native, CoreRT, (and I believe Mono AoT), ```System.Reflection.Emit``` isn't available and LINQ Expressions are interpreted. Mono has progress on an interpreter that could make ```System.Reflection.Emit``` work, but it would still likely be less efficient than using reflection APIs directly. Library developers occasionally ask for a way to find out what will both work and be efficient on the current runtime. \r\n\r\nThis has come up in #10470 and https://github.com/aspnet/Home/issues/3079.\r\n\r\n# Proposed API\r\nAdd ```HasJit``` and ```CanEmitIL``` properties to the existing ```System.Runtime.CompilerServices.RuntimeFeature``` class:\r\n```\r\npublic class RuntimeFeature\r\n{\r\n    public static bool HasJit { get; }\r\n    public static bool CanEmitIL { get; }\r\n}\r\n```\r\n\r\n```HasJit``` is true if the current runtime can emit optimized native code at runtime. ```CanEmitIL``` is true if System.Reflection.Emit works at all, whether it's implemented by a JIT or an interpreter. \r\n\r\n# Example Usage\r\nSerializers or dependency injection frameworks often have methods that construct an object with some knowledge of its signature. With this API, it could be optimized to look something like this:\r\n```\r\nT CreateInstance<T>(int ctorParameter)\r\n{\r\n    if (RuntimeFeature.HasJit)\r\n    {\r\n        // Since this runtime has a JIT, use refemit to construct a specialized method\r\n        if(cachedFactoryMethodDelegate == null)\r\n        {\r\n            DynamicMethod factoryMethod = new DynamicMethod(...);\r\n            // Emit some IL to instantiate T\r\n            cachedFactoryMethodDelegate = (Func<int, T>)factoryMethod.CreateDelegate(typeof(Func<int, T>));\r\n         }\r\n         return cachedFactoryMethodDelegate(ctorParameter);\r\n    }\r\n    else\r\n    {\r\n        // No JIT, just use reflection\r\n        ConstructorInfo ctorInfo = typeof(T).GetConstructor(new Type[] { typeof(int)});\r\n        return (T)ctorInfo.Invoke(ctorParameter);\r\n     }\r\n}"},{"Id":"7564808775","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:48:38","Actor":"jorive","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29229","RelatedDescription":"Merged pull request \"Update to a xUnit Performance Api that has a bigger Etw buffer size.\" (#29229) at dotnet/corefx","RelatedBody":"These change is to alleviate the frequent failures on the Concurrent tests due to the lost of events, which blocks uploading any data on Windows."},{"Id":"7564808159","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:48:11","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29255","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26421-01, preview3-26420-06, preview1-26420-14, respectively (master)\" (#29255) at dotnet/corefx","RelatedBody":""},{"Id":"7564807114","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:47:23","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29257","RelatedDescription":"Opened pull request \"Enable Create From Pinned Array Slice tests for core\" (#29257) at dotnet/corefx","RelatedBody":"Depends on new coreclr build.\r\n\r\nEnabling tests added in https://github.com/dotnet/corefx/pull/29246\r\n\r\ncc @stephentoub, @GrabYourPitchforks, @joshfree, @KrzysztofCwalina "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7565002303","Type":"PullRequestEvent","CreatedAt":"2018-04-21T04:13:45","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26306","RelatedDescription":"Opened pull request \"[WIP] remove perf optimization that cause gigantic memory to be held onto m…\" (#26306) at dotnet/roslyn","RelatedBody":"…emory.\r\n\r\nbasically this Solution/DocumentBranch strongly holding onto next State causes\r\nold roslyn snapshot to make every snapshot after it to stay in memory.\r\n\r\nor worse, it causes a lot of forked solution to be left alive in memory until\r\ncertain snapshot goes away.\r\n\r\nwe will first try to simply get rid of this optimization and see whether we can observe\r\nimpact on RPS.\r\n\r\nif it somehow shows up, we will change it to weak reference rather than strongly hold onto it\r\n"},{"Id":"7564942445","Type":"IssuesEvent","CreatedAt":"2018-04-21T03:25:53","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26305","RelatedDescription":"Opened issue \"ChangedText.GetTextChanges should not assert\" (#26305) at dotnet/roslyn","RelatedBody":"```csharp\r\n[Fact]\r\n        public void ChangedTextTests()\r\n        {\r\n            var text0 = SourceText.From(@\"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ConsoleApp22\r\n{\r\n    class Class1\r\n    {\r\n        void Method()\r\n        {\r\n            Console\r\n\r\n     \r\n        }\r\n\r\n    }\r\n}\");\r\n\r\n            var text1 = text0.WithChanges(new TextChange(TextSpan.FromBounds(221, 228), \"\"));\r\n            var text2 = text1.WithChanges(new TextChange(TextSpan.FromBounds(228, 229), \"\"));\r\n            var text3 = text2.WithChanges(new TextChange(TextSpan.FromBounds(228, 228), \".\"));\r\n            var text4 = text3.WithChanges(new TextChange(TextSpan.FromBounds(229, 229), \"w\"));\r\n            var text5 = text4.WithChanges(new TextChange(TextSpan.FromBounds(230, 230), \"R\"));\r\n            var text6 = text5.WithChanges(new TextChange(TextSpan.FromBounds(231, 231), \"I\"));\r\n            var text7 = text6.WithChanges(new TextChange(TextSpan.FromBounds(232, 232), \"T\"));\r\n            var text8 = text7.WithChanges(new TextChange(TextSpan.FromBounds(233, 233), \"E\"));\r\n            var text9 = text7.WithChanges(new TextChange(TextSpan.FromBounds(231, 232), \"\"));\r\n\r\n            var changes = text9.GetTextChanges(text1).ToList();\r\n        }\r\n```\r\n\r\nadd this test and run. then, this will assert\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis/Text/ChangedText.cs,375\r\n\r\nthis should return full file content as changed if it can't figure out text changes between 2 given SourceText.\r\n\r\nour SourceText doesn't have concept of before or after text like editor's ITextImage (there is no prevous or next pointer in SourceText). ChangedText implementation of SourceText internally seems have that info, but that shouldn't leak out to outside."},{"Id":"7564840523","Type":"PullRequestEvent","CreatedAt":"2018-04-21T02:12:24","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26300","RelatedDescription":"Merged pull request \"fix test hang.\" (#26300) at dotnet/roslyn","RelatedBody":"if solution cralwer runs before global operation raised start event (which is async event), then we can get into state where events we are blocking for is already processed and we get into a hang.\r\n\r\n..\r\n\r\nthis is test only fix.\r\n"},{"Id":"7564784178","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:30:46","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26304","RelatedDescription":"Opened pull request \"Merge master into features/recursive-patterns\" (#26304) at dotnet/roslyn","RelatedBody":""},{"Id":"7564780842","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:28:26","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26303","RelatedDescription":"Opened pull request \"Fix issue where a write wasn't detected in make-readonly #2\" (#26303) at dotnet/roslyn","RelatedBody":"Followup to https://github.com/dotnet/roslyn/pull/26301\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/26264"},{"Id":"7564755974","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:10:50","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26302","RelatedDescription":"Opened pull request \"Address more feedback on external annotations prototype\" (#26302) at dotnet/roslyn","RelatedBody":"Follow-up on https://github.com/dotnet/roslyn/pull/25928"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7563363376","Type":"PullRequestEvent","CreatedAt":"2018-04-20T18:17:37","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5734","RelatedDescription":"Merged pull request \"Delete duplicate file\" (#5734) at dotnet/corert","RelatedBody":"Fixes #5732"},{"Id":"7563363364","Type":"IssuesEvent","CreatedAt":"2018-04-20T18:17:37","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5732","RelatedDescription":"Closed issue \"Duplicate versions of ThreadStart.cs\" (#5732) at dotnet/corert","RelatedBody":"I don't know if it matters or not, but after digging around in the source I noticed that there are 2 identical versions of `ThreadStart.cs`:\r\n\r\n- [src/System.Private.CoreLib/src/System/Threading/ThreadStart.cs](https://github.com/dotnet/corert/blob/master/src/System.Private.CoreLib/src/System/Threading/ThreadStart.cs)\r\n- [src/System.Private.CoreLib/shared/System/Threading/ThreadStart.cs](https://github.com/dotnet/corert/blob/master/src/System.Private.CoreLib/shared/System/Threading/ThreadStart.cs)\r\n\r\nI used WinMerge to compare the 2 folders (`src/System.Private.CoreLib/src` and `src/System.Private.CoreLib/shared`) and AFAICT it's the only file that is in both"},{"Id":"7563219421","Type":"PullRequestEvent","CreatedAt":"2018-04-20T17:47:24","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5734","RelatedDescription":"Opened pull request \"Delete duplicate file\" (#5734) at dotnet/corert","RelatedBody":"Fixes #5732"},{"Id":"7563141282","Type":"PullRequestEvent","CreatedAt":"2018-04-20T17:30:54","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5733","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5733) at dotnet/corert","RelatedBody":""},{"Id":"7563139389","Type":"PullRequestEvent","CreatedAt":"2018-04-20T17:30:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5733","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5733) at dotnet/corert","RelatedBody":""},{"Id":"7562902792","Type":"IssuesEvent","CreatedAt":"2018-04-20T16:39:29","Actor":"mattwarren","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5732","RelatedDescription":"Opened issue \"Duplicate versions of ThreadStart.cs\" (#5732) at dotnet/corert","RelatedBody":"I don't know if it matters or not, but after digging around in the source I noticed that there are 2 identical versions of `ThreadStart.cs`:\r\n\r\n- [src/System.Private.CoreLib/src/System/Threading/ThreadStart.cs](https://github.com/dotnet/corert/blob/master/src/System.Private.CoreLib/src/System/Threading/ThreadStart.cs)\r\n- [src/System.Private.CoreLib/shared/System/Threading/ThreadStart.cs](https://github.com/dotnet/corert/blob/master/src/System.Private.CoreLib/shared/System/Threading/ThreadStart.cs)\r\n\r\nI used WinMerge to compare the 2 folders (`src/System.Private.CoreLib/src` and `src/System.Private.CoreLib/shared`) and AFAICT it's the only file that is in both"},{"Id":"7555955469","Type":"IssuesEvent","CreatedAt":"2018-04-19T14:28:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5731","RelatedDescription":"Closed issue \"Unsupported marshalling ?\" (#5731) at dotnet/corert","RelatedBody":"I'm getting this:\r\n\r\n```\r\nUnhandled Exception: System.Exception: Method '[CoreCompat.System.Drawing]System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream,native int&)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream, IntPtr&) + 0x3e\r\n   at System.Drawing.Image.InitFromStream(Stream) + 0x278\r\n   at System.Drawing.Bitmap..ctor(Stream, Boolean) + 0x35\r\n   at System.Drawing.Bitmap..ctor(Stream) + 0x21\r\n   at Ultraviolet.Shims.NETCore.Graphics.NETCoreSurfaceSource..ctor(Stream) + 0xe1\r\n   at Ultraviolet.Shims.NETCore.NETCoreFactoryInitializer.<>c.<Initialize>b__0_0(Stream) + 0x2d\r\n   at Ultraviolet.Graphics.SurfaceSource.Create(Stream) + 0x68\r\n   at Ultraviolet.Shims.NETCore.Platform.NETCoreIconLoader.LoadIcon() + 0x20b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.LoadDefaultWindowIcon(UltravioletContext) + 0x5b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.<>c.<.cctor>b__148_0(UltravioletContext) + 0x20\r\n   at Ultraviolet.UltravioletSingleton`1.InitializeResource() + 0xe5\r\n   at Ultraviolet.UltravioletSingleton`1.get_Value() + 0x1d\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow..ctor(UltravioletContext, IntPtr, Boolean) + 0xaf\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo.InitializePrimaryWindow(UltravioletConfiguration, SDL2PlatformConfiguration) + 0x466\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0xb7\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfoOpenGL..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x2e\r\n   at Ultraviolet.SDL2.SDL2UltravioletPlatform..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x9f\r\n   at Ultraviolet.OpenGL.OpenGLUltravioletContext..ctor(IUltravioletHost, OpenGLUltravioletConfiguration) + 0x287\r\n   at UvDebug.Game.OnCreatingUltravioletContext() + 0x135\r\n   at Ultraviolet.UltravioletContext.EnsureSuccessfulCreation(Func`1) + 0x3e0\r\n   at Ultraviolet.UltravioletApplication.CreateUltravioletContext() + 0x53\r\n   at Ultraviolet.UltravioletApplication.Run() + 0x56\r\n   at UvDebug.Game.Main(String[]) + 0x3e\r\n   at UvDebug!<BaseAddress>+0x96ce3e\r\n   at UvDebug!<BaseAddress>+0x96cecb\r\n```\r\n\r\nUsing this library: https://www.nuget.org/packages/CoreCompat.System.Drawing.v2/5.2.0-preview1-r131"},{"Id":"7555823774","Type":"IssuesEvent","CreatedAt":"2018-04-19T14:08:55","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5731","RelatedDescription":"Opened issue \"Unsupported marshalling ?\" (#5731) at dotnet/corert","RelatedBody":"I'm getting this:\r\n\r\n```\r\nUnhandled Exception: System.Exception: Method '[CoreCompat.System.Drawing]System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream,native int&)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream, IntPtr&) + 0x3e\r\n   at System.Drawing.Image.InitFromStream(Stream) + 0x278\r\n   at System.Drawing.Bitmap..ctor(Stream, Boolean) + 0x35\r\n   at System.Drawing.Bitmap..ctor(Stream) + 0x21\r\n   at Ultraviolet.Shims.NETCore.Graphics.NETCoreSurfaceSource..ctor(Stream) + 0xe1\r\n   at Ultraviolet.Shims.NETCore.NETCoreFactoryInitializer.<>c.<Initialize>b__0_0(Stream) + 0x2d\r\n   at Ultraviolet.Graphics.SurfaceSource.Create(Stream) + 0x68\r\n   at Ultraviolet.Shims.NETCore.Platform.NETCoreIconLoader.LoadIcon() + 0x20b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.LoadDefaultWindowIcon(UltravioletContext) + 0x5b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.<>c.<.cctor>b__148_0(UltravioletContext) + 0x20\r\n   at Ultraviolet.UltravioletSingleton`1.InitializeResource() + 0xe5\r\n   at Ultraviolet.UltravioletSingleton`1.get_Value() + 0x1d\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow..ctor(UltravioletContext, IntPtr, Boolean) + 0xaf\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo.InitializePrimaryWindow(UltravioletConfiguration, SDL2PlatformConfiguration) + 0x466\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0xb7\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfoOpenGL..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x2e\r\n   at Ultraviolet.SDL2.SDL2UltravioletPlatform..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x9f\r\n   at Ultraviolet.OpenGL.OpenGLUltravioletContext..ctor(IUltravioletHost, OpenGLUltravioletConfiguration) + 0x287\r\n   at UvDebug.Game.OnCreatingUltravioletContext() + 0x135\r\n   at Ultraviolet.UltravioletContext.EnsureSuccessfulCreation(Func`1) + 0x3e0\r\n   at Ultraviolet.UltravioletApplication.CreateUltravioletContext() + 0x53\r\n   at Ultraviolet.UltravioletApplication.Run() + 0x56\r\n   at UvDebug.Game.Main(String[]) + 0x3e\r\n   at UvDebug!<BaseAddress>+0x96ce3e\r\n   at UvDebug!<BaseAddress>+0x96cecb\r\n```\r\n\r\nUsing this library: https://www.nuget.org/packages/CoreCompat.System.Drawing.v2/5.2.0-preview1-r131"},{"Id":"7554947022","Type":"IssuesEvent","CreatedAt":"2018-04-19T11:31:24","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5730","RelatedDescription":"Closed issue \"Weird error with .NET Core 2.1 (Preview 2)\" (#5730) at dotnet/corert","RelatedBody":"I installed latest preview of Core 2.1 and i'm now getting that error message whenever i try to run `` dotnet publish -r win-x64 -c release``\r\n\r\n```\r\nC:\\Users\\Scellow\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-26413-02\\build\\Microsoft.NETCore.Native.Publish.targets(57,5)\r\n: error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [C:\\Users\\Scellow\\dev\\rpgpvp\\src\\Realm.Game\\Realm.Game.csproj]\r\n```"},{"Id":"7553975064","Type":"IssuesEvent","CreatedAt":"2018-04-19T08:24:01","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5730","RelatedDescription":"Opened issue \"Weird error with .NET Core 2.1 (Preview 2)\" (#5730) at dotnet/corert","RelatedBody":"I installed latest preview of Core 2.1 and i'm now getting that error message whenever i try to run `` dotnet publish -r win-x64 -c release``\r\n\r\n```\r\nC:\\Users\\Scellow\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-26413-02\\build\\Microsoft.NETCore.Native.Publish.targets(57,5)\r\n: error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [C:\\Users\\Scellow\\dev\\rpgpvp\\src\\Realm.Game\\Realm.Game.csproj]\r\n```"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7565042094","Type":"IssuesEvent","CreatedAt":"2018-04-21T04:48:08","Actor":"kunjee17","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2171","RelatedDescription":"Opened issue \"Binding Redirect issue in Mac\" (#2171) at dotnet/sdk","RelatedBody":"I recently switch to Mac machine. And project that was working without any issue on Windows start giving binding redirect issues on Mac. \r\n\r\nI have tried with \r\n\r\nDotnet SDK - 2.1.4 and 2.1.105 both... Getting same issue..\r\n\r\nHere is error message \r\n```\r\nUnhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'System.ComponentModel.Primitives, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.CreateFileWatcher(String root)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider..ctor(String root)\r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingEnvironmentExtensions.Initialize(IHostingEnvironment hostingEnvironment, String applicationName, String contentRootPath, WebHostOptions options)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at Server.Program.main(String[] args)\r\n```\r\n\r\nAnd here is the dump I am getting from dotnet\r\n```\r\nProcess:               dotnet [42758]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        dotnet [42741]\r\nResponsible:           dotnet [42758]\r\nUser ID:               501\r\n\r\nDate/Time:             2018-04-21 10:08:19.778 +0530\r\nOS Version:            Mac OS X 10.13.4 (17E199)\r\nReport Version:        12\r\nAnonymous UUID:        01CB810D-D5AA-BDE6-4D74-307B13CA2158\r\n\r\nSleep/Wake UUID:       3A419743-0B90-456F-975D-532078296CA7\r\n\r\nTime Awake Since Boot: 36000 seconds\r\nTime Since Wake:       2000 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4b6e __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77f080 pthread_kill + 333\r\n2   libsystem_c.dylib             \t0x00007fff6b5101ae abort + 127\r\n3   libcoreclr.dylib              \t0x000000010470a15e PROCAbort + 14\r\n4   libcoreclr.dylib              \t0x0000000104708d42 PROCEndProcess(void*, unsigned int, int) + 226\r\n5   libcoreclr.dylib              \t0x00000001049c4d91 UnwindManagedExceptionPass1(PAL_SEHException&, _CONTEXT*) + 721\r\n6   libcoreclr.dylib              \t0x00000001049c4f24 DispatchManagedException(PAL_SEHException&, bool) + 292\r\n7   libcoreclr.dylib              \t0x0000000104861671 DynamicHelperWorker + 1841\r\n8   libcoreclr.dylib              \t0x00000001049d1399 DelayLoad_Helper + 119\r\n9   ???                           \t0x000000010c016281 0 + 4496384641\r\n10  ???                           \t0x000000010c016128 0 + 4496384296\r\n11  ???                           \t0x000000010b824a3d 0 + 4488055357\r\n12  ???                           \t0x000000010b821dda 0 + 4488043994\r\n13  ???                           \t0x000000010b821aa4 0 + 4488043172\r\n14  ???                           \t0x000000010b7104e7 0 + 4486923495\r\n15  libcoreclr.dylib              \t0x00000001049d1111 CallDescrWorkerInternal + 124\r\n16  libcoreclr.dylib              \t0x00000001048c834d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n17  libcoreclr.dylib              \t0x000000010479ecc5 RunMain(MethodDesc*, short, int*, PtrArray**) + 709\r\n18  libcoreclr.dylib              \t0x000000010479ef1f Assembly::ExecuteMainMethod(PtrArray**, int) + 223\r\n19  libcoreclr.dylib              \t0x00000001047d9884 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n20  libcoreclr.dylib              \t0x0000000104712e46 coreclr_execute_assembly + 230\r\n21  libhostpolicy.dylib           \t0x0000000104647ba8 0x1045cd000 + 502696\r\n22  libhostpolicy.dylib           \t0x0000000104637b66 0x1045cd000 + 437094\r\n23  libhostpolicy.dylib           \t0x00000001046398a0 0x1045cd000 + 444576\r\n24  libhostfxr.dylib              \t0x0000000104573ca3 0x1044f8000 + 507043\r\n25  libhostfxr.dylib              \t0x0000000104593b60 0x1044f8000 + 637792\r\n26  libhostfxr.dylib              \t0x00000001045907f0 0x1044f8000 + 624624\r\n27  libhostfxr.dylib              \t0x0000000104594868 0x1044f8000 + 641128\r\n28  libhostfxr.dylib              \t0x00000001045745c5 0x1044f8000 + 509381\r\n29  dotnet                        \t0x00000001044c4edc 0x1044ba000 + 44764\r\n30  dotnet                        \t0x00000001044c5075 0x1044ba000 + 45173\r\n31  libdyld.dylib                 \t0x00007fff6b464015 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5ab20a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff6b5aa724 mach_msg + 60\r\n2   libcoreclr.dylib              \t0x000000010470f358 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x000000010470e2ae SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n5   libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n6   libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b60a2 poll + 10\r\n1   libcoreclr.dylib              \t0x00000001047016fe CorUnix::CPalSynchronizationManager::ThreadPrepareForShutdown() + 30\r\n2   libcoreclr.dylib              \t0x000000010470357f CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 1119\r\n3   libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n5   libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n6   libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b486a __open + 10\r\n1   libcoreclr.dylib              \t0x000000010477c67f TwoWayPipe::WaitForConnection() + 31\r\n2   libcoreclr.dylib              \t0x0000000104773f6f DbgTransportSession::TransportWorker() + 159\r\n3   libcoreclr.dylib              \t0x00000001047728c9 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n6   libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n7   libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104770d98 DebuggerRCThread::MainLoop() + 264\r\n6   libcoreclr.dylib              \t0x0000000104770c2b DebuggerRCThread::ThreadProc() + 251\r\n7   libcoreclr.dylib              \t0x0000000104770914 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n8   libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n9   libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n10  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b63 SVR::gc_heap::gc_thread_function() + 147\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b41 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b41 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b41 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b41 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b41 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b41 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001049d7b41 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001049d7ac8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001049bce1e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n12  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 13:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5b4a1e __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6b77d589 _pthread_cond_wait + 732\r\n2   libcoreclr.dylib              \t0x0000000104701345 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x0000000104700fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104705e21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104705f96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x00000001049a94f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000104908c9f FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 31\r\n8   libcoreclr.dylib              \t0x0000000104908e13 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n9   libcoreclr.dylib              \t0x000000010488ad10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n10  libcoreclr.dylib              \t0x000000010488b359 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n11  libcoreclr.dylib              \t0x00000001049091ec FinalizerThread::FinalizerThreadStart(void*) + 188\r\n12  libcoreclr.dylib              \t0x000000010470bbb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n13  libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n14  libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n15  libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 14:\r\n0   libsystem_kernel.dylib        \t0x00007fff6b5ab20a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff6b5aa724 mach_msg + 60\r\n2   libclrjit.dylib               \t0x0000000106998288 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x00000001069971de SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff6b77c661 _pthread_body + 340\r\n5   libsystem_pthread.dylib       \t0x00007fff6b77c50d _pthread_start + 377\r\n6   libsystem_pthread.dylib       \t0x00007fff6b77bbf9 thread_start + 13\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x00007fffa3a94380  rcx: 0x00007ffeeb73d458  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000307  rsi: 0x0000000000000006  rbp: 0x00007ffeeb73d490  rsp: 0x00007ffeeb73d458\r\n   r8: 0x00007f9ab600a700   r9: 0xffffffff00000000  r10: 0x0000000000000000  r11: 0x0000000000000206\r\n  r12: 0x0000000000000307  r13: 0x0000000000000000  r14: 0x0000000000000006  r15: 0x000000000000002d\r\n  rip: 0x00007fff6b5b4b6e  rfl: 0x0000000000000206  cr2: 0x0000700001cd3ff8\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000005\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x1044ba000 -        0x1044d8ff7 +dotnet (0) <1416451F-908D-3837-A78C-DEEF6E1104BE> /usr/local/share/dotnet/dotnet\r\n       0x1044f8000 -        0x1045a8fff +libhostfxr.dylib (0) <053E9AC4-6020-3636-A0FE-F07A5A9FA705> /usr/local/share/dotnet/host/fxr/2.0.7/libhostfxr.dylib\r\n       0x1045cd000 -        0x10469aff7 +libhostpolicy.dylib (0) <869E5F60-0C4A-36BB-B06B-89CCD384377B> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/libhostpolicy.dylib\r\n       0x1046c3000 -        0x104bd1ff7 +libcoreclr.dylib (0) <2D974A3C-5DDA-3610-920F-68FCCC70B0B8> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/libcoreclr.dylib\r\n       0x1067db000 -        0x1069dfff7 +libclrjit.dylib (0) <4A89FE79-2F2A-3A8F-ADBC-F8905E4659AC> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/libclrjit.dylib\r\n       0x106abd000 -        0x106ac8fff +System.Globalization.Native.dylib (0) <67B4ECF3-8278-3373-87F4-12463AA91CA7> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/System.Globalization.Native.dylib\r\n       0x108457000 -        0x10845fff3 +System.Native.dylib (0) <9E61EFE1-FC34-32A0-B897-1D35EEC288F4> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/System.Native.dylib\r\n       0x108a8e000 -        0x108ad89df  dyld (551.3) <AFAB4EFA-7020-34B1-BBEF-0F26C6D3CA36> /usr/lib/dyld\r\n    0x7fff3f643000 -     0x7fff3f643fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <8632A9C5-19EA-3FD7-A44D-80765CC9C540> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff3f65b000 -     0x7fff3fb59fc3  com.apple.vImage (8.1 - ???) <A243A7EF-0C8E-3A9A-AA38-44AFD7507F00> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff3fb5a000 -     0x7fff3fcb4fe3  libBLAS.dylib (1211.50.2) <62C659EB-3E32-3B5F-83BF-79F5DF30D5CE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff3fcb5000 -     0x7fff3fce3fef  libBNNS.dylib (38.1) <7BAEFDCA-3227-3E07-80D8-59B6370B89C6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff3fce4000 -     0x7fff400a3ff7  libLAPACK.dylib (1211.50.2) <40ADBA5F-8B2D-30AC-A7AD-7B17C37EE52D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff400a4000 -     0x7fff400b9ff7  libLinearAlgebra.dylib (1211.50.2) <E8E0B7FD-A0B7-31E5-AF01-81781F71EBBE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff400ba000 -     0x7fff400bfff3  libQuadrature.dylib (3) <3D6BF66A-55B2-3692-BAC7-DEB0C676ED29> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff400c0000 -     0x7fff40140fff  libSparse.dylib (79.50.2) <0DC25CDD-F8C1-3D6E-B472-8B060708424F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff40141000 -     0x7fff40154fff  libSparseBLAS.dylib (1211.50.2) <722573CC-31CC-34B2-9032-E4F652A9CCFE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff40155000 -     0x7fff40302fc3  libvDSP.dylib (622.50.5) <40690941-CF89-3F90-A0AC-A4D200744A5D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff40303000 -     0x7fff403b4fff  libvMisc.dylib (622.50.5) <BA2532DF-2D68-3DD0-9B59-D434BF702AA4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff403b5000 -     0x7fff403b5fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <54FF3B43-E66C-3F36-B34B-A2B3B0A36502> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff41558000 -     0x7fff41558fff  com.apple.ApplicationServices (48 - 50) <8DA47D38-B07B-3AE2-B343-4579864430C6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff41559000 -     0x7fff415bffff  com.apple.ApplicationServices.ATS (377 - 445.3) <000C4E9F-E0D9-371D-B304-83BA37460724> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff41658000 -     0x7fff4177afff  libFontParser.dylib (222.1.4) <FF68FAF6-70BB-3E39-A263-E17B6F5E00D0> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff4177b000 -     0x7fff417c5ff7  libFontRegistry.dylib (221.3) <C84F7112-4764-3F4B-9FBA-4A022CF6346B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff41907000 -     0x7fff4190bff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <A5FB2694-1559-34A8-A3D3-2029F68A63CA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff419ab000 -     0x7fff419fdffb  com.apple.HIServices (1.22 - 624) <828E189A-62F9-3961-8A89-22F508870CC5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff419fe000 -     0x7fff41a0cfff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <B65FF7E6-E9B5-34D8-8CA7-63D415A8A9A6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff41a0d000 -     0x7fff41a59fff  com.apple.print.framework.PrintCore (13.4 - 503.2) <B90C67C1-0292-3CEC-885D-F1882CD104BE> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff41a5a000 -     0x7fff41a94fff  com.apple.QD (3.12 - 404.2) <38B20AFF-9D54-3B52-A6DC-C0D71380AA5F> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff41a95000 -     0x7fff41aa1fff  com.apple.speech.synthesis.framework (7.5.1 - 7.5.1) <84ADDF38-36F1-3D3B-B28D-8865FA10FCD7> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff41aa2000 -     0x7fff41d2fff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <87D81714-F167-39F5-B5E7-A7A432EDAB5B> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff42053000 -     0x7fff423edff7  com.apple.CFNetwork (897.15 - 897.15) <0C03AF39-3527-3E0D-8413-8E1B2A962F0D> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff42922000 -     0x7fff429dbfff  com.apple.ColorSync (4.13.0 - 3325) <D283C285-447D-3258-A7E4-59532123B8FF> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff42b68000 -     0x7fff42bfbff7  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <6E3F958D-79BB-3658-99AD-59F16BF756F1> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff42c8c000 -     0x7fff42fe2fef  com.apple.CoreData (120 - 851) <A2B59780-FB16-36A3-8EE0-E0EF072454E0> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff42fe3000 -     0x7fff430c8ff7  com.apple.CoreDisplay (1.0 - 97.16) <FCFB2A8C-7A5E-314B-AA12-04D33656A0E6> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff430c9000 -     0x7fff4356afef  com.apple.CoreFoundation (6.9 - 1452.23) <945E5C0A-86C5-336E-A64F-5BF06E78985A> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff4356c000 -     0x7fff43b7cfef  com.apple.CoreGraphics (2.0 - 1161.10) <31C36FA0-4026-3347-93FD-71CD7287A6F0> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff43b7e000 -     0x7fff43e6dfff  com.apple.CoreImage (13.0.0 - 579.4.11) <702F8035-26FE-3C78-8587-4C9563E03CC4> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff44235000 -     0x7fff44235fff  com.apple.CoreServices (822.31 - 822.31) <615919A2-AE11-3F27-9A37-FB0CFF8D36B6> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff44236000 -     0x7fff442aaffb  com.apple.AE (735.1 - 735.1) <08EBA184-20F7-3725-AEA6-C314448161C6> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff442ab000 -     0x7fff44582fff  com.apple.CoreServices.CarbonCore (1178.4 - 1178.4) <0D5E19BF-18CB-3FA4-8A5F-F6C787C5EE08> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff44583000 -     0x7fff445b7fff  com.apple.DictionaryServices (1.2 - 284.2) <6505B075-41C3-3C62-A4C3-85CE3F6825CD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff445b8000 -     0x7fff445c0ffb  com.apple.CoreServices.FSEvents (1239.50.1 - 1239.50.1) <3637CEC7-DF0E-320E-9634-44A442925C65> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff445c1000 -     0x7fff4477eff7  com.apple.LaunchServices (822.31 - 822.31) <BDFAB0FF-C2C6-375B-9E84-E43E267E2F82> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff4477f000 -     0x7fff4482fff7  com.apple.Metadata (10.7.0 - 1191.4.13) <B5C22E70-C265-3C9F-865F-B138994A418D> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff44830000 -     0x7fff44890fff  com.apple.CoreServices.OSServices (822.31 - 822.31) <690E3C93-8799-39FF-8663-190A49B002E3> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff44891000 -     0x7fff448fffff  com.apple.SearchKit (1.4.0 - 1.4.0) <3662545A-B1CF-3079-BDCD-C83855CEFEEE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff44900000 -     0x7fff44924ffb  com.apple.coreservices.SharedFileList (71.21 - 71.21) <7DB79D78-9925-33F8-96BA-35AB7AEB326A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff44bc5000 -     0x7fff44d15fff  com.apple.CoreText (352.0 - 578.18) <B8454115-2A4B-3585-A7A1-B47A638F2EEB> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff44d16000 -     0x7fff44d50fff  com.apple.CoreVideo (1.8 - 0.0) <86CCC036-51BB-3DD1-9601-D93798BCCD0F> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff45057000 -     0x7fff4505cfff  com.apple.DiskArbitration (2.7 - 2.7) <A6450227-DD23-3100-ADBF-DB1C21E979F7> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff4521d000 -     0x7fff455e3fff  com.apple.Foundation (6.9 - 1452.23) <E64540AD-1755-3C16-8537-552A00E92541> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff45653000 -     0x7fff45683fff  com.apple.GSS (4.0 - 2.0) <41087278-74AE-3FA5-8C0E-9C78EB696299> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff458f9000 -     0x7fff45994ff7  com.apple.framework.IOKit (2.0.2 - 1445.50.26) <A63CAC8D-BF57-34FD-9A88-2F74546F2000> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff45996000 -     0x7fff4599dffb  com.apple.IOSurface (211.12 - 211.12) <392CA7DE-B365-364E-AF4A-33EC2CC48E6F> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff459f4000 -     0x7fff45b6dfe7  com.apple.ImageIO.framework (3.3.0 - 1739.1) <E5E88083-26A7-3E48-8EB4-A1F04E0737CE> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff45b6e000 -     0x7fff45b72ffb  libGIF.dylib (1739.1) <D39BE184-279C-36AC-B233-EE17CACDEDB3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff45b73000 -     0x7fff45c5afef  libJP2.dylib (1739.1) <053925CD-59DB-372F-98A8-C2372FF0B899> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff45c5b000 -     0x7fff45c7eff7  libJPEG.dylib (1739.1) <E925D511-B457-3732-9B67-1A7DFB228EA4> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff45f5a000 -     0x7fff45f80feb  libPng.dylib (1739.1) <48633B0C-BE01-3D94-9D9D-A95D50466AF9> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff45f81000 -     0x7fff45f83ffb  libRadiance.dylib (1739.1) <A6F1064A-FFFC-3B06-8CBF-5204CDFC41C6> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff45f84000 -     0x7fff45fd2fef  libTIFF.dylib (1739.1) <AD819413-29E3-3B2F-8997-2F88A82D9D83> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff46e6e000 -     0x7fff46e87ff7  com.apple.Kerberos (3.0 - 1) <F86DCCDF-93C1-38B3-82C2-477C12E8EE6D> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff47861000 -     0x7fff478e2ff7  com.apple.Metal (125.25 - 125.25) <B2ECA050-4C13-3EAD-A1C8-AC21EFF122F1> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff478ff000 -     0x7fff4791afff  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <0B4455FE-5C97-345C-B416-325EC6D88A2A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff4791b000 -     0x7fff4798afef  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <87F14199-C445-34C2-90F8-57C29212483E> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff4798b000 -     0x7fff479affff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <BD50FD9C-CE92-34AF-8663-968BF89202A0> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff479b0000 -     0x7fff47a97ff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <FBDDCAE6-EC6E-361F-B924-B3EBDEAC2D2F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff47a98000 -     0x7fff47a98ff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <20ECB52B-B5C2-39EA-88E3-DFEC0C3CC9FF> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff48a97000 -     0x7fff48aa3ffb  com.apple.NetFS (6.0 - 4.0) <471DD96F-FA2E-3FE9-9746-2519A6780D1A> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff4b895000 -     0x7fff4b8e3fff  com.apple.opencl (2.8.15 - 2.8.15) <83ED39D0-1D39-3593-BA25-70A8A911DE71> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff4b8e4000 -     0x7fff4b900ffb  com.apple.CFOpenDirectory (10.13 - 207.50.1) <C2715A7A-2E5C-3A21-ADB4-726F707A1294> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff4b901000 -     0x7fff4b90cfff  com.apple.OpenDirectory (10.13 - 207.50.1) <220FB6F2-4892-3A66-8838-C134CF657D3A> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff4ca8b000 -     0x7fff4ca8dfff  libCVMSPluginSupport.dylib (16.5.10) <BF5D065A-A38B-3446-9418-799F598072EF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff4ca8e000 -     0x7fff4ca93ffb  libCoreFSCache.dylib (162.6.1) <879B2738-2E8A-3596-AFF8-9C3FB1B6828B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff4ca94000 -     0x7fff4ca98fff  libCoreVMClient.dylib (162.6.1) <64ED0A84-225F-39BC-BE0D-C896ACF5B50A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff4ca99000 -     0x7fff4caa2ff7  libGFXShared.dylib (16.5.10) <6024B1FE-ACD7-3314-B390-85972CB9B778> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff4caa3000 -     0x7fff4caaefff  libGL.dylib (16.5.10) <AB8B6C73-8496-3784-83F6-27737ED03B09> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff4caaf000 -     0x7fff4caeafe7  libGLImage.dylib (16.5.10) <5B41D074-3132-3587-91B6-E441BA8C9F13> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff4cc58000 -     0x7fff4cc96ffb  libGLU.dylib (16.5.10) <F6844912-1B86-34DF-9FB5-A428CC7B5B18> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff4d60e000 -     0x7fff4d61dfff  com.apple.opengl (16.5.10 - 16.5.10) <BC4EEFE3-A09B-3998-B723-1415B995B0EE> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff4e46c000 -     0x7fff4e6b7ff7  com.apple.QuartzCore (1.11 - 584.40) <ABC7F8FA-5F5A-31F4-868B-FDC4175BAFAC> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff4eeeb000 -     0x7fff4f213fff  com.apple.security (7.0 - 58286.51.6) <7212D257-5324-3DBA-8C26-504D6B8F632A> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff4f214000 -     0x7fff4f2a0ff7  com.apple.securityfoundation (6.0 - 55185.50.5) <087D601E-7813-3F9E-97EE-BC7081F520BD> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff4f2d2000 -     0x7fff4f2d6ffb  com.apple.xpc.ServiceManagement (1.0 - 1) <5BFDB3ED-73A7-3035-A5BC-ADA6E4F74BFD> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff4f67b000 -     0x7fff4f6ebff3  com.apple.SystemConfiguration (1.17 - 1.17) <8532B8E9-7E30-35A3-BC4A-DDE8E0614FDA> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff525dc000 -     0x7fff5266fff7  com.apple.APFS (1.0 - 1) <D1CE52E0-45C0-30C4-B440-E2CF2F74CEE5> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff53405000 -     0x7fff5344dff3  com.apple.AppleJPEG (1.0 - 1) <8DD410CB-76A1-3F22-9A9F-0491FA0CEB4A> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff53488000 -     0x7fff534b0fff  com.apple.applesauce (1.0 - ???) <CCA8B094-1BCE-3AE3-A0A7-D544C818DE36> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff53cd0000 -     0x7fff53cd7ff7  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <51A41CA3-DB1D-3380-993E-99C54AEE518E> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff55715000 -     0x7fff5571eff3  com.apple.CommonAuth (4.0 - 2.0) <4D237B25-27E5-3577-948B-073659F6D3C0> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff56221000 -     0x7fff56231ff7  com.apple.CoreEmoji (1.0 - 69.3) <A4357F5C-0C38-3A61-B456-D7321EB2CEE5> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff5794f000 -     0x7fff57953ffb  com.apple.DSExternalDisplay (3.1 - 380) <8D03D346-887A-3CE7-9483-4AD7804D1FBB> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff58a20000 -     0x7fff58e4efff  com.apple.vision.FaceCore (3.3.2 - 3.3.2) <B574FE33-4A41-3611-9738-388EBAF03E37> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff5c116000 -     0x7fff5c11bff7  com.apple.GPUWrangler (3.18.48 - 3.18.48) <D2BA4CFA-ED0A-3FEC-B5FF-2D6C0557334E> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff5ce91000 -     0x7fff5cea0fff  com.apple.GraphVisualizer (1.0 - 5) <B993B8A2-5700-3DFC-9EB7-4CCEE8F959F1> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff5cf23000 -     0x7fff5cf97fff  com.apple.Heimdal (4.0 - 2.0) <18607D75-DB78-3CC7-947E-AC769195164C> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff5d893000 -     0x7fff5d89aff7  com.apple.IOAccelerator (378.18.1 - 378.18.1) <E47DDE66-1B2B-310F-A060-638CA5D86F9C> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff5d89e000 -     0x7fff5d8b6fff  com.apple.IOPresentment (1.0 - 35.1) <214AD582-466F-3844-A0A4-DE0742A8B899> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff5df3f000 -     0x7fff5e034ff7  com.apple.LanguageModeling (1.0 - 159.5.3) <7F0AC200-E3DD-39FB-8A95-00DD70B66A9F> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff5e035000 -     0x7fff5e077fff  com.apple.Lexicon-framework (1.0 - 33.5) <DC94CF9E-1EB4-3C0E-B298-CA1190885276> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff5e07b000 -     0x7fff5e082ff7  com.apple.LinguisticData (1.0 - 238.3) <49A54649-1021-3DBD-99B8-1B2EDFFA5378> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff5ed61000 -     0x7fff5edcaff7  com.apple.gpusw.MetalTools (1.0 - 1) <B5F66CF4-BE75-3A0B-A6A0-2F22C7C259D9> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff5efeb000 -     0x7fff5f015ffb  com.apple.MultitouchSupport.framework (1404.4 - 1404.4) <45374A2A-C0BC-3A70-8183-37295205CDFA> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff5f27c000 -     0x7fff5f287fff  com.apple.NetAuth (6.2 - 6.2) <B3795F63-C14A-33E1-9EE6-02A2E7661321> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff652a1000 -     0x7fff6553dfff  com.apple.SkyLight (1.600.0 - 312.50) <0CF4C608-8748-32BF-9586-A1601945F82C> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff66ead000 -     0x7fff66eb5ff7  com.apple.TCC (1.0 - 1) <E1EB7272-FE6F-39AB-83CA-B2B5F2A88D9B> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff68ae4000 -     0x7fff68ae6ffb  com.apple.loginsupport (1.0 - 1) <D1232C1B-80EA-3DF8-9466-013695D0846E> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff68c4d000 -     0x7fff68c80ff7  libclosured.dylib (551.3) <DC3DA678-9C40-339C-A9C6-32AB74FCC682> /usr/lib/closure/libclosured.dylib\r\n    0x7fff68d3a000 -     0x7fff68d73ff7  libCRFSuite.dylib (41) <FE5EDB68-2593-3C2E-BBAF-1C52D206F296> /usr/lib/libCRFSuite.dylib\r\n    0x7fff68d74000 -     0x7fff68d7ffff  libChineseTokenizer.dylib (28) <53633C9B-A3A8-36F7-A53C-432D802F4BB8> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff68e11000 -     0x7fff68e12ff3  libDiagnosticMessagesClient.dylib (104) <9712E980-76EE-3A89-AEA6-DF4BAF5C0574> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff68e49000 -     0x7fff69013ff3  libFosl_dynamic.dylib (17.8) <C58ED77A-4986-31C2-994C-34DDFB8106F0> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff6904b000 -     0x7fff6904bfff  libOpenScriptingUtil.dylib (174) <610F0242-7CE5-3C86-951B-B646562694AF> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff69187000 -     0x7fff69188ffb  libSystem.B.dylib (1252.50.4) <C7810EA7-A61F-3817-8E54-E2EC4E26F946> /usr/lib/libSystem.B.dylib\r\n    0x7fff6921b000 -     0x7fff6921bfff  libapple_crypto.dylib (109.50.14) <48BA2E76-BF2F-3522-A54E-D7FB7EAF7A57> /usr/lib/libapple_crypto.dylib\r\n    0x7fff6921c000 -     0x7fff69232ff7  libapple_nghttp2.dylib (1.24) <01402BC4-4822-3676-9C80-50D83F816424> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff69233000 -     0x7fff6925dff3  libarchive.2.dylib (54) <8FC28DD8-E315-3C3E-95FE-D1D2CBE49888> /usr/lib/libarchive.2.dylib\r\n    0x7fff692e3000 -     0x7fff692e3ff3  libauto.dylib (187) <A05C7900-F8C7-3E75-8D3F-909B40C19717> /usr/lib/libauto.dylib\r\n    0x7fff692e4000 -     0x7fff6939cff3  libboringssl.dylib (109.50.14) <E6813F87-B5E4-3F7F-A725-E6A7F2BD02EC> /usr/lib/libboringssl.dylib\r\n    0x7fff6939d000 -     0x7fff693adff3  libbsm.0.dylib (39) <6BC96A72-AFBE-34FD-91B1-748A530D8AE6> /usr/lib/libbsm.0.dylib\r\n    0x7fff693ae000 -     0x7fff693bbffb  libbz2.1.0.dylib (38) <0A5086BB-4724-3C14-979D-5AD4F26B5B45> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff693bc000 -     0x7fff69412fff  libc++.1.dylib (400.9) <7D3DACCC-3804-393C-ABC1-1A580FD00CB6> /usr/lib/libc++.1.dylib\r\n    0x7fff69413000 -     0x7fff69437ff7  libc++abi.dylib (400.8.2) <EF5E37D7-11D9-3530-BE45-B986612D13E2> /usr/lib/libc++abi.dylib\r\n    0x7fff69439000 -     0x7fff69449fff  libcmph.dylib (6) <A5509EE8-7E00-3224-8814-015B077A3CF5> /usr/lib/libcmph.dylib\r\n    0x7fff6944a000 -     0x7fff69460fff  libcompression.dylib (47.50.1) <491784AE-CB90-3E27-9081-95C3A1211760> /usr/lib/libcompression.dylib\r\n    0x7fff6970b000 -     0x7fff69723ff7  libcoretls.dylib (155.50.1) <D350052E-DC4D-3185-ADBA-BA48EDCEE955> /usr/lib/libcoretls.dylib\r\n    0x7fff69724000 -     0x7fff69725ff3  libcoretls_cfhelpers.dylib (155.50.1) <B297F5D8-F2FE-3566-A752-E9D998B9C039> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff69bf6000 -     0x7fff69c4cff3  libcups.2.dylib (462.2) <64864CBE-03A3-34C7-9DBB-C93601F183FD> /usr/lib/libcups.2.dylib\r\n    0x7fff69d8c000 -     0x7fff69d8cfff  libenergytrace.dylib (16) <A92AB8B8-B986-3CE6-980D-D55090FEF387> /usr/lib/libenergytrace.dylib\r\n    0x7fff69dc3000 -     0x7fff69dc8ff3  libheimdal-asn1.dylib (520.50.6) <E358445A-B84E-31B5-BCCD-7E1397519D96> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff69df4000 -     0x7fff69ee5ff7  libiconv.2.dylib (51.50.1) <2FEC9707-3FAF-3828-A50D-8605086D060F> /usr/lib/libiconv.2.dylib\r\n    0x7fff69ee6000 -     0x7fff6a10dffb  libicucore.A.dylib (59173.0.1) <CECAD5E5-3EFD-3AAC-AD9B-E355B2DD5E9C> /usr/lib/libicucore.A.dylib\r\n    0x7fff6a15a000 -     0x7fff6a15bfff  liblangid.dylib (128) <39C39393-0D05-301D-93B2-F224FC4949AA> /usr/lib/liblangid.dylib\r\n    0x7fff6a15c000 -     0x7fff6a175ffb  liblzma.5.dylib (10) <3D419A50-961F-37D2-8A01-3DC7AB7B8D18> /usr/lib/liblzma.5.dylib\r\n    0x7fff6a176000 -     0x7fff6a18cff7  libmarisa.dylib (9) <D6D2D55D-1D2E-3442-B152-B18803C0ABB4> /usr/lib/libmarisa.dylib\r\n    0x7fff6a23d000 -     0x7fff6a465ff7  libmecabra.dylib (779.7.6) <F462F170-E872-3D09-B219-973D5E99C09F> /usr/lib/libmecabra.dylib\r\n    0x7fff6a63d000 -     0x7fff6a7b7fff  libnetwork.dylib (1229.51.2) <D64FE2A1-CBFD-3817-A701-9A0DDBD70DCF> /usr/lib/libnetwork.dylib\r\n    0x7fff6a836000 -     0x7fff6ac247e7  libobjc.A.dylib (723) <DD9E5EC5-B507-3249-B700-93433E2D5EDF> /usr/lib/libobjc.A.dylib\r\n    0x7fff6ac37000 -     0x7fff6ac3bfff  libpam.2.dylib (22) <7B4D2CE2-1438-387A-9802-5CEEFBF26F86> /usr/lib/libpam.2.dylib\r\n    0x7fff6ac3e000 -     0x7fff6ac72fff  libpcap.A.dylib (79.20.1) <FA13918B-A247-3181-B256-9B852C7BA316> /usr/lib/libpcap.A.dylib\r\n    0x7fff6acf1000 -     0x7fff6ad0dffb  libresolv.9.dylib (65) <E8F3415B-4472-3202-8901-41FD87981DB2> /usr/lib/libresolv.9.dylib\r\n    0x7fff6ad5e000 -     0x7fff6aef1ff7  libsqlite3.dylib (274.8.1) <FCAD6A57-829E-3701-B16E-1833D620E0E8> /usr/lib/libsqlite3.dylib\r\n    0x7fff6b0c5000 -     0x7fff6b125ff3  libusrtcp.dylib (1229.51.2) <3D8806D9-4BA9-35EE-BC44-F58BC2A0962D> /usr/lib/libusrtcp.dylib\r\n    0x7fff6b126000 -     0x7fff6b129ffb  libutil.dylib (51.20.1) <216D18E5-0BAF-3EAF-A38E-F6AC37CBABD9> /usr/lib/libutil.dylib\r\n    0x7fff6b12a000 -     0x7fff6b137fff  libxar.1.dylib (400) <0316128D-3B47-3052-995D-97B4FE5491DC> /usr/lib/libxar.1.dylib\r\n    0x7fff6b13b000 -     0x7fff6b222fff  libxml2.2.dylib (31.10) <503721DB-0D8D-379E-B743-18CE59304155> /usr/lib/libxml2.2.dylib\r\n    0x7fff6b223000 -     0x7fff6b24bfff  libxslt.1.dylib (15.12) <4A5E011D-8B29-3135-A52B-9A9070ABD752> /usr/lib/libxslt.1.dylib\r\n    0x7fff6b24c000 -     0x7fff6b25effb  libz.1.dylib (70) <48C67CFC-940D-3857-8DAD-857774605352> /usr/lib/libz.1.dylib\r\n    0x7fff6b2fa000 -     0x7fff6b2feff7  libcache.dylib (80) <092479CB-1008-3A83-BECF-E115F24D13C1> /usr/lib/system/libcache.dylib\r\n    0x7fff6b2ff000 -     0x7fff6b309ff3  libcommonCrypto.dylib (60118.50.1) <029F5985-9B6E-3DCB-9B96-FD007678C6A7> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff6b30a000 -     0x7fff6b311fff  libcompiler_rt.dylib (62) <968B8E3F-3681-3230-9D78-BB8732024F6E> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff6b312000 -     0x7fff6b31bffb  libcopyfile.dylib (146.50.5) <3885083D-50D8-3EEC-B481-B2E605180D7F> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff6b31c000 -     0x7fff6b3a1fff  libcorecrypto.dylib (562.50.17) <67007279-24E1-3F30-802D-A55CD5C27946> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff6b429000 -     0x7fff6b462ff7  libdispatch.dylib (913.50.12) <848EEE57-4235-3A61-9A52-C0097DD2AB5E> /usr/lib/system/libdispatch.dylib\r\n    0x7fff6b463000 -     0x7fff6b480ff7  libdyld.dylib (551.3) <CF59A5A5-288B-30E6-BD42-9056B4E4139A> /usr/lib/system/libdyld.dylib\r\n    0x7fff6b481000 -     0x7fff6b481ffb  libkeymgr.dylib (28) <E34E283E-90FA-3C59-B48E-1277CDB9CDCE> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff6b482000 -     0x7fff6b48eff3  libkxld.dylib (4570.51.1) <C2B927F3-E9D9-3ACF-A358-A51A61749FB4> /usr/lib/system/libkxld.dylib\r\n    0x7fff6b48f000 -     0x7fff6b48fff7  liblaunch.dylib (1205.50.76) <4D52BB64-C568-3A36-8935-2480427EE2A2> /usr/lib/system/liblaunch.dylib\r\n    0x7fff6b490000 -     0x7fff6b494ffb  libmacho.dylib (906) <1902A611-081A-3452-B11E-EBD1B166E831> /usr/lib/system/libmacho.dylib\r\n    0x7fff6b495000 -     0x7fff6b497ff3  libquarantine.dylib (86) <26C0BA22-8F93-3A07-9A4E-C8D53D2CE42E> /usr/lib/system/libquarantine.dylib\r\n    0x7fff6b498000 -     0x7fff6b499ff3  libremovefile.dylib (45) <711E18B2-5BBE-3211-A916-56740C27D17A> /usr/lib/system/libremovefile.dylib\r\n    0x7fff6b49a000 -     0x7fff6b4b1fff  libsystem_asl.dylib (356.50.1) <3B24F2D1-B578-359D-ADB2-0ED19A364C38> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff6b4b2000 -     0x7fff6b4b2fff  libsystem_blocks.dylib (67) <17303FDF-0D2D-3963-B05E-B4DF63052D47> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff6b4b3000 -     0x7fff6b53cff7  libsystem_c.dylib (1244.50.9) <1187BFE8-4576-3247-8177-481554E1F9E7> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff6b53d000 -     0x7fff6b540ffb  libsystem_configuration.dylib (963.50.8) <DF6B5287-203E-30CB-9947-78DF446C72B8> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff6b541000 -     0x7fff6b544ffb  libsystem_coreservices.dylib (51) <486000D3-D8CB-3BE7-8EE5-8BF380DE6DF7> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff6b545000 -     0x7fff6b546fff  libsystem_darwin.dylib (1244.50.9) <09C21A4A-9EE0-388B-A9D9-DFF8F6758791> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff6b547000 -     0x7fff6b54dff7  libsystem_dnssd.dylib (878.50.17) <9033B909-BCF7-37EB-A040-ADE8081611D6> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff6b54e000 -     0x7fff6b597ff7  libsystem_info.dylib (517.30.1) <AB634A98-B8AA-3804-8436-38261FC8EC4D> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff6b598000 -     0x7fff6b5beff7  libsystem_kernel.dylib (4570.51.1) <5CAAB092-02CC-3A37-9D5F-C4AD1083AB96> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff6b5bf000 -     0x7fff6b60afcb  libsystem_m.dylib (3147.50.1) <FC2E58BA-E6D5-3D2A-89CA-67F212294136> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff6b60b000 -     0x7fff6b62afff  libsystem_malloc.dylib (140.50.6) <7FD43735-9DDD-300E-8C4A-F909A74BDF49> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff6b62b000 -     0x7fff6b75bff3  libsystem_network.dylib (1229.51.2) <F65ED095-8ABA-3355-93F8-B9D0505932F4> /usr/lib/system/libsystem_network.dylib\r\n    0x7fff6b75c000 -     0x7fff6b766ffb  libsystem_networkextension.dylib (767.50.25) <758F1414-796D-3422-83C9-92D2915A06CE> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff6b767000 -     0x7fff6b770ff3  libsystem_notify.dylib (172) <08012EC0-2CD2-34BE-BF93-E7F56491299A> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff6b771000 -     0x7fff6b778ff7  libsystem_platform.dylib (161.50.1) <6355EE2D-5456-3CA8-A227-B96E8F1E2AF8> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff6b779000 -     0x7fff6b784fff  libsystem_pthread.dylib (301.50.1) <0E51CCBA-91F2-34E1-BF2A-FEEFD3D321E4> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff6b785000 -     0x7fff6b788fff  libsystem_sandbox.dylib (765.50.51) <B48D256E-D7DB-3D4F-BC95-34557170C7AA> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff6b789000 -     0x7fff6b78aff3  libsystem_secinit.dylib (30) <DE8D14E8-A276-3FF8-AE13-77F7040F33C1> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff6b78b000 -     0x7fff6b792ff7  libsystem_symptoms.dylib (820.50.37) <ED7350E0-B68B-374A-9AB7-DC1F195A8327> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff6b793000 -     0x7fff6b7a6fff  libsystem_trace.dylib (829.50.17) <6568D68B-1D4C-38EE-90A9-54821D6403C0> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff6b7a8000 -     0x7fff6b7adff7  libunwind.dylib (35.3) <BEF3FB49-5604-3B5F-82B5-332B80023AC3> /usr/lib/system/libunwind.dylib\r\n    0x7fff6b7ae000 -     0x7fff6b7dbfff  libxpc.dylib (1205.50.76) <25DB244E-217D-3CE0-A8F2-0C4255783B42> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 26761\r\n    thread_create: 0\r\n    thread_set_state: 30\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=304.9M resident=0K(0%) swapped_out_or_unallocated=304.9M(100%)\r\nWritable regions: Total=93.8M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=93.8M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nKernel Alloc Once                    8K        2 \r\nMALLOC                            33.0M       14 \r\nMALLOC guard page                   32K        9 \r\nMALLOC_LARGE (reserved)           19.9M        2         reserved VM address space (unallocated)\r\nSTACK GUARD                       56.1M       16 \r\nStack                             15.1M       16 \r\nVM_ALLOCATE                       20.1G      266 \r\nVM_ALLOCATE (reserved)              64K        2         reserved VM address space (unallocated)\r\n__DATA                            14.6M      187 \r\n__FONT_DATA                          4K        2 \r\n__LINKEDIT                       194.5M       10 \r\n__TEXT                           110.4M      190 \r\n__UNICODE                          560K        2 \r\nmapped file                       40.2M      129 \r\nshared memory                        8K        3 \r\n===========                     =======  ======= \r\nTOTAL                             20.5G      835 \r\nTOTAL, minus reserved VM space    20.5G      835 \r\n\r\nModel: MacBookPro11,4, BootROM MBP114.0182.B00, 4 processors, Intel Core i7, 2.2 GHz, 16 GB, SMC 2.29f24\r\nGraphics: Intel Iris Pro, Intel Iris Pro, Built-In\r\nMemory Module: BANK 0/DIMM0, 8 GB, DDR3, 1600 MHz, 0x80AD, 0x484D54343147533642465238412D50422020\r\nMemory Module: BANK 1/DIMM0, 8 GB, DDR3, 1600 MHz, 0x80AD, 0x484D54343147533642465238412D50422020\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x152), Broadcom BCM43xx 1.0 (7.77.37.29.1a7)\r\nBluetooth: Version 6.0.5f3, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en0\r\nSerial ATA Device: APPLE SSD SM0256G, 251 GB\r\nUSB Device: USB 3.0 Bus\r\nUSB Device: Apple Internal Keyboard / Trackpad\r\nUSB Device: Bluetooth USB Host Controller\r\nThunderbolt Bus: MacBook Pro, Apple Inc., 27.1\r\n```\r\n\r\nI did put Automatic redirect in proj file\r\n```\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\r\n    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>\r\n  </PropertyGroup>\r\n```\r\n\r\nPS : I am using fsproj file. \r\n\r\nI don't know how to debug this issue. I did tried deleting obj and bin folder but didn't work.\r\n\r\nPlease let me know if any details are required here... It is very annoying that things work on Windows, docker (linux) but can't work for Mac."},{"Id":"7564656954","Type":"IssuesEvent","CreatedAt":"2018-04-21T00:13:57","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1942","RelatedDescription":"Closed issue \"deps file is not regenerated when non-nuget references change\" (#1942) at dotnet/sdk","RelatedBody":"Currently the target that generates the deps file only runs when project.assets.json is older than deps.json, but if non-package references are changed, then the deps file would also need to change.\r\n\r\nWe do want to keep incrementality because it is an expensive operation, but we should account for the other task parameters that can change the deps file."},{"Id":"7564656630","Type":"IssuesEvent","CreatedAt":"2018-04-21T00:13:46","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1847","RelatedDescription":"Closed issue \"Add additional metadata to deps.json to support \"framework wins over app\"\" (#1847) at dotnet/sdk","RelatedBody":"This is the SDK work to support the core-setup feature https://github.com/dotnet/core-setup/issues/3546\r\n\r\nThat core-setup issue adds new metadata to the framework's deps.json to help determine which assemblies are newer during file-based probing. This would need to be done by the SDK during build and\\or publish. That metadata includes assembly version and file version, where assembly version is compared first and if equal, then file version is compared.\r\n\r\n@nguerrera "},{"Id":"7564648795","Type":"PullRequestEvent","CreatedAt":"2018-04-21T00:09:43","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2118","RelatedDescription":"Merged pull request \"Include assembly and file versions in deps file for non self-contained publish\" (#2118) at dotnet/sdk","RelatedBody":"Fixes #1847\r\n\r\nAlso fixes #1942 (in most cases)"},{"Id":"7564643731","Type":"IssuesEvent","CreatedAt":"2018-04-21T00:07:09","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2170","RelatedDescription":"Opened issue \"Breaking change from removal of SDK defaulting ProjectAssetsFile\" (#2170) at dotnet/sdk","RelatedBody":"See https://github.com/dotnet/cli/pull/9117 and https://github.com/dotnet/sdk/pull/2010\r\n\r\nIt has always been incorrect in general to to `msbuild /t:restore;build` or `<MSBuild Targets=\"Restore;Build\"` because evaluation is shared and so build doesn't see the targets pulled down from nuget. #2010 adds a hard dependency on the ProjectAssetsFile being set by the generated props file in restore, which means that the first run of these incorrect patterns will always fail now instead of sometimes getting lucky. Note that lucky could be silent bad behavior.\r\n\r\nOptions I see:\r\n\r\n1. Improve the error message to hint that the cause of the error may be that restore and build were attempted in the same evaluation.\r\n2. Improve the message and also downgrade it to a warning.\r\n3. Revert the change.\r\n\r\nI would like to do (1) because we've lost a lot of time debugging subtly broken builds with this incorrect pattern, but we should think carefully about it.\r\n\r\ncc @livarcocc @dsplaisted @wli3 @rrelyea @rohit21agrawal  @nkolev92 \r\n"},{"Id":"7564330741","Type":"PullRequestEvent","CreatedAt":"2018-04-20T22:07:01","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2169","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.7.0-rtm.5122 into sdk\" (#2169) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.7.0-rtm.5122 into sdk release/2.1.2xx branch"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"987375741204508673","CreatedAt":"2018-04-20T17:01:35+00:00","UserScreenname":"dotnet","Text":"Help us plan the future of .NET! https://t.co/R0QoZVvXx4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":83,"FavoriteCount":62,"RawContent":null},{"Id":"986692696507953152","CreatedAt":"2018-04-18T19:47:25+00:00","UserScreenname":"dotnet","Text":"Performance Improvements in .NET Core 2.1 https://t.co/6YMK8P99cZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":241,"FavoriteCount":148,"RawContent":null},{"Id":"986692437211987969","CreatedAt":"2018-04-18T19:46:23+00:00","UserScreenname":"dotnet","Text":"Announcing Visual Studio 2017 15.7 Preview 4 https://t.co/XYIzXNDMhn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null},{"Id":"986400394786914304","CreatedAt":"2018-04-18T00:25:55+00:00","UserScreenname":"dotnet","Text":".NET Core April 2018 Update https://t.co/PuT2Jc7GBy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":32,"RawContent":null},{"Id":"985915431499259904","CreatedAt":"2018-04-16T16:18:50+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz and his pair-programming guest @fiercekittenz tomorrow for some LIVE CODING and discussion ab… https://t.co/Vll8gfdlKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-04-21T05:30:21.4085822Z","RunDurationInMilliseconds":7666}