{"Data":{"Vue-Issues":{"Issues":[{"Id":"406630858","IsPullRequest":true,"CreatedAt":"2019-02-05T05:00:20","Actor":"vue-bot","Number":"9423","RawContent":null,"Title":"[automated] Patreon backers update (Feb 2019","State":"open","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9423","RelatedDescription":"Open PR \"[automated] Patreon backers update (Feb 2019\" (#9423)"},{"Id":"406613091","IsPullRequest":false,"CreatedAt":"2019-02-05T03:39:50","Actor":"decademoon","Number":"9422","RawContent":null,"Title":"v-if with slot","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/decademoon/hasupd08/8/](http://jsfiddle.net/decademoon/hasupd08/8/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle.\r\n\r\n### What is expected?\r\nNo error should occur.\r\n\r\n### What is actually happening?\r\nAn error occurs:\r\n\r\n```\r\nProperty or method \"value\" is not defined on the instance but referenced during render.\r\n```\r\n---\r\nIs 2.6.x supposed to be fully compatible with 2.5.x? The generated render function is different, and it looks like `v-if` has different priority than `slot`.\r\n\r\nFor reference, [this fiddle](http://jsfiddle.net/decademoon/hasupd08/10/) shows it working in 2.5.16.\r\n\r\nMight be related to #9391.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9422","RelatedDescription":"Closed issue \"v-if with slot\" (#9422)"},{"Id":"406568917","IsPullRequest":false,"CreatedAt":"2019-02-05T03:39:50","Actor":"K900","Number":"9421","RawContent":null,"Title":"New (2.6 ) slot syntax results in slots not added to vm.$slots, breaking existing render functions","State":"closed","Body":"### Version\r\n2.6.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/3kpf9u54/4/](https://jsfiddle.net/3kpf9u54/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Observe the contents of the `<template>` displayed\r\n2. Change the code from `<template slot=\"content\">` to `<template #content>` or `<template v-slot:content>` and observe the contents stop being displayed\r\n3. Change the render function code from `this.$slots.content` to `this.$scopedSlots.content()` and observe the contents be displayed again\r\n\r\n### What is expected?\r\nContents are displayed all the time; old render functions don't break when used with new syntax\r\n\r\n### What is actually happening?\r\nNew syntax forces slots into being scoped, breaking existing render functions\r\n\r\n---\r\nI'm actually not sure if this is intentional or not, but it breaks Vuetify, and probably other things too. Assuming this _is_ intentional, it makes writing functional components more difficult, as you have to either:\r\n\r\n1. check both `this.$slots` (for Vue pre-2.6) and `this.$scopedSlots` (for Vue post-2.6)\r\n2. only check `this.$scopedSlots` and ask Vue pre-2.6 users to add `slot-scope` everywhere so all slots become scoped\r\n3. only check `this.$slots` and ask Vue post-2.6 users to use the legacy syntax\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9421","RelatedDescription":"Closed issue \"New (2.6 ) slot syntax results in slots not added to vm.$slots, breaking existing render functions\" (#9421)"},{"Id":"406545005","IsPullRequest":false,"CreatedAt":"2019-02-04T22:44:34","Actor":"sahamnadeem","Number":"9420","RawContent":null,"Title":"Iterative rendering of data elements in computed property ","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://kamsham.com](https://kamsham.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIf i create an http request in a computed property its it sends the request again and again that slowes down the performance of the framework itself...\r\nAnd also the computed property does not compute before the system gets fully rendered, this delay should not bs there. And if i use a foreach loop in a computed property to return some specific objections it gives me the same list of objects iteratively and the lost goes on with infinite number or objects in it...  \r\n\r\n### What is expected?\r\nI need you to fixe that bug or if m not using it correctly then kindly inform me ghe right way to use it \r\n\r\n### What is actually happening?\r\nIf i create an http request in a computed property its it sends the request again and again that slowes down the performance of the framework itself...\r\nAnd also the computed property does not compute before the system gets fully rendered, this delay should not bs there. And if i use a foreach loop in a computed property to return some specific objections it gives me the same list of objects iteratively and the lost goes on with infinite number or objects in it...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9420","RelatedDescription":"Closed issue \"Iterative rendering of data elements in computed property \" (#9420)"},{"Id":"405997418","IsPullRequest":false,"CreatedAt":"2019-02-04T21:34:59","Actor":"elevatebart","Number":"9407","RawContent":null,"Title":"vue-template-compiler fails when parsing a template with a comment as a root node.","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/52k2p9po54](https://codesandbox.io/s/52k2p9po54)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGo to the codesandbox.\r\nTry to parse the given template with comments on.\r\n\r\n```vue\r\n<template>\r\n <!-- here is a nice component template -->\r\n <button class=\"buttonComponent\">click</button>\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nThe comment AST node should be attached to the root object.\r\n\r\n### What is actually happening?\r\n```path\r\nnode_modules/vue-template-compiler/build.js:2469:21)\r\nTypeError: Cannot read property 'children' of undefined\r\n\r\n(currentParent is undefined)\r\n```\r\n\r\n---\r\nI am going to try my hand at a PR. Wish me luck ;)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9407","RelatedDescription":"Closed issue \"vue-template-compiler fails when parsing a template with a comment as a root node.\" (#9407)"},{"Id":"406003019","IsPullRequest":true,"CreatedAt":"2019-02-04T21:34:32","Actor":"elevatebart","Number":"9408","RawContent":null,"Title":"fix(vue-template-compiler): allow comments on the root node in templates (fix #9407)","State":"closed","Body":"in SFC templates, we are alloed to have comments on the root node. We are not alloed to do so if we\r\ntry to extract these comments. This commits ignores the root components instead of breaking.\r\n\r\n#9407\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9408","RelatedDescription":"Closed or merged PR \"fix(vue-template-compiler): allow comments on the root node in templates (fix #9407)\" (#9408)"},{"Id":"406475982","IsPullRequest":false,"CreatedAt":"2019-02-04T20:33:07","Actor":"AlansCodeLog","Number":"9417","RawContent":null,"Title":"v-on dynamic argument doesn't work with .native modifier","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r749jp21o4](https://codesandbox.io/s/r749jp21o4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI made a simple button component which does not emit any events. In the app there are three instances of it with the `@click.native` event bound in different way.\r\n\r\nYou can see the first button component which was bound with `@click.native` works and increases the counter, but the rest which use v-on and the new conditional binding syntax do not.\r\n\r\nI thought it might have been some limitation of native events but this also happens with other modifiers, like `keydown.somekey`.\r\n\r\n### What is expected?\r\nThe events should be bound and all the buttons should work.\r\n\r\n### What is actually happening?\r\nThe buttons do not work. The events are not bound. Only the first button actually gets a listener attached when I inspect them with chrome's devtools.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9417","RelatedDescription":"Closed issue \"v-on dynamic argument doesn't work with .native modifier\" (#9417)"},{"Id":"406489733","IsPullRequest":false,"CreatedAt":"2019-02-04T20:14:55","Actor":"henriqemalheiros","Number":"9418","RawContent":null,"Title":"Warning when emitting custom event on template","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://github.com/henriqemalheiros/vue-bug-report-event-emit-template](https://github.com/henriqemalheiros/vue-bug-report-event-emit-template)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Clone the repo;\r\n- Run `yarn install`;\r\n- Run `yarn run serve`;\r\n- Open `http://localhost:8080/`;\r\n- Open browser console;\r\n- Click on \"Click me ($emit on method)\";\r\n- \"custom click triggered\" is printed on the console;\r\n- Click on \"Click me ($emit on template)\";\r\n- \"custom click triggered\" is printed on the console;\r\n- \"[Vue warn]: Property or method \"then\" is not defined on the instance but referenced during render.\" is also printed on the console.\r\n\r\n### What is expected?\r\nNo warning should be thrown.\r\n\r\n### What is actually happening?\r\nA warning is thrown.\r\n\r\n---\r\nMaybe related to https://github.com/vuejs/vue/pull/8297.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9418","RelatedDescription":"Closed issue \"Warning when emitting custom event on template\" (#9418)"},{"Id":"406494796","IsPullRequest":false,"CreatedAt":"2019-02-04T20:07:19","Actor":"AlexandreBonaventure","Number":"9419","RawContent":null,"Title":"Unproper warning thrown with event handler invoke with async error handling","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jk8as0bz/](https://jsfiddle.net/jk8as0bz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNB: use a component with a transpiled render function (render._withStripped should be true). For the purpose of the minimal repro, we are setting the flag manually.\r\n\r\non the minimal repro open the console, click on the button and see the warning message showing up\r\n\r\n\r\n### What is expected?\r\nno warning\r\n\r\n### What is actually happening?\r\nit throws an improper warning\r\n\r\n---\r\nWhat is happening \r\n1. create a component that $emit directly in an event handler like `<button @click=\"$emit('click')\">click me!\r\n</button> `\r\n2. The handler will be compiled as such in the createElement function \r\n```\r\non: {\r\n                click: function($event) {\r\n                  return _vm.$emit(\"closeModal\")\r\n                }\r\n}\r\n``` \r\nreturning the vm instance\r\n3.  In the isPromise call it will check for property like `.then` or `.catch`\r\n4. the withStriped flag set to true the vm instance is proxied to throw non present properties but referenced during render on development \r\n5. It will throw the following warning: `[Vue warn]: Property or method \"then\" is not defined on the instance but referenced during render`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9419","RelatedDescription":"Closed issue \"Unproper warning thrown with event handler invoke with async error handling\" (#9419)"},{"Id":"406191491","IsPullRequest":false,"CreatedAt":"2019-02-04T17:51:40","Actor":"RDMStreet","Number":"9410","RawContent":null,"Title":"Add the ability to launch components in advance, as when using keep-alive, but immediately when you start the application.","State":"closed","Body":"### What problem does this feature solve?\r\nI have a SPA consisting of several heavy main sections. And between them there is a transition animation. At the first transition to any section, a hang occurs due to which the animation is twitching. I would like to be able to run these sections at the very beginning in advance and keep them alive.\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<keep-alive :always-on=\"true\">\r\n    <router-view/>\r\n</keep-alive>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9410","RelatedDescription":"Closed issue \"Add the ability to launch components in advance, as when using keep-alive, but immediately when you start the application.\" (#9410)"},{"Id":"406415832","IsPullRequest":false,"CreatedAt":"2019-02-04T17:49:51","Actor":"plehnen","Number":"9414","RawContent":null,"Title":"v-for class with Symbol.iterator not working properly when return value is modified","State":"closed","Body":"### Version\r\n2.6.0-beta.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/vx1ygurm/](https://jsfiddle.net/vx1ygurm/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIterate with v-for on a class with Symbol.iterator (which does something with the returning value). See jsfiddle!\r\n\r\n### What is expected?\r\nsince 2.6-beta1 it should support iterables in v-for (#8179) d40eb9c, (#8179)\r\n\r\nI thought, great, let's try this with my footnote class and get rid of that verbose \"getItems()\" accessor and directly pass the class with a Symbol.iterator.\r\n\r\n### What is actually happening?\r\nBut as soon as the values which should be iterated are mutated before they are returned (e.g. sort), it shows the Vue warn:\r\n\"You may have an infinite update loop in a component render function.\"\r\n\r\nAnd the iterator gets called over 100  times.\r\n\r\n---\r\nEven worse, if you put this class in a vuex state. Then it complains that it cannot be mutated (even though I don't actually mutate it)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9414","RelatedDescription":"Closed issue \"v-for class with Symbol.iterator not working properly when return value is modified\" (#9414)"},{"Id":"406393575","IsPullRequest":false,"CreatedAt":"2019-02-04T17:47:36","Actor":"dordana","Number":"9412","RawContent":null,"Title":"$watch multiple objects with single callback until all of them watched","State":"closed","Body":"### What problem does this feature solve?\r\n$watch multiple objects with single callback until all of them watched\r\n\r\n### What does the proposed API look like?\r\n```\r\nVue.prototype.$watchAll = function(props, callback) {\r\n  let booleanArray = []\r\n  props.forEach(p => {\r\n    booleanArray.push({\r\n      prop: p,\r\n      changed: false\r\n    })\r\n  })\r\n  props.forEach(prop => {\r\n    this.$watch(prop, (newVal, oldVal) => {\r\n      if (Object.keys(newVal).length > 0) {\r\n        if (newVal !== oldVal) booleanArray.find(p => p.prop === prop).changed = true\r\n        if (booleanArray.filter(p => p.changed).length === booleanArray.length) {\r\n          booleanArray = []\r\n          props.forEach(p => {\r\n            booleanArray.push({\r\n              prop: p,\r\n              changed: false\r\n            })\r\n          })\r\n          callback()\r\n        }\r\n      }\r\n    }, { immediate: true })\r\n  })\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9412","RelatedDescription":"Closed issue \"$watch multiple objects with single callback until all of them watched\" (#9412)"},{"Id":"406408900","IsPullRequest":false,"CreatedAt":"2019-02-04T17:45:18","Actor":"mattsteve","Number":"9413","RawContent":null,"Title":"Write a Vue plugin that installs components written in Typescript using vue-class-component","State":"closed","Body":"### What problem does this feature solve?\r\nThere doesn't seem to be a way for UI component library authors to write their Vue components in Typescript with the @Component decorator when their compile target is a Vue plugin that's consumed by a 3rd party. It is possible for webpack to transpile these classes into ES5, but in the process of doing so you end up including the Vue source code into the plugin build file itself, which results in 2 instances of Vue running when the component library consumer imports Vue from a CDN on to the page in order to use the plugin (and a bunch of warnings in the console as a result).\r\n\r\n### What does the proposed API look like?\r\nDefine the component decorator in a way in which the resulting class does not have to extend Vue. Possibly extend a support class such as VueComponent instead. Or make it so that Vue doesn't care that there's 2 instances on the page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9413","RelatedDescription":"Closed issue \"Write a Vue plugin that installs components written in Typescript using vue-class-component\" (#9413)"},{"Id":"406438339","IsPullRequest":false,"CreatedAt":"2019-02-04T17:43:35","Actor":"joaoeudes7","Number":"9416","RawContent":null,"Title":"Action event on loaded component Async","State":"closed","Body":"### What problem does this feature solve?\r\n**Reference:** https://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\n**Current Issue:** We do not know when the async component was loaded, with this, the 'Ref' is also not recognized in the 'mounted()' father\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n**Feature Request:** Prop from 'created' in asynchronous component to go event\r\n\r\n```js\r\nconst AsyncComponent = () => ({\r\n  // The component to load (should be a Promise)\r\n  component: import('./MyComponent.vue'),\r\n  // A component to use while the async component is loading\r\n  loading: LoadingComponent,\r\n  // A component to use if the load fails\r\n  error: ErrorComponent,\r\n  // Delay before showing the loading component. Default: 200ms.\r\n  delay: 200,\r\n  // The error component will be displayed if a timeout is\r\n  // provided and exceeded. Default: Infinity.\r\n  timeout: 3000,\r\n  created: () => something()\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9416","RelatedDescription":"Closed issue \"Action event on loaded component Async\" (#9416)"},{"Id":"406436880","IsPullRequest":false,"CreatedAt":"2019-02-04T17:28:02","Actor":"joaoeudes7","Number":"9415","RawContent":null,"Title":"Action event on loaded component Async","State":"closed","Body":"**Reference:** https://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\n**Current Issue:** We do not know when the async component was loaded, with this, the 'Ref' is also not recognized in the 'mounted()' father\r\n\r\n**Feature Request:** Prop from 'created' in asynchronous component to go event\r\n\r\n```js\r\nconst AsyncComponent = () => ({\r\n  // The component to load (should be a Promise)\r\n  component: import('./MyComponent.vue'),\r\n  // A component to use while the async component is loading\r\n  loading: LoadingComponent,\r\n  // A component to use if the load fails\r\n  error: ErrorComponent,\r\n  // Delay before showing the loading component. Default: 200ms.\r\n  delay: 200,\r\n  // The error component will be displayed if a timeout is\r\n  // provided and exceeded. Default: Infinity.\r\n  timeout: 3000,\r\n  created: () => something()\r\n})\r\n```","Url":"https://github.com/vuejs/vue/issues/9415","RelatedDescription":"Closed issue \"Action event on loaded component Async\" (#9415)"},{"Id":"406392945","IsPullRequest":false,"CreatedAt":"2019-02-04T15:51:09","Actor":"dordana","Number":"9411","RawContent":null,"Title":"$watch multiple objects for single callback until all of them watched.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n$watch multiple objects for single callback until all of them watched\r\n\r\n```\r\nVue.prototype.$watchAll = function(props, callback) {\r\n  let booleanArray = []\r\n  props.forEach(p => {\r\n    booleanArray.push({\r\n      prop: p,\r\n      changed: false\r\n    })\r\n  })\r\n  props.forEach(prop => {\r\n    this.$watch(prop, (newVal, oldVal) => {\r\n      if (Object.keys(newVal).length > 0) {\r\n        if (newVal !== oldVal) booleanArray.find(p => p.prop === prop).changed = true\r\n        if (booleanArray.filter(p => p.changed).length === booleanArray.length) {\r\n          booleanArray = []\r\n          props.forEach(p => {\r\n            booleanArray.push({\r\n              prop: p,\r\n              changed: false\r\n            })\r\n          })\r\n          callback()\r\n        }\r\n      }\r\n    }, { immediate: true })\r\n  })\r\n}\r\n```","Url":"https://github.com/vuejs/vue/issues/9411","RelatedDescription":"Closed issue \"$watch multiple objects for single callback until all of them watched.\" (#9411)"},{"Id":"406114497","IsPullRequest":false,"CreatedAt":"2019-02-03T18:24:42","Actor":"riiccardo","Number":"9409","RawContent":null,"Title":"Could't analyze webpack bundle, Could't analyze webpack bundle ","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://github.com/riiccardo/vue-simple-todo-error](https://github.com/riiccardo/vue-simple-todo-error)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. open vue-ui\r\n2. run serve task got error\r\n3. build task got error too\r\n\r\n### What is expected?\r\nCompile Code But...\r\n\r\n### What is actually happening?\r\nCould't analyze webpack bundle, Could't analyze webpack bundle \r\n\r\n---\r\nidk what is this error every thing is up to date\r\n\r\nvue v2.5.22\r\nvue-cli-service v3.4.0\r\nvue-template-compiler v2.5.21\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9409","RelatedDescription":"Closed issue \"Could't analyze webpack bundle, Could't analyze webpack bundle \" (#9409)"},{"Id":"405688651","IsPullRequest":true,"CreatedAt":"2019-02-02T15:53:47","Actor":"vue-bot","Number":"9405","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9405","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9405)"},{"Id":"405815703","IsPullRequest":false,"CreatedAt":"2019-02-01T18:14:08","Actor":"sleewoo","Number":"9406","RawContent":null,"Title":"On SSR, script tag escaped","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kx35l39lkv](https://codesandbox.io/s/kx35l39lkv)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen tab Console\r\n\r\n### What is expected?\r\n```html\r\n<script data-server-rendered=\"true\">\r\n            var a = 'a';\r\n            var x = \"x\";\r\n            if (a && x) {}\r\n            if (a > x) {}\r\n            if (a < x) {}\r\n          </script> \r\n```\r\n\r\n### What is actually happening?\r\n```html\r\n<script data-server-rendered=\"true\">\r\n            var a = 'a';\r\n            var x = &quot;x&quot;;\r\n            if (a &amp;&amp; x) {}\r\n            if (a &gt; x) {}\r\n            if (a &lt; x) {}\r\n          </script> \r\n```\r\n\r\n---\r\nThere are no restrictions on rendering `script` tags on the server\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9406","RelatedDescription":"Open issue \"On SSR, script tag escaped\" (#9406)"},{"Id":"405608980","IsPullRequest":false,"CreatedAt":"2019-02-01T09:00:38","Actor":"robot1d59cc305","Number":"9404","RawContent":null,"Title":"The issue has been closed.","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/9404","RelatedDescription":"Closed issue \"The issue has been closed.\" (#9404)"},{"Id":"405460987","IsPullRequest":true,"CreatedAt":"2019-01-31T22:04:11","Actor":"visualfanatic","Number":"9403","RawContent":null,"Title":"chore: add `repository.directory` field to each `package.json`","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\nI created a similar PR in `vue-cli` repo, so I will just copy&paste my comment here:\r\n> This field allows you specify path of each package in a monorepo thanks to [this npm RFC](https://github.com/npm/rfcs/blob/latest/accepted/0010-monorepo-subdirectory-declaration.md). Main benefit of providing this field is a more accurate link to the package's source code from its npmjs.com page.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9403","RelatedDescription":"Open PR \"chore: add `repository.directory` field to each `package.json`\" (#9403)"},{"Id":"405353553","IsPullRequest":false,"CreatedAt":"2019-01-31T17:29:46","Actor":"devedse","Number":"9402","RawContent":null,"Title":"How do you import a JSON file with VueJS / Typescript?","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/devedse/VueJSImportJsonFile](https://github.com/devedse/VueJSImportJsonFile)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the folder with VSCode and see the Home.vue page.\r\n\r\n### What is expected?\r\nThe JSON file should import without errors.\r\n\r\n### What is actually happening?\r\nAn error is shown: \"Cannot find module '@/assets/hi.json'\r\n\r\n---\r\nIt's probably something I'm doing wrong but I've been spending the last 4 hours on this.\r\nI've already done everything said and told in the following posts but I can't get it to work:\r\nhttps://stackoverflow.com/questions/49996456/importing-json-file-in-typescript/50674344#50674344\r\nhttps://stackoverflow.com/questions/32950966/typescript-compiler-error-when-importing-json-file\r\nhttps://github.com/chybie/ts-json\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9402","RelatedDescription":"Closed issue \"How do you import a JSON file with VueJS / Typescript?\" (#9402)"},{"Id":"405335651","IsPullRequest":false,"CreatedAt":"2019-01-31T16:49:18","Actor":"Giwayume","Number":"9401","RawContent":null,"Title":"Vue version 2.5.22 is missing vue.esm.browser.js in the dist folder.","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://repl.it/repls/CreepyStaticInstitute](https://repl.it/repls/CreepyStaticInstitute)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nnpm init\r\nnpm install vue@2.5.22\r\n```\r\n\r\nView the contents of node_modules/vue/dist. The file 'vue.esm.browser.js` is missing.\r\n\r\n### What is expected?\r\n'vue.esm.browser.js` should exist, like in version 2.5.21\r\n\r\n### What is actually happening?\r\n'vue.esm.browser.js` is missing.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9401","RelatedDescription":"Closed issue \"Vue version 2.5.22 is missing vue.esm.browser.js in the dist folder.\" (#9401)"},{"Id":"405192236","IsPullRequest":false,"CreatedAt":"2019-01-31T15:24:59","Actor":"KaelWD","Number":"9396","RawContent":null,"Title":"[2.6-beta] regression: component without slots re-renders when parent updates","State":"closed","Body":"### Version\r\n2.6.0-beta.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/JxEpJK?editors=1011](https://codepen.io/anon/pen/JxEpJK?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- click the \"root\" button\r\n\r\n### What is expected?\r\n`\"update root\"` should be logged\r\n\r\n### What is actually happening?\r\n`\"update ChildComponent\"` is also logged\r\n\r\n---\r\nIf you add `v-slot:default` it works as expected: https://codepen.io/anon/pen/exgVVm?editors=1011\r\nVue 2.5.22 also works correctly: https://codepen.io/anon/pen/KJaQQL?editors=1011\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9396","RelatedDescription":"Closed issue \"[2.6-beta] regression: component without slots re-renders when parent updates\" (#9396)"},{"Id":"405287634","IsPullRequest":true,"CreatedAt":"2019-01-31T15:04:44","Actor":"vue-bot","Number":"9400","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9400","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9400)"},{"Id":"405267420","IsPullRequest":false,"CreatedAt":"2019-01-31T14:20:30","Actor":"bewhite","Number":"9399","RawContent":null,"Title":"Is VNode.componentInstance intended to a stable interface?","State":"closed","Body":"I am creating a component of type A containing as children: (1) a list of components of type B and (2) one component of type C. I want component C to have access to computed properties of the components B so I pass the list of VNodes into C as a prop. I can then access the computed properties via VNode.componentInstance. My question is: is VNode.componentInstance a stable interface, i.e. is it going to be future-proof?","Url":"https://github.com/vuejs/vue/issues/9399","RelatedDescription":"Closed issue \"Is VNode.componentInstance intended to a stable interface?\" (#9399)"},{"Id":"405207514","IsPullRequest":false,"CreatedAt":"2019-01-31T13:37:30","Actor":"cyboning","Number":"9397","RawContent":null,"Title":"contenteditable=\"plaintext-only\"  always rendered into contenteditable=\"true\"","State":"closed","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/pupilGradeSix/busmq2zp/2/](https://jsfiddle.net/pupilGradeSix/busmq2zp/2/)\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen the link\r\n\r\n### What is expected?\r\ncontenteditable=\"plaintext-only\"   能正常渲染成  plaintext-only 而不会变成 true\r\n\r\n### What is actually happening?\r\ncontenteditable=\"plaintext-only\"  总是会被渲染成 contenteditable=\"true\" 。最终我只能通过给 contenteditable 动态添加属性 plaintext-only 才能成功。试了几个 vue 的版本发现都存在这个问题。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9397","RelatedDescription":"Closed issue \"contenteditable=\"plaintext-only\"  always rendered into contenteditable=\"true\"\" (#9397)"},{"Id":"405234151","IsPullRequest":false,"CreatedAt":"2019-01-31T13:34:14","Actor":"szmarczak","Number":"9398","RawContent":null,"Title":"A better way to listen to events programatically","State":"closed","Body":"### What problem does this feature solve?\r\n```ts\r\nimport WrappedInput from './WrappedInput.vue'; // Assume `WrappedInput` is the example metioned below.\r\n\r\nexport default WrappedInput.extend({\r\n\tcreated() {\r\n\t\tthis.$on('focus', function () {\r\n\t\t\tconsole.log('focus'); // Won't show up.\r\n\t\t});\r\n\t}\r\n});\r\n```\r\n\r\nThe way to fix this would be to use a custom `focus` handler like it's done here: https://vuejs.org/v2/guide/components-custom-events.html#Binding-Native-Events-to-Components\r\n\r\nIt gets quite annoying while other events come to play, like `blur`, `click` etc.\r\n\r\n### What does the proposed API look like?\r\nJust `this.$on('focus', fn)` without the additional wrappers.\r\n\r\nAnyway, there's a workaround here:\r\n```js\r\nthis.$el.addEventListener('focus', function () {\r\n\tconsole.log('focus'); // Shows up.\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9398","RelatedDescription":"Closed issue \"A better way to listen to events programatically\" (#9398)"},{"Id":"405151798","IsPullRequest":false,"CreatedAt":"2019-01-31T09:25:45","Actor":"tower000","Number":"9395","RawContent":null,"Title":"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned ","State":"closed","Body":"### What problem does this feature solve?\r\nrefresh token and retry the last request\r\n\r\nwhat happened in my case is:\r\n1. Attempt to pull a list data from server\r\n2. returned 401\r\n3. then hited the axios interceptor\r\n4. request refresh the token and retry the \"pull\" call. its successful, and there is the response data in the interceptor.\r\n5. here is my problem: vue page has no return\r\n\r\n\r\n### What does the proposed API look like?\r\nhere is the vue page code: the request code\r\n\r\ncreated () {\r\n    this.$http.apps().then(result => {\r\n        console.log(result)\r\n        this.data = result.data\r\n        this.$Loading.finish()\r\n    }).catch(error => {\r\n        this.$Message.error(error.msg   '#'   error.error_code)\r\n    })\r\n}\r\n\r\nand this is my axios code:\r\n\r\nwindow.regranting = false\r\n\r\nexport default (options) => {\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        const ajax = axios.create({\r\n            baseURL:  'http://api.aaa.com',\r\n            timeout: 1000,\r\n            withCredentials: true,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n            },\r\n        })\r\n\r\n        ajax.interceptors.request.use((config) => {\r\n            config.data = help.serialize(config.data)\r\n            if (help.getAuth()) {\r\n                config.headers.common['Authorization'] = help.getAuth()\r\n            }\r\n            return config\r\n        },error => {\r\n            return reject(error.response)\r\n        })\r\n\r\n        ajax.interceptors.response.use(undefined, error => {\r\n            switch(error.response.status){\r\n                case 401:\r\n                    let $refresh = cookie.get('refresh');\r\n                    let lastRuest = error.config   // the last quest config\r\n\r\n                    // 防止重复刷新请求\r\n                    if (!window.regranting) {\r\n                        if ($refresh) {\r\n                            // is regranting now\r\n                            window.regranting = true\r\n                            http.regrant($refresh).then((res) => {\r\n                                // update cookie\r\n                                cookie.set('access', res.headers.authorization)\r\n                                cookie.set('refresh', res.headers.refresh)\r\n                                // regranted successfully\r\n                                window.regranting = false\r\n                                // update config.header.Authorization\r\n                                lastRuest.headers.Authorization = res.headers.authorization\r\n                                // retry the last request\r\n                                return resolve(ajax(lastRuest))\r\n                            }).catch((error) => {\r\n                                router.push({name: 'login'})\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return reject(error.response.data)\r\n                    }\r\n\r\n                    break\r\n                default:\r\n                    return reject(error.response.data)\r\n            }\r\n        })\r\n\r\n        if (options.length && options.length>1) {\r\n            let p = []\r\n            for (let item of options) {\r\n                p.push(await ajax(item))\r\n            }\r\n            return resolve(Promise.all(p))\r\n        } else {\r\n            return resolve(await ajax(options))\r\n        }\r\n    })\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9395","RelatedDescription":"Closed issue \"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned \" (#9395)"},{"Id":"405146499","IsPullRequest":false,"CreatedAt":"2019-01-31T09:20:17","Actor":"tower000","Number":"9394","RawContent":null,"Title":"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned ","State":"closed","Body":"### What problem does this feature solve?\r\nrefresh token and retry the last request\r\n\r\nwhat happened in my case is:\r\n1. Attempt to pull a list data from server\r\n2. returned 401\r\n3. then hited the axios interceptor\r\n4. request refresh the token and retry the \"pull\" call. its successful, and there is the response data in the interceptor.\r\n5. here is my problem: vue page has no return\r\n\r\n\r\n### What does the proposed API look like?\r\nhere is the vue page code: the request code\r\n\r\n```\r\ncreated () {\r\n    this.$http.apps().then(result => {\r\n        // console.log(result)         there are no result after retry the lastrequest\r\n        this.data = result.data\r\n        this.$Loading.finish()\r\n    }).catch(error => {\r\n        this.$Message.error(error.msg   '#'   error.error_code)\r\n    })\r\n}\r\n```\r\n\r\nand this is my axios code:\r\n```\r\nwindow.regranting = false\r\n\r\nexport default (options) => {\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        const ajax = axios.create({\r\n            baseURL:  'http://api.aaa.com',\r\n            timeout: 1000,\r\n            withCredentials: true,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n            },\r\n        })\r\n\r\n        ajax.interceptors.request.use((config) => {\r\n            config.data = help.serialize(config.data)\r\n            if (help.getAuth()) {\r\n                config.headers.common['Authorization'] = help.getAuth()\r\n            }\r\n            return config\r\n        },error => {\r\n            return reject(error.response)\r\n        })\r\n\r\n        ajax.interceptors.response.use(response => {\r\n            // console.log(response)      it's works after retry the lastrequest\r\n            return response\r\n        },  error => {\r\n            switch(error.response.status){\r\n                case 401:\r\n                    let $refresh = cookie.get('refresh');\r\n                    let lastRuest = error.config   // the last quest config\r\n\r\n                    if (!window.regranting) {\r\n                        if ($refresh) {\r\n                            // is regranting now\r\n                            window.regranting = true\r\n                            http.regrant($refresh).then((res) => {\r\n                                // update cookie\r\n                                cookie.set('access', res.headers.authorization)\r\n                                cookie.set('refresh', res.headers.refresh)\r\n                                // regranted successfully\r\n                                window.regranting = false\r\n                                // update config.header.Authorization\r\n                                lastRuest.headers.Authorization = res.headers.authorization\r\n                                // retry the last request\r\n                                return resolve(ajax(lastRuest))\r\n                            }).catch((error) => {\r\n                                router.push({name: 'login'})\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return reject(error.response.data)\r\n                    }\r\n\r\n                    break\r\n                default:\r\n                    return reject(error.response.data)\r\n            }\r\n        })\r\n\r\n        if (options.length && options.length>1) {\r\n            let p = []\r\n            for (let item of options) {\r\n                p.push(await ajax(item))\r\n            }\r\n            return resolve(Promise.all(p))\r\n        } else {\r\n            return resolve(await ajax(options))\r\n        }\r\n    })\r\n}\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9394","RelatedDescription":"Closed issue \"axios refresh token and retry the last request successfully but vue cant get the response data and actually api has returned \" (#9394)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"405301212","IsPullRequest":false,"CreatedAt":"2019-01-31T15:34:59","Actor":"WisdomEye","Number":"2603","RawContent":null,"Title":"v-if mutating router-link to","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8](https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add an li using v-if, and then try change the value of variable, in the example bellow update start with value 0, I can add a button to increment or decrement it, and get error about mutating :for from router-link.\r\n\r\n\t<li v-if=\"update\" id=\"dashboard-menu-top-updates\">\r\n\t\t<router-link :to=\"{ name: 'Update' }\" :exact=\"$route.name === 'Update'\">Atualizações</router-link>\r\n\t</li>\r\n\r\n### What is expected?\r\nThe expected is render or remove the element without errors about mutating \":to\" from router-link\r\n\r\n### What is actually happening?\r\nThe li is correctly rendered as wished, but make a lot of erros on console about mutating \":to\" from router-link.\r\n\r\nError:\r\n\r\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"to\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2603","RelatedDescription":"Closed issue \"v-if mutating router-link to\" (#2603)"},{"Id":"404807174","IsPullRequest":true,"CreatedAt":"2019-01-30T14:52:24","Actor":"kazupon","Number":"2602","RawContent":null,"Title":"update ja docs","State":"open","Body":"ping @ktsn \r\nCould you review it please? 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2602","RelatedDescription":"Open PR \"update ja docs\" (#2602)"},{"Id":"404175057","IsPullRequest":false,"CreatedAt":"2019-01-29T09:25:39","Actor":"avele","Number":"2601","RawContent":null,"Title":"Keep previous component until next mounted","State":"closed","Body":"### What problem does this feature solve?\r\nI want the ability to change the router-view component only when the next one is mounted. For instance, the next router-view component could be mounted separately with ```display: none```, and after the \"mounted\" event I would make the new component visible and destroy the previous component.\r\n\r\nCurrently I can only show a spinner or an overlay while the new component is loading, but I can't keep the previous component on the screen.\r\n\r\nMy usecase is similar to github repository tabs\r\n![github tabs](https://user-images.githubusercontent.com/34437766/51894559-8f384280-23c1-11e9-9637-3fc10ae17fa4.gif)\r\nI want to mimic the standard, non-SPA browser behavior.\r\n\r\n### What does the proposed API look like?\r\nA prop for ```<router-view>,``` perhaps \"preload\" or \"changeOnMounted\".\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2601","RelatedDescription":"Closed issue \"Keep previous component until next mounted\" (#2601)"},{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"},{"Id":"402529730","IsPullRequest":false,"CreatedAt":"2019-01-24T08:23:24","Actor":"mice33","Number":"2596","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mice33/router-demo](https://github.com/mice33/router-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.run dev && visit website  \r\n2.click 'go to h2' link  \r\n3.click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\n### What is expected?\r\n3.click 'go back' link, can go back\r\n\r\n### What is actually happening?\r\n3.click 'go back' link, can't go back\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nSame problem #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2596","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2596)"},{"Id":"402518493","IsPullRequest":false,"CreatedAt":"2019-01-24T07:49:51","Actor":"ovarte","Number":"2594","RawContent":null,"Title":"vue-router and axios 拦截器一起使用 出现的异步问题","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwdtae9u/3/](https://jsfiddle.net/jwdtae9u/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n详见JSFiddle。通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，请问怎么解决呢\r\n\r\n### What is expected?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。请问怎么解决呢\r\n\r\n### What is actually happening?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。\r\n\r\n---\r\n怎么解决 vue-router和 axios 拦截器 一起使用的问题呢 非常感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2594","RelatedDescription":"Closed issue \"vue-router and axios 拦截器一起使用 出现的异步问题\" (#2594)"},{"Id":"402529161","IsPullRequest":false,"CreatedAt":"2019-01-24T03:41:50","Actor":"mice33","Number":"2595","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"Demo: https://github.com/mice33/router-demo\r\n\r\nChrome 70\r\n\r\ncan't from 'h2' page go back 'Hello World' page when the onload event of window not triggered\r\n\r\nsteps:\r\n1. run dev && visit website\r\n2. click 'go to h2' link\r\n3. click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\nlink #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2595","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2595)"},{"Id":"401790731","IsPullRequest":false,"CreatedAt":"2019-01-22T14:29:48","Actor":"yegorLitvinov","Number":"2593","RawContent":null,"Title":"replaceState Error when path starts with // and scrollBehavior is set","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/yegorLitvinov/vue-router-bug](https://github.com/yegorLitvinov/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSet scrollBehavior property in router config. Put two forward slashes into beginning of the url (e.g. http://localhost:8081//about)\r\n\r\n### What is expected?\r\nNo errors in console\r\n\r\n### What is actually happening?\r\nIn firefox: SecurityError: The operation is insecure.\r\nIn Chrome: Uncaught DOMException: Failed to execute 'replaceState' on 'History': A history state object with URL 'http://about/' cannot be created in a document with origin 'http://localhost:8081' and URL 'http://localhost:8081//about'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2593","RelatedDescription":"Open issue \"replaceState Error when path starts with // and scrollBehavior is set\" (#2593)"},{"Id":"401651538","IsPullRequest":true,"CreatedAt":"2019-01-22T08:34:55","Actor":"zrh122","Number":"2592","RawContent":null,"Title":"fix(router-view): add condition to see whether the tree is inactive (fix #2552)","State":"open","Body":"close #2552\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2592","RelatedDescription":"Open PR \"fix(router-view): add condition to see whether the tree is inactive (fix #2552)\" (#2592)"},{"Id":"401560199","IsPullRequest":true,"CreatedAt":"2019-01-22T01:15:28","Actor":"Sayegh7","Number":"2591","RawContent":null,"Title":"Warn about root paths without a leading slash (fix #2550)","State":"open","Body":"close #2550\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR creates the following warning message when a root route exists without a leading slash:\r\n<img width=\"583\" alt=\"screen shot 2019-01-22 at 3 12 15 am\" src=\"https://user-images.githubusercontent.com/13800170/51506192-b2785600-1df3-11e9-8ef0-7607ac68aa2b.png\">\r\n\r\nThis facilitates the debugging process as the current behavior does not generate any warnings or errors.","Url":"https://github.com/vuejs/vue-router/pull/2591","RelatedDescription":"Open PR \"Warn about root paths without a leading slash (fix #2550)\" (#2591)"},{"Id":"401548570","IsPullRequest":true,"CreatedAt":"2019-01-22T00:02:47","Actor":"zigomir","Number":"2590","RawContent":null,"Title":"feat: add browser ESM build","State":"open","Body":"POC\r\n\r\nfixes https://github.com/vuejs/vue-router/issues/2589\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2590","RelatedDescription":"Open PR \"feat: add browser ESM build\" (#2590)"},{"Id":"401532763","IsPullRequest":false,"CreatedAt":"2019-01-21T22:37:34","Actor":"zigomir","Number":"2589","RawContent":null,"Title":"Browser ES module build","State":"open","Body":"### What problem does this feature solve?\r\nNow with https://github.com/vuejs/vue/pull/7110 in place and https://github.com/vuejs/vuex/pull/1401 we should probably expose `vue-router` ES module build (minified and non–minifed) so that develpers can use main three vue libraries with `<script type=\"module>` and without any build step.\r\n\r\nWould you merge a PR that solves that?\r\n\r\n\r\n### What does the proposed API look like?\r\nNo changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2589","RelatedDescription":"Open issue \"Browser ES module build\" (#2589)"},{"Id":"401382250","IsPullRequest":true,"CreatedAt":"2019-01-21T14:39:41","Actor":"pfeiferbit","Number":"2588","RawContent":null,"Title":"docs: add descriptions for parseQuery / stringifyQuery","State":"open","Body":"This clears up what the implementor of these functions has to expect.\r\n\r\n---\r\n\r\nStumbled across this while trying to use the [qs](https://www.npmjs.com/package/qs) package for `parseQuery` and `stringifyQuery` since I work with a PHP backend that relies on `foo[bar][baz]=qux` syntax with a strict RFC-3986 encoding.\r\n\r\nWording could probably be better since English ain't my primary language.\r\n\r\nGreetings","Url":"https://github.com/vuejs/vue-router/pull/2588","RelatedDescription":"Open PR \"docs: add descriptions for parseQuery / stringifyQuery\" (#2588)"},{"Id":"401250071","IsPullRequest":true,"CreatedAt":"2019-01-21T09:53:43","Actor":"bbbbx","Number":"2587","RawContent":null,"Title":"docs: make title more understandable","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nThe title does not match the body description.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2587","RelatedDescription":"Closed or merged PR \"docs: make title more understandable\" (#2587)"},{"Id":"401127483","IsPullRequest":true,"CreatedAt":"2019-01-20T18:53:21","Actor":"Aferz","Number":"2586","RawContent":null,"Title":"feat(transition): Using router push/replace instead of private history functions","State":"open","Body":"I've found myself overriding the main Router to be able to control the `.back` method to prevent the user clicks on my app button a leaves the application. Check this example:\r\n\r\n```javascript\r\nclass Router extends VueRouter {\r\n  constructor (...args) {\r\n    super(...args)\r\n\r\n    this.counter = 0\r\n  }\r\n\r\n  push (location, ...args) {\r\n    super.push(location, ...args)\r\n\r\n    this.counter++\r\n  }\r\n\r\n  go (n) {\r\n    if (this.counter + n < 0) {\r\n      super.replace({ name: 'home.feed' })\r\n    } else {\r\n      super.go(n)\r\n    }\r\n\r\n    this.counter += n\r\n  }\r\n}\r\n```\r\n\r\nThanks to this approach, product links can be shared without worring the back button that linked pages contain will destroy the application once pressed. (The same behaviour as Twitter PWA)\r\n\r\n---\r\n\r\nWhat I mean is the `beforeEach` guard is not respecting the overriden methods (push, replace, etc...), because it uses the `history` driver directly when it has to redirect to a route, instead of using the router instance.\r\n\r\nThis could be taken as a _Breaking Change_ for users like me that decided to wrap the router in their own classes, but I honestly think that this usage of the router is outside of the scope of the vue-router maintainers.\r\n\r\nWhat do you all think?","Url":"https://github.com/vuejs/vue-router/pull/2586","RelatedDescription":"Open PR \"feat(transition): Using router push/replace instead of private history functions\" (#2586)"},{"Id":"400645992","IsPullRequest":false,"CreatedAt":"2019-01-18T09:43:00","Actor":"zpcalan","Number":"2585","RawContent":null,"Title":"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2585","RelatedDescription":"Closed issue \"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效\" (#2585)"},{"Id":"400532266","IsPullRequest":false,"CreatedAt":"2019-01-18T08:36:39","Actor":"igorveremsky","Number":"2584","RawContent":null,"Title":"router-view mounted lifehook?","State":"closed","Body":"### What problem does this feature solve?\r\nI use preloader at my spa and want to hide it only if page DOM ready, for not clone code to mounted lifehook of all my routes components will be good to have general mounted lifehook for `router-view` \r\n\r\n### What does the proposed API look like?\r\n```js\r\nRouter.viewMounted(() => {\r\n\t// do some on router view mounted\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2584","RelatedDescription":"Closed issue \"router-view mounted lifehook?\" (#2584)"},{"Id":"398942715","IsPullRequest":true,"CreatedAt":"2019-01-17T19:28:16","Actor":"tuxinghuan","Number":"2578","RawContent":null,"Title":"docs(zh):fix a mistake of style","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2578","RelatedDescription":"Closed or merged PR \"docs(zh):fix a mistake of style\" (#2578)"},{"Id":"400231452","IsPullRequest":true,"CreatedAt":"2019-01-17T11:58:02","Actor":"SetSplin","Number":"2583","RawContent":null,"Title":"fix(create-matcher): \"cannot assign to read only property path\"","State":"closed","Body":"In create-matcher.js in match function location was marked as constant. That course as error described here (https://github.com/vuejs/vue-router/issues/1381)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2583","RelatedDescription":"Closed or merged PR \"fix(create-matcher): \"cannot assign to read only property path\"\" (#2583)"},{"Id":"400009896","IsPullRequest":false,"CreatedAt":"2019-01-16T21:39:40","Actor":"trainiac","Number":"2582","RawContent":null,"Title":"Ability to set and reference redirectParams","State":"open","Body":"### What problem does this feature solve?\r\nIn order to issue a 301 redirect vs a 302 redirect in vue router there is no easy way to do that in userland.  Currently you have to write a custom redirect function and throw an error with the information that you need.\r\n\r\n```\r\n{ \r\n  path: '/old-path': \r\n  redirect() => {\r\n    const error = new Error('Permanent Redirect')\r\n    error.redirect = {\r\n      code: 301,\r\n      url: '/new-path',\r\n    }\r\n    throw error\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nIn your redirects you can define\r\n```js\r\n{ \r\n  path: '/old-path': \r\n  redirect: '/new-path', \r\n  redirectParams: { \r\n    responseCode: 301 \r\n  } \r\n}\r\n```\r\n\r\nAnd in a `beforeEach` handler you could reference the meta info\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n   to.redirectedFrom === '/old-path'\r\n   to.redirectParams.responseCode === 301\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2582","RelatedDescription":"Open issue \"Ability to set and reference redirectParams\" (#2582)"},{"Id":"399751623","IsPullRequest":false,"CreatedAt":"2019-01-16T13:04:21","Actor":"JeromeDeLeon","Number":"2581","RawContent":null,"Title":"Unknown element of vue router (e.g. router-link, router-view)","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/JeromeDeLeon/vue-router-bug](https://github.com/JeromeDeLeon/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Create a project using vue-cli choosing manual preset.\r\n* Enable the following features:\r\n   -  Babel\r\n   -  Router\r\n   -  Vuex\r\n   -  Use config files\r\n* Run the application in development\r\n\r\n### What is expected?\r\nShow the template of Home.vue\r\n\r\n### What is actually happening?\r\nThe app was just showing the \"Home | About\" and nothing else. In console (dev tools), there's an error showing unknown elements for router-link and router-view.\r\n\r\n---\r\nI just did nothing but follow the documentation when creating a project but did a side note of manually selecting the features.\r\nI tried again to create another project, but same result. Again, I tried, same result but there's no error in the console (dev tools)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2581","RelatedDescription":"Closed issue \"Unknown element of vue router (e.g. router-link, router-view)\" (#2581)"},{"Id":"399397648","IsPullRequest":false,"CreatedAt":"2019-01-15T18:41:38","Actor":"salomvary","Number":"2580","RawContent":null,"Title":"beforeRouteUpdate is not called on the first navigation when routing to the same component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/salomvary/qcfg8xm7/18/](https://jsfiddle.net/salomvary/qcfg8xm7/18/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open the linked JSFiddle link\r\n- Open the developer console\r\n- Click on \"Go to /foo/one\"\r\n- Look at the console logs\r\n\r\n### What is expected?\r\n'foo:beforeRouteUpdate'  to be logged on the first navigation.\r\n\r\n### What is actually happening?\r\n'foo:beforeRouteUpdate'  is not logged on the first navigation.\r\n\r\n---\r\nWorkaround: watching `$route` seems to work as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2580","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on the first navigation when routing to the same component\" (#2580)"},{"Id":"399242944","IsPullRequest":true,"CreatedAt":"2019-01-15T08:51:35","Actor":"CharlesOkwuagwu","Number":"2579","RawContent":null,"Title":"Change `url=\"/\"` to `url=\"index.html\"`","State":"open","Body":"When `publicPath` is set, for some reason `url=\"/\"` fails in the Rewrite.\r\n\r\n`url=\"index.html\"` works regardless of `publicPath` setting\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2579","RelatedDescription":"Open PR \"Change `url=\"/\"` to `url=\"index.html\"`\" (#2579)"},{"Id":"398212810","IsPullRequest":true,"CreatedAt":"2019-01-11T09:59:34","Actor":"tuxinghuan","Number":"2577","RawContent":null,"Title":"docs(zh): link to the correct website","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2577","RelatedDescription":"Closed or merged PR \"docs(zh): link to the correct website\" (#2577)"},{"Id":"398186851","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:49","Actor":"tuxinghuan","Number":"2576","RawContent":null,"Title":"fix: fix typo in examples","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\njust fix a typo","Url":"https://github.com/vuejs/vue-router/pull/2576","RelatedDescription":"Closed or merged PR \"fix: fix typo in examples\" (#2576)"},{"Id":"398124430","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:11","Actor":"Jinjiang","Number":"2575","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vue-router/compare/d97d902...4bf3ba5\r\n/ping @Justineo","Url":"https://github.com/vuejs/vue-router/pull/2575","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#2575)"},{"Id":"397551510","IsPullRequest":true,"CreatedAt":"2019-01-10T00:17:03","Actor":"Alex-Sokolov","Number":"2574","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/5ae633e900aea1e975f1ca94284924d0ef172e26#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2574","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2574)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-03T05:46:08","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Open PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-01-31T13:55:17","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"open","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Open PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-31T13:11:02","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"closed","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Closed or merged PR \"docs: complement preserveState information\" (#1484)"},{"Id":"397545948","IsPullRequest":true,"CreatedAt":"2019-01-31T11:18:22","Actor":"periscuelo","Number":"1481","RawContent":null,"Title":"docs: Update to version 3.1.0 [pt-br]","State":"closed","Body":"I made one update to be equal to english version explanation.\r\n@ktsn Can you review / merge it?\r\n\r\nThanks","Url":"https://github.com/vuejs/vuex/pull/1481","RelatedDescription":"Closed or merged PR \"docs: Update to version 3.1.0 [pt-br]\" (#1481)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"395016740","IsPullRequest":true,"CreatedAt":"2019-01-30T09:31:05","Actor":"angeliski","Number":"1476","RawContent":null,"Title":"docs: Removed english from translated guide [pt-br]","State":"closed","Body":"Hi!\r\nI noticed a english paragraph forgotten  in the guide translated,\r\nthe pr is just to fix.","Url":"https://github.com/vuejs/vuex/pull/1476","RelatedDescription":"Closed or merged PR \"docs: Removed english from translated guide [pt-br]\" (#1476)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-01-30T03:09:09","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"open","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Open PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-01-24T09:32:52","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"open","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Open issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-01-15T11:56:19","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Open issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"397755794","IsPullRequest":true,"CreatedAt":"2019-01-10T10:14:56","Actor":"lishihong","Number":"1483","RawContent":null,"Title":"Revert 1457 patch 1","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1483","RelatedDescription":"Closed or merged PR \"Revert 1457 patch 1\" (#1483)"},{"Id":"397745237","IsPullRequest":true,"CreatedAt":"2019-01-10T09:40:39","Actor":"lishihong","Number":"1482","RawContent":null,"Title":"Update index.js","State":"closed","Body":"test","Url":"https://github.com/vuejs/vuex/pull/1482","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1482)"},{"Id":"396165778","IsPullRequest":false,"CreatedAt":"2019-01-07T10:20:13","Actor":"SebastianS90","Number":"1480","RawContent":null,"Title":"Store getters do not re-evaluate on dynamic module registration","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ll6zjklq97](https://codesandbox.io/s/ll6zjklq97)\r\n\r\n### Steps to reproduce\r\n- Open the CodeSandbox\r\n- Click \"Register Module\"\r\n\r\n### What is expected?\r\nAll four values should switch to true\r\n\r\n### What is actually happening?\r\nOnly the values based on watchers from the component switch to true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1480","RelatedDescription":"Closed issue \"Store getters do not re-evaluate on dynamic module registration\" (#1480)"},{"Id":"395304196","IsPullRequest":false,"CreatedAt":"2019-01-02T16:31:37","Actor":"brophdawg11","Number":"1479","RawContent":null,"Title":"registerModule causing unneccesary getter evaluations","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkrn0zojqr](https://codesandbox.io/s/kkrn0zojqr)\r\n\r\n### Steps to reproduce\r\n* Open the code sandbox\r\n* Open the console\r\n* Reload the sandbox and note the log of \"Running Getter\"\r\n* Click `Register Module`\r\n* Note that \"Running Getter\" is logged again, even though state.foo hasn't changed\r\n\r\n### What is expected?\r\nJust like normal reactivity, I wouldn't expect the `foo` getter to re-run unless one of it's dependencies (`state.foo`) was changed.\r\n\r\n### What is actually happening?\r\nCalling `registerModule` causes getters to re-execute regardless\r\n\r\n---\r\nThis is more noticeable and more problematic if the getters return non-primitives, since they can then trigger re-renders down the component tree\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1479","RelatedDescription":"Open issue \"registerModule causing unneccesary getter evaluations\" (#1479)"},{"Id":"395119125","IsPullRequest":true,"CreatedAt":"2019-01-01T23:03:14","Actor":"haversnail","Number":"1478","RawContent":null,"Title":"Fix: add `devtools` to StoreOptions interface","State":"open","Body":"Updates `StoreOptions` type to include the [`devtools`](https://vuex.vuejs.org/api/#devtools) option, resolving TypeScript error when option is included in store constructor.","Url":"https://github.com/vuejs/vuex/pull/1478","RelatedDescription":"Open PR \"Fix: add `devtools` to StoreOptions interface\" (#1478)"},{"Id":"395077834","IsPullRequest":true,"CreatedAt":"2019-01-01T12:17:21","Actor":"hkthai","Number":"1477","RawContent":null,"Title":"docs & examples: rewrite state object to functions everywhere","State":"open","Body":"## Overview\r\nRewrite state, object to function everywhere.\r\n\r\n## Details\r\nTo avoid shared state on the server side, we should change our state from object to functions everywhere.\r\n\r\n## Related Pages\r\n[stack overflow](https://stackoverflow.com/questions/49557177/vuex-state-returned-as-function-or-object-literal)\r\n\r\n\r\nIf it is wrong, please close this pr:bow:","Url":"https://github.com/vuejs/vuex/pull/1477","RelatedDescription":"Open PR \"docs & examples: rewrite state object to functions everywhere\" (#1477)"},{"Id":"394976929","IsPullRequest":false,"CreatedAt":"2018-12-31T14:48:24","Actor":"mbana","Number":"1475","RawContent":null,"Title":"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug](https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug)\r\n\r\n### Steps to reproduce\r\n```sh\r\ngit clone git@github.com:banaio/vue_js_samples.git\r\ncd vue_js_samples\r\ncd vuex_accessing_nested_property_bug\r\nyarn install\r\nyarn serve\r\nopen http://localhost:8080/\r\n```\r\n\r\n### What is expected?\r\nWe should see the message `{ \"level_3_field\": \"level_3_field_value\" }` twice, however it\r\nappears only once. Please see the screenshot.\r\n\r\n### What is actually happening?\r\nThe message `{ \"level_3_field\": \"level_3_field_value\" }` appears only once. As per this screenshot:\r\n\r\n![Image of broken](https://raw.githubusercontent.com/banaio/vue_js_samples/master/vuex_accessing_nested_property_bug/broken.png)\r\n\r\n---\r\n\r\nWhen `state`, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js), is defined as:\r\n\r\n```js\r\n  state: {\r\n    level_1: {\r\n      level_2: {\r\n        level_3: {\r\n          level_3_field: 'level_3_field_value',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n    level_1: (state) => state.level_1,\r\n  },\r\n```\r\n\r\nAnd used as, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue),\r\nthe `level_3_broken` does not work, but the `level_3_working` seems to work:\r\n\r\n```js\r\n  computed: {\r\n    ...mapGetters({\r\n      level_3_broken: 'level_1.level_2.level_3',\r\n    }),\r\n    level_3_working() {\r\n      return this.$store.getters['level_1']['level_2'].level_3;\r\n    },\r\n  },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1475","RelatedDescription":"Closed issue \"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store\" (#1475)"},{"Id":"394070232","IsPullRequest":false,"CreatedAt":"2018-12-31T10:26:24","Actor":"devindwan","Number":"1474","RawContent":null,"Title":"Provide a way to re-compute a getter","State":"closed","Body":"### What problem does this feature solve?\r\nAs we all know `Vue` does not support `Map`(ES6) right now. However, this `Map` feature is useful and it can not be replaced by normal object totally. Maybe we can provide an approach  to manually re-compute a getter when the depended `Map object` has been changed. It's not quite elegant and break reactivity rule, but we can temporarily improve such reactivity support by this patch like function before Vue 3.0 is released.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst state = {\r\n  map: new Map()\r\n}\r\n\r\n// Some getters depend on the map object. Not a necessary use case, just for example.\r\nconst getters = {\r\n  keys: state => {\r\n    return state.map.keys()\r\n  },\r\n  values: state => {\r\n    return state.map.values()\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  SOME_MUTATION (state, value) {\r\n    state.map = value\r\n    // Try to re-compute relevant getters\r\n    recompute(['keys', 'values'])\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1474","RelatedDescription":"Closed issue \"Provide a way to re-compute a getter\" (#1474)"},{"Id":"392025334","IsPullRequest":false,"CreatedAt":"2018-12-18T07:15:58","Actor":"hqzh","Number":"1473","RawContent":null,"Title":"辅助函数连接多个store","State":"open","Body":"### What problem does this feature solve?\r\n有时我的组件需要连多个store,比如公共的和我自己的\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport { createNamespacedHelpers } from \"vuex\";\r\n\r\nconst {\r\n    mapState,\r\n    mapGetters,\r\n    mapActions,\r\n    mapMutations\r\n         } = createNamespacedHelpers([\"myStore\",\"commonStore\"]);\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1473","RelatedDescription":"Open issue \"辅助函数连接多个store\" (#1473)"},{"Id":"391765521","IsPullRequest":true,"CreatedAt":"2018-12-17T15:33:35","Actor":"s-pace","Number":"1472","RawContent":null,"Title":"doc: Enabling DocSearch","State":"open","Body":"👋 vuex,\r\n\r\nI am [working on DocSearch](https://community.algolia.com/docsearch/), this PR will enable vuex to use the same search [experience as vuepress](https://vuepress.vuejs.org/theme/default-theme-config.html#algolia-search), [vuejs](https://vuejs.org/), [bootstrap](https://getbootstrap.com/docs/4.1/getting-started/introduction/) ...\r\n\r\nOur scraper will run every 24H to update your Algolia index. Feel free to [PR your configuration](https://github.com/algolia/docsearch-configs/blob/0b171ddf626dac501b2d9bf4a80e79613c874918/configs/vuex.json) if you need any update, the search is out of the box.\r\n\r\nLet us know if you need anything.","Url":"https://github.com/vuejs/vuex/pull/1472","RelatedDescription":"Open PR \"doc: Enabling DocSearch\" (#1472)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-05T05:31:02.4013957Z","RunDurationInMilliseconds":3319}