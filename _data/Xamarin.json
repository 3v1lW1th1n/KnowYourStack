{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing the Xamarin.iOS Interpreter","PublishedOn":"2019-03-26T16:41:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Historically iOS applications have had a number of limitations when running on a device, as Apple disallows the execution of dynamically generated code. Applications are compiled “Ahead of Time” (AOT)...","Href":"https://blog.xamarin.com/introducing-xamarin-ios-interpreter/","RawContent":null},{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T16:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://blog.xamarin.com/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T15:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last fall, Apple announced that new applications and updates would need to support the Apple Watch Series 4. &#8220;Starting March 2019, all new apps and app updates for iPhone, including universal...","Href":"https://blog.xamarin.com/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Essentials are your ultimate open source library to access native features from a single cross-platform API. Since the first release, we have received awesome feedback on GitHub from...","Href":"https://blog.xamarin.com/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developers around the world use Xamarin every day to build beautiful native mobile apps with .NET. What better way to highlight the amazing work that these developers are doing than with a customer...","Href":"https://blog.xamarin.com/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9321189701","Type":"IssuesEvent","CreatedAt":"2019-03-27T02:43:53","Actor":"painavin","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2884","RelatedDescription":"Opened issue \"PanGestureRecognizer Completed Event does not fire\" (#2884) at xamarin/xamarin-android","RelatedBody":"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:PanGestureBug\"\r\n             x:Class=\"PanGestureBug.MainPage\">\r\n\r\n    <StackLayout>\r\n        <ListView x:Name=\"myList\" RowHeight=\"100\">\r\n            <ListView.ItemTemplate>\r\n                <DataTemplate>\r\n                    <ViewCell>\r\n                        <Label\r\n                            Text=\"{Binding}\">\r\n                            <Label.GestureRecognizers>\r\n                                <PanGestureRecognizer PanUpdated=\"PanGestureRecognizer_PanUpdated\"/>\r\n                            </Label.GestureRecognizers>\r\n                        </Label>\r\n                    </ViewCell>\r\n                </DataTemplate>\r\n            </ListView.ItemTemplate>\r\n        </ListView>\r\n    </StackLayout>\r\n\r\n</ContentPage>\r\n\r\n**Code Behind**\r\n\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing Xamarin.Forms;\r\n\r\nnamespace PanGestureBug\r\n{\r\n    [DesignTimeVisible(true)]\r\n    public partial class MainPage : ContentPage\r\n    {\r\n        List<string> items = new List<string>();\r\n        public MainPage()\r\n        {\r\n            InitializeComponent();\r\n            for (int i = 0; i < 3; i++)\r\n            {\r\n                items.Add(\"item \" + i.ToString());\r\n            }\r\n            myList.ItemsSource = items;\r\n        }\r\n        private void PanGestureRecognizer_PanUpdated(object sender, PanUpdatedEventArgs e)\r\n        {\r\n            System.Diagnostics.Debug.WriteLine(e.StatusType);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n### Expected Behavior\r\nWhen you pan on the items, the PanUpdated should get called with completed/cancelled. \r\n\r\n### Actual Behavior\r\nThe completed/cancelled is not called consistently.\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 4.4\r\nVisualStudio.16.Preview/16.0.0-pre.4.4+28721.148\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual C++ 2019   00435-60000-00000-AA984\r\nMicrosoft Visual C++ 2019\r\n\r\nApplication Insights Tools for Visual Studio Package   9.0.20307.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.0.12307.51536\r\nASP.NET and Web Tools 2019\r\n\r\nAzure App Service Tools v3.0.0   16.0.12307.51536\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.0.300 (573eda3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   16.0.10306.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: 809f41207b74a1356208f11b8fa3a15233734050.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.0.0.513 (d16-0@aebc6bdb5)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.17.4.413 (remotes/origin/d16-0@db42fb8b0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.1.43 (fe3ade5)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\n"},{"Id":"9321118121","Type":"PullRequestEvent","CreatedAt":"2019-03-27T02:24:17","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2861","RelatedDescription":"Closed pull request \"[tests] avoid shared dirs for parallel MSBuild tests\" (#2861) at xamarin/xamarin-android","RelatedBody":"Running our MSBuild NUnit tests can have quite a few random failures\r\ndue to shared directories:\r\n\r\n* `%UserProfile%\\.nuget` contains a system-wide cache of NuGet\r\n  packages. Commonly the MSBuild `Restore` target can fail if two\r\n  process restore the same package at the same time.\r\n* `%LocalAppData%\\XamarinBuildDownloadCache` commonly the\r\n  Xamarin.Build.Download NuGet can fail if two processes try to\r\n  dowload files at the same time.\r\n\r\nThese issues happen on a clean build machine (that has never built\r\nxamarin-android). This can happen on macOS as well, but the paths are\r\ndifferent.\r\n\r\nAn improvement in our sanity here, would be to configure these\r\ndirectories so they use a path on a per-test basis.\r\n\r\nSo for NuGet:\r\n\r\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/managing-the-global-packages-and-cache-folders\r\n\r\nWe can set the `NUGET_PACKAGES` environment variable to a `.nuget`\r\ndirectory in the project directory of each test.\r\n\r\nFor Xamarin.Build.Download:\r\n\r\nhttps://github.com/xamarin/XamarinComponents/blob/5e89e3cc935cea98e7f7ac4cefa6f51ca0262d6f/Util/Xamarin.Build.Download/source/Xamarin.Build.Download/Xamarin.Build.Download.targets#L12\r\n\r\nWe can set the `$(XamarinBuildDownloadDir)` MSBuild property to an\r\n`xbd` directory.\r\n\r\nHowever, in practice this property required a trailing slash, which\r\nopened a problem with our our response files are generated in tests:\r\n\r\n    /p:XamarinBuildDownloadDir=\"C:\\src\\xamarin-android\\bin\\TestDebug\\temp\\Foo Bar\\xbd\\\"\r\n\r\nThe `\\\"` at the end is effectively escaping the `\"`, so the property\r\ncontains the `\"`.\r\n\r\nThe fix is to escape all `\\` characters in this response file:\r\n\r\n    /p:XamarinBuildDownloadDir=\"C:\\\\src\\\\xamarin-android\\\\bin\\\\TestDebug\\\\temp\\\\Foo Bar\\\\xbd\\\\\"\r\n\r\nNow everything works.\r\n\r\nI chose short directory names for `.nuget` and `xbd` to avoid\r\n`MAX_PATH` issues.\r\n\r\nI also removed `[NonParallelizable]` from several MSBuild tests. We\r\nshould only keep them on a few tests that rely on an operation\r\ncompleting in a length of time."},{"Id":"9321115681","Type":"PullRequestEvent","CreatedAt":"2019-03-27T02:23:38","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2883","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] lock needed in <Aapt2Compile/>\" (#2883) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2881\r\nContext: http://build.devdiv.io/2531303\r\n\r\nI have noticed a random failure in our MSBuild tests such as:\r\n\r\n    E:\\A\\_work\\1214\\s\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Aapt2.targets(84,3): One or more errors occurred.\r\n        at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n        at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n        at System.Threading.Tasks.Task.Wait()\r\n        at System.Threading.Tasks.Parallel.ForWorker[TLocal](Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Func`4 bodyWithLocal, Func`1 localInit, Action`1 localFinally)\r\n        at System.Threading.Tasks.Parallel.ForEachWorker[TSource,TLocal](TSource[] array, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Action`3 bodyWithStateAndIndex, Func`4 bodyWithStateAndLocal, Func`5 bodyWithEverything, Func`1 localInit, Action`1 localFinally)\r\n        at System.Threading.Tasks.Parallel.ForEachWorker[TSource,TLocal](IEnumerable`1 source, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Action`3 bodyWithStateAndIndex, Func`4 bodyWithStateAndLocal, Func`5 bodyWithEverything, Func`1 localInit, Action`1 localFinally)\r\n        at System.Threading.Tasks.Parallel.ForEach[TSource](IEnumerable`1 source, ParallelOptions parallelOptions, Action`1 body)\r\n        at Xamarin.Android.Tasks.Aapt2Compile.DoExecute()\r\n        at Xamarin.Android.Tasks.Aapt2Compile.<Execute>b__15_0()\r\n        at System.Threading.Tasks.Task.InnerInvoke()\r\n        at System.Threading.Tasks.Task.Execute() [E:\\A\\_work\\1214\\s\\bin\\TestRelease\\temp\\BuildAMassiveApp\\App1\\App1.csproj]\r\n\r\nSo an exception during `Parallel.ForEach` isn't logged in a nice way\r\nat all with MSBuild...\r\n\r\nAdditionally, the `aapt2 compile` calls before this do not list any\r\nerrors...\r\n\r\nSo with #2881, I added `try-catch` to log the inner exception:\r\n\r\n    Unhandled exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n        at System.Collections.Generic.List`1.Add(T item)\r\n        at Xamarin.Android.Tasks.Aapt2Compile.ProcessDirectory(ITaskItem resourceDirectory)\r\n\r\nThat is when I spotted the issue:\r\n\r\n* Running `Parallel.ForEach` on `ProcessDirectory`\r\n* Parallel calls to `archives.Add()`, where `archives` is a\r\n  `List<ITaskItem>` instance variable in the MSBuild task.\r\n\r\nThe simple fix here is to put a `lock(foo)` around the `.Add()` call.\r\n\r\nI will improve the error logging in #2881."},{"Id":"9320921086","Type":"PullRequestEvent","CreatedAt":"2019-03-27T01:28:59","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2876","RelatedDescription":"Merged pull request \"[tests] add a test using Xamarin.Forms.Maps\" (#2876) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2836#issuecomment-476347029\r\n\r\nWe have noticed apps using Xamarin.Forms.Maps might be close to\r\nhitting the dex limit for fields.\r\n\r\nAn example from @PureWeen:\r\n\r\n    1>  trouble writing output: Too many field references to fit in one dex file: 70468; max is 65536.\r\n\r\nWe think the way Xamarin.Android invokes `aapt` (or `aapt2`) might be\r\ncreating `R.java` files with more fields than are needed.\r\n\r\nStep 1 is to add a test project that uses Xamarin.Forms.Maps: we did\r\nnot have one."},{"Id":"9320913742","Type":"PullRequestEvent","CreatedAt":"2019-03-27T01:26:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2875","RelatedDescription":"Merged pull request \"_WIN32 is defined with _WIN64 so _WIN64 must be checked first.\" (#2875) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9319840321","Type":"PullRequestEvent","CreatedAt":"2019-03-26T21:21:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2878","RelatedDescription":"Merged pull request \"[java-runtime] Remove final from MonoPackageManager_Resources\" (#2878) at xamarin/xamarin-android","RelatedBody":"In commit 75023bd2 we noticed an issue the\r\nvalue of `MonoPackageManager_Resouces.ApiPackageName` was\r\n`\"\"` even after it was replaced at built time with a new\r\n`.class` file which contained an actual value.\r\n\r\nThe fix in that PR was to make the temp file in java-runtime\r\nhave a value of `null` rather than `\"\"`. This made thing work\r\nbut we didn't know WHY.\r\n\r\nAfter some more investigation it turns out that the value\r\nwas being inlined by the java compiler.\r\n\r\n\tpublic static java.lang.String getApiPackageName();\r\n\t    descriptor: ()Ljava/lang/String;\r\n\t    Code:\r\n\t       0: ldc           #48                 // String\r\n\t       2: areturn\r\n\r\nThe code above is pointing to a string in the Constants table.\r\nWhat we were expecting was that the statick method would be\r\ncalled in the file generated by the build system. Making\r\nthe temp file have a `null` rather than `\"\"` resulted in the\r\nfollowing code\r\n\r\n\tpublic static java.lang.String getApiPackageName();\r\n\t    descriptor: ()Ljava/lang/String;\r\n\t    Code:\r\n\t       0: getstatic     #47                 // Field mono/MonoPackageManager_Resources.ApiPackageName:Ljava/lang/String;\r\n\t       3: areturn\r\n\r\nThis is why changing to `null` worked. It prevented the compiler\r\nfrom inlining the value.\r\n\r\nThis commit removes the `final` keyword from the `MonoPackageManager_Resources`\r\nclass fields to make sure that they never get inlined."},{"Id":"9319669171","Type":"PullRequestEvent","CreatedAt":"2019-03-26T20:55:07","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2882","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Check a jar has .class files in it.\" (#2882) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9319547146","Type":"PullRequestEvent","CreatedAt":"2019-03-26T20:36:32","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2881","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] aapt2 logging for Parallel.ForEach\" (#2881) at xamarin/xamarin-android","RelatedBody":"Unhandled exceptions in `<Aapt2Compile/>` and `<Aapt2Link/>` seem to\r\nlog an error such as:\r\n\r\n    E:\\A\\_work\\1214\\s\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Aapt2.targets(84,3): One or more errors occurred.\r\n        at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n        at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n        at System.Threading.Tasks.Task.Wait()\r\n        at System.Threading.Tasks.Parallel.ForWorker[TLocal](Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Func`4 bodyWithLocal, Func`1 localInit, Action`1 localFinally)\r\n        at System.Threading.Tasks.Parallel.ForEachWorker[TSource,TLocal](TSource[] array, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Action`3 bodyWithStateAndIndex, Func`4 bodyWithStateAndLocal, Func`5 bodyWithEverything, Func`1 localInit, Action`1 localFinally)\r\n        at System.Threading.Tasks.Parallel.ForEachWorker[TSource,TLocal](IEnumerable`1 source, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Action`3 bodyWithStateAndIndex, Func`4 bodyWithStateAndLocal, Func`5 bodyWithEverything, Func`1 localInit, Action`1 localFinally)\r\n        at System.Threading.Tasks.Parallel.ForEach[TSource](IEnumerable`1 source, ParallelOptions parallelOptions, Action`1 body)\r\n        at Xamarin.Android.Tasks.Aapt2Compile.DoExecute()\r\n        at Xamarin.Android.Tasks.Aapt2Compile.<Execute>b__15_0()\r\n        at System.Threading.Tasks.Task.InnerInvoke()\r\n        at System.Threading.Tasks.Task.Execute() [E:\\A\\_work\\1214\\s\\bin\\TestRelease\\temp\\BuildAMassiveApp\\App1\\App1.csproj]\r\n\r\n`One or more errors occurred.` is not helpful.\r\n\r\nMy first thought is to add a `try-catch` around the method that\r\n`Parallel.ForEach` invokes and log the exception.\r\n\r\nIf this change gets us a better error message when `Parallel.ForEach`\r\nis used, I should check for all usages of `Parallel.ForEach` to add\r\nthis.\r\n\r\nSuggestions welcome, if I should report the error a different way."},{"Id":"9319170398","Type":"PullRequestEvent","CreatedAt":"2019-03-26T19:39:11","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2880","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for <Aapt/>\" (#2880) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2527883\r\n\r\nOur integration build for the Xamarin designer has caught a bug in the\r\nfollowing situation:\r\n\r\n* macOS-only (Windows is OK)\r\n* `$(AndroidUseAapt2)` is `False`\r\n* Using `Xamarin.Android.Support.CustomTabs` version 23.x\r\n\r\nI was able to reproduce the problem by changing the\r\n`BuildTest.ResourceExtraction` test.\r\n\r\nThe error message is:\r\n\r\n    /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1765,2):\r\n        error APT0000: resource directory '/private/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/ADT-0/RT-MyDriving-1/MyDriving.Android/obj/Debug/resourcecache/3288F845948C6081AB114E82B328E204/res' does not exist\r\n\r\nThe reason this fails is that this particular library does not have a\r\n`res` directory:\r\n\r\n    $ ls -l ~/.local/share/Xamarin/Xamarin.Android.Support.CustomTabs/23.1.1.0/embedded\r\n    total 64\r\n     8 -rw-r--r--  1 jonathanpeppers  staff    861 Mar 26 11:18 AndroidManifest.xml\r\n     0 drwxr-xr-x  3 jonathanpeppers  staff     96 Mar 26 11:18 aapt\r\n    56 -rw-r--r--  1 jonathanpeppers  staff  24743 Mar 26 11:18 classes.jar\r\n\r\nThe fix is to add a `Directory.Exists` check, this seems to fix the\r\nunit test *and* the failing project used by the designer build."},{"Id":"9319140815","Type":"PullRequestEvent","CreatedAt":"2019-03-26T19:34:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2859","RelatedDescription":"Merged pull request \" [Xamarin.Android.Build.Tasks] Switch to AsyncTask nuget package.\" (#2859) at xamarin/xamarin-android","RelatedBody":""}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9321230606","Type":"IssuesEvent","CreatedAt":"2019-03-27T02:55:17","Actor":"zhulin802","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5701","RelatedDescription":"Opened issue \" 'InitializeComponent' does not exist in the current context\" (#5701) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n  I created a new project (Xamarin.Forms, blank, shared project) and run the application i got error code The name 'InitializeComponent' does not exist in the current context\r\n### Steps to Reproduce\r\nRun the project\r\n### Expected Behavior\r\nbuild succeed\r\n### Actual Behavior\r\nbuild fails and throw the error\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: Visual Studio 2017 on Windows\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nhttps://stackoverflow.com/questions/55198660/xamaria-form-initializecomponent-does-not-exist-in-this-context\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9317582935","Type":"IssuesEvent","CreatedAt":"2019-03-26T16:06:59","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5564","RelatedDescription":"Closed issue \"[xcode10.2] CALayerInvalidGeometry Reason: CALayer position contains NaN\" (#5564) at xamarin/xamarin-macios","RelatedBody":"I've found that [DocumentWatermark](https://github.com/xamarin/ios-samples/tree/5a315ce8cb13d6fb058237b0978d39595e4f3f0a/ios11/PDFDocumentWatermark) and [PDFAnnotationWidgetsAdvanced](https://github.com/xamarin/ios-samples/tree/5a315ce8cb13d6fb058237b0978d39595e4f3f0a/ios11/PDFAnnotationWidgetsAdvanced) fails on launch with the xcode10.2 build\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run one of the projects on iPhone with 12.2 iOS\r\n\r\n_(It runs successfully on phones with 12.1.2 iOS and 12.0.1 iOS)_\r\n\r\n### Expected Behavior\r\nIt runs successfully\r\n\r\n### Actual Behavior\r\nIt crashes on launch\r\n\r\n### Environment\r\n\r\n1. `OSX` 10.14.3\r\n2. `XI` 12.4.0.37\r\n3. `Mono` 5.16.0.233\r\n4. `Xcode` 10.2.0\r\n\r\n### Build Logs\r\n\r\n1. Output Logs:\r\n    - DocumentWatermark \r\nhttp://xqa.blob.core.windows.net/gist/report-c63a4e20a4ad482aaefe3dada93b0657.txt\r\n    - PDFAnnotationWidgetsAdvanced \r\nhttp://xqa.blob.core.windows.net/gist/report-56bd1129d01d487e923ae64a3699d177.txt\r\n2. Device Logs\r\n    - DocumentWatermark \r\nhttp://xqa.blob.core.windows.net/gist/DocumentWatermark-2019-02-06-053246-XQAiPhone8Plusb-4bec26b28a3240dfab82c64a46aeb71d.txt\r\n    - PDFAnnotationWidgetsAdvanced \r\nhttp://xqa.blob.core.windows.net/gist/PDFAnnotationWidgetsAdvanced-2019-02-06-052429-XQAiPhone8Plusb-f6e4a423c0c74956907025e561ec3764.txt\r\n\r\n\r\n### Example Project\r\n\r\n-  [DocumentWatermark](https://github.com/xamarin/ios-samples/tree/5a315ce8cb13d6fb058237b0978d39595e4f3f0a/ios11/PDFDocumentWatermark)\r\n-  [PDFAnnotationWidgetsAdvanced](https://github.com/xamarin/ios-samples/tree/5a315ce8cb13d6fb058237b0978d39595e4f3f0a/ios11/PDFAnnotationWidgetsAdvanced) \r\n"},{"Id":"9317524204","Type":"PullRequestEvent","CreatedAt":"2019-03-26T16:00:30","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5808","RelatedDescription":"Opened pull request \"Bump for Xcode 10.2 final\" (#5808) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9315330562","Type":"PullRequestEvent","CreatedAt":"2019-03-26T11:25:25","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5807","RelatedDescription":"Merged pull request \"Ignore tests for devices\" (#5807) at xamarin/xamarin-macios","RelatedBody":"There are a number of tests that fail on device. We have an issue for the corlib tests (https://github.com/mono/mono/issues/13641 ) and we do not have one for the icrosoft.CSharp_xunit-test.dll because it does not happen on 2019-02 yet we have issue \r\nhttps://github.com/mono/mono/issues/13639 that is related with that dll."},{"Id":"9312635038","Type":"IssuesEvent","CreatedAt":"2019-03-26T02:08:06","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5799","RelatedDescription":"Closed issue \"Random Error for Unknown Reason\" (#5799) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\nI don't know, there's no managed code on the stack that I can identify. I was trying to log into my application on the iOS simulator when the application just crashed.\r\n\r\n### Expected Behavior\r\nThe login succeeds and takes me to the page within my application.\r\n\r\n### Actual Behavior\r\nThe screen goes black and the application terminates.\r\n\r\n### Environment\r\n```\r\nJetBrains Rider 2019.1 EAP\r\nBuild #RD-191.6349.96, built on March 21, 2019\r\nRider EAP User\r\nExpiration date: April 20, 2019\r\nJRE: 1.8.0_202-release-1483-b40 amd64\r\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\r\nWindows 10 10.0\r\n```\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.8.1 (build 4)\r\nInstallation UUID: 0fd06d7a-7f21-40f4-890c-9189ea7bfc77\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.0.0.0 ( / b40230c0)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.8\r\n\t2.1.7\r\nSDK: /usr/local/share/dotnet/sdk/2.1.504/Sdks\r\nSDK Versions:\r\n\t2.1.504\r\n\t2.1.503\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.15 (Visual Studio Community)\r\nHash: d60abd198\r\nBranch: \r\nBuild date: 2019-02-01 12:23:30-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.15 (Visual Studio Community)\r\nHash: d60abd198\r\nBranch: d15-9\r\nBuild date: 2019-02-01 12:23:29-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: Not Found\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.8.1.0\r\nHash: 8924ea4a\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 708010004\r\nGit revision: 8e2582c0fc1558364b67502b43d2e6a44ff6bc48\r\nBuild date: 2019-02-21 18:39:01+00\r\nBuild branch: release-7.8\r\nXamarin extensions: af96e69ddf566b275db40628f8530ca48a97f0b9\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.3\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Thu Dec 20 20:46:53 PST 2018\r\n    root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\n### Build Logs\r\n[JetBrainsLog.ReSharperBuild_2019_03_22_04_39_57_4206.log.zip](https://github.com/xamarin/xamarin-macios/files/2995003/JetBrainsLog.ReSharperBuild_2019_03_22_04_39_57_4206.log.zip)\r\n\r\n### Console Output\r\n```\r\n2019-03-22 15:40:47.344681+1100 Adapt.Presentation.Xivic.iOS[30642:255728] error: * Assertion at /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/external/mono/mono/mini/debugger-agent.c:4957, condition `is_ok (error)' not met, function:set_set_notification_for_wait_completion_flag, Could not execute the method because the containing type is not fully instantiated. assembly:<unknown assembly> type:<unknown type> member:(null)\r\n2019-03-22 15:40:47.344985+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: Stacktrace:\r\n2019-03-22 15:40:47.345150+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical:   at <unknown> <0xffffffff>\r\n2019-03-22 15:40:47.345373+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical:   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00009] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.15/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/threading/threadpool.cs:1210\r\n2019-03-22 15:40:47.345612+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical:   at (wrapper runtime-invoke) <Module>.runtime_invoke_bool (object,intptr,intptr,intptr) [0x0001f] in <2b439461a53d406abf16d6e5e34ece7f>:0\r\n2019-03-22 15:40:47.345734+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \r\nNative stacktrace:\r\n2019-03-22 15:40:47.354900+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t0   Adapt.Presentation.Xivic.iOS        0x00000001072039f4 mono_handle_native_crash + 244\r\n2019-03-22 15:40:47.355033+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t1   libsystem_platform.dylib            0x000000011ce05b3d _sigtramp + 29\r\n2019-03-22 15:40:47.355134+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t2   ???                                 0x0000ffff00001fa0 0x0 + 281470681751456\r\n2019-03-22 15:40:47.355215+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t3   libsystem_c.dylib                   0x000000011cb87c45 abort + 127\r\n2019-03-22 15:40:47.355294+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t4   Adapt.Presentation.Xivic.iOS        0x0000000107420700 _ZL12log_callbackPKcS0_S0_iPv + 64\r\n2019-03-22 15:40:47.355407+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t5   Adapt.Presentation.Xivic.iOS        0x00000001073ebdf3 monoeg_g_logv + 83\r\n2019-03-22 15:40:47.355475+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t6   Adapt.Presentation.Xivic.iOS        0x00000001073ec0df monoeg_assertion_message + 191\r\n2019-03-22 15:40:47.355566+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t7   Adapt.Presentation.Xivic.iOS        0x0000000107163acb ss_start + 2747\r\n2019-03-22 15:40:47.355648+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t8   Adapt.Presentation.Xivic.iOS        0x0000000107156de3 process_breakpoint + 931\r\n2019-03-22 15:40:47.355709+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t9   Adapt.Presentation.Xivic.iOS        0x00000001071569ce mono_debugger_agent_breakpoint_from_context + 158\r\n2019-03-22 15:40:47.355775+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t10  ???                                 0x000000013bd1e07f 0x0 + 5298577535\r\n2019-03-22 15:40:47.355861+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t11  ???                                 0x0000000142efbb58 0x0 + 5417974616\r\n2019-03-22 15:40:47.355929+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t12  ???                                 0x0000000141ad317c 0x0 + 5396836732\r\n2019-03-22 15:40:47.356010+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t13  ???                                 0x00000001409ca1f3 0x0 + 5378974195\r\n2019-03-22 15:40:47.356084+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t14  ???                                 0x0000000141ad426d 0x0 + 5396841069\r\n2019-03-22 15:40:47.356144+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t15  ???                                 0x0000000140d6d5bb 0x0 + 5382788539\r\n2019-03-22 15:40:47.356225+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t16  ???                                 0x0000000140d6c593 0x0 + 5382784403\r\n2019-03-22 15:40:47.356319+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t17  ???                                 0x0000000141ad317c 0x0 + 5396836732\r\n2019-03-22 15:40:47.356413+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t18  ???                                 0x00000001409ca1f3 0x0 + 5378974195\r\n2019-03-22 15:40:47.356477+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t19  ???                                 0x0000000141ad426d 0x0 + 5396841069\r\n2019-03-22 15:40:47.356548+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t20  ???                                 0x0000000140d6d5bb 0x0 + 5382788539\r\n2019-03-22 15:40:47.356613+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t21  ???                                 0x0000000140d6c593 0x0 + 5382784403\r\n2019-03-22 15:40:47.356681+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \r\n=================================================================\r\nGot a SIGABRT while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n```\r\n\r\n### Device Log\r\n```\r\n2019-03-22 15:35:41.770532+1100 Adapt.Presentation.Xivic.iOS[29989:249883] error: * Assertion at /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/external/mono/mono/mini/debugger-agent.c:4957, condition `is_ok (error)' not met, function:set_set_notification_for_wait_completion_flag, Could not execute the method because the containing type is not fully instantiated. assembly:<unknown assembly> type:<unknown type> member:(null)\r\n```\r\n\r\n### LLDB Trace\r\n```\r\n__pthread_kill 0x0000000115d6423e\r\npthread_kill 0x0000000115db7c1c\r\nabort 0x0000000115b26c45\r\nlog_callback(char const*, char const*, char const*, int, void*) 0x00000001003c3700\r\nmonoeg_g_logv 0x000000010038edf3\r\nmonoeg_assertion_message 0x000000010038f0df\r\nss_start 0x0000000100106acb\r\nss_start 0x0000000100106a98\r\nprocess_breakpoint 0x00000001000f9de3\r\nmono_debugger_agent_breakpoint_from_context 0x00000001000f99ce\r\n<unknown> 0x0000000134cc107f\r\n<unknown> 0x000000013be9cd58\r\n<unknown> 0x000000013aa76e0c\r\n<unknown> 0x000000013996d1f3\r\n<unknown> 0x000000013aa77efd\r\n<unknown> 0x0000000139d0cdbb\r\n<unknown> 0x0000000139d0c503\r\n<unknown> 0x000000013aa76e0c\r\n<unknown> 0x000000013996d1f3\r\n<unknown> 0x000000013aa77efd\r\n<unknown> 0x0000000139d0cdbb\r\n```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":67,"FavoriteCount":30,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":25,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":25,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":116,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":69,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":9,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":18,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":261,"FavoriteCount":130,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":23,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":15,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2019-03-27T05:30:53.0478801Z","RunDurationInMilliseconds":3079}