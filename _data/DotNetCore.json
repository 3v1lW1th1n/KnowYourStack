{"Data":{"Blog":{"FeedItems":[{"Title":"Update on .NET Core 3.0 and .NET Framework 4.8","PublishedOn":"2018-10-04T16:29:57+00:00","CommentsCount":57,"FacebookCount":0,"Summary":"In May, we announced .NET Core 3.0, the next major version of .NET Core that adds support for building desktop applications using WinForms, WPF, and Entity Framework 6. We also announced some exciting...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 2.1.5 & SDK 2.1.403","PublishedOn":"2018-10-02T15:31:06+00:00","CommentsCount":9,"FacebookCount":0,"Summary":".NET Core October 2018 Update Today, we are releasing the .NET Core October 2018 Update. This update includes .NET Core 2.1.5 and .NET Core SDK 2.1.403 and contains important reliability fixes....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/02/net-core-october-2018-update/","RawContent":null},{"Title":".NET Framework September 2018 Preview of Quality Rollup","PublishedOn":"2018-09-25T19:36:58+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Late last week we released the September 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated code to prevent...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing Cumulative Updates for .NET Framework for Windows 10 October 2018 Update","PublishedOn":"2018-09-19T22:30:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We deliver .NET Framework updates nearly every month, through Windows Update and other distribution channels. We are making changes to the way that we deliver those updates. We’ll soon start...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/19/announcing-cumulative-updates-for-net-framework-for-windows-10-october-2018-update/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3646","PublishedOn":"2018-09-18T02:38:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/17/announcing-net-framework-4-8-early-access-build-3646/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 2","PublishedOn":"2018-09-12T19:26:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 2. We have great improvements that we want to share and that we would love to get your feedback on, either in the comments or at dotnet/core #1938....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/","RawContent":null},{"Title":"Announcing ‘Machine Learning .NET’ 0.5","PublishedOn":"2018-09-12T18:55:34+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, coinciding with the .NET Conf 2018, we&#8217;re announcing the release of ML.NET 0.5. It’s been a few months already since we released ML.NET 0.1 at //Build 2018, a cross-platform, open source...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-ml-net-0-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 2 and the preview of the Cosmos DB provider and spatial extensions for EF Core","PublishedOn":"2018-09-12T17:04:13+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 2 available, together with a preview of our data provider for Cosmos DB and new spatial extensions for our SQL Server and in-memory providers. Obtaining the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-entity-framework-core-2-2-preview-2/","RawContent":null},{"Title":"A (Belated) Welcome to C# 7.3","PublishedOn":"2018-09-12T17:00:52+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"A (Belated) Welcome to C# 7.3 Better late than never! Some of you may have noticed that C# 7.3 already shipped, back in Visual Studio 2017 update 15.7. Some of you may even be using the features...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/a-belated-welcome-to-c-7-3/","RawContent":null},{"Title":".NET Framework September 2018 Security and Quality Rollup","PublishedOn":"2018-09-11T18:36:50+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Updated: September 21, 2018 SharePoint workflows may stop working after installing this update.  See SharePoint workflows stop working after you install .NET security updates for CVE-2018-8421 for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8377166566","Type":"IssuesEvent","CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Opened issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87) at dotnet/announcements","RelatedBody":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```"},{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"},{"Id":"8247970519","Type":"IssuesEvent","CreatedAt":"2018-09-11T17:00:56","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](***TDB***).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n"},{"Id":"8220412616","Type":"IssuesEvent","CreatedAt":"2018-09-05T20:56:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Opened issue \".NET Core Runtime ARM64 Status\" (#82) at dotnet/announcements","RelatedBody":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\n## Current Status\r\n\r\nARM64 is currently broken in .NET Core 3.0 builds. See:\r\n\r\n* [dotnet/coreclr #19805](https://github.com/dotnet/coreclr/issues/19805)\r\n* [dotnet/coreclr #19822](https://github.com/dotnet/coreclr/issues/19822)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8381830589","Type":"PullRequestEvent","CreatedAt":"2018-10-08T04:19:24","Actor":"AustinWise","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20298","RelatedDescription":"Opened pull request \"Remove mentions of Rotor from codebase\" (#20298) at dotnet/coreclr","RelatedBody":"Many references to Rotor in this codebase are confusing, as they tend to contrast Rotor's behavior with .NET Framework (neither of which matches CoreCLR) or reference compatibility problems with 15 year old compilers.\r\n\r\nThis series of commits should remove all mentions rotor from the codebase, except from the many non-compiling PAL tests. Many of them reflect a time when the PAL was built as a shared library, so once they are cleaned up they will be purged of the reference to `librotor_pal`."},{"Id":"8381698563","Type":"PullRequestEvent","CreatedAt":"2018-10-08T03:16:46","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20297","RelatedDescription":"Merged pull request \"Remove mention of rotor from comments\" (#20297) at dotnet/coreclr","RelatedBody":"Related to #9872.\r\n\r\nI've removed mentions of rotor in comments and documention, either by adding a more useful comment or removing an outdated comment.\r\n\r\nI did not touch the non-compiling PAL tests, in case the comments would help in cleaning those up.\r\nThis commit does not remove references from code, that will be a followup PR."},{"Id":"8381532581","Type":"PullRequestEvent","CreatedAt":"2018-10-08T01:58:11","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20277","RelatedDescription":"Merged pull request \"Remove some dead remoting and context static things\" (#20277) at dotnet/coreclr","RelatedBody":"Building on #20256, this further cleans up references to context statics. It also removes some adjacent remoting things."},{"Id":"8381338248","Type":"PullRequestEvent","CreatedAt":"2018-10-08T00:01:09","Actor":"AustinWise","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20297","RelatedDescription":"Opened pull request \"Remove mention of rotor from comments\" (#20297) at dotnet/coreclr","RelatedBody":"Related to #9872.\r\n\r\nI've removed mentions of rotor in comments and documention, either by adding a more useful comment or removing an outdated comment.\r\n\r\nI did not touch the non-compiling PAL tests, in case the comments would help in cleaning those up.\r\nThis commit does not remove references from code, that will be a followup PR."},{"Id":"8380904361","Type":"PullRequestEvent","CreatedAt":"2018-10-07T19:20:56","Actor":"ViktorHofer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20286","RelatedDescription":"Merged pull request \"Update buildtools to v3\" (#20286) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8381293020","Type":"PullRequestEvent","CreatedAt":"2018-10-07T23:29:42","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10120","RelatedDescription":"Opened pull request \"WIP repro\" (#10120) at dotnet/cli","RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"8380124424","Type":"IssuesEvent","CreatedAt":"2018-10-07T11:30:18","Actor":"lorenzo93","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10119","RelatedDescription":"Opened issue \"Publish self-contained solution without replicating all files\" (#10119) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nRun `dotnet publish -c release -r linux-x64 -o testExport` on a solution folder (a folder with inside a .sln file and folders for each project in the solution)\r\n\r\n## Expected  behavior\r\nIt would be better if it creates a single folder with all the common files (e.g. the dotnet framework) and the compiled projects. It can reduce a lot the space used on disk.\r\nNow I have a solution with 6 project inside, compiling with portable options each project is like 2MB, while compiling with self-contained each project is like 100MB, but most of the files across the different projects are redundant\r\n\r\n## Actual behavior\r\nIt creates inside each project a folder named \"testExport\" with the self-contained export. So each folder now contains a copy of all (or maybe just the part used) of dotnet framework\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (che rispecchia un qualsiasi file global.json):\r\n Version:   2.1.402\r\n Commit:    3599f217f4\r\n\r\nAmbiente di runtime:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.4\r\n  Commit:  85255dde3e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8379745649","Type":"IssuesEvent","CreatedAt":"2018-10-07T06:40:38","Actor":"hez2010","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10118","RelatedDescription":"Opened issue \"Add fsi tool\" (#10118) at dotnet/cli","RelatedBody":"Currently in order to use fsi, we have to install Visual Studio. Why not provide with fsi as a tool in dotnet cli?\r\n\r\nThen we can use:\r\n```\r\ndotnet fsi\r\n\r\nMicrosoft (R) F# Interactive version 10.2.3 for F# 4.5\r\nCopyright (c) Microsoft Corporation. All Rights Reserved.\r\n\r\nFor help type #help;;\r\n\r\n>\r\n```"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8380208806","Type":"PullRequestEvent","CreatedAt":"2018-10-07T12:26:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/893","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181006.1 of https://github.com/dotnet/arcade\" (#893) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18506.1.symbols.nupkg - 2.2.0-beta.18506.1\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18506.1.symbols.nupkg - 2.4.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18506.1\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18506.1\n- Microsoft.DotNet.Darc - 1.0.0-beta.18506.1\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18506.1\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18506.1"},{"Id":"8380168527","Type":"PullRequestEvent","CreatedAt":"2018-10-07T12:01:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/893","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181006.1 of https://github.com/dotnet/arcade\" (#893) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18506.1.symbols.nupkg - 2.2.0-beta.18506.1\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18506.1.symbols.nupkg - 2.4.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18506.1\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18506.1\n- Microsoft.DotNet.Darc - 1.0.0-beta.18506.1\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18506.1\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18506.1"},{"Id":"8378261915","Type":"PullRequestEvent","CreatedAt":"2018-10-06T12:20:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/892","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181005.7 of https://github.com/dotnet/arcade\" (#892) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18505.7.symbols.nupkg - 2.2.0-beta.18505.7\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18505.7.symbols.nupkg - 2.4.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18505.7\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18505.7\n- Microsoft.DotNet.Darc - 1.0.0-beta.18505.7\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18505.7\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18505.7"},{"Id":"8378234298","Type":"PullRequestEvent","CreatedAt":"2018-10-06T12:00:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/892","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181005.7 of https://github.com/dotnet/arcade\" (#892) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18505.7.symbols.nupkg - 2.2.0-beta.18505.7\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18505.7.symbols.nupkg - 2.4.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18505.7\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18505.7\n- Microsoft.DotNet.Darc - 1.0.0-beta.18505.7\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18505.7\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18505.7"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8381860313","Type":"IssuesEvent","CreatedAt":"2018-10-08T04:34:38","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32681","RelatedDescription":"Closed issue \"Scaffolding Identity Deletes All Content in site.css and site.js\" (#32681) at dotnet/corefx","RelatedBody":"Each time I scaffold identity in a project by right-clicking the project and go to New... > Scaffolded Item and  and select Identity and add all pages I then find this deletes all content in site.css and site.js.\r\n\r\nAfter scaffolding site.js contains this code only:\r\n```\r\n// Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification\r\n// for details on configuring this project to bundle and minify static web assets.\r\n\r\n// Write your JavaScript code.\r\n\r\n```\r\n\r\nAnd site.css has this:\r\n```\r\n/* Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification\\ \r\nfor details on configuring this project to bundle and minify static web assets. */\r\nbody {\r\n    padding-top: 50px;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n/* Wrapping element */\r\n/* Set some basic padding to keep content from hitting the edges */\r\n.body-content {\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n}\r\n\r\n/* Carousel */\r\n.carousel-caption p {\r\n    font-size: 20px;\r\n    line-height: 1.4;\r\n}\r\n\r\n/* Make .svg files in the carousel display properly in older browsers */\r\n.carousel-inner .item img[src$=\".svg\"] {\r\n    width: 100%;\r\n}\r\n\r\n/* QR code generator */\r\n#qrCode {\r\n    margin: 15px;\r\n}\r\n\r\n/* Hide/rearrange for smaller screens */\r\n@media screen and (max-width: 767px) {\r\n    /* Hide captions */\r\n    .carousel-caption {\r\n        display: none;\r\n    }\r\n}\r\n```\r\n\r\nThis has happened to me a few times now and over the last 3 VS updates (at least) and I have only just tracked down the connection. Current version is 15.8.6.\r\n\r\nThe workaround is to take backups of these files and then overwrite changes back after scaffolding.\r\nAs I don't commit constantly I have lost a few changes each time so would be good if this bug could be fixed.\r\n\r\nRobin"},{"Id":"8381668081","Type":"IssuesEvent","CreatedAt":"2018-10-08T03:02:48","Actor":"dotnet-mc-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32686","RelatedDescription":"Opened issue \"Test failure: System.Tests.StringTests/Test_ToLower_Culture\" (#32686) at dotnet/corefx","RelatedBody":"Opened on behalf of @Sunny-pu\n\nThe test `System.Tests.StringTests/Test_ToLower_Culture` has failed.\n\nTimed out after 60000ms waiting for remote process 5096\\r\n    Expected: True\\r\n    Actual:   False\n\n        Stack Trace:\n\n           at System.Diagnostics.RemoteExecutorTestBase.RemoteInvokeHandle.Dispose(Boolean disposing) in E:\\A\\_work\\5\\s\\corefx\\src\\CoreFx.Private.TestUtilities\\src\\System\\Diagnostics\\RemoteExecutorTestBase.cs:line 362\n       at System.Diagnostics.RemoteExecutorTestBase.RemoteInvokeHandle.Dispose() in E:\\A\\_work\\5\\s\\corefx\\src\\CoreFx.Private.TestUtilities\\src\\System\\Diagnostics\\RemoteExecutorTestBase.cs:line 347\n       at System.Tests.StringTests.Test_ToLower_Culture() in E:\\A\\_work\\5\\s\\corefx\\src\\Common\\tests\\Tests\\System\\StringTests.cs:line 5095\nBuild : 3.0 - 20181008.01 (Core Tests)\nFailing configurations:\n- Windows.10.Nano.Amd64-x64\n  - Release\n\nDetails: https://mc.dot.net/#/product/netcore/30/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20181008.01/workItem/System.Memory.Tests/analysis/xunit/System.Tests.StringTests~2FTest_ToLower_Culture"},{"Id":"8381546696","Type":"IssuesEvent","CreatedAt":"2018-10-08T02:05:13","Actor":"mklement0","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32685","RelatedDescription":"Opened issue \"What is the rationale behind quietly ignoring Environment.SetEnvironmentVariable with targets User and Machine on Unix-like platforms?\" (#32685) at dotnet/corefx","RelatedBody":"_Persistently_ updating environment variables is (at least currently) only supported on _Windows_, which means passing the `User` and `Machine` enumeration values to `Environment.SetEnvironmentVariable` are _unsupported_ on macOS and Linux.\r\n\r\nSurprisingly, however, doing the latter doesn't cause an _exception_, but is _quietly ignored_ (an effective no-op).\r\n\r\nEven though this [behavior is documented](https://docs.microsoft.com/en-us/dotnet/api/system.environment.setenvironmentvariable?view=netcore-2.1#System_Environment_SetEnvironmentVariable_System_String_System_String_System_EnvironmentVariableTarget), I wonder:\r\n\r\n* what the rationale for this behavior is, given that as an API user you generally want to be notified of attempts to use functionality that is unsupported on a given platform.\r\n\r\n* whether the behavior can be changed.\r\n\r\n\r\n\r\n"},{"Id":"8381504657","Type":"IssuesEvent","CreatedAt":"2018-10-08T01:43:12","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32684","RelatedDescription":"Opened issue \"Proposal: IAsyncEnumerable.ConfigureAwait(bool continueOnCapturedContext)\" (#32684) at dotnet/corefx","RelatedBody":"Related to https://github.com/dotnet/corefx/issues/32640.\r\n\r\n**Background**\r\n\r\nWith the addition of `IAsyncEnumerable<T>`, developers will be able to write asynchronous foreach loops, e.g.\r\n```C#\r\nforeach async (T item in source)\r\n{\r\n    ProcessItem(item);\r\n}\r\n```\r\n\r\nThis loop expands by the compiler into the equivalent of:\r\n```C#\r\nIAsyncEnumerator<T> e = source.GetAsyncEnumerator();\r\ntry\r\n{\r\n    while (await e.MoveNextAsync())\r\n    {\r\n        T item = e.Current;\r\n        ProcessItem(item);\r\n    }\r\n}\r\nfinally\r\n{\r\n    await e.DisposeAsync();\r\n}\r\n```\r\n\r\nNote that as part of that expansion, the compiler introduced several `await`s not visible in the original source code (which is part of why a developer annotates the `foreach` as `foreach async`).  This introduces an issue, in that a developer now no longer has explicit syntactic control for that `await` operation, which means that there’s nowhere for a developer to append `ConfigureAwait(false)` if they want to prevent the `await` from grabbing the current context and scheduling the continuation back to it.  Our guidelines are that library code by default should use `ConfigureAwait(false)` on every `await`, so the lack of that here is problematic for library authors.\r\n\r\n**Proposal**\r\n\r\nAllow a developer to write:\r\n```C#\r\nforeach async (T item in source.ConfigureAwait(false))\r\n{\r\n    ProcessItem(item);\r\n}\r\n```\r\n\r\nThis would be achieved with an extension method as follows:\r\n```C#\r\nnamespace System.Collections.Generic\r\n{\r\n    public static class AsyncEnumerable\r\n    {\r\n        public static ConfiguredAsyncEnumerable<T> ConfigureAwait(this IAsyncEnumerable<T> source, bool continueOnCapturedContext);\r\n    }\r\n}\r\n\r\nnamespace System.Runtime.CompilerServices\r\n{\r\n    public struct ConfiguredAsyncEnumerable<T>\r\n    {\r\n        public Enumerator GetAsyncEnumerator();\r\n\r\n        public struct Enumerator\r\n        {\r\n            public ConfiguredValueTaskAwaitable<T> MoveNextAsync();\r\n            public T Current { get; }\r\n            public ConfiguredValueTaskAwaitable DisposeAsync();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBecause `foreach async` is able to bind by pattern, this `ConfiguredAsyncEnumerable<T>` can be `foreach async`’d, and the previously shown expansion will now how each of the `await`s operating on a `ConfiguredValueTaskAwaitable<T>` or `ConfiguredValueTaskAwaitable` instead of a `ValueTask<T>` or `ValueTask`.\r\n\r\n**Open issues:**\r\n-\t**Do we want this?** `foreach async` is just syntactic sugar for something a developer could otherwise write.  However, it’s really useful syntactic sugar, and forcing a developer that wants to iterate through an async enumerable in a library to expand it out manually seems wrong.\r\n-\t**Extension method type name and namespace**.  Presumably `AsyncEnumerable` is a nice name for a LINQ implementation to use.  Do we want to claim it for this?  But presumably it should also live in the same namespace as `IAsyncEnumerable<T>`, so that it’s always available when using that interface."},{"Id":"8381434198","Type":"PullRequestEvent","CreatedAt":"2018-10-08T01:02:04","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32683","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-27008-01 (master)\" (#32683) at dotnet/corefx","RelatedBody":""},{"Id":"8381282605","Type":"PullRequestEvent","CreatedAt":"2018-10-07T23:22:09","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32682","RelatedDescription":"Opened pull request \"Automatically copy runtime config files if executable\" (#32682) at dotnet/corefx","RelatedBody":"Requires https://github.com/dotnet/buildtools/pull/2181\r\nFixes https://github.com/dotnet/corefx/issues/20109"},{"Id":"8381215308","Type":"IssuesEvent","CreatedAt":"2018-10-07T22:36:02","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/19200","RelatedDescription":"Closed issue \"Add Desktop perf runs to our CoreFX infrastucture\" (#19200) at dotnet/corefx","RelatedBody":"Currently, if you specify the target group netfx performance tests fail to run.  We need to add this functionality."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8379546624","Type":"PullRequestEvent","CreatedAt":"2018-10-07T03:29:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6389","RelatedDescription":"Merged pull request \"Add ILC architecture document\" (#6389) at dotnet/corert","RelatedBody":"I've been working on this on and off for a while - I think I have something ready for review.\r\n\r\nThis is a high level architectural overview of CoreRT's native compiler.\r\n\r\n@dotnet-bot skip ci please\r\n\r\nCc @nattress @trylek @zamont @mattwarren "},{"Id":"8379221832","Type":"PullRequestEvent","CreatedAt":"2018-10-06T22:38:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6431","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6431) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @github-john-doe @GrabYourPitchforks @GrabYourPitchforks"},{"Id":"8378782660","Type":"PullRequestEvent","CreatedAt":"2018-10-06T17:45:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6431","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6431) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8377427075","Type":"IssuesEvent","CreatedAt":"2018-10-06T01:03:43","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6412","RelatedDescription":"Closed issue \"wasm: indexing into arrays with value type elements of width 2 bytes, e.g. char is incorrect\" (#6412) at dotnet/corert","RelatedBody":"In the WASM Program.cs add\r\n```\r\n        var str = \"123456\";\r\n        char[] chars = str.ToCharArray();\r\n        for (var i = 0; i < chars.Length; i++)\r\n        {\r\n            PrintLine(chars[i].ToString());\r\n        }\r\n```\r\nand it outputs:\r\n```\r\n1\r\n3\r\n5\r\n\r\n\r\n\r\n```\r\nIt appears to be losing every other character.  WASM=0 produces the same output as WASM=1."},{"Id":"8377427037","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:03:29","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Merged pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."},{"Id":"8375538674","Type":"PullRequestEvent","CreatedAt":"2018-10-05T16:44:01","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Opened pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."},{"Id":"8374402947","Type":"IssuesEvent","CreatedAt":"2018-10-05T13:35:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4558","RelatedDescription":"Closed issue \"CppCodeGen: AV in Enum.ToString()\" (#4558) at dotnet/corert","RelatedBody":"The runtime transpiled code in C++ for ToString looks like this:\r\n\r\n```c++\r\nnamespace System_Private_CoreLib { namespace System { class Object {\r\n    public:\r\n        static MethodTable * __getMethodTable();\r\n        intptr_t m_pEEType;\r\n\t\t\t\r\n    typedef ::System_Private_CoreLib::System::String*(*__slot__ToString)(::System_Private_CoreLib::System::Object*);\r\n\r\n    static __slot__ToString __getslot__ToString(void * pThis)\r\n    {\r\n        return (__slot__ToString)*((void **)(*((RawEEType **)pThis) + 1) + 0);\r\n    };\r\n...\r\n...\r\n}\r\n```\r\n\r\nGiven the following code:\r\n\r\n```c#\r\nusing System;\r\ninternal class Program\r\n{\r\n    enum State { On, Off }\r\n    private static void Main(string[] args)\r\n        => Console.WriteLine(State.On.ToString());\r\n}\r\n```\r\n\r\nwe get access violation when the getslot function tries to dereference `((RawEEType **)pThis)`, this part: `(*((RawEEType **)pThis) + 1)`.\r\n\r\nStacktrace:\r\n\r\n```powershell\r\nreproNativeCpp.exe!System_Private_CoreLib::System::Object::__getslot__ToString(void * pThis=0xcccccccc00000000) Line 7776\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!repro::Program::Main(__Array_A_::System_Private_CoreLib::System::String_V_ * args=0x0000029ce23128c0) Line 11\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!repro::_Module_::MainMethodWrapper(__Array_A_::System_Private_CoreLib::System::String_V_ * _a0=0x0000029ce23128c0)\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!repro::_Module_::StartupCodeMain(int _a0=1, __int64 _a1=2872806503888)\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__managed__Main(int _a0=1, __int64 _a1=2872806503888) Line 16707570\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!wmain(int argc=1, wchar_t * * argv=0x0000029ce09c75d0) Line 332\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!invoke_main() Line 91\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__scrt_common_main_seh() Line 283\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__scrt_common_main() Line 326\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!wmainCRTStartup() Line 17\tC++\tNon-user code. Symbols loaded.\r\nkernel32.dll!BaseThreadInitThunk()\tUnknown\tNon-user code. Symbols loaded.\r\nntdll.dll!RtlUserThreadStart()\tUnknown\tNon-user code. Symbols loaded.\r\n```"},{"Id":"8374376034","Type":"PullRequestEvent","CreatedAt":"2018-10-05T13:31:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6429","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6429) at dotnet/corert","RelatedBody":"Picks up the new tiering-related `MethodImpl` option added in dotnet/coreclr#20009.\r\n\r\nI went ahead and also implemented the `NoOptimization` `MethodImpl` option because it's related and we need to have it to ship anyway."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047894749867270145","CreatedAt":"2018-10-04T17:02:31+00:00","UserScreenname":"dotnet","Text":"Blogged -- Update on .NET Core 3.0 and .NET Framework 4.8 https://t.co/tBpJg3Eoc8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":319,"FavoriteCount":235,"RawContent":null},{"Id":"1047645317401735168","CreatedAt":"2018-10-04T00:31:22+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 has reached end of life https://t.co/FZTYietdMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":146,"FavoriteCount":174,"RawContent":null},{"Id":"1047579283579756544","CreatedAt":"2018-10-03T20:08:58+00:00","UserScreenname":"dotnet","Text":"https://t.co/Pt9ZGHYH8C","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":26,"RawContent":null},{"Id":"1047257170482536454","CreatedAt":"2018-10-02T22:49:01+00:00","UserScreenname":"dotnet","Text":"Hey developers! Let us help you on your journey to Azure. Check out these resources, e-books, and apply for assista… https://t.co/1QzIe9tWvn","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":72,"FavoriteCount":41,"RawContent":null}]}},"RunOn":"2018-10-08T05:30:31.982798Z","RunDurationInMilliseconds":6979}