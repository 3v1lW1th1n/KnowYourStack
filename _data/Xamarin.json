{"Data":{"Blog":{"FeedItems":[{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Appleâ€™s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8304421601","Type":"IssuesEvent","CreatedAt":"2018-09-21T21:07:01","Actor":"Nasby","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2213","RelatedDescription":"Opened issue \"Android toast while running multiple HybridWebViews\" (#2213) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Have two HybridWebViews inside two different ContentViews on a single tabbed page.\r\n2. Navigate through sites on either webview, going back and forth between the two.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nNo Android toast message giving web domain information.\r\n\r\n### Actual Behavior\r\nOn Android, a toast appears saying: \"Found multiple web domain: valid= https://sitename.com/, child= https://othersitename.com/\"\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.4\r\nVisualStudio.15.Release/15.8.4+28010.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual C++ 2017   00369-90250-38864-AA008\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.8-pre (009db7d)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.756 (d15-8@b66ff7180)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.221 (a73ca07f7)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.116 (9619170)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8304289983","Type":"PullRequestEvent","CreatedAt":"2018-09-21T20:37:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2210","RelatedDescription":"Merged pull request \"[xabuild] we don't need config file in stdout\" (#2210) at xamarin/xamarin-android","RelatedBody":"When we first implemented `xabuild.exe`, we though it was helpful to\r\nsee the configuration file that was used if the build failed.\r\n\r\nHowever, it mostly seems unnecessary now, since:\r\n- All variables used are printed in diagnostic or binary log files.\r\n  They show up as properties at the beginning of the build.\r\n- We are all much more accustomed to looking through binary log files\r\n  now anyway. Our build even saves them!\r\n\r\nI very much dislike having to scroll *way* up my console window when a\r\nbuild fails!\r\n\r\nHere is an example of what the output *used* to look like:\r\n\r\n    > .\\bin\\Debug\\bin\\xabuild /asdfsadfsdadf\r\n    Microsoft (R) Build Engine version 15.8.168+ga8fba1ebd7 for .NET Framework\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    MSBUILD : error MSB1001: Unknown switch.\r\n    Switch: /asdfsadfsdadf\r\n\r\n    For switch syntax, type \"MSBuild /help\"\r\n    MSBuildApp.Main exited with 1, xabuild configuration is:\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n      <configSections>\r\n        <section\r\n          name=\"msbuildToolsets\"\r\n          type=\"Microsoft.Build.Evaluation.ToolsetConfigurationSection, Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\r\n      </configSections>\r\n      <startup\r\n        useLegacyV2RuntimeActivationPolicy=\"true\">\r\n        <supportedRuntime\r\n          version=\"v4.0\"\r\n          sku=\".NETFramework,Version=v4.6\" />\r\n      </startup>\r\n      <runtime>\r\n        <AppContextSwitchOverrides\r\n          value=\"Switch.System.IO.UseLegacyPathHandling=false\" />\r\n        <DisableFXClosureWalk\r\n          enabled=\"true\" />\r\n        <generatePublisherEvidence\r\n          enabled=\"false\" />\r\n        <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Framework\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Conversion.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Tasks.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Utilities.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Engine\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Conversion.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <!-- Redirects for facade assemblies -->\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"System.IO.Compression\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b77a5c561934e089\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-4.1.2.0\"\r\n              newVersion=\"4.1.2.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"System.Runtime.InteropServices.RuntimeInformation\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\"\r\n              culture=\"neutral\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-4.0.1.0\"\r\n              newVersion=\"4.0.1.0\" />\r\n          </dependentAssembly>\r\n          <!-- Redirects for components dropped by Visual Studio -->\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Activities.Build\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"31bf3856ad364e35\" />\r\n            <bindingRedirect\r\n              oldVersion=\"4.0.0.0\"\r\n              newVersion=\"15.0.0.0\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\".\\amd64\\Microsoft.Activities.Build.dll\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"XamlBuildTask\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"31bf3856ad364e35\" />\r\n            <bindingRedirect\r\n              oldVersion=\"4.0.0.0\"\r\n              newVersion=\"15.0.0.0\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\".\\amd64\\XamlBuildTask.dll\" />\r\n          </dependentAssembly>\r\n          <!-- Workaround for crash in C++ CodeAnalysis scenarios due to https://github.com/Microsoft/msbuild/issues/1675 -->\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"FxCopTask\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\"..\\..\\Microsoft\\VisualStudio\\v15.0\\CodeAnalysis\\FxCopTask.dll\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.VisualStudio.CodeAnalysis\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\"..\\..\\Microsoft\\VisualStudio\\v15.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.dll\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.VisualStudio.CodeAnalysis.Sdk\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\"..\\..\\Microsoft\\VisualStudio\\v15.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll\" />\r\n          </dependentAssembly>\r\n        </assemblyBinding>\r\n      </runtime>\r\n      <!-- To define one or more new toolsets, add an 'msbuildToolsets' element in this file. -->\r\n      <msbuildToolsets\r\n        default=\"15.0\">\r\n        <toolset\r\n          toolsVersion=\"15.0\">\r\n          <property\r\n            name=\"AndroidNdkDirectory\"\r\n            value=\"C:\\Users\\myuser\\android-toolchain\\ndk\" />\r\n          <property\r\n            name=\"AndroidSdkDirectory\"\r\n            value=\"C:\\Users\\myuser\\android-toolchain\\sdk\" />\r\n          <property\r\n            name=\"TargetFrameworkRootPath\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild-frameworks\\\" />\r\n          <property\r\n            name=\"MonoAndroidToolsDirectory\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\" />\r\n          <property\r\n            name=\"NuGetRestoreTargets\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets\" />\r\n          <property\r\n            name=\"NuGetTargets\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets\" />\r\n          <property\r\n            name=\"NuGetProps\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.props\" />\r\n          <property\r\n            name=\"MSBuildToolsPath\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\" />\r\n          <property\r\n            name=\"MSBuildToolsPath32\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\" />\r\n          <property\r\n            name=\"MSBuildToolsPath64\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\" />\r\n          <property\r\n            name=\"MSBuildSDKsPath\"\r\n            value=\"$([MSBuild]::GetMSBuildSDKsPath())\" />\r\n          <property\r\n            name=\"FrameworkSDKRoot\"\r\n            value=\"$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\NETFXSDK\\4.6.1@InstallationFolder)\" />\r\n          <property\r\n            name=\"MSBuildRuntimeVersion\"\r\n            value=\"4.0.30319\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsPath\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework\\v$(MSBuildRuntimeVersion)\\\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsPath32\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework\\v$(MSBuildRuntimeVersion)\\\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsPath64\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework64\\v$(MSBuildRuntimeVersion)\\\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsRoot\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework\\\" />\r\n          <property\r\n            name=\"SDK35ToolsPath\"\r\n            value=\"$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.0A\\WinSDK-NetFx35Tools-x86', 'InstallationFolder', null, RegistryView.Registry32))\" />\r\n          <property\r\n            name=\"SDK40ToolsPath\"\r\n            value=\"$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\NETFXSDK\\4.6.1\\WinSDK-NetFx40Tools-x86', 'InstallationFolder', null, RegistryView.Registry32))\" />\r\n          <property\r\n            name=\"WindowsSDK80Path\"\r\n            value=\"$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.1@InstallationFolder)\" />\r\n          <property\r\n            name=\"VsInstallRoot\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\" />\r\n          <property\r\n            name=\"MSBuildToolsRoot\"\r\n            value=\"$(VsInstallRoot)\\MSBuild\" />\r\n          <property\r\n            name=\"MSBuildExtensionsPath\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\" />\r\n          <property\r\n            name=\"MSBuildExtensionsPath32\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\" />\r\n          <property\r\n            name=\"RoslynTargetsPath\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\" />\r\n          <!-- VC Specific Paths -->\r\n          <property\r\n            name=\"VCTargetsPath\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath)','$(VsInstallRoot)\\Common7\\IDE\\VC\\VCTargets\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath14\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath14)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath12\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath12)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\V120\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath11\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath11)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\V110\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath10\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath10)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\'))\" />\r\n          <property\r\n            name=\"AndroidTargetsPath\"\r\n            value=\"$(MSBuildExtensionsPath32)\\Microsoft\\MDD\\Android\\V150\\\" />\r\n          <property\r\n            name=\"iOSTargetsPath\"\r\n            value=\"$(MSBuildExtensionsPath32)\\Microsoft\\MDD\\iOS\\V150\\\" />\r\n          <projectImportSearchPaths>\r\n            <searchPaths\r\n              os=\"windows\">\r\n              <property\r\n                name=\"MSBuildExtensionsPath\"\r\n                value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild;$(MSBuildProgramFiles32)\\MSBuild\" />\r\n              <property\r\n                name=\"MSBuildExtensionsPath32\"\r\n                value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild;$(MSBuildProgramFiles32)\\MSBuild\" />\r\n              <property\r\n                name=\"MSBuildExtensionsPath64\"\r\n                value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild;$(MSBuildProgramFiles32)\\MSBuild\" />\r\n              <property\r\n                name=\"VSToolsPath\"\r\n                value=\"$(MSBuildProgramFiles32)\\MSBuild\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\" />\r\n            </searchPaths>\r\n          </projectImportSearchPaths>\r\n        </toolset>\r\n      </msbuildToolsets>\r\n    </configuration>\r\n\r\nNow it's much more pleasant:\r\n\r\n    > .\\bin\\Debug\\bin\\xabuild /asdfsadfsdadf\r\n    Microsoft (R) Build Engine version 15.8.168+ga8fba1ebd7 for .NET Framework\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    MSBUILD : error MSB1001: Unknown switch.\r\n    Switch: /asdfsadfsdadf\r\n\r\n    For switch syntax, type \"MSBuild /help\"\r\n\r\nAnd we can review build logs if we need more detail."},{"Id":"8304235443","Type":"PullRequestEvent","CreatedAt":"2018-09-21T20:24:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2187","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] use `--input-list` for CompileToDalvik.\" (#2187) at xamarin/xamarin-android","RelatedBody":"The `dx` tool has an additional argument `--input-list` which\r\ncan be used to provide a list of `.jar`, `.class` or `.zip`\r\nfiles to the tool.\r\n\r\nThis will help with reducing the length of the command line\r\non larger apps with allot of java references."},{"Id":"8303984367","Type":"PullRequestEvent","CreatedAt":"2018-09-21T19:29:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2211","RelatedDescription":"Merged pull request \"[Mono.Android-Tests] Improve AggregateException logging\" (#2211) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1180/testReport/junit/(root)/AndroidClientHandlerTests/Mono_Android_Tests__Xamarin_Android_NetTests_AndroidClientHandlerTests_Sanity_Tls_1_2_Url_WithMonoClientHandlerFails___Release/\r\n\r\n`AggregateException`, like `Exception`, can be ~anything, and\r\nrepresent an *actual failure* that needs to be fixed...or a\r\n(hopefully) transient network failure that will disappear the next\r\ntime the test is run.\r\n\r\nWhich brings us to\r\n`AndroidClientHandlerTests.Sanity_Tls_1_2_Url_WithMonoClientHandlerFails()`:\r\nthis test has been failing more often of late, but *we don't know\r\nwhy*.  Our *guess* is that it's a transient network failure, as\r\n*sometimes* the test works, but even if we assume that's the case,\r\nwe're still getting these \"failures\".\r\n\r\nHow do we fix the failures?  By detecting a transient network issue,\r\nand ignoring the test.\r\n\r\nHow do we detect a transient network issue?\r\n\r\nÂ¯\\_(ãƒ„)_/Â¯\r\n\r\nWhich is the problem: *presumably* there is an exception somewhere\r\nwithin the `AggregateException` which we could use to differentiate\r\nbetween an *actual* failure and a transient network failure, but\r\n*currently* we don't log exception thrown.  Meaning we have nothing to\r\nponder about or check.\r\n\r\nUpdate `AggregateException` use so that if we `Assert.Fail()`, we also\r\nlog the exception as part of the failure message."},{"Id":"8303742331","Type":"PullRequestEvent","CreatedAt":"2018-09-21T18:37:37","Actor":"EgorBo","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2212","RelatedDescription":"Closed pull request \"[DO-NOT-MERGE] bump mono 2018-08\" (#2212) at xamarin/xamarin-android","RelatedBody":"just a test attempt (I know there is https://github.com/xamarin/xamarin-android/pull/2048)"},{"Id":"8303650746","Type":"PullRequestEvent","CreatedAt":"2018-09-21T18:18:29","Actor":"EgorBo","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2212","RelatedDescription":"Opened pull request \"[DO-NOT-MERGE] bump mono 2018-08\" (#2212) at xamarin/xamarin-android","RelatedBody":"just a test attempt (I know there is https://github.com/xamarin/xamarin-android/pull/2048)"},{"Id":"8303301189","Type":"PullRequestEvent","CreatedAt":"2018-09-21T17:05:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2211","RelatedDescription":"Opened pull request \"[Mono.Android-Tests] Improve AggregateException logging\" (#2211) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1180/testReport/junit/(root)/AndroidClientHandlerTests/Mono_Android_Tests__Xamarin_Android_NetTests_AndroidClientHandlerTests_Sanity_Tls_1_2_Url_WithMonoClientHandlerFails___Release/\r\n\r\n`AggregateException`, like `Exception`, can be ~anything, and\r\nrepresent an *actual failure* that needs to be fixed...or a\r\n(hopefully) transient network failure that will disappear the next\r\ntime the test is run.\r\n\r\nWhich brings us to\r\n`AndroidClientHandlerTests.Sanity_Tls_1_2_Url_WithMonoClientHandlerFails()`:\r\nthis test has been failing more often of late, but *we don't know\r\nwhy*.  Our *guess* is that it's a transient network failure, as\r\n*sometimes* the test works, but even if we assume that's the case,\r\nwe're still getting these \"failures\".\r\n\r\nHow do we fix the failures?  By detecting a transient network issue,\r\nand ignoring the test.\r\n\r\nHow do we detect a transient network issue?\r\n\r\nÂ¯\\_(ãƒ„)_/Â¯\r\n\r\nWhich is the problem: *presumably* there is an exception somewhere\r\nwithin the `AggregateException` which we could use to differentiate\r\nbetween an *actual* failure and a transient network failure, but\r\n*currently* we don't log exception thrown.  Meaning we have nothing to\r\nponder about or check.\r\n\r\nUpdate `AggregateException` use so that if we `Assert.Fail()`, we also\r\nlog the exception as part of the failure message."},{"Id":"8303287704","Type":"PullRequestEvent","CreatedAt":"2018-09-21T17:02:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2162","RelatedDescription":"Merged pull request \"[linker] move StripEmbeddedLibraries into the linker\" (#2162) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1092\r\n\r\nThe `StripEmbeddedLibraries` MSBuild task can take 1-2 seconds, and it\r\nmainly removes `__AndroidLibraryProjects__.zip` from assemblies.\r\n\r\nIf we moved this to happen during linking, it has various benefits:\r\n- The linker already has every assembly opened and loaded.\r\n- We know if the linker is going to `Skip`/`Delete` an assembly, so we\r\n  can likewise skip it.\r\n- The linker writes all the assemblies out at the end, so we don't\r\n  have a second \"write\" step.\r\n\r\nChanges to make this happen:\r\n- Removed the `StripEmbeddedLibraries` MSBuild task and related\r\n  targets\r\n- Removed `$(_AndroidStripFlag)` from our targets, since it is no\r\n  longer used\r\n- Created a new `StripEmbeddedLibraries` linker step that runs late\r\n  during linking\r\n- Removed a `RemoveLibraryResourceZip` linker step, as it seemed to be\r\n  duplicative.\r\n\r\nI timed before and after with the Xamarin.Forms test project:\r\n\r\n    .\\bin\\Debug\\bin\\xabuild .\\tests\\Xamarin.Forms-Performance-Integration\\Droid\\Xamarin.Forms.Performance.Integration.Droid.csproj /p:Configuration=Release /t:Clean\r\n    .\\bin\\Debug\\bin\\xabuild .\\tests\\Xamarin.Forms-Performance-Integration\\Droid\\Xamarin.Forms.Performance.Integration.Droid.csproj /p:Configuration=Release /t:Build /bl\r\n\r\nBefore:\r\n\r\n     1233 ms  StripEmbeddedLibraries                     1 calls\r\n    14925 ms  LinkAssemblies                             1 calls\r\n\r\nAfter:\r\n\r\n    15437 ms  LinkAssemblies                             1 calls\r\n\r\nAs expected, `LinkAssemblies` will be slightly slower. But since\r\n`StripEmbeddedLibraries` is not called at all, we have a net gain of\r\naround 700ms.\r\n\r\nOnce this has been merged and working for `Release` builds, I plan to\r\ndo some further research to find out if running the new\r\n`StripEmbeddedLibraries` linker step will help for `Debug` builds. It\r\ncould be a net performance improvement, if the time taken to remove\r\nthese files improves deployment and app startup times."},{"Id":"8303287685","Type":"IssuesEvent","CreatedAt":"2018-09-21T17:02:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1092","RelatedDescription":"Closed issue \"Merge LinkAssemblies and StripEmbeddedLibraries tasks\" (#1092) at xamarin/xamarin-android","RelatedBody":"An idea: it might be possible to improve build time by implementing striping the embedded libraries as linker step. We already load all the assemblies in the linker, so we might just strip them at the same time as well.\r\n\r\n### Expected Behavior\r\n\r\nStrip embedded libraries in the linker. Possibly faster build times.\r\n\r\n### Actual Behavior\r\n\r\nStripping of embedded libraries is done as a separate target/task.\r\n"},{"Id":"8302238108","Type":"PullRequestEvent","CreatedAt":"2018-09-21T13:59:50","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2207","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix _CompileJava running too often\" (#2207) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2088\r\nContext: https://github.com/xamarin/xamarin-android/pull/2129\r\nContext: https://github.com/xamarin/xamarin-android/pull/2199\r\n\r\nIn 4deec52e, I fixed the #deletebinobj problem we discovered.\r\n\r\nHowever...\r\n\r\nI introduced a regression to incremental builds, I noticed that the\r\n`_CompileJava` target is now running on a second build with no\r\nchanges. Third build? oddly it gets skipped...\r\n\r\nIt seems to be due to our use of flag files:\r\n1. `_UpdateAndroidResgen` updates `R.cs.flag` and uses the file as an\r\n   output\r\n2. `_GenerateJavaDesignerForComponent` now uses `R.cs.flag` as an\r\n   input\r\n3. `_GenerateJavaStubs` *also* updates the timestamp on `R.cs.flag`.\r\n   This was added in 970da9ef, as a workaround for our two instances\r\n   of `ConvertResourcesCases`.\r\n4. `_GenerateJavaDesignerForComponent` will now run again on the next\r\n   build.\r\n\r\nSince 1886e6f1 eliminated the second call to `ConvertResourcesCases`,\r\nwe don't need to update `R.cs.flag` in no. 3 any longer.\r\n\r\nRemoving the call to `<Touch />` `R.cs.flag` in `_GenerateJavaStubs`\r\nfixed the issue, and I added some assertions in relevant tests to\r\ncheck that the `_CompileJava` and `_GenerateJavaDesignerForComponent`\r\ntargets aren't running on incremental builds."},{"Id":"8302167662","Type":"PullRequestEvent","CreatedAt":"2018-09-21T13:48:26","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2210","RelatedDescription":"Opened pull request \"[xabuild] we don't need config file in stdout\" (#2210) at xamarin/xamarin-android","RelatedBody":"When we first implemented `xabuild.exe`, we though it was helpful to\r\nsee the configuration file that was used if the build failed.\r\n\r\nHowever, it mostly seems unnecessary now, since:\r\n- All variables used are printed in diagnostic or binary log files.\r\n  They show up as properties at the beginning of the build.\r\n- We are all much more accustomed to looking through binary log files\r\n  now anyway. Our build even saves them!\r\n\r\nI very much dislike having to scroll *way* up my console window when a\r\nbuild fails!\r\n\r\nHere is an example of what the output *used* to look like:\r\n\r\n    > .\\bin\\Debug\\bin\\xabuild /asdfsadfsdadf\r\n    Microsoft (R) Build Engine version 15.8.168+ga8fba1ebd7 for .NET Framework\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    MSBUILD : error MSB1001: Unknown switch.\r\n    Switch: /asdfsadfsdadf\r\n\r\n    For switch syntax, type \"MSBuild /help\"\r\n    MSBuildApp.Main exited with 1, xabuild configuration is:\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n      <configSections>\r\n        <section\r\n          name=\"msbuildToolsets\"\r\n          type=\"Microsoft.Build.Evaluation.ToolsetConfigurationSection, Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\r\n      </configSections>\r\n      <startup\r\n        useLegacyV2RuntimeActivationPolicy=\"true\">\r\n        <supportedRuntime\r\n          version=\"v4.0\"\r\n          sku=\".NETFramework,Version=v4.6\" />\r\n      </startup>\r\n      <runtime>\r\n        <AppContextSwitchOverrides\r\n          value=\"Switch.System.IO.UseLegacyPathHandling=false\" />\r\n        <DisableFXClosureWalk\r\n          enabled=\"true\" />\r\n        <generatePublisherEvidence\r\n          enabled=\"false\" />\r\n        <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Framework\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Conversion.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Tasks.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Utilities.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Engine\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Build.Conversion.Core\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-99.9.9.9\"\r\n              newVersion=\"15.1.0.0\" />\r\n          </dependentAssembly>\r\n          <!-- Redirects for facade assemblies -->\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"System.IO.Compression\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b77a5c561934e089\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-4.1.2.0\"\r\n              newVersion=\"4.1.2.0\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"System.Runtime.InteropServices.RuntimeInformation\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\"\r\n              culture=\"neutral\" />\r\n            <bindingRedirect\r\n              oldVersion=\"0.0.0.0-4.0.1.0\"\r\n              newVersion=\"4.0.1.0\" />\r\n          </dependentAssembly>\r\n          <!-- Redirects for components dropped by Visual Studio -->\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.Activities.Build\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"31bf3856ad364e35\" />\r\n            <bindingRedirect\r\n              oldVersion=\"4.0.0.0\"\r\n              newVersion=\"15.0.0.0\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\".\\amd64\\Microsoft.Activities.Build.dll\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"XamlBuildTask\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"31bf3856ad364e35\" />\r\n            <bindingRedirect\r\n              oldVersion=\"4.0.0.0\"\r\n              newVersion=\"15.0.0.0\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\".\\amd64\\XamlBuildTask.dll\" />\r\n          </dependentAssembly>\r\n          <!-- Workaround for crash in C++ CodeAnalysis scenarios due to https://github.com/Microsoft/msbuild/issues/1675 -->\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"FxCopTask\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\"..\\..\\Microsoft\\VisualStudio\\v15.0\\CodeAnalysis\\FxCopTask.dll\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.VisualStudio.CodeAnalysis\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\"..\\..\\Microsoft\\VisualStudio\\v15.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.dll\" />\r\n          </dependentAssembly>\r\n          <dependentAssembly>\r\n            <assemblyIdentity\r\n              name=\"Microsoft.VisualStudio.CodeAnalysis.Sdk\"\r\n              culture=\"neutral\"\r\n              publicKeyToken=\"b03f5f7f11d50a3a\" />\r\n            <codeBase\r\n              version=\"15.0.0.0\"\r\n              href=\"..\\..\\Microsoft\\VisualStudio\\v15.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll\" />\r\n          </dependentAssembly>\r\n        </assemblyBinding>\r\n      </runtime>\r\n      <!-- To define one or more new toolsets, add an 'msbuildToolsets' element in this file. -->\r\n      <msbuildToolsets\r\n        default=\"15.0\">\r\n        <toolset\r\n          toolsVersion=\"15.0\">\r\n          <property\r\n            name=\"AndroidNdkDirectory\"\r\n            value=\"C:\\Users\\myuser\\android-toolchain\\ndk\" />\r\n          <property\r\n            name=\"AndroidSdkDirectory\"\r\n            value=\"C:\\Users\\myuser\\android-toolchain\\sdk\" />\r\n          <property\r\n            name=\"TargetFrameworkRootPath\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild-frameworks\\\" />\r\n          <property\r\n            name=\"MonoAndroidToolsDirectory\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\" />\r\n          <property\r\n            name=\"NuGetRestoreTargets\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets\" />\r\n          <property\r\n            name=\"NuGetTargets\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets\" />\r\n          <property\r\n            name=\"NuGetProps\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.props\" />\r\n          <property\r\n            name=\"MSBuildToolsPath\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\" />\r\n          <property\r\n            name=\"MSBuildToolsPath32\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\" />\r\n          <property\r\n            name=\"MSBuildToolsPath64\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\" />\r\n          <property\r\n            name=\"MSBuildSDKsPath\"\r\n            value=\"$([MSBuild]::GetMSBuildSDKsPath())\" />\r\n          <property\r\n            name=\"FrameworkSDKRoot\"\r\n            value=\"$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\NETFXSDK\\4.6.1@InstallationFolder)\" />\r\n          <property\r\n            name=\"MSBuildRuntimeVersion\"\r\n            value=\"4.0.30319\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsPath\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework\\v$(MSBuildRuntimeVersion)\\\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsPath32\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework\\v$(MSBuildRuntimeVersion)\\\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsPath64\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework64\\v$(MSBuildRuntimeVersion)\\\" />\r\n          <property\r\n            name=\"MSBuildFrameworkToolsRoot\"\r\n            value=\"$(SystemRoot)\\Microsoft.NET\\Framework\\\" />\r\n          <property\r\n            name=\"SDK35ToolsPath\"\r\n            value=\"$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.0A\\WinSDK-NetFx35Tools-x86', 'InstallationFolder', null, RegistryView.Registry32))\" />\r\n          <property\r\n            name=\"SDK40ToolsPath\"\r\n            value=\"$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\NETFXSDK\\4.6.1\\WinSDK-NetFx40Tools-x86', 'InstallationFolder', null, RegistryView.Registry32))\" />\r\n          <property\r\n            name=\"WindowsSDK80Path\"\r\n            value=\"$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.1@InstallationFolder)\" />\r\n          <property\r\n            name=\"VsInstallRoot\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\" />\r\n          <property\r\n            name=\"MSBuildToolsRoot\"\r\n            value=\"$(VsInstallRoot)\\MSBuild\" />\r\n          <property\r\n            name=\"MSBuildExtensionsPath\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\" />\r\n          <property\r\n            name=\"MSBuildExtensionsPath32\"\r\n            value=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\" />\r\n          <property\r\n            name=\"RoslynTargetsPath\"\r\n            value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\" />\r\n          <!-- VC Specific Paths -->\r\n          <property\r\n            name=\"VCTargetsPath\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath)','$(VsInstallRoot)\\Common7\\IDE\\VC\\VCTargets\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath14\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath14)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath12\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath12)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\V120\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath11\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath11)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\V110\\'))\" />\r\n          <property\r\n            name=\"VCTargetsPath10\"\r\n            value=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath10)','$([MSBuild]::GetProgramFiles32())\\MSBuild\\Microsoft.Cpp\\v4.0\\'))\" />\r\n          <property\r\n            name=\"AndroidTargetsPath\"\r\n            value=\"$(MSBuildExtensionsPath32)\\Microsoft\\MDD\\Android\\V150\\\" />\r\n          <property\r\n            name=\"iOSTargetsPath\"\r\n            value=\"$(MSBuildExtensionsPath32)\\Microsoft\\MDD\\iOS\\V150\\\" />\r\n          <projectImportSearchPaths>\r\n            <searchPaths\r\n              os=\"windows\">\r\n              <property\r\n                name=\"MSBuildExtensionsPath\"\r\n                value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild;$(MSBuildProgramFiles32)\\MSBuild\" />\r\n              <property\r\n                name=\"MSBuildExtensionsPath32\"\r\n                value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild;$(MSBuildProgramFiles32)\\MSBuild\" />\r\n              <property\r\n                name=\"MSBuildExtensionsPath64\"\r\n                value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild;$(MSBuildProgramFiles32)\\MSBuild\" />\r\n              <property\r\n                name=\"VSToolsPath\"\r\n                value=\"$(MSBuildProgramFiles32)\\MSBuild\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\" />\r\n            </searchPaths>\r\n          </projectImportSearchPaths>\r\n        </toolset>\r\n      </msbuildToolsets>\r\n    </configuration>\r\n\r\nNow it's much more pleasant:\r\n\r\n    > .\\bin\\Debug\\bin\\xabuild /asdfsadfsdadf\r\n    Microsoft (R) Build Engine version 15.8.168+ga8fba1ebd7 for .NET Framework\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    MSBUILD : error MSB1001: Unknown switch.\r\n    Switch: /asdfsadfsdadf\r\n\r\n    For switch syntax, type \"MSBuild /help\"\r\n\r\nAnd we can review build logs if we need more detail."},{"Id":"8302043696","Type":"PullRequestEvent","CreatedAt":"2018-09-21T13:26:44","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2158","RelatedDescription":"Merged pull request \"Added --classpath_entry for Desugar\" (#2158) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2143\r\nContext: https://github.com/xamarin/xamarin-android/issues/1639\r\n\r\nXamarin.Android's current implementation of desugar runs a command\r\nsuch as:\r\n\r\n    java -jar desugar_deploy.jar \r\n        --bootclasspath_entry ~\\android-toolchain\\sdk\\platforms\\android-28\\android.jar \r\n        --min_sdk_version 11 \r\n        --classpath_entry xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\mono.android.jar \r\n        --input Lambda.jar \r\n        --output obj\\Debug\\android\\bin\\desugared\\14-57-25-90-94-EE-16-09-B8-68-88-BC-9D-FC-6C-89Lambda.jar\r\n\r\nHowever, certain jars are failing with messages such as:\r\n\r\n    Exception in thread \"main\" java.lang.TypeNotPresentException: Type okhttp3.Interceptor not present\r\n\r\nOr another example:\r\n\r\n    Error: java.lang.TypeNotPresentException : Type io.reactivex.functions.Action not present\r\n\r\nThe first fix here is to add the `--classpath_entry` flag for every\r\n`--input`, for some reason `Desugar` is not treating `--input` jars as\r\nclasspath entries?\r\n\r\nNext, we expanded on the `BuildTest.Desugar` test using a complicated\r\nset of Java libraries from Maven central:\r\n\r\n    proj.OtherBuildItems.Add (new BuildItem (\"AndroidJavaLibrary\", \"okio-1.13.0.jar\") {\r\n        WebContent = \"http://central.maven.org/maven2/com/squareup/okio/okio/1.13.0/okio-1.13.0.jar\"\r\n    });\r\n    proj.OtherBuildItems.Add (new BuildItem (\"AndroidJavaLibrary\", \"okhttp-3.8.0.jar\") {\r\n        WebContent = \"http://central.maven.org/maven2/com/squareup/okhttp3/okhttp/3.8.0/okhttp-3.8.0.jar\"\r\n    });\r\n    proj.OtherBuildItems.Add (new BuildItem (\"AndroidJavaLibrary\", \"retrofit-2.3.0.jar\") {\r\n        WebContent = \"http://central.maven.org/maven2/com/squareup/retrofit2/retrofit/2.3.0/retrofit-2.3.0.jar\"\r\n    });\r\n    proj.OtherBuildItems.Add (new BuildItem (\"AndroidJavaLibrary\", \"converter-gson-2.3.0.jar\") {\r\n        WebContent = \"http://central.maven.org/maven2/com/squareup/retrofit2/converter-gson/2.3.0/converter-gson-2.3.0.jar\"\r\n    });\r\n    proj.OtherBuildItems.Add (new BuildItem (\"AndroidJavaLibrary\", \"gson-2.7.jar\") {\r\n        WebContent = \"http://central.maven.org/maven2/com/google/code/gson/gson/2.7/gson-2.7.jar\"\r\n    });\r\n    proj.OtherBuildItems.Add (new BuildItem (\"AndroidAarLibrary\", \"twitter-core-3.3.0.aar\") {\r\n        WebContent = \"http://repo.spring.io/libs-release/com/twitter/sdk/android/twitter-core/3.3.0/twitter-core-3.3.0.aar\",\r\n    });\r\n\r\nThis was working, as long as you had `android:minSdkVersion=\"24\"` in\r\nyour `AndroidManifest.xml`. This wasn't ideal if you wanted to run\r\nyour app on older API levels...\r\n\r\nLuckily, another command line switched solved this problem:\r\n\r\n    //Added to the Desugar MSBuild task\r\n    if (minApiVersion < 24) {\r\n        cmd.AppendSwitch(\"--desugar_try_with_resources_omit_runtime_classes \");\r\n    }\r\n\r\nWhat a crazy name for a flag! Documented by `desugar` as:\r\n\r\n    --[no]desugar_try_with_resources_omit_runtime_classes (a boolean; default: \"false\")\r\n        Omits the runtime classes necessary to support try-with-resources from the\r\n        output. This property has effect only if --\r\n        desugar_try_with_resources_if_needed is used.\r\n    --min_sdk_version (an integer; default: \"1\")\r\n        Minimum targeted sdk version.  If >= 24, enables default methods in\r\n        interfaces.\r\n\r\nThis makes sense that something would happen at API level 24...\r\n\r\nOnce doing this, the `Desugar` test passes without modifying\r\n`minSdkVersion`.\r\n\r\nThe expanded `Desugar` test will also greatly help with our D8/R8\r\nimplementation\r\n(https://github.com/xamarin/xamarin-android/issues/2040).\r\n\r\nThis complex set of Java dependencies from Maven will be useful."},{"Id":"8302043668","Type":"IssuesEvent","CreatedAt":"2018-09-21T13:26:44","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2143","RelatedDescription":"Closed issue \"Desugar Task should provide deps / --classpath_entry(s)\" (#2143) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Build an app project with some _binding library_\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n\r\n\r\ndesugar_deploy.jar desugaring _.jar_ with dependencies without exception\r\n\r\n### Actual Behavior\r\n\r\n**Desugar** entirely skips the _--classpath_entry_  dependencies for _.jar_ (or it's by design? please no) when desugar_deploy.jar  gets called, causing failures just like:\r\n\r\n`1>  Exception in thread \"main\" java.lang.TypeNotPresentException: Type okhttp3.Interceptor not present`\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nxa sdk 9.1.0.19\r\n\r\n### Fast repro + good scenario\r\n[xabug.zip](https://github.com/xamarin/xamarin-android/files/2351211/xabug.zip)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8307052152","Type":"PullRequestEvent","CreatedAt":"2018-09-23T03:17:30","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3876","RelatedDescription":"Opened pull request \"[All] Added preserve attribute to the view model class of UI test 39378\" (#3876) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded missing `Preserve` attribute to the existing test so the class members can be loaded properly. The issue was not just with the image source but also the background color of the containing grid.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #2306\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\nRun UI test 39378\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8306760835","Type":"IssuesEvent","CreatedAt":"2018-09-22T22:32:45","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3875","RelatedDescription":"Opened issue \"[Shell] Flyout menu items should start below my header, no matter how tall\" (#3875) at xamarin/Xamarin.Forms","RelatedBody":"https://github.com/xamarin/Xamarin.Forms/blob/ba229c0be7996e2604b5dd72a9a1edaf1daa4e3c/Xamarin.Forms.Platform.iOS/Renderers/ShellTableViewController.cs#L12\r\n\r\nWhen my header is taller than 200, the content overlaps the menu. Please position the menu below the header always. \r\n\r\n<img width=\"540\" alt=\"screenshot 2018-09-22 17 24 23\" src=\"https://user-images.githubusercontent.com/41873/45922296-722cb980-be8d-11e8-8880-dca2a3fbffdc.png\">\r\n\r\n```<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n       xmlns:views=\"clr-namespace:Movies.Views\"\r\n       xmlns:converters=\"clr-namespace:Movies.Converters;assembly=Movies\"\r\n       RouteScheme=\"https\"\r\n       RouteHost=\"movies.com\"\r\n       FlyoutHeaderBehavior=\"CollapseOnScroll\"\r\n       FlyoutBackgroundColor=\"{StaticResource MenuBackgroundColor}\"\r\n       x:Class=\"Movies.Shell\">\r\n    \r\n    <Shell.Resources>\r\n        <ResourceDictionary>\r\n\r\n            <!-- GENERAL COLORS -->\r\n            <Color x:Key=\"WhiteColor\">#FFFFFF</Color>\r\n            <Color x:Key=\"BlackColor\">#000000</Color>\r\n\r\n            <!-- THEME COLORS -->\r\n            <Color x:Key=\"AccentColor\">#F5C210</Color>\r\n            <Color x:Key=\"ToolbarColor\">#151C25</Color>\r\n            <Color x:Key=\"BackgroundColor\">#1E2634</Color>\r\n            <Color x:Key=\"DarkBackgroundColor\">#151C25</Color>\r\n            <Color x:Key=\"MenuBackgroundColor\">#44545C</Color>\r\n            \r\n            <!-- CONVERTERS -->\r\n            <converters:InverseBoolConverter x:Key=\"InverseBoolConverter\" />\r\n            <converters:MenuItemTypeConverter x:Key=\"MenuItemTypeConverter\" />\r\n            <converters:MovieImageConverter x:Key=\"MovieImageConverter\" /> \r\n            <converters:ReleaseDateConverter x:Key=\"ReleaseDateConverter\" />\r\n            <converters:ToUpperConverter x:Key=\"ToUpperConverter\" />\r\n            \r\n        </ResourceDictionary>\r\n    </Shell.Resources>\r\n    \r\n    <Shell.FlyoutHeader>\r\n        <ContentView HeightRequest=\"600\">\r\n            <StackLayout BackgroundColor=\"Black\" Orientation=\"Vertical\">\r\n                <Image Source=\"https://sec.ch9.ms/sessions/connect/T128.png\" \r\n                       HorizontalOptions=\"Fill\"\r\n                       VerticalOptions=\"Start\"\r\n                       Aspect=\"AspectFill\"/>\r\n                <StackLayout Spacing=\"6\" Padding=\"8\">\r\n                    <Label Text=\"David Ortinau\" TextColor=\"White\"></Label>\r\n                    <Label Text=\"david.ortinau@microsoft.com\" TextColor=\"White\"></Label>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </ContentView>\r\n    </Shell.FlyoutHeader>\r\n    \r\n    \r\n    <ShellItem Title=\"Discover\" Route=\"discover\" FlyoutIcon=\"movies_search.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:HomeView}\"  Icon=\"movies_search.png\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Movies\" Route=\"movies\" FlyoutIcon=\"movies_movie.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:MoviesView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"TV Shows\" Route=\"shows\" FlyoutIcon=\"movies_shows.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:ShowsView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Upcoming\" Route=\"upcoming\" FlyoutIcon=\"movies_upcoming.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:UpcomingView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Favourites\" Route=\"favourites\" FlyoutIcon=\"movies_favourites.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:MoviesView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Settings\" Route=\"settings\" FlyoutIcon=\"movies_settings.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:HomeView}\"/>\r\n    </ShellItem>\r\n    \r\n</Shell>\r\n```"},{"Id":"8305179991","Type":"IssuesEvent","CreatedAt":"2018-09-22T02:38:32","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3874","RelatedDescription":"Opened issue \"HasUnevenRows fires ItemAppearing for invisible screen items when the cell is an Image\" (#3874) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIf a ListView has cells that are made up of only Image instances (or wrapper layouts whose only content is an Image) and **HasUnevenRows** is set to true, then ItemAppearing will be fired for virtually every list item even if it does not appear on the screen. This is bad for scenarios involving infinite scrolling.\r\n\r\nRef: an old issue ([27845](https://bugzilla.xamarin.com/show_bug.cgi?id=27845)) that's been resolved.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached repro\r\n2. Observe that ItemAppearing is fired for dozens of items even though it should be fired only a few times upon page load\r\n\r\n### Reproduction Link\r\n\r\n[App2.zip](https://github.com/xamarin/Xamarin.Forms/files/2407434/App2.zip)\r\n"},{"Id":"8304856558","Type":"IssuesEvent","CreatedAt":"2018-09-21T23:20:51","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3836","RelatedDescription":"Closed issue \"[Android] Multiple spans laid out vertically aren't all displaying\" (#3836) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nIf you layout multiple spans vertically not all of them display on Android. This is most likely related to the changes with MaxLines\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Run Issue3525 in Control Gallery\r\n2.  You should see 4 lines of text\r\n3.  On Android you only see 2 lines of text\r\n\r\n### Expected Behavior\r\nAll 4 lines of text should be visible\r\n\r\n### Actual Behavior\r\nOnly 2 lines of text are visible\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3\r\n- Last known good version: 3.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n\r\n\r\n### Screenshots\r\n\r\n#### UWP\r\n![image](https://user-images.githubusercontent.com/5375137/45775424-f3294e00-bc0c-11e8-9578-bfcc38507773.png)\r\n\r\n#### Android\r\n![image](https://user-images.githubusercontent.com/5375137/45775438-fc1a1f80-bc0c-11e8-9f75-dbedf1d8a1e4.png)\r\n\r\n### Reproduction Link\r\nIssue3525 in the control gallery\r\n"},{"Id":"8304823190","Type":"IssuesEvent","CreatedAt":"2018-09-21T23:07:11","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3873","RelatedDescription":"Opened issue \"[Core] LogWarningsToApplicationOutput doesn't work because Debug.WriteLine doesn't work on release compiled packages\" (#3873) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThe changes made here\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/2911/files#diff-53e5e1990ef7edb7111d2ee76b8b3436R67\r\n\r\nDon't work because the Forms dlls are compiled as release so all Debug.* calls get stripped \r\n\r\nFrom dotpeek\r\n![image](https://user-images.githubusercontent.com/5375137/45909705-b00fdc00-bdc0-11e8-9d15-6c54fa27d362.png)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. create a project\r\n2. add forms 3.3\r\n3. setup an invalid binding\r\n4. nothing will get output about that\r\n\r\n\r\n### Expected Behavior\r\nInvalid binding should show up in debug output\r\n\r\n### Actual Behavior\r\nInvalid binding don't show up\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3\r\n- Last known good version: 3.3\r\n\r\n\r\n### Reproduction Link\r\n[BindingMessageErrors.zip](https://github.com/xamarin/Xamarin.Forms/files/2407274/BindingMessageErrors.zip)\r\n\r\n"},{"Id":"8304593581","Type":"IssuesEvent","CreatedAt":"2018-09-21T21:51:13","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3872","RelatedDescription":"Opened issue \"[UWP] TabStop additions cause a non interactive TabStop on Time Picker\" (#3872) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen tabbing through controls there's a non interactive part of the TimePicker that gets focused first before the actual control\r\n\r\n### Steps to Reproduce\r\n\r\n- Select the first entry field\r\n- hit tab\r\n- at this point you'll see nothing is focused\r\n- hit tab again and now the time picker will be focused\r\n\r\n```C#\r\n\t\t\tMainPage = new NavigationPage(\r\n\t\t\t\tnew ContentPage()\r\n\t\t\t\t{\r\n\t\t\t\t\tContent = new StackLayout()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tChildren =\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnew Entry(),\r\n\t\t\t\t\t\t\tnew TimePicker(),\r\n\t\t\t\t\t\t\tnew Entry()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n```\r\n\r\n### Expected Behavior\r\nWhen tabbing to the timepicker it should get focused by only hitting tab once\r\n\r\n### Actual Behavior\r\nIt takes two tabs to get to the time picker\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3\r\n- Last known good version: 3.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  16299 \r\n\r\n### Screenshots\r\n\r\nUsing the Live Visual tree you can track the focused element. The first element that gets focused  is non interactive\r\n\r\n![image](https://user-images.githubusercontent.com/5375137/45907648-075c7f00-bdb6-11e8-928d-089f4b346f3d.png)\r\n\r\nWhen you hit tab again then it focuses the interactive part of the control\r\n\r\n![image](https://user-images.githubusercontent.com/5375137/45907675-1a6f4f00-bdb6-11e8-8d26-a06174efe58d.png)\r\n\r\n\r\n### Reproduction Link\r\n[TabStopTimePicker.zip](https://github.com/xamarin/Xamarin.Forms/files/2407138/TabStopTimePicker.zip)\r\n\r\n"},{"Id":"8304371809","Type":"PullRequestEvent","CreatedAt":"2018-09-21T20:55:23","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3853","RelatedDescription":"Closed pull request \"1733\" (#3853) at xamarin/Xamarin.Forms","RelatedBody":""}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8304881831","Type":"PullRequestEvent","CreatedAt":"2018-09-21T23:31:32","Actor":"marcy8034","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4865","RelatedDescription":"Opened pull request \"miner\" (#4865) at xamarin/xamarin-macios","RelatedBody":"wer weis was"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackleâ€¦ https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":198,"FavoriteCount":105,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft isâ€¦ https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":93,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objecâ€¦ https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":44,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.â€¦ https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9â€¦ https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/â€¦ https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized byâ€¦ https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolutâ€¦ https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarinâ€¦ https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":87,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This yearâ€™s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learnâ€¦ https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes anâ€¦ https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;â€¦ https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this feâ€¦ https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-23T05:30:52.0719764Z","RunDurationInMilliseconds":5060}