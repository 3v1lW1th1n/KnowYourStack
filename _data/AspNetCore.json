{"Data":{"Blog":{"FeedItems":[{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null},{"Title":"Sharing Configuration in ASP.NET Core SPA Scenarios","PublishedOn":"2017-10-27T15:17:34+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"This is a guest post from Mike Rousos ASP.NET Core 2.0 recently released and, with it, came some new templates, including new project templates for single-page applications (SPA) served from an...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/27/sharing-configuration-in-asp-net-core-spa-scenarios/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7008741278","Type":"IssuesEvent","CreatedAt":"2017-12-19T16:38:01","Actor":"ColbyBurke","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2314","RelatedDescription":"Opened issue \"This site can’t be reached localhost refused to connect. (ASP.NET Core) + Angular + Swagger + SignalR\" (#2314) at aspnet/Home","RelatedBody":"Im getting the connection refused and I dont know why. Here is my \r\n**Startup.cs**\r\nnamespace AngularChat\r\n{\r\n    using AngularChat.Hubs;\r\n    using AngularChat.Services;\r\n    using AngularChat.Utils;\r\n    using Microsoft.AspNetCore.Builder;\r\n    using Microsoft.AspNetCore.Hosting;\r\n    using Microsoft.AspNetCore.Http;\r\n    using Microsoft.AspNetCore.Mvc;\r\n    using Microsoft.AspNetCore.Rewrite;\r\n    using Microsoft.AspNetCore.SpaServices.Webpack;\r\n    using Microsoft.Extensions.Configuration;\r\n    using Microsoft.Extensions.DependencyInjection;\r\n    using Microsoft.Extensions.Logging;\r\n    using Microsoft.Extensions.PlatformAbstractions;\r\n    using Swashbuckle.AspNetCore.Swagger;\r\n    using System.IO;\r\n\r\n    public sealed class Startup\r\n    {\r\n        public IConfigurationRoot Configuration { get; }\r\n\r\n        public Startup(IHostingEnvironment env)\r\n        {\r\n            var builder = new ConfigurationBuilder()\r\n                .SetBasePath(env.ContentRootPath)\r\n                .AddJsonFile(\"appsettings.json\", optional: true, reloadOnChange: true)\r\n                .AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true)\r\n                .AddEnvironmentVariables();\r\n            Configuration = builder.Build();\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n            app.UseAuthentication();\r\n\r\n            loggerFactory.AddConsole(Configuration.GetSection(\"Logging\"));\r\n            loggerFactory.AddDebug();\r\n\r\n            var options = new RewriteOptions()\r\n                .AddRedirectToHttps();\r\n\r\n            app.UseRewriter(options);\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseWebpackDevMiddleware(\r\n                    new WebpackDevMiddlewareOptions\r\n                    {\r\n                        HotModuleReplacement = true\r\n                    });\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseSignalR(routes => routes.MapHub<ChatHub>(\"/chathub\"));\r\n\r\n#if DEBUG\r\n\r\n            app.UseSwagger();\r\n            app.UseSwaggerUI(c =>\r\n            {\r\n                c.SwaggerEndpoint(\"/swagger/v1/swagger.json\", \"Chat API V1\");\r\n            });\r\n\r\n#endif\r\n\r\n            app.UseMvc(\r\n                routes =>\r\n                {\r\n                    routes.MapRoute(\r\n                        name: \"default\",\r\n                        template: \"{controller=Home}/{action=Index}/{id?}\");\r\n\r\n                    routes.MapSpaFallbackRoute(\r\n                        name: \"spa-fallback\",\r\n                        defaults: new\r\n                        {\r\n                            controller = \"Home\",\r\n                            action = \"Index\"\r\n                        });\r\n                });\r\n        }\r\n\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc();\r\n            services.AddSignalR();\r\n\r\n            services.AddAuthentication();\r\n\r\n            services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();\r\n\r\n            services.AddSingleton<ITimeService, TimeService>();\r\n            services.AddSingleton<IChatMessageStorage, ChatMessageStorage>();\r\n            services.AddSingleton<IChatMessageIdGenerator, ChatMessageIdGenerator>();\r\n            services.AddSingleton<INotificationService, NotificationService>();\r\n\r\n            services.AddScoped<IChatService, ChatService>();\r\n            services.AddScoped<IUserInfoProvider, UserInfoProvider>();\r\n\r\n            services.Configure<MvcOptions>(options =>\r\n            {\r\n                options.Filters.Add(new RequireHttpsAttribute());\r\n            });\r\n\r\n#if DEBUG\r\n\r\n            services.AddSwaggerGen(c =>\r\n            {\r\n                c.SwaggerDoc(\r\n                    \"v1\",\r\n                    new Info\r\n                    {\r\n                        Title = \"Chat API\",\r\n                        Version = \"v1\"\r\n                    });\r\n\r\n                var basePath = PlatformServices.Default.Application.ApplicationBasePath;\r\n                var xmlPath = Path.Combine(basePath, \"Web1.xml\");\r\n                c.IncludeXmlComments(xmlPath);\r\n            });\r\n\r\n#endif\r\n        }\r\n    }\r\n}"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7015917177","Type":"PullRequestEvent","CreatedAt":"2017-12-21T00:13:02","Actor":"natemcmaster","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1244","RelatedDescription":"Opened pull request \"Revert package version to 1.0.0-preview1 and update build tools\" (#1244) at aspnet/SignalR","RelatedBody":"Revert part of #https://github.com/aspnet/SignalR/pull/1172\r\n\r\nEnsure the NPM package matches the NuGet package versions\r\n\r\nAlso, updates to support generating a bill-of-materials. Part of https://github.com/aspnet/Universe/issues/679. Example output cc @muratg \r\n\r\n```xml\r\n<Build>\r\n  <Artifacts>\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.SignalR\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"2028713EB8D51A68F2F711F277231764F012B292FA2872A3395413423FEA80CE\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.SignalR\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"78E0C1793A6CE87AB448D89BDEDB521BB1E92394245444255B6296E21B895DE7\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Client.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Client\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"F1CE84FAD309076AD53075FEEDB06741198315C0995F128BDEC1A178426C56AB\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Client.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Client\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"A1405FD0670B193FDF841EED565F2F2F9951F0909C7E9156032BED8ED457FC26\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Client.Core.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Client.Core\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"E920A025DA127B754CCE084219356ABC629631CA47B708BD44BC4951829D5B04\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Client.Core.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Client.Core\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"330040A74FF4E08DA3C50F01A8C2EE887CCDB6CBE2D6905A4BD8E36BECBB50F2\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Common\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"EC50624B32148909D2DEBAEF4E3F66E0EEE0CB84439B79856FC51F46BB5890C6\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Common\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"78C67121C98363D18136B39E32E616CCF90803CEEF7EF529476DCBBD494742E7\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Core\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"88A8345828E22B8ABD5BB7C6C1EC96850D638B6CFB73FA19137849A547882D2A\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Core\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"BD82C41E408B5DE1955E3C983974DA0C0EB3EF3F4FE7218ED0F6CE3CB2EA37DE\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Redis.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Redis\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"B2F29F32E8963272366E4AD93CACC0AA443A772419A1405755F15966F69EB7C6\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.SignalR.Redis.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.SignalR.Redis\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"E82B2E14E221388C7ACC266AB4A57104B41EEDFF6EBFA81CE9D0824072C31118\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.Sockets\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"AD4055065F4288DE9EF24BA53FE96BFC325EAA0A660B5E8EB2C43C10FB8EFDEE\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.Sockets\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"9192F2A39C1E51BA6725DB26CE67C03B1699A51DFCC617F03AD1C57AFDF3E0A1\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Abstractions\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"EF19D7C8EEA07647373925AE3D68AEDFA9E56F78372C64DEB3CDCF2E9BBC48FD\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Abstractions\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"747F9FF3549E7C0F1A635EE3C3F6D426DA9A4E1F7F84E40B86BC885D7E346D69\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Client.Http\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"70F72BDA87804488268D48BE93D0902E41CD4C294CF8AD5714D2D3D8ADE2D8E0\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Client.Http\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"D3A9023B55E3FB952F8A55C0ED46DA962ECC5279E1E854A7EDC80DACCCA28E14\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Common.Http.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Common.Http\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"FD4DD2BAB86F351ADAAA554839DF40B469B644CD3FEC3AFFD03E143C2B14B766\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Common.Http.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Common.Http\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"ED3D8FC5480FFD5F5A52E0A0D7919D899CBECE4A652D05C649383C38D78A6AA2\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Type=\"NuGetPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Http\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"2C124596B35C82C3D982705277D1C0351433AF15FD5628979D13D5E2E1EB4973\" />\r\n    <Artifact Id=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.symbols.nupkg\" Type=\"NuGetSymbolsPackage\" PackageId=\"Microsoft.AspNetCore.Sockets.Http\" Version=\"1.0.0-preview1-t000\" TargetFramework=\"netstandard2.0\" SourceIncluded=\"true\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"EA524156E1C1A7AA3885DFA0B7722EF0A0F328779F5A9DB72A0411228C801F09\" />\r\n    <Artifact Id=\"aspnet-signalr-client-1.0.0-preview1-t000.tgz\" Type=\"NpmPackage\" PackageId=\"@aspnet/signalr-client\" Version=\"1.0.0-preview1-t000\" CommitHash=\"ac236efdae300ab2fab4adcefb97494c78ba1992\" FileHash=\"55FBFADC64AB3D6A313D7524AD1459FA5D4AE3879694B60E85A64D25268DA0A0\" />\r\n  </Artifacts>\r\n  <Dependencies>\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Client.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.SignalR.Client.Core.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Client.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Client.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.Logging.Console.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Client.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Client.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Client.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.Logging.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" Target=\"MsgPack.Cli.0.9.0-beta2.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" Target=\"Newtonsoft.Json.10.0.1.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" Target=\"System.Buffers.Primitives.0.1.0-e171206-2.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" Target=\"System.Memory.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" Target=\"System.Numerics.Vectors.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" Target=\"System.Runtime.CompilerServices.Unsafe.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Authorization.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.SignalR.Common.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.DependencyInjection.Abstractions.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.Logging.Abstractions.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Target=\"Newtonsoft.Json.10.0.1.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" Target=\"System.Reflection.Emit.4.3.0.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Redis.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.SignalR.Core.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Redis.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.Options.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.SignalR.Redis.1.0.0-preview1-t000.nupkg\" Target=\"StackExchange.Redis.StrongName.1.2.4.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Hosting.Abstractions.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.DependencyInjection.Abstractions.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.Logging.Abstractions.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Channels.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Tasks.Extensions.4.5.0-preview2-25707-02.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Http.Features.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Channels.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Tasks.Extensions.4.5.0-preview2-25707-02.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Abstractions.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Common.Http.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.Extensions.Logging.Abstractions.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"Newtonsoft.Json.10.0.1.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.IO.Pipelines.0.1.0-e171206-2.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.IO.Pipelines.Extensions.0.1.0-e171206-2.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Memory.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Numerics.Vectors.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Runtime.CompilerServices.Unsafe.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Channels.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Client.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Tasks.Extensions.4.5.0-preview2-25707-02.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Authorization.Policy.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Hosting.Abstractions.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Routing.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.Sockets.Common.Http.1.0.0-preview1-t000.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"Microsoft.AspNetCore.WebSockets.2.1.0-preview1-27776.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"Newtonsoft.Json.10.0.1.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Memory.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Channels.4.5.0-preview1-26006-06.nupkg\" />\r\n    <Link Source=\"Microsoft.AspNetCore.Sockets.Http.1.0.0-preview1-t000.nupkg\" Target=\"System.Threading.Tasks.Extensions.4.5.0-preview2-25707-02.nupkg\" />\r\n  </Dependencies>\r\n</Build>\r\n```"},{"Id":"7015890101","Type":"PullRequestEvent","CreatedAt":"2017-12-21T00:03:24","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1243","RelatedDescription":"Opened pull request \"Refactor HttpClient and use it in LongPollingTransport\" (#1243) at aspnet/SignalR","RelatedBody":"This refactors the HttpClient abstraction a bit and changes LongPollingTransport to use it. This will allow us to add better unit tests of the LongPolling transport. Next I'll look at a similar abstraction for WebSocket and EventSource so we can test all the transports.\r\n\r\nNote: I haven't actually added any new tests for LongPolling, but I added some tests for additional things.\r\n\r\nTo handle cancellation of Http requests, I whipped up my own version of [`AbortController` and friends](https://developer.mozilla.org/en-US/docs/Web/API/AbortController), an recently-specified JavaScript API that's similar to `CancellationTokenSource` and friends. Rather than doing it as a polyfill, since it's so simple, I don't even bother looking for the real one. It turns out that's a little tricky to do from within your own TypeScript module (since you have to mess with globals)."},{"Id":"7015877873","Type":"PullRequestEvent","CreatedAt":"2017-12-20T23:59:45","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1239","RelatedDescription":"Merged pull request \"Initial typescript tidy up\" (#1239) at aspnet/SignalR","RelatedBody":"This is a first pass at some of the tidy up items:\r\n\r\n* HttpConnection (and options)\r\n  * jwt bearer rename -> bearer token (got C# while I was at it)\r\n  * ~~onreceive and onclose should be methods and camelCase~~ see note below\r\n* HubConnection (and options)\r\n  * logging rename -> logger\r\n  * Ctor needs more overloads\r\n  * stop should be a promise.\r\n  * ~~camelCase onclose~~ see note below\r\n* Transports\r\n  * ~~onclose and onreceive should be camelCase~~ see note below\r\n  * Stop should be a promise\r\n\r\nNOTE: We were going to camelCase the events. However, the events on `WebSocket` and `EventSource` are **not** camelCased (see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket for example). Given that, I've changed my mind a bit and think it would be more consistent for us to not camelCase them. Open to discussion if people disagree, but either way we should just pick a style and stick with it.\r\n\r\nGoing through the TypeScript code, I have some larger concerns that we may need to address prior to Preview 1. The testing is very minimal and relies heavily on specific errors occurring to indicate that things are \"working\" because we don't have sufficient abstractions for WebSocket, EventSource or XMLHttpRequest in the transports. I'm going to work on some more significant changes when I've got these small tidy-up items done."},{"Id":"7015816795","Type":"PullRequestEvent","CreatedAt":"2017-12-20T23:37:08","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1242","RelatedDescription":"Opened pull request \"Invoke Multiple Connections\" (#1242) at aspnet/SignalR","RelatedBody":"Need suggestions with some of the naming 😄 "},{"Id":"7015518784","Type":"IssuesEvent","CreatedAt":"2017-12-20T22:07:47","Actor":"mattchidley","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1241","RelatedDescription":"Opened issue \"Client 1.0.0 Alpha2 Supported Browsers\" (#1241) at aspnet/SignalR","RelatedBody":"We are currently trying to build an app that uses SignalR on aspnet core. In a perfect world, our app would work all the way back to IE7. We have the app working on IE9 and above with the ES5 client.\r\n\r\nIs the current 1.0.0 alpha2 client supposed to be able to run on IE8 or IE7? I have been having issues getting it to run on these versions.\r\n\r\nOn the aspnet signalr docs in the Supported Platforms article, it states that SignalR will work using the Long Polling transport on IE 8+.\r\n\r\nWe are curious if any other developers have been trying to come up with a solution for this problem. We have tried ES5 shim with no success. We would like to avoid writing any custom client code if possible.\r\n\r\nWhich browsers & versions should the provided 1.0.0 Alpha2 client support?"},{"Id":"7014914345","Type":"IssuesEvent","CreatedAt":"2017-12-20T19:39:40","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1240","RelatedDescription":"Opened issue \"Consider using new `fetch` API in browsers instead of XHR\" (#1240) at aspnet/SignalR","RelatedBody":"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\r\n\r\nThere are polyfills out there for browsers and Node (but they are third-party dependencies). The main advantage is that fetch is Promise-based, which fits with TypeScript and our Promise-based API better. This would allow us to remove some of our manual callback-based code.\r\n\r\nThis wouldn't affect public API though, so it can happen after preview 1."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7016269832","Type":"PullRequestEvent","CreatedAt":"2017-12-21T02:31:23","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7151","RelatedDescription":"Merged pull request \"Add the Razor.Design dependency to MVC\" (#7151) at aspnet/Mvc","RelatedBody":""},{"Id":"7016171791","Type":"PullRequestEvent","CreatedAt":"2017-12-21T01:52:12","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7151","RelatedDescription":"Opened pull request \"Add the Razor.Design dependency to MVC\" (#7151) at aspnet/Mvc","RelatedBody":""},{"Id":"7014680775","Type":"IssuesEvent","CreatedAt":"2017-12-20T18:41:41","Actor":"muqeet-khan","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7150","RelatedDescription":"Opened issue \"FileStreamResult needs Read&Write permission?\" (#7150) at aspnet/Mvc","RelatedBody":"I am creating this issue because I am not sure if this was the case in previous versions, but, does FileStreamResult need read & write permission for IIS_IUSRS on the resource in order to be served?\r\n\r\n**Environment**\r\nVisual Studio - 15.5.2\r\nAspNetCore - 2.0.3\r\nPublished to IIS 8.5\r\n\r\n**Repro Project**\r\nI have a simple repro project that you can use and publish to IIS at https://github.com/muqeet-khan/VideoProcessingSample . All this project provides is the below code and a sample BigBunny mp4 video.\r\n\r\n1. I am not doing anything special. I am using` FileStreamResult` to serve a MP4.\r\n\r\n```\r\n         public IActionResult ServeVideo(string filename)\r\n        {\r\n            var fPath = Path.Combine(new string[] { \"Media\", filename });\r\n            var fullPath = Path.Combine(_appEnvironment.ContentRootPath, \"wwwroot\\\\\" + fPath);\r\n            return new FileStreamResult(new FileStream(fullPath, FileMode.Open), \"video/mp4\");\r\n        }\r\n```\r\n2. Upload a video to the Media folder and make sure it has Read permissions only. \r\n3. After publishing to IIS,\r\nhttp://IIS_Website/home/servevideo?filename=BigBuckBunny_320x180.mp4 -- Returns 500 with an exception.\r\n\r\n```\r\nfail: Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[0]\r\n      An unhandled exception has occurred: Access to the path 'MP4 Path' is denied.\r\nSystem.UnauthorizedAccessException: Access to the path 'MP4 Path' is denied.\r\n   at System.IO.FileStream.OpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at Sample.Controllers.HomeController.ServeVideo(String filename)\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.Extensions.MapWhenMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext()\r\n```\r\n\r\n\r\nHowever, http://IIS_Website/Media/BigBuckBunny_320x180.mp4 - **Static File Middleware** works just fine with just read permission.\r\n\r\n4. Give Read and Write permissions on the media file for IIS_IUSRS and the file will be served by the ServeVideo Action just fine. "}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7009436690","Type":"PullRequestEvent","CreatedAt":"2017-12-19T19:08:35","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1536","RelatedDescription":"Opened pull request \"[WIP] Move identity into an Area in a library (using Razor Pages)\" (#1536) at aspnet/Identity","RelatedBody":"This PR is just to show my WIP and identify mistakes while we finish the razor pages in areas feature"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7015592838","Type":"IssuesEvent","CreatedAt":"2017-12-20T22:27:41","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2231","RelatedDescription":"Opened issue \"Allow Unix Sockets on Windows\" (#2231) at aspnet/KestrelHttpServer","RelatedBody":"😮 https://blogs.msdn.microsoft.com/commandline/2017/12/19/af_unix-comes-to-windows/"},{"Id":"7011654196","Type":"IssuesEvent","CreatedAt":"2017-12-20T07:20:23","Actor":"jkotalik","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2230","RelatedDescription":"Opened issue \"Consume BindingAddress in ServerAddress \" (#2230) at aspnet/KestrelHttpServer","RelatedBody":"[HttpAbstractions has a new type](https://github.com/aspnet/HttpAbstractions/commit/150bb3faf413226d053777bbc72618fb284a6970) that will be consumed for using the IServerAddressFeature. Though Kestrel cannot remove the ServerAddress type, we can deprecate it and then start using the BindingAddress internally. Kestrel will also have to throw if the PathBase is set before consuming the type. "},{"Id":"7011431138","Type":"IssuesEvent","CreatedAt":"2017-12-20T05:59:01","Actor":"cibinmathewjose","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2229","RelatedDescription":"Opened issue \"Web API POST request is loo slow on accessing with machine name, works fine with localhost url\" (#2229) at aspnet/KestrelHttpServer","RelatedBody":"I have a HttpGet and HttpPost API Endpoints running on local machine, when i access the get endpoint with localhost url and machine name url both works fine. but for the POST endpoint it is working fine with localhost url but machine name url it is taking approximately 6 seconds. actually controller method is getting the request after 6 seconds only. I have profiled it and it looks like the issue is in Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf method see the screenshot below.\r\n\r\n![profile](https://user-images.githubusercontent.com/34702650/34193097-ee4fb098-e577-11e7-9c72-e63c25ea4c72.PNG)\r\n\r\n\r\nSome times the post request timeout with following stack trace.\r\nRequest timed out.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream.<ReadAsyncInternal>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.IO.StreamReader.<ReadBufferAsync>d__65.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.IO.StreamReader.<ReadToEndAsyncInternal>d__61.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at DataGrid.API.Controllers.DefaultRepositoryController.<GetResponse>d__13.MoveNext() in D:\\Work\\InfyPOS\\DataGrid_DotNetCore\\DataGrid\\DataGrid.API\\Controllers\\DefaultRepositoryController.cs:line 350\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at DataGrid.API.Controllers.DefaultRepositoryController.<Save>d__6.MoveNext() in D:\\Work\\InfyPOS\\DataGrid_DotNetCore\\DataGrid\\DataGrid.API\\Controllers\\DefaultRepositoryController.cs:line 185\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at DataGrid.API.RequestHandlerMiddleware.<Invoke>d__6.MoveNext() in D:\\Work\\InfyPOS\\DataGrid_DotNetCore\\DataGrid\\DataGrid.API\\Middleware\\RequestHandlerMiddleware.cs:line 62 in API : /DataGrid/product/Save\r\n"},{"Id":"7009545997","Type":"PullRequestEvent","CreatedAt":"2017-12-19T19:33:40","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2228","RelatedDescription":"Merged pull request \"Remove use of Dangerous* Span APIs and use MemoryMarshal instead \" (#2228) at aspnet/KestrelHttpServer","RelatedBody":"Reopening https://github.com/aspnet/KestrelHttpServer/pull/2222 to rebase.\r\n\r\nSee https://github.com/dotnet/corefx/issues/25412#issuecomment-352176634\r\n\r\n**Depends on a package update to aspnet/Universe to go through** - https://github.com/aspnet/Universe/pull/717\r\n\r\n> /home/travis/build/aspnet/KestrelHttpServer/benchmarks/Kestrel.Performance/Kestrel.Performance.csproj : error NU1102: Unable to find package System.Security.Cryptography.Cng with version (>= 4.5.0-preview1-26016-05) [/home/travis/build/aspnet/KestrelHttpServer/KestrelHttpServer.sln]\r\n\r\n- SignalR doesn't use DangerousGetPinnableReference or DangerousTryGetArray (these APIs will be removed/changed).\r\n- Kestrel doesn't use DangerousTryGetArray\r\n- I couldn't find any other aspnet repo that relied on these two APIs.\r\n\r\ncc @pakrym, @davidfowl, @BrennanConroy, @KrzysztofCwalina, @natemcmaster, @jkotas, @joshfree"},{"Id":"7008901400","Type":"PullRequestEvent","CreatedAt":"2017-12-19T17:08:13","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2222","RelatedDescription":"Closed pull request \"Remove use of Dangerous* Span APIs and use MemoryMarshal instead\" (#2222) at aspnet/KestrelHttpServer","RelatedBody":"See https://github.com/dotnet/corefx/issues/25412#issuecomment-352176634\r\n\r\n**Depends on a package update to aspnet/Universe to go through** - https://github.com/aspnet/Universe/pull/717\r\n\r\n> /home/travis/build/aspnet/KestrelHttpServer/benchmarks/Kestrel.Performance/Kestrel.Performance.csproj : error NU1102: Unable to find package System.Security.Cryptography.Cng with version (>= 4.5.0-preview1-26016-05) [/home/travis/build/aspnet/KestrelHttpServer/KestrelHttpServer.sln]\r\n\r\n- SignalR doesn't use DangerousGetPinnableReference or DangerousTryGetArray (these APIs will be removed/changed).\r\n- Kestrel doesn't use DangerousTryGetArray\r\n- I couldn't find any other aspnet repo that relied on these two APIs.\r\n\r\ncc @pakrym, @davidfowl, @BrennanConroy, @KrzysztofCwalina, @natemcmaster, @jkotas, @joshfree"},{"Id":"7008899755","Type":"PullRequestEvent","CreatedAt":"2017-12-19T17:07:56","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2228","RelatedDescription":"Opened pull request \"Remove use of Dangerous* Span APIs and use MemoryMarshal instead \" (#2228) at aspnet/KestrelHttpServer","RelatedBody":"Reopening https://github.com/aspnet/KestrelHttpServer/pull/2222 to rebase.\r\n\r\nSee https://github.com/dotnet/corefx/issues/25412#issuecomment-352176634\r\n\r\n**Depends on a package update to aspnet/Universe to go through** - https://github.com/aspnet/Universe/pull/717\r\n\r\n> /home/travis/build/aspnet/KestrelHttpServer/benchmarks/Kestrel.Performance/Kestrel.Performance.csproj : error NU1102: Unable to find package System.Security.Cryptography.Cng with version (>= 4.5.0-preview1-26016-05) [/home/travis/build/aspnet/KestrelHttpServer/KestrelHttpServer.sln]\r\n\r\n- SignalR doesn't use DangerousGetPinnableReference or DangerousTryGetArray (these APIs will be removed/changed).\r\n- Kestrel doesn't use DangerousTryGetArray\r\n- I couldn't find any other aspnet repo that relied on these two APIs.\r\n\r\ncc @pakrym, @davidfowl, @BrennanConroy, @KrzysztofCwalina, @natemcmaster, @jkotas, @joshfree"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7016044779","Type":"IssuesEvent","CreatedAt":"2017-12-21T01:02:35","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1567","RelatedDescription":"Closed issue \"Tag helpers highlight not updated when _ViewImport and page sources both visible\" (#1567) at aspnet/Razor","RelatedBody":"![](http://i.imgur.com/RF6DaOA.gif)"},{"Id":"7016015063","Type":"PullRequestEvent","CreatedAt":"2017-12-21T00:50:49","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1870","RelatedDescription":"Opened pull request \"Change TagHelperBlockRewriter's error usage to use RazorDiagnosticFactory.\" (#1870) at aspnet/Razor","RelatedBody":"- Changed `DefaultRazorDiagnostic` to expose a little more information for tests. This info is only available when casted to the `DefaultRazorDiagnostic` type and only available internally.\r\n- Changed parameter order of a `DefaultTagHelperTargetExtension` diagnostic.\r\n- Updated baselines of files in `Razor.Language.Test`.\r\n- Added a new convenience constructor on `SourceSpan`. The ctor is equivalent to calling the class with a SourceLocation.\r\n\r\n#1827\r\n\r\nFYI @mkArtakMSFT "},{"Id":"7015940745","Type":"PullRequestEvent","CreatedAt":"2017-12-21T00:21:42","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1869","RelatedDescription":"Opened pull request \"Ensure test apps use the same SDK as Razor\" (#1869) at aspnet/Razor","RelatedBody":"Fixes #1858"},{"Id":"7015905130","Type":"PullRequestEvent","CreatedAt":"2017-12-21T00:08:37","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1867","RelatedDescription":"Merged pull request \"Verify support for reporting errors using MSBuild\" (#1867) at aspnet/Razor","RelatedBody":"Resolves #1850"},{"Id":"7015905122","Type":"IssuesEvent","CreatedAt":"2017-12-21T00:08:36","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1850","RelatedDescription":"Closed issue \"Make sure our build tools can report errors to MSBuild\" (#1850) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6855974819","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:03:13","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Merged pull request \"Webapp landing page\" (#1063) at aspnet/Tooling","RelatedBody":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":1,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":37,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2017-12-21T05:30:13.0556441Z","RunDurationInMilliseconds":11166}