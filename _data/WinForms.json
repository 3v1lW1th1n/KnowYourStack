{"Data":{"GitHub":{"Issues":[{"Id":"402055191","IsPullRequest":true,"CreatedAt":"2019-01-23T03:29:59","Actor":"Tanya-Solyanik","Number":"346","RawContent":null,"Title":"deleting a duplicate pinvoke declaration for FreeLibrary","State":"open","Body":"minor code cleanup","Url":"https://github.com/dotnet/winforms/pull/346","RelatedDescription":"Open PR \"deleting a duplicate pinvoke declaration for FreeLibrary\" (#346)"},{"Id":"402037673","IsPullRequest":false,"CreatedAt":"2019-01-23T02:07:05","Actor":"hughbe","Number":"345","RawContent":null,"Title":"Menu.MergeMenu(null) throws NRE, should throw ANE","State":"open","Body":"Fixing in https://github.com/dotnet/winforms/pull/310","Url":"https://github.com/dotnet/winforms/issues/345","RelatedDescription":"Open issue \"Menu.MergeMenu(null) throws NRE, should throw ANE\" (#345)"},{"Id":"402037586","IsPullRequest":false,"CreatedAt":"2019-01-23T02:06:43","Actor":"hughbe","Number":"344","RawContent":null,"Title":"Menu.CloneMenu(null) throws NRE, should throw ANE","State":"open","Body":"Fixing in https://github.com/dotnet/winforms/pull/310","Url":"https://github.com/dotnet/winforms/issues/344","RelatedDescription":"Open issue \"Menu.CloneMenu(null) throws NRE, should throw ANE\" (#344)"},{"Id":"402036565","IsPullRequest":false,"CreatedAt":"2019-01-23T02:02:03","Actor":"hughbe","Number":"343","RawContent":null,"Title":"MenuItemCollection.Add(null) throws NRE, should throw ANE","State":"open","Body":"Fixing in https://github.com/dotnet/winforms/pull/310","Url":"https://github.com/dotnet/winforms/issues/343","RelatedDescription":"Open issue \"MenuItemCollection.Add(null) throws NRE, should throw ANE\" (#343)"},{"Id":"402007265","IsPullRequest":true,"CreatedAt":"2019-01-23T00:02:49","Actor":"AdamYoblick","Number":"342","RawContent":null,"Title":"Split build steps","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/342","RelatedDescription":"Closed or merged PR \"Split build steps\" (#342)"},{"Id":"401923475","IsPullRequest":true,"CreatedAt":"2019-01-22T23:23:58","Actor":"AdamYoblick","Number":"341","RawContent":null,"Title":"Split restore/build, test, and pack/sign/publish into their own steps","State":"closed","Body":"- The build step currently does restore, build, test, sign, pack, and publish\r\n- This can be difficult to troubleshoot on error at first glance\r\n- The PR splits these tasks into different physical yaml steps\r\n- This adds negligible build time since we still only restore and build once, we're just moving the other tasks into their own build steps","Url":"https://github.com/dotnet/winforms/pull/341","RelatedDescription":"Closed or merged PR \"Split restore/build, test, and pack/sign/publish into their own steps\" (#341)"},{"Id":"399593021","IsPullRequest":true,"CreatedAt":"2019-01-22T22:50:15","Actor":"AdamYoblick","Number":"323","RawContent":null,"Title":"disable unit tests for debug config","State":"closed","Body":"Fixes #277 \r\n\r\nThe problem is debug asserts are causing the xUnit runner to fail, but that failure doesn't show up as a real test failure in the debug config. So it's kind of a weird half failure that I'm not happy with. \r\n\r\nOne solution is to get rid of debug asserts completely, but we have too many of them. So the other solution is to not run unit tests for the debug config.\r\n\r\neng\\common\\CIBuild.cmd is part of the arcade sdk (so we can't modify it), and it passes -test by default. So there are two options:\r\n\r\n1. Pass -test:$False as an additional parameter, but only for the debug config (this is super ugly, because we're basically passing -test, then cancelling it out with -test:$False)\r\n2. Make a new CIBuild.cmd that is not part of arcade, with the -test omitted. Then we can add it -test when appropriate (as well as -integrationTest and -performanceTest, which are also supported)\r\n\r\nI opted for number 2 because it's cleaner. The downside is that we no longer reference the common arcade CIBuild.cmd, but that file is a one liner and hasn't changed in a very long time, so the risk is low.\r\n\r\nAnother benefit is now engineers can still write all the debug asserts they like without the risk of failing the CI build. So it's the best of both worlds. ","Url":"https://github.com/dotnet/winforms/pull/323","RelatedDescription":"Closed or merged PR \"disable unit tests for debug config\" (#323)"},{"Id":"400182018","IsPullRequest":false,"CreatedAt":"2019-01-22T20:05:37","Actor":"Marie-Shi","Number":"330","RawContent":null,"Title":"An error pops up when adding reference to Winforms .net core application","State":"closed","Body":"**OS:** RS4 x64\r\n**VS:** 16.0.0 Preview 3.0 [28516.179.d16.0stg]\r\n**.NET SDK:** .NET Core 3.0.100-preview-010110\r\n\r\n**More info:** This issue cannot repro on Console and Class library .net core applications.\r\n\r\n**Steps to Reproduce:**\r\n\r\n1.\tInstall .NET Core 3.0 SDK available from https://github.com/dotnet/core-sdk.\r\n2.\tCreate a Winforms .Net Core application by command: dotnet new winforms –o “xxx”.\r\n3.\tOpen the project and right click ‘Dependencies’ to choose ‘Add Reference’.\r\n4.\tClick ‘Browser’ button to choose *.dll(e.g.: System.Windows.Forms.dll) from C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\3.0.0-preview-27315-14, then click ‘OK’ button.\r\n\r\n**Actual:**\r\nAn error pops up. Please see the below screenshot:\r\n![image](https://user-images.githubusercontent.com/45864017/51307148-efea8580-1a79-11e9-8cfe-a71fc641e2ec.png)\r\nException log:\r\n[Add_Reference_CallStack.txt](https://github.com/dotnet/winforms/files/2767980/Add_Reference_CallStack.txt)\r\n\r\n**Expected:**\r\nSystem.Windows.Forms.dll can be added successfully.","Url":"https://github.com/dotnet/winforms/issues/330","RelatedDescription":"Closed issue \"An error pops up when adding reference to Winforms .net core application\" (#330)"},{"Id":"400186147","IsPullRequest":false,"CreatedAt":"2019-01-22T19:49:20","Actor":"Marie-Shi","Number":"331","RawContent":null,"Title":"An error pops up when adding new items(Form, Winforms UserControl…) to Winforms .net core application","State":"closed","Body":"**OS:** RS4 x64\r\n**VS:** 16.0.0 Preview 3.0 [28516.179.d16.0stg]\r\n**.NET SDK:** .NET Core 3.0.100-preview-010110\r\n\r\n**More info:** This issue cannot repro on Winforms .net Framework application.\r\n\r\n**Steps to Reproduce:**\r\n1.\tInstall .NET Core 3.0 SDK available from https://github.com/dotnet/core-sdk.\r\n2.\tCreate a Winforms .Net Core application by command: dotnet new winforms –o “xxx”.\r\n3.\tOpen the project and right click project to choose ‘Add’, then click ‘New Item’ to choose Windows Form/Winforms User Control..\r\n\r\n**Actual:**\r\nAn error pops up. Please see the below screenshot:\r\n![image](https://user-images.githubusercontent.com/45864017/51308762-d2b7b600-1a7d-11e9-94b6-2e3a9e375af9.png)\r\nException log:\r\n[Add_Form_CallStack.txt](https://github.com/dotnet/winforms/files/2767970/Add_Form_CallStack.txt)\r\n\r\n\r\n**Expected:**\r\nA new form/User Control can be added successfully in this project.","Url":"https://github.com/dotnet/winforms/issues/331","RelatedDescription":"Closed issue \"An error pops up when adding new items(Form, Winforms UserControl…) to Winforms .net core application\" (#331)"},{"Id":"401171782","IsPullRequest":false,"CreatedAt":"2019-01-22T19:44:12","Actor":"Jessie-Zhang01","Number":"339","RawContent":null,"Title":"The height of the \"DropDown\" list for the combobox control can't be reset default height after called the \" comboBox1.Items.Clear();\" method","State":"closed","Body":"**OS** : RS4 X64+.Net 4.8.03316\r\n**VS** : Dev16 d16.0stg 16.0 Preview 3 28505.103\r\n\r\n**More info:**\r\n1. This issue can reproduce from VS Dev10 to Dev16.  \r\n2. This issue can't reproduce when adding the following code to Form1.Designer.cs.\r\n```\r\ncomboBox1.Items.AddRange(new object[] { \"a\", \"b\", \"c\", \"d\", \"e\" });\r\ncomboBox1.Items.Clear();\r\n```\r\n**Steps to reproduce:**\r\n1. Create a Winforms application.\r\n2. Drag a Combobox control to form designer.\r\n3. Add the following code to Form1.cs.\r\n ```\r\nprivate void Form1_Load(object sender, EventArgs e)\r\n        {\r\n comboBox1.Items.AddRange(new object[] { \"a\", \"b\", \"c\", \"d\", \"e\" });\r\n           comboBox1.Items.Clear();\r\n}\r\n```\r\n**Actual:**\r\nThe height of the \"DropDown\" list for the combobox control can't be reset default height after called the \" comboBox1.Items.Clear();\" method.\r\n![image](https://user-images.githubusercontent.com/45864649/51449528-6b448380-1d67-11e9-9549-e6e17359c988.png)\r\n\r\n**Expected:** \r\nThe height of the \"DropDown\" list for the combobox control should be reset default height after called the \" comboBox1.Items.Clear();\" method.\r\n![image](https://user-images.githubusercontent.com/45864649/51449518-61bb1b80-1d67-11e9-8240-5ab5d7b5f8ae.png)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/339","RelatedDescription":"Closed issue \"The height of the \"DropDown\" list for the combobox control can't be reset default height after called the \" comboBox1.Items.Clear();\" method\" (#339)"},{"Id":"401923285","IsPullRequest":false,"CreatedAt":"2019-01-22T19:43:27","Actor":"ericstj","Number":"340","RawContent":null,"Title":"WinForms needs to remove System.Drawing.Design.Primitives","State":"open","Body":"**Problem description:**\r\nhttps://github.com/dotnet/corefx/pull/33452 removed the System.Drawing.Design.Primitives assembly from CoreFx with the POR that the types would be added to WinForms.  When this happened it was too close to Preview1 so we delayed these moves.   It looks like that work was never resumed after Preview1.\r\n\r\n\r\n**Actual behavior:** \r\nOld copy of System.Drawing.Design.Primitives.dll in the desktop shared framework.\r\n\r\n**Expected behavior:**\r\nNo old copy of System.Drawing.Design.Primitives.dll in the shared framework.\r\n\r\n**Minimal repro:**\r\nInstall latest SDK and examine \"C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\3.0.0-preview-27318-3\\System.Drawing.Design.Primitives.dll\"\r\n\r\nThe fix for this should be to add the API for this assembly to WinForms, remove all uses of System.Drawing.Design.Primitives in this repository, then remove the redistribution of that dll from dotnet-trusted once WinForms change flows in.\r\n\r\n/cc @dreddy-work @AdamYoblick \r\n","Url":"https://github.com/dotnet/winforms/issues/340","RelatedDescription":"Open issue \"WinForms needs to remove System.Drawing.Design.Primitives\" (#340)"},{"Id":"400993920","IsPullRequest":true,"CreatedAt":"2019-01-22T17:37:33","Actor":"dotnet-maestro[bot]","Number":"336","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19068.4\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19069.2\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19070.2\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19070.2\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/336","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#336)"},{"Id":"400996981","IsPullRequest":true,"CreatedAt":"2019-01-19T13:41:03","Actor":"kevingosse","Number":"338","RawContent":null,"Title":"Remove SuppressUnmanagedCodeSecurityAttribute","State":"open","Body":"Remove SuppressUnmanagedCodeSecurityAttribute as it's always activated in .net core\r\nAlso remove associated warnings.\r\n\r\nContributes to https://github.com/dotnet/winforms/issues/40","Url":"https://github.com/dotnet/winforms/pull/338","RelatedDescription":"Open PR \"Remove SuppressUnmanagedCodeSecurityAttribute\" (#338)"},{"Id":"400996171","IsPullRequest":true,"CreatedAt":"2019-01-19T13:31:00","Actor":"kevingosse","Number":"337","RawContent":null,"Title":"Remove usages of WebPermission","State":"open","Body":"Contributes to https://github.com/dotnet/winforms/issues/40","Url":"https://github.com/dotnet/winforms/pull/337","RelatedDescription":"Open PR \"Remove usages of WebPermission\" (#337)"},{"Id":"400716458","IsPullRequest":true,"CreatedAt":"2019-01-18T18:07:36","Actor":"dotnet-maestro[bot]","Number":"334","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19067.6\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/334","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#334)"},{"Id":"400724618","IsPullRequest":true,"CreatedAt":"2019-01-18T18:05:18","Actor":"dotnet-maestro[bot]","Number":"335","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19067.6\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19067.6\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview.19067.6\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19067.6\r\n- System.Security.Cryptography.Cng - 4.6.0-preview.19067.6\r\n- System.Security.Permissions - 4.6.0-preview.19067.6\r\n- System.Drawing.Common - 4.6.0-preview.19067.6\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/335","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#335)"},{"Id":"400268313","IsPullRequest":true,"CreatedAt":"2019-01-17T17:27:49","Actor":"dotnet-maestro[bot]","Number":"332","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19066.1\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/332","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#332)"},{"Id":"400278898","IsPullRequest":true,"CreatedAt":"2019-01-17T17:25:52","Actor":"dotnet-maestro[bot]","Number":"333","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19066.2\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview.19066.2\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19066.2\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19066.2\r\n- System.Security.Cryptography.Cng - 4.6.0-preview.19066.2\r\n- System.Security.Permissions - 4.6.0-preview.19066.2\r\n- System.Drawing.Common - 4.6.0-preview.19066.2\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/333","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#333)"},{"Id":"400135055","IsPullRequest":false,"CreatedAt":"2019-01-17T06:57:16","Actor":"NarryG","Number":"329","RawContent":null,"Title":"Setting the Maximum value on a Trackbar to a very large number results in excessive memory usage","State":"open","Body":"* .NET Core Version: 3.0 Preview1\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**  \r\nSetting the MaxValue on the Trackbar control to a very high number results in excessive ram usage (in the gigabytes for a very large number).  \r\n\r\nThis appears to be because on initialization of the underlying windows control, the maximum is set before the tick mark frequency, resulting in it initializing excessive amounts of tickmarks, although I do not have the build configuration to verify this theory myself at this time as if I did, I would just verify and submit this as a PR.\r\nhttps://github.com/dotnet/winforms/blob/01eef03d8e0a6630076716b6cb08ed0a9def611a/src/System.Windows.Forms/src/System/Windows/Forms/TrackBar.cs#L893-L894\r\n\r\n**Actual behavior:** \r\nExcessive ram is used (multiple gigabytes if compiled in x64)\r\n\r\n**Expected behavior:**\r\nA reasonable amount of ram is used (assuming you set tickmarks to a reasonable number).\r\n\r\n**Minimal repro:**  \r\nWithin a form\r\n```\r\nTrackBar tb = new TrackBar();\r\ntb.TickFrequency = 0; //Ensure no tickmarks should be drawn\r\ntb.Maximum = 1000000000;\r\nthis.Controls.Add(tb);\r\n```","Url":"https://github.com/dotnet/winforms/issues/329","RelatedDescription":"Open issue \"Setting the Maximum value on a Trackbar to a very large number results in excessive memory usage\" (#329)"},{"Id":"398919472","IsPullRequest":false,"CreatedAt":"2019-01-17T00:36:02","Actor":"creativbox","Number":"317","RawContent":null,"Title":"VisualStyleRenderer.IsSupported returns false when a dialog is shown on Windows 10 v1809","State":"closed","Body":"* Have you experienced this same bug with .NET Framework?\r\nYes\r\n\r\n**Problem description:**\r\nThe parent window does not render with styles on Windows 10 v1809 when an open or save file dialog is shown.\r\n\r\nThe native UXTheme function GetThemeAppProperties returns additional flags on Windows 10 v1809 if an dialog is opened (e.g. OpenFileDialog). The same flags are returned by the managed wrapper property Application.VisualStyleState. \r\nThis causes the VisualStyleRenderer.IsSupported property to return false instead of true, because it does not check the return value of Application.VisualStyleState correctly:\r\n```\r\nbool supported =  (VisualStyleInformation.IsEnabledByUser &&\r\n    (Application.VisualStyleState == VisualStyleState.ClientAreaEnabled ||\r\n    Application.VisualStyleState == VisualStyleState.ClientAndNonClientAreasEnabled));\r\n```\r\nThis check should consider additional flags (the VisualStyleState enum should be decorated with FlagsAttribute too).\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/317","RelatedDescription":"Closed issue \"VisualStyleRenderer.IsSupported returns false when a dialog is shown on Windows 10 v1809\" (#317)"},{"Id":"399574582","IsPullRequest":true,"CreatedAt":"2019-01-17T00:34:58","Actor":"dreddy-work","Number":"322","RawContent":null,"Title":"VisualStyleState check is now converted in to bit-wise.","State":"closed","Body":"Fixing GitHub issue #317. VisualstyleState was a numeric check that is broken in latest windows  version (where it added a new flag to its Enum).  Changing the state validation to bit-wise to fix it.\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/322","RelatedDescription":"Closed or merged PR \"VisualStyleState check is now converted in to bit-wise.\" (#322)"},{"Id":"399973207","IsPullRequest":true,"CreatedAt":"2019-01-16T20:01:59","Actor":"AdamYoblick","Number":"328","RawContent":null,"Title":"Redo of \"Use system hand cursor\"","State":"open","Body":"Redo of #138 ","Url":"https://github.com/dotnet/winforms/pull/328","RelatedDescription":"Open PR \"Redo of \"Use system hand cursor\"\" (#328)"},{"Id":"399970929","IsPullRequest":true,"CreatedAt":"2019-01-16T20:00:16","Actor":"AdamYoblick","Number":"327","RawContent":null,"Title":"Revert \"Use system hand cursor\"","State":"closed","Body":"Reverts dotnet/winforms#138 because tests are failing the build","Url":"https://github.com/dotnet/winforms/pull/327","RelatedDescription":"Closed or merged PR \"Revert \"Use system hand cursor\"\" (#327)"},{"Id":"399927413","IsPullRequest":true,"CreatedAt":"2019-01-16T18:45:39","Actor":"zsd4yr","Number":"325","RawContent":null,"Title":"Fix for broken relative links in README","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/325","RelatedDescription":"Closed or merged PR \"Fix for broken relative links in README\" (#325)"},{"Id":"399496441","IsPullRequest":true,"CreatedAt":"2019-01-16T18:33:31","Actor":"AdamYoblick","Number":"320","RawContent":null,"Title":"Add corefx packages as dependencies","State":"closed","Body":"Performed the following steps:\r\n\r\n1. Added a maestro subscription from corefx -> winforms with `darc add-subscription --channel \".NET Core 3 Dev\" --source-repo https://github.com/dotnet/corefx --target-repo https://github.com/dotnet/winforms --target-branch master --update-frequency everyDay --ignore-checks WIP,license/cla --all-checks-passed -q`. Verified the subscription exists by running `darc get-subscriptions`\r\n\r\n2. Downloaded the corefx asset manifest from `https://dnceng.visualstudio.com/_apis/resources/Containers/935206?itemPath=BuildAssetsManifest%2Fcorefx-20190109.7.xml`\r\n\r\n3. For each package in our Versions.props that matches a corefx output in the AssetManifest from the previous step, create a dependency in Version.Details.xml\r\n\r\n4. Ran `darc update-dependencies -c \".NET Core 3 Dev\"` to get the package versions to latest and ensure the dependencies flow correctly.\r\n\r\n5. Updated the coresdk to the version used in wpf (since they did the corefx work before us). See https://github.com/dotnet/wpf/pull/254\r\n\r\n6. Tested locally with .\\build -test","Url":"https://github.com/dotnet/winforms/pull/320","RelatedDescription":"Closed or merged PR \"Add corefx packages as dependencies\" (#320)"},{"Id":"399799611","IsPullRequest":true,"CreatedAt":"2019-01-16T18:33:07","Actor":"dotnet-maestro[bot]","Number":"324","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19065.6\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/324","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#324)"},{"Id":"399932063","IsPullRequest":true,"CreatedAt":"2019-01-16T18:11:32","Actor":"zsd4yr","Number":"326","RawContent":null,"Title":"Doc/zadanz/more broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/326","RelatedDescription":"Closed or merged PR \"Doc/zadanz/more broken links\" (#326)"},{"Id":"399523733","IsPullRequest":false,"CreatedAt":"2019-01-15T20:34:01","Actor":"kevingosse","Number":"321","RawContent":null,"Title":"Delete obsolete ResourceConsumption/ResourceExposure attributes","State":"open","Body":"Those attributes are present in a few places in the code and can be probably removed (see https://github.com/dotnet/corefx/pull/30863).","Url":"https://github.com/dotnet/winforms/issues/321","RelatedDescription":"Open issue \"Delete obsolete ResourceConsumption/ResourceExposure attributes\" (#321)"},{"Id":"399335973","IsPullRequest":true,"CreatedAt":"2019-01-15T17:27:09","Actor":"dotnet-maestro[bot]","Number":"319","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19064.4\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/319","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#319)"},{"Id":"399083142","IsPullRequest":true,"CreatedAt":"2019-01-14T23:38:40","Actor":"Tanya-Solyanik","Number":"318","RawContent":null,"Title":"typo in SystemInformation class","State":"closed","Body":"fixed a copy/paste bug in the GetSystemMetrics call that results in getting horizontal metric instead of the vertical one","Url":"https://github.com/dotnet/winforms/pull/318","RelatedDescription":"Closed or merged PR \"typo in SystemInformation class\" (#318)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-01-23T05:31:05.4446723Z","RunDurationInMilliseconds":618}