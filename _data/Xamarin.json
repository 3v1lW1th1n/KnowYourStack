{"Data":{"Blog":{"FeedItems":[{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8267897750","Type":"IssuesEvent","CreatedAt":"2018-09-14T19:01:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2173","RelatedDescription":"Closed issue \"Improve the 'deprecation experience' for the removal of armeabi\" (#2173) at xamarin/xamarin-android","RelatedBody":"Support for the `armeabi` architecture has been removed recently in master in https://github.com/xamarin/xamarin-android/pull/2106, and I think we should take a look at improving the user experience around this removal where possible. There are two issues I see at present that should be considered.\r\n\r\n### Removal of `armeabi` options from VS and VS Mac.\r\nThese options still exist in the IDE and at the very least need to be removed entirely. We should perhaps also consider a new workflow for the IDEs that will inform users and automatically fix projects which support `armeabi` on project load.\r\n\r\n### Improving error messages\r\n\r\nThe current error messaging, as shown below, is not helpful to users. We should try to fail earlier with an informative message along the lines of \"Your project has enabled support for the `armeabi` architecture which is  obsolete in Xamarin.Android version 'x.y.z' and greater. Please take the following steps to update your project (...)\". However, specific updates to the error messaging should take into consideration any IDE work that may also happen here.\r\n\r\n[Full diagnostic failure output](http://xqa.blob.core.windows.net/gist/report-30cf50be7beb431d8ac90a03708820c1.txt)\r\n\r\n```\r\nAdding native library: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\lib\\armeabi\\libmono-android.debug.so (APK path: lib/armeabi/libmonodroid.so) (TaskId:204)\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018: The \"BuildApk\" task failed unexpectedly. [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\lib\\armeabi\\libmono-android.debug.so'. [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.AddNativeLibrary(ZipArchiveEx apk, String abi, String filename, String inArchiveFileName) [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.AddRuntimeLibraries(ZipArchiveEx apk, String supportedAbis) [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.ExecuteWithAbi(String supportedAbis, String apkInputPath, String apkOutputPath) [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.Execute() [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2759,3): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\agent\\_work\\r9\\a\\monodroid-samples\\HelloMultiScreen\\HelloMultiScreen.csproj]\r\nDone executing task \"BuildApk\" -- FAILED. (TaskId:204)\r\n```"},{"Id":"8267896545","Type":"PullRequestEvent","CreatedAt":"2018-09-14T19:01:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2180","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add coded error for armeabi\" (#2180) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2173\r\nContext: https://github.com/xamarin/xamarin-android/pull/2106\r\n\r\nThis commit checks for the presence of the now unsupported armeabi architecture in the `$(AndroidSupportedAbis)` property by using a conditional error in a new target.  Another option could be to to change the error to a warning and *ignore* the \";armeabi;\" substring in the\r\nproperty.  But that seems a little risky for cases where users might not notice the warning.  They would probably be surprised later when they discovered that their APKs did not contain armeabi support.\r\n\r\nI also debated on whether it would be better to move this check into the `BuildApk` task.  I decided that since it is just a small test to look for a substring in an MSBuild property, using a conditional `Error` task in a small new target seems fine.\r\n\r\nI verified that this new error appears in the build output as desired if the `$(AndroidSupportedAbis)` property includes \"armeabi\" either by itself or at the beginning, middle, or end of a list.  I also verified that the error does *not* appear and that the `SignAndroidPackage` target completes successfully when the property is set to \"armeabi-v7a;x86\"."},{"Id":"8267261220","Type":"PullRequestEvent","CreatedAt":"2018-09-14T16:48:32","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2186","RelatedDescription":"Opened pull request \"[build] Build Xamarin.Android.NUnitLite.dll for API-28 (#2182)\" (#2186) at xamarin/xamarin-android","RelatedBody":"We've been dealing with a head-scratching annoyance: `.apk` test would\r\nexecute, pass, and have their `TestResults.xml` files extractable when\r\nthe PR builds run the `.apk` tests, but *not* when `master` does.\r\n\r\nThis makes it difficult to know whether or not we've broken anything.\r\n\r\nOne \"interesting\" observation we've had is that the paths *differ* on\r\nthe \"downloadable\" vs. \"undownloadable\" builds.  For example,\r\n[master build #1166][0] uses an internal storage path:\r\n\r\n\tRunTestApks\r\n\t  ...\r\n\t  Executing: /Users/builder/android-toolchain/sdk/platform-tools/adb   shell run-as Mono.Android_Tests cat \"/data/user/0/Mono.Android_Tests/files/.__override__/TestResults.xml\"\r\n\t    writing stdout to file: /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/tests/../bin/TestRelease/TestResult-Mono.Android_Tests.xml\r\n\t…/xamarin-android/build-tools/scripts/TestApks.targets(188,5): error :   Command /Users/builder/android-toolchain/sdk/platform-tools/adb   shell run-as Mono.Android_Tests cat \"/data/user/0/Mono.Android_Tests/files/.__override__/TestResults.xml\" failed with exit code 1\r\n\r\nWhile the \"same\" command on [PR build #4003][1] uses an external path:\r\n\r\n\tRunTestApks:\r\n\t  ...\r\n\t  Executing: /Users/builder/android-toolchain/sdk/platform-tools/adb -s emulator-5570  shell run-as Mono.Android_Tests cat \"/storage/emulated/0/Android/data/Mono.Android_Tests/files/Documents/TestResults.xml\"\r\n\t    writing stdout to file: /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/tests/../bin/TestDebug/TestResult-Mono.Android_Tests.xml\r\n\r\n*Why* do these paths differ?\r\n\r\nThe paths differ -- internal storage on master, external on PR builds\r\n-- because `Xamarin.Android.NUnitLite.dll` only uses\r\n[external storage directories][2] when it's built against a\r\n`$(TargetFrameworkVersion)` value >= v4.4.\r\n\r\nThis is true on PR builds, where we only build one API level,\r\n`$(AndroidFrameworkVersion)`, currently v9.0 (API-28).\r\n\r\nThis is *not* true on master builds where we build for *all* API\r\nlevels, and \"really\" build `Xamarin.Android.NUnitLite.dll` for the\r\n[*first* supported API level][3], v2.3 (API-10)!\r\n\r\nUpdate the `Xamarin.Android.NUnitLite.dll` build within\r\n`make framework-assemblies` so that instead of building for the\r\n*first* API level, we build for the *last* API level.\r\n\r\nThis should allow our unit tests to work sanely on \"full\" builds.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1166/\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-pr-builder/4003/\r\n[2]: https://github.com/xamarin/xamarin-android/blob/e153d42e51d36170487b3081c55310d978685b06/src/Xamarin.Android.NUnitLite/Gui/Instrumentations/TestSuiteInstrumentation.cs#L107-L110\r\n[3]: https://github.com/xamarin/xamarin-android/blob/e153d42e51d36170487b3081c55310d978685b06/build-tools/scripts/BuildEverything.mk#L113-L118"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8269250435","Type":"IssuesEvent","CreatedAt":"2018-09-15T03:17:48","Actor":"444194401","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3794","RelatedDescription":"Opened issue \"Xamarin Forms StackLayout Can't Set BackgroundImage And Button Can't Set Top Bottom Padding\" (#3794) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### StackLayout Can't Set BackgroundImage\r\n\r\n### Steps to Reproduce\r\n\r\n1. Xamarin Forms StackLayout Can't Set BackgroundImage\r\n2. Xamarin Forms Button Can't Set Top Bottom Padding\r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: Vs2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8268979133","Type":"PullRequestEvent","CreatedAt":"2018-09-15T00:06:19","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3793","RelatedDescription":"Opened pull request \"Fixed 2 issues\" (#3793) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThere is precedent in Xamarin.Forms for allowing Android to temporarily \"resurrect\" an object in C# simply to call it's dispose methods. While I'm not entirely sure why this happens, its seems innocuous if all that happens is invocation of the dispose function which then does nothing. \r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3603\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAs described in resolved issue.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8268350283","Type":"PullRequestEvent","CreatedAt":"2018-09-14T20:43:19","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3792","RelatedDescription":"Opened pull request \"[UWP] implement Replace without reloading ListView\" (#3792) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nCurrently when replacing an item in an ObservableCollection it causes the entire list to reload and scroll to the top.  This change correctly implements Replace opposed to just reloading the entire list\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #3788 \r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- UWP\r\n\r\n\r\n### Testing Procedure ###\r\n1) Run Issue3788 in the control gallery\r\n2) click the button \r\n3) this should replace the last item on the list and the list shouldn't scroll to the top\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8267816575","Type":"PullRequestEvent","CreatedAt":"2018-09-14T18:44:18","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3791","RelatedDescription":"Opened pull request \"[UITests] wait for element before querying for it\" (#3791) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nWhen attempting to scroll during UI Tests, occasionally the timing of the scroll and querying for an element don't match up. This attempts to query a few times before failing.\r\n\r\n### Issues Resolved ### \r\nThis attempts to resolve random failures with calls to *App.ScrollForElement*\r\n\r\n### Platforms Affected ### \r\nUI TESTS\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8267792897","Type":"IssuesEvent","CreatedAt":"2018-09-14T18:39:20","Actor":"valentinba","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3790","RelatedDescription":"Opened issue \"Application crashes with MissingMethodException - Default constructor not found for type System.Array\" (#3790) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\niOS application crashes when using the x:Array XAML markup extension, when XAML compilation is turned off and linker set to Link Framework SDKs only.\r\n\r\nNot really sure if this bug reports belongs here or in https://github.com/xamarin/xamarin-macios\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download the FormsGallery sample https://developer.xamarin.com/samples/xamarin-forms/FormsGallery/\r\n2. Comment out the global XAML compilation directive [assembly: XamlCompilation(XamlCompilationOptions.Compile] in App.xaml.cs. This disables XAML compilation.\r\n3.  Set the iOS project as startup project. \r\n4. Configure the app to target a physical iOS device. Alternatively, change the Debug build configuration to Link Framework SDKs Only and target a simulator\r\n5. Build the app\r\n6. Run it in debug mode\r\n7. Choose the XAML Pages tab (not the C# code samples tab)\r\n8. Scroll down in the list and tap on the ListView sample\r\n9. The app will crash\r\n\r\n### Expected Behavior\r\n\r\nThe ListView XAML example page is displayed.\r\n\r\n### Actual Behavior\r\n\r\nThe application crashes. See https://gist.github.com/valentinba/a1716c4fd7b5e4f76901bf2ce28f1b5e for the crash details.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.697729\r\n- Last known good version: Did not try older versions.\r\n- IDE:  \r\nWindows https://gist.github.com/valentinba/6f04accd67b5a034865d39187ad2957f  \r\nMac https://gist.github.com/valentinba/a9887f57ef6c20cfd396a721578660bd\r\n- Platform Target Frameworks: \r\n  - iOS:  11.14.0.14\r\n- Nuget Packages: \r\n    Xamarin.Forms\" Version=\"3.1.0.697729\"\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\nDownload it from here https://developer.xamarin.com/samples/xamarin-forms/FormsGallery/\r\n\r\n### Additional information\r\n\r\nSome investigation revealed that the problem happens consistently with an application which is:\r\n- larger in size (not trivial)\r\n- configured the iOS build linker to Link framework SDKs Only \r\n- not using XAML compilation\r\n\r\nThe problem can be mitigated by:\r\n- avoid using x:Array markup extension and instead populate the list view from code\r\n- using XAML compilation or\r\n- configuring the linker to not link (shrink) any assemblies\r\n\r\nOther people have run into this or something similar  https://github.com/alexrainman/CarouselView/issues/100 and have chosen to work around the issue."},{"Id":"8267468539","Type":"PullRequestEvent","CreatedAt":"2018-09-14T17:32:17","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3789","RelatedDescription":"Opened pull request \"[Android] Fix dispose of Listview renderer\" (#3789) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen navigating back from issue 3408 on the controll Gallery we were getting a crash because of missing constructor on our renderer\r\n\r\n### Issues Resolved ### \r\n\r\nUITests 3408 navigating back\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nGo to test 3408 and navigate back , shouldn't crash \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8269238276","Type":"IssuesEvent","CreatedAt":"2018-09-15T03:08:06","Actor":"borrrden","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4823","RelatedDescription":"Opened issue \"Native Reference unable to be consumed from Nuget\" (#4823) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.iOS project\r\n2. Add Couchbase.Lite from Nuget (or Couchbase.Lite.Enterprise)\r\n3. Make a device build (i.e. msbuild project.sln /p:Platform=iPhone)\r\n\r\n### Expected Behavior\r\n\r\nThe build should succeed\r\n\r\n### Actual Behavior\r\n\r\nclang fails being unable to find a framework that is included in the Nuget package\r\n\r\n>   ld: framework not found LiteCore\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation)\r\n\r\nNote that [this file](https://github.com/couchbase/couchbase-lite-net/blob/master/src/Couchbase.Lite.Support.Apple/iOS/ios.targets) is included in the Nuget package as `build/xamarinios/Couchbase.Lite.Support.iOS.targets` and oddly, even if I remove the build folder from the nuget package all together is still says the same thing.  So where is it determining the need for LiteCore if not from the native reference?\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.6.5 (build 20)\r\nInstallation UUID: 9c860ff0-60f7-49fa-9bc5-91a16d0b99b1\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.4\r\n\t1.0.7\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\n'/Applications/Xamarin Profiler.app' not found\r\n\r\nApple Developer Tools\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\nXamarin.Mac\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\nXamarin.iOS\r\nVersion: 11.14.0.14 (Visual Studio Community)\r\nHash: 1a6e2786\r\nBranch: HEAD\r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\nXamarin.Android\r\nVersion: 9.0.0.20 (Visual Studio Community)\r\nAndroid SDK: /Users/borrrden/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 706050020\r\nGit revision: f6a29a810eb4b81ceb9a4ea4ba411da98b6e25cf\r\nBuild date: 2018-09-11 21:34:07+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 097e18c3e104c652bde3a02799dcba13eaad6f7b\r\n\r\nOperating System\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed extensions\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/borrrden/5a58e51af5bec86689cbae4bf4d000f4\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8268789886","Type":"PullRequestEvent","CreatedAt":"2018-09-14T22:45:38","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4818","RelatedDescription":"Merged pull request \"[clockkit] Add missing 'CLKComplicationFamily' enum values\" (#4818) at xamarin/xamarin-macios","RelatedBody":"From Xcode 10 GM API diff: https://github.com/xamarin/xamarin-macios/wiki/ClockKit-watchOS-xcode10-GM\r\n\r\n``` diff\r\n--- /Applications/Xcode10-beta6.app/Contents/Developer/Platforms/WatchOS.platform/Developer/SDKs/WatchOS.sdk/System/Library/Frameworks/ClockKit.framework/Headers/CLKDefines.h\t2018-08-10 17:39:53.000000000 -0400\r\n+++ /Applications/Xcode10GM.app/Contents/Developer/Platforms/WatchOS.platform/Developer/SDKs/WatchOS.sdk/System/Library/Frameworks/ClockKit.framework/Headers/CLKDefines.h\t2018-08-29 05:55:06.000000000 -0400\r\n@@ -19,6 +19,10 @@\r\n     CLKComplicationFamilyCircularSmall                                                        = 4,\r\n     CLKComplicationFamilyExtraLarge CLK_AVAILABLE_WATCHOS_IOS(3_0, 10_0)                      = 7,\r\n     \r\n+    CLKComplicationFamilyGraphicCorner CLK_AVAILABLE_WATCHOS_IOS(5_0, 12_0)                 = 8,\r\n+    CLKComplicationFamilyGraphicBezel CLK_AVAILABLE_WATCHOS_IOS(5_0, 12_0)                  = 9,\r\n+    CLKComplicationFamilyGraphicCircular CLK_AVAILABLE_WATCHOS_IOS(5_0, 12_0)               = 10,\r\n+    CLKComplicationFamilyGraphicRectangular CLK_AVAILABLE_WATCHOS_IOS(5_0, 12_0)            = 11,\r\n };\r\n```\r\n\r\nThese are important enum values related to the new \"graphic\" complications types."},{"Id":"8268782924","Type":"PullRequestEvent","CreatedAt":"2018-09-14T22:43:04","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4789","RelatedDescription":"Merged pull request \"[healthkit] Add [NullAllowed] to RequestAuthorizationToShare\" (#4789) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8268701419","Type":"IssuesEvent","CreatedAt":"2018-09-14T22:15:30","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4821","RelatedDescription":"Closed issue \"[msbuild] Wrong 'actool' --complication argument\" (#4821) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a new watchOS project and make sure to check \"Include Complication\".\r\n2. Make sure that in the WatchKit Extension's Info.plist the \"Complications Group\" is set to the complication asset.\r\n3. Build for sim or device.\r\n\r\n### Expected Behavior\r\n\r\nNo build error, actool should work fine.\r\n\r\n### Actual Behavior\r\n\r\n` actool error : The asset catalog does not contain a complication named \"Assets.xcassets/Complication.complicationset\".`\r\n\r\nThis happens because the argument passed to `actool`'s `--complication` parameter is now incorrect (with Xcode 10 GM at least).\r\n\r\nInstead of `--complication Assets.xcassets/Complication.complicationset` it should be `--complication Complication`.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: bef2b48b-cfbf-4371-bca9-fa440adab7db\r\nRuntime:\r\n\tMono 5.14.0.185 (2018-04/82b313a29e9) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 514000185\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.2\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.14.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.24)\r\nBuild 10A254a\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/vince/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1    (API level 16)\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.10 (Visual Studio Enterprise)\r\nHash: 872ccd5a1\r\nBranch: xcode10\r\nBuild date: 2018-09-13 06:56:57-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:59:21 PDT 2018\r\n    root:xnu-4903.201.2~4/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nNuGet Package Explorer 0.2\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nhttps://gist.github.com/VincentDondain/2b36bca22db741bcc9e918e65c801011\r\n[TeslaCharge.zip](https://github.com/xamarin/xamarin-macios/files/2384519/TeslaCharge.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\n\n> VS bug [#685215](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/685215)"},{"Id":"8267952489","Type":"IssuesEvent","CreatedAt":"2018-09-14T19:13:35","Actor":"ocjadan","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4822","RelatedDescription":"Opened issue \"iOS App Crashes with \"Foundation.MonoTouchException not marked as Serializable\"\" (#4822) at xamarin/xamarin-macios","RelatedBody":"Hello,\r\n\r\nI am frequently receiving \"'Foundation.MonoTouchException' in Assembly 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065' is not marked as serializable\" crashes.\r\n\r\nThe problem appears to be that even though the code is wrapped in a try-catch block this specific exception is still not being caught. I am positive that BinaryFormatter is only being used in one location and that it's being wrapped in a try-catch-all-exceptions block, so this exception should be caught, but it's not.\r\n\r\nThe code:\r\n`\r\nimport System.Runtime.Serialization.Formatters.Binary;\r\n\r\npublic class Deserialization\r\n{\r\n    public static T DeserializeObject<T>(Stream stream)\r\n    {\r\n        try {\r\n            return (T) new BinaryFormatter().Deserialize(stream);\r\n        } catch(Exception) {\r\n            // do something\r\n        }\r\n        return default(T);\r\n    }\r\n}\r\n`\r\n\r\nThe full crash report:\r\n\r\n> System.Runtime.Serialization.SerializationException: Type 'Foundation.MonoTouchException' in Assembly 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065' is not marked as serializable.\r\n  at System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo.InitSerialize (System.Object obj, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Runtime.Serialization.Formatters.Binary.ObjectWriter objectWriter, System.Runtime.Serialization.SerializationBinder binder) <0x102bf92c0 + 0x0053c> in <8a48725212864358a4554e3196f5ca74#dbb6e99b9bc9c310ec2e9c108c832979>:0 \r\n  at System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo.Serialize (System.Object obj, System.Runtime.Serialization.ISurrogateSelector surrogateSelector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit, System.Runtime.Serialization.IFormatterConverter converter, System.Runtime.Serialization.Formatters.Binary.ObjectWriter objectWriter, System.Runtime.Serialization.SerializationBinder binder) <0x102bf9230 + 0x0007b> in <8a48725212864358a4554e3196f5ca74#dbb6e99b9bc9c310ec2e9c108c832979>:0 \r\n  at System.Runtime.Serialization.Formatters.Binary.ObjectWriter.Serialize (System.Object graph, System.Runtime.Remoting.Messaging.Header[] inHeaders, System.Runtime.Serialization.Formatters.Binary.__BinaryWriter serWriter, System.Boolean fCheck) <0x102c00250 + 0x003a3> in <8a48725212864358a4554e3196f5ca74#dbb6e99b9bc9c310ec2e9c108c832979>:0 \r\n  at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize (System.IO.Stream serializationStream, System.Object graph, System.Runtime.Remoting.Messaging.Header[] headers, System.Boolean fCheck) <0x102bf6830 + 0x0010b> in <8a48725212864358a4554e3196f5ca74#dbb6e99b9bc9c310ec2e9c108c832979>:0 \r\n  at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize (System.IO.Stream serializationStream, System.Object graph, System.Runtime.Remoting.Messaging.Header[] headers) <0x102bf67f0 + 0x0002f> in <8a48725212864358a4554e3196f5ca74#dbb6e99b9bc9c310ec2e9c108c832979>:0 \r\n  at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize (System.IO.Stream serializationStream, System.Object graph) <0x102bf67b0 + 0x00027> in <8a48725212864358a4554e3196f5ca74#dbb6e99b9bc9c310ec2e9c108c832979>:0 \r\n  at Microsoft.Azure.Mobile.Crashes.CrashesUtils.SerializeException (System.Exception exception) <0x103e6cd90 + 0x00077> in <92b5003c75b24480aaade15c545b3797#dbb6e99b9bc9c310ec2e9c108c832979>:0 \r\n\r\n### Steps to Reproduce\r\nHave not been able to reproduce but this crash report keeps coming.\r\n\r\n### Expected Behavior\r\nThe exception should at least be caught.\r\n\r\n### Actual Behavior\r\nException is not caught and the app crashes, leaving no way to properly handle the exception.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.4 (build 22)\r\nInstallation UUID: 40834a1e-3a99-4be2-bf4f-0f9c521d3bf6\r\nRuntime:\r\n    Mono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n    GTK+ 2.24.23 (Raleigh theme)\r\n    Xamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n    Package version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n    2.1.2\r\n    2.1.1\r\n    2.0.5\r\n    2.0.0\r\n    1.1.1\r\n    1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n    2.1.302\r\n    2.1.301\r\n    2.1.4\r\n    2.0.0\r\n    1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n‘/Applications/Xamarin Profiler.app’ not found\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Community)\r\nAndroid SDK: /Users/confirmit/Library/Developer/Xamarin/android-sdk-macosx\r\n    Supported Android versions:\r\n        5.0 (API level 21)\r\n        6.0 (API level 23)\r\n        7.1 (API level 25)\r\n        8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 23.0.2\r\n\r\nJava SDK: /usr\r\njava version “1.8.0_101”\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.14 (Visual Studio Community)\r\nHash: 1a6e2786\r\nBranch:\r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.14 (Visual Studio Community)\r\nHash: 1a6e2786\r\nBranch: HEAD\r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706040022\r\nGit revision: c20766ac3664b80b4098ec4181abcc73ea3a4a2c\r\nBuild date: 2018-09-07 17:05:17+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 9c227549870ec221f51f5dfb1f05da688ee71911\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n   Thu Jun 21 22:53:14 PDT 2018\r\n   root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8267777753","Type":"IssuesEvent","CreatedAt":"2018-09-14T18:36:06","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4821","RelatedDescription":"Opened issue \"[msbuild] Wrong 'actool' --complication argument\" (#4821) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a new watchOS project and make sure to check \"Include Complication\".\r\n2. Make sure that in the WatchKit Extension's Info.plist the \"Complications Group\" is set to the complication asset.\r\n3. Build for sim or device.\r\n\r\n### Expected Behavior\r\n\r\nNo build error, actool should work fine.\r\n\r\n### Actual Behavior\r\n\r\n` actool error : The asset catalog does not contain a complication named \"Assets.xcassets/Complication.complicationset\".`\r\n\r\nThis happens because the argument passed to `actool`'s `--complication` parameter is now incorrect (with Xcode 10 GM at least).\r\n\r\nInstead of `--complication Assets.xcassets/Complication.complicationset` it should be `--complication Complication`.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: bef2b48b-cfbf-4371-bca9-fa440adab7db\r\nRuntime:\r\n\tMono 5.14.0.185 (2018-04/82b313a29e9) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 514000185\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.2\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.14.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.24)\r\nBuild 10A254a\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/vince/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1    (API level 16)\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.10 (Visual Studio Enterprise)\r\nHash: 872ccd5a1\r\nBranch: xcode10\r\nBuild date: 2018-09-13 06:56:57-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:59:21 PDT 2018\r\n    root:xnu-4903.201.2~4/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nNuGet Package Explorer 0.2\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nhttps://gist.github.com/VincentDondain/2b36bca22db741bcc9e918e65c801011\r\n[TeslaCharge.zip](https://github.com/xamarin/xamarin-macios/files/2384519/TeslaCharge.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"},{"Id":"8267497110","Type":"PullRequestEvent","CreatedAt":"2018-09-14T17:38:29","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4820","RelatedDescription":"Opened pull request \"Merge xcode10 into d15-9\" (#4820) at xamarin/xamarin-macios","RelatedBody":"- Bump `maccore` that has a bump of `maciostool` that's using `Xamarin.MacDev`'s d15-9 branch.\r\n- No need for extra dependency bumps : `Xamarin.MacDev` in `xamarin-macios` was already using `d15-9` which is equivalent to `xcode10` and `machos-binaries`'s `d15-9` branch is equivalent to `xcode10` too.\r\n\r\n_Note: `tools/common/Frameworks.cs` required a bit more work than other files, it's a fusion of https://github.com/xamarin/xamarin-macios/commit/9f906918207f8ad19e08d82e0dc4cd2ed5924784 and https://github.com/xamarin/xamarin-macios/commit/215ab7fc1aa2f2fd64e944a8115d300630f6f32b._"},{"Id":"8267376403","Type":"PullRequestEvent","CreatedAt":"2018-09-14T17:13:00","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4817","RelatedDescription":"Merged pull request \"[mtouch/mmp] Always show the complete version.\" (#4817) at xamarin/xamarin-macios","RelatedBody":"This makes failure diagnosis based on the exact XI/XM version much easier when\nbuilds aren't verbose.\n\nExample: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/632392"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":86,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-15T05:30:53.8032898Z","RunDurationInMilliseconds":3931}