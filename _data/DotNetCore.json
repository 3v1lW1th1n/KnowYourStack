{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.7","PublishedOn":"2018-05-08T18:22:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We’re excited to share updates about changes to F# and F# tools which shipped with the Visual Studio 2017 version 15.7 release. Let’s dive in! Type Providers now support .NET Standard For those who...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/f-language-and-tools-update-for-visual-studio-2017-version-15-7/","RawContent":null},{"Title":"Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework","PublishedOn":"2018-05-08T00:41:28+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Today at //Build 2018, we are excited to announce the preview of ML.NET, a cross-platform, open source machine learning framework. ML.NET will allow .NET developers to develop their own models and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 RC 1","PublishedOn":"2018-05-07T18:00:05+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are excited to announce that the first release candidate of EF Core 2.1 is available, alongside .NET Core 2.1 RC 1 and ASP.NET Core 2.1 RC 1, for broad testing, and now also for production...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-entity-framework-core-2-1-rc-1/","RawContent":null},{"Title":".NET Core 3 and Support for Windows Desktop Applications","PublishedOn":"2018-05-07T15:40:04+00:00","CommentsCount":289,"FacebookCount":0,"Summary":"At Microsoft Build Live today, we are sharing a first look at our plans for .NET Core 3. The highlight of .NET Core 3 is support for Windows desktop applications, specifically Windows Forms, Windows...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/","RawContent":null},{"Title":"Announcing .NET Core 2.1 RC 1","PublishedOn":"2018-05-07T15:39:20+00:00","CommentsCount":52,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 2.1 Release Candidate 1 (RC 1). The .NET Core 2.1 RC 1 is now ready for broad testing and for production use. Our quality, reliability, and performance testing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7660843516","Type":"IssuesEvent","CreatedAt":"2018-05-11T12:12:46","Actor":"Longvimol","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/69","RelatedDescription":"Opened issue \"Dotnet / announcement \" (#69) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\n"},{"Id":"7644965785","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:03:40","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to ASP.NET Core 2.0.8.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to 2.0.8 to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_"},{"Id":"7619224203","Type":"IssuesEvent","CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Opened issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65) at dotnet/announcements","RelatedBody":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n"},{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7708305708","Type":"PullRequestEvent","CreatedAt":"2018-05-22T04:09:29","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18077","RelatedDescription":"Merged pull request \"add stackLevelSetter to the VS header list.\" (#18077) at dotnet/coreclr","RelatedBody":""},{"Id":"7708304511","Type":"PullRequestEvent","CreatedAt":"2018-05-22T04:08:59","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18057","RelatedDescription":"Merged pull request \"add repro for #18056 \" (#18057) at dotnet/coreclr","RelatedBody":"Link #18056.\r\n\r\nNote: if you change file names then it will change methods hashes and the bug stops to repro."},{"Id":"7708078200","Type":"IssuesEvent","CreatedAt":"2018-05-22T02:42:02","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18081","RelatedDescription":"Opened issue \"Implement the HWIntrinsics for FMA\" (#18081) at dotnet/coreclr","RelatedBody":""},{"Id":"7707880401","Type":"PullRequestEvent","CreatedAt":"2018-05-22T01:27:26","Actor":"acmyu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18080","RelatedDescription":"Opened pull request \"R2RDump - Dump generic method instances\" (#18080) at dotnet/coreclr","RelatedBody":""},{"Id":"7707821196","Type":"PullRequestEvent","CreatedAt":"2018-05-22T01:03:57","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17451","RelatedDescription":"Merged pull request \"Code cleanup and formatting for System.Memory files.\" (#17451) at dotnet/coreclr","RelatedBody":"I tried to limit the changes mainly to files shared between coreclr/corefx relevant to System.Memory.\r\n\r\nEach set of changes is a separate commit.\r\n\r\nThe IDE00XX errors were fixed by VS, so all instances of the errors within the solution got fixed.\r\n\r\nRelated PR on the corefx side: https://github.com/dotnet/corefx/pull/28875\r\n\r\ncc @dotnet/corefxlab-contrib, @stephentoub, @jkotas \r\n\r\nThis should get mirrored - cc @Anipik, @safern "},{"Id":"7707775310","Type":"PullRequestEvent","CreatedAt":"2018-05-22T00:45:48","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18079","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26522-01 (master)\" (#18079) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7707757984","Type":"PullRequestEvent","CreatedAt":"2018-05-22T00:38:51","Actor":"wfurt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18072","RelatedDescription":"Merged pull request \"small fixes to build CoreCLR on FreeBSD again\" (#18072) at dotnet/coreclr","RelatedBody":"Use system libunwind - as we do on OSX. The version we checked in does not build on FreeBSD. \r\nAdd /usr/local/lib - standard location where FreebSD puts libraries from additional packages - lttnng in this case.\r\n\r\n\r\ncc: @mateusrodrigues "},{"Id":"7707665204","Type":"PullRequestEvent","CreatedAt":"2018-05-22T00:02:53","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18078","RelatedDescription":"Opened pull request \"Updating BuildHWIntrinsic to no longer make so many assumptions.\" (#18078) at dotnet/coreclr","RelatedBody":"The previous code was making a lot of assumptions about the uselist and the ordering of the LocationInfo  in it. I found several of these assumptions to be generally incorrect when working on adding the FMA instruction set.\r\n\r\nThis updates the BuildHWIntrinsic code to be more robust (both against the current code and against future changes) by ensuring that the LocationInfo we are using maps exactly to the operand we think it should."},{"Id":"7707577968","Type":"PullRequestEvent","CreatedAt":"2018-05-21T23:31:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18066","RelatedDescription":"Merged pull request \"Update BuildTools, PgoData to preview1-02821-03, master-20180521-0051, respectively (master)\" (#18066) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7707572078","Type":"PullRequestEvent","CreatedAt":"2018-05-21T23:29:29","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18077","RelatedDescription":"Opened pull request \"add stackLevelSetter to the VS header list.\" (#18077) at dotnet/coreclr","RelatedBody":""},{"Id":"7707569087","Type":"IssuesEvent","CreatedAt":"2018-05-21T23:28:23","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18076","RelatedDescription":"Closed issue \"Build failure: Link\" (#18076) at dotnet/coreclr","RelatedBody":"Opened on behalf of @RussKeldorph\n\nWarnings: 6\nStatus Message: failed\n\nBuild : Master - 20180518.01 (Product Build)\nFailing configurations:\n- Linux\n  - PortableCrossBuild-Checked-arm\n  - PortableCrossBuild-Debug-arm64\n  - PortableCrossBuild-Release-arm64\n  - PortableCrossBuild-Release-arm\n  - PortableCrossBuild-Debug-arm\n  - Debug-x64\n  - Release-x64\n  - Checked-x64\n  - PortableCrossBuild-Checked-arm64\n- Linux-musl\n  - Release-x64\n  - Checked-x64\n  - Debug-x64\n- RedHat6\n  - Checked-x64\n  - Release-x64\n  - Debug-x64\n- OSX\n  - PortableBuild-Release-x64\n  - PortableBuild-Debug-x64\n  - PortableBuild-Checked-x64\n[Mission Control Build Info](https://mc.dot.net/#/product/netcore/master/source/official~2Fcoreclr~2Fmaster~2F/type/build~2Fproduct~2F/build/20180518.01/workItem/Orchestration/analysis/external/Link)\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7708320713","Type":"PullRequestEvent","CreatedAt":"2018-05-22T04:15:59","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9311","RelatedDescription":"Merged pull request \"Final draft: adding Fedora 27, Fedora 28, openSUSE 42.3, and Ubuntu 18.04\" (#9311) at dotnet/cli","RelatedBody":"Please feel free to add people to the code review...\r\n\r\n**Private drop:**\r\nhttp://dotnetcli.blob.core.windows.net/jbeisner/Sdk/1.1.9-servicing-005294/\r\n\r\n**.cliversion**\r\nNo longer needed as the 'bootstrap' step is removed from 'run-build'\r\n\r\n**run-build.ps1 \r\nrun-build.sh**\r\nRemoving the unnecessary 'bootstrap' step\r\nUsing a temp 1.0.4-btstrp SDK for the new Linux distros\r\n\r\n**README.md** \r\nAdd info on the new distros\r\n\r\n**build/Microsoft.DotNet.Cli.DependencyVersions.props** \r\nUpdate to the newer version of the runtime, el al\r\n\r\n**build/Microsoft.DotNet.Cli.Monikers.props \r\ntest/Microsoft.DotNet.Cli.Utils.Tests/GivenAProjectToolsCommandResolver.cs** \r\n1.1.8 -> 1.1.9\r\n\r\n**build/Microsoft.DotNet.Cli.Publish.targets \r\nbuild/compile/Microsoft.DotNet.Cli.LzmaArchive.targets** \r\nUsing clearer conditionals; fixing logic\r\n\r\n**build_projects/dotnet-cli-build/dotnet-cli-build.csproj**\r\nVariable was incorrect\r\n\r\n**test/dotnet-migrate.Tests/GivenThatIWantToMigrateDeprecatedProjects.cs \r\ntest/dotnet-migrate.Tests/GivenThatIWantToMigrateTestApps.cs \r\ntest/dotnet-publish.Tests/GivenDotnetPublishPublishesProjects.cs** \r\nDisabling tests for the new Linux distros where appropriate \r\nRelated: https://github.com/dotnet/cli/issues/9310\r\n\r\n**scripts/obtain/dotnet-install.ps1 \r\nscripts/obtain/dotnet-install.sh**\r\nUsing the most updated versions from CLI:master\r\n\r\n**scripts/dockerrun.sh** \r\nAdding the new Linux distros\r\nRemoving access tokens and passwords so they do not appear as clear-text in logs.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7707967463","Type":"PullRequestEvent","CreatedAt":"2018-05-22T02:00:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/748","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02822-01 (master)\" (#748) at dotnet/standard","RelatedBody":""},{"Id":"7707663750","Type":"IssuesEvent","CreatedAt":"2018-05-22T00:02:21","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/740","RelatedDescription":"Closed issue \"After updating to NetStandard.Library 2.0.3 I receive a missing file error.\" (#740) at dotnet/standard","RelatedBody":"\r\nError:\r\n\r\n\"This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is ..\\..\\packages\\NETStandard.Library.2.0.1\\build\\NETStandard.Library.targets.\"\r\n\r\n\r\n"},{"Id":"7707605355","Type":"PullRequestEvent","CreatedAt":"2018-05-21T23:41:19","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/733","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02817-01 (master)\" (#733) at dotnet/standard","RelatedBody":""},{"Id":"7707581273","Type":"IssuesEvent","CreatedAt":"2018-05-21T23:32:39","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/742","RelatedDescription":"Closed issue \"Why nuget restore generates Nuget folder under CI?\" (#742) at dotnet/standard","RelatedBody":"Hi! \r\n\r\nI believe my question is similar to [#433](https://github.com/dotnet/standard/issues/433)\r\n\r\nI have a private git-server, which has post-receive hook. \r\nThis hook simply invokes kinda **build.cmd**\r\nWhich calls **nuget restore** inside solution folder:\r\nMySln.sln\r\n\\src\\Projects\\*.csproj\r\n\r\nSomehow, under this CI routine, I am getting the **.nuget** and **NuGet** folders, so solution wont build.\r\nBut when I call **build.cmd** directly (double-click), I am getting the **packages** folder, and solution will be built.\r\n\r\nI dont understand, whats the difference? \r\nI tried with and without argument \"solution name\"\r\n\r\nBest regards"},{"Id":"7707440583","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:45:44","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/747","RelatedDescription":"Merged pull request \"Remove workingFolder from build.cmd invocation in signing packages in 2.0.0\" (#747) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707440025","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:45:33","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/747","RelatedDescription":"Opened pull request \"Remove workingFolder from build.cmd invocation in signing packages in 2.0.0\" (#747) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707438751","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:45:10","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/746","RelatedDescription":"Merged pull request \"Remove workingFolder from build.cmd invocation in signing packages in master\" (#746) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707437991","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:44:56","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/746","RelatedDescription":"Opened pull request \"Remove workingFolder from build.cmd invocation in signing packages in master\" (#746) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707319009","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:09:39","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/745","RelatedDescription":"Merged pull request \"Fix syntax for SignPackages in config.json 2.0.0\" (#745) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707318463","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:09:29","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/744","RelatedDescription":"Merged pull request \"Fix syntax for SignPackages in config.json master\" (#744) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7706849942","Type":"PullRequestEvent","CreatedAt":"2018-05-21T20:22:47","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/745","RelatedDescription":"Opened pull request \"Fix syntax for SignPackages in config.json 2.0.0\" (#745) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7706847971","Type":"PullRequestEvent","CreatedAt":"2018-05-21T20:22:21","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/744","RelatedDescription":"Opened pull request \"Fix syntax for SignPackages in config.json master\" (#744) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7704064179","Type":"IssuesEvent","CreatedAt":"2018-05-21T10:45:09","Actor":"aknpmhub","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/743","RelatedDescription":"Closed issue \"HttpClient exception when using .Net standard 2.0 library with UWP application(Targeting Build 16299) \" (#743) at dotnet/standard","RelatedBody":"Hello .NET Standard Team,\r\nI'm not sure the right way/place to ask this question but I'm hoping you can help me out or point me in the right direction.\r\n\r\nI am using a .Net standard library 2.0 which talks to a REST endpoint using HttpClient POST. I am using client.SendAsync with HttpRequestMessage and awaiting the call. The library is referenced in a UWP app and i am invoking the POST method to get response from REST endpoint.\r\n\r\nI am always getting following exception and have not been able to find any clues or any details about this error. Please note that the machine where i am running this is in network and i am able to hit the REST endpoint via browser. Also UWP app has all necessary capabilities(internet,client/server) enabled.\r\n\r\nHas anyone faced similar issue?  \r\nException Details:\r\n\r\nex = {System.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.Runtime.InteropServices.COMException: The text associated with this error code could not be found.\r\nA connection with the server could not be established\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n  ...   at System.Net.Http.HttpClientHandler.<SendAsync>d__111.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at HttpTest.Client.<GetEndpoint>d__11.MoveNext()\r\n\r\nThank you,\r\nAkshay."},{"Id":"7703109302","Type":"IssuesEvent","CreatedAt":"2018-05-21T06:59:36","Actor":"aknpmhub","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/743","RelatedDescription":"Opened issue \"HttpClient exception when using .Net standard 2.0 library with UWP application(Targeting Build 16299) \" (#743) at dotnet/standard","RelatedBody":"Hello .NET Standard Team,\r\nI'm not sure the right way/place to ask this question but I'm hoping you can help me out or point me in the right direction.\r\n\r\nI am using a .Net standard library 2.0 which talks to a REST endpoint using HttpClient POST. I am using client.SendAsync with HttpRequestMessage and awaiting the call. The library is referenced in a UWP app and i am invoking the POST method to get response from REST endpoint.\r\n\r\nI am always getting following exception and have not been able to find any clues or any details about this error. Please note that the machine where i am running this is in network and i am able to hit the REST endpoint via browser. Also UWP app has all necessary capabilities(internet,client/server) enabled.\r\n\r\nHas anyone faced similar issue?  \r\nException Details:\r\n\r\nex = {System.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.Runtime.InteropServices.COMException: The text associated with this error code could not be found.\r\nA connection with the server could not be established\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n  ...   at System.Net.Http.HttpClientHandler.<SendAsync>d__111.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at HttpTest.Client.<GetEndpoint>d__11.MoveNext()\r\n\r\nThank you,\r\nAkshay."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7708473555","Type":"IssuesEvent","CreatedAt":"2018-05-22T05:19:36","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29841","RelatedDescription":"Opened issue \"CoreFX native PAL no longer builds on FreeBSD\" (#29841) at dotnet/corefx","RelatedBody":"Attempt to build native parts on FreeBSD no longer works. This seems to be related to #26291\r\n\r\n> [furt@FreeBSD-11 ~/git/corefx]$ ./src/Native/build-native.sh -clang3.9\r\n> ...\r\n> [ 44%] Building C object System.Native/CMakeFiles/System.Native-Static.dir/pal_signal.c.o\r\n> /usr/home/furt/git/corefx/src/Native/Unix/System.Native/pal_signal.c:151:17: error: mutex 'lock' is not held on every path through here [-Werror,-Wthread-safety-analysis]\r\n>             if (callback != NULL)\r\n>                 ^\r\n> /usr/home/furt/git/corefx/src/Native/Unix/System.Native/pal_signal.c:136:17: note: mutex acquired here\r\n>                 pthread_mutex_lock(&lock);\r\n>                 ^\r\n> /usr/home/furt/git/corefx/src/Native/Unix/System.Native/pal_signal.c:85:1: note: Thread warning in function 'SignalHandlerLoop'\r\n> {\r\n\r\nby quick looking at the code, there seems to be unbalanced pthread_mutex_lock() \r\nFollowing change fixes the issue but I'm not sure if that was the intention:\r\n\r\n```c#\r\n--- a/src/Native/Unix/System.Native/pal_signal.c\r\n+++ b/src/Native/Unix/System.Native/pal_signal.c\r\n@@ -146,6 +146,7 @@ static void* SignalHandlerLoop(void* arg)\r\n                         } while (pid > 0);\r\n                     }\r\n                 }\r\n+                pthread_mutex_unlock(&lock);\r\n             }\r\n\r\n             if (callback != NULL)\r\n\r\n```\r\n\r\ncc: @tmds @janvorli @mateusrodrigues  "},{"Id":"7708454981","Type":"PullRequestEvent","CreatedAt":"2018-05-22T05:12:23","Actor":"BrennanConroy","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29840","RelatedDescription":"Opened pull request \"Fix WebSocket split UTF8 read #29834\" (#29840) at dotnet/corefx","RelatedBody":"#29834 "},{"Id":"7708331822","Type":"PullRequestEvent","CreatedAt":"2018-05-22T04:20:53","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29838","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#29838) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7708324808","Type":"PullRequestEvent","CreatedAt":"2018-05-22T04:17:42","Actor":"caesar1995","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/29839","RelatedDescription":"Closed pull request \"Disable HttpListener tests on Nano\" (#29839) at dotnet/corefx","RelatedBody":"To shrink the size of NanoServer, one component in Http.Sys stack is cut from RS3 onwards, which results in all HttpListener tests failing on the updated Nano containers used in CI. So we want to disable all HttpListener tests against Nano.\r\n\r\nClose: #29757"},{"Id":"7708284904","Type":"PullRequestEvent","CreatedAt":"2018-05-22T04:00:52","Actor":"caesar1995","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29839","RelatedDescription":"Opened pull request \"Disable HttpListener tests on Nano\" (#29839) at dotnet/corefx","RelatedBody":"To shrink the size of NanoServer, one component in Http.Sys stack is cut from RS3 onwards, which results in all HttpListener tests failing on the updated Nano containers used in CI. So we want to disable all HttpListener tests against Nano.\r\n\r\nClose: #29757"},{"Id":"7707834620","Type":"PullRequestEvent","CreatedAt":"2018-05-22T01:09:18","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29826","RelatedDescription":"Merged pull request \"Fix websocket partial message receive test\" (#29826) at dotnet/corefx","RelatedBody":"This test was originally disabled before we switched from WinHTTP to a managed\r\nimplementation on Windows. And any other failure noted on Linux was probably due\r\nto a transient network/environment issue.\r\n\r\nI simplified the test to use smaller buffer sizes which might help with any test\r\nenvironment issues. These updated sizes still meet the requirements of what needs\r\nto be tested. If we find that this test is still failing frequently then we will\r\nswitch to a loopback echo websocket server (which we don't have fully implemented yet).\r\n\r\nFixes #9296"},{"Id":"7707834606","Type":"IssuesEvent","CreatedAt":"2018-05-22T01:09:18","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/9296","RelatedDescription":"Closed issue \"Test failure: WebSockets.Client.Tests.SendReceiveTest.SendReceive_PartialMessage_Success (server: wss://corefx-net.cloudapp.net/WebSocket/EchoWebSocket.ashx)\" (#9296) at dotnet/corefx","RelatedBody":"http://dotnet-ci.cloudapp.net/job/dotnet_corefx/job/release_1.0.0/job/outerloop_windows_nt_debug/lastCompletedBuild/testReport/System.Net.WebSockets.Client.Tests/ClientWebSocketTest/SendReceive_PartialMessage_Success_server__wss___corefx_net_cloudapp_net_WebSocket_EchoWebSocket_ashx_/\n\n```\nMESSAGE:\nSystem.Net.Http.WinHttpException : The server returned an invalid or unrecognized response\n+++++++++++++++++++\nSTACK TRACE:\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult() at System.Net.WebSockets.WinHttpWebSocket.<CloseAsync>d__30.MoveNext() in d:\\j\\workspace\\outerloop_win---b9d0e81a\\src\\System.Net.WebSockets.Client\\src\\System\\Net\\WebSockets\\WinHttpWebSocket.cs:line 458 --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Runtime.CompilerServices.TaskAwaiter.GetResult() at System.Net.WebSockets.Client.Tests.ClientWebSocketTest.<SendReceive_PartialMessage_Success>d__16.MoveNext() in d:\\j\\workspace\\outerloop_win---b9d0e81a\\src\\System.Net.WebSockets.Client\\tests\\ClientWebSocketTest.cs:line 195 --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n```\n"},{"Id":"7707831595","Type":"PullRequestEvent","CreatedAt":"2018-05-22T01:08:03","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29833","RelatedDescription":"Merged pull request \"Fix HttpWebRequest Connection header test\" (#29833) at dotnet/corefx","RelatedBody":"Change the test to use a loopback server instead of an external server. And make sure to\r\nnot use a proxy since it isn't needed anyway. These changes will improve the test reliability.\r\n\r\nFixes #19225\r\nFixes #28437"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7708114800","Type":"PullRequestEvent","CreatedAt":"2018-05-22T02:56:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5831","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5831) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7707829050","Type":"PullRequestEvent","CreatedAt":"2018-05-22T01:07:04","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5831","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5831) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7707567360","Type":"PullRequestEvent","CreatedAt":"2018-05-21T23:27:47","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5830","RelatedDescription":"Merged pull request \"Change CoreRT CI archival conditions\" (#5830) at dotnet/corert","RelatedBody":"Follow up to #5829 - archive all test visible to CI as XUnit results."},{"Id":"7707556548","Type":"PullRequestEvent","CreatedAt":"2018-05-21T23:23:53","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5830","RelatedDescription":"Opened pull request \"Change CoreRT CI archival conditions\" (#5830) at dotnet/corert","RelatedBody":"Follow up to #5829 - archive all test visible to CI as XUnit results."},{"Id":"7707335449","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:14:20","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5829","RelatedDescription":"Merged pull request \"Archive CoreFX test results\" (#5829) at dotnet/corert","RelatedBody":"Adding archives to debug #5823 test result reporting - test result fails correctly, but the Jenkins XUnit plug-in doesn't mark failures correctly in the `Test Results` pane."},{"Id":"7707106011","Type":"PullRequestEvent","CreatedAt":"2018-05-21T21:17:28","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5829","RelatedDescription":"Opened pull request \"Archive CoreFX test results\" (#5829) at dotnet/corert","RelatedBody":"Adding archives to debug #5823 test result reporting - test result fails correctly, but the Jenkins XUnit plug-in doesn't mark failures correctly in the `Test Results` pane."},{"Id":"7705913554","Type":"PullRequestEvent","CreatedAt":"2018-05-21T17:01:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5828","RelatedDescription":"Merged pull request \"Update Tizen rootfs build script\" (#5828) at dotnet/corert","RelatedBody":"cc @alpencolt @BredPet @sergign60 @Dmitri-Botcharnikov "},{"Id":"7705905277","Type":"PullRequestEvent","CreatedAt":"2018-05-21T16:59:50","Actor":"gbalykov","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5828","RelatedDescription":"Opened pull request \"Update Tizen rootfs build script\" (#5828) at dotnet/corert","RelatedBody":"cc @alpencolt @BredPet @sergign60 @Dmitri-Botcharnikov "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"998698514065510400","CreatedAt":"2018-05-21T22:54:15+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update) https://t.co/a0E1oZkvk2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":7,"RawContent":null},{"Id":"997182076645294080","CreatedAt":"2018-05-17T18:28:28+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 https://t.co/ltD4a6NwFJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"996461470748622848","CreatedAt":"2018-05-15T18:45:02+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup https://t.co/z5jUANGS1A","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-05-22T05:30:22.0590821Z","RunDurationInMilliseconds":7296}