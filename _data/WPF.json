{"Data":{"GitHub":{"Issues":[{"Id":"496795024","IsPullRequest":false,"CreatedAt":"2019-09-22T15:31:59","Actor":"MrLongBz","Number":"1935","RawContent":null,"Title":"help me！！Why is it wrong instead of warning?","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: (`winver`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions here: https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**  I don't know where this error is.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->我从git上克隆的项目，作者的环境能够编译，但我的不行，我的是vs 2019 preview 4.0 .net core 3.0.100-rc1-014190\r\n \r\n **Expected behavior:**\r\n \r\n **Minimal repro:**\r\n \r\n![image](https://user-images.githubusercontent.com/38212157/65390363-776a6000-dd90-11e9-801e-f88241fc9c01.png)\r\n![image](https://user-images.githubusercontent.com/38212157/65390418-15f6c100-dd91-11e9-9054-f3d354c046a8.png)\r\n","Url":"https://github.com/dotnet/wpf/issues/1935","RelatedDescription":"Open issue \"help me！！Why is it wrong instead of warning?\" (#1935)"},{"Id":"496495908","IsPullRequest":true,"CreatedAt":"2019-09-20T18:46:06","Actor":"wjk","Number":"1934","RawContent":null,"Title":"Remove outdated README files","State":"open","Body":"There is no longer any need to warn users about modifying the code in these directories, as it has long since been open-sourced. I have kept the warning file in the Shared directory for now, as code in the remaining native projects may well reference that code.","Url":"https://github.com/dotnet/wpf/pull/1934","RelatedDescription":"Open PR \"Remove outdated README files\" (#1934)"},{"Id":"496494883","IsPullRequest":true,"CreatedAt":"2019-09-20T18:43:21","Actor":"wjk","Number":"1933","RawContent":null,"Title":"Move System.Xaml.sln into System.Xaml directory","State":"open","Body":"This was done to align with the solution files in the `PresentationBuildTasks` and `WindowsBase` directories.","Url":"https://github.com/dotnet/wpf/pull/1933","RelatedDescription":"Open PR \"Move System.Xaml.sln into System.Xaml directory\" (#1933)"},{"Id":"496463522","IsPullRequest":false,"CreatedAt":"2019-09-20T17:23:17","Actor":"Symbai","Number":"1932","RawContent":null,"Title":"PropertyGroupDescription/SortDescription IsEnabled property","State":"open","Body":"Having an `IsEnabled` property for the `PropertyGroupDescription `or `SortDescription `would allow us to easily bind to it. As of now we have to create a C# code for removing and re-adding groupdefinitions or sortdescriptions which not only involves a lot of additional code but also forces to cache definitions and feels wrong in MVVM scenarios.","Url":"https://github.com/dotnet/wpf/issues/1932","RelatedDescription":"Open issue \"PropertyGroupDescription/SortDescription IsEnabled property\" (#1932)"},{"Id":"496281115","IsPullRequest":false,"CreatedAt":"2019-09-20T10:43:05","Actor":"batzen","Number":"1931","RawContent":null,"Title":"Certain members of ItemAutomationPeer should be public","State":"open","Body":"Certain members of `ItemAutomationPeer` should be public to enable people to write better code by avoiding code copies or usage of reflection.\r\nThe members in `ItemAutomationPeer` especially affect custom automation peers for `ItemsControl` like controls.\r\nThose internal members are, for example, used in `RibbonGroupDataAutomationPeer`.\r\n\r\nMembers that should be public:\r\n- `GetWrapper`\r\n- `GetWrapperPeer`\r\n\r\nExposing those members would remove the need to use reflection to call those methods, as their code can't be easily copied as `GetWrapper` relies on the internal type `IGeneratorHost`.\r\n","Url":"https://github.com/dotnet/wpf/issues/1931","RelatedDescription":"Open issue \"Certain members of ItemAutomationPeer should be public\" (#1931)"},{"Id":"496156511","IsPullRequest":false,"CreatedAt":"2019-09-20T05:42:35","Actor":"batzen","Number":"1930","RawContent":null,"Title":"Certain members of AccessText should be public","State":"open","Body":"Certain members of `AccessText` should be public to enable people to write better code by avoiding code copies or usage of reflection.\r\nThe members in `AccessText` especially affect custom automation peers for button like controls.\r\n\r\nMembers that should be public:\r\n- `AccessKeyMarker` => this would avoid the need to hard code \"_\"\r\n- `RemoveAccessKeyMarker` => this avoid the need to write custom code to achieve the same\r\n\r\nOriginal question/request:\r\n-----\r\nCurrently `AccessText.RemoveAccessKeyMarker` is marked as internal.\r\nTo be able to write `AutomationPeer` classes of the same quality as the included ones, `AccessText.RemoveAccessKeyMarker` should be public.\r\n\r\nTo be honest, i think that all classes/methods used to write controls/automation peers should be public and not internal.\r\n\r\nThinking further about this:\r\nShould we create a list of things that should be public instead of internal?\r\n","Url":"https://github.com/dotnet/wpf/issues/1930","RelatedDescription":"Open issue \"Certain members of AccessText should be public\" (#1930)"},{"Id":"496074303","IsPullRequest":true,"CreatedAt":"2019-09-19T23:43:01","Actor":"wjk","Number":"1929","RawContent":null,"Title":"Cleanup DirectWriteForwarder","State":"open","Body":"This PR is the first in a series of PRs that I am going to create that clean up (according to my, admittedly subjective, opinions) the code in this repo. There will be one PR created per project/group of closely related projects (e.g. Extensions, Themes). I will endeavor to cause zero functional changes and zero API surface changes in these PRs. I am perfectly OK with these being delayed until after 3.0 release, or if any of my cleanup ideas is contrary to what the core WPF maintainers desire. This is just really, really hairy code, and I thought giving it a shave would be an interesting use of my time.\r\n\r\nIn this PR, I only went over a very few files, as the others were not listed in the Solution Explorer, and due to the complex build process, IntelliSense was not working in the C++ files. Thanks!","Url":"https://github.com/dotnet/wpf/pull/1929","RelatedDescription":"Open PR \"Cleanup DirectWriteForwarder\" (#1929)"},{"Id":"496026379","IsPullRequest":true,"CreatedAt":"2019-09-19T21:40:46","Actor":"dotnet-maestro[bot]","Number":"1928","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190919.6\r\n- **Date Produced**: 9/19/2019 9:01 PM\r\n- **Commit**: 114f9ccfb2972cc3c92e03df289a1fc28ec84857\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19469.6\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.6 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1928","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1928)"},{"Id":"495894314","IsPullRequest":true,"CreatedAt":"2019-09-19T16:30:42","Actor":"dotnet-maestro[bot]","Number":"1927","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190919.3\r\n- **Date Produced**: 9/19/2019 3:37 PM\r\n- **Commit**: 27c41533adeaed79ca1b211a458de23149d19202\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19469.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1927","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1927)"},{"Id":"495801286","IsPullRequest":true,"CreatedAt":"2019-09-19T16:01:54","Actor":"dotnet-maestro[bot]","Number":"1926","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190919.2\r\n- **Date Produced**: 9/19/2019 2:51 PM\r\n- **Commit**: 2a11660a6550da3e3d09443d6677c0b6dabe24f2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19469.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1926","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1926)"},{"Id":"495766244","IsPullRequest":true,"CreatedAt":"2019-09-19T14:01:53","Actor":"dotnet-maestro[bot]","Number":"1925","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190918.17\r\n- **Date Produced**: 9/19/2019 3:58 AM\r\n- **Commit**: 4c9625ad6da48cf6b47440720631f59b1b3ce9c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19468.17\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1925","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1925)"},{"Id":"495503434","IsPullRequest":true,"CreatedAt":"2019-09-18T23:56:18","Actor":"dotnet-maestro[bot]","Number":"1924","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190918.5\r\n- **Date Produced**: 9/18/2019 11:24 PM\r\n- **Commit**: 85fcc11176786205cad4a147044dd36d3f8bb92d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19468.5\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1924","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1924)"},{"Id":"495497336","IsPullRequest":true,"CreatedAt":"2019-09-18T23:40:47","Actor":"dotnet-maestro[bot]","Number":"1923","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190918.4\r\n- **Date Produced**: 9/18/2019 11:00 PM\r\n- **Commit**: 4e9e4bca3353a5aa604eebaff3b4192fd73d883d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19468.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1923","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1923)"},{"Id":"495373240","IsPullRequest":true,"CreatedAt":"2019-09-18T19:01:09","Actor":"dotnet-maestro[bot]","Number":"1922","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190918.3\r\n- **Date Produced**: 9/18/2019 5:43 PM\r\n- **Commit**: 12fb6c098fbd6948e1df8098e33a2fdaf37faff2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19468.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.8 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1922","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1922)"},{"Id":"495219238","IsPullRequest":true,"CreatedAt":"2019-09-18T13:30:36","Actor":"dotnet-maestro[bot]","Number":"1921","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190918.1\r\n- **Date Produced**: 9/18/2019 12:55 PM\r\n- **Commit**: 727bc66d850b720d1e23ed13773bd3d82ae8d832\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19468.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1921","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1921)"},{"Id":"494585217","IsPullRequest":true,"CreatedAt":"2019-09-18T13:20:31","Actor":"dotnet-maestro[bot]","Number":"1912","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190917.22\r\n- **Date Produced**: 9/18/2019 2:33 AM\r\n- **Commit**: 95eedaebf5b7bb03685c8bbff0bbed4f0af46833\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19467.22\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1912","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1912)"},{"Id":"495083240","IsPullRequest":false,"CreatedAt":"2019-09-18T08:54:02","Actor":"vsfeedback","Number":"1920","RawContent":null,"Title":"System.Windows.Controls.PrintDialog throws exception when I run under a different Windows Account and Platform Target x86","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/737431/systemwindowscontrolsprintdialog-throws-exception.html)._\n\n---\nBasically, Printdialog wont work as expected when I try to run my application as an evelated/ or different windows user. This issue happen only if the Platform target build is x86. The issue wont occure if I run my application as the current logged in user (even with x86) or if I use x64 with any windows user.\n\nIn the constructor of PrintDialog I get errors in the PrintTicket and other properties (attached).\n\nPlease let me know if there's something I can do about this issue.\n\n---\n### Original Comments\n(no comments)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/1920","RelatedDescription":"Open issue \"System.Windows.Controls.PrintDialog throws exception when I run under a different Windows Account and Platform Target x86\" (#1920)"},{"Id":"494922247","IsPullRequest":true,"CreatedAt":"2019-09-18T00:35:41","Actor":"dotnet-maestro[bot]","Number":"1919","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190917.8\r\n- **Date Produced**: 9/18/2019 12:05 AM\r\n- **Commit**: 2a8ec7a873bf146bde1067d65499fe4d1ee29f57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19467.8\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1919","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1919)"},{"Id":"494843525","IsPullRequest":true,"CreatedAt":"2019-09-17T21:01:20","Actor":"dotnet-maestro[bot]","Number":"1918","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190917.7\r\n- **Date Produced**: 9/17/2019 7:54 PM\r\n- **Commit**: 03729381d16c1ed36373c9c9c37944f458082285\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19467.7\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1918","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1918)"},{"Id":"494825651","IsPullRequest":true,"CreatedAt":"2019-09-17T20:45:49","Actor":"dotnet-maestro[bot]","Number":"1917","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190917.6\r\n- **Date Produced**: 9/17/2019 7:45 PM\r\n- **Commit**: 245d756d8516064cea2ce688094db3367f992efb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19467.6\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1917","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1917)"},{"Id":"494785691","IsPullRequest":true,"CreatedAt":"2019-09-17T19:20:49","Actor":"dotnet-maestro[bot]","Number":"1916","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190917.5\r\n- **Date Produced**: 9/17/2019 6:15 PM\r\n- **Commit**: a400cf6be7c100832f4306070180a73cf11ba5ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19467.5\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1916","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1916)"},{"Id":"494784600","IsPullRequest":false,"CreatedAt":"2019-09-17T18:33:11","Actor":"vatsan-madhavan","Number":"1915","RawContent":null,"Title":"XAML intellisense file generation doesn't work in CPS projects","State":"open","Body":"@srivatsn commented on [Thu Jun 22 2017](https://github.com/dotnet/project-system/issues/2488)\n\nAdd a XAML file to a CPS-based project.\r\n\r\nExpected: file.g.i.cs should be generated in the obj directory during a design-time build so that intellisense knows about the types defined the XAML.\r\n\r\nActual: It's not generated and there are squiggles about missing definition for InitializeComponent etc.\r\n\r\nCause:\r\nThe old project system used to run the `Compile` target in a single msbuild instance and other targets to get outputgroups in a different instance. CPS batches them all and runs all targets in a single msbuild instance.\r\n\r\nThe generation of the .g.i.cs is done by a target called DesignTimeMarkupCompilation and that wants to run only during a DT build - to do that it only runs if `$(BuildingProject)` == 'true'`. Normally BuildingProject is false. However there's a target to get the PDB output group that sets it to true. Since it's the same msbuild instance that runs both targets, DesignTimeMarkupCompilation is being skipped. \r\n\r\nNot sure what the right fix is here - the DesignTimeMarkupCompilation can check the `$(DesignTimeBuild)` property instead of BuildingInProject. Or maybe CPS needs to batch the targets into multiple batches.\r\n\r\nA workaround to get this working is to add something like this to the project or to some import:\r\n```xml\r\n  <Target Name=\"WorkaroundForXAMLIntellisenseBuildIssue\" AfterTargets=\"_CheckCompileDesignTimePrerequisite\">\r\n    <PropertyGroup>\r\n       <BuildingProject>false</BuildingProject>\r\n    </PropertyGroup>\r\n  </Target>\r\n```\r\n\r\nThis explicitly sets BuildingProject to false just before we run the CompileDesignTime target.\r\n\r\n\r\n\n\n---\n\n@srivatsn commented on [Thu Jun 22 2017](https://github.com/dotnet/project-system/issues/2488#issuecomment-310503116)\n\n@tmat - can you please put in this workaround in the repo toolset when you move project system repo to repo toolset? Since we have a few XAML files, today if we have full solution analysis on, then there will be errors in the error list about missing InitializeComponent etc.\r\n\r\nAlso @jaredpar - you'll need this as well for your branch that's moving roslyn to cps to avoid errors with full solution analysis on.\n\n---\n\n@jaredpar commented on [Thu Jun 22 2017](https://github.com/dotnet/project-system/issues/2488#issuecomment-310533204)\n\n@srivatsn thanks for the heads up.\n\n---\n\n@tmat commented on [Thu Jun 22 2017](https://github.com/dotnet/project-system/issues/2488#issuecomment-310535798)\n\n@srivatsn Sure.\n\n---\n\n@tmat commented on [Thu Jun 22 2017](https://github.com/dotnet/project-system/issues/2488#issuecomment-310540630)\n\nI tried to add it but it broke the build. Xaml code behind is not generated at all to the obj dir during regular build\n\n---\n\n@srivatsn commented on [Fri Jun 23 2017](https://github.com/dotnet/project-system/issues/2488#issuecomment-310593502)\n\nI added this to the project-system repo's targets files and I don't see any build breaks and it works fine in the IDE for me. We can take a look tomorrow.\n\n---\n\n@jaredpar commented on [Fri Jun 23 2017](https://github.com/dotnet/project-system/issues/2488#issuecomment-310729281)\n\nThe Roslyn build succeeded with this change as well. \n\n---\n\n@davkean commented on [Tue Sep 12 2017](https://github.com/dotnet/project-system/issues/2488#issuecomment-329028173)\n\nMoving this to a tracking bug as the underlying cause is: https://github.com/Microsoft/msbuild/issues/2417.\n\n---\n\n@davidwengier commented on [Sun Jul 21 2019](https://github.com/dotnet/project-system/issues/2488#issuecomment-513637928)\n\nDesign time builds in Roslyn.sln no longer have anything that sets `BuildingProject` to `true`. I don't think this workaround is necessary any more, and I don't think this problem exists any more.\r\n\r\nIf I'm mistaken, feel free to re-open.\n\n---\n\n@tmat commented on [Sun Jul 21 2019](https://github.com/dotnet/project-system/issues/2488#issuecomment-513638521)\n\n@davidwengier The workaround is still present in Arcade SDK: https://github.com/dotnet/arcade/blob/dd885745172424fc8df97295514f693efaec8d24/src/Microsoft.DotNet.Arcade.Sdk/tools/Workarounds.targets#L16-L24\n\n---\n\n@davkean commented on [Sun Jul 21 2019](https://github.com/dotnet/project-system/issues/2488#issuecomment-513639069)\n\n@davidwengier `BuildingProject` is set to `true` when output groups are merged with design-time build, as called out in the linked msbuild bug above: https://github.com/microsoft/msbuild/issues/2417.\n\n---\n\n@davidwengier commented on [Sun Jul 21 2019](https://github.com/dotnet/project-system/issues/2488#issuecomment-513642564)\n\nUnder what circumstances does that happen though? The list of targets in the top comment on that issue is not the list of targets that I'm seeing during a design time build. If this is dependant on project configuration, any hints you can give me to reproduce the issue would be greatly appreciated. This issue only mentions full solution analysis which I have turned on.\n\n---\n\n@davkean commented on [Sun Jul 21 2019](https://github.com/dotnet/project-system/issues/2488#issuecomment-513643025)\n\nTwo ways to approach this, go and figure out a feature that uses Output Groups and have it triggered in such a way that its gets combined with the first design-time build, or hack it up so that a target we do call during the build, depends on an output group target. The latter is probably easier to trigger and reproduce.\n\n","Url":"https://github.com/dotnet/wpf/issues/1915","RelatedDescription":"Open issue \"XAML intellisense file generation doesn't work in CPS projects\" (#1915)"},{"Id":"494783539","IsPullRequest":false,"CreatedAt":"2019-09-17T18:30:47","Actor":"vatsan-madhavan","Number":"1914","RawContent":null,"Title":"Remove the \"BuildingProject\" directive completely  from WinFx.targets","State":"open","Body":"I think we should just remove the \"BuildingProject\" directive completely - it just adds confusion to this block as to when it is set/not set. This used to be used to detect legacy design-time builds, but this targets file will not be run in legacy.\r\n\r\n_Originally posted by @davkean in https://github.com/dotnet/wpf/pull/1895_","Url":"https://github.com/dotnet/wpf/issues/1914","RelatedDescription":"Open issue \"Remove the \"BuildingProject\" directive completely  from WinFx.targets\" (#1914)"},{"Id":"494728095","IsPullRequest":false,"CreatedAt":"2019-09-17T16:30:14","Actor":"DigitlWorld","Number":"1913","RawContent":null,"Title":"Expose facilities for contributing to/controlling the WPF Themeing engine","State":"open","Body":"The themeing engine that WPF uses to apply Default Styles to all elements should be made available for application specific override/replacement rather than being locked to the 6 or so PresentationFramework.*.dll themes. Instead of relying on a fixed set of system themes (e.g. Aero, Luna, etc.) and related sub-themes (e.g. Luna.Metallic), partially forced by System settings and events, I suggest opening up this mechanism to allow application designers to fully control the actual default styles for their application.\r\n\r\nThe problem is that not being able to easily create/set default styles via themeing causes a great deal of downstream headaches for developers and designers when attempting to devise an entire replacement skin for an application:\r\n* You can't replace the Default Style of a control. As a result, any use of Styles in local application code causes the style to be reverted to Default + Local Style. While `BasedOn` does allow for Style inheritance, this relies on downstream users of a theme to be intimately familiar with how the theme resources are constructed and laid out.\r\n* There are potential workarounds that involve Reflection and hooking the Windows Message loop (e.g. http://northhorizon.net/2010/how-to-actually-change-the-system-theme-in-wpf) but that is fragile code that is subject to breaking if any part of that mechanism breaks down.\r\n\r\nIf it's already possible to do what I'm suggesting, then consider this a documentation improvement request, as it isn't clear at all from the documentation as to how one would go about replacing the actual default styles.","Url":"https://github.com/dotnet/wpf/issues/1913","RelatedDescription":"Open issue \"Expose facilities for contributing to/controlling the WPF Themeing engine\" (#1913)"},{"Id":"494572664","IsPullRequest":true,"CreatedAt":"2019-09-17T12:40:53","Actor":"dotnet-maestro[bot]","Number":"1911","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190917.4\r\n- **Date Produced**: 9/17/2019 11:24 AM\r\n- **Commit**: ccba9d25609fb8bf0e6280ee2122fe03db626605\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19467.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1911","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1911)"},{"Id":"494552913","IsPullRequest":true,"CreatedAt":"2019-09-17T11:25:40","Actor":"dotnet-maestro[bot]","Number":"1910","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190917.3\r\n- **Date Produced**: 9/17/2019 10:44 AM\r\n- **Commit**: 4ff3c2f149c677fc7172acf26a674b5c47cefda9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-preview1.19467.3\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1910","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#1910)"},{"Id":"494543934","IsPullRequest":true,"CreatedAt":"2019-09-17T11:20:44","Actor":"dotnet-maestro[bot]","Number":"1909","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190917.1\r\n- **Date Produced**: 9/17/2019 10:21 AM\r\n- **Commit**: 1a1fd3c9f39b6e2b267d602ea3a882c13cd592a8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19467.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1909","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1909)"},{"Id":"494405829","IsPullRequest":false,"CreatedAt":"2019-09-17T05:18:08","Actor":"dotMorten","Number":"1908","RawContent":null,"Title":"CompositionTarget.Rendering event slows down when there are no UI updates","State":"open","Body":"* .NET Core Version:3.0.100-rc1-014190\r\n* Windows version: 1903\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nWhen relying on CompositionTarget.Rendering, I've noticed that the event throttles down to around 50fps when there are no UI updates. As soon as UI updates are occuring, the event goes back up to firing at 60fps.\r\n\r\nThis becomes problematic when you're doing performance metrics and want to ensure performance stays a consistent 60fps, but when things stops moving, it shows in the performance numbers as really bad performance.\r\n\r\nNotice here where no UI updates are done, the framerate is around 50fps. Once animation is started, the framerate goes up to 60:\r\n![Untitled Project](https://user-images.githubusercontent.com/1378165/65013271-61135e80-d8cf-11e9-9d16-ef5b00b85b30.gif)\r\n \r\n **Actual behavior:** \r\n Clock timer slows down.\r\n\r\n **Expected behavior:**\r\nEvent sticks to 60fps\r\n \r\n **Minimal repro:**\r\n Use the toggle button to turn the animation on and off. Monitor the output window for framerate updates every 0.5 seconds.\r\n\r\n`MainWindow.xaml`:\r\n```xml\r\n<Window x:Class=\"FrameRateTest.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:FrameRateTest\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\r\n        <Window.Resources>\r\n            <Storyboard x:Key=\"sb\" RepeatBehavior=\"Forever\">\r\n               <DoubleAnimation Storyboard.TargetName=\"tt\" \r\n                       Storyboard.TargetProperty=\"X\" From=\"-250\" To=\"250\" \r\n                       Duration=\"0:0:5\" BeginTime=\"0:0:0\"/>\r\n               <DoubleAnimation Storyboard.TargetName=\"tt\" \r\n                       Storyboard.TargetProperty=\"X\" From=\"250\" To=\"-250\" \r\n                       Duration=\"0:0:5\" BeginTime=\"0:0:5\"/>\r\n            </Storyboard>\r\n        </Window.Resources>\r\n\r\n    <Grid>\r\n        \r\n        <Button HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Content=\"Toggle Animation\" Click=\"ToggleAnimation_Click\" />\r\n        \r\n        <Ellipse Width=\"30\" Height=\"30\" Fill=\"Red\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\">\r\n           <Ellipse.RenderTransform>\r\n              <TranslateTransform x:Name=\"tt\" />\r\n           </Ellipse.RenderTransform>\r\n        </Ellipse>\r\n    </Grid>\r\n    \r\n</Window>\r\n```\r\n\r\n`MainWindow.xaml.cs`:\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Windows;\r\nusing System.Windows.Media;\r\nusing System.Windows.Media.Animation;\r\n\r\nnamespace FrameRateTest\r\n{\r\n    /// <summary>\r\n    /// Interaction logic for MainWindow.xaml\r\n    /// </summary>\r\n    public partial class MainWindow : Window\r\n    {\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            CompositionTarget.Rendering += OnRender;\r\n            stopwatch.Start();\r\n        }\r\n\r\n        Stopwatch stopwatch = new Stopwatch();\r\n        TimeSpan lastFrame = TimeSpan.Zero;\r\n        MovingAverage avr = new MovingAverage(60);\r\n        int frame = 0;\r\n        public void OnRender(object sender, EventArgs e)\r\n        {\r\n            frame++;\r\n            var ts = stopwatch.Elapsed;\r\n            avr.AddSample((ts - lastFrame).TotalMilliseconds);\r\n            lastFrame = ts;\r\n            if (frame % 30 == 0)\r\n            {\r\n                Debug.WriteLine((1000 / avr.Average).ToString(\"0.000\"));\r\n            }\r\n        }\r\n        bool isAnimating;\r\n        public void ToggleAnimation_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            var sb = (Storyboard)Resources[\"sb\"];\r\n            if (isAnimating)\r\n                sb.Begin();\r\n            else\r\n                sb.Stop();\r\n            isAnimating = !isAnimating;\r\n\r\n        }\r\n    }\r\n\r\n    public class MovingAverage\r\n    {\r\n        private Queue<double> _samples;\r\n        private int _windowSize;\r\n        private double _sum;\r\n\r\n        public double Average\r\n        {\r\n            get\r\n            {\r\n                int cnt = _samples.Count;\r\n                return cnt != 0 ? _sum / cnt : double.NaN;\r\n            }\r\n        }\r\n\r\n        public MovingAverage(int windowSize)\r\n        {\r\n            _windowSize = windowSize;\r\n            _samples = new Queue<double>(windowSize);\r\n        }\r\n\r\n        public void AddSample(double newSample)\r\n        {\r\n            if (!double.IsNaN(newSample))\r\n            {\r\n                if (_samples.Count == _windowSize)\r\n                {\r\n                    _sum -= _samples.Dequeue();\r\n                }\r\n                _samples.Enqueue(newSample);\r\n                _sum += newSample;\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/wpf/issues/1908","RelatedDescription":"Open issue \"CompositionTarget.Rendering event slows down when there are no UI updates\" (#1908)"},{"Id":"494336280","IsPullRequest":true,"CreatedAt":"2019-09-17T00:25:52","Actor":"dotnet-maestro[bot]","Number":"1907","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190916.8\r\n- **Date Produced**: 9/16/2019 11:50 PM\r\n- **Commit**: 375617d3286eb88680862c9453bfb45e0dc9a9eb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19466.8\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1907","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1907)"},{"Id":"494309240","IsPullRequest":true,"CreatedAt":"2019-09-16T22:55:35","Actor":"dotnet-maestro[bot]","Number":"1906","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190916.7\r\n- **Date Produced**: 9/16/2019 10:13 PM\r\n- **Commit**: 3123fc92f951cd30359bf99bbc06e44e831f89fe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19466.7\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1906)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-09-23T05:30:52.9829779Z","RunDurationInMilliseconds":743}