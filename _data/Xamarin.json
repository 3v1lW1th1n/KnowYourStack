{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8001497949","Type":"IssuesEvent","CreatedAt":"2018-07-23T03:27:11","Actor":"divega","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1990","RelatedDescription":"Opened issue \"Application using EF Core 2.1.1 with SdkOnly linking crashes due to duplicate values returned by GetMethod\" (#1990) at xamarin/xamarin-android","RelatedBody":"This was previously mentioned in https://github.com/xamarin/xamarin-android/issues/1813#issuecomment-400888600 and reported by multiple customers in the EF Core repo at https://github.com/aspnet/EntityFrameworkCore/issues/12460. I am copying some details in this issue but feel free to find more details and reach out to customers hitting it in those links.\r\n\r\nI am forwarding the issue to Xamarin because the only possible root cause seems to be that reflection is returning the same MethodInfo for different overloads of a method (which doesn't seem to make much sense) and given we don't have the Xamarin expertise we need someone to investigate if this is a bug or otherwise give us advice if we are doing something wrong. \r\n\r\nIn summary, the code that causes the exception is doing something like this:\r\n\r\n``` c#\r\n    var supportedMethods = new Dictionary<MethodInfo, string>\r\n        {\r\n            { typeof(Math).GetMethod(nameof(Math.Abs), new[] { typeof(double) }), \"abs\" },\r\n            { typeof(Math).GetMethod(nameof(Math.Abs), new[] { typeof(float) }), \"abs\" },\r\n            { typeof(Math).GetMethod(nameof(Math.Abs), new[] { typeof(int) }), \"abs\" },\r\n            { typeof(Math).GetMethod(nameof(Math.Abs), new[] { typeof(long) }), \"abs\" },\r\n            { typeof(Math).GetMethod(nameof(Math.Abs), new[] { typeof(sbyte) }), \"abs\" },\r\n            { typeof(Math).GetMethod(nameof(Math.Abs), new[] { typeof(short) }), \"abs\" },...\r\n```\r\n\r\nThat causes `System.ArgumentException: An item with the same key has already been added. Key: Int32 Abs(Int32)`, which seems to indicate that the MethodInfo returned for Math.Abs(int32) is the same as either Math.Abs(double) or Math.Abs(float), which doesn't make much sense.\r\n\r\nWe already suggested adding Math.Abs to LinkDescription.xml (in case GetMethod is just returning null because the actual code was removed by the linker) but customers report that this workaround does not help.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a project that uses Microsoft.EntityFrameworkCore.SqlLite. A repro project was provided at https://github.com/aspnet/EntityFrameworkCore/issues/12460#issuecomment-403451697. \r\n2. Build the project and link it with <AndroidLinkMode>SdkOnly</AndroidLinkMode>\r\n3. Run the application\r\n\r\n### Expected Behavior\r\nApplication runs.\r\n\r\n### Actual Behavior\r\nApplication crashes with:\r\n\r\n```\r\nException message:\r\nStack trace:\r\n06-25 16:48:31.244  9279  9279 I MonoDroid: UNHANDLED EXCEPTION:\r\n06-25 16:48:31.257  9279  9279 I MonoDroid: System.TypeInitializationException: The type initializer for 'Microsoft.EntityFrameworkCore.Sqlite.Query.ExpressionTranslators.Internal.SqliteMathTranslator' threw an exception. ---> System.ArgumentException: An item with the same key has already been added. Key: Int32 Abs(Int32)\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Collections.Generic.Dictionary`2[TKey,TValue].TryInsert (TKey key, TValue value, System.Collections.Generic.InsertionBehavior behavior) <0xceeb8b14 + 0x0045c> in <c099d544051e40b89a67a87a43581f01>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Collections.Generic.Dictionary`2[TKey,TValue].Add (TKey key, TValue value) <0xceeb7fd0 + 0x00013> in <c099d544051e40b89a67a87a43581f01>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Sqlite.Query.ExpressionTranslators.Internal.SqliteMathTranslator..cctor () <0xcd753afc + 0x00207> in <135a24207446461281bfc2c90f71e590>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:    --- End of inner exception stack trace ---\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator+<>c__DisplayClass5_0.<Translate>b__0 (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator translator) <0xcd61f2dc + 0x00044> in <b4c4c93ef655443999d2211e0c2e61cd>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].MoveNext () <0xce42d194 + 0x000ff> in <dd44b4af145c4bd6a0a60da9e4b5131f>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Linq.Enumerable.TryGetFirst[TSource] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] predicate, System.Boolean& found) <0xce415f5c + 0x000f3> in <dd44b4af145c4bd6a0a60da9e4b5131f>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Linq.Enumerable.FirstOrDefault[TSource] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] predicate) <0xce415c6c + 0x0003f> in <dd44b4af145c4bd6a0a60da9e4b5131f>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Translate (System.Linq.Expressions.MethodCallExpression methodCallExpression, Microsoft.EntityFrameworkCore.Metadata.IModel model) <0xcd61ef6c + 0x002bf> in <b4c4c93ef655443999d2211e0c2e61cd>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMethodCall (System.Linq.Expressions.MethodCallExpression methodCallExpression) <0xcd614aac + 0x00393> in <b4c4c93ef655443999d2211e0c2e61cd>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Linq.Expressions.MethodCallExpression.Accept (System.Linq.Expressions.ExpressionVisitor visitor) <0xce4a5000 + 0x0001b> in <dd44b4af145c4bd6a0a60da9e4b5131f>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Linq.Expressions.ExpressionVisitor.Visit (System.Linq.Expressions.Expression node) <0xce49f890 + 0x00027> in <dd44b4af145c4bd6a0a60da9e4b5131f>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit (System.Linq.Expressions.Expression expression) <0xce62b070 + 0x0006b> in <1081ac98085b4c0b96c42f3872e13655>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Visit (System.Linq.Expressions.Expression expression) <0xcd613b00 + 0x0010f> in <b4c4c93ef655443999d2211e0c2e61cd>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitWhereClause (Remotion.Linq.Clauses.WhereClause whereClause, Remotion.Linq.QueryModel queryModel, System.Int32 index) <0xcd5f7064 + 0x000ef> in <b4c4c93ef655443999d2211e0c2e61cd>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Remotion.Linq.Clauses.WhereClause.Accept (Remotion.Linq.IQueryModelVisitor visitor, Remotion.Linq.QueryModel queryModel, System.Int32 index) <0xce63c7cc + 0x00093> in <1081ac98085b4c0b96c42f3872e13655>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses (System.Collections.ObjectModel.ObservableCollection`1[T] bodyClauses, Remotion.Linq.QueryModel queryModel) <0xce62e964 + 0x00167> in <1081ac98085b4c0b96c42f3872e13655>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Remotion.Linq.QueryModelVisitorBase.VisitQueryModel (Remotion.Linq.QueryModel queryModel) <0xce62e468 + 0x0006b> in <1081ac98085b4c0b96c42f3872e13655>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitQueryModel (Remotion.Linq.QueryModel queryModel) <0xce6e2e08 + 0x00047> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitQueryModel (Remotion.Linq.QueryModel queryModel) <0xcd5f5da0 + 0x0005f> in <b4c4c93ef655443999d2211e0c2e61cd>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CreateQueryExecutor[TResult] (Remotion.Linq.QueryModel queryModel) <0xce6e0fcc + 0x00177> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult] (Remotion.Linq.QueryModel queryModel) <0xce6c8964 + 0x000bb> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult] (System.Linq.Expressions.Expression query, Microsoft.EntityFrameworkCore.Query.Internal.IQueryModelGenerator queryModelGenerator, Microsoft.EntityFrameworkCore.Storage.IDatabase database, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1[TLoggerCategory] logger, System.Type contextType) <0xce70f75c + 0x0028f> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler+<>c__DisplayClass13_0`1[TResult].<Execute>b__0 () <0xce71037c + 0x0005b> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc] (System.Object cacheKey, System.Func`1[TResult] compiler) <0xce6f70ac + 0x000c3> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult] (System.Object cacheKey, System.Func`1[TResult] compiler) <0xce6f7024 + 0x0003b> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult] (System.Linq.Expressions.Expression query) <0xce70f47c + 0x001a7> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult] (System.Linq.Expressions.Expression expression) <0xce6f7b58 + 0x00047> in <1a963d6bdb8d435e8dcdc28935e050ad>:0\r\n06-25 16:48:31.257  9279  9279 I MonoDroid:   at System.Linq.Queryable.FirstOrDefault[TSource] (System.Linq.IQueryable`1[T] source) <0xce4096f4 + 0x000cb> in <dd44b4af145c4bd6a0a60da9e4b5131f>:0\r\n```\r\n\r\n### Version Information\r\nEF Core version: 2.1.1\r\nXamarin Andriod version not specified in original report\r\n"},{"Id":"8001040166","Type":"PullRequestEvent","CreatedAt":"2018-07-22T23:18:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1987","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] build.props can cause ConvertResourceCa…\" (#1987) at xamarin/xamarin-android","RelatedBody":"…ses to skip (#1943)\r\n\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1933\r\n\r\nThere have been various reports of a scenario such as:\r\n- Open a project in VS 2017, that uses uppercase letters when\r\n  referencing a resource, such as `@drawable/IMALLCAPS`\r\n- A Design-Time Build occurs\r\n- Some future build later, a *regular* build fails with an `APT0000`\r\n  error\r\n\r\n    Resources\\layout\\test.axml(3,0): error APT0000: No resource found that matches the given name (at 'src' with value '@drawable/IMALLCAPS')\r\n\r\nOnce you are in this state, you are basically hosed until you\r\n`Rebuild` or delete `obj`...\r\n\r\nAfter a lot of digging, I was able to reproduce the issue by\r\ninvalidating `build.props`. This happens in a lot of common\r\nsituations:\r\n- `$(DesignTimeBuild)` changes, such as a DTB or a regular build\r\n- `$(AdbTarget)` changes, such as when you change the device or\r\n  emulator you are deploying to\r\n\r\nI created a `BuildPropsBreaksConvertResourcesCases` test that\r\nreproduces this issue by modifying the timestamp on `build.props`.\r\n\r\nIf `build.props` was invalidated, this was happening:\r\n\r\n    Target Name=_UpdateAndroidResgen Project=UnnamedProject.csproj\r\n    ...\r\n        Target Name=_GenerateAndroidResourceDir Project=UnnamedProject.csproj\r\n            Building target \"_GenerateAndroidResourceDir\" completely.\r\n            Input file \"obj\\Debug\\build.props\" is newer than output file \"obj\\Debug\\res.flag\".\r\n            ...\r\n                CopyIfChanged Task\r\n                  ...\r\n                  ModifiedFiles:\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\layout\\main.xml\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\layout\\test.xml\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\values\\strings.xml\r\n\r\nThe `CopyIfChanged` task is overwriting my `test.xml` layout file with\r\nthe original file contents--which has `IMALLCAPS` in uppercase.\r\n\r\nThis would normally be OK, except `ConvertResourcesCases` skipped\r\nprocessing this file!\r\n\r\n    ConvertResourcesCases\r\n        Parameters\r\n            ResourceDirectories = obj\\Debug\\res\\\r\n            AcwMapFile = obj\\Debug\\acw-map.txt\r\n            AndroidConversionFlagFile = obj\\Debug\\R.cs.flag\r\n        ConvertResourcesCases Task\r\n          ResourceDirectories: obj\\Debug\\res\\\r\n          AcwMapFile: obj\\Debug\\acw-map.txt\r\n          AndroidConversionFlagFile: obj\\Debug\\R.cs.flag\r\n          AndroidConversionFlagFile modified: 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\layout\\main.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\layout\\test.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\values\\strings.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n\r\nSince `obj\\Debug\\R.cs.flag` is newer than these files, `IMALLCAPS` is\r\nnot converted to lower case!\r\n\r\nIt appears that the `CopyIfChanged` MSBuild task was not setting the\r\ntimestamps of files it copies...\r\n\r\nAfter fixing this, `CopyIfChanged` does not ovewrite `test.xml` in the\r\nfirst place:\r\n\r\n    CopyIfChanged Task\r\n      ...\r\n      Skipping Resources\\drawable-hdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-mdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xxhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xxxhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable\\IMALLCAPS.png its up to date\r\n      Skipping Resources\\layout\\Main.axml its up to date\r\n      Skipping Resources\\layout\\test.axml its up to date\r\n      Skipping Resources\\values\\Strings.xml its up to date\r\n    ModifiedFiles:\r\n\r\nNote that `ModifiedFiles` is blank, and my unit test now passes."},{"Id":"8000153898","Type":"IssuesEvent","CreatedAt":"2018-07-22T12:37:38","Actor":"jamesmcroft","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1989","RelatedDescription":"Opened issue \"Application crash on startup - condition new_val < (1 << ABORT_PROT_BLOCK_BITS) not met\" (#1989) at xamarin/xamarin-android","RelatedBody":"This bug has been copied across from Bugzilla as a quick search isn't showing up any results here. The bug itself had been confirmed but hasn't been updated since October 2017.\r\n\r\nAs a quick overview, there appears to be an issue with getting passed application startup if Xamarin.Android app has a Resource.designer.cs file which is around 12MB in size. We confirmed this on Friday (7/20/2018) with one of our companies enterprise applications reaching this limit after adding new layouts. Temporarily, we have followed the advice of commenters in the original Bugzilla report to optimize the app's resources by removing unused ones and renaming some to be shorter which has given us about 2MB back but we will inevitably reach the limit again. \r\n\r\nBased on my native Android experience, I don't think this is a limitation of Android itself and is an issue with Mono / Xamarin\r\n\r\nThe original details from the bug can be found below. \r\n\r\n## condition new_val < (1 << ABORT_PROT_BLOCK_BITS) not met\r\n\r\n_Submitted by a community member on 2017-06-09 13:56 UTC_\r\n\r\nI just upgraded to Xamarin.Android 7.3.1.2 and my app is crashing on startup with the following error:\r\n\r\nAssertion at /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/mono/metadata/threads.c:266, condition 'new\\_val \\< (1 \\<\\< ABORT\\_PROT\\_BLOCK\\_BITS)' not met\r\n\r\nThis was deployed to a device running Android 7.1.1\r\n\r\n* * *\r\n\r\n_Reference: <https://bugzilla.xamarin.com/show_bug.cgi?id=57320>_"},{"Id":"8000055277","Type":"IssuesEvent","CreatedAt":"2018-07-22T11:25:55","Actor":"deakjahn","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1988","RelatedDescription":"Opened issue \"XA0106 warnings in Xamarin.Forms/Android project\" (#1988) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Just start a new project\r\n2. VS will be full of \"Skipping .... Please check that your Nuget Package versions are compatible\" warnings. This is supposed to be a XA0106 warning but it has no code, so it can't even be disabled in the project properties.\r\n3. The project compiles without any problems but the hundreds of warnings make an awful lot of unwanted noise.\r\n\r\n### Expected Behavior\r\n\r\nOptimally, no warning. But at least a way to disable them.\r\n\r\n### Version Information\r\n\r\nXF: 3.1.0.583944 (I know there is a newer but it breaks important things so can't be installed. Anyway, this has no bearing on this particular issue).\r\nXA support libraries: 27.0.2.1"},{"Id":"7998804291","Type":"PullRequestEvent","CreatedAt":"2018-07-21T15:50:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1987","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] build.props can cause ConvertResourceCa…\" (#1987) at xamarin/xamarin-android","RelatedBody":"…ses to skip (#1943)\r\n\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1933\r\n\r\nThere have been various reports of a scenario such as:\r\n- Open a project in VS 2017, that uses uppercase letters when\r\n  referencing a resource, such as `@drawable/IMALLCAPS`\r\n- A Design-Time Build occurs\r\n- Some future build later, a *regular* build fails with an `APT0000`\r\n  error\r\n\r\n    Resources\\layout\\test.axml(3,0): error APT0000: No resource found that matches the given name (at 'src' with value '@drawable/IMALLCAPS')\r\n\r\nOnce you are in this state, you are basically hosed until you\r\n`Rebuild` or delete `obj`...\r\n\r\nAfter a lot of digging, I was able to reproduce the issue by\r\ninvalidating `build.props`. This happens in a lot of common\r\nsituations:\r\n- `$(DesignTimeBuild)` changes, such as a DTB or a regular build\r\n- `$(AdbTarget)` changes, such as when you change the device or\r\n  emulator you are deploying to\r\n\r\nI created a `BuildPropsBreaksConvertResourcesCases` test that\r\nreproduces this issue by modifying the timestamp on `build.props`.\r\n\r\nIf `build.props` was invalidated, this was happening:\r\n\r\n    Target Name=_UpdateAndroidResgen Project=UnnamedProject.csproj\r\n    ...\r\n        Target Name=_GenerateAndroidResourceDir Project=UnnamedProject.csproj\r\n            Building target \"_GenerateAndroidResourceDir\" completely.\r\n            Input file \"obj\\Debug\\build.props\" is newer than output file \"obj\\Debug\\res.flag\".\r\n            ...\r\n                CopyIfChanged Task\r\n                  ...\r\n                  ModifiedFiles:\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\layout\\main.xml\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\layout\\test.xml\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\values\\strings.xml\r\n\r\nThe `CopyIfChanged` task is overwriting my `test.xml` layout file with\r\nthe original file contents--which has `IMALLCAPS` in uppercase.\r\n\r\nThis would normally be OK, except `ConvertResourcesCases` skipped\r\nprocessing this file!\r\n\r\n    ConvertResourcesCases\r\n        Parameters\r\n            ResourceDirectories = obj\\Debug\\res\\\r\n            AcwMapFile = obj\\Debug\\acw-map.txt\r\n            AndroidConversionFlagFile = obj\\Debug\\R.cs.flag\r\n        ConvertResourcesCases Task\r\n          ResourceDirectories: obj\\Debug\\res\\\r\n          AcwMapFile: obj\\Debug\\acw-map.txt\r\n          AndroidConversionFlagFile: obj\\Debug\\R.cs.flag\r\n          AndroidConversionFlagFile modified: 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\layout\\main.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\layout\\test.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\values\\strings.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n\r\nSince `obj\\Debug\\R.cs.flag` is newer than these files, `IMALLCAPS` is\r\nnot converted to lower case!\r\n\r\nIt appears that the `CopyIfChanged` MSBuild task was not setting the\r\ntimestamps of files it copies...\r\n\r\nAfter fixing this, `CopyIfChanged` does not ovewrite `test.xml` in the\r\nfirst place:\r\n\r\n    CopyIfChanged Task\r\n      ...\r\n      Skipping Resources\\drawable-hdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-mdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xxhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xxxhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable\\IMALLCAPS.png its up to date\r\n      Skipping Resources\\layout\\Main.axml its up to date\r\n      Skipping Resources\\layout\\test.axml its up to date\r\n      Skipping Resources\\values\\Strings.xml its up to date\r\n    ModifiedFiles:\r\n\r\nNote that `ModifiedFiles` is blank, and my unit test now passes."},{"Id":"7997404878","Type":"PullRequestEvent","CreatedAt":"2018-07-20T22:05:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1986","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] proguard warning code\" (#1986) at xamarin/xamarin-android","RelatedBody":"Added a warning code for the `Proguard` MSBuild task along with\r\ndocumentation. There was only one warning to fix here.\r\n\r\nAdditionally, I removed the extraneous log messages from the\r\n`Proguard` task, since diagnostic MSBuild output will include all the\r\ninformation we need."},{"Id":"7996822190","Type":"IssuesEvent","CreatedAt":"2018-07-20T19:34:23","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1770","RelatedDescription":"Reopened issue \"[Aapt2] Unable to build project with a TargetFrameworkVersion less than Android 5.0 on Windows with Aapt2 enabled\" (#1770) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. `msbuild /t:SignAndroidPackage /p:AndroidUseAapt2=true monodroid-samples\\Button\\DroidButton.csproj /v:diag`\r\n\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/Button \r\n\r\nI can reproduce this with the default TargetFrameworkVersion of the project (v2.3), as well as v4.0.4, and v4.4. However, if I target v5.0 or greater then my build succeeds.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProject builds successfully with Aapt2 enabled.\r\n\r\n### Actual Behavior\r\n```\r\nExecuting link --manifest C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03\\manifest\\AndroidManifest.xml --java C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03 --custom-package mono.samples.button -R obj\\\\Debug\\\\compiled.flata --auto-add-overlay -I \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-10\\android.jar\" --output-text-symbols obj\\\\Debug\\R.txt -o C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03\\resources.apk (TaskId:97)\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053d, entry index(1341) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053e, entry index(1342) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053b, entry index(1339) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053c, entry index(1340) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nDone executing task \"Aapt2Link\" -- FAILED. (TaskId:97)\r\n```\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/220d551af40c4ccc18db3e7df0c1b72f\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/57dec1bd340d9212129c1d8a0a779433\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#624789](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/624789)"},{"Id":"7996819592","Type":"IssuesEvent","CreatedAt":"2018-07-20T19:33:43","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1985","RelatedDescription":"Opened issue \"[AAPT2] Aapt2 does not handle values passed to `AndroidResgenExtraArgs`\" (#1985) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build app-acquaint with aapt2 enabled. This app sets the following property: `<AndroidResgenExtraArgs>--no-crunch </AndroidResgenExtraArgs>`\r\n\r\n\r\nhttps://github.com/xamarinhq/app-acquaint\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nI am not entirely sure if this _should_ be supported or not, however if this is an option only supported by `aapt` then perhaps we can try to improve the error message a bit (currently it prints the _entire_ usage messaging for aapt2.\r\n\r\n### Actual Behavior\r\n\r\n```\r\nerror APT0000: unknown option '--no-crunch'. \"unknown option '--no-crunch'.\". [/Users/xamarinqa/agent/_work/r1/a/app-acquaint/App/Acquaint.XForms/Acquaint.XForms.Droid/Acquaint.XForms.Droid.csproj]\r\n```\r\n\r\n\r\n### Version Information\r\nXA version: 9.0.0.17 (HEAD/dfb09269d)\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-4ecc7c0748a842568aacb6df43bb7cab.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7996498720","Type":"PullRequestEvent","CreatedAt":"2018-07-20T18:20:07","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1984","RelatedDescription":"Opened pull request \"[monodroid] recreate shared runtime symlink if it points to an invalid location\" (#1984) at xamarin/xamarin-android","RelatedBody":"The following scenario using `Fast Deployment` causes an issue:\r\n- Build and run a `Debug` mode Xamarin.Android app\r\n- Update Xamarin.Android\r\n- Build and run again\r\n\r\nOn the second deployment, a *new* shared Mono runtime will be\r\ninstalled on the device.\r\n\r\nAnd so, the symlink pointing to the shared Mono runtime was pointing\r\nto a location that does not exist:\r\n\r\n    $ run-as com.xamarin.myapp ls -la /data/user/0/com.xamarin.myapp/files/.__override__/links\r\n    lrwxrwxrwx 1 u0_a132 u0_a132   93 2018-07-19 16:57 libmonosgen-2.0.so -> /data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/lib/x86/libmonosgen-32bit-2.0.so\r\n\r\n    $ ls /data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/lib/x86/\r\n    ls: /data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/lib/x86/: No such file or directory\r\n\r\nThis caused the app to crash on startup:\r\n\r\n    [monodroid] Creating public update directory: `/data/user/0/com.xamarin.myapp/files/.__override__`\r\n    [monodroid] Using override path: /data/user/0/com.xamarin.myapp/files/.__override__\r\n    [monodroid] Trying to load sgen from: /data/user/0/com.xamarin.myapp/files/.__override__/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /storage/emulated/0/Android/data/com.xamarin.myapp/files/.__override__/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /storage/emulated/0/../legacy/Android/data/com.xamarin.myapp/files/.__override__/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /data/app/com.xamarin.myapp-5PqDQ9Z3Et8G7_1D2EtGIg==/lib/x86/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /data/user/0/com.xamarin.myapp/files/.__override__/links/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n    [monodroid] cannot find libmonosgen-2.0.so in override_dir: /data/user/0/com.xamarin.myapp/files/.__override__, app_libdir: /data/app/com.xamarin.myapp-5PqDQ9Z3Et8G7_1D2EtGIg==/lib/x86 nor in previously printed locations.\r\n    [monodroid] Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n    [monodroid] Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n\r\nAfter looking into it further, it appears you can just uninstall the\r\nshared runtime to cause the issue. It appears that the path to\r\n`/data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/`\r\nchanges each time the Mono Shared Runtime is installed.\r\n\r\nHere is an example test that can reproduce the issue:\r\n\r\n    [Test]\r\n    public void ReinstallSharedRuntime ()\r\n    {\r\n        if (!HasDevices) {\r\n            Assert.Ignore (\"Test Skipped no devices or emulators found.\");\r\n        }\r\n\r\n        const string noSuchFile = \"No such file or directory\";\r\n        const string libmonosgen = \"libmonosgen-2.0.so\";\r\n        const string monoRuntime = \"Mono.Android.DebugRuntime\";\r\n\r\n        var proj = new XamarinAndroidApplicationProject ();\r\n        proj.SetProperty (proj.DebugProperties, \"AndroidUseSharedRuntime\", true);\r\n        proj.SetProperty (proj.DebugProperties, \"EmbedAssembliesIntoApk\", false);\r\n\r\n        using (var b = CreateApkBuilder (Path.Combine (\"temp\", TestName))) {\r\n            //Make sure we are at a clean state\r\n            RunAdbCommand ($\"shell pm uninstall {proj.PackageName}\");\r\n            RunAdbCommand ($\"shell pm uninstall {monoRuntime}\");\r\n\r\n            b.Target = \"Install,_Run\";\r\n            Assert.IsTrue (b.Build (proj), \"first `Install` and `_Run` should have succeeded.\");\r\n            Assert.IsTrue (StringAssertEx.ContainsText (b.LastBuildOutput, \"Installing shared runtime\"), \"Shared runtime should have been installed!\");\r\n\r\n            var link = $\"/data/user/0/{proj.PackageName}/files/.__override__/links/{libmonosgen}\";\r\n            var listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls -la {link}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{link} should exist!\");\r\n            var symlink = listing.Split (' ').Last ().Trim ();\r\n            Assert.IsFalse (string.IsNullOrEmpty (symlink), $\"Should find {libmonosgen} from listing: {listing}\");\r\n            listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls {symlink}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{symlink} should exist after the first run\");\r\n\r\n            var result = RunAdbCommand ($\"shell pm uninstall {monoRuntime}\").Trim ();\r\n            Assert.AreEqual (\"Success\", result, \"Uninstalling the shared runtime should succeed.\");\r\n\r\n            //HACK: this is temporary, but is currently required\r\n            var upload_flag = b.Output.GetIntermediaryPath (\"upload.flag\");\r\n            File.Delete (upload_flag);\r\n\r\n            Assert.IsTrue (b.Build (proj), \"second `Install` and `_Run` should have succeeded.\");\r\n            Assert.IsTrue (StringAssertEx.ContainsText (b.LastBuildOutput, \"Installing shared runtime\"), \"Shared runtime should have been installed!\");\r\n            listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls -la {link}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{link} should exist!\");\r\n            symlink = listing.Split (' ').Last ().Trim ();\r\n            Assert.IsFalse (string.IsNullOrEmpty (symlink), $\"Should find {libmonosgen} from listing: {listing}\");\r\n            listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls {symlink}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{symlink} should exist after the second run\");\r\n        }\r\n    }\r\n\r\nSo (I think) the fix here is:\r\n- Check the result of `symlink`\r\n- If it failed with `EEXIST`, delete the file and try again\r\n- Add additional logging so we can see if `symlink` fails\r\n\r\nAfter this fixed is merged, I think we should also add the above test\r\nto the proprietary `monodroid` repo. (Assuming it isn't too fragile,\r\nof course)"},{"Id":"7996492984","Type":"PullRequestEvent","CreatedAt":"2018-07-20T18:18:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1982","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] only update typemap timestamps if changes occur\" (#1982) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1930\r\n\r\nSince 3d999d3, `Fast Deployment` has been rebuilding the APK when it\r\nshouldn't. Apparently the `typemap.mj` and `typemap.jm` files'\r\ntimestamps are used when deciding to repack/deploy the APK or not.\r\n\r\nAfter looking at my `CheckTimestamps` test, I don't think it was quite\r\nright. It should modify `MainActivity`'s type name so that these files\r\nwill be updated. Just modifying code won't invalidate these files.\r\nThen the `GenerateJavaStubs` task should only update the timestamps if\r\nthe file was actually changed, which should fix `Fast Deployment`."},{"Id":"7996487245","Type":"IssuesEvent","CreatedAt":"2018-07-20T18:17:35","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1983","RelatedDescription":"Opened issue \"[AAPT2] Encountering new error  CS0117: 'Resource' does not contain a definition for 'Foo' when enabling aapt2\" (#1983) at xamarin/xamarin-android","RelatedBody":"I'm encountering a new class of error that occur when enabling aapt2 that doesn't appear to be a direct result of an aapt2 invocation.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build the following project(s) with aapt2 enabled:\r\n* https://github.com/xamarin/monodroid-samples/tree/master/ApplicationFundamentals/FingerPaint\r\n* https://github.com/xamarin/monodroid-samples/tree/master/SearchableDictionary\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProjects compile with Aapt2 enabled.\r\n\r\n### Actual Behavior\r\n```\r\nMainActivity.cs(29,74): error CS0117: 'Resource' does not contain a definition for 'Array' [/Users/xamarinqa/agent/_work/r1/a/monodroid-samples/ApplicationFundamentals/FingerPaint/FingerPaint/FingerPaint.csproj]\r\nMainActivity.cs(37,80): error CS0117: 'Resource' does not contain a definition for 'Array' [/Users/xamarinqa/agent/_work/r1/a/monodroid-samples/ApplicationFundamentals/FingerPaint/FingerPaint/FingerPaint.csproj]\r\n```\r\n```\r\nDictionaryDatabase.cs(138,59): error CS0117: 'Resource' does not contain a definition for 'Raw' [/Users/xamarinqa/agent/_work/r1/a/monodroid-samples/SearchableDictionary/SearchableDictionary.csproj]\r\n```\r\n\r\n### Version Information\r\nXA version: 9.0.0.17 (HEAD/dfb09269d) \r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-7b4e8e9639004445816d5920c549229b.txt\r\nhttp://xqa.blob.core.windows.net/gist/log-fb8b38fbbb894b4ba26c074dc86df622.txt\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7995229948","Type":"PullRequestEvent","CreatedAt":"2018-07-20T14:07:36","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1982","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] only update typemap timestamps if changes occur\" (#1982) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1930\r\n\r\nSince 3d999d3, `Fast Deployment` has been rebuilding the APK when it\r\nshouldn't. Apparently the `typemap.mj` and `typemap.jm` files'\r\ntimestamps are used when deciding to repack/deploy the APK or not.\r\n\r\nAfter looking at my `CheckTimestamps` test, I don't think it was quite\r\nright. It should modify `MainActivity`'s type name so that these files\r\nwill be updated. Just modifying code won't invalidate these files.\r\nThen the `GenerateJavaStubs` task should only update the timestamps if\r\nthe file was actually changed, which should fix `Fast Deployment`."},{"Id":"7992527655","Type":"PullRequestEvent","CreatedAt":"2018-07-20T02:03:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1944","RelatedDescription":"Merged pull request \"Make platform-tools setup customizible and tell it to mono/sdks setup.\" (#1944) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/pull/9473#issue-200303674"},{"Id":"7991770891","Type":"PullRequestEvent","CreatedAt":"2018-07-19T21:39:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1981","RelatedDescription":"Merged pull request \"Bump to mono/mono:2018-02@f795aa5d\" (#1981) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/8430\r\nFixes: https://github.com/mono/mono/issues/9318\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1951\r\n\r\nContext: https://github.com/mono/mono/issues/9298\r\n\r\nInstalls `cmake` as part of Android SDK provisioning.\r\n\r\nFix building of Windows cross-compilers on Ubuntu Linux.\r\n\r\nInterp fixes.\r\n\r\nMake mono-state dumper abandon stuck threads\r\n\r\nmerp-related changes.\r\n\r\nDebugger fixes."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8001278154","Type":"IssuesEvent","CreatedAt":"2018-07-23T01:50:29","Actor":"kentcb","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3376","RelatedDescription":"Opened issue \"Alerts/Action sheets Break Orientation Changes\" (#3376) at xamarin/Xamarin.Forms","RelatedBody":"**NOTE**: I am not certain that this is an XF issue, but it feels like it to me. It may also be a general iOS issue. I'd welcome any guidance from the Xamarin team either way.\r\n\r\n### Description\r\n\r\nIf a `MediaPickerController` is displayed _after_ a call to `DisplayAlert` (or `DisplayActionSheet`) then orientation changes within the controller cause the UI to go wonky.\r\n\r\nHere's an example of things working correctly:\r\n\r\n![good](https://user-images.githubusercontent.com/1901832/43053150-689a38ec-8e6e-11e8-92f1-faab72550a5a.png)\r\n\r\nNotice the UI for taking a photo/cancelling looks fine, even though I'd reoriented the camera several times before this shot.\r\n\r\nHere's an example of it going awry (after `DisplayAlert` has been called):\r\n\r\n![bad](https://user-images.githubusercontent.com/1901832/43053157-71b2db64-8e6e-11e8-85ba-1c8087a3a3a3.png)\r\n\r\nThe UI is completely cut off and unusable.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download [the repro project](https://github.com/xamarin/Xamarin.Forms/files/2217649/ReproMediaPicker.zip)\r\n2. Run it up on iOS\r\n3. Select **Take Photo**\r\n4. Rotate the device any number of times in any orientation and observe that it all works as expected\r\n5. Cancel the photo\r\n6. Select **Show an Alert**\r\n7. Dismiss the alert\r\n8. Select **Take Photo**\r\n9. Rotate the device once or twice and observe the UI bug\r\n\r\n### Expected Behavior\r\n\r\nThe UI should behave correctly, without being cut off due to an orientation mismatch.\r\n\r\n### Actual Behavior\r\n\r\nThe UI does not always respond correctly to the orientation change.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: `3.1.0.637273`\r\n- Last known good version: -\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - iOS:  `11.4`\r\n- Nuget Packages: `Xam.Plugin.Media` `4.0.1.4-beta`\r\n- Affected Devices: Only observed on iPhone X and iPhone 5s. Did _not_ reproduce on an iPad mini. \r\n\r\n### Screenshots\r\n\r\nPlease see screenshots above.\r\n\r\n### Reproduction Link\r\n\r\n[Repro solution](https://github.com/xamarin/Xamarin.Forms/files/2217649/ReproMediaPicker.zip)"},{"Id":"8000112976","Type":"PullRequestEvent","CreatedAt":"2018-07-22T12:05:09","Actor":"SpiegelSoft","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3375","RelatedDescription":"Opened pull request \"Fixing a NullReferenceException that happens when a page is closedd\" (#3375) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ###\r\n\r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem -->\r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8000109936","Type":"IssuesEvent","CreatedAt":"2018-07-22T12:03:04","Actor":"grahamehorner","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3374","RelatedDescription":"Opened issue \"Xamarin.Froms.Platform.GTK - .NET Standard 2.0\" (#3374) at xamarin/Xamarin.Forms","RelatedBody":"Please consider making the GTK platform a .NET 2.0 standard assembly"},{"Id":"8000101671","Type":"IssuesEvent","CreatedAt":"2018-07-22T11:56:40","Actor":"SpiegelSoft","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3373","RelatedDescription":"Opened issue \"NullReferenceException in Android ButtonRenderer\" (#3373) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen closing a page containing a button, there is a NullReferenceException during the closure of the page.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a button to a page (possibly with a custom renderer that derives from ButtonRenderer)\r\n2. Use ReactiveUI to navigate away from the page\r\n3. The resulting unhandled exception crashes the app.\r\n\r\n### Expected Behavior\r\n\r\nNo crash\r\n\r\n### Actual Behavior\r\n\r\nApplication crash, with the following stack trace:\r\n\r\n  at Xamarin.Forms.Platform.Android.ButtonRenderer.UpdateBitmap () [0x00077] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ButtonRenderer.cs:182 \r\n  at Xamarin.Forms.Platform.Android.ButtonRenderer.UpdateAll () [0x0000c] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ButtonRenderer.cs:150 \r\n  at Xamarin.Forms.Platform.Android.ButtonRenderer.OnElementChanged (Xamarin.Forms.Platform.Android.ElementChangedEventArgs`1[TElement] e) [0x000a5] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ButtonRenderer.cs:117 \r\n  at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x000d5] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:178 \r\n  at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00027] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:126 \r\n  at Xamarin.Forms.Platform.Android.Platform.CreateRenderer (Xamarin.Forms.VisualElement element, Android.Content.Context context) [0x0001f] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Platform.cs:312 \r\n  at Xamarin.Forms.Platform.Android.VisualElementPackager.AddChild (Xamarin.Forms.VisualElement view, Xamarin.Forms.Platform.Android.IVisualElementRenderer oldRenderer, Xamarin.Forms.Platform.Android.RendererPool pool, System.Boolean sameChildren) [0x0008d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementPackager.cs:115 \r\n  at Xamarin.Forms.Platform.Android.VisualElementPackager.SetElement (Xamarin.Forms.VisualElement oldElement, Xamarin.Forms.VisualElement newElement) [0x00131] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementPackager.cs:263 \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.637273\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio 15.7.5\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 8.1\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\nSamsung Galaxy Edge S6\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8000050386","Type":"PullRequestEvent","CreatedAt":"2018-07-22T11:21:42","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3372","RelatedDescription":"Opened pull request \"Fix [WPF] Memory leak when you pop a TabbedPage\" (#3372) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR fix the memory leak when you pop a TabbedPage on WPF\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #3267\r\n\r\n### Platforms Affected ###\r\n\r\n- WPF\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [X ] Rebased on top of the target branch at time of PR\r\n- [X ] Changes adhere to coding standard\r\n"},{"Id":"7999962421","Type":"IssuesEvent","CreatedAt":"2018-07-22T10:04:27","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3371","RelatedDescription":"Opened issue \"Editor does not have Placeholder\" (#3371) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nI suggest to add **Placeholder** to Editor control just like the Entry control instead of using custom render.\r\n\r\nThanks,\r\nJassim"},{"Id":"7999202176","Type":"IssuesEvent","CreatedAt":"2018-07-21T21:09:49","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3370","RelatedDescription":"Opened issue \"EntryCell not filling width\" (#3370) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nIn the attached image you can see that the EntryCell is not filling the entire width although I set the HorizontalOptions of the TableView to FillAndExpand which cause for example the number not show all digits (there is a missing 4 for example)./\r\n\r\nI think the EntryCell should fill the width of the screen - the width of the Label\r\n\r\n<img width=\"392\" alt=\"screen shot 2018-07-22 at 01 09 02\" src=\"https://user-images.githubusercontent.com/6236241/43040077-e4a8d3b8-8d4b-11e8-801b-29472ae0d506.png\">\r\n\r\n\r\nThanks,\r\nJassim"},{"Id":"7999184799","Type":"IssuesEvent","CreatedAt":"2018-07-21T20:54:31","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3369","RelatedDescription":"Opened issue \"Editor does not show a border unlike Entry\" (#3369) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nWhy the Editor control does not show a border or at least provide option property for border as the Editor will just show a white area on iOS without any border.\r\n\r\nThanks,\r\nJassim"},{"Id":"7999183183","Type":"IssuesEvent","CreatedAt":"2018-07-21T20:53:03","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3368","RelatedDescription":"Opened issue \"TableView FlowDirection not working with EntryCell\" (#3368) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nI am doing this to show EntryCell for first name and last name with FlowDirection is RightToLeft but as you can see in the attached image it works for the Label of the EntryCell but not for the Entry cell itself.\r\n\r\n<TableView Intent=\"Settings\" FlowDirection=\"RightToLeft\">\r\n    <TableRoot>\r\n        <TableSection Title=\"الاسم\">\r\n            <EntryCell x:Name=\"MyProfileMyNameFirstName\" Label=\"الاسم الأول :\" />\r\n            <EntryCell x:Name=\"MyProfileMyNameLastName\" Label=\"اسم العائلة:\" />\r\n        </TableSection>\r\n    </TableRoot>\r\n</TableView>\r\n\r\n<img width=\"391\" alt=\"screen shot 2018-07-22 at 00 52 05\" src=\"https://user-images.githubusercontent.com/6236241/43039966-8394a1da-8d49-11e8-884a-c817d2b1c903.png\">\r\n\r\n\r\nThanks,\r\nJassim"},{"Id":"7998659532","Type":"IssuesEvent","CreatedAt":"2018-07-21T14:05:59","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3366","RelatedDescription":"Closed issue \"Re-visit Xamarin.Forms.CarouselView\" (#3366) at xamarin/Xamarin.Forms","RelatedBody":"The current release of Xamarin.Forms.CarouselView is outdated/no longer maintained.\r\nIt would be nice to get this component up to date and release a new version."},{"Id":"7998457268","Type":"IssuesEvent","CreatedAt":"2018-07-21T11:19:47","Actor":"bhaveshsoft1","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3367","RelatedDescription":"Opened issue \"[UWP] ScrollTo method is not working in Xamarin.Forms for UWP platform\" (#3367) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWe are developing chat application using Xamarin.Forms (2.5.0.91635) for UWP. We are trying to implement very basic functionality which is scroll to bottom when user open any chat window or send/receive messages. It working fine where no scroll in chat window but when messages are more then we show vertical scroll bar in chat widow. we are using below line to goes to last item of list view.\r\n\r\nlstMessages.ScrollTo(objlastmessage, ScrollToPosition.Start, false);\r\n\r\nWe are use ObservableCollection to store message and bind it with listview.\r\n\r\nNow problem is that when messenger app get any message from other user then system add it in observation collection and then move to last message in chat window, in between if if user typing message in Xamarin text editor then it freeze the UI until listivew update. so how to fix this issue. please some need hep. So user is legging in typing.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Make a simple chat window using list view.\r\n2. put the text editor below the chat window\r\n3.  fill the list view from 100 message\r\n4. Now when you try to add more message in list view then it freeze the UI for few second\r\n\r\n### Expected Behavior\r\nIt should not be freeze.\r\n\r\n### Actual Behavior\r\nIt should not be freeze.\r\n\r\n### Basic Information\r\n\r\nVersion with issue: Xamarin.Forms 2.5.0.91635 (even I checked in 3.1.0.637273 version too)\r\nLast known good version: Don't know\r\nIDE: Visual Studio 7.4.2 (build 12)\r\nPlatform Target Frameworks:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8001354964","Type":"IssuesEvent","CreatedAt":"2018-07-23T02:24:54","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4196","RelatedDescription":"Closed issue \"iOS crashes with \"ReportCrash(CrashReported): Trying to create CR directory structure as root\"\" (#4196) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8001352417","Type":"IssuesEvent","CreatedAt":"2018-07-23T02:23:49","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4250","RelatedDescription":"Closed issue \"DateTime.ToString(\"HHmm\") always returns the 12 hour time\" (#4250) at xamarin/xamarin-macios","RelatedBody":"In Xamarin.iOS classic approach project I simply try to get the string of the 24 hour time from a DateTime and doesn't work.\r\n\r\nSelectedDateTime.ToString(\"HHmm\", CultureInfo.InvariantCulture); => returns 0235 while it should return 1435.\r\n\r\nI tried to work with the TimeOfDay and format the string there but result is same.\r\n\r\nAny ideas?\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5 (build 1254)\r\nInstallation UUID: 6577c837-59cb-4c86-8fb2-ff4331579701\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.176 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.177 (Visual Studio Enterprise)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/georgiostaskos/Documents/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1 (API level 16)\r\n\t\t4.4 (API level 19)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 25.0.5\r\nSDK Build Tools Version: 23.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001254\r\nGit revision: 498923ea36d2c7fe440c4e4b8cfb75bd50bbd748\r\nBuild date: 2018-05-05 10:35:24-04\r\nXamarin addins: 219f1c4943b4693b837b4173dd10ea982a47c852\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n"},{"Id":"8001330433","Type":"IssuesEvent","CreatedAt":"2018-07-23T02:14:12","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4460","RelatedDescription":"Closed issue \"Xamarin iOS App scrolls the webview to top when the text field in html form is selected\" (#4460) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n1. I have a html form having a text field at the bottom, loaded to a webview.\r\n2. When the user clicks on the text field,keyboard appears and the webview scrolls up to show the text field. \r\n\r\n### Expected Behavior\r\nThe webview should not scroll up automatically\r\n### Actual Behavior\r\nWebview gets scrolled automatically\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and \r\n\r\ndrop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n\r\n\r\n"},{"Id":"7998392054","Type":"IssuesEvent","CreatedAt":"2018-07-21T10:18:59","Actor":"softlion","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4490","RelatedDescription":"Opened issue \"deleting a \"Native Reference\" does not delete the file on disk\" (#4490) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n1. Add a \"Native reference\" to any ios project.\r\n2. Delete this native reference.\r\n\r\n### Expected Behavior\r\nThe reference is deleted from the project and from the disk.\r\n\r\n### Actual Behavior\r\nThe reference is deleted from the project but stays on the disk.\r\n\r\n### Environment\r\nVS 15.7.5PC and VS 7.5.3MAC (same behavior)\r\n"},{"Id":"7998389359","Type":"IssuesEvent","CreatedAt":"2018-07-21T10:16:26","Actor":"softlion","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4489","RelatedDescription":"Opened issue \"\"Native References\" not working in ios library projects\" (#4489) at xamarin/xamarin-macios","RelatedBody":"When adding a Native Reference in an ios library project, and including this project in an ios app project, the Native Reference is ignored.\r\n\r\nA workaround is to add the Native Reference into the ios app project's Native Reference.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create an ios app project and an ios library project\r\n2. In the library project, add as \"Native reference\" a libwritteninc.a library, which is a fat library written in c, compiled with xcode tools, containing all architectures, and not using any ios frameworks.\r\n3. Add a method with a DllImport attribute to import a c method defined in libwritteninc, using \"__Internal\" as the library name.\r\n4. Reference the library into the ios app project, and call the method with the DllImport attribute\r\n5. Build\r\n\r\n### Expected Behavior\r\nbuilds fine on both mac and pc\r\n\r\n### Actual Behavior\r\nBuild errors: undefined symbols.\r\n\r\n### Environment\r\nTryed in both VS windows and VS mac.\r\n\r\nnote: a workaround is to add the Native Reference into the ios app project's Native Reference.\r\n"},{"Id":"7997303025","Type":"PullRequestEvent","CreatedAt":"2018-07-20T21:34:57","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4482","RelatedDescription":"Merged pull request \"[Intents] Update bindings to Xcode 10 Beta 4\" (#4482) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7996871791","Type":"PullRequestEvent","CreatedAt":"2018-07-20T19:46:25","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4484","RelatedDescription":"Merged pull request \"[Photos] Update bindings to Xcode 10 Beta 4\" (#4484) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":252,"FavoriteCount":158,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":25,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":33,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":21,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2018-07-23T05:30:58.5666771Z","RunDurationInMilliseconds":3971}