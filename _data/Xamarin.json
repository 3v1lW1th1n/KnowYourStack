{"Data":{"Blog":{"FeedItems":[{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Developer Blog is Getting an Update!","PublishedOn":"2019-02-15T18:56:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Next week, the Xamarin Developer Blog will be migrating to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. Starting...","Href":"https://blog.xamarin.com/xamarin-developer-blog-is-getting-an-update/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: Releases, Previews, and Roadmaps!","PublishedOn":"2019-02-13T19:56:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. In this episode, we discuss the best of...","Href":"https://blog.xamarin.com/podcast-releases-previews-roadmaps/","RawContent":null},{"Title":"Easily Check Mobile Device Connectivity with Xamarin.Essentials","PublishedOn":"2019-02-12T19:06:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts of a mobile device is their instant access to the internet. As a mobile app developer, it&#8217;s great to be able to pull data from the server to our apps to provide users with...","Href":"https://blog.xamarin.com/easily-check-mobile-device-connectivity-with-xamarin-essentials/","RawContent":null},{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null},{"Title":"Using Existing C++ Libraries in Cross-Platform Xamarin.Forms Applications","PublishedOn":"2019-02-04T18:52:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are many libraries developed using C or C++ which can be brought to bear when creating Xamarin-based mobile apps such as those leveraged by Microsoft’s Hyperlapse Mobile and Pix Camera in order...","Href":"https://blog.xamarin.com/using-c-libraries-xamarin-forms-apps/","RawContent":null},{"Title":"Mobile & .NET Developer Community Events in February","PublishedOn":"2019-02-01T17:31:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Fall in love with building your next mobile application by networking with local user groups to learn about new and exciting releases, tooling, or updates with Xamarin and .NET related technologies!...","Href":"https://blog.xamarin.com/mobile-net-developer-community-events-in-february/","RawContent":null},{"Title":"Complex UI with FastGrid for Xamarin.Forms","PublishedOn":"2019-01-30T17:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff (Principal Engineer at Binwell,  Microsoft MVP, Xamarin Certified Mobile Developer), Artem Tischenko (Xamarin developer at Binwell) and Kirill...","Href":"https://blog.xamarin.com/complex-ui-with-fastgrid-for-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9143270411","Type":"PullRequestEvent","CreatedAt":"2019-02-27T02:07:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2768","RelatedDescription":"Merged pull request \"[scripts] Check if the CrossCompiler is available.\" (#2768) at xamarin/xamarin-android","RelatedBody":"For PR builds we build i `Release` mode but we\r\ndont build the cross compiler tooling. As a result\r\nour `RunApkTests` will fail when try try to use\r\n`AotAssemblies` or `BundleAssemblies`.\r\n\r\nSo we should check that the tooling exists before\r\nwe try to use it."},{"Id":"9142355133","Type":"PullRequestEvent","CreatedAt":"2019-02-26T22:35:38","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2760","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] support F# 4.5 Windows path\" (#2760) at xamarin/xamarin-android","RelatedBody":"Context: https://devblogs.microsoft.com/dotnet/announcing-f-4-5/\r\n\r\nSince VS 15.8 on Windows, F# 4.5 is now installed along with Visual\r\nStudio to support side-by-side installations. Previously F# was\r\ninstalled in a system-wide location specified by `%FSHARPINSTALLDIR%`:\r\n\r\n    C:\\Program Files (x86)\\Microsoft SDKs\\F#\\10.1\\Framework\\v4.0\\\r\n\r\nThe new locations are, for example:\r\n\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\FSharp\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\FSharp\r\n\r\nI have also seen a few instances where our F#-related MSBuild tests\r\nfailed on Windows, failing to import `Microsoft.FSharp.targets`:\r\n\r\n    bin\\TestRelease\\temp\\BuildBasicApplicationFSharp\\UnnamedProject.fsproj error MSB4057:\r\n        The target \"Build\" does not exist in the project.\r\n\r\nIn this case, *all* of our probing for `Microsoft.FSharp.targets`\r\nfailed:\r\n\r\n    NoImport: $(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\FSharp\\Microsoft.FSharp.Targets at (44;5) Not imported due to false condition; ('$(Language)' != 'F#' And Exists('$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\FSharp\\Microsoft.FSharp.Targets')) was evaluated as ('' != 'F#' And Exists('E:\\A\\_work\\382\\s\\bin\\Release\\lib\\xamarin.android\\xbuild\\Microsoft\\VisualStudio\\v15.0\\FSharp\\Microsoft.FSharp.Targets')).\r\n    NoImport: $(FSharpInstallDir)Microsoft.FSharp.Targets at (47;5) Not imported due to false condition; ('$(Language)' != 'F#' And Exists('$(FSharpInstallDir)Microsoft.FSharp.Targets')) was evaluated as ('' != 'F#' And Exists('Microsoft.FSharp.Targets')).\r\n    NoImport: $(MSBuildExtensionsPath32)\\..\\Microsoft SDKs\\F#\\4.1\\Framework\\v4.0\\Microsoft.FSharp.Targets at (50;5) Not imported due to false condition; ('$(Language)' != 'F#' And Exists('$(MSBuildExtensionsPath32)\\..\\Microsoft SDKs\\F#\\4.1\\Framework\\v4.0\\Microsoft.FSharp.Targets')) was evaluated as ('' != 'F#' And Exists('E:\\A\\_work\\382\\s\\bin\\Release\\lib\\xamarin.android\\xbuild\\..\\Microsoft SDKs\\F#\\4.1\\Framework\\v4.0\\Microsoft.FSharp.Targets')).\r\n    NoImport: $(MSBuildExtensionsPath32)\\..\\Microsoft SDKs\\F#\\4.0\\Framework\\v4.0\\Microsoft.FSharp.Targets at (53;5) Not imported due to false condition; ('$(Language)' != 'F#' And Exists('$(MSBuildExtensionsPath32)\\..\\Microsoft SDKs\\F#\\4.0\\Framework\\v4.0\\Microsoft.FSharp.Targets')) was evaluated as ('' != 'F#' And Exists('E:\\A\\_work\\382\\s\\bin\\Release\\lib\\xamarin.android\\xbuild\\..\\Microsoft SDKs\\F#\\4.0\\Framework\\v4.0\\Microsoft.FSharp.Targets')).\r\n    NoImport: $(MSBuildExtensionsPath32)\\..\\Microsoft SDKs\\F#\\3.1\\Framework\\v4.0\\Microsoft.FSharp.Targets at (56;5) Not imported due to false condition; ('$(Language)' != 'F#' And Exists('$(MSBuildExtensionsPath32)\\..\\Microsoft SDKs\\F#\\3.1\\Framework\\v4.0\\Microsoft.FSharp.Targets')) was evaluated as ('' != 'F#' And Exists('E:\\A\\_work\\382\\s\\bin\\Release\\lib\\xamarin.android\\xbuild\\..\\Microsoft SDKs\\F#\\3.1\\Framework\\v4.0\\Microsoft.FSharp.Targets')).\r\n\r\nSo the fix here is to add an extra `<Import/>` for:\r\n\r\n    $(MSBuildToolsPath32)\\..\\..\\..\\Common7\\IDE\\CommonExtensions\\Microsoft\\FSharp\\Microsoft.FSharp.Targets\r\n\r\nI found this path when digging through binlogs, which is how NuGet's\r\nMSBuild targets are imported:\r\n\r\n    <PropertyGroup>\r\n      <NuGetRestoreTargets Condition=\"'$(NuGetRestoreTargets)'==''\">$(MSBuildToolsPath32)\\..\\..\\..\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets</NuGetRestoreTargets>\r\n      ...\r\n      </PropertyGroup>\r\n    <Import Condition=\"Exists('$(NuGetRestoreTargets)')\" Project=\"$(NuGetRestoreTargets)\" />\r\n\r\nCurrently, I think you would have to modify `%FSHARPINSTALLDIR%` to\r\nuse F# 4.5 with Xamarin.Android on Windows."},{"Id":"9140167271","Type":"PullRequestEvent","CreatedAt":"2019-02-26T16:59:59","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2768","RelatedDescription":"Opened pull request \"[scripts] Check if the CrossCompiler is available.\" (#2768) at xamarin/xamarin-android","RelatedBody":"For PR builds we build i `Release` mode but we\r\ndont build the cross compiler tooling. As a result\r\nour `RunApkTests` will fail when try try to use\r\n`AotAssemblies` or `BundleAssemblies`.\r\n\r\nSo we should check that the tooling exists before\r\nwe try to use it."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9143735140","Type":"PullRequestEvent","CreatedAt":"2019-02-27T04:16:33","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5398","RelatedDescription":"Opened pull request \"[Android] Remove changes to IVisualElementRenderer so it remains backwards compatible\" (#5398) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdded a new interface to handle LayoutChanges so that IVisualElementRenderer can stay the same and not break older libraries \r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9143175430","Type":"IssuesEvent","CreatedAt":"2019-02-27T01:43:50","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5391","RelatedDescription":"Closed issue \"[Enhancement] Border for Entry and Editor\" (#5391) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nAdd Border and BorderColor properties to Entry and Editor.\r\n"},{"Id":"9143100956","Type":"PullRequestEvent","CreatedAt":"2019-02-27T01:24:42","Actor":"TimBarham","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5397","RelatedDescription":"Opened pull request \"Catch exceptions thrown by TypeConverter when setting properties\" (#5397) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIn `ApplyPropertiesVisitor.TrySetValue()`, catch and record any exception thrown by the TypeConverter and return false, rather than letting it throw.\r\n\r\nThe exception will later be thrown by `ApplyPropertiesVisitor.SetPropertyValue()`, but this change means `HydrationContext.ExceptionHandler` will be called if it has been set (rather than throwing the exception).\r\n\r\n### Issues Resolved ### \r\n\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/802696\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n* Manually tested exception is now passed to ExceptionHandler when running in the Previewer\r\n* Added a test to verify the above scenario\r\n* Manually tested exception still throws in non-Previewer scenarios.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9142994004","Type":"PullRequestEvent","CreatedAt":"2019-02-27T00:58:41","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4984","RelatedDescription":"Merged pull request \"[UWP] fix so tests are compatible with UWP\" (#4984) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nJust made some small changes so the UI tests are compatible with UWP. \r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9143699005","Type":"IssuesEvent","CreatedAt":"2019-02-27T04:05:09","Actor":"AceCoderLaura","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5675","RelatedDescription":"Opened issue \"DisplayActionSheet is Inconsistent with Other Xamarin Platforms\" (#5675) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a page in a PCL Xamarin library\r\n2. Call Xamarin.Forms.Page.DisplayActionSheet(\"a\", \"b\", \"c\")\r\n3. Tap away from the dialog on iOS and you'll get **\"b\"**\r\n4. Tap away from the dialog on Android and you'll get **null**\r\n\r\n### Expected Behavior\r\n\r\nIt is expected that the behaviour is consistent between platforms.\r\n\r\n### Actual Behavior\r\n\r\nThe actual behaviour is not consistent between platforms.\r\n\r\n### Environment\r\n\r\n```\r\nJetBrains Rider 2018.3.3\r\nBuild #RD-183.5619.41, built on February 9, 2019\r\nLicensed to Laura Bailey\r\nSubscription is active until August 13, 2019\r\nJRE: 1.8.0_152-release-1343-b26 amd64\r\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\r\nWindows 10 10.0\r\n```\r\n\r\n### Build Logs\r\n\r\n[JetBrainsLog.ReSharperBuild_2019_02_27_04_01_14_2971.log](https://github.com/xamarin/xamarin-macios/files/2908521/JetBrainsLog.ReSharperBuild_2019_02_27_04_01_14_2971.log)"},{"Id":"9142586985","Type":"PullRequestEvent","CreatedAt":"2019-02-26T23:20:55","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5674","RelatedDescription":"Opened pull request \"[xm][msbuild] Fix full profile FrameworkList file\" (#5674) at xamarin/xamarin-macios","RelatedBody":"- Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/801867\n  System.Memory.dll not being copied anywhere when Roslyn package is referenced\n- Updated tests to report issues against the XM Full and Mobile Framework lists\n- Now using 2 separate XM FrameworkList files (updated makefile) since the list of assemblies is different and that's expected by the mono team."},{"Id":"9142138134","Type":"IssuesEvent","CreatedAt":"2019-02-26T21:58:30","Actor":"viniciusjarina","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5673","RelatedDescription":"Opened issue \"dynamic is not building on iOS using --interp\" (#5673) at xamarin/xamarin-macios","RelatedBody":"Xamarin.iOS custom build \r\n```\r\nXamarin.iOS\r\nVersion: 12.7.1.69 (Visual Studio Enterprise)\r\nHash: 011f73e9\r\nBranch: xi-interpreter\r\n```\r\n\r\nUsing `dynamic` is causing an build error:\r\n\r\n```csharp\r\ndynamic creator = methodCreator.Invoke (null, BindingFlags.Public | BindingFlags.Static, null, new object[] { dfsValue, null }, null);\r\nobject maze = creator.Create (rows, columns);\r\n```\r\n\r\nError: **` ViewController.cs(85,18,85,25): error CS0656: Missing compiler required member 'Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create'`**\r\n\r\nSource: https://github.com/viniciusjarina/MazeInterpreter/blob/master/test_interpreter/ViewController.cs#L85\r\n\r\n"},{"Id":"9141192533","Type":"IssuesEvent","CreatedAt":"2019-02-26T19:31:37","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5672","RelatedDescription":"Opened issue \"System.Memory.dll not being copied anywhere when Roslyn package is referenced\" (#5672) at xamarin/xamarin-macios","RelatedBody":"Steps to reproduce:\r\n\r\n0. XM 5.6.0.23, Mono 5.18.0.266\r\n1. Create a new XM app\r\n2. Switch to XM Full: .NET 4.7.2\r\n3. Add a package reference to Microsoft.CodeAnalysis.Common 3.0.0-beta3-final\r\n4. Note that System.Memory is a dependency.\r\n5. Build\r\n\r\nExpected Results:\r\n\r\nSystem.Memory.dll ends up in output area and app bundle.\r\n\r\nActual Results:\r\n\r\nSystem.Memory.dll is nowhere to be found.\r\n\r\nThis report was originally from @sandyarmstrong internally."},{"Id":"9140495084","Type":"PullRequestEvent","CreatedAt":"2019-02-26T17:45:42","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5671","RelatedDescription":"Opened pull request \"[XHarness] Remove the test runs that are not needed in mac os x.\" (#5671) at xamarin/xamarin-macios","RelatedBody":"The new test dlls already cover some of the tests. This PR removes those\r\nthat have the same amount or more passes in the new style tests.\r\n\r\nPlease read\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/794210/ to see\r\nthe run results.\r\n\r\nRelated PR: https://github.com/xamarin/xamarin-macios/pull/5668"},{"Id":"9140450459","Type":"PullRequestEvent","CreatedAt":"2019-02-26T17:39:21","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5670","RelatedDescription":"Opened pull request \"[xcode10.2] [OpenGL] Fix MonoMacGameView .ctor when hardware acceleration isn\\u0027t available\" (#5670) at xamarin/xamarin-macios","RelatedBody":"- Fixes #4417: [XM] Add a `Create` method for the 'AppKit.NSOpenGLPixelFormat' type\n  (https://github.com/xamarin/xamarin-macios/issues/4417)\n- Doing `new MonoMacGameView (ContentView.Frame)` on CI fails because hardware acceleration isn't available.\n  One of our samples had that code: https://github.com/xamarin/mac-samples/blob/a41f4387dc28617e4207b3759617e788aad383ed/MacOpenTK/MacOpenTK/MainWindow.cs#L40\n  This made some QA sample tests fail.\n\nBackport of #5614.\n\n/cc @VincentDondain "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":9,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":67,"FavoriteCount":30,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":25,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":20,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":25,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":42,"FavoriteCount":23,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":16,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":36,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":66,"FavoriteCount":22,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":42,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":71,"FavoriteCount":28,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":156,"FavoriteCount":74,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2019-02-27T05:31:21.464025Z","RunDurationInMilliseconds":2521}