{"Data":{"Blog":{"FeedItems":[{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10389823391","Type":"PullRequestEvent","CreatedAt":"2019-09-11T01:05:46","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7540","RelatedDescription":"Merged pull request \"Mitigate \"Internal Server Error\" on package uploads\" (#7540) at NuGet/NuGetGallery","RelatedBody":"`HttpStatusCodeResult` throws if the `StatusDescription` property is longer than 512 characters (see [this documentation](https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse.statusdescription?redirectedfrom=MSDN&view=netframework-4.8#exceptions)), which results in a HTTP 500 response. I wasn't able to determine which code path affected the user as a few suspicious paths append an exception message to the description.\r\n\r\nThis change mitigates the issue by truncating HTTP Status Descriptions if they are longer than 512 characters.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7536"},{"Id":"10389543312","Type":"PullRequestEvent","CreatedAt":"2019-09-10T23:47:53","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7540","RelatedDescription":"Opened pull request \"Mitigate \"Internal Server Error\" on package uploads\" (#7540) at NuGet/NuGetGallery","RelatedBody":"`HttpStatusCodeResult` throws if the `StatusDescription` property is longer than 512 characters (see [this documentation](https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse.statusdescription?redirectedfrom=MSDN&view=netframework-4.8#exceptions)), which results in a HTTP 500 response. I wasn't able to determine which code path affected the user as a few suspicious paths append an exception message to the description.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7536"},{"Id":"10389477517","Type":"PullRequestEvent","CreatedAt":"2019-09-10T23:30:39","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7539","RelatedDescription":"Merged pull request \"Minor icon fixes\" (#7539) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/NuGetGallery/issues/7093\r\n\r\nThe following warning will now appear also when the package is being validated:\r\n\r\n![image](https://user-images.githubusercontent.com/102933/64655611-a15f7200-d3e1-11e9-9595-077808b103c1.png)\r\n\r\n(previously it was only showing for validated packages that were not indexed yet).\r\n\r\nAlso, changed the \"longer\" to \"large\" in \"file too long\" message.\r\n\r\nTested both changes in dev."},{"Id":"10389286430","Type":"PullRequestEvent","CreatedAt":"2019-09-10T22:44:59","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7539","RelatedDescription":"Opened pull request \"Minor icon fixes\" (#7539) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/NuGetGallery/issues/7093\r\n\r\nThe following warning will now appear also when the package is being validated:\r\n\r\n![image](https://user-images.githubusercontent.com/102933/64655611-a15f7200-d3e1-11e9-9595-077808b103c1.png)\r\n\r\n(previously it was only showing for validated packages that were not indexed yet).\r\n\r\nAlso, changed the \"longer\" to \"large\" in \"file too long\" message.\r\n\r\nTested both changes in dev."},{"Id":"10389097924","Type":"PullRequestEvent","CreatedAt":"2019-09-10T22:05:57","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7530","RelatedDescription":"Merged pull request \"[SDL] Gallery.Core uses the SHA512 for copy checks. \" (#7530) at NuGet/NuGetGallery","RelatedBody":"Gallery.Core uses the SHA512 for copy checks. \r\n\r\nTowards fixing MD5 task:\r\nNuGet/Engineering#2377\r\nNuGet/Engineering#2672\r\n\r\nThe integration test has covered the tests for this change. "},{"Id":"10388967424","Type":"PullRequestEvent","CreatedAt":"2019-09-10T21:42:38","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7538","RelatedDescription":"Opened pull request \"[ReleasePrep][2019.09.10]RI of dev into master\" (#7538) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10388476217","Type":"PullRequestEvent","CreatedAt":"2019-09-10T20:28:25","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7510","RelatedDescription":"Merged pull request \"Add abbr tags to hidden column headers in display package version history table\" (#7510) at NuGet/NuGetGallery","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/905742\r\n\r\nAlthough we are compliant with `aria-label` alone, according to one of our accessibility contacts, we should add `abbr` as well."},{"Id":"10388437888","Type":"IssuesEvent","CreatedAt":"2019-09-10T20:23:11","Actor":"donnie-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7537","RelatedDescription":"Opened issue \"NuGet.org Package Version should link to commit in Source Code\" (#7537) at NuGet/NuGetGallery","RelatedBody":"### Describe the solution you'd like\r\nWe often know both the Repo URL and the commit hash for a given NuGet package on NuGet.org. The current \"Source Repository\" link only takes me to the repo (latest commit shown), but would be nice if there was a link directly to that commit when we see the package and hash match. A simple visual indicator could tell the user that \"we have the link directly to this source code.\"\r\n\r\nExample indicator: 😀\r\n\r\nEach version could link to the source code for that version of the package. This could be useful when I have a bug that I suspect a package is responsible for, and I can see the source code for the package I am using. I may not be able to upgrade to the latest version right now (for whatever reason), so seeing the latest commit isn't always useful.\r\n\r\nWe own GitHub, TFS and NuGet.org, so at least those combinations of products could utilize this feature when we know the values mentioned above. \r\n"},{"Id":"10388344271","Type":"IssuesEvent","CreatedAt":"2019-09-10T20:10:14","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6852","RelatedDescription":"Closed issue \"E2E test for package deprecation\" (#6852) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10389499222","Type":"IssuesEvent","CreatedAt":"2019-09-10T23:36:13","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8562","RelatedDescription":"Closed issue \"[Test Failure]The “Update” button is still clickable in “Browse” tab on PM UI when the package with latest version has been installed\" (#8562) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: D16.3 29307.09\r\nNuGet Version: Release-5.3.x\\5.3.0.6231\r\nOS Version: Windows-10-Enterprise-19H1-04-05-2019.\r\n## Detailed repro steps \r\n1. Launch Visual Studio 2019.\r\n2. Create a C# Console Application (.Net Core) project and open PM UI in Solution Explorer window.\r\n3. Install a package (e.g. Newtonsoft.json) with latest version into the project.\r\n## Expected\r\nThe “Update” button should be gray in browse tab on PM UI right panel as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/64520707-48340780-d329-11e9-8b8a-f26ba4221b4f.png)\r\n## Actual\r\nThe “Update” button still is clickable in “Browse” tab on PM UI when the package with latest version has been installed as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/64520762-5f72f500-d329-11e9-9407-a0aa0cbb4d97.png)\r\n## Notes\r\n1. The issue does not repro on D16.3\\29305.141 + NuGet Client Release-5.3.x\\5.3.0.6224.\r\n2. When switching to the “Installed” tab, the “Update” button is gray, and then switch to the “Browse” tab, the “Update” button turns gray.\r\n\r\n\r\n"},{"Id":"10389399509","Type":"IssuesEvent","CreatedAt":"2019-09-10T23:11:29","Actor":"dsplaisted","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8571","RelatedDescription":"Opened issue \"Restore failing with \"Too many open files in system\" inside docker\" (#8571) at NuGet/Home","RelatedBody":"One of our tests in the dotnet/sdk repo (GivenThatWeWantToPublishAWebApp.It_publishes_as_framework_dependent_by_default) is failing in CI for the Linux-portable legs, which run inside docker.  Restore is failing with the error \"Too many open files in system\".\r\n\r\nThe project which is being restored looks like this:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.9\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nHere is a run where it is failing: https://dev.azure.com/dnceng/public/_build/results?buildId=348310&view=ms.vss-test-web.build-test-results-tab&runId=10462046&resultId=100023&paneView=debug\r\n\r\nHere's the output for the failure:\r\n\r\n```\r\n/home/vsts/work/1/s/artifacts/bin/redist/Release/dotnet-with-previous-runtimes/dotnet msbuild /t:restore /home/vsts/work/1/s/artifacts/tmp/Release/dotnetSdkTests/It_publishes_---43300696/web.csproj -p:Configuration=Release\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19426-01+faf5e5d75 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetmyget.blob.core.windows.net/artifacts/nuget-build/nuget/v3/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetmyget.blob.core.windows.net/artifacts/nuget-build/nuget/v3/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnet.myget.org/F/templating/api/v3/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnet.myget.org/F/templating/api/v3/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-toolset/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-toolset/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-windowsdesktop/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-windowsdesktop/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-extensions/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-extensions/flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.localization.abstractions/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.extensions.logging.debug/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.extensions.logging.debug/index.json'.\r\n  Too many open files in system\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore/index.json'.\r\n  Too many open files\r\n/home/vsts/work/1/s/artifacts/bin/redist/Release/dotnet-with-previous-runtimes/sdk/3.0.100-rc2-014208/NuGet.targets(123,5): error : Failed to retrieve information about 'Microsoft.Extensions.Localization' from remote source 'https://dotnetmyget.blob.core.windows.net/artifacts/nuget-build/nuget/v3/flatcontainer/microsoft.extensions.localization/index.json'. [/home/vsts/work/1/s/artifacts/tmp/Release/dotnetSdkTests/It_publishes_---43300696/web.csproj]\r\n/home/vsts/work/1/s/artifacts/bin/redist/Release/dotnet-with-previous-runtimes/sdk/3.0.100-rc2-014208/NuGet.targets(123,5): error :   Too many open files in system [/home/vsts/work/1/s/artifacts/tmp/Release/dotnetSdkTests/It_publishes_---43300696/web.csproj]\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/flatcontainer/microsoft.extensions.logging.debug/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/flatcontainer/microsoft.extensions.logging.debug/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-windowsdesktop/flatcontainer/microsoft.extensions.logging.debug/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-toolset/flatcontainer/microsoft.extensions.options.configurationextensions/index.json'.\r\n  Name or service not known\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-toolset/flatcontainer/microsoft.extensions.options.configurationextensions/index.json'.\r\n  Name or service not known\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetmyget.blob.core.windows.net/artifacts/msbuild/nuget/v3/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetmyget.blob.core.windows.net/artifacts/msbuild/nuget/v3/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-extensions/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Bad value for ai_flags\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-extensions/flatcontainer/microsoft.extensions.localization/index.json'.\r\n  Bad value for ai_flags\r\n```\r\n\r\nHere is a zip with the test run logs: [Microsoft.NET.Publish.Tests.zip](https://github.com/NuGet/Home/files/3598097/Microsoft.NET.Publish.Tests.zip)\r\n"},{"Id":"10388849785","Type":"IssuesEvent","CreatedAt":"2019-09-10T21:23:10","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8570","RelatedDescription":"Opened issue \"Retarget task in dotnet/sdk to netcoreapp3.0 when ready to insert nuget bits targetinig netstandard2.1\" (#8570) at NuGet/Home","RelatedBody":"When it's ready to insert nuget bits targeting netstandard2.1, \r\nplease remember to go to the dotnet/SDK repository , change sdk/src/Tasks/Microsoft.NET.Build.Tasks/Microsoft.NET.Build.Tasks.csproj to retarget netcoreapp3.0.\r\n\r\nSo that SDK will resolve the NuGet.Packaging targeting netstandard2.1. "},{"Id":"10388550007","Type":"IssuesEvent","CreatedAt":"2019-09-10T20:38:59","Actor":"livarcocc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8569","RelatedDescription":"Opened issue \"Warning NU5048: The 'PackageIconUrl'/'iconUrl' element is deprecated with 3.0.100-preview9-014004\" (#8569) at NuGet/Home","RelatedBody":"_From @kdcllc on Thursday, September 5, 2019 4:49:06 PM_\r\n\r\nThis warning is displayed with DotNetCore 3.0.100-preview9-014004 with the following tag:\r\n ```\r\n<PackageIconUrl>https://github.com/kdcllc/Bet.AspNetCore/raw/master/img/logo64x64.png</PackageIconUrl>\r\n```\r\nWhen changed to `<PackageIcon>` the sdk msbuild action is not able to find the local file.\r\n\r\n\r\n_Copied from original issue: dotnet/core-sdk#4588_"},{"Id":"10388417122","Type":"IssuesEvent","CreatedAt":"2019-09-10T20:20:13","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8568","RelatedDescription":"Opened issue \"PM UI solution view right pane should indicate what versions in the table are deprecated\" (#8568) at NuGet/Home","RelatedBody":"In the solution view, the right pane does not indicate what installed versions in the table are deprecated. This makes it difficult to identify which projects are using deprecated versions and should be updated to a later version."},{"Id":"10388400402","Type":"IssuesEvent","CreatedAt":"2019-09-10T20:18:14","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8567","RelatedDescription":"Opened issue \"PM UI solution view left pane should show \"multiple versions\" when multiple versions are installed instead of minimum\" (#8567) at NuGet/Home","RelatedBody":"When multiple versions are installed, the left pane of the solution view currently shows the minimum version installed. This is not very descriptive, and is confusing because it hides the other versions installed. It should say \"multiple versions\" or something equally descriptive."},{"Id":"10388257901","Type":"IssuesEvent","CreatedAt":"2019-09-10T19:57:58","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8541","RelatedDescription":"Reopened issue \"Deprecation info is not visible, by default, on installed tab\" (#8541) at NuGet/Home","RelatedBody":"Feature: Deprecation\r\n\r\nThe idea of the feature on VS was to show the deprecation info as warning ⚠️ on the INSTALLED tab. Clicking on this tab leads to the packages listed and are deprecated using the warning ⚠️ icon on package’s installed version. Clicking on this reveals the warning ⚠️ icon and deprecation info on the details pane. Essentially the warning ⚠️ icons leads to the issue details.\r\n\r\nThis doesn’t happen today because the installed tab shows the package details of the latest version by default and not if the one that’s installed.\r\n\r\nProposed fix, reviewed by UX:\r\n* There is no need to show both the installed  version and the latest version on the installed tab. We can show just the one installed:\r\n\r\nVersion: \\<Installed version in the drop down> UnistallButton\r\n\r\nWill update the proposed UX soon."},{"Id":"10384514032","Type":"IssuesEvent","CreatedAt":"2019-09-10T12:11:30","Actor":"dasMulli","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8566","RelatedDescription":"Opened issue \"Provide mechanism to mark packages as PackageReference style only\" (#8566) at NuGet/Home","RelatedBody":"Similar to \"minimum client version\", a nuspec should have a feature to indicate that the package was authored for consumption only for packages using `PackageReference`.\r\n\r\nCurrently, package authors have to add targets to create a build error when the package was installed using packages.config.\r\n\r\nThere should be a path forward for allowing maintainers to drop packages.config support, especially when the supported platforms will only use SDK-style projects (.NET Core, upcoming Xamarin, possibly UWP projects) or PackageReference by default.\r\nThis migration path should create an error on package install rather than build to be visible to the user and guide the user to PackageReference migration documentation.\r\n"},{"Id":"10380641214","Type":"IssuesEvent","CreatedAt":"2019-09-10T00:22:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8565","RelatedDescription":"Opened issue \"Project Dependencies of ProjectReferences marked as PrivateAssets should not be included in the lock file up to date check\" (#8565) at NuGet/Home","RelatedBody":"[8493.zip](https://github.com/NuGet/Home/files/3593090/8493.zip)\r\n\r\nExtract the above project, run dotnet restore --locked-mode\r\n\r\nMotivation from https://github.com/NuGet/Home/issues/8493. \r\n\r\nIssue being hit by @bddckr \r\n\r\nfyi @tebeco Not your specific issue, but one that the discussion produced. \r\n\r\nI want to keep this issue focused to the problem at hand. \r\n\r\nSpecifically refer to https://github.com/NuGet/Home/issues/8493#issuecomment-526537492. \r\n\r\nNote that this has never worked correctly, so not a regression (in 4.9, it simply didn't validate it)\r\n\r\nThe fix is: https://github.com/NuGet/NuGet.Client/blob/638f34578d2221abc1259286ce2d4c132600cea7/src/NuGet.Core/NuGet.ProjectModel/ProjectLockFile/PackagesLockFileUtilities.cs#L168\r\n\r\nWe should strip out the PrivateAssets=All project references from `p2pSpecProjectRestoreMetadataFrameworkInfo.ProjectReferences`. \r\n\r\nfyi @rrelyea  "},{"Id":"10379788263","Type":"IssuesEvent","CreatedAt":"2019-09-09T21:20:36","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8516","RelatedDescription":"Closed issue \"Solution PM UI - Deprecation warning icon has issues\" (#8516) at NuGet/Home","RelatedBody":"![image](https://user-images.githubusercontent.com/2878341/63895701-bc26f500-c9a4-11e9-91c3-08f27f91c915.png)\r\n\r\n\r\n1. Create a solution with 1 project.\r\n1. Install a deprecated package.\r\n1. Open the solution level PM UI\r\n1. Go to the installed tab.\r\n\r\nYou will see that the installed label has a warning icon, but in the packages list you cannot distinguish visually which package is deprecated. This is an issue. \r\n\r\nNote that this is not an issue on the project level PM UI. \r\n\r\n![image](https://user-images.githubusercontent.com/2878341/63895798-0c9e5280-c9a5-11e9-9eef-2024bebb9fe5.png)\r\n\r\nThis leads to an underwhelming experience, that I believe we should fix before shipping. \r\n\r\n//cc @rrelyea @anangaur @xavierdecoster @scottbommarito @NuGet/nuget-client "},{"Id":"10379786786","Type":"IssuesEvent","CreatedAt":"2019-09-09T21:20:23","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8541","RelatedDescription":"Closed issue \"Deprecation info is not visible, by default, on installed tab\" (#8541) at NuGet/Home","RelatedBody":"Feature: Deprecation\r\n\r\nThe idea of the feature on VS was to show the deprecation info as warning ⚠️ on the INSTALLED tab. Clicking on this tab leads to the packages listed and are deprecated using the warning ⚠️ icon on package’s installed version. Clicking on this reveals the warning ⚠️ icon and deprecation info on the details pane. Essentially the warning ⚠️ icons leads to the issue details.\r\n\r\nThis doesn’t happen today because the installed tab shows the package details of the latest version by default and not if the one that’s installed.\r\n\r\nProposed fix, reviewed by UX:\r\n* There is no need to show both the installed  version and the latest version on the installed tab. We can show just the one installed:\r\n\r\nVersion: \\<Installed version in the drop down> UnistallButton\r\n\r\nWill update the proposed UX soon."},{"Id":"10378796011","Type":"IssuesEvent","CreatedAt":"2019-09-09T18:58:15","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8437","RelatedDescription":"Closed issue \"Docs for the deterministic pack switch\" (#8437) at NuGet/Home","RelatedBody":""},{"Id":"10378251654","Type":"IssuesEvent","CreatedAt":"2019-09-09T17:42:37","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8536","RelatedDescription":"Closed issue \"Publish release notes for 5.3\" (#8536) at NuGet/Home","RelatedBody":"Likely should ship release notes for 5.3 when preview3 ships.\nFinalize soon."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-09-11T05:30:49.4829134Z","RunDurationInMilliseconds":2658}