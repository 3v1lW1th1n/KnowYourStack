{"Data":{"Blog":{"FeedItems":[{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7894273804","Type":"PullRequestEvent","CreatedAt":"2018-06-28T20:53:58","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1901","RelatedDescription":"Opened pull request \"[Xamarin.ProjectTools] only save packages.config if it changes\" (#1901) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1878\r\n\r\nThe way `Xamarin.ProjectTools` saves `packages.config`, it would\r\naccidentally trigger `_CleanIntermediateIfNuGetsChange`. It saves the\r\nfile *every* time, regardless if the contents changed or not. This\r\nwould play havoc with `_CleanIntermediateIfNuGetsChange` and cause it\r\nto run when it shouldn't.\r\n\r\nSo I modeled what we are currently doing for conditionally saving the\r\nproject file. I keep the last `packages.config` contents around, and\r\nmake sure it only saves to disk if it changes. Using\r\n`DateTimeOffSet.MinValue` as a `Timestamp` will prevent the file from\r\nbeing written to disk.\r\n\r\nI updated two tests to validate this change, which also adds some\r\nadditional validation to the `_CleanIntermediateIfNuGetsChange`\r\ntarget."},{"Id":"7893792015","Type":"PullRequestEvent","CreatedAt":"2018-06-28T19:14:57","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1900","RelatedDescription":"Opened pull request \"[tests] fix for first launch of adb\" (#1900) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/77cf939df5e6d3bf657cb191db819abc99b6957b\r\n\r\nSince 77cf939, we have been killing adb after tests complete.\r\n\r\nThis causes an issue if you are running a test in an IDE that uses\r\n`BaseTest.HasDevices`. The first run will likely work, but the second\r\none fails saying `Test Skipped no devices or emulators found.`.\r\n\r\nIf you run a test, and adb is not already running, consider the\r\nfollowing code:\r\n\r\n    var result = RunAdbCommand ($\"{adbTarget} shell getprop ro.build.version.sdk\");\r\n\r\nIt will return with:\r\n\r\n    27* daemon not running; starting now at tcp:5037\r\n    * daemon started successfully\r\n\r\nSince we pass the result to `int.TryParse`, we are treating the\r\ncommand as if it had failed, meaning no devices were attached.\r\n\r\nTo make this more robust, we can split on the `*` character and take\r\nthe first item. This allows this command to work even if adb is being\r\nlaunched for the first time.\r\n\r\nOther changes:\r\n- We also do not need to call `Trim ()` from the result of\r\n  `RunAdbCommand` since it already calls `Trim ()`."},{"Id":"7892988631","Type":"PullRequestEvent","CreatedAt":"2018-06-28T16:33:43","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1899","RelatedDescription":"Opened pull request \"[tests] fix for launching emulator on Windows\" (#1899) at xamarin/xamarin-android","RelatedBody":"Context: https://developer.android.com/studio/run/emulator-commandline\r\n\r\nWhen attempting to use the emulator created from our build, on Windows\r\nI commonly get an error such as:\r\n\r\n    adb : error : failed to copy 'bin\\TestDebug\\Mono.Android_Tests-Signed.apk' to '/data/local/tmp/Mono.Android_Tests-Signed.apk': remote No space left on device [tests\\RunApkTests.targets]\r\n\r\nThe issue seems to be there is not enough disk space allocated to\r\n`/data/local/tmp/`.\r\n\r\nWhen I look at the build log, where we start the emulator:\r\n\r\n    [emulator stdout]   disk.cachePartition.size = 66m\r\n\r\nIt appears that only 66MB is allocated by default. I'm not sure how we\r\naren't hitting the same problem on other platforms.\r\n\r\nIf I add the flag `-cache-size 512`, I now see:\r\n\r\n    [emulator stdout]   disk.cachePartition.size = 512m\r\n\r\nAnd now I can properly install all of our test APKs.\r\n\r\n_NOTE: I also had to delete my emulator when testing this change. It\r\nappears the new setting does not help unless you create a fresh\r\nemulator?_"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7895247902","Type":"IssuesEvent","CreatedAt":"2018-06-29T02:01:57","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2732","RelatedDescription":"Closed issue \"Issue in latest update of Xamarin.Forms(v3.0). Items are not shown when change the border color in the renderer.\" (#2732) at xamarin/Xamarin.Forms","RelatedBody":"Hi Team,\r\n\r\n### Description\r\n\r\nI have write the extended class of **ContentView** and load the label as a content, then add the contentview as a children of StackLayout which is loaded inside the ScrollView.\r\nI have a property IsSelected in the ContentView and changed the IsSelected property in the TapGesture event of the label loaded in the ContentView.\r\nI have write the Renderer class for the ContentView in the UWP platform, and set the border color for the element, but the label text is not shown.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample\r\n2. Navigate the page by click the button.\r\n3. Click the label and you can see that the label text is not shown.\r\n\r\n### Expected Behavior\r\nLabel should shown when change the color.\r\n### Actual Behavior\r\nLabel is not shown.\r\n### Basic Information\r\n\r\n- Version with issue: **Xamarin.Forms(v3.0.0.446417)**\r\n- Last known good version: **Xamarin.Forms(v2.5.1.5274636)**\r\n- UWP:  < 16299 >\r\n\r\n### Screenshots\r\n\r\n**Before changing the color**\r\n\r\n![image](https://user-images.githubusercontent.com/39043330/40096791-18d81a3a-58f0-11e8-95e7-da89fe5afe9c.png)\r\n\r\n**After changing the color**\r\n\r\n![image](https://user-images.githubusercontent.com/39043330/40096798-25d74044-58f0-11e8-9e77-21abca7c1c83.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[BugSample.zip](https://github.com/xamarin/Xamarin.Forms/files/2007529/BugSample.zip)\r\n\r\n"},{"Id":"7895233904","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:38","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2482","RelatedDescription":"Closed issue \"Animating a `View` that is currently animating will throw  `System.InvalidOperationException`:\" (#2482) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nAnimating a `View` that is currently animating will throw  `System.InvalidOperationException`:\r\n\r\n>TaskCompletionSource[TResult].SetResult (TResult result)\r\nSystem.InvalidOperationException: An attempt was made to transition a task to a final state when it had already completed.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download/Clone sample app reproduction: https://github.com/brminnick/AnimationCrashReproductionSample\r\n2. Build/Deploy AnimationCrashReproductionSample to an Android or iOS emulator/device\r\n3. Quickly double-tap the button on the screen to induce the Exception\r\n\r\n### Expected Behavior\r\n\r\nThe animating Task should be canceled gracefully, avoiding the Exception.\r\n\r\n### Actual Behavior\r\n\r\nPerforming an animation on a `View` that is currently animating will throw  `System.InvalidOperationException`:\r\n\r\n### Basic Information\r\n\r\n- Version with issue: v2.5.1.444934\r\n- Last known good version: Never\r\n- IDE: Visual Studio for Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n  - Android: 8.1\r\n  - UWP:  Unknown\r\n- Android Support Library Version: v27.0.2\r\n- Nuget Packages: Xamarin.Forms\r\n- Affected Devices: iOS, Android, UWP\r\n\r\n### Screenshots\r\n\r\nhttps://github.com/brminnick/Videos/blob/master/AnimationCrashReproductionSample/AnimationCrashReproductionSample.gif\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/brminnick/AnimationCrashReproductionSample"},{"Id":"7895233892","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:38","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2858","RelatedDescription":"Closed issue \"[Android] [Business critical] CascadeInputTransparent behavior inconsistent\" (#2858) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI have discovered an issue which is quite critical for our business - `CascadeInputTransparent` behaves differently on Android compared to the other platforms.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a XAML page with the following content:\r\n\r\n```\r\n<Grid>\r\n    <Grid BackgroundColor=\"Blue\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"FillAndExpand\">\r\n        <Grid.GestureRecognizers>\r\n            <TapGestureRecognizer Tapped=\"TapGestureRecognizer_OnTapped\" />\r\n        </Grid.GestureRecognizers>\r\n    </Grid>\r\n    <Grid RowSpacing=\"0\" ColumnSpacing=\"0\" InputTransparent=\"True\" CascadeInputTransparent=\"False\">\r\n        <Grid BackgroundColor=\"Red\" HorizontalOptions=\"Center\" WidthRequest=\"300\" VerticalOptions=\"Center\" HeightRequest=\"300\">\r\n            <Label>Parent - InputTransparent=True, CascadeInputTransparent=False</Label>\r\n        </Grid>\r\n    </Grid>\r\n</Grid>\r\n```\r\n2. In the code-behind add the following `Tapped` event handler:\r\n\r\n```\r\nprivate void TapGestureRecognizer_OnTapped(object sender, EventArgs e)\r\n{\r\n\tDebug.WriteLine(\"Tap captured\");\r\n}\r\n```\r\n\r\n3. Run the app on Android, UWP and iOS \r\n\r\n### Expected Behavior\r\n\r\nTapping the red rectangle should not fire the tapped event handler on the blue `Grid`.\r\n\r\n### Actual Behavior\r\n\r\nTapping the red rectangle does not fire tapped event on the blue `Grid` on UWP and iOS, but it does fire on Android. The same goes for all other gestures.\r\n\r\nIn our project we have a map control instead of a `Grid` this behavior on Android causes that user can manipulate the map over any UI which is above the map, even if it has a solid background, which is not valid.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.482510\r\n- Last known good version: -\r\n- IDE: Visual Studio 15.7.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.1\r\n  - Android: 8.1\r\n  - UWP: 16299\r\n\r\n### Reproduction Link\r\n\r\nRepro for the issue is [available here on my GitHub](https://github.com/MartinZikmund/Xamarin.Forms-input-inconsistency).\r\n"},{"Id":"7895233880","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:38","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1556","RelatedDescription":"Closed issue \"Animation tasks do not complete when Battery Saver enabled\" (#1556) at xamarin/Xamarin.Forms","RelatedBody":"Migrated from https://bugzilla.xamarin.com/show_bug.cgi?id=56831\r\n\r\n# Steps to reproduce\r\n\r\n1. Enable Battery Saver mode on an Android phone that disables animation whilst the mode is enabled (such as Nexus 6P on Android 7.1.2)\r\n2. Call any animation -  var animationTask = label.FadeTo(1)\r\n3. await the resulting task\r\n\r\n\r\n# Expected behavior\r\n\r\nAnimation completes instantly, Task immediately completes.\r\n\r\n\r\n# Actual behavior\r\n\r\nAnimation does not occur, Task never completes. Tested with Xamarin.Forms 2.3.4.247.\r\n\r\nThis caused our production app to completely break on several phones when Battery Saver was enabled, due to a start-up animation never completing.\r\n\r\nThis bug can also be emulated by setting \"Animator duration scale\" to “Animation off” in Android developer options.\r\n\r\n\r\n# Work-around\r\n\r\nWe're using code like this to prevent calling animation methods:\r\n\r\n    bool AreAnimationsDisabled()\r\n    {\r\n        var powerManager = Application.Context.GetSystemService(Context.PowerService) as PowerManager;\r\n        if (powerManager != null)\r\n        {\r\n            if(powerManager.IsPowerSaveMode)\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return Settings.Global.GetFloat(Application.Context.ContentResolver, Settings.Global.AnimatorDurationScale, 0) == 0;\r\n    }\r\n\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.3.4.247\r\n- Platform Target Frameworks: \r\n  - Android: 7.1.2\r\n\r\n### Reproduction Link\r\n\r\n[AnimationDisabledTask (1).zip](https://github.com/xamarin/Xamarin.Forms/files/1622856/AnimationDisabledTask.1.zip)\r\n\r\n"},{"Id":"7895233869","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:38","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2740","RelatedDescription":"Closed issue \"[Android] System.NotSupportedException: Unable to activate instance of type Xamarin.Forms.Platform.Android.PageContainer from native handle\" (#2740) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nJust one of the many manifestations of this issue:\r\nhttps://stackoverflow.com/questions/10593022/monodroid-error-when-calling-constructor-of-custom-view-twodscrollview/10603714#10603714\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=40692\r\n\r\nThis time the class in question is Xamarin.Forms.Platform.Android.PageContainer\r\n\r\n### Steps to Reproduce\r\n\r\nNot sure if you need one. Unless PageContainer must not need a (IntPtr, JniHandleOwnership) constructor in which case I can try to create one.\r\n\r\n### Expected Behavior\r\nException is not thrown inside framework. App does not crash.\r\n\r\n### Actual Behavior\r\nApp crashes. Exception can't be handled in user code.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.0 stable.\r\n- Last known good version: 2.5 (possibly).\r\n- IDE: VS2017\r\n- Platform Target Frameworks:\r\n  - Android: 8.1\r\n\r\n### Stack Trace\r\n```\r\n\r\n05-16 15:12:40.209 I/MonoDroid( 8220): UNHANDLED EXCEPTION:\r\n05-16 15:12:40.238 I/MonoDroid( 8220): System.NotSupportedException: Unable to activate instance of type Xamarin.Forms.Platform.Android.PageContainer from native handle 0x19 (key_handle 0xe9edc19). ---> System.MissingMethodException: No constructor found for Xamarin.Forms.Platform.Android.PageContainer::.ctor(System.IntPtr, Android.Runtime.JniHandleOwnership) ---> Java.Interop.JavaLocationException: Exception of type 'Java.Interop.JavaLocationException' was thrown.\r\n05-16 15:12:40.238 I/MonoDroid( 8220):    --- End of inner exception stack trace ---\r\n05-16 15:12:40.238 I/MonoDroid( 8220):   at Java.Interop.TypeManager.CreateProxy (System.Type type, System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00054] in <25661073a35344a89f215a4cf81af37c>:0 \r\n05-16 15:12:40.238 I/MonoDroid( 8220):   at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00111] in <25661073a35344a89f215a4cf81af37c>:0 \r\n05-16 15:12:40.238 I/MonoDroid( 8220):    --- End of inner exception stack trace ---\r\n05-16 15:12:40.238 I/MonoDroid( 8220):   at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x0017d] in <25661073a35344a89f215a4cf81af37c>:0 \r\n05-16 15:12:40.238 I/MonoDroid( 8220):   at Java.Lang.Object.GetObject (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type type) [0x000b9] in <25661073a35344a89f215a4cf81af37c>:0 \r\n05-16 15:12:40.239 I/MonoDroid( 8220):   at Java.Lang.Object._GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00017] in <25661073a35344a89f215a4cf81af37c>:0 \r\n05-16 15:12:40.239 I/MonoDroid( 8220):   at Java.Lang.Object.GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00000] in <25661073a35344a89f215a4cf81af37c>:0 \r\n05-16 15:12:40.239 I/MonoDroid( 8220):   at Android.Views.View.get_Parent () [0x0001f] in <25661073a35344a89f215a4cf81af37c>:0 \r\n05-16 15:12:40.239 I/MonoDroid( 8220):   at Xamarin.Forms.Platform.Android.ViewExtensions.RemoveFromParent (Android.Views.View view) [0x00004] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\ViewExtensions.cs:25 \r\n05-16 15:12:40.239 I/MonoDroid( 8220):   at Xamarin.Forms.Platform.Android.AppCompat.FragmentContainer.OnDestroyView () [0x0002c] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\AppCompat\\FragmentContainer.cs:71 \r\n05-16 15:12:40.239 I/MonoDroid( 8220):   at Android.Support.V4.App.Fragment.n_OnDestroyView (System.IntPtr jnienv, System.IntPtr native__this) [0x00008] in <3682f8af23a748128467fbf9c57ae876>:0 \r\n05-16 15:12:40.239 I/MonoDroid( 8220):   at (wrapper dynamic-method) System.Object.0657e64b-01ca-491f-b914-ea4443b1ecc1(intptr,intptr)\r\n```\r\n"},{"Id":"7895233861","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:38","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2832","RelatedDescription":"Closed issue \"[UWP] grouped listiview which can load more crashes if scroll too fast\" (#2832) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nHere is a customize listview which load 30 more items each time, if I turn on isgroupingenabled, then the user can not scroll too fast. Everything works fine for non-grouped listivew.\r\nI tried to change the number to load to a larger number, the issue still exists.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample app\r\n2. scroll rapidly vs scroll slowly\r\n3. crash / work\r\n\r\n### Expected Behavior\r\nEverything should be fine\r\n### Actual Behavior\r\nscroll too fast crashes the app\r\n### Basic Information\r\n[BlankApp1.zip](https://github.com/xamarin/Xamarin.Forms/files/2039445/BlankApp1.zip)\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7895233857","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:38","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3053","RelatedDescription":"Closed issue \"[UWP] Moving items around on an Observable Collection causes the last item to disappear\" (#3053) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nMoving items around in an ObservableCollection on UWP sometimes causes an exception here\r\n\r\n```c#\r\n\t\tvoid PackChild()\r\n\t\t{\r\n\t\t\tif (Element.Content == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tIVisualElementRenderer renderer = Element.Content.GetOrCreateRenderer();\r\n\t\t\tControl.Child = renderer.ContainerElement;\r\n\t\t}\r\n```\r\n\r\nCausing the item not to render\r\n\r\n### Steps to Reproduce\r\n\r\n```c#\r\nItemsSource = new ObservableCollection<Item>(Enumerable.Range(0, 3).Select(x => new Item() { Name = $\"Item {x}\" })),\r\n\r\n...\r\n\r\nnew Button()\r\n{\r\n\tText = \"I want to Move it\",\r\n\tCommand = new Command(() =>\r\n\t{\r\n\t\tvar collection = listView.ItemsSource as ObservableCollection<Item>;\r\n\t\tcollection.Add(new Item(){ Name =  Guid.NewGuid().ToString() });\r\n\t\tcollection.Move(3,1);\r\n\t})\r\n},\r\n```\r\n\r\n### Expected Behavior\r\nThe last item shouldn't disappear\r\n\r\n### Actual Behavior\r\nThe last item disappears\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5+ (maybe even earlier)\r\n  - UWP:  16299 \r\n\r\n\r\n### Reproduction Link\r\n[UwpMoveItemsAround.zip](https://github.com/xamarin/Xamarin.Forms/files/2106974/UwpMoveItemsAround.zip)\r\n"},{"Id":"7895233850","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:37","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2617","RelatedDescription":"Closed issue \"[UWP] Error on binding ListView with duplicated items\" (#2617) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen using a ListView with the Binding of a List with the same value on each row, we receive the Exception: System.ArgumentException: 'Value does not fit the expected range.'\r\n\r\nExample:\r\n\r\n1. ListView:\r\n```xaml\r\n       <ListView ItemsSource=\"{Binding List}\">\r\n            <ListView.ItemTemplate>\r\n                <DataTemplate >\r\n                    <ViewCell>\r\n                        <Frame BackgroundColor=\"Beige\" CornerRadius=\"5\">\r\n                            <Label Text=\"{Binding Name}\" WidthRequest=\"100\" HeightRequest=\"50\" TextColor=\"Aqua\"/>\r\n                        </Frame>\r\n                    </ViewCell>\r\n                </DataTemplate>\r\n            </ListView.ItemTemplate>\r\n        </ListView>\r\n```\r\n\r\n2. Binding List:\r\n```C#\r\nList = new ObservableCollection<string>()\r\n{\r\n  \"Item 1\",\r\n  \"Item 1\",\r\n  \"Item 1\",\r\n  \"Item 1\",\r\n  \"Item 1\"\r\n};\r\n```\r\n\r\nOn the project I created to reproduce the error, I used a model with the same reference in each row.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a project with a ListView with the layout above.\r\n2. Fill in the ItemSource with a list where items refer to the same item or a list with the same content, as represented above.\r\n\r\n### Expected Behavior\r\n\r\nA ListView filled with the same item in every row.\r\n\r\n### Actual Behavior\r\n\r\nException: System.ArgumentException: 'Value does not fall within the expected range.'\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.446417\r\n- Last known good version: 2.5.0.280555\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: \r\n  - UWP: 10.0 Build 16299\r\n\r\n### Screenshots\r\n\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/wachs/FrameListview"},{"Id":"7895233838","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:37","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3073","RelatedDescription":"Closed issue \"WebView shows blank screen with XF3.0\" (#3073) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n### Description\r\nXamarin.Forms WebView control doesn't apply custom port in URL on iOS and shows blank screen.\r\n\r\n### Steps to Reproduce\r\n1. Create empty Xamarin.Forms app.\r\n2. In xaml add <WebView Source=\"http://portquiz.net:8080/\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"FillAndExpand\" />\r\n3. Run it on iOS.\r\n\r\n### Expected Behavior\r\nThe page is opened. (It does on Android)\r\n\r\n### Actual Behavior\r\nBlank screen displayed.\r\n\r\n### Basic Information\r\n- Version with issue:  Xamarin.Forms.3.0.0.561731\r\n- Last known good version: --\r\n- IDE: VisualStudio 2017 15.7.2\r\n- Affected Devices: Checked on iPhone 7 Plus\r\n\r\n### Reproduction Link\r\nhttps://github.com/LGFox/WebView.Bug"},{"Id":"7895233813","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:37","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2798","RelatedDescription":"Closed issue \"[iOS] Secondary Toolbar Items overlapping\" (#2798) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAs originally reported at https://bugzilla.xamarin.com/show_bug.cgi?id=59868, toolbar items are still overlapping.\r\n\r\n### Steps to Reproduce\r\n1. Create a Xamarin Forms App\r\n2. Create a Page with 3 or more Toolbar Items that have images\r\n3. Run it on iOS 11 Simulator or iPhone\r\n\r\n### Expected Behavior\r\nThe Toolbar Items are shown side by side\r\n\r\n### Actual Behavior\r\nThe Toolbar Items are overlapping\r\n\r\n### Basic Information\r\n- Version with issue: 2.5 and newer\r\n- Last known good version: unknown\r\n- IDE: Visual Studio 15.7.2\r\n- Platform Target Frameworks: \r\n  - iOS: 11\r\n- Nuget Packages:\r\n  - Xamarin.Forms: 3.0.0.482510\r\n- Affected Devices:\r\n  - iOS 11 Devices\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/29125873/40353475-e2c5ed70-5db1-11e8-9939-a3ef0e980544.png)\r\n\r\n### Reproduction Link\r\n```\r\nvar page = new ContentPage()\r\n\t\t\t{\r\n\t\t\t\tToolbarItems =\r\n\t\t\t\t{\r\n\t\t\t\t\tnew ToolbarItem{Icon = \"bank.png\"},\r\n\t\t\t\t\tnew ToolbarItem{Icon = \"calculator.png\"},\r\n\t\t\t\t\tnew ToolbarItem{Icon = \"coffee.png\"},\r\n\t\t\t\t\tnew ToolbarItem{Icon = \"bank.png\", Order = ToolbarItemOrder.Secondary},\r\n\t\t\t\t\tnew ToolbarItem{Icon = \"calculator.png\", Order = ToolbarItemOrder.Secondary},\r\n\t\t\t\t\tnew ToolbarItem{Icon = \"coffee.png\", Order = ToolbarItemOrder.Secondary},\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\treturn new NavigationPage( page);\r\n```\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59868\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/1208"},{"Id":"7895233807","Type":"IssuesEvent","CreatedAt":"2018-06-29T01:56:36","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1939","RelatedDescription":"Closed issue \"ArgumentOutOfRangeException on clearing a group on a grouped ListView on Android\" (#1939) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nCrash on Android on clearing items in a group added to the ItemSource of a ListView.\r\nI get a `ArgumentOutOfRangeException` with a stacktrace in the `Xamarin.Forms` namespace instead.\r\n\r\nOn iOS it works just fine.\r\n\r\n### Steps to Reproduce\r\nA & B are lists of items created in the constructor, empty\r\nX is the list of lists binded to the ListView\r\n\r\n1. Fill list A with Items\r\n2. Add list A & B to X\r\n3. Doing some async code, like loading items to be added\r\n4. Add Items to List B\r\n5. Clear list A `collectionA.Clear()`\r\n\r\nBoth lists A & B are never removed from X.\r\n\r\n### Expected Behavior\r\nNo crash. An empty group is also empty in the ListView and it can be cleared any time.\r\n\r\n### Actual Behavior\r\nThe App crashes with a `System.ArgumentOutOfRangeException` and the following Stacktrace:\r\n```\r\n[MonoDroid] UNHANDLED EXCEPTION:\r\n[MonoDroid] System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\r\n[MonoDroid] Parameter name: index\r\n[MonoDroid]   at Xamarin.Forms.ListProxy.get_Item (System.Int32 index) [0x0000b] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:127 \r\n[MonoDroid]   at Xamarin.Forms.ListProxy.System.Collections.IList.get_Item (System.Int32 index) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:444 \r\n[MonoDroid]   at Xamarin.Forms.Platform.Android.ListViewAdapter.GetItemViewType (System.Int32 position) [0x00076] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ListViewAdapter.cs:170 \r\n[MonoDroid]   at Android.Widget.BaseAdapter.n_GetItemViewType_I (System.IntPtr jnienv, System.IntPtr native__this, System.Int32 position) [0x00008] in <183d469964214eae9915d97180f9356f>:0 \r\n[MonoDroid]   at (wrapper dynamic-method) System.Object.ac904286-5a39-409d-8d94-c363cfa06872(intptr,intptr,int)\r\n```\r\n### Basic Information\r\nDevice:\r\nNexus 5X Android 8.1\r\n\r\nDependencies:\r\nXamarin.Forms 2.5.0.122203\r\nXamarin.Android.Support.* 26.1.0.1\r\n\r\nXamarin.Android\r\nVersion: 8.2.0.12 (Visual Studio Community)\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: Unkown\r\n- IDE: Visual Studio for Mac 7.4 / Rider 2017.3.1\r\n- Platform Target Frameworks: \r\n  - iOS:  11.8.0.19 -> SDK 11.2\r\n  - Android: 8.2.0.12 -> API 27 (Android 8.1)\r\n  - UWP: --\r\n- Android Support Library Version: 26.1.0.1\r\n- Nuget Packages:\r\n Xamarin.Forms 2.5.0.122203\r\n Xamarin.Android.Support.* 26.1.0.1\r\n Caliburn.Micro 3.2.0\r\n- Affected Devices:\r\n Nexus 5X Android 8.1\r\n\r\n### Reproduction Link\r\n\r\ntbd if really necessary.\r\n"},{"Id":"7893651449","Type":"PullRequestEvent","CreatedAt":"2018-06-28T18:46:15","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3174","RelatedDescription":"Merged pull request \"[Android] Don't mess with the `Button.Padding` if the `Padding` property isn't set\" (#3174) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#2426 added the `Button.Padding` property, but on Android, it was removing necessary padding when the value wasn't set. This checks to ensure that there is a value set before it adjusts it.\r\n\r\n#### Before this change:\r\n![screenshot_1530138753](https://user-images.githubusercontent.com/7827070/42003246-53382aee-7a1f-11e8-877c-81167af7d026.png)\r\n\r\n#### After this change: (should match screenshots in #1570)\r\n![screenshot_1530138641](https://user-images.githubusercontent.com/7827070/42003229-39886848-7a1f-11e8-97ab-76dcee7cb85b.png)\r\n\r\n### Issues Resolved ###\r\n\r\nunreported\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7895168382","Type":"PullRequestEvent","CreatedAt":"2018-06-29T01:30:36","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4365","RelatedDescription":"Merged pull request \"[apidiff] Update XML definitions to 15.7 stable\" (#4365) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7895141047","Type":"PullRequestEvent","CreatedAt":"2018-06-29T01:19:29","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4367","RelatedDescription":"Opened pull request \"[StoreKit] Update bindings to Xcode 10 Beta 1, nothing in beta2\" (#4367) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7895114077","Type":"PullRequestEvent","CreatedAt":"2018-06-29T01:08:04","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4354","RelatedDescription":"Merged pull request \"[CloudKit] Update bindings to Xcode 10 Beta 1, nothing in beta 2\" (#4354) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":57,"FavoriteCount":39,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":86,"FavoriteCount":37,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":33,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":85,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2018-06-29T05:30:55.3661358Z","RunDurationInMilliseconds":4088}