{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10666110947","Type":"PullRequestEvent","CreatedAt":"2019-10-19T00:45:56","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7636","RelatedDescription":"Opened pull request \"Update Jobs Packages\" (#7636) at NuGet/NuGetGallery","RelatedBody":"Follow up to https://github.com/NuGet/NuGetGallery/pull/7634\r\nFinishing pulling in updated jobs packages."},{"Id":"10665651543","Type":"PullRequestEvent","CreatedAt":"2019-10-18T22:23:15","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7634","RelatedDescription":"Merged pull request \"Update Microsoft.Extensions packages \" (#7634) at NuGet/NuGetGallery","RelatedBody":"Update references to Microsoft.Extensions packages from 1.x -> 2.x\r\nAlso retargets net472\r\n\r\nReferences to packages will be updated with official builds.\r\nDepends on https://github.com/NuGet/ServerCommon/pull/318"},{"Id":"10664278975","Type":"IssuesEvent","CreatedAt":"2019-10-18T18:29:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7633","RelatedDescription":"Closed issue \"[Azure Search] Availability tests on preview resources\" (#7633) at NuGet/NuGetGallery","RelatedBody":"May require preview process change b/c the service may go down when we create new preview resources. We should think about how to create preview so that availability tests always pass."},{"Id":"10663600482","Type":"PullRequestEvent","CreatedAt":"2019-10-18T16:49:25","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7635","RelatedDescription":"Merged pull request \"[Gravatar Proxy] Add functional test\" (#7635) at NuGet/NuGetGallery","RelatedBody":"Test run: https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=63423\r\nTest run 2: https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=63525\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7588"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10668750254","Type":"IssuesEvent","CreatedAt":"2019-10-19T22:07:53","Actor":"zooba","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8724","RelatedDescription":"Opened issue \"Cannot find version of nuget.exe pack that supports <icon>\" (#8724) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.3.0.6260\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 10 19H1\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Follow the instructions on nuget.org to replace `iconUrl` element with `icon` element\r\n\r\n2. `nuget.exe pack <my nuspec>`\r\n\r\n3. Either of these outputs, depending on which schema is referenced in the nuspec:\r\n\r\nWith no schema specified: \r\n\r\n> The element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has invalid child element 'icon' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'. List of possible elements expected: 'copyright, owners, iconUrl, dependencies, summary, repository, serviceable, frameworkReferences, licenseUrl, language, tags, releaseNotes, packageTypes, references, requireLicenseAcceptance, frameworkAssemblies, developmentDependency, contentFiles' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'. This validation error occurred in a 'icon' element.\r\n\r\nUsing `http://schemas.microsoft.com/packaging/2016/06/nuspec.xsd`:\r\n\r\n> The schema version of '<my file>' is incompatible with version 5.3.0.4 of NuGet. Please upgrade NuGet to the latest version from http://go.microsoft.com/fwlink/?LinkId=213942.\r\n\r\n(Needless to say, I _am_ running the latest version from that link.)\r\n\r\nAny suggestions where I can find something that supports the recommended option?"},{"Id":"10668366749","Type":"IssuesEvent","CreatedAt":"2019-10-19T19:05:40","Actor":"livarcocc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8723","RelatedDescription":"Opened issue \"Using ValueTuple with PackageReference on Azure Cloud Services\" (#8723) at NuGet/Home","RelatedBody":"_From @jnyrup on Friday, July 27, 2018 7:34:42 AM_\r\n\r\nThis is the same problem as described in this closed/abandoned [issue](https://github.com/Azure/azure-sdk-for-net/issues/3699). That got closed as being reported the wrong place, that's why I'm trying here.\r\nPlease let me know if this is also not the right repo.\r\n\r\nI'm trying to convert my C# projects from old to new csproj style, but this breaks my Azure Cloud Service at runtime because the ReferenceAssembly of `System.ValueTuple.dll` is copied instead of the *implementing* assembly.\r\n\r\nMy projects are currently targeting .NET 4.6.1, which doesn't come with `System.ValueTuple` but should be able to get it by consuming the `System.ValueTuple` NuGet package.\r\n\r\nThe problem is \"solvable\" by targeting .NET 4.7+, as that comes with `System.ValueTuple` included and hence does not need to reference it as a NuGet package.\r\n\r\nI would like to avoid upgrading to .NET 4.7+ if possible, as:\r\n\r\nThis requires an additional deploy step to install .net 4.7+ runtimes on the worker roles, as they come with .net 4.6.2 installed. https://docs.microsoft.com/en-us/azure/cloud-services/cloud-services-guestos-update-matrix#family-5-releases\r\nThis seems as \"the easy way out\", and I would like to know if the problem can be solved otherwise.\r\n\r\n### Steps to reproduce\r\n\r\nI'll use:\r\n* refDLL for: `packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll`, and\r\n* libDLL for `packages\\system.valuetuple\\4.5.0\\lib\\net461\\System.ValueTuple.dll`.\r\nThey are easily distinguishable, as refDLL is 40 kb and libDLL is 78 kb.\r\n\r\nThe code and complete build log file is found here: \r\n[AzureCloudService1.zip](https://github.com/Microsoft/msbuild/files/2234894/AzureCloudService1.zip)\r\n\r\n* `WorkerRole1` consumes `System.ValueTuple` via `packages.config`\r\n* `WorkerRole2` consumes `System.ValueTuple` via `PackageReference`\r\n\r\nAfter building the cloud service the\r\n\r\n* `WorkerRole1\\bin\\Debug` has libDLL.\r\n* `WorkerRole2\\bin\\Debug\\net461` has libDLL\r\n* `AzureCloudService1\\obj\\Debug\\WorkerRole1` has libDLL\r\n* but `AzureCloudService1\\obj\\Debug\\WorkerRole2` has *refDLL*\r\n\r\n### Expected  behavior\r\n\r\n`AzureCloudService1\\obj\\Debug\\WorkerRole2` should contain *libDLL*.\r\n\r\n### Actual behavior\r\n\r\n`AzureCloudService1\\obj\\Debug\\WorkerRole2` contains *refDLL*.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.7.180.61344 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.7.180.61344\r\n```\r\n\r\n### Addionational info\r\n\r\nFrom the logs, I noticed the following difference between WorkerRole1 and WorkerRole2.\r\n\r\nWorkerRole1:\r\n```\r\nC:\\Users\\jonas\\source\\repos\\AzureCloudService1\\packages\\System.ValueTuple.4.5.0\\lib\\net461\\System.ValueTuple.dll\r\nCopyLocal = true\r\nFusionName = System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nHintPath = ..\\packages\\System.ValueTuple.4.5.0\\lib\\net461\\System.ValueTuple.dll\r\nImageRuntime = v4.0.30319\r\nMSBuildSourceProjectFile = C:\\Users\\jonas\\source\\repos\\AzureCloudService1\\WorkerRole1\\WorkerRole1.csproj\r\nMSBuildSourceTargetName = BuiltProjectOutputGroupDependencies\r\nOriginalItemSpec = System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\r\nReferenceAssembly = C:\\Users\\jonas\\source\\repos\\AzureCloudService1\\packages\\System.ValueTuple.4.5.0\\lib\\net461\\System.ValueTuple.dll\r\nReferenceSourceTarget = ResolveAssemblyReference\r\nResolvedFrom = {HintPathFromItem}\r\nVersion = 4.0.3.0\r\nWorkerRole2:\r\n```\r\n\r\n```\r\nC:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nCopyLocal = false\r\nExternallyResolved = true\r\nFusionName = System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nHintPath = C:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nImageRuntime = v4.0.30319\r\nMSBuildSourceProjectFile = C:\\Users\\jonas\\source\\repos\\AzureCloudService1\\WorkerRole2\\WorkerRole2.csproj\r\nMSBuildSourceTargetName = BuiltProjectOutputGroupDependencies\r\nNuGetPackageId = System.ValueTuple\r\nNuGetPackageVersion = 4.5.0\r\nNuGetSourceType = Package\r\nOriginalItemSpec = C:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nPrivate = false\r\nReferenceAssembly = C:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nReferenceSourceTarget = ResolveAssemblyReference\r\nResolvedFrom = {HintPathFromItem}\r\nVersion = 4.0.3.0\r\n```\r\n\r\nAfter searching for other related issues on various Microsoft issue trackers, I found this one, which seems related: https://github.com/dotnet/sdk/issues/1738.\r\n\r\n_Copied from original issue: microsoft/msbuild#3551_"},{"Id":"10666398220","Type":"IssuesEvent","CreatedAt":"2019-10-19T03:14:14","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8722","RelatedDescription":"Closed issue \"Change version to 5.4 preview 3\" (#8722) at NuGet/Home","RelatedBody":""},{"Id":"10665494354","Type":"IssuesEvent","CreatedAt":"2019-10-18T21:49:27","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8722","RelatedDescription":"Opened issue \"Change version to 5.4 preview 3\" (#8722) at NuGet/Home","RelatedBody":""},{"Id":"10661224437","Type":"IssuesEvent","CreatedAt":"2019-10-18T11:50:48","Actor":"ModernRonin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8721","RelatedDescription":"Opened issue \"Question: How to get release notes for a nuget package with the nuget client libraries\" (#8721) at NuGet/Home","RelatedBody":"I'm using the latest nuget client libs to get info about packages from a private package feed.\r\n\r\nI can't seem to find any way to get the release notes, though.\r\nI'm using this:\r\n\r\n```var metadata = await _packageStream.FindPackageAsync(RootNamespace, _configuration.NugetFeedUrl);```\r\n\r\nBut neither metadata nor the versions I can get with \r\n```var versions = await metadata.GetVersionsAsync();```\r\n\r\nhave any related property. \r\n\r\nOn the other hand, the private package feed I use (hosted on TFS 2018 on-prem) displays the release notes just fine, so there must a way of getting at them.\r\n\r\nAny hint would be very appreciated,\r\nthanks,\r\nMark\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"âš  Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Folloâ€¦ https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?â€¦ https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-10-20T05:30:43.1882765Z","RunDurationInMilliseconds":2465}