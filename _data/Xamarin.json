{"Data":{"Blog":{"FeedItems":[{"Title":"Use Maps to Display and Navigate Users with Xamarin.Essentials","PublishedOn":"2019-06-07T16:26:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A common scenario for mobile apps is to help their users get to a specific location. This may be a restaurant, office, or the trailhead for the most amazing hike in the pacific northwest. We can...","Href":"https://devblogs.microsoft.com/xamarin/maps-navagation-xamarin-essentials/","RawContent":null},{"Title":"CheckBox with Xamarin.Forms 4.1.0 Pre-Release","PublishedOn":"2019-06-05T19:34:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Just a few weeks ago we shipped Xamarin.Forms 4.0, which introduced the new Shell navigation for quickly bootstrapping your applications. As well as image source unification to make it convenient to...","Href":"https://devblogs.microsoft.com/xamarin/checkbox-xamarin-forms-4-1-0-pre-release/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in June","PublishedOn":"2019-06-03T18:50:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Jumpstart your next mobile development projects by networking with your local community and getting the latest updates about Xamarin and .NET related technologies. Discover upcoming developer events...","Href":"https://devblogs.microsoft.com/xamarin/june-developer-events-xamarin-dotnet/","RawContent":null},{"Title":"Customer Showcase: BBVA – Augmented Reality House Hunting","PublishedOn":"2019-05-31T16:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently launched a case study series with invited customers to explore their applications using various Microsoft technologies that address business needs. In this post, we look at Valora View, a...","Href":"https://devblogs.microsoft.com/xamarin/bbva-xamarin-customer-showcase/","RawContent":null},{"Title":"Preparing Android Apps for Google Play’s 64-bit Requirements","PublishedOn":"2019-05-29T18:34:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The introduction of Android 5.0 back in 2014 brought official support for 64-bit CPUs. This is a great advancement in Android as 64-bit CPUs deliver great performance improvements for all users...","Href":"https://devblogs.microsoft.com/xamarin/64-bit-requirements-xamarin-android-apps/","RawContent":null},{"Title":"Xamarin.Forms 4.0: Getting Started with Shell","PublishedOn":"2019-05-28T19:16:30+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Xamarin.Forms 4.0 introduced amazing new features to help streamline development when building beautiful mobile apps with C#. The main highlight was the new Xamarin.Forms Shell, which seeks to reduce...","Href":"https://devblogs.microsoft.com/xamarin/shell-xamarin-forms-4-0-getting-started/","RawContent":null},{"Title":"Welcome to the Shell Era: Xamarin.Forms 4.0 Released","PublishedOn":"2019-05-21T16:10:44+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"For the past year, Xamarin has been on a focused journey to improve your productivity by reducing your complexity when building cross-platform mobile applications. Notice the reference to...","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-forms-4-0-the-era-of-shell/","RawContent":null},{"Title":"Managing HTTP & Cleartext Traffic on Android with Network Security Configuration","PublishedOn":"2019-05-17T18:40:55+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Did you know that starting with Android 9 (API level 28) cleartext(non-HTTPS) support is disabled by default? It is always recommended to make connections over HTTPS to ensure that any web...","Href":"https://devblogs.microsoft.com/xamarin/cleartext-http-android-network-security/","RawContent":null},{"Title":"Xamarin Podcast: Microsoft Build 2019 Recap","PublishedOn":"2019-05-14T18:29:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development. This edition also covering a recap of Microsoft Build 2019!\nBuild...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-build-2019-recap/","RawContent":null},{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9785231673","Type":"IssuesEvent","CreatedAt":"2019-06-09T04:32:13","Actor":"softlion","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3188","RelatedDescription":"Opened issue \"FirebaseInitProvider not on main dex by default\" (#3188) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add firebase nuget, or add facebook login nuget (same problem)\r\n2. Use google login or facebook login\r\n3. Enable multidex, add enough classes to go past the 65K limitation (add android support libs for ex)\r\n4 Build and run\r\n\r\n### Expected Behavior\r\nRuns fine\r\n\r\n### Actual Behavior\r\nFails to run with \"not on main dex list\" error for both \r\ncom/google/firebase/provider/FirebaseInitProvider.class\r\nand\r\ncom/facebook/internal/FacebookInitProvider.class\r\n\r\n### Version Information\r\nVS2019 16.1.2\r\n\r\n### Log File\r\n\r\n06-08 19:56:34.762 18387 18387 E AndroidRuntime: java.lang.RuntimeException: Unable to get provider com.google.firebase.provider.FirebaseInitProvider: java.lang.ClassNotFoundException: Didn't find class \"com.google.firebase.provider.FirebaseInitProvider\" on path: DexPathList[[zip file \"/data/app/com.tracks.recorder-1/base.apk\"],nativeLibraryDirectories=[/data/app/com.tracks.recorder-1/lib/x86_64, /data/app/com.tracks.recorder-1/base.apk!/lib/x86_64, /system/lib64, /vendor/lib64]]\r\n"},{"Id":"9783748986","Type":"IssuesEvent","CreatedAt":"2019-06-08T13:15:29","Actor":"kvpt","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3187","RelatedDescription":"Opened issue \"Fail to build Xamarin Forms Android App with Appt2 sur AzureDevops\" (#3187) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Enable appt2 on a Xamarin Forms Android App\r\n2. Build the App with AzureDevOps\r\n\r\n### Expected Behavior\r\nBuild succeed\r\n\r\n### Actual Behavior\r\nBuild fail on AzureDevOps with this error :\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1769,2): Error APT0000: failed to create directory 'C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\gkeyu4ln.ejw\\isatis\\tad'.\r\n\r\nFor information, the same project build perfectly on my local machine with the project also on another disk than the system.\r\n\r\n### Version Information\r\nAzureDevOps Vs2017 image or AzureDevOps Vs2019 image used to build\r\n\r\n### Log File\r\nHere the binlog of the build : [binlog.zip](https://github.com/xamarin/xamarin-android/files/3268571/binlog.zip)\r\n"},{"Id":"9781948716","Type":"PullRequestEvent","CreatedAt":"2019-06-07T21:25:02","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3186","RelatedDescription":"Opened pull request \"Fix Xamarin.Android bundle URL\" (#3186) at xamarin/xamarin-android","RelatedBody":"Without the trailing `/` in the base URL the last part (the configuration) of\r\nthe URL was dropped from the final URL thus pointing to a resource that doesn't\r\nexist."},{"Id":"9781804988","Type":"PullRequestEvent","CreatedAt":"2019-06-07T20:55:35","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3185","RelatedDescription":"Opened pull request \"[build] use Prepare target for AzDO\" (#3185) at xamarin/xamarin-android","RelatedBody":"Instead of running `xaprepare.exe` directly during our build, we\r\nshould instead use the `/t:Prepare` target.\r\n\r\nThis is what developers will use to build Xamarin.Android on Windows,\r\nso this will help us ensure the `Prepare` target continues to work."},{"Id":"9781712885","Type":"PullRequestEvent","CreatedAt":"2019-06-07T20:38:13","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3184","RelatedDescription":"Opened pull request \"Update documentation on building XA on Windows\" (#3184) at xamarin/xamarin-android","RelatedBody":"Make changes to sections which run the preparation stage of the build to use\r\nxaprepare instead of the old `/t:Prepare` target."},{"Id":"9781594268","Type":"PullRequestEvent","CreatedAt":"2019-06-07T20:16:18","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3183","RelatedDescription":"Opened pull request \"Compress our bundle with 7zip\" (#3183) at xamarin/xamarin-android","RelatedBody":"With this change the size goes down a LOT:\r\n\r\n160771876 Jun  7 22:12 'bundle-v21-h9f52cd0-Debug-Linux-libzip=b95cf3f,mono=c6edaa6.7z'\r\n750524441 Jun  7 20:11 'bundle-v21-h9f52cd0-Debug-Linux-libzip=b95cf3f,mono=c6edaa6.zip'"},{"Id":"9781553874","Type":"PullRequestEvent","CreatedAt":"2019-06-07T20:08:51","Actor":"steveisok","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3182","RelatedDescription":"Merged pull request \"Mono 2019 06 xaprepare\" (#3182) at xamarin/xamarin-android","RelatedBody":"Rebase on master + some fixes"},{"Id":"9781513169","Type":"PullRequestEvent","CreatedAt":"2019-06-07T20:01:31","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3182","RelatedDescription":"Opened pull request \"Mono 2019 06 xaprepare\" (#3182) at xamarin/xamarin-android","RelatedBody":"Rebase on master + some fixes"},{"Id":"9781378488","Type":"PullRequestEvent","CreatedAt":"2019-06-07T19:36:30","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3181","RelatedDescription":"Opened pull request \" [Xamarin.Android.Build.Tasks] #deletebinobj \"regression protection\"\" (#3181) at xamarin/xamarin-android","RelatedBody":"I setup a new #deletebinobj \"regression protection\" test:\r\n\r\n* Created the Master/Detail Xamarin.Forms template from Visual Studio\r\n  2017 15.9\r\n* Built it with 15.9\r\n* Zipped it up, and uploaded to Azure\r\n\r\nI created 4 zips: Debug & Release, Windows & Darwin.\r\n\r\nNext I created an `ExistingProject` type in `Xamarin.ProjectTools`, so\r\nI could unzip these files and build them.\r\n\r\nI plan to make further changes to `DeleteBinObjTest.cs` in other PRs.\r\nIt should start apps and connect the debugger like we are doing in\r\nother tests."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9784933137","Type":"PullRequestEvent","CreatedAt":"2019-06-09T00:36:37","Actor":"kvpt","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6467","RelatedDescription":"Opened pull request \"Android - Fix various issues in object dispose methods.\" (#6467) at xamarin/Xamarin.Forms","RelatedBody":"### Context ###\r\nI notice in my apps a lot of these exceptions on Android, very hard (or even impossible) to reproduce.\r\nI fixed some of them in #4707, #4955, #4974 but I continue to have a certain amount of them.\r\nAnd there are plenty of them on the Xamarin Forum or in the issues list of this repository (and the previous on bugzilla).\r\n\r\nWhen fixing the dispose method of the TabbedPageRenderer in #4974, I notice that most dispose methods in the Android backend have also issues.\r\n- Missing native Android ressources dispose/remove/detach\r\n> This cause memory leak\r\n- EventHander unsubscribed after that the ressource used in it was disposed\r\n> This cause race condition and can trigger random \"No view found for Id XXX\", if an event is trigerred during dispose\r\n- Renderer disposed before the view rendered was removed\r\n> This also can cause race condition and can trigger random \"No view found for Id XXX\" or NullReference exception during layout, if android call layout method and try to restore the renderer during dispose\r\n- Base method not called last\r\n> The child class ressources always need to be disposed first, on exception a comment need to explain why\r\n\r\n### Description of Change ###\r\nThe complete modifications list is :\r\n\r\n**AppCompat/CarouselPageRenderer**\r\n- Unsubscribe CollectionChanged event before the viewPager is disposed\r\n- Missing ClearOnPageChangeListeners on the ViewPager\r\n- Remove the ViewPager before dispose the renderer\r\n- Add missing null check on Element before access to children\r\n\r\n**AppCompat/FormsAppCompatActivity**\r\n- Remove the root layout in destroy before dispose\r\n\r\n**AppCompat/ImageButtonRenderer**\r\n- Unsubscribe PropertyChanged event first\r\n- SetOnClickListener to null\r\n- SetOnTouchListener to null\r\n- OnFocusChangeListener to null\r\n\r\n**AppCompat/MasterDetailPageRenderer**\r\n-  Unsubscribe events before dispose\r\n- RemoveDrawerListener before dispose renderer\r\n\r\n**AppCompat/NavigationPageRenderer**\r\n- Unsubscribe events before dispose\r\n- Missing unsubscribe CurrentPage PropertyChanged\r\n- Remove obsolete Android Api Check (Support library used)\r\n- Remove fragment before dispose renderer\r\n- Remove TitleView before dispose her renderer\r\n- Unsubscribe Toolbar items PropertyChanged \r\n- Clear Toolbar menu items\r\n- Remove Toolbar view before dispose her renderer\r\n- Remove DrawerLayout view\r\n\r\n**AppCompat/Platform**\r\n- Unsubscribe FormsAppCompatActivity.BackPressed event before SetPage\r\n- Set Page to null when newRoot == null\r\n- Refactor SetPage so only cleanup method run inside the Handler to prevent possible race-condition in page affection\r\n\r\n**AppCompat/ShellFragmentContainer**\r\n- Call destroy last, no reason to call this method first\r\n\r\n**AppCompat/TabbedPageRenderer**\r\n- Unsubscribe CollectionChanged event before dispose renderer and remove view\r\n- Missing ClearOnPageChangeListeners on the ViewPager\r\n- Wrong ClearOnTabSelectedListeners on the TabLayout\r\n- Dispose renderer last\r\n\r\n**CollectionView/ItemsViewRenderer**\r\n- Missing ItemsViewAdapter dispose, Probable cause of #6427\r\n\r\n**FastRenderers/AutomationPropertiesProvider**\r\n- Missing Unsubscribe Element PropertyChanged\r\n\r\n**FastRenderers/ButtonRenderer**\r\n- OnFocusChangeListener to null\r\n- Unsubscribe Element PropertyChanged event before dispose\r\n\r\n**FastRenderers/FrameRenderer**\r\n- Unsubscribe Element PropertyChanged event before dispose\r\n\r\n**FastRenderers/ImageRenderer**\r\n- Unsubscribe Element PropertyChanged event before dispose\r\n\r\n**FastRenderers/LabelRenderer**\r\n- Unsubscribe Element PropertyChanged event before dispose\r\n- SpannableString Dispose (Not sure if necessary)\r\n- LabelTextColorDefault Dispose (Not sure if necessary)\r\n      \r\n**FastRenderers/VisualElementRenderer**\r\n- Unsubscribe Element PropertyChanged event before dispose\r\n- Dispose GestureManager and AutomationPropertiesProvider last\r\n\r\n**VisualElementPackager**\r\n- Unsubscribe events before clear and dispose\r\n\r\n**VisualElementRenderer**\r\n- Simplify and remove redondants null check\r\n- Unsubscribe Element PropertyChanged event before dispose\r\n\r\n### Issues Resolved ### \r\nA lot of random and hard to reproduce issues.\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nRun all of the solution tests cases, there must be no regression.\r\n\r\n### PR Checklist ###\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X ] Rebased on top of the target branch at time of PR\r\n- [X ] Changes adhere to coding standard\r\n\r\n### Additionnal words ###\r\nThese kind of issues are, in addition, masked by the contructor (IntPtr/JniHandleOwnership), which makes the leaks very difficult to see. I dont remove them in this PR but I think they are an anti pattern which hide the leak instead of fix it.\r\n\r\nTo conclude, the stability being the most critical factor, please prioritize this PR.\r\nI'm sure I have missed some issues, so more pair of eyes are welcome."},{"Id":"9784815686","Type":"IssuesEvent","CreatedAt":"2019-06-08T23:02:10","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6466","RelatedDescription":"Opened issue \"[Bug] The \"XamlGTask\" task could not be initialized with its input parameters.\" (#6466) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nThis appears to be the same issue as #2975\r\n\r\n> The \"References\" parameter is not supported by the \"XamlGTask\" task. \r\n> The \"XamlGTask\" task could not be initialized with its input parameters.  \r\n\r\nI believe it has to do with the mis-matching version of Xamarin.Forms used by projects. I am using Xamarin.Forms 4.0 and I depend on SkiaSharp.Views.Forms, which depends on 3.3.\r\n\r\n**This works on Windows, see the PR in the links.**\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new forms project that uses forms 4\r\n2. Create a library project that uses skiasharp.views.forms 1.68.0\r\n3. Add a reference from the sample netstandard to the new library\r\n\r\nObserve issue.\r\n\r\n### Expected Behavior\r\n\r\nThe project should compile, regardless of the dependency of SkiaSharp.\r\n\r\n### Actual Behavior\r\n\r\nSomehow something is getting mixed up and cont compiling.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- NuGet Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/mono/SkiaSharp.Extended/pull/79\r\n"},{"Id":"9784792320","Type":"PullRequestEvent","CreatedAt":"2019-06-08T22:44:26","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6465","RelatedDescription":"Opened pull request \"[UWP] Fix occasional disappearing content in CV items on UWP\" (#6465) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen ItemContentControl instances are reused by UWP's virtualization, an incorrect Measure implementation can mean that the update Content is never actually loaded. These changes fix ItemContentControl to avoid that situation.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4658\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nSee #4658; since the issue is effectively random (there's no way to control when the List/Grid will reuse an item instance), there's no good way to automate the testing.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9784340659","Type":"IssuesEvent","CreatedAt":"2019-06-08T18:20:00","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6464","RelatedDescription":"Opened issue \"[Bug] Incorrect exception message\" (#6464) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nAn incorrect exception message is provided when a control's event handler does not exist in the code behind when skipping xaml compilation.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.Forms app\r\n2. Create a custom control with an event in a new assembly\r\n3. Use that custom control in XAML without XAML Compilation, but don't add the handler\r\n4. Observe a correct `XamlParseException`, but the message says the type is not found at runtime\r\n5a. Implement the event hander method - all is well\r\n5b. Enable XAML Compilation - observe correct compiler error\r\n\r\n### Expected Behavior\r\nThe runtime exception should say the event handler is not found.\r\n\r\n### Actual Behavior\r\nThe runtime throws an exception saying the whole type is missing.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: not sure\r\n- IDE: VS 2019 16.2 preview 3\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- NuGet Packages: 4.0.0.482894\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9783588605","Type":"PullRequestEvent","CreatedAt":"2019-06-08T11:41:13","Actor":"andreinitescu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6463","RelatedDescription":"Opened pull request \"ITextAlignmentElement VerticalTextAlignment (Entry, SearchBar, EntryCell)\" (#6463) at xamarin/Xamarin.Forms","RelatedBody":"\r\n- Adds VerticalTextAlignment to ITextAlignmentElement\r\n- Adds suport for vertical text alignment on Entry, EntryCell, SearchBar\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - TextAlignment ITextAlignmentElement.VerticalTextAlignment{ get; set; } //Bindable Property\r\n - TextAlignment Entry.VerticalTextAlignment\r\n - TextAlignment EntryCell.VerticalTextAlignment\r\n - TextAlignment SearchBar.VerticalTextAlignment\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n- WPF\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9783333715","Type":"PullRequestEvent","CreatedAt":"2019-06-08T09:03:40","Actor":"mfkl","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6462","RelatedDescription":"Opened pull request \"[GTK] Fix NullReferenceException in NavigationPageRenderer\" (#6462) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix null reference exception\r\n\r\n### Issues Resolved ### \r\n\r\nI think this hasn't been reported yet.\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- GTK\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\nRun `Gtk-BackgroundImage.GTK` from this minimal repro repository https://github.com/mfkl/gtk-repro\r\n\r\nIt gives\r\n```\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.Renderers.NavigationPageRenderer.UpdateBackgroundImage()\tUnknown\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.Renderers.NavigationPageRenderer.OnElementChanged(Xamarin.Forms.Platform.GTK.VisualElementChangedEventArgs e)\tUnknown\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.Renderers.AbstractPageRenderer<Gtk.Fixed, Xamarin.Forms.NavigationPage>.SetElement(Xamarin.Forms.VisualElement element)\tUnknown\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.Platform.CreateRenderer(Xamarin.Forms.VisualElement element)\tUnknown\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.Platform.AddChild(Xamarin.Forms.Page mainPage)\tUnknown\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.Platform.SetPage(Xamarin.Forms.Page newRoot)\tUnknown\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.FormsWindow.UpdateMainPage()\tUnknown\r\nXamarin.Forms.Platform.GTK.dll!Xamarin.Forms.Platform.GTK.FormsWindow.LoadApplication(Xamarin.Forms.Application application)\tUnknown\r\nGtk-BackgroundImage.GTK.exe!Gtk_BackgroundImage.GTK.Program.Main(string[] args) Line 17\tC#\r\n```\r\n\r\nBecause `BackgroundImageSource` is null by default.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9783321124","Type":"PullRequestEvent","CreatedAt":"2019-06-08T08:55:54","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6423","RelatedDescription":"Merged pull request \"[XamlC] Correctly load addresses of values in more compiled binding paths\" (#6423) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis is a follow-up of commit 12f5b702ef4c8bcbd343b6272555ba9f01b36438.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\nNone\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\nRun automated tests.\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9782347782","Type":"PullRequestEvent","CreatedAt":"2019-06-07T23:08:58","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6227","RelatedDescription":"Opened pull request \"Draft PR for parts of Xcode11 UIKit \" (#6227) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9781950810","Type":"PullRequestEvent","CreatedAt":"2019-06-07T21:25:28","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6219","RelatedDescription":"Merged pull request \"[d16-2] [monotouch-test] Ignore MessageHandlerTest.RejectSslCertificatesServicePointManager on macOS 10.10.\" (#6219) at xamarin/xamarin-macios","RelatedBody":"This works around (but doesn't fix) https://github.com/xamarin/maccore/issues/1645.\n\nBackport of #6181.\n\n/cc @rolfbjarne "},{"Id":"9781944856","Type":"PullRequestEvent","CreatedAt":"2019-06-07T21:24:10","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6226","RelatedDescription":"Opened pull request \"[foundation] Fix NSCopying.Copy - the biggest offender of nnot releasing its return value\" (#6226) at xamarin/xamarin-macios","RelatedBody":"note: to be backported to `xcode11` before editing xtro files too much"},{"Id":"9781052564","Type":"PullRequestEvent","CreatedAt":"2019-06-07T18:38:20","Actor":"akoeplinger","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6225","RelatedDescription":"Opened pull request \"Fix from-source Mono build not generate proper dependencies\" (#6225) at xamarin/xamarin-macios","RelatedBody":"The .deps.mk target didn't get generated because its dependency was wrong (Make.config contains the Mono hash and mk/mono.mk doesn't exist, it'd need a `$(TOP)` in front of it).\r\n\r\nAlso do not exclude tests from the dependencies, they should be rebuild when changed too.\r\n\r\nFixes #6224"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1137049335273840640","CreatedAt":"2019-06-07T17:31:01+00:00","UserScreenname":"xamarinhq","Text":"Our cross-platform API library enables any mobile app that uses the Maps API to launch a map w/ a specific location… https://t.co/BWS4qeqtyU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":81,"FavoriteCount":30,"RawContent":null},{"Id":"1136679096954449921","CreatedAt":"2019-06-06T16:59:49+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1136666060189573120","CreatedAt":"2019-06-06T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Compass API; enabling you to monitor the de… https://t.co/6Iq1tNqo0B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":12,"RawContent":null},{"Id":"1136362715805552641","CreatedAt":"2019-06-05T20:02:38+00:00","UserScreenname":"xamarinhq","Text":"Now available... the pre-release version of Xamarin.Forms 4.1. And we're happy to say that CheckBox &amp; improved text… https://t.co/BGmdIAVxAO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":153,"FavoriteCount":67,"RawContent":null},{"Id":"1135657873072148482","CreatedAt":"2019-06-03T21:21:51+00:00","UserScreenname":"xamarinhq","Text":"Jumpstart your next mobile dev projects by networking w/ your local community &amp; getting the latest updates about… https://t.co/39JBottYZu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":18,"RawContent":null},{"Id":"1134529085961621504","CreatedAt":"2019-05-31T18:36:27+00:00","UserScreenname":"xamarinhq","Text":"We're starting a new case study series. Today, we look at Valora View, a mobile app created by BBVA to help custome… https://t.co/Q0HeoB3chG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":21,"RawContent":null},{"Id":"1134188986229035010","CreatedAt":"2019-05-30T20:05:01+00:00","UserScreenname":"xamarinhq","Text":"What's better than sharing 80% of code across #iOS &amp; #Android apps w/ #Xamarin? ...building a backend powered by… https://t.co/EZc7s5adqh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":127,"FavoriteCount":36,"RawContent":null},{"Id":"1134136640929193985","CreatedAt":"2019-05-30T16:37:01+00:00","UserScreenname":"xamarinhq","Text":"August 1 2019, Android apps that ship native libraries must provide a 64-bit v of their app.… https://t.co/JSElMqVSyB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":29,"RawContent":null},{"Id":"1133821797059780608","CreatedAt":"2019-05-29T19:45:56+00:00","UserScreenname":"xamarinhq","Text":"Today on @TheXamarinShow,, @JamesMontemagno &amp; #MSMVP @NicoVermeir shows off a tool that will change the life of eve… https://t.co/lYUf1XXB4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":19,"RawContent":null},{"Id":"1133455659851243520","CreatedAt":"2019-05-28T19:31:02+00:00","UserScreenname":"xamarinhq","Text":"There are some amazing new features to help streamline C# dev when building beautiful mobile apps w/ Xamarin.Forms… https://t.co/MRwO5G62uW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":152,"FavoriteCount":73,"RawContent":null},{"Id":"1131261167085580289","CreatedAt":"2019-05-22T18:10:54+00:00","UserScreenname":"xamarinhq","Text":"Join us right now for the #XamarinForms 4.0 Launch Event Live Stream! https://t.co/YE7Usel1Sb","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":32,"FavoriteCount":14,"RawContent":null},{"Id":"1131230744267972608","CreatedAt":"2019-05-22T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin.Forms team for the Xamarin.Forms 4.0 launch event extravaganza where they will discuss the latest… https://t.co/WJK5Lp4eRK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":24,"RawContent":null},{"Id":"1130900878830002177","CreatedAt":"2019-05-21T18:19:15+00:00","UserScreenname":"xamarinhq","Text":"We've been obsessing over your feedback. Thanks to your commitment to helping us deliver great dev tools, we're ann… https://t.co/uioErOmWr2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":216,"FavoriteCount":88,"RawContent":null},{"Id":"1129486865831272449","CreatedAt":"2019-05-17T20:40:28+00:00","UserScreenname":"xamarinhq","Text":"Did you know that starting with Android 9, cleartext(non-HTTPS) support is disabled by default? In our latest post,… https://t.co/hRUvSFu9c8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":52,"FavoriteCount":27,"RawContent":null},{"Id":"1129423057725083649","CreatedAt":"2019-05-17T16:26:55+00:00","UserScreenname":"xamarinhq","Text":"In the latest @XamarinShow, @JamesMontemagno &amp; @dotMorten intro us to the world of advanced mapping with ArcGIS for… https://t.co/nVZWVivZdG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":27,"RawContent":null},{"Id":"1129055786808877057","CreatedAt":"2019-05-16T16:07:31+00:00","UserScreenname":"xamarinhq","Text":"In today's #MSBuild session replay, we look at how you can craft stunning mobile apps with the Xamarin Visual Desig… https://t.co/W9U6GrPYf1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":64,"FavoriteCount":36,"RawContent":null},{"Id":"1129054446191751168","CreatedAt":"2019-05-16T16:02:11+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":16,"FavoriteCount":6,"RawContent":null},{"Id":"1128376789510819840","CreatedAt":"2019-05-14T19:09:25+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. In today's episode, we learn the difference between the Preferences API part… https://t.co/z7Yrhk0jNn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":28,"RawContent":null},{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":79,"FavoriteCount":45,"RawContent":null}]}},"RunOn":"2019-06-09T05:30:58.4489533Z","RunDurationInMilliseconds":3481}