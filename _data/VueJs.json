{"Data":{"Vue-Issues":{"Issues":[{"Id":"354991584","IsPullRequest":false,"CreatedAt":"2018-08-29T04:25:46","Actor":"znck","Number":"8726","RawContent":null,"Title":"Improve prop validator API","State":"open","Body":"### What problem does this feature solve?\r\n- Allows to write validation logic depending on multiple props.\r\n- Allows to provide custom validation messages.\r\n\r\n### What does the proposed API look like?\r\n``` ts\r\ntype Validator = (value: any, key: string, props: Object, warn: (message: string) => void) => boolean\r\n```\r\n\r\nExample:\r\n\r\n``` js\r\nexport default {\r\n  props: {\r\n    foo: {\r\n      validator(value, key, props, warn) {\r\n        if ('bar' in props && 'foo' in props) warn('Foo and Bar cannot be used together.')\r\n        return true\r\n      }\r\n....\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8726","RelatedDescription":"Open issue \"Improve prop validator API\" (#8726)"},{"Id":"354965113","IsPullRequest":false,"CreatedAt":"2018-08-29T01:53:47","Actor":"axetroy","Number":"8725","RawContent":null,"Title":"Independent props validator","State":"open","Body":"### What problem does this feature solve?\r\n1. Reduce packet size\r\n\r\n> not every component need it.\r\n\r\n2. Reused validator\r\n\r\n> If I want to validate the params. I don't need to introduce another validator\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst Vue = require('vue');\r\n\r\n// defined customer validator\r\nVue.validator = function (schema, input){\r\n  // \r\n}\r\n\r\n// run validator\r\nVue.validate({\r\n  name: {\r\n    type: String,\r\n  },\r\n  age: {\r\n    type: Number,\r\n  },\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8725","RelatedDescription":"Open issue \"Independent props validator\" (#8725)"},{"Id":"354862184","IsPullRequest":true,"CreatedAt":"2018-08-28T19:02:57","Actor":"ypresto","Number":"8724","RawContent":null,"Title":"fix(sfc): do not deindent space-padded output","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n`parseComponent('...', { pad: 'space' }).script.content` will contain code with base indent if SFC content has base indent. Also applies to styles or etc.\r\n\r\nAs #5058 and #5059, `pad: 'space'` is for character-oriented tools that calculate positions by distance from the beginning of the file instead of by line. This should be applied to source code itself, so I think it was buggy and breaking change is unavoidable. \r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\n\r\nI'm personally creating tool to convert `export default { ... }` to vue-property-decorators style, so I'm using `vue-template-compiler` with `@vue/component-compiler-utils` and code with original indent is needed.","Url":"https://github.com/vuejs/vue/pull/8724","RelatedDescription":"Open PR \"fix(sfc): do not deindent space-padded output\" (#8724)"},{"Id":"354721730","IsPullRequest":false,"CreatedAt":"2018-08-28T13:05:39","Actor":"richrd","Number":"8723","RawContent":null,"Title":"v-model behaves inconsistently in comparison to docs","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/forms.html#Text](https://vuejs.org/v2/guide/forms.html#Text)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFirst off, the docs claim [here](https://vuejs.org/v2/guide/components.html#Using-v-model-on-Components) that using `v-model` is identical to using `v-bind:value=\"searchText\"` and `v-on:input=\"searchText = $event.target.value\"`.\r\n\r\nIt does have the same behavior on desktop, but with chrome on android the behavior is different. When using `v-model` on android/chrome the model only gets updated when pressing space, enter, backspace or unfocusing the field (and maybe in some other cases). The model does not update when in the middle of typing a word. However when using `v-bind` and `v-on:input` the model gets updated as it is supposed to.\r\n\r\nIt seems like `v-model` isn't binding the `input` event on android. The correct behavior can be achieved by adding `v-on:input` regardless of whether `v-model` or `v-bind:value` is used. This applies to `input` and `textarea` elements.\r\n\r\n### What is expected?\r\nThe behavior is expected to be the same on all platforms: The model should update live with every keypress.\r\n\r\n### What is actually happening?\r\nOn chrome on android the model isn't updated on every keypress. This can be reproduced with the example inputs that are shown in the docs.\r\n\r\n---\r\nThis is a problem when for example creating a list that should be filtered live with user input. I'm wondering whether this is a bug or a documentation issue. I feel like it's a bug since the same code has different behavior on different platforms.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8723","RelatedDescription":"Closed issue \"v-model behaves inconsistently in comparison to docs\" (#8723)"},{"Id":"354703765","IsPullRequest":false,"CreatedAt":"2018-08-28T12:23:39","Actor":"liuchengying","Number":"8722","RawContent":null,"Title":"Event cannot be completely removed from eventBus","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/lcy_snail/eywraw8t/311598/](https://jsfiddle.net/lcy_snail/eywraw8t/311598/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen there is more than one listener for each event in \"_evnets\", the off method can delete the event listener. When each event in \"_events\" listens, only one listener can't remove the event.\r\n\r\n``` javascript\r\n// one event listener\r\n\r\nvar Bus = require('vue');\r\nBus.$on('eat', func);\r\nconsole.log(Bus._events); // {\"eat\": [ func ]}\r\nBus.$off(\"eat\"); \r\nconsole.log(Bus._events); //{\"eat\": [ func ]}\r\n\r\n// two event listener or  more\r\n\r\nvar Bus = require('vue');\r\nBus.$on('eat', func);\r\nBus.$on('sleep', func1)\r\nconsole.log(Bus._events); // log --- {\"eat\": [ func ], \"sleep\": [ func1 ]}\r\nBus.$off(\"eat\"); \r\nconsole.log(Bus._events); // log --- {\"eat\": null, sleep: [ func1 ]}\r\n```\r\n\r\n### What is expected?\r\nListener cannot be removed\r\n\r\n### What is actually happening?\r\nWhen using the \"off\" method, the corresponding listener can be removed， And remove the key of the _events object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8722","RelatedDescription":"Closed issue \"Event cannot be completely removed from eventBus\" (#8722)"},{"Id":"354664338","IsPullRequest":false,"CreatedAt":"2018-08-28T10:18:12","Actor":"Weiyu-Chen","Number":"8721","RawContent":null,"Title":"Property 'xxx' does not exist on type CombinedVueInstance ?","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link \r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. use vue-cli init a ts hello-world project .\r\n2. code like that\r\n```js\r\n<script lang=\"ts\">\r\nimport Vue from \"vue\";\r\nexport default Vue.extend({\r\n  name: \"HelloWorld\",\r\n  props: {\r\n    msg: String\r\n  },\r\n  data():any {\r\n    return {\r\n      wtf: this.initData(), // throw ts error : Property 'initData' does not exist on type 'CombinedVueInstance<Vue, {}, {}, {}, Readonly<{ msg: string; }>>'.\r\n    }\r\n  },\r\n \r\n  methods: {\r\n    initData():any {\r\n        return {\r\n          a: ''\r\n        }\r\n    },\r\n  },\r\n \r\n});\r\n</script>\r\n```\r\n\r\n\r\n### What is expected?\r\nHow can i fix it ?\r\n\r\n### What is actually happening?\r\n**Property 'initData' does not exist on type 'CombinedVueInstance<Vue, {}, {}, {}, Readonly<{ msg: string; }>>'.**\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8721","RelatedDescription":"Open issue \"Property 'xxx' does not exist on type CombinedVueInstance ?\" (#8721)"},{"Id":"354643213","IsPullRequest":false,"CreatedAt":"2018-08-28T09:34:11","Actor":"Polaris-z","Number":"8720","RawContent":null,"Title":"使用eventBus的时候，在组件销毁时清除事件监听，再次进入页面$on 监听事件不起作用了","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://localhost:8080/device/gnss](http://localhost:8080/device/gnss)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n 我在组件内监听事件 ，销毁时清除。第一次进入组件监听成功\r\n 第二次进入页面的时候 事件监听不会生效 \r\n 在控制台输出 eventBus  _events字段 后面显示的是空对象\r\n``` s\r\nbeforeDestroy () {\r\n    window.$eventBus.$off()// 组件销毁时 移除自定义事件监听器\r\n  },\r\n  created () {\r\n    this.getList()\r\n    window.$eventBus.$on('handleSearch', target => {\r\n      this.searchParams = target\r\n      this.getList()\r\n    })\r\n    window.$eventBus.$on('handleCreate', target => {\r\n      this.create(target)\r\n    })\r\n    window.$eventBus.$on('handleUpdate', target => {\r\n      this.update(target)\r\n    })\r\n    window.$eventBus.$on('handleDelete', target => {\r\n      this.onDelete(target)\r\n    })\r\n  }\r\n```\r\n\r\n### What is expected?\r\n希望解决问题\r\n\r\n### What is actually happening?\r\n...\r\n\r\n---\r\n...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8720","RelatedDescription":"Closed issue \"使用eventBus的时候，在组件销毁时清除事件监听，再次进入页面$on 监听事件不起作用了\" (#8720)"},{"Id":"354493134","IsPullRequest":false,"CreatedAt":"2018-08-28T07:34:10","Actor":"megacromulent","Number":"8718","RawContent":null,"Title":"Transition-group animates only last element if using index as the key","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/megacromulent/pen/gdMYLx?editors=1010](https://codepen.io/megacromulent/pen/gdMYLx?editors=1010)\r\n\r\n### Steps to reproduce\r\n1. Create vue app with items displaying in a list.\r\n2. Add transition group with **v-for** with format like **v-for=\"(item, index) in items\"**\r\n3. Use \"index\" from v-for as the **v-bind:key** (like: v-bind:key=\"**index**\" )\r\n4. Add and remove items from the data.\r\n\r\n### What is expected?\r\nThe item being removed/added should have the transition applied to it.\r\n\r\n### What is actually happening?\r\nThe last item in the list gets the transition applied.\r\n\r\n---\r\nThis may be an old bug, as I was hunting for a solution to my problem, I ran into this from May 2017:\r\n\r\nhttps://stackoverflow.com/questions/43598308/vue-js-wrong-transition-group-animation-position\r\n\r\nIf this is the intended behavior using index as the key, then can their be at least a warning message in the dev version of Vue.js to explain this? Or perhaps searchable text in the documentation with something like \"only last item in list is animating/transition applied\" so a solution can be found without thinking there is a bug in Vue.js.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8718","RelatedDescription":"Closed issue \"Transition-group animates only last element if using index as the key\" (#8718)"},{"Id":"354529736","IsPullRequest":false,"CreatedAt":"2018-08-28T00:53:10","Actor":"backbone87","Number":"8719","RawContent":null,"Title":"Vue.component doesnt except argument of type `Component`","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/8z04jxj3y8](https://codesandbox.io/s/8z04jxj3y8)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Click repro link\r\n- Open test.ts\r\n- See type errors\r\n- Uncomment vue type augmentation to see errors disappear\r\n\r\n\r\n### What is expected?\r\nI can pass any component to `Vue.component`\r\n\r\n### What is actually happening?\r\nType error:\r\n```\r\nArgument of type 'Component<DefaultData<never>, DefaultMethods<never>, DefaultComputed, Record<string, any>>' is not assignable to parameter of type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Rec...'.\r\n  Type 'VueConstructor<Vue>' is not assignable to type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Rec...'.\r\n    Value of type 'VueConstructor<Vue>' has no properties in common with type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Rec...'. Did you mean to call it?\r\n```\r\n\r\n---\r\nAdding the following overload to `Vue.component` will fix it:\r\n```ts\r\n    component<Data, Methods, Computed, Props>(\r\n      id: string,\r\n      definition: Component<Data, Methods, Computed, Props>,\r\n    ): ExtendedVue<V, Data, Methods, Computed, Props>;\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8719","RelatedDescription":"Open issue \"Vue.component doesnt except argument of type `Component`\" (#8719)"},{"Id":"354385231","IsPullRequest":true,"CreatedAt":"2018-08-27T16:53:06","Actor":"eltonchan","Number":"8717","RawContent":null,"Title":"fix when value is object, oldValue always equal value.","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:** fix when value is object, watcher value is reference，so cb function  oldValue always equal value.\r\n","Url":"https://github.com/vuejs/vue/pull/8717","RelatedDescription":"Closed or merged PR \"fix when value is object, oldValue always equal value.\" (#8717)"},{"Id":"354382081","IsPullRequest":true,"CreatedAt":"2018-08-27T16:16:31","Actor":"eltonchan","Number":"8716","RawContent":null,"Title":"fix when value is object, oldValue always equal value.","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8716","RelatedDescription":"Closed or merged PR \"fix when value is object, oldValue always equal value.\" (#8716)"},{"Id":"354259545","IsPullRequest":false,"CreatedAt":"2018-08-27T10:34:39","Actor":"ssipos90","Number":"8715","RawContent":null,"Title":"Pass component instance to async import","State":"closed","Body":"### What problem does this feature solve?\r\nIn the context of a multi-tenant site, we import some templates based on the site (we have some site codes) for example:\r\n```js\r\nimport config from 'Scripts/config.js';\r\nconst HomeSearch = site_code => () => import(`Components/sites/${site_code}/top-nav/home-search.vue` /* webpackChunkName: 'home-search' */);\r\n\r\nexport default {\r\n  // other stuff\r\n  components: {\r\n    HomeSearch(config.site_code)\r\n  }\r\n}\r\n```\r\nand in a more complex scenario, reactivity would be awesome.\r\n\r\n### What does the proposed API look like?\r\nSince that config ends up in vuex at application boot, it would be nice instead of doing that, to do this:\r\n\r\n```js\r\nimport { mapState } from 'vuex';\r\nconst HomeSearch = vm => import(`Components/sites/${vm.site_code}/top-nav/home-search.vue` /* webpackChunkName: 'home-search' */);\r\n\r\nexport default {\r\n  // other stuff\r\n  computed: {\r\n    ...mapState({ site_code: state => state.config.site_code  }) // or use mapGetters\r\n  },\r\n  components: {\r\n    HomeSearch\r\n  }\r\n}\r\n```\r\nAFAIK, when saying `() => import(...)` and passing it to the `components: {}`, it already receives a couple of arguments so I guess it would be easier if the `vm` arg would be the third one for backwards compatibility and the end feature request would look like:\r\n\r\n```js\r\nconst HomeSearch = (a, b, vm) => import(`Components/sites/${vm.site_code}/top-nav/home-search.vue` /* webpackChunkName: 'home-search' */);\r\n```\r\nor we could define the function classically and bind the component context to it and use `this` like so:\r\n\r\n```js\r\nconst HomeSearch = function() { return  import(`Components/sites/${this.site_code}/top-nav/home-search.vue` /* webpackChunkName: 'home' */) };\r\n// or\r\nfunction HomeBanner() { return  import(`Components/sites/${this.site_code}/content/home-banner.vue` /* webpackChunkName: 'home */) };\r\n```\r\n\r\nI know in my scenario, I could import the vuex store and do it like that, but in general, other vm props or data could be used in that import function.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8715","RelatedDescription":"Closed issue \"Pass component instance to async import\" (#8715)"},{"Id":"354145919","IsPullRequest":true,"CreatedAt":"2018-08-27T00:56:22","Actor":"Justineo","Number":"8714","RawContent":null,"Title":"fix (#8713): replace hardcoded .parentNode with abstract ops","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nUnsure about how to add platform-specific cases. Help needed.\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8714","RelatedDescription":"Open PR \"fix (#8713): replace hardcoded .parentNode with abstract ops\" (#8714)"},{"Id":"354099785","IsPullRequest":false,"CreatedAt":"2018-08-26T14:36:41","Actor":"akira-cn","Number":"8713","RawContent":null,"Title":"The insert method get ref.parentNode at patch.js, it should be nodeOps.parentNode(ref)","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://code.h5jun.com/mewa/edit?html,output](https://code.h5jun.com/mewa/edit?html,output)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n**Note**: Reproduction link 里面的bug我是已经临时修了，用[这个文件](https://github.com/spritejs/sprite-vue/blob/master/src/web/runtime/patch-fix.js)覆盖了patch.js\r\n\r\n我在修改runtime以支持spritejs，发现vdom的patch.js里面使用了ref.parentNode\r\n\r\n因为v-if指令用CommentNode作为占位符，但是spritejs是基于canvas的，没有实体DOM，所以我没办法把CommentNode添加到DOM上，我做了一个适配，将它作为spritejs的children添加到容器里。这么做我需要改变该占位元素的parent，因为这是一个HTML元素，parentNode是只读的，我没法直接修改，所以我在这个元素上添加一个新的parent属性：\r\n\r\n```js\r\nexport function createComment (text: string): Comment {\r\n  const comment = document.createComment(text)\r\n  comment.connect = (parent, zOrder) => {\r\n    comment.parent = parent\r\n    comment.zOrder = zOrder\r\n  }\r\n  comment.disconnect = (parent) => {\r\n    delete comment.parent\r\n    delete comment.zOrder\r\n  }\r\n  comment.dispatchEvent = () => false\r\n  comment.forceUpdate = () => false\r\n  comment.isVisible = () => false\r\n  return comment\r\n}\r\n```\r\n\r\n然后重写：\r\n\r\n```js\r\nexport function parentNode (node: Node): ?Node {\r\n  return node.parentNode || node.parent\r\n}\r\n```\r\n\r\n结果发现使用 v-if 切换的时候不行（现象是toggle元素的时候能隐藏不能显现）。后来我发现在patch.js里这段代码：\r\n\r\n```js\r\n  function insert (parent, elm, ref) {\r\n    if (isDef(parent)) {\r\n      if (isDef(ref)) {\r\n        if (ref.parentNode === parent) {\r\n          nodeOps.insertBefore(parent, elm, ref)\r\n        }\r\n      } else {\r\n        nodeOps.appendChild(parent, elm)\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\n应该改为：\r\n\r\n```js\r\n  function insert (parent, elm, ref) {\r\n    if (isDef(parent)) {\r\n      if (isDef(ref)) {\r\n        if (nodeOps.parentNode(ref) === parent) {\r\n          nodeOps.insertBefore(parent, elm, ref)\r\n        }\r\n      } else {\r\n        nodeOps.appendChild(parent, elm)\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\n这样才能拿到正确的parentNode。\r\n\r\n因为只有一行代码修改，我就不提PR了。我现在先采用[patch-fix](https://github.com/spritejs/sprite-vue/blob/master/src/web/runtime/patch-fix.js)的方式修复。\r\n\r\n如果下一个版本能顺便修一下，我会很感激 ：）。\r\n\r\n\r\n### What is expected?\r\n应该得到：nodeOps.parentNode(ref)\r\n\r\n### What is actually happening?\r\n实际得到：ref.parentNode\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8713","RelatedDescription":"Open issue \"The insert method get ref.parentNode at patch.js, it should be nodeOps.parentNode(ref)\" (#8713)"},{"Id":"354094427","IsPullRequest":false,"CreatedAt":"2018-08-26T13:43:50","Actor":"visualjerk","Number":"8712","RawContent":null,"Title":"<component is=\"input\"> loosing reactivity","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/CharlyTheDog/pen/wEMZyq](https://codepen.io/CharlyTheDog/pen/wEMZyq)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Change the value in default input\r\n1. Change the value in component input\r\n1. Change the value in default input again\r\n\r\n### What is expected?\r\nBoth inputs keep being reactive in each step\r\n\r\n### What is actually happening?\r\nThe component input stops being reactive after step 2\r\n\r\n---\r\nI ran into this issue while trying to compose a generic form input component that can either be an \"input\" or \"textarea\". Wondering if this is just a general misuse of dynamic components? I found it to be pretty convenient, because both input and textarea share lots of styles, props and functionality. For now I will refactor this to use v-if instead.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8712","RelatedDescription":"Closed issue \"<component is=\"input\"> loosing reactivity\" (#8712)"},{"Id":"354073131","IsPullRequest":true,"CreatedAt":"2018-08-26T07:23:16","Actor":"eddyerburgh","Number":"8711","RawContent":null,"Title":"fix: add modified options to extended options (fix #8710)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8711","RelatedDescription":"Open PR \"fix: add modified options to extended options (fix #8710)\" (#8711)"},{"Id":"354071982","IsPullRequest":false,"CreatedAt":"2018-08-26T07:03:24","Actor":"eddyerburgh","Number":"8710","RawContent":null,"Title":"Modified options not added to extended component when mixin is applied to super component","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hf817t54/](https://jsfiddle.net/hf817t54/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the code with the console open. undefined is logged. Comment out the mixin, true is logged because the late option is persisted.\r\n\r\n### What is expected?\r\nLate option should be kept\r\n\r\n### What is actually happening?\r\nIt's overwritten\r\n\r\n---\r\nThe late option is [added to `extendOptions`](https://github.com/vuejs/vue/blob/dev/src/core/instance/init.js#L106), but `extendOptions` is a class function, so it should be added to extendOptions.options.\r\n\r\nMerge options then uses `extendOptions.options`, so the late option is not included in the merge.\r\n\r\nEDIT:\r\n\r\nHere's a fix https://github.com/vuejs/vue/pull/8711\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8710","RelatedDescription":"Open issue \"Modified options not added to extended component when mixin is applied to super component\" (#8710)"},{"Id":"354053380","IsPullRequest":true,"CreatedAt":"2018-08-26T00:19:54","Actor":"nel215","Number":"8709","RawContent":null,"Title":"fix(types): accept `number` type as key on Vue.set/delete (#8707)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8709","RelatedDescription":"Open PR \"fix(types): accept `number` type as key on Vue.set/delete (#8707)\" (#8709)"},{"Id":"353987255","IsPullRequest":false,"CreatedAt":"2018-08-25T09:32:27","Actor":"Devince","Number":"8708","RawContent":null,"Title":"[KeepAlive]  The cache is removed, but the componentInstance hasn't destroy?","State":"closed","Body":"### Version\r\n2.5.10\r\n\r\n### Reproduction link\r\n[https://github.com/Devince/testKeepAlive](https://github.com/Devince/testKeepAlive)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nkeepalive的问题，主要是这个：\r\n if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\r\n    cached$$1.componentInstance.$destroy();\r\n  }\r\n\r\n\r\nfunction pruneCacheEntry (\r\n  cache,\r\n  key,\r\n  keys,\r\n  current\r\n) {\r\n  var cached$$1 = cache[key];\r\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\r\n    cached$$1.componentInstance.$destroy();\r\n  }\r\n  cache[key] = null;\r\n  remove(keys, key);\r\n}\r\n\r\n### What is expected?\r\n缓存都清了，组件应该同时销毁吧\r\n\r\n### What is actually happening?\r\n缓存都清了，组件没有销毁，导致实例多个相同组件\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8708","RelatedDescription":"Closed issue \"[KeepAlive]  The cache is removed, but the componentInstance hasn't destroy?\" (#8708)"},{"Id":"353985076","IsPullRequest":false,"CreatedAt":"2018-08-25T05:22:17","Actor":"nel215","Number":"8707","RawContent":null,"Title":"Type checks by typescript fail on Vue.set/delete","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/nel215/vue-sandbox](https://github.com/nel215/vue-sandbox)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n$ git clone https://github.com/nel215/vue-sandbox.git\r\n$ cd vue-sandbox\r\n$ yarn\r\n$ ./node_modules/.bin/tsc index.ts\r\nindex.ts:5:9 - error TS2345: Argument of type '{}' is not assignable to parameter of type '\"a\"[]'.\r\n  Property 'length' is missing in type '{}'.\r\n\r\n5 Vue.set(data.obj, 1, 'a')\r\n          ~~~~~~~~\r\n\r\nindex.ts:6:12 - error TS2345: Argument of type '{}' is not assignable to parameter of type '{}[]'.\r\n  Property 'length' is missing in type '{}'.\r\n\r\n6 Vue.delete(data.obj, 1)\r\n```\r\n\r\n### What is expected?\r\nType checks by typescript succeed on this case.\r\n\r\n### What is actually happening?\r\nType checks by typescript fail on this case.\r\n\r\n---\r\nCan we use number as key of object on Vue.set/delete? If it's yes, I will create a PR which fixes types/vue.d.ts.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8707","RelatedDescription":"Open issue \"Type checks by typescript fail on Vue.set/delete\" (#8707)"},{"Id":"353978986","IsPullRequest":true,"CreatedAt":"2018-08-25T03:27:35","Actor":"yangdan8","Number":"8706","RawContent":null,"Title":"添加对umd方式使用typescript namespace的支持","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8706","RelatedDescription":"Open PR \"添加对umd方式使用typescript namespace的支持\" (#8706)"},{"Id":"353971929","IsPullRequest":false,"CreatedAt":"2018-08-25T01:40:40","Actor":"Devince","Number":"8705","RawContent":null,"Title":"为什么要缓存清了，组件不销毁呢？","State":"closed","Body":"vue 版本：2.5.10\r\n\r\n主要是这个：\r\n if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\r\n    cached$$1.componentInstance.$destroy();\r\n  }\r\n\r\n\r\nfunction pruneCacheEntry (\r\n  cache,\r\n  key,\r\n  keys,\r\n  current\r\n) {\r\n  var cached$$1 = cache[key];\r\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\r\n    cached$$1.componentInstance.$destroy();\r\n  }\r\n  cache[key] = null;\r\n  remove(keys, key);\r\n}\r\n\r\n缓存都清了，组件没有销毁，导致实例多个相同组件！","Url":"https://github.com/vuejs/vue/issues/8705","RelatedDescription":"Closed issue \"为什么要缓存清了，组件不销毁呢？\" (#8705)"},{"Id":"353846239","IsPullRequest":false,"CreatedAt":"2018-08-24T16:53:01","Actor":"ericcirone","Number":"8704","RawContent":null,"Title":"Prop with type Boolean but no default will be set to false","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/ericcirone/pen/OoyKwz](https://codepen.io/ericcirone/pen/OoyKwz)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Make a prop and set it to be `Boolean` with no `default`\r\n\r\n### What is expected?\r\nThe prop would be `undefined` if it was not set.\r\n\r\n### What is actually happening?\r\nThe prop is `false`\r\n\r\n---\r\nSetting a prop to any other type and not setting a default value will result in `undefined`. A prop of type `Boolean` should act the same way.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8704","RelatedDescription":"Closed issue \"Prop with type Boolean but no default will be set to false\" (#8704)"},{"Id":"353748149","IsPullRequest":false,"CreatedAt":"2018-08-24T12:16:30","Actor":"IPospelova","Number":"8703","RawContent":null,"Title":"The callback \"done\" doesn't work correctly in transition.","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/WgQpNd](https://codepen.io/anon/pen/WgQpNd)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. The callback done doesn't work. When click on step, the animation on the next step, start before animation end on previous step.(check the link https://codepen.io/anon/pen/WgQpNd)\r\n2. Why after click on step and animation end of the first step, it still visible on the screen (v-if=\"step === 1\", but data step changed to value 2)\r\n\r\n### What is expected?\r\nI expected, when you click on step is to see animation step by step, becouse i use callback done. (animation on step 2 start after animaiton on step 1 is completly)\r\n\r\n### What is actually happening?\r\n1. The animation is overlay of each other.\r\n2. After animation end, and data for v-if changed elements still visible on the screen\r\n\r\n---\r\nPlease tell me this is a bug, or am I do something doing wrong :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8703","RelatedDescription":"Closed issue \"The callback \"done\" doesn't work correctly in transition.\" (#8703)"},{"Id":"353547154","IsPullRequest":false,"CreatedAt":"2018-08-23T21:01:10","Actor":"the-webguys","Number":"8702","RawContent":null,"Title":"CSP issue when compiling","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://the-webguys.com/temp_files/js/app.js](http://the-webguys.com/temp_files/js/app.js)\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCompiling with `npm run dev/production` all the files are compiled into `app.js` - the output file is linked in the minimal reproduction\r\n\r\nUsing the following: `<meta http-equiv=\"Content-Security-Policy\"\r\n    content=\"default-src 'self'; img-src 'self'; style-src 'self' *.fontawesome.com https://fonts.gstatic.com https://fonts.googleapis.com; font-src 'self' *.fontawesome.com https://fonts.gstatic.com;\r\n    script-src 'self' 'nonce-EDNnf03nceIOfn39fn3e9h3sdfa' *.pusher.com; connect-src *.pusher.com wss://ws-eu.pusher.com;\"\r\n    >`\r\n\r\nWhen used on a website, this will block the app.js file due to a 'new Function()' that comes directly from the vue file included when compiling.\r\n\r\nAlso tried this step, changing the `vue.runtime.common.js` in `webpackConfig.resolve` settings - this produces a blank page, but view source shows the raw html fine - no console errors in either FireFox or Chrome.\r\n\r\n\r\n### What is expected?\r\nTo compile the app.js without `new Function()`\r\n\r\n\r\n### What is actually happening?\r\napp.js is producing `new Function()`\r\n\r\n\r\n\r\n---\r\nPlease search the `linked to minimal reproduction` file for `new Function()' to see the culprit.\r\n- My apologies for not linking anything better, i tried to replicate this using JS Bin with no joy as i don't think it allows the meta tags for CSP to work correctly. Also, i tried to set it up on a different domain, but got a CSRF token issue because it is not in Laravel :(\r\n\r\nWhile using CSP meta tags, CSP flags the `new Function()` as a security risk. I have tried to use the `vue.runtime.common.js` version set in the `webpackConfig.resolve` settings from inside Laravel as guided to by the friendly people over at laravel-mix\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8702","RelatedDescription":"Closed issue \"CSP issue when compiling\" (#8702)"},{"Id":"353438674","IsPullRequest":false,"CreatedAt":"2018-08-23T16:50:00","Actor":"1099511627776","Number":"8701","RawContent":null,"Title":"Mark Functional components in DOM so thay can be displayed in vue developer console","State":"closed","Body":"### What problem does this feature solve?\r\nFunctional components will be displayable and debugable in vue developer console\r\n\r\n### What does the proposed API look like?\r\n1. Add additional property __vue_func__  to HTMLelement that contains object with basic information about functional component (e.g. context, props etc).\r\n2. Property from 1 will be scanned with vue developer tools and displayed\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8701","RelatedDescription":"Closed issue \"Mark Functional components in DOM so thay can be displayed in vue developer console\" (#8701)"},{"Id":"353360276","IsPullRequest":false,"CreatedAt":"2018-08-23T13:01:50","Actor":"mariuszjamro","Number":"8700","RawContent":null,"Title":"Add support for optional components when using <component> tag","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nCurrently when using `<component is=\"foo\"></component>` syntax and the component `foo` doesn't exist an warning is produced:\r\n\r\n>  vue.common.js:593 [Vue warn]: Unknown custom element: &lt;foo&gt; - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\nI would like to propose an extension to allow optional components, which won't provide the warning if component doesn't exist.\r\n\r\n### What does the proposed API look like?\r\n\r\n1. Attribute which will prevent the warning:\r\n\r\n       <component is=\"foo\" optional></component>\r\n\r\n2. Slot content rendered if component not found. This actually works, but is not documented. It would be nice to have it docs:\r\n\r\n       <component is=\"foo\" optional>Component not found</component>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8700","RelatedDescription":"Closed issue \"Add support for optional components when using <component> tag\" (#8700)"},{"Id":"353349601","IsPullRequest":false,"CreatedAt":"2018-08-23T12:01:59","Actor":"hrq20170313","Number":"8699","RawContent":null,"Title":"你好，我想问一下，script标签引入试的vue怎样获取url的参数？","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8699","RelatedDescription":"Closed issue \"你好，我想问一下，script标签引入试的vue怎样获取url的参数？\" (#8699)"},{"Id":"353194067","IsPullRequest":false,"CreatedAt":"2018-08-23T02:13:51","Actor":"guanzo","Number":"8698","RawContent":null,"Title":"transitionend event isn't fired on element inside <transition> when leaving","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/guanzo/xcLk083u/1/](https://jsfiddle.net/guanzo/xcLk083u/1/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open reproduction demo in a non-Chrome browser.\r\n2. Attach `transitionend` listener to the component root $el. (It can be on any element, doesn't matter)\r\n3. Transition out a child element with `<transition>` and `v-if`.\r\n4. Listener callback isn't fired.\r\n\r\n### What is expected?\r\nThe transitionend event is fired in all browsers.\r\n\r\n### What is actually happening?\r\nThe transitionend event is only fired in Chrome.\r\n\r\n---\r\nMy use case does NOT allow me to use the template, therefore I cannot use the <transition> javascript hooks, such as `leave` and `afterLeave`.  Regardless, this is inconsistent behavior and should be figured out. Is vue stopping the propagation of the event somehow?\r\n\r\nFor a complete context of the use case, read this issue: https://github.com/guanzo/vue-smooth-reflow/issues/3\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8698","RelatedDescription":"Open issue \"transitionend event isn't fired on element inside <transition> when leaving\" (#8698)"},{"Id":"353152478","IsPullRequest":false,"CreatedAt":"2018-08-22T23:08:50","Actor":"microblue","Number":"8697","RawContent":null,"Title":"TypeError: Cannot read property 'node' of undefined","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[http://void.com](http://void.com)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install web3 --save\r\n\r\nAdd line:\r\nimport Web3 from 'web3'\r\n\r\nAdd the code into Helloworld.vue  data() \r\n----\r\n    var Web3 = require('web3')\r\n\r\n    var w3 = new Web3(new Web3.providers.HttpProvider('https://mainnet.infura.io/PJvt2iaCmRWlE83VpqZk'))\r\n    var abi_main = require('./abi_main.json')\r\n    var contract_main = new w3.eth.Contract(abi_main,'0xA62142888ABa8370742bE823c1782D17A0389Da1')\r\n    contract_main.methods.getCurrentRoundInfo().call().then (info => {\r\n    \tconsole.log(info)\r\n    })\r\n------\r\n\r\n### What is expected?\r\nSuccessful call a smart contract function.\r\n\r\n### What is actually happening?\r\nerror at undefined process.versions.node  in xml-http-request.js.  \r\n\r\n---\r\nvue 2.0 work well, but vue 3.0 packed app has this error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8697","RelatedDescription":"Closed issue \"TypeError: Cannot read property 'node' of undefined\" (#8697)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"354896341","IsPullRequest":false,"CreatedAt":"2018-08-28T22:20:27","Actor":"benjamindavid","Number":"2367","RawContent":null,"Title":"Base URL containing query parameters breaks routing","State":"closed","Body":"### Version\r\n2.5.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/benjamindavid/pen/YOWgPr](https://codepen.io/benjamindavid/pen/YOWgPr)\r\n\r\n### Steps to reproduce\r\nGo to this URL (containing a test query parameter) https://s.codepen.io/benjamindavid/debug/YOWgPr/mVMbGpDQDqpr?p=test\r\n\r\n### What is expected?\r\nThe page should show \"foo\" as the Foo component is defined for the `/` path and the base URL contains the full path, including query parameters: `/benjamindavid/debug/YOWgPr/mVMbGpDQDqpr?p=test`\r\n\r\n### What is actually happening?\r\nThe `/` route is not matched, the query parameters contained in the base URL don't seem to be properly taken into account.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2367","RelatedDescription":"Closed issue \"Base URL containing query parameters breaks routing\" (#2367)"},{"Id":"354729720","IsPullRequest":false,"CreatedAt":"2018-08-28T13:28:11","Actor":"lordenas","Number":"2366","RawContent":null,"Title":"After build routing does not work in chrome, but works in firefox","State":"closed","Body":"### What problem does this feature solve?\r\nAfter \"npm run build\" try to run index.html\r\nEverything works in Firefox. But in google chrome when you click the link turns file:///C:/index ..\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nVue.use(VueRouter);\r\n\r\nimport Login from './pages/login';\r\nimport Index from './pages/index';\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tredirect: {name: 'Login'}\r\n\t},\r\n\t{\r\n\t\tname: 'Login',\r\n\t\tpath: '/login',\r\n\t\tcomponent: Login,\r\n\t\tprops: { name: 'Авторизация' }\r\n\t},\r\n\t{\r\n\t\tname: 'Index',\r\n\t\tpath: '/Index',\r\n\t\tcomponent: Index,\r\n\t\tprops: { name: 'Страницы' }\r\n\t}\r\n];\r\n\r\nexport const router = new VueRouter({\r\n\troutes,\r\n\tmode: 'history'\r\n});\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2366","RelatedDescription":"Closed issue \"After build routing does not work in chrome, but works in firefox\" (#2366)"},{"Id":"354193227","IsPullRequest":true,"CreatedAt":"2018-08-27T06:17:33","Actor":"xlfsummer","Number":"2365","RawContent":null,"Title":"Update type define of RouteConfig.props","State":"open","Body":"In route config, we can pass an object to 'props' property, which key is the name of router view, and type of value is one of boolean, object or function (RoutePropsFunction).\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2365","RelatedDescription":"Open PR \"Update type define of RouteConfig.props\" (#2365)"},{"Id":"354153619","IsPullRequest":false,"CreatedAt":"2018-08-27T01:57:44","Actor":"chaoyang-Rex","Number":"2364","RawContent":null,"Title":"vue hash","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2364","RelatedDescription":"Closed issue \"vue hash\" (#2364)"},{"Id":"353962120","IsPullRequest":false,"CreatedAt":"2018-08-25T09:27:16","Actor":"kalreg69","Number":"2363","RawContent":null,"Title":"beforeEach causes <failed to convert exception to string> on any next() parameter except false or empty string","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/93jwr2okyy](https://codesandbox.io/s/93jwr2okyy)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMore precise description of problem can be found on Stackoverflow under that link:\r\nhttps://stackoverflow.com/questions/52011879/vuerouters-beforeeach-causes-error-failed-to-convert-exception-to-string?noredirect=1#comment90975639_52011879\r\n\r\nThe link to sandbox refers in console \"maximum callstack size exceeded\" - my console says \"failed to convert exception to stirng\", however puting next() or next(false) clears the problem. It generates problems only if next has a any string parameter \r\n\r\n### What is expected?\r\nI expect rerouting to specified component on calling next('/registeredComponent').\r\n\r\n### What is actually happening?\r\nI get an error \r\n[vue-router] uncaught error during route navigation:\r\n<failed to convert string to exception>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2363","RelatedDescription":"Closed issue \"beforeEach causes <failed to convert exception to string> on any next() parameter except false or empty string\" (#2363)"},{"Id":"353297599","IsPullRequest":false,"CreatedAt":"2018-08-24T10:43:48","Actor":"masquevil","Number":"2362","RawContent":null,"Title":"Two feature to make history.state more useful","State":"closed","Body":"### What problem does this feature solve?\r\n1) Run replaceState when app init\r\n`history.state.key` is a very useful value. But `history.state` is null when app init.\r\nAlthough manually run `router.replace` when app created is ok, guards like `router.beforeEach` will run twice, which is not expected.\r\n\r\n2) Change `history.state.key` when replaceState\r\nGenerally, PageA replace to PageB, keep history.state the same key is fine.\r\nBut in this case: PageA -> PageB -> replace to PageC -> back to PageA -> replaceTo PageD ----- It's expected that PageD use the same key with PageA, but actually same with PageB & PageC.\r\nA solution is to change `history.state.key` when replaceState. So that all page-jump will generate a new key.\r\n\r\n### What does the proposed API look like?\r\nno need\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2362","RelatedDescription":"Closed issue \"Two feature to make history.state more useful\" (#2362)"},{"Id":"353287728","IsPullRequest":false,"CreatedAt":"2018-08-23T08:59:41","Actor":"z649319834","Number":"2361","RawContent":null,"Title":"When the operation routing component is lazily loaded, the parameters in the url cannot be obtained through this.$route.query in created and mounted？","State":"closed","Body":"`\r\n// 路由\r\nexport default new Router({\r\nroutes: [\r\n{\r\npath: '/collect',\r\nname: 'CollectLibrary',\r\ncomponent: () => import('../pages/CollectLibrary.vue')\r\n}\r\n]\r\n\r\n`\r\nThe parameters in the url are not obtained through this.$route.query in the component's life cycle 'created' and 'mounted' functions. The parameters can be obtained by 200 milliseconds delay, and also by location. Href resolution.\r\n\r\nIf the component is not doing lazy loading, the parameters on the url can be retrieved immediately in the 'created' and 'mounted' functions\r\n\r\nJust don't know what causes it? I hope you can give me some advice","Url":"https://github.com/vuejs/vue-router/issues/2361","RelatedDescription":"Closed issue \"When the operation routing component is lazily loaded, the parameters in the url cannot be obtained through this.$route.query in created and mounted？\" (#2361)"},{"Id":"353276544","IsPullRequest":false,"CreatedAt":"2018-08-23T08:28:46","Actor":"z649319834","Number":"2360","RawContent":null,"Title":"created和mounted获取不到$route.query数据","State":"closed","Body":"我在项目中对路由组件进行懒加载操作，结果在created和mounted中无法获取路由中的query参数，求大神指点一下！\r\n`\r\n// 路由\r\nexport default new Router({\r\n  routes: [\r\n   {\r\n      path: '/collect',\r\n      name: 'CollectLibrary',\r\n      component: () => import('../pages/CollectLibrary.vue')\r\n    }\r\n]\r\n\r\n`\r\n\r\n然后在组件的生命周期created和mounted函数中通过this.$route.query都获取不到url中的参数,延时200毫秒可以获取到，通过location.href解析也可以获取到；\r\n\r\n如果组件不进行懒加载处理，可以在created和mounted函数中马上获取到url上的参数\r\n\r\n就是不知道什么原因造成？希望可以得到大家的指点","Url":"https://github.com/vuejs/vue-router/issues/2360","RelatedDescription":"Closed issue \"created和mounted获取不到$route.query数据\" (#2360)"},{"Id":"353246710","IsPullRequest":false,"CreatedAt":"2018-08-23T08:02:23","Actor":"masquevil","Number":"2359","RawContent":null,"Title":"Run replaceState when app init","State":"closed","Body":"### What problem does this feature solve?\r\n`history.state.key` is a very useful value.\r\nBut `history.state` is null when app init.\r\nAlthough manually run `router.replace` when app created is ok, guards like `router.beforeEach` will run twice, which is not expected.\r\n\r\n### What does the proposed API look like?\r\nNone\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2359","RelatedDescription":"Closed issue \"Run replaceState when app init\" (#2359)"},{"Id":"353243676","IsPullRequest":false,"CreatedAt":"2018-08-23T06:37:01","Actor":"jafri","Number":"2358","RawContent":null,"Title":"Scrollbehavior does not fire on initial load","State":"closed","Body":"```\r\nconst router = new Router({\r\n  linkActiveClass: 'is-active',\r\n  mode: 'history',\r\n  scrollBehavior (to) {\r\n    console.log(to)\r\n    if (to.hash) {\r\n      return { selector: to.hash }\r\n    } else {\r\n      return { x: 0, y: 0 }\r\n    }\r\n  },\r\n  routes\r\n})\r\n```\r\n\r\nScrollbehavior does not fire on initial load of page, it fires when moving to another page though","Url":"https://github.com/vuejs/vue-router/issues/2358","RelatedDescription":"Closed issue \"Scrollbehavior does not fire on initial load\" (#2358)"},{"Id":"352561967","IsPullRequest":true,"CreatedAt":"2018-08-21T14:19:37","Actor":"crswll","Number":"2357","RawContent":null,"Title":"Add clarification for child props","State":"open","Body":"Just wanted to clarify that when props are used on child routes that the parent props are also passed.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2357","RelatedDescription":"Open PR \"Add clarification for child props\" (#2357)"},{"Id":"352322652","IsPullRequest":false,"CreatedAt":"2018-08-21T07:12:42","Actor":"samit4me","Number":"2356","RawContent":null,"Title":"PascalCase support for Link component","State":"closed","Body":"### What problem does this feature solve?\r\nWould like to be able to use `<RouterLink>` instead of `<router-link>`.\r\n\r\nReason for this is that in the Vue Style Guide PascalCase is recommended and in the latest version of `eslint-plugin-vue@5.0.0-beta.2` this rule is now auto-fixable (e.g. it will convert `<router-link>` into `<RouterLink>`) but this breaks and the link does not work. https://vuejs.org/v2/style-guide/#Component-name-casing-in-templates-strongly-recommended\r\n\r\nWe have gotten around the issue by re-defining the router components like so:\r\n```\r\nconst RouterView = Vue.component('router-view');\r\nconst RouterLink = Vue.component('router-link');\r\nVue.component('RouterView', RouterView);\r\nVue.component('RouterLink', RouterLink);\r\n```\r\n\r\n### What does the proposed API look like?\r\nUpdate component definition in `vue-router` to have both PascalCase and kebab-case:\r\n```\r\nVue.component('router-view', View);\r\nVue.component('RouterView', View);\r\nVue.component('router-link', Link);\r\nVue.component('RouterLink', Link);\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2356","RelatedDescription":"Closed issue \"PascalCase support for Link component\" (#2356)"},{"Id":"351440039","IsPullRequest":false,"CreatedAt":"2018-08-17T02:58:46","Actor":"willjosefi","Number":"2355","RawContent":null,"Title":"watch '$route.query' is triggering when click in some link fragment/anchor like <a href=\"#\">test</a>","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/willjosefi/4shd27gm/9/](https://jsfiddle.net/willjosefi/4shd27gm/9/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust click in the links and check console or the \"logs\"\r\n\r\n### What is expected?\r\nNot trigger\r\n\r\n### What is actually happening?\r\nTriggering when click in some link anchor/fragment that links to the current page\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2355","RelatedDescription":"Open issue \"watch '$route.query' is triggering when click in some link fragment/anchor like <a href=\"#\">test</a>\" (#2355)"},{"Id":"351352594","IsPullRequest":false,"CreatedAt":"2018-08-16T20:37:18","Actor":"719media","Number":"2354","RawContent":null,"Title":"vue-router force full page redirect","State":"closed","Body":"### What problem does this feature solve?\r\nSometimes, I have pages for which I have to place third party scripts which do not have any safe teardown method. I don't want behavior from these scripts to pollute other areas of the application, but I'd still like to use vue-router to control the loading of the page, as well as redirecting TO the page. I would like to have routing leaving this page perform a full page redirect (window.location).\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nAn attribute to force router-link to perform a window.location redirect instead. I'm not sure of the best term for the attribute, but for example:\r\n`<router-link :to=\"{name: 'test'}\" refresh />` #will use window.location = '/test';\r\n\r\nI suppose this could just exist in user-land via a component wrapper over the top of router-link, but this seems like it would be a minor change so I present it for author review.\r\n\r\nThank you\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2354","RelatedDescription":"Closed issue \"vue-router force full page redirect\" (#2354)"},{"Id":"350744214","IsPullRequest":false,"CreatedAt":"2018-08-15T09:33:12","Actor":"masquevil","Number":"2353","RawContent":null,"Title":"Provide `router-alive` component for better performance","State":"closed","Body":"### What problem does this feature solve?\r\nJust like keep-alive.\r\nThe only difference is that use `history.state.key` as `vnode.key`.\r\nIt will use cache when history popstate, and create new component when click `router-link`.\r\n\r\n### What does the proposed API look like?\r\n```\r\n<router-alive>\r\n  <router-view></router-view>\r\n</router-alive>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2353","RelatedDescription":"Closed issue \"Provide `router-alive` component for better performance\" (#2353)"},{"Id":"350324355","IsPullRequest":true,"CreatedAt":"2018-08-14T08:13:34","Actor":"Alex-Sokolov","Number":"2352","RawContent":null,"Title":"docs: [RU] Translation update","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2352","RelatedDescription":"Open PR \"docs: [RU] Translation update\" (#2352)"},{"Id":"350323094","IsPullRequest":true,"CreatedAt":"2018-08-14T08:11:51","Actor":"Jinjiang","Number":"2351","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vue-router/compare/936d99a...bafbff7\r\n/ping @justineo\r\nThanks.","Url":"https://github.com/vuejs/vue-router/pull/2351","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#2351)"},{"Id":"350061608","IsPullRequest":true,"CreatedAt":"2018-08-13T14:46:28","Actor":"MoritzKn","Number":"2350","RawContent":null,"Title":"Add note for props in named views","State":"open","Body":"I searched for this is the docs for quite some time, had to have a coworker tell me and finally find the solution via [stack overflow](https://stackoverflow.com/a/42398362/5587737).","Url":"https://github.com/vuejs/vue-router/pull/2350","RelatedDescription":"Open PR \"Add note for props in named views\" (#2350)"},{"Id":"349807012","IsPullRequest":false,"CreatedAt":"2018-08-12T12:00:09","Actor":"chatoo2412","Number":"2349","RawContent":null,"Title":"There's a potential collision between state keys","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/90cd2690d59c6bd56e5bc12b5b752166a1d35e98/src/util/push-state.js#L22-L30](https://github.com/vuejs/vue-router/blob/90cd2690d59c6bd56e5bc12b5b752166a1d35e98/src/util/push-state.js#L22-L30)\r\n\r\n### Steps to reproduce\r\n``` js\r\nconsole.log(window.history.state.key) // 2078.800\r\n\r\n// refresh window and try again\r\nconsole.log(window.history.state.key) // 1678.300\r\n\r\n// refresh window and try again\r\nconsole.log(window.history.state.key) // 2263.300\r\n\r\n// ...repeat\r\n\r\n// refresh window and try again\r\nconsole.log(window.history.state.key) // 1678.300 - collision\r\n```\r\n\r\n### What is expected?\r\nunique value\r\n\r\n### What is actually happening?\r\ncollision\r\n\r\n---\r\nBecause of Spectre issue, each browser reduced the resolution of `performance.now()`. For example, [FireFox's precision is only 2ms](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now#Reduced_time_precision).\r\n\r\n[It doesn't a problem in a single Vue instance lifecycle](https://github.com/vuejs/vue-router/pull/998#issuecomment-265549456).\r\n\r\nBut there may be multiple Vue instances in the whole session history, and keys between them could collide.\r\n\r\nPlease replace `performance.now()` with `Date.now()` or [uuid](https://github.com/kelektiv/node-uuid).\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2349","RelatedDescription":"Open issue \"There's a potential collision between state keys\" (#2349)"},{"Id":"349151602","IsPullRequest":true,"CreatedAt":"2018-08-09T14:25:50","Actor":"posva","Number":"2348","RawContent":null,"Title":"Adding live examples with code preview","State":"open","Body":"This is still a work in progress, but it allows people to play around and give feedback about the example preview component.\r\nAt the moment I write this, there are only two demos, the one in Getting Started and the one in Dynamic Routing.\r\nI also added the first demo to the Chinese docs to showcase how to do it. Hopefully, the two existing examples should provide show off the different ways of providing demos.\r\n\r\nFeel free to ask questions about it and also to provide feedback if you have it. It could be anything like design, behavior or features\r\n\r\nNote to myself: do not squash\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2348","RelatedDescription":"Open PR \"Adding live examples with code preview\" (#2348)"},{"Id":"349043993","IsPullRequest":true,"CreatedAt":"2018-08-09T09:17:51","Actor":"baixiaocao","Number":"2347","RawContent":null,"Title":"Delete app.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2347","RelatedDescription":"Closed or merged PR \"Delete app.js\" (#2347)"},{"Id":"348958914","IsPullRequest":false,"CreatedAt":"2018-08-09T06:59:12","Actor":"acidjazz","Number":"2346","RawContent":null,"Title":"trying to update query parameters","State":"closed","Body":"### Version\r\n3.0.1 (nuxtjs 1.4)\r\n\r\n### Reproduction link\r\n[gist](https://gist.github.com/acidjazz/95c5b7728a759fbd09fdfe61f84ccd8f)\r\n\r\n### Steps to reproduce\r\nI've read the documentation repeatedly, read every stack overflow, and gone through all of the Vue forums on anything related to programatic navigation for over a year now and i've never been able to do the following successfully\r\n\r\n1. pass a this=that query parameter into `this.$route.query`, using either `.push`, `.replace`, etc\r\n2. have `this.$route.query` instantly contain that new parameter\r\n3. have my URL also reflect that change/add/removal of the parameter\r\n\r\nhere is one of my current methods I use that \"kind of\" works in one of my projects\r\n\r\n```js\r\nmethods: {\r\n    query (params) {\r\n      let i = 0\r\n      for (let key in params) {\r\n        setTimeout(() => {\r\n          this.$router.push({ query: {...this.$route.query, [key]: params[key] }})\r\n        } , 100*++i) \r\n      }\r\n      setTimeout(() => this.get(), 100*++i)\r\n    },\r\n}\r\n```\r\nI simply call `query({page: 2})` and pray, `this.get()` is just an axios get to the API passing `this.$route.params`, then refreshing the data\r\n\r\n### What is expected?\r\nmy parameters to update both in `this.$route.query` and the URL\r\n\r\n### What is actually happening?\r\nIf I don't add these delays, the behavior is pretty radical, one of the following and/or all happens\r\n1. `this.$route.query` does not have any, or some of the parameters passed through\r\n2. The URL does not show or reflect some of the parameters\r\n3. `1.` will happen to different parameters than `2.`  \r\n4. Safari is most likely not to work, requires a larger increase of delays\r\n\r\n\r\n### Why is this a GitHub issue?\r\nMy main goal with posting this is not just to finally find a solid stable solution to my issue, but afterwards do all I can to shorten this path for others in the future.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2346","RelatedDescription":"Closed issue \"trying to update query parameters\" (#2346)"},{"Id":"348958286","IsPullRequest":false,"CreatedAt":"2018-08-09T02:59:41","Actor":"acidjazz","Number":"2345","RawContent":null,"Title":"the pain of trying to update query params","State":"closed","Body":"I've read the documentation repeatedly, read every stack overflow, and gone through all of the Vue forums on anything related to programatic navigation for over a year now and i've never been able to do the following successfully\r\n\r\n1. pass a this=that query parameter into `this.$route.query`, using either `.push`, `.replace`, etc\r\n2. have `this.$route.query` instantly contain that new parameter\r\n3. have my URL also reflect that change/add/removal of the parameter\r\n\r\nhere is one of my current methods I use that \"kind of\" works in one of my projects\r\n\r\n```js\r\nmethods: {\r\n    query (params) {\r\n      for (let key in params) {\r\n        setTimeout(() => \r\n          this.$router.push({ query: {...this.$route.query, [key]: params[key] }}\r\n        ), 100)\r\n      }\r\n      setTimeout(() => this.get(), 100*Object.keys(params).length)\r\n    },\r\n}\r\n```\r\nI simply call `query({page: 2})` and pray, `this.get()` is just an axios get to the API passing `this.$route.params`, then refreshing the data\r\n\r\nIf I don't add these delays, the behavior is pretty radical, one of the following and/or all happens\r\n1. `this.$route.query` does not have any, or some of the parameters passed through\r\n2. The URL does not show or reflect some of the parameters\r\n3. `1.` will happen to different parameters than `2.`  \r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2345","RelatedDescription":"Closed issue \"the pain of trying to update query params\" (#2345)"},{"Id":"348529750","IsPullRequest":false,"CreatedAt":"2018-08-08T07:04:15","Actor":"lululeon","Number":"2343","RawContent":null,"Title":"Imported router doesn't work, inline declaration of vue-router does.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/3qnxwp6k3p](https://codesandbox.io/s/3qnxwp6k3p)\r\n\r\n### Steps to reproduce\r\nhttps://codesandbox.io/s/3qnxwp6k3p\r\n\r\nSummary:\r\n- vue @ 2.5.17\r\n- vue router @ 3.0.1\r\n- create basic app using vue-cli.\r\n- define app routes in separate file, import file into main.js and pass router to Vue instance.\r\n\r\n### What is expected?\r\nRouting should work\r\n\r\n### What is actually happening?\r\nApp cannot load, errors in console.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2343","RelatedDescription":"Closed issue \"Imported router doesn't work, inline declaration of vue-router does.\" (#2343)"},{"Id":"348548259","IsPullRequest":false,"CreatedAt":"2018-08-08T02:05:58","Actor":"reacoulchen","Number":"2344","RawContent":null,"Title":"有谁使用history模式分享自定义分享成功的，可以分享下代码吗，已经被坑了两三周了，项目的中是这样的，进入项目有几个接口，首页进入，详情页进入，还有其他两个进入口，这样ios每个进入的落地url都不一样，不能适配自定义","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2344","RelatedDescription":"Closed issue \"有谁使用history模式分享自定义分享成功的，可以分享下代码吗，已经被坑了两三周了，项目的中是这样的，进入项目有几个接口，首页进入，详情页进入，还有其他两个进入口，这样ios每个进入的落地url都不一样，不能适配自定义\" (#2344)"},{"Id":"348201674","IsPullRequest":false,"CreatedAt":"2018-08-07T07:38:06","Actor":"JZLeung","Number":"2342","RawContent":null,"Title":"增加功能：返回路由的实际地址","State":"closed","Body":"### What problem does this feature solve?\r\n比如要分享，或是在新标签页面打开，则需要获取当前（下一个页面）的真实地址。\r\n\r\n### What does the proposed API look like?\r\n使用： `$route.getPath(location)` 函数返回该路由的绝对路径。\r\n如现在有一个路由是这么定义的：\r\n```js\r\n{\r\n  name: 'userInfo',\r\n  path: '/user/:uid',\r\n  component: userComponent\r\n}\r\n```\r\n\r\n```js\r\nconst url = this.$route.getPath({\r\n  name: 'userInfo',\r\n  params: {\r\n    uid: 2\r\n  }\r\n})\r\n// url : http://example.com/#/user/2\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2342","RelatedDescription":"Closed issue \"增加功能：返回路由的实际地址\" (#2342)"},{"Id":"348042405","IsPullRequest":false,"CreatedAt":"2018-08-06T18:55:25","Actor":"mistersender","Number":"2341","RawContent":null,"Title":"vue-router does not destroy itself","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/se6gLaqn/1/](https://jsfiddle.net/se6gLaqn/1/)\r\n\r\n### Steps to reproduce\r\nCreate a vue instance, as well as a router instance. Then destroy the vue instance. \r\n\r\nThe router instance continues to exist and fire.\r\n\r\n### What is expected?\r\nThe router should be able to properly destroy itself; either by explicit call, or when the vue instance is destroyed\r\n\r\n### What is actually happening?\r\nThe router exists and cannot be destroyed\r\n\r\n---\r\nI did some googling and see that vue-router cannot currently be destroyed, but I am asking for reconsideration. Unlike the other issue I found (https://github.com/vuejs/vue-router/issues/954) where it appeared the user wanted to destroy and create a new router in the same application, the issue I am having is completely separate. \r\n\r\nI have a massive application that essentially uses pjax methodologies to be able to run several SPAs (vue being one) that create the full site. When we navigate away from one SPA to another, the SPA needs to destroy itself so it's code does not interfere with the other SPAs. However, because the vue router cannot be destroyed; it's attempting to execute logic for routing even when the SPA that created it is destroyed. The issue compounds when we have more than 1 vue application running, as there are now 2 instances of vue-router (or more) running at a time. \r\n\r\nSpecifically, we are using the hash version of routing. It looks like the router just attaches an event to the window and listens for popstates, but things get weird when more than one event does something with popstate (an understandably oddball behavior).  I would appreciate reconsideration for allowing vue-router to destroy itself when appropriate. Thanks!\r\n\r\n[edited for spelling/grammar]\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2341","RelatedDescription":"Open issue \"vue-router does not destroy itself\" (#2341)"},{"Id":"347963227","IsPullRequest":false,"CreatedAt":"2018-08-06T16:26:25","Actor":"nolimitdev","Number":"2340","RawContent":null,"Title":"Route alias does not set active link class","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8xrk1n9f/1279/](https://jsfiddle.net/8xrk1n9f/1279/)\r\n\r\n### Steps to reproduce\r\nClicking at alias does not set active link class for router link referencing to About component. I think users expect this active class to work because router-link knows route definition and de facto it's alias(es). By vue-router doc aliases should behave the same way as origin route. So it should be fixed/implemented or add explicit note to <a href=\"https://router.vuejs.org/guide/essentials/redirect-and-alias.html#redirect\">https://router.vuejs.org/guide/essentials/redirect-and-alias.html#alias</a> and/or <a href=\"https://router.vuejs.org/api/#active-class\">https://router.vuejs.org/api/#active-class</a> that active class does not work with aliases.\r\n\r\n### What is expected?\r\nActive class should be set\r\n\r\n### What is actually happening?\r\nActive class is not set\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2340","RelatedDescription":"Closed issue \"Route alias does not set active link class\" (#2340)"},{"Id":"347766164","IsPullRequest":false,"CreatedAt":"2018-08-06T04:17:09","Actor":"leisclei","Number":"2339","RawContent":null,"Title":"since my English is poor , so I use Chinese","State":"closed","Body":"### What problem does this feature solve?\r\n请教一下,用keep-alive缓存的页面,打包成的h5 app,这个缓存会不会在手机内存堆积,需不需要清理\r\n\r\n### What does the proposed API look like?\r\n请教一下,用keep-alive缓存的页面,打包成的h5 app,这个缓存会不会在手机内存堆积,需不需要清理\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2339","RelatedDescription":"Closed issue \"since my English is poor , so I use Chinese\" (#2339)"},{"Id":"347694157","IsPullRequest":false,"CreatedAt":"2018-08-05T12:53:48","Actor":"JHeLiu","Number":"2338","RawContent":null,"Title":"框架路由匹配。","State":"closed","Body":"### What problem does this feature solve?\r\n1、减少没必要的配置代码量，更注重开发业务。\r\n2、当我在多方面分片开发的时候，我不要再去关注路由配置。我只要按照约束进行文件新建就可以了\r\n\r\n### What does the proposed API look like?\r\n它能像C# MVC框架路由匹配。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2338","RelatedDescription":"Closed issue \"框架路由匹配。\" (#2338)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"354375091","IsPullRequest":false,"CreatedAt":"2018-08-29T01:05:01","Actor":"devinholloway","Number":"1381","RawContent":null,"Title":"store.watch not functioning in SSR mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/devinholloway/vuex-watch-ssr](https://github.com/devinholloway/vuex-watch-ssr)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone the github account. Follow instructions in README\r\n\r\n### What is expected?\r\nstore.watch to execute its callback when the state its watching chanes\r\n\r\n### What is actually happening?\r\ncallback is not called on state update only in SSR\r\n\r\n---\r\nThis is a project using Quasar for SSR. preFetch methods execute server side, much like the fetch methods in Nuxt. The purpose of this is to execute multiple server side functions where one depends on the results of the other.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1381","RelatedDescription":"Closed issue \"store.watch not functioning in SSR mode\" (#1381)"},{"Id":"354683228","IsPullRequest":false,"CreatedAt":"2018-08-28T11:13:18","Actor":"sergioIGZ","Number":"1382","RawContent":null,"Title":"this is undefined inside the getters","State":"open","Body":"### What problem does this feature solve?\r\nif (somehow) you can access to this inside getters then you could use plugins inside getters (as you can now in actions or mutations)\r\n\r\n### What does the proposed API look like?\r\nI'm not sure how would i solve this, maybe this is a bug.\r\nThe thing is that inside a getter you can use this.$myPlugin.whatever()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1382","RelatedDescription":"Open issue \"this is undefined inside the getters\" (#1382)"},{"Id":"351720920","IsPullRequest":true,"CreatedAt":"2018-08-25T09:00:18","Actor":"Alex-Sokolov","Number":"1376","RawContent":null,"Title":"docs: [RU] Translation fixes","State":"closed","Body":"Fix links anchors","Url":"https://github.com/vuejs/vuex/pull/1376","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation fixes\" (#1376)"},{"Id":"353990294","IsPullRequest":true,"CreatedAt":"2018-08-25T08:59:53","Actor":"kkkisme","Number":"1380","RawContent":null,"Title":"Update logger.d.ts","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1380","RelatedDescription":"Closed or merged PR \"Update logger.d.ts\" (#1380)"},{"Id":"353618860","IsPullRequest":false,"CreatedAt":"2018-08-24T02:21:10","Actor":"Xiaolin-Zhu","Number":"1379","RawContent":null,"Title":"There is a error when I use ...mapState","State":"closed","Body":"`...mapState({\r\n            inviteeCount: state => state.inviteeCount,\r\n        })`\r\n\r\nError is \r\nUncaught TypeError: Object(...) is not a function","Url":"https://github.com/vuejs/vuex/issues/1379","RelatedDescription":"Closed issue \"There is a error when I use ...mapState\" (#1379)"},{"Id":"353167919","IsPullRequest":false,"CreatedAt":"2018-08-23T01:17:09","Actor":"philBrown","Number":"1378","RawContent":null,"Title":"Direct mutation of state not throwing error in strict mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/r1z0a4gp/7/](https://jsfiddle.net/r1z0a4gp/7/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the JSFiddle example, type into the text box.\r\n\r\nThe input's `v-model` is bound to a computed property with getter and setter. The getter maps directly to `$store.state.foo` and the setter dispatches the \"setFoo\" action.\r\n\r\nThe action directly modifies `context.state.foo` instead of committing a mutation.\r\n\r\n\r\n\r\n### What is expected?\r\nStrict mode is enabled so I would expect to see an error about directly mutating state outside of a mutation\r\n\r\n### What is actually happening?\r\nNo errors are reported and state is modified\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1378","RelatedDescription":"Closed issue \"Direct mutation of state not throwing error in strict mode\" (#1378)"},{"Id":"352092756","IsPullRequest":false,"CreatedAt":"2018-08-20T11:21:30","Actor":"dracarys26","Number":"1377","RawContent":null,"Title":"vuex 支持es6的map 吗","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/issues/1377","RelatedDescription":"Closed issue \"vuex 支持es6的map 吗\" (#1377)"},{"Id":"350321174","IsPullRequest":true,"CreatedAt":"2018-08-14T08:39:00","Actor":"Jinjiang","Number":"1375","RawContent":null,"Title":"Applied #1361 to all languages","State":"closed","Body":"#1361 ","Url":"https://github.com/vuejs/vuex/pull/1375","RelatedDescription":"Closed or merged PR \"Applied #1361 to all languages\" (#1375)"},{"Id":"350267631","IsPullRequest":false,"CreatedAt":"2018-08-14T03:24:57","Actor":"eddygithub","Number":"1374","RawContent":null,"Title":"user state doesn't auto change until I manual reload the page","State":"closed","Body":"<template>\r\n    <b-navbar toggleable=\"md\" type=\"light\" variant=\"light\">\r\n        <b-navbar-nav>\r\n            <b-nav-item href=\"#\">Home</b-nav-item>\r\n        </b-navbar-nav>\r\n\r\n        <b-navbar-nav class=\"ml-auto\">\r\n            <b-nav-form>\r\n                <b-form-input class=\"mr-sm-2\" type=\"text\" placeholder=\"Search...\" v-model=\"searchText\"></b-form-input>\r\n                <b-button variant=\"outline-success\" type=\"submit\" @click=\"search\">Search</b-button>\r\n            </b-nav-form>\r\n            <b-button v-if=\"user\" variant=\"outline-danger\" @click=\"logout\">Logout</b-button>\r\n        </b-navbar-nav>\r\n    </b-navbar>\r\n</template>\r\n\r\n<script>\r\n    import firebase from 'firebase'\r\n\r\n    export default {\r\n        name: \"navbar\",\r\n        data() {\r\n            return {\r\n                searchText: '',\r\n                user: firebase.auth().currentUser || false\r\n            }\r\n        },\r\n        methods: {\r\n            search: function () {\r\n                console.log(\"search for \".concat(this.searchText))\r\n            },\r\n            logout: function () {\r\n                firebase.auth().signOut().then(() => {\r\n                    this.$router.replace('login')\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n</script>","Url":"https://github.com/vuejs/vuex/issues/1374","RelatedDescription":"Closed issue \"user state doesn't auto change until I manual reload the page\" (#1374)"},{"Id":"349842520","IsPullRequest":true,"CreatedAt":"2018-08-12T20:44:22","Actor":"evgenyt1","Number":"1373","RawContent":null,"Title":"Improve strong-typing of getters","State":"open","Body":"See small diff. At least in TS3 this improves makes `getters` strongly typed (still allowing generic getters calls).","Url":"https://github.com/vuejs/vuex/pull/1373","RelatedDescription":"Open PR \"Improve strong-typing of getters\" (#1373)"},{"Id":"349784014","IsPullRequest":true,"CreatedAt":"2018-08-12T04:34:51","Actor":"gcoguiec","Number":"1372","RawContent":null,"Title":"ci: migration to CircleCI 2","State":"open","Body":"Since CircleCI 1 will be retired **August 31th**, I've done a couple of things (based on #1264 initial work) to achieve at least a first version of this migration.\r\n\r\n#### Done\r\n\r\n- [x] As DRY as possible.\r\n- [x] Test-reporting when no additional code was needed.\r\n- [x] Parallel running.\r\n- [x] Build-matrix against multiple node versions (currently `8:latest` and `10:latest`).\r\n- [x] Drops old `circle.yml` file.\r\n\r\n#### To be done (or not)\r\n\r\n- Test reporting for jasmine tasks (?)\r\n- Coverage [reporting](https://github.com/vuejs/vue/blob/dev/.circleci/config.yml#L37) (?)\r\n\r\n#### Additional Notes\r\n\r\nI've upgraded `eslint` and `eslint-plugin-vue-libs` to [Vue versions](https://github.com/vuejs/vue/blob/dev/package.json#L94) (junit reporter was slightly broken in previous `eslint` version) and some files were fixed in the process.","Url":"https://github.com/vuejs/vuex/pull/1372","RelatedDescription":"Open PR \"ci: migration to CircleCI 2\" (#1372)"},{"Id":"349750182","IsPullRequest":true,"CreatedAt":"2018-08-11T17:24:23","Actor":"simplesmiler","Number":"1371","RawContent":null,"Title":"Make tests runnable on Windows","State":"open","Body":"For some reason selenium struggles to find phantomjs binary, so I had to specify it manually.","Url":"https://github.com/vuejs/vuex/pull/1371","RelatedDescription":"Open PR \"Make tests runnable on Windows\" (#1371)"},{"Id":"348708875","IsPullRequest":false,"CreatedAt":"2018-08-08T12:42:45","Actor":"Simsteve7","Number":"1370","RawContent":null,"Title":"Rename mutation to action in typings of store.subscribeAction","State":"closed","Body":"https://github.com/vuejs/vuex/blob/f626da2a764368be77c71579686c694dc4dde1f9/types/test/index.ts#L42","Url":"https://github.com/vuejs/vuex/issues/1370","RelatedDescription":"Closed issue \"Rename mutation to action in typings of store.subscribeAction\" (#1370)"},{"Id":"348208324","IsPullRequest":true,"CreatedAt":"2018-08-07T07:55:39","Actor":"keng0o","Number":"1369","RawContent":null,"Title":"fix: Add key to v-for","State":"open","Body":"Updates:\r\n---\r\n- Add key to v-for","Url":"https://github.com/vuejs/vuex/pull/1369","RelatedDescription":"Open PR \"fix: Add key to v-for\" (#1369)"},{"Id":"348181677","IsPullRequest":true,"CreatedAt":"2018-08-07T06:32:29","Actor":"keng0o","Number":"1368","RawContent":null,"Title":"fix:Add key to v-for","State":"closed","Body":"Updates:\r\n---\r\n- Add key to v-for","Url":"https://github.com/vuejs/vuex/pull/1368","RelatedDescription":"Closed or merged PR \"fix:Add key to v-for\" (#1368)"},{"Id":"347625501","IsPullRequest":false,"CreatedAt":"2018-08-04T15:06:30","Actor":"hootlex","Number":"1367","RawContent":null,"Title":"Docs Suggestion: Split Namespaced Example into smaller sections","State":"open","Body":"### What problem does this feature solve?\r\nRight now the [namespaced example](https://vuex.vuejs.org/guide/modules.html#namespacing) is quite condensed. I believe it'd be helpful to split it into multiple, smaller sections - probably one for each asset like `getters`, `actions`, etc.\r\n\r\nSome parts might be repetitive but we will have the chance to describe some things more in depth and provide more examples in the future.\r\n\r\nWhat do you think? @ktsn @simplesmiler @chrisvfritz\r\n\r\n### What does the proposed API look like?\r\ndocs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1367","RelatedDescription":"Open issue \"Docs Suggestion: Split Namespaced Example into smaller sections\" (#1367)"},{"Id":"347606998","IsPullRequest":true,"CreatedAt":"2018-08-04T12:53:40","Actor":"Alex-Sokolov","Number":"1366","RawContent":null,"Title":"[RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1366","RelatedDescription":"Closed or merged PR \"[RU] Translation update\" (#1366)"},{"Id":"347421629","IsPullRequest":false,"CreatedAt":"2018-08-04T04:12:15","Actor":"Alex-Sokolov","Number":"1362","RawContent":null,"Title":"replaceState only for namespaced module","State":"closed","Body":"### What problem does this feature solve?\r\nFor example, making undo/redo functionality in namespaced module, where used replaceState for time-travelling in stored data.\r\n\r\n```\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    nodes: []\r\n  },\r\n  mutations: {\r\n    emptyState(state) {\r\n      this.replaceState({ nodes: [] })\r\n    },\r\n\r\n    // ...\r\n  },\r\n  actions: {\r\n    // ...\r\n  }\r\n}\r\n\r\n```\r\n\r\nNow calling replaceState from namespaced module will clear all Vuex state at all.\r\n\r\n### What does the proposed API look like?\r\n`this.replaceState(initialModuleState, { module: true })` or `this.replaceModuleState(initialModuleState)`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1362","RelatedDescription":"Closed issue \"replaceState only for namespaced module\" (#1362)"},{"Id":"347393359","IsPullRequest":true,"CreatedAt":"2018-08-04T04:05:09","Actor":"simplesmiler","Number":"1361","RawContent":null,"Title":"docs: Clarify example with namespaced actions","State":"closed","Body":"Guide suggests that these two example are equal, and are different only by syntax. But they are different, and it would be good to clarify that.","Url":"https://github.com/vuejs/vuex/pull/1361","RelatedDescription":"Closed or merged PR \"docs: Clarify example with namespaced actions\" (#1361)"},{"Id":"347517950","IsPullRequest":true,"CreatedAt":"2018-08-03T19:55:19","Actor":"simplesmiler","Number":"1365","RawContent":null,"Title":"Warn about conflicts between state and module","State":"open","Body":"Fixes #1363.","Url":"https://github.com/vuejs/vuex/pull/1365","RelatedDescription":"Open PR \"Warn about conflicts between state and module\" (#1365)"},{"Id":"347491117","IsPullRequest":true,"CreatedAt":"2018-08-03T18:16:57","Actor":"hootlex","Number":"1364","RawContent":null,"Title":"WIP feat: access namespaced getters using the dot notation","State":"open","Body":"Add's support for accessing namespaced getters using the dot notation, the same way we do for the `state`. For example: `this.$store.getters.users.newUsers`\r\n\r\nImplements https://github.com/vuejs/vuex/issues/1258\r\n\r\n## Todo:\r\n- [x] Prefer root getter in case of same naming to not introduce braking changes - @hootlex\r\n- [x] Display warning if root getter has the same the name with a module. Similar to https://github.com/vuejs/vuex/issues/1363 - @hootlex\r\n- [x] Add complete test for namespaced getters - @simplesmiler \r\n- [x] Add tests for nested, namespaced modules - @simplesmiler \r\n- [ ] Docs - @hootlex","Url":"https://github.com/vuejs/vuex/pull/1364","RelatedDescription":"Open PR \"WIP feat: access namespaced getters using the dot notation\" (#1364)"},{"Id":"347478465","IsPullRequest":false,"CreatedAt":"2018-08-03T17:33:18","Actor":"hootlex","Number":"1363","RawContent":null,"Title":"Display warning if root state property has the same name with module","State":"open","Body":"### What problem does this feature solve?\r\nIf there is a root state property with the same name of a module, the module is prioritized. Right now there is no warning.\r\n\r\n## Example:\r\n\r\n```\r\n// store\r\nmodules: {\r\n    users\r\n},\r\nstate: {\r\n    users: []\r\n}\r\n```\r\n`store.state.users` points to the users module and `users` state property is shallowed\r\n\r\n### What does the proposed API look like?\r\nThere should be a warning pointing out the mistake and intriguing the user to rename the state property.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1363","RelatedDescription":"Open issue \"Display warning if root state property has the same name with module\" (#1363)"},{"Id":"347251280","IsPullRequest":false,"CreatedAt":"2018-08-03T04:00:38","Actor":"clm960227","Number":"1360","RawContent":null,"Title":"333","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1360","RelatedDescription":"Closed issue \"333\" (#1360)"},{"Id":"346637640","IsPullRequest":false,"CreatedAt":"2018-08-01T14:57:25","Actor":"initial-wu","Number":"1359","RawContent":null,"Title":"Release plan?","State":"closed","Body":"There have been 100+ commits since last release. @yyx990803 ","Url":"https://github.com/vuejs/vuex/issues/1359","RelatedDescription":"Closed issue \"Release plan?\" (#1359)"},{"Id":"345715894","IsPullRequest":false,"CreatedAt":"2018-08-01T14:47:47","Actor":"spiffytech","Number":"1357","RawContent":null,"Title":"TypeScript `watch` doesn't support getters parameter for getter","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/LBexJp?editors=0010#0](https://codepen.io/anon/pen/LBexJp?editors=0010#0)\r\n\r\n### Steps to reproduce\r\n- Use TypeScript to define your store.\r\n- Use `store.watch` with a getter that accepts getters as the second argument (as described in the Vuex docs)\r\n- Observe typescript error \"Argument of type '(_state: any, getters: any) => any' is not assignable to parameter of type '(state: { n: number; }) => any'.\"\r\n\r\n### What is expected?\r\nVuex recognizes the getter as valid, still types `state`, and preferably types `getters`.\r\n\r\n### What is actually happening?\r\nTypeScript error \"Argument of type '(_state: any, getters: any) => any' is not assignable to parameter of type '(state: { n: number; }) => any'.\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1357","RelatedDescription":"Closed issue \"TypeScript `watch` doesn't support getters parameter for getter\" (#1357)"},{"Id":"346165414","IsPullRequest":true,"CreatedAt":"2018-07-31T12:27:55","Actor":"simplesmiler","Number":"1358","RawContent":null,"Title":"Prepend devtool handler","State":"open","Body":"This change adds an API for prepending handlers with `store.subscribe(fn, { prepend: true })` and changes devtool subscriber to use this API.\r\n\r\nThis fixes https://github.com/vuejs/vue-devtools/issues/678","Url":"https://github.com/vuejs/vuex/pull/1358","RelatedDescription":"Open PR \"Prepend devtool handler\" (#1358)"},{"Id":"345515704","IsPullRequest":false,"CreatedAt":"2018-07-30T13:42:24","Actor":"BengBu-YueZhang","Number":"1355","RawContent":null,"Title":"What is the best combination of ts and vuex?","State":"closed","Body":"### What problem does this feature solve?\r\ngood typescript and vuex docking\r\n\r\n### What does the proposed API look like?\r\nThe optimal solution recommended by the government\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1355","RelatedDescription":"Closed issue \"What is the best combination of ts and vuex?\" (#1355)"},{"Id":"345556952","IsPullRequest":false,"CreatedAt":"2018-07-29T19:40:53","Actor":"mahdi-toosi","Number":"1356","RawContent":null,"Title":"why can't I display the result of my axios get request in vuex?","State":"closed","Body":"I am working with Laravel, vue, vuex and axios\r\n\r\nI am trying to get data from database and display in my component\r\n\r\nHere's my lists.vue file\r\n\r\n    <specialist v-for=\"doctor in DoctorsPerDayData\" :key=\"doctor.id\">\r\n\r\n        <template slot=\"speciality\">\r\n            <a class=\" button specialist\" @click=\"clicked(doctor)\">\r\n                <strong>\r\n                    {{ doctor.speciality}}\r\n                </strong>\r\n            </a>\r\n        </template>\r\n        <template slot=\"doctor\">{{ doctor.name}}</template>\r\n\r\n    </specialist>\r\n\r\nI am testing the commented code but still get the same result \r\n```\r\ncomputed: {\r\n\r\n//       ...mapGetters([\r\n//                'DoctorsPerDayData'\r\n//            ]),\r\n//            DoctorsPerDayData (){\r\n//               return this.$store.state.DoctorsPerDay\r\n//            }\r\n     DoctorsPerDayData : {\r\n           get(){\r\n               return this.$store.state.DoctorsPerDay\r\n           }\r\n     }\r\n\r\n        methods:{\r\n        ...mapActions([\r\n            'UpdateDoctorsPerDay'\r\n        ]),\r\n    },\r\n    mounted() {\r\n        this.UpdateDoctorsPerDay();\r\n    }\r\n```\r\nhere's my store.js file\r\n```\r\n\r\nexport const store = new Vuex.Store({\r\nstate:{\r\n    DoctorsPerDay: null,\r\n},\r\ngetters:{\r\n    DoctorsPerDayData: state => {\r\n        return state.DoctorsPerDay\r\n    }\r\n},\r\nmutations:{\r\n    UpdateDoctorsPerDay(state , DoctorsPerDay ){\r\n        state.DoctorsPerDay = DoctorsPerDay;\r\n    }\r\n},\r\nactions:{\r\n    UpdateDoctorsPerDay: ({commit})=>{\r\n        axios.get('/get/Doctors/date')\r\n            .then((response) => {\r\n                commit('UpdateDoctorsPerDay', response.data)\r\n            })\r\n    },\r\n}\r\n});\r\n```\r\nOn the other side my vuex dev tool shows DoctorsPerDay have data\r\n\r\nand I don't get any error :|\r\n\r\n[stackoverflow](https://stackoverflow.com/questions/51581338/vue-why-cant-i-display-the-result-of-my-axios-get-request-in-vuex)","Url":"https://github.com/vuejs/vuex/issues/1356","RelatedDescription":"Closed issue \"why can't I display the result of my axios get request in vuex?\" (#1356)"},{"Id":"344690674","IsPullRequest":false,"CreatedAt":"2018-07-26T04:26:28","Actor":"ijse","Number":"1354","RawContent":null,"Title":"The `subscribeAction` types  is not in types/index.d.ts in the latest v3.0.1","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/v3.0.1/types/index.d.ts#L19](https://github.com/vuejs/vuex/blob/v3.0.1/types/index.d.ts#L19)\r\n\r\n### Steps to reproduce\r\nuse `store.subscribeAction()` method\r\n\r\n### What is expected?\r\nno error\r\n\r\n### What is actually happening?\r\nTypeScript throws `Property 'subscribeAction' does not exist on type 'Store<any>'`\r\n\r\n---\r\nI checked the source code downloaded from NPM registry, there is no subscribeAction types declared in `types/index.d.ts` in fact.\r\nhttps://github.com/vuejs/vuex/blob/v3.0.1/types/index.d.ts#L19\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1354","RelatedDescription":"Open issue \"The `subscribeAction` types  is not in types/index.d.ts in the latest v3.0.1\" (#1354)"},{"Id":"344305474","IsPullRequest":false,"CreatedAt":"2018-07-25T06:17:52","Actor":"ffxsam","Number":"1353","RawContent":null,"Title":"TypeScript type-checking bugs with mapState/mapGetters","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/ffxsam/repro-mapstate-bug](https://github.com/ffxsam/repro-mapstate-bug)\r\n\r\n### Steps to reproduce\r\n1. Clone repo\r\n1. Run yarn\r\n1. Open src/components/HelloWorld.vue\r\n\r\n### What is expected?\r\nThere should be no type errors\r\n\r\n### What is actually happening?\r\nThere is a type error on line 52\r\n\r\n---\r\n\r\nIf you comment out lines 46-48 (the `fake` computed property), the type error on line 52 goes away. It seems `mapState` and `mapGetters` merges in an interface property, `[x: string] => any` whenever they're used. But if other computed properties are added, this fails to exist.\r\n\r\nFor instance, with lines 46-48 _not_ commented out, I mouse over `this` in the method, and I see this:\r\n\r\n```\r\n{\r\n    doit(): void;\r\n} & {\r\n    fake: string;\r\n} & Readonly<{\r\n    msg: string;\r\n}> & Vue\r\n```\r\n\r\nHowever, if I comment out lines 46-48, hovering over `this` reveals:\r\n\r\n```\r\n{\r\n    doit(): void;\r\n} & {\r\n    [x: string]: any;\r\n} & Readonly<{\r\n    msg: string;\r\n}> & Vue\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1353","RelatedDescription":"Closed issue \"TypeScript type-checking bugs with mapState/mapGetters\" (#1353)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-08-29T05:30:48.0224403Z","RunDurationInMilliseconds":3492}