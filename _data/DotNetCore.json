{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":35,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0","PublishedOn":"2019-09-23T16:00:29+00:00","CommentsCount":95,"FacebookCount":0,"Summary":"Announcing .NET Core 3.0\nWe’re excited to announce the release of .NET Core 3.0. It includes many improvements, including adding Windows Forms and WPF, adding new JSON APIs, support for ARM64 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/","RawContent":null},{"Title":"Release Candidate builds of Entity Framework Core 3.0 and Entity Framework 6.3 are now available","PublishedOn":"2019-09-16T21:47:32+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We previously said that preview 9 would be your last chance to test EF Core 3.0 and EF 6.3 before general availability. But it turns out that we made enough improvements to our libraries and across...","Href":"https://devblogs.microsoft.com/dotnet/release-candidate-builds-of-entity-framework-core-3-0-and-entity-framework-6-3-are-now-available/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Release Candidate 1","PublishedOn":"2019-09-16T18:45:09+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.0 Release Candidate 1. Just like with Preview 9, we&#8217;ve focused on polishing .NET Core 3.0 for a final release. We are now getting very, very close. We...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/","RawContent":null},{"Title":"Finalization implementation details","PublishedOn":"2019-09-16T17:43:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Years ago I wrote a document on making finalization scanning concurrent. At the time there was an internal team that was using finalization as a way to resurrect objects and putting them back in their...","Href":"https://devblogs.microsoft.com/dotnet/finalization-implementation-details/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10486020433","Type":"IssuesEvent","CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Opened issue \".NET Core `latest` Docker tags updated to 3.0\" (#124) at dotnet/announcements","RelatedBody":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n"},{"Id":"10427072993","Type":"IssuesEvent","CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Opened issue \".NET Core 3.0 RC 1\" (#123) at dotnet/announcements","RelatedBody":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10387173702","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:23:27","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Opened issue \"September 2019 .NET Updates\" (#122) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10387041341","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:04:51","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32971\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.7\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.8, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n"},{"Id":"10348207363","Type":"IssuesEvent","CreatedAt":"2019-09-04T19:14:06","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Opened issue \".NET Core 3.0 Preview 9\" (#120) at dotnet/announcements","RelatedBody":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n[EF Core](https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-9-and-entity-framework-6-3-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10529646276","Type":"PullRequestEvent","CreatedAt":"2019-10-01T02:15:28","Actor":"adamsitnik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26962","RelatedDescription":"Opened pull request \"[DRAFT] apply StartsWith optimizations to EndsWith\" (#26962) at dotnet/coreclr","RelatedBody":""},{"Id":"10529499136","Type":"PullRequestEvent","CreatedAt":"2019-10-01T01:36:40","Actor":"trylek","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26961","RelatedDescription":"Opened pull request \"SuperIlc improvements to facilitate its use in Crossgen2 pipeline\" (#26961) at dotnet/coreclr","RelatedBody":"1) New NoCrossgen2 option needed for using SuperIlc to build\r\nthe [legacy] Crossgen framework during native test component build;\r\n\r\n2) Several hardenings in ProcessRunner that finally let me pass\r\nframework build on Linux without null-refing. This would merit\r\na closer look at some point but for now this seems to do the trick.\r\n\r\n3) Add exclusions for two framework assemblies that fail compiling\r\nwith Crossgen2.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10529457529","Type":"PullRequestEvent","CreatedAt":"2019-10-01T01:25:31","Actor":"adamsitnik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26905","RelatedDescription":"Merged pull request \"allow ASCII equality ordinal fast path for en-* cultures\" (#26905) at dotnet/coreclr","RelatedBody":"IMHO we should allow the `en-GB` culture to use the fast path on Unix as well. \r\n\r\nMotivation: it uses the same set of characters as `en-US` and it should bring nice perf boost for our \"en-GB\" customers for free.\r\n\r\n/cc @danmosemsft "},{"Id":"10529437211","Type":"PullRequestEvent","CreatedAt":"2019-10-01T01:20:00","Actor":"davidwrighton","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26960","RelatedDescription":"Opened pull request \"[WIP] Buildwork to remove dir.props files\" (#26960) at dotnet/coreclr","RelatedBody":""},{"Id":"10529115602","Type":"PullRequestEvent","CreatedAt":"2019-09-30T23:56:30","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26959","RelatedDescription":"Opened pull request \"Replace otherRegNum with GetOtherRegNum\" (#26959) at dotnet/coreclr","RelatedBody":"@am11 @jkotas @janvorli @sandreenko "},{"Id":"10529086226","Type":"PullRequestEvent","CreatedAt":"2019-09-30T23:49:04","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26958","RelatedDescription":"Opened pull request \"find src/jit -type f -exec sed -i -e 's/.*declspec.*isHfaRegArg.*//g'…\" (#26958) at dotnet/coreclr","RelatedBody":"… {} \\;"},{"Id":"10529058600","Type":"IssuesEvent","CreatedAt":"2019-09-30T23:42:18","Actor":"jeffschwMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26909","RelatedDescription":"Closed issue \"VS2019.3.0 \"Hello World\" stackoverflow exception\" (#26909) at dotnet/coreclr","RelatedBody":"Created empty .net core 3.0 console project. Press F5 and it fell down with StackOverFlow Exception. .exe file works from Debug folder fine. \r\n\r\n**System**\r\n```\r\nWindows 10\r\nVisualStudio 2019.3.0\r\n.NET Core Version: 3.0.100\r\n.NET Core Commit: 04339c3a26\r\n```\r\n\r\n**Exception details** \r\n```\r\nSystem.StackOverflowException\r\nHResult=0x800703E9\r\nMessage=Exception of type 'System.StackOverflowException' was thrown.\r\n```\r\n\r\n![Animation](https://user-images.githubusercontent.com/6221261/65725036-608e7b00-e0ba-11e9-8f90-5a78a09ca78e.gif)\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10530185871","Type":"PullRequestEvent","CreatedAt":"2019-10-01T04:38:35","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12752","RelatedDescription":"Merged pull request \"Fix merge error and update dependencies\" (#12752) at dotnet/cli","RelatedBody":"Fix merge error that lead to an extra `\"` in Version.Details.xml\r\n\r\nRun darc update-dependencies --channel \".NET Core 3.1 Dev\" to pick up dependency updates we missed from that."},{"Id":"10530094246","Type":"PullRequestEvent","CreatedAt":"2019-10-01T04:15:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12755","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12755) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.23\r\n- **Date Produced**: 10/1/2019 3:00 AM\r\n- **Commit**: 28821c59adb1afff8f9d5740d84e5a966501afa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.23\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10529627665","Type":"PullRequestEvent","CreatedAt":"2019-10-01T02:10:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12754","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12754) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.14\r\n- **Date Produced**: 10/1/2019 12:23 AM\r\n- **Commit**: 6e19ccf91950bd458e8909b362dd8ca1bbf6c34b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.14\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10529566492","Type":"PullRequestEvent","CreatedAt":"2019-10-01T01:55:06","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12750","RelatedDescription":"Merged pull request \"Enable SDK version harvesting from a global.json file\" (#12750) at dotnet/cli","RelatedBody":"Enable SDK version harvesting from a global.json file\r\n\r\nAddresses: https://github.com/dotnet/cli/issues/12175\r\nRelated: https://github.com/actions/setup-dotnet/issues/14\r\n\r\n**Adding a \"jsonfile\" parameter:**\r\nscripts/obtain/dotnet-install.ps1\r\nscripts/obtain/dotnet-install.sh\r\n\r\n**Adding a install script 'dryrun' test:**\r\nTestAssets/InstallationScriptTests/InstallationScriptTests.json\r\ntest/InstallationScript.Tests/GivenThatIWantToInstallTheSdkFromAScript.cs \r\n\r\n"},{"Id":"10529494026","Type":"PullRequestEvent","CreatedAt":"2019-10-01T01:35:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12754","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12754) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.14\r\n- **Date Produced**: 10/1/2019 12:23 AM\r\n- **Commit**: 6e19ccf91950bd458e8909b362dd8ca1bbf6c34b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.14\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10528789882","Type":"PullRequestEvent","CreatedAt":"2019-09-30T22:40:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12753","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12753) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.9\r\n- **Date Produced**: 9/30/2019 8:45 PM\r\n- **Commit**: ed7faad78973e21d58839ac0d74a4f325d0e803f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.9\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10517691319","Type":"IssuesEvent","CreatedAt":"2019-09-29T04:57:45","Actor":"B16180339","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1581","RelatedDescription":"Closed issue \"Dotnet\" (#1581) at dotnet/standard","RelatedBody":""},{"Id":"10517690637","Type":"IssuesEvent","CreatedAt":"2019-09-29T04:57:13","Actor":"B16180339","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1581","RelatedDescription":"Opened issue \"Dotnet\" (#1581) at dotnet/standard","RelatedBody":""},{"Id":"10515751225","Type":"PullRequestEvent","CreatedAt":"2019-09-28T12:28:37","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1580","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1580) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190927.7\r\n- **Date Produced**: 9/28/2019 1:48 AM\r\n- **Commit**: 7e9a177824cbefaee8985a9b517ebb0ea2e17a81\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19477.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10515729024","Type":"PullRequestEvent","CreatedAt":"2019-09-28T12:18:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1580","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1580) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190927.7\r\n- **Date Produced**: 9/28/2019 1:48 AM\r\n- **Commit**: 7e9a177824cbefaee8985a9b517ebb0ea2e17a81\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19477.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10515713571","Type":"PullRequestEvent","CreatedAt":"2019-09-28T12:11:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1579","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1579) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190927.2\r\n- **Date Produced**: 9/27/2019 6:33 PM\r\n- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19477.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10515691590","Type":"PullRequestEvent","CreatedAt":"2019-09-28T12:01:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1579","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1579) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190927.2\r\n- **Date Produced**: 9/27/2019 6:33 PM\r\n- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19477.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10510004723","Type":"PullRequestEvent","CreatedAt":"2019-09-27T12:28:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1578","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1578) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190926.10\r\n- **Date Produced**: 9/27/2019 5:59 AM\r\n- **Commit**: 296c0e71ddcc4885d30af18dea829c1923cfdc5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19476.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10509936860","Type":"PullRequestEvent","CreatedAt":"2019-09-27T12:18:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1578","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1578) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190926.10\r\n- **Date Produced**: 9/27/2019 5:59 AM\r\n- **Commit**: 296c0e71ddcc4885d30af18dea829c1923cfdc5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19476.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10530155239","Type":"PullRequestEvent","CreatedAt":"2019-10-01T04:30:14","Actor":"joshudson","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41457","RelatedDescription":"Opened pull request \"Emergency fix for #41432 so we can decide on the right course in master w/o time pressure\" (#41457) at dotnet/corefx","RelatedBody":"Emergency fix for #41432 so we can decide on the right course in master w/o time pressure\r\n\r\nThe single commit 0b62ae25d858f6c1dd08663b75f87e4ef9f98f03 should be rebased for 3.0 maintenance release. I'll probably end up using this branch again for the master fix."},{"Id":"10529797894","Type":"PullRequestEvent","CreatedAt":"2019-10-01T02:57:00","Actor":"cston","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41261","RelatedDescription":"Merged pull request \"Use slow path for CallInstruction returning enum value #40976\" (#41261) at dotnet/corefx","RelatedBody":"#### Description\r\nThe System.Linq.Expressions interpreter treats the result of a call to method that returns an enum value as the underlying type rather than the enum type.\r\n\t\t\r\n#### Customer Impact\r\nCustomer reported issue. Interpreting an Expression that calls a method returning an enum value can result in an `InvalidCastException`. See https://github.com/dotnet/corefx/issues/40968.\r\n\r\n#### Regression?\r\nYes, a regression from 2.2.\r\n\r\n#### Risk\r\nLow. The fix is to revert an optimization added to the Expression interpreter in 3.0 for enum values.\r\n\r\nPort of https://github.com/dotnet/corefx/pull/40976 and https://github.com/dotnet/corefx/pull/41218 to release/3.0."},{"Id":"10529672716","Type":"IssuesEvent","CreatedAt":"2019-10-01T02:22:19","Actor":"btecu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41456","RelatedDescription":"Opened issue \"System.Text.Json default date handling\" (#41456) at dotnet/corefx","RelatedBody":"In JSON.NET you can:\r\n```\r\nJsonConvert.DefaultSettings = () => new JsonSerializerSettings {\r\n    DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n};\r\n```\r\n\r\nIs there anything similar in `System.Text.Json`?\r\nIf there is not an option to set the default, can it be passed in manually?\r\n\r\nAlso, what is the default (`Local`, `Utc`, `Unspecified`)?"},{"Id":"10529563124","Type":"IssuesEvent","CreatedAt":"2019-10-01T01:54:13","Actor":"vslee","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41443","RelatedDescription":"Closed issue \"ClientWebSocket.ReceiveAsync() throws IOException when cancelled\" (#41443) at dotnet/corefx","RelatedBody":"If a `ClientWebSocket.ReceiveAsync()` is cancelled with a `CancellationToken`, it throws an `IOException`. I was expecting an `OperationCanceledException`? Please see the repro below:\r\n\r\n``` C#\r\nstatic async Task Main(string[] args)\r\n{\r\n\tSystem.Net.WebSockets.ClientWebSocket clientWebSocket = new System.Net.WebSockets.ClientWebSocket();\r\n\tvar rcvBytes = new byte[128];\r\n\tvar rcvBuffer = new ArraySegment<byte>(rcvBytes);\r\n\tvar cancellationTokenSource = new System.Threading.CancellationTokenSource();\r\n\tvar cancellationToken = cancellationTokenSource.Token;\r\n\tawait clientWebSocket.ConnectAsync(new Uri(\r\n\t\t\"wss://echo.websocket.org\"), cancellationToken);\r\n\tvar t = Task.Run(async () => {\r\n\t\twhile (true)\r\n\t\t{\r\n\t\t\tSystem.Net.WebSockets.WebSocketReceiveResult rcvResult = await \r\n\t\t\t\tclientWebSocket.ReceiveAsync(\r\n\t\t\t\t\t\trcvBuffer,\r\n\t\t\t\t\t\tcancellationToken);\r\n\t\t\tbyte[] msgBytes = rcvBuffer.Skip(rcvBuffer.Offset).Take(rcvResult.Count).ToArray();\r\n\t\t\t\t\tstring rcvMsg = Encoding.UTF8.GetString(msgBytes);\r\n\t\t\t\t\tConsole.WriteLine(\"Received: {0}\", rcvMsg);\r\n\t\t} });\r\n\tawait Task.Delay(500);\r\n\tcancellationTokenSource.Cancel();\r\n\tConsole.WriteLine(\"cts cancelled\");\r\n}\r\n```\r\n\r\nThrows:\r\n```\r\nSystem.IO.IOException\r\n  HResult=0x80131620\r\n  Message=Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..\r\n  Source=System.Net.Sockets\r\n  StackTrace:\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\r\n\r\nInner Exception 1:\r\nSocketException: The I/O operation has been aborted because of either a thread exit or an application request.\r\n```\r\n\r\nIn .net core 3.0 and 2.2 on VSE 2019 16.3.1 on Windows 10 x64\r\n\r\nMay be related to #5200?"},{"Id":"10529551222","Type":"PullRequestEvent","CreatedAt":"2019-10-01T01:50:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41453","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41453) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190930.2\r\n- **Date Produced**: 9/30/2019 7:06 PM\r\n- **Commit**: 0303386d3bdc4dc9b9ea59fbaadfe0d896f960ee\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview1.19480.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview1.19480.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview1.19480.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"},{"Id":"10529500333","Type":"PullRequestEvent","CreatedAt":"2019-10-01T01:37:01","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41455","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#41455) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10529274588","Type":"PullRequestEvent","CreatedAt":"2019-10-01T00:36:56","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41454","RelatedDescription":"Opened pull request \"Break the ACL classes into files\" (#41454) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10529373765","Type":"IssuesEvent","CreatedAt":"2019-10-01T01:02:53","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38523","RelatedDescription":"Closed issue \"Proposing two new refactoring options for tuple assignments in constructors\" (#38523) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n3.3.0-beta3-19407-03+d961190a1b4b2a81ac178b567840dfeff048b037\r\n\r\n**Steps to Reproduce**:\r\n\r\nThere are certain language features that could use a bit more tooling support, this is one of those situations. I would like to see a styling option for refactoring that enabled code that looks like this:\r\n\r\n```csharp\r\nclass Program\r\n{\r\n    class FooBar \r\n    {\r\n        readonly IServer _server;\r\n        readonly IActor _actor;\r\n\r\n        public FooBar(IServer server, IActor actor) \r\n        {\r\n            _server = server;\r\n            _actor = actor;\r\n        }\r\n    }\r\n    \r\n    interface IServer { }\r\n    interface IActor { }\r\n}\r\n```\r\nTo be converted to this:\r\n\r\n```csharp\r\nclass Program\r\n{\r\n    class FooBar \r\n    {\r\n        readonly IServer _server;\r\n        readonly IActor _actor;\r\n\r\n        public FooBar(IServer server, IActor actor) \r\n        {\r\n            (_server, _actor) = (server, actor);\r\n        }\r\n    }\r\n    \r\n    interface IServer { }\r\n    interface IActor { }\r\n}\r\n```\r\n\r\nTaking it a step further, if the user has already defined that their styling preference is to prefer constructor expressions when possible -- the result of the refactoring would be as follows:\r\n\r\n```csharp\r\nclass Program\r\n{\r\n    class FooBar \r\n    {\r\n        readonly IServer _server;\r\n        readonly IActor _actor;\r\n\r\n        public FooBar(IServer server, IActor actor) \r\n            => (_server, _actor) = (server, actor);\r\n    }\r\n    \r\n    interface IServer { }\r\n    interface IActor { }\r\n}\r\n```\r\n\r\nThese refactoring would need to work in the opposite manner too, going from tuple to separate statements. This proposal comes from a conversation with @BillWagner, @mikadumont and I were having in the [twitter verse](https://twitter.com/davidpine7/status/1169418926217973760?s=20).\r\n\r\n- From statements to tuple expression.\r\n- From tuple to separate statements.\r\n\r\nI'm assuming this should be labeled as \"Area-IDE\" and \"IDE-CodeStyle\""},{"Id":"10529243838","Type":"PullRequestEvent","CreatedAt":"2019-10-01T00:29:17","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38755","RelatedDescription":"Closed pull request \"A C# option to indent/not indent `namespace` contents\" (#38755) at dotnet/roslyn","RelatedBody":"Added a C# formatting option to enable/disable (enabled by default) indentation for `namespace` contents.\r\n\r\nHaving this off is very useful for a couple of scenarios:\r\n1. small screens, such as laptop screens\r\n2. diff viewing, when two files have to be shown side by side (GitHub for example often has to wrap C# code because of long lines)\r\n\r\nFor example, with option off:\r\n```csharp\r\nnamespace MyNamespace {\r\n\r\nusing System;\r\n\r\nclass MyClass\r\n{\r\n    int f;\r\n}\r\n}\r\n```\r\n\r\nOption on:\r\n```csharp\r\nnamespace MyNamespace {\r\n\r\n  using System;\r\n\r\n  class MyClass\r\n  {\r\n    int f;\r\n  }\r\n}\r\n```\r\n\r\nCloses #24129"},{"Id":"10529139893","Type":"PullRequestEvent","CreatedAt":"2019-10-01T00:02:36","Actor":"chsienki","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38972","RelatedDescription":"Opened pull request \"Fix docker caching by resetting cache only when mono changes\" (#38972) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10530160563","Type":"PullRequestEvent","CreatedAt":"2019-10-01T04:31:35","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7805) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10530126394","Type":"PullRequestEvent","CreatedAt":"2019-10-01T04:22:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7804) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @Youssef1313 @safern"},{"Id":"10526521641","Type":"PullRequestEvent","CreatedAt":"2019-09-30T17:16:45","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7804) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10518899776","Type":"PullRequestEvent","CreatedAt":"2019-09-29T14:16:15","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7803","RelatedDescription":"Merged pull request \"Delete ReadyToRun portions of the compiler and test tree\" (#7803) at dotnet/corert","RelatedBody":"The development of the ReadyToRun compiler moved to the CoreCLR repo. Keeping the sources here is just making it harder to keep the repos in sync.\r\n\r\nDeleting the testing speeds up the CI considerably."},{"Id":"10518592188","Type":"PullRequestEvent","CreatedAt":"2019-09-29T11:59:49","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7803","RelatedDescription":"Opened pull request \"Delete ReadyToRun portions of the compiler and test tree\" (#7803) at dotnet/corert","RelatedBody":"The development of the ReadyToRun compiler moved to the CoreCLR repo. Keeping the sources here is just making it harder to keep the repos in sync.\r\n\r\nDeleting the testing speeds up the CI considerably."},{"Id":"10518589270","Type":"PullRequestEvent","CreatedAt":"2019-09-29T11:58:37","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7802","RelatedDescription":"Merged pull request \"Fix Windows debug information for classes\" (#7802) at dotnet/corert","RelatedBody":"Fixes a longstanding issue where we were emitting erroneous vfptr debug entries and incorrectly mangling class names. One could only inspect things as they were statically typed in the source (so if a variable was typed as `object` in the sources, you wouldn't see any fields in the native debugger, no matter what was assigned to it).\r\n\r\nIt wasn't too terrible, so I sort of just lived with it, but this should work.\r\n\r\nWith this, casting to base classes in the debugger works.\r\n\r\n## Before\r\n\r\n![before](https://user-images.githubusercontent.com/13110571/65817093-98550a00-e203-11e9-88ce-efd8109ae303.gif)\r\n\r\n\r\n## After\r\n\r\n![after](https://user-images.githubusercontent.com/13110571/65817095-9d19be00-e203-11e9-9ec7-73ffe4587b62.gif)\r\n"},{"Id":"10516712604","Type":"PullRequestEvent","CreatedAt":"2019-09-28T19:35:07","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7667","RelatedDescription":"Merged pull request \"Add a doc on debugging CoreRT programs\" (#7667) at dotnet/corert","RelatedBody":"A couple useful tips."},{"Id":"10515879419","Type":"PullRequestEvent","CreatedAt":"2019-09-28T13:26:50","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7802","RelatedDescription":"Opened pull request \"Fix Windows debug information for classes\" (#7802) at dotnet/corert","RelatedBody":"Fixes a longstanding issue where we were emitting erroneous vfptr debug entries and incorrectly mangling class names. One could only inspect things as they were statically typed in the source (so if a variable was typed as `object` in the sources, you wouldn't see any fields in the native debugger, no matter what was assigned to it).\r\n\r\nIt wasn't too terrible, so I sort of just lived with it, but this should work.\r\n\r\nWith this, casting to base classes in the debugger works.\r\n\r\n## Before\r\n\r\n![before](https://user-images.githubusercontent.com/13110571/65817093-98550a00-e203-11e9-88ce-efd8109ae303.gif)\r\n\r\n\r\n## After\r\n\r\n![after](https://user-images.githubusercontent.com/13110571/65817095-9d19be00-e203-11e9-9ec7-73ffe4587b62.gif)\r\n"},{"Id":"10514196898","Type":"PullRequestEvent","CreatedAt":"2019-09-27T23:17:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7800","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7800) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams"},{"Id":"10511294262","Type":"PullRequestEvent","CreatedAt":"2019-09-27T15:09:04","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7801","RelatedDescription":"Closed pull request \"Remove duplicate enum SystemVClassificationType\" (#7801) at dotnet/corert","RelatedBody":"Found the duplicate definition at: https://github.com/dotnet/corert/blob/a7ce92678876ba55a1c7a65c464363b51d777b4f/src/JitInterface/src/CorInfoTypes.cs#L1170"},{"Id":"10510278407","Type":"PullRequestEvent","CreatedAt":"2019-09-27T13:06:15","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7801","RelatedDescription":"Opened pull request \"Remove duplicate enum SystemVClassificationType\" (#7801) at dotnet/corert","RelatedBody":"Found the duplicate definition at: https://github.com/dotnet/corert/blob/a7ce92678876ba55a1c7a65c464363b51d777b4f/src/JitInterface/src/CorInfoTypes.cs#L1170"},{"Id":"10505849379","Type":"PullRequestEvent","CreatedAt":"2019-09-26T22:32:32","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7800","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7800) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"500619654","IsPullRequest":true,"CreatedAt":"2019-10-01T02:15:28","Actor":"adamsitnik","Number":"26962","RawContent":null,"Title":"[DRAFT] apply StartsWith optimizations to EndsWith","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26962","RelatedDescription":"Open PR \"[DRAFT] apply StartsWith optimizations to EndsWith\" (#26962)"},{"Id":"500609641","IsPullRequest":true,"CreatedAt":"2019-10-01T01:36:40","Actor":"trylek","Number":"26961","RawContent":null,"Title":"SuperIlc improvements to facilitate its use in Crossgen2 pipeline","State":"open","Body":"1) New NoCrossgen2 option needed for using SuperIlc to build\r\nthe [legacy] Crossgen framework during native test component build;\r\n\r\n2) Several hardenings in ProcessRunner that finally let me pass\r\nframework build on Linux without null-refing. This would merit\r\na closer look at some point but for now this seems to do the trick.\r\n\r\n3) Add exclusions for two framework assemblies that fail compiling\r\nwith Crossgen2.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/26961","RelatedDescription":"Open PR \"SuperIlc improvements to facilitate its use in Crossgen2 pipeline\" (#26961)"},{"Id":"500605548","IsPullRequest":true,"CreatedAt":"2019-10-01T01:20:00","Actor":"davidwrighton","Number":"26960","RawContent":null,"Title":"[WIP] Buildwork to remove dir.props files","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26960","RelatedDescription":"Open PR \"[WIP] Buildwork to remove dir.props files\" (#26960)"},{"Id":"500584199","IsPullRequest":true,"CreatedAt":"2019-09-30T23:56:29","Actor":"franksinankaya","Number":"26959","RawContent":null,"Title":"Replace otherRegNum with GetOtherRegNum","State":"open","Body":"@am11 @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/26959","RelatedDescription":"Open PR \"Replace otherRegNum with GetOtherRegNum\" (#26959)"},{"Id":"500582230","IsPullRequest":true,"CreatedAt":"2019-09-30T23:49:03","Actor":"franksinankaya","Number":"26958","RawContent":null,"Title":"replace isHfaRegArg with IsHfaRegArg()","State":"open","Body":"@am11 @janvorli @jkotas @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/26958","RelatedDescription":"Open PR \"replace isHfaRegArg with IsHfaRegArg()\" (#26958)"},{"Id":"500560924","IsPullRequest":true,"CreatedAt":"2019-09-30T22:33:37","Actor":"janvorli","Number":"26957","RawContent":null,"Title":"Fix the problem with the VS2019 fix on x86","State":"open","Body":"The x86 was missing the same treatment of the explicit frames chain as\r\nthe other architectures. The chain needs to be repaired when a GCFrame\r\nis destroyed and it was on a chain that is not current, but that is\r\nstill used by the exception handling stack walk.","Url":"https://github.com/dotnet/coreclr/pull/26957","RelatedDescription":"Open PR \"Fix the problem with the VS2019 fix on x86\" (#26957)"},{"Id":"500560823","IsPullRequest":true,"CreatedAt":"2019-09-30T22:33:21","Actor":"nattress","Number":"26956","RawContent":null,"Title":"Crossgen2 fixes for single-exe","State":"open","Body":"* Publish tibcmgr stand-alone in the build so it's usable in-situ\r\n* Swallow BadImageFormatExceptions in Crossgen2. This should stay in single-exe branch and works around a bug in Linker on aggressive mode which leaves a dangling AssemblyRef in the metadata\r\n* Add a missing IL marshaller stub generator","Url":"https://github.com/dotnet/coreclr/pull/26956","RelatedDescription":"Open PR \"Crossgen2 fixes for single-exe\" (#26956)"},{"Id":"500545740","IsPullRequest":false,"CreatedAt":"2019-09-30T21:51:33","Actor":"cshung","Number":"26955","RawContent":null,"Title":"Cleanup RegSet::verifyRegUsed","State":"open","Body":"`verifyRegUsed()` is supposed to be an assertion that the register is marked as used. However, its implementation is changing the register mask instead. This needs to be clean up.\r\n\r\n#18296 was an attempt to fix it, but it was wrong and incomplete. We need a better solution than that.","Url":"https://github.com/dotnet/coreclr/issues/26955","RelatedDescription":"Open issue \"Cleanup RegSet::verifyRegUsed\" (#26955)"},{"Id":"500537575","IsPullRequest":true,"CreatedAt":"2019-09-30T21:32:07","Actor":"VSadov","Number":"26954","RawContent":null,"Title":"Enable GC long running tests on ARM64","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26954","RelatedDescription":"Open PR \"Enable GC long running tests on ARM64\" (#26954)"},{"Id":"500408760","IsPullRequest":true,"CreatedAt":"2019-09-30T20:26:55","Actor":"Dotnet-GitSync-Bot","Number":"26948","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/coreclr/pull/26948","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#26948)"},{"Id":"500504107","IsPullRequest":true,"CreatedAt":"2019-09-30T20:23:47","Actor":"tannergooding","Number":"26953","RawContent":null,"Title":"Fixing AdvSimd.Arm64 to have an internal constructor in the \"supported\" file.","State":"open","Body":"This was out of sync with the PlatformNotSupported.cs file","Url":"https://github.com/dotnet/coreclr/pull/26953","RelatedDescription":"Open PR \"Fixing AdvSimd.Arm64 to have an internal constructor in the \"supported\" file.\" (#26953)"},{"Id":"500455741","IsPullRequest":true,"CreatedAt":"2019-09-30T18:51:25","Actor":"briansull","Number":"26952","RawContent":null,"Title":"New fix for #26417 - Don't allow the hoisting of GT_CLS_VARs that were assigned a constant value.","State":"open","Body":"Fixes #26417 - JIT compiler bug: Incorrect caching of loop variable\r\nContributes to issue  #7147 - JIT: Loop hoisting re-ordering exceptions\r\nAdded the Test case for Issue 26417\r\n","Url":"https://github.com/dotnet/coreclr/pull/26952","RelatedDescription":"Open PR \"New fix for #26417 - Don't allow the hoisting of GT_CLS_VARs that were assigned a constant value.\" (#26952)"},{"Id":"500411659","IsPullRequest":false,"CreatedAt":"2019-09-30T18:40:33","Actor":"shargon","Number":"26949","RawContent":null,"Title":"Compile without switch optimizations","State":"closed","Body":"# Issue Title\r\n\r\nIs possible to specify some flags in the compiler for disable some optimizations? \r\n\r\n# General\r\n\r\nAs i know, when a switch have a lot of entries, is added a method `ComputeStringHash` is possible to prevent this optimizations?","Url":"https://github.com/dotnet/coreclr/issues/26949","RelatedDescription":"Closed issue \"Compile without switch optimizations\" (#26949)"},{"Id":"500422283","IsPullRequest":false,"CreatedAt":"2019-09-30T17:44:26","Actor":"ericstj","Number":"26951","RawContent":null,"Title":"System.Private.CoreLib assembly missing `NeutralResourcesLanguage(\"en-US\")`","State":"open","Body":"See https://github.com/dotnet/coreclr/issues/26472#issuecomment-536176848\r\n\r\nAppears to be a regression in 3.0.  Not sure if this is intentional or not, but it does seem to be observable.\r\n\r\n/cc @tarekgh","Url":"https://github.com/dotnet/coreclr/issues/26951","RelatedDescription":"Open issue \"System.Private.CoreLib assembly missing `NeutralResourcesLanguage(\"en-US\")`\" (#26951)"},{"Id":"499822985","IsPullRequest":false,"CreatedAt":"2019-09-30T17:36:37","Actor":"faruknane","Number":"26935","RawContent":null,"Title":"Is it possible to specify the code blocks that are most used to JIT in order to let it optimize those blocks?","State":"closed","Body":"I have been learning a lot these days and heard of JIT optimizes codes based on their statistical information like how frequently they are used by letting the code work without optimization by a few times and measuring it. Some codes are not optimized to keep the memory usage(edit: memory space on disk mostly) lower for example and some codes needs to be optimized at most to gain performance. Before JIT testing my code statistics, can I inform JIT that some methods need to be optimized the most? So it performs at best from the beginning. By this way, I don't need to wait it (compiler) to explore which codes need optimizing. \r\n\r\nExample I have a method A();\r\nRun A 20 times -> 450ms\r\nRun A 2000 times -> 36000ms\r\n\r\nSo can I somehow inform JIT that when I run A 20 times, it takes 360ms? \r\n\r\nNote: [MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)] these doesn't help to do so.","Url":"https://github.com/dotnet/coreclr/issues/26935","RelatedDescription":"Closed issue \"Is it possible to specify the code blocks that are most used to JIT in order to let it optimize those blocks?\" (#26935)"},{"Id":"500411811","IsPullRequest":true,"CreatedAt":"2019-09-30T17:22:55","Actor":"jkotas","Number":"26950","RawContent":null,"Title":"Partial Revert \"Remove global locks from Exception stack trace handling  (#26823)","State":"open","Body":"The scalability improvement claimed by the change is not there after closer examination.\r\nReverting to avoid visible non pay-for-play overhead added by the change.","Url":"https://github.com/dotnet/coreclr/pull/26950","RelatedDescription":"Open PR \"Partial Revert \"Remove global locks from Exception stack trace handling  (#26823)\" (#26950)"},{"Id":"500327678","IsPullRequest":false,"CreatedAt":"2019-09-30T14:48:55","Actor":"bwateratmsft","Number":"26947","RawContent":null,"Title":"System.PlatformNotSupportedException thrown running VB console app in .NET Core 3.0 Windows container","State":"open","Body":"This issue was found recently by our CTI team.\r\n\r\nIt seems to only affect:\r\n- VB app (we tried with Console apps)\r\n- .NET Core 3.0 (did not repro with 2.2)\r\n- Running in Windows container (we tried with -nanoserver-1903)\r\n\r\nVB in Windows containers is a pretty corner scenario for us, but I'm not sure if this is indicative of another bigger problem.\r\n\r\nRunning the app--through VS, or directly on command line--results in this error:\r\n`Unhandled exception. System.PlatformNotSupportedException: The system does not support the STA thread apartment.`\r\n\r\nI ran with `COREHOST_TRACE=1`, there wasn't anything too interesting until the end:\r\n```\r\nlaunch host: C:\\Program Files\\dotnet\\dotnet.exe, app: C:\\app\\ConsoleApp5.dll, argc: 0, args:\r\n\r\n--- Begin breadcrumb write\r\nBreadcrumb thread write callback...\r\nBreadcrumbs will be written using a background thread.\r\nFailed to leave breadcrumb, HRESULT: 0x80070003.\r\nFailed to leave breadcrumb, HRESULT: 0x80070003.\r\nFailed to leave breadcrumb, HRESULT: 0x80070003.\r\nFailed to leave breadcrumb, HRESULT: 0x80070003.\r\n--- End breadcrumb write\r\n\r\nUnhandled exception. System.PlatformNotSupportedException: The system does not support the STA thread apartment.\r\n```\r\n\r\nI can certainly provide the full log if needed. I've not been able to get a call stack for that exception; doing a regular F5 debug detaches before anything happens (even with throw on exception), and the process exits with 0xe0434352.\r\n\r\nThe easiest repro is to create a VB .NET Core 3.0 console app in Visual Studio, and right-click project, Add > Docker Support, Windows containers.","Url":"https://github.com/dotnet/coreclr/issues/26947","RelatedDescription":"Open issue \"System.PlatformNotSupportedException thrown running VB console app in .NET Core 3.0 Windows container\" (#26947)"},{"Id":"500315435","IsPullRequest":false,"CreatedAt":"2019-09-30T14:29:27","Actor":"dagood","Number":"26946","RawContent":null,"Title":"3.0 is fine, but 3.0 preview9 libcoreclr.so symbols weren't stripped (Ubuntu 16.04)","State":"open","Body":"Bringing this up to make sure it's known, in case it's some flakiness that might show up in a future 3.0 servicing release.\r\n\r\nIn https://github.com/dotnet/core/issues/3494, @sdmaclea noted that `libcoreclr.so` for 3.0 p9 on Ubuntu 16.04 had symbols inside, rather than them being stripped like would be expected for an official build:\r\n\r\n> Symbols were in `3.0.0-preview9-19423-09/libcoreclr.so`\r\n\r\nThere was a symbol stripping issue fixed with https://github.com/dotnet/coreclr/pull/22083, but that seems much earlier than p9.\r\n\r\n@sbomer @jashook @RussKeldorph, do you know why this could have happened for p9 but not GA?\r\n\r\n(If this isn't concerning or interesting, feel free to close. I'm not very in touch with which releases had which infra changes in CoreCLR--perhaps there was a big enough refactor somewhere that it doesn't matter why this happened in P9.)","Url":"https://github.com/dotnet/coreclr/issues/26946","RelatedDescription":"Open issue \"3.0 is fine, but 3.0 preview9 libcoreclr.so symbols weren't stripped (Ubuntu 16.04)\" (#26946)"},{"Id":"500133859","IsPullRequest":true,"CreatedAt":"2019-09-30T14:04:35","Actor":"mdonatas","Number":"26944","RawContent":null,"Title":"Fix URL to a sample perfcollect setup Dockerfile","State":"closed","Body":"As per [https://github.com/dotnet/corefx-tools/tree/master/src/performance/perfcollect](https://github.com/dotnet/corefx-tools/tree/master/src/performance/perfcollect) the `perfcollect` sample `Dockerfile` has moved to a different repository.\r\n\r\nChanging sample `Dockerfile` URL to a new location.","Url":"https://github.com/dotnet/coreclr/pull/26944","RelatedDescription":"Closed or merged PR \"Fix URL to a sample perfcollect setup Dockerfile\" (#26944)"},{"Id":"500106376","IsPullRequest":true,"CreatedAt":"2019-09-30T14:03:36","Actor":"mdonatas","Number":"26943","RawContent":null,"Title":"fix grammar mistake","State":"closed","Body":"A simple grammar fix","Url":"https://github.com/dotnet/coreclr/pull/26943","RelatedDescription":"Closed or merged PR \"fix grammar mistake\" (#26943)"},{"Id":"500244240","IsPullRequest":false,"CreatedAt":"2019-09-30T12:28:27","Actor":"EynsherKiel","Number":"26945","RawContent":null,"Title":"TaskFactory.CommonCWAnyLogic","State":"open","Body":"Hello!\r\n\r\nI want to use CommonCWAnyLogic, what do you think about it? That method can removed or changed, but Task.WhenAny always copy array.","Url":"https://github.com/dotnet/coreclr/issues/26945","RelatedDescription":"Open issue \"TaskFactory.CommonCWAnyLogic\" (#26945)"},{"Id":"500021645","IsPullRequest":false,"CreatedAt":"2019-09-30T02:49:24","Actor":"AriNuer","Number":"26942","RawContent":null,"Title":"Test failure: System.Tests.GCTests.GetAllocatedBytesForCurrentThread(size: 1000)","State":"open","Body":"**Job:**\r\ncoreclr-corefx-jitstress:[20190928.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=369999)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/a654ba18-0756-46fc-ba38-95d7942d8dae/workitems/System.Runtime.Tests/console\r\n\r\n**OS & Arch:**\r\nLinux x64\r\n\r\n**Mode:**\r\nexport COMPlus_TieredCompilation=0\r\nexport COMPlus_DbgEnableMiniDump=1\r\nexport COMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nexport COMPlus_ReadyToRun=0\r\nexport COMPlus_ZapDisable=1\r\n\r\n**Note:**\r\nThis failure **not repro** on our Linux x64 machine.\r\n\r\n**Log:**\r\n```\r\n~/work/a654ba18-0756-46fc-ba38-95d7942d8dae/Work/3acc4c7c-94e3-454c-9a79-3951789a7c94/Exec ~/work/a654ba18-0756-46fc-ba38-95d7942d8dae/Work/3acc4c7c-94e3-454c-9a79-3951789a7c94/Exec\r\n  Discovering: System.Runtime.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Tests (found 5369 of 5417 test cases)\r\n  Starting:    System.Runtime.Tests (parallel test collections = on, max threads = 2)\r\n    System.Tests.GCTests.GetAllocatedBytesForCurrentThread(size: 1000) [FAIL]\r\n      Allocated too much: start: 962032 end: 968264 size: 1000\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime/tests/System/GCTests.netcoreapp.cs(27,0): at System.Tests.GCTests.GetAllocatedBytesForCurrentThread(Int32 size)\r\n    System.Tests.DateTimeOffsetTests.ToLocalTime_MaxValue [SKIP]\r\n      Condition(s) not met: \"IsMaxValuePositiveLocalOffset\"\r\n    System.Tests.DateTimeOffsetTests.ToLocalTime_MinValue [SKIP]\r\n      Condition(s) not met: \"IsMinValueNegativeLocalOffset\"\r\n    System.Tests.DateTimeOffsetTests.ToLocalTime_Ambiguous [SKIP]\r\n      Condition(s) not met: \"IsPacificTime\"\r\n    System.Tests.ArgIteratorTests.ArgIterator_GetNextArgType [SKIP]\r\n      Condition(s) not met: \"IsArgIteratorSupported\"\r\n    System.Tests.ArgIteratorTests.ArgIterator_GetRemainingCount_GetNextArg [SKIP]\r\n      Condition(s) not met: \"IsArgIteratorSupported\"\r\n  Finished:    System.Runtime.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Runtime.Tests  Total: 34396, Errors: 0, Failed: 1, Skipped: 5, Time: 352.362s\r\n~/work/a654ba18-0756-46fc-ba38-95d7942d8dae/Work/3acc4c7c-94e3-454c-9a79-3951789a7c94/Exec\r\n----- end Sun Sep 29 07:14:11 UTC 2019 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26942","RelatedDescription":"Open issue \"Test failure: System.Tests.GCTests.GetAllocatedBytesForCurrentThread(size: 1000)\" (#26942)"},{"Id":"499972951","IsPullRequest":false,"CreatedAt":"2019-09-29T21:17:49","Actor":"McNeight","Number":"26941","RawContent":null,"Title":"tests/src/JIT/Intrinsics/MathCeiling*.cs copypasta","State":"open","Body":"Both the MathCeilingDouble.cs and MathCeilingSingle.cs files use the [Math,MathF].Round() function instead of the Ceiling() function. The MathFloor*.cs and MathRound*.cs files use the correct function for their filenames.\r\n","Url":"https://github.com/dotnet/coreclr/issues/26941","RelatedDescription":"Open issue \"tests/src/JIT/Intrinsics/MathCeiling*.cs copypasta\" (#26941)"},{"Id":"499962308","IsPullRequest":true,"CreatedAt":"2019-09-29T19:53:44","Actor":"trylek","Number":"26940","RawContent":null,"Title":"WIP: initial implementation of the Crossgen2 pipeline","State":"open","Body":"Currently this change includes my prerequisite change pending PR. I assume that I'll first merge in the preparatory PR and I'll rebase this change against it.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/26940","RelatedDescription":"Open PR \"WIP: initial implementation of the Crossgen2 pipeline\" (#26940)"},{"Id":"499923357","IsPullRequest":false,"CreatedAt":"2019-09-29T14:12:48","Actor":"SeeminglyScience","Number":"26939","RawContent":null,"Title":"ICorDebugProcess5::GetTypeFields with null layout returns E_POINTER","State":"open","Body":"`DacDbiInterfaceImpl::GetObjectFields` starts off checking if args are `null`\r\n\r\nhttps://github.com/dotnet/coreclr/blob/bef420a74e1a7ff81883b8bb3a36a9a452e0af61/src/debug/daccess/dacdbiimpl.cpp#L7098-L7101\r\n\r\nAnd then later in the method it checks `layout` a second time, but the method would have already returned.\r\n\r\nhttps://github.com/dotnet/coreclr/blob/bef420a74e1a7ff81883b8bb3a36a9a452e0af61/src/debug/daccess/dacdbiimpl.cpp#L7119-L7124","Url":"https://github.com/dotnet/coreclr/issues/26939","RelatedDescription":"Open issue \"ICorDebugProcess5::GetTypeFields with null layout returns E_POINTER\" (#26939)"},{"Id":"499911561","IsPullRequest":true,"CreatedAt":"2019-09-29T12:37:34","Actor":"agoretsky","Number":"26938","RawContent":null,"Title":"Port to Release/3.1 - Fix available memory extraction on Linux","State":"open","Body":"Port #26764 to 3.1 Release\r\n\r\nClose #26924","Url":"https://github.com/dotnet/coreclr/pull/26938","RelatedDescription":"Open PR \"Port to Release/3.1 - Fix available memory extraction on Linux\" (#26938)"},{"Id":"499893404","IsPullRequest":true,"CreatedAt":"2019-09-29T09:58:11","Actor":"chipitsine","Number":"26937","RawContent":null,"Title":"cleanup: remove several redundant conditions found by cppcheck","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26937","RelatedDescription":"Open PR \"cleanup: remove several redundant conditions found by cppcheck\" (#26937)"},{"Id":"499884955","IsPullRequest":true,"CreatedAt":"2019-09-29T09:30:37","Actor":"agoretsky","Number":"26936","RawContent":null,"Title":"-","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26936","RelatedDescription":"Closed or merged PR \"-\" (#26936)"},{"Id":"499799747","IsPullRequest":true,"CreatedAt":"2019-09-28T17:40:33","Actor":"benaadams","Number":"26934","RawContent":null,"Title":"Use ValueStringBuilder in preference to StringBuilderCache","State":"open","Body":"Saves 44MB of allocations for the 20k Exceptions thrown async, caught, captured, `.Throw()`, caught and then `throw` https://gist.github.com/benaadams/49633777609ed91e8b41624b72026bf9\r\n\r\nBefore\r\n![image](https://user-images.githubusercontent.com/1142958/65823949-a6347a80-e257-11e9-9b43-edcf30abb283.png)\r\n\r\n\r\nAfter\r\n![image](https://user-images.githubusercontent.com/1142958/65823953-b3ea0000-e257-11e9-8998-54c8b43a567e.png)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26934","RelatedDescription":"Open PR \"Use ValueStringBuilder in preference to StringBuilderCache\" (#26934)"},{"Id":"499793866","IsPullRequest":true,"CreatedAt":"2019-09-28T16:45:45","Actor":"benaadams","Number":"26933","RawContent":null,"Title":"Use runtime cache for GetDefaultConstructor","State":"open","Body":"The QCall GetDefaultConstructor would always allocate; however we can use the RuntimeType Constructor cache that already exists for this purpose which skips the allocation.\r\n\r\nThrowing, catching and `.ToString`ing 80k+ Exceptions (effects GetAttributes and CustomAttributes.IsDefined)\r\n\r\nBefore\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/65819681-63eb4900-e217-11e9-9467-da15628a8bfe.png)\r\n\r\nAfter\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/65819688-6e0d4780-e217-11e9-84ae-d36826a9bdc9.png)\r\n","Url":"https://github.com/dotnet/coreclr/pull/26933","RelatedDescription":"Open PR \"Use runtime cache for GetDefaultConstructor\" (#26933)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"500524478","IsPullRequest":true,"CreatedAt":"2019-10-01T04:38:35","Actor":"nguerrera","Number":"12752","RawContent":null,"Title":"Fix merge error and update dependencies","State":"closed","Body":"Fix merge error that lead to an extra `\"` in Version.Details.xml\r\n\r\nRun darc update-dependencies --channel \".NET Core 3.1 Dev\" to pick up dependency updates we missed from that.","Url":"https://github.com/dotnet/cli/pull/12752","RelatedDescription":"Closed or merged PR \"Fix merge error and update dependencies\" (#12752)"},{"Id":"500649177","IsPullRequest":true,"CreatedAt":"2019-10-01T04:15:13","Actor":"dotnet-maestro[bot]","Number":"12755","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.23\r\n- **Date Produced**: 10/1/2019 3:00 AM\r\n- **Commit**: 28821c59adb1afff8f9d5740d84e5a966501afa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.23\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.23\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12755","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#12755)"},{"Id":"500609287","IsPullRequest":true,"CreatedAt":"2019-10-01T02:10:29","Actor":"dotnet-maestro[bot]","Number":"12754","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.14\r\n- **Date Produced**: 10/1/2019 12:23 AM\r\n- **Commit**: 6e19ccf91950bd458e8909b362dd8ca1bbf6c34b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.14\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12754","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12754)"},{"Id":"499869512","IsPullRequest":true,"CreatedAt":"2019-10-01T01:55:05","Actor":"johnbeisner","Number":"12750","RawContent":null,"Title":"Enable SDK version harvesting from a global.json file","State":"closed","Body":"Enable SDK version harvesting from a global.json file\r\n\r\nAddresses: https://github.com/dotnet/cli/issues/12175\r\nRelated: https://github.com/actions/setup-dotnet/issues/14\r\n\r\n**Adding a \"jsonfile\" parameter:**\r\nscripts/obtain/dotnet-install.ps1\r\nscripts/obtain/dotnet-install.sh\r\n\r\n**Adding a install script 'dryrun' test:**\r\nTestAssets/InstallationScriptTests/InstallationScriptTests.json\r\ntest/InstallationScript.Tests/GivenThatIWantToInstallTheSdkFromAScript.cs \r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12750","RelatedDescription":"Closed or merged PR \"Enable SDK version harvesting from a global.json file\" (#12750)"},{"Id":"500551193","IsPullRequest":true,"CreatedAt":"2019-09-30T22:40:30","Actor":"dotnet-maestro[bot]","Number":"12753","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.9\r\n- **Date Produced**: 9/30/2019 8:45 PM\r\n- **Commit**: ed7faad78973e21d58839ac0d74a4f325d0e803f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.9\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12753","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12753)"},{"Id":"499816555","IsPullRequest":true,"CreatedAt":"2019-09-30T20:14:32","Actor":"dotnet-maestro[bot]","Number":"12748","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.4\r\n- **Date Produced**: 9/30/2019 6:18 PM\r\n- **Commit**: e5f208fcc7acfb33647c52b01dfe6dae0b3f8928\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19480.4\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19480.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19480.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19480.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19480.4\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12748","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12748)"},{"Id":"499824171","IsPullRequest":false,"CreatedAt":"2019-09-30T18:07:39","Actor":"felizk","Number":"12749","RawContent":null,"Title":"Settings for a self-contained WinForms goes into new folders for every publish","State":"closed","Body":"## Steps to reproduce\r\n * Publish a self contained WinForms app. \r\n * Run it.\r\n * Change and save some Settings (using the WinForms style .settings)\r\n * Notice settings are saved in LocalAppData ultimately in a folder with this kind of postfix: \"_Url_2z3wslwxp2unr2f2llkyxtrbrq3rb5cd\"\r\n * Repeat, notice the postfix has changed and settings are not reused\r\n\r\n## Expected  behavior\r\nTo be able to persist settings between versions of the application.\r\n\r\n## Actual behavior\r\nEvery time you publish, settings are effectively wiped.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12749","RelatedDescription":"Closed issue \"Settings for a self-contained WinForms goes into new folders for every publish\" (#12749)"},{"Id":"500217341","IsPullRequest":false,"CreatedAt":"2019-09-30T11:32:08","Actor":"kvpt","Number":"12751","RawContent":null,"Title":"Publish produce empty runtimeconfig","State":"open","Body":"Since DotNetCore 3.0 release, my CI/CD pipeline is broken because runtimeconfig.json file is now empty. My pipeline worked fine with 2.x release.\r\n\r\nIs it intended ? \r\nI doesn't found any breaking changes documentation for the 3.0 cli.\r\n\r\n## Steps to reproduce\r\n> dotnet new console -n MyApp\r\n\r\n> Replace the PropertyGroup of the csproj with the one below\r\n\r\n> dotnet restore MyApp.csproj\r\n\r\n> dotnet build MyApp.csproj --configuration Release --no-restore\r\n\r\n> dotnet publish MyApp.csproj --configuration Release --output d:\\output --self-contained False --no-restore --no-build\r\n\r\n## Expected  behavior\r\nruntimeconfig.json not empty\r\n\r\n## Actual behavior\r\nruntimeconfig.json empty\r\n\r\nUsing the all in one command produce the right output.\r\n> dotnet publish MyApp.csproj --configuration Release --output d:\\output --self-contained False\r\n\r\n## Environment data\r\nThe problem occur in AzureDevOps build container and also on my machine which use the latest VisualStudio version (16.3.1 at the moment).\r\n\r\n`dotnet --info` output:\r\n\r\n>  SDK .NET Core :\r\n>  Version:   3.0.100\r\n>  Commit:    04339c3a26\r\n\r\nMy csproj :\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <OutputType>Exe</OutputType>\r\n    <RuntimeIdentifier>win7-x64</RuntimeIdentifier>\r\n    <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>\r\n</PropertyGroup>\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/12751","RelatedDescription":"Open issue \"Publish produce empty runtimeconfig\" (#12751)"},{"Id":"499122123","IsPullRequest":true,"CreatedAt":"2019-09-30T03:06:46","Actor":"dotnet-maestro[bot]","Number":"12727","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190926.7\r\n- **Date Produced**: 9/26/2019 9:06 PM\r\n- **Commit**: fa98e14b1b8d84a1a711ef909384f16ada8bbe7c\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.0-preview1.19476.7\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12727","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#12727)"},{"Id":"499574792","IsPullRequest":true,"CreatedAt":"2019-09-30T02:57:00","Actor":"dotnet-maestro[bot]","Number":"12734","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190927.1\r\n- **Date Produced**: 9/27/2019 5:24 PM\r\n- **Commit**: 2dca73e46cfbb24b3fc429ae4e2095fc6ba8ef5b\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19477.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12734","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12734)"},{"Id":"499544702","IsPullRequest":true,"CreatedAt":"2019-09-30T01:26:39","Actor":"wli3","Number":"12733","RawContent":null,"Title":"Update 3.1.1xx stage0","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/12733","RelatedDescription":"Closed or merged PR \"Update 3.1.1xx stage0\" (#12733)"},{"Id":"499802257","IsPullRequest":true,"CreatedAt":"2019-09-28T18:40:43","Actor":"dotnet-maestro[bot]","Number":"12747","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190928.3\r\n- **Date Produced**: 9/28/2019 4:17 PM\r\n- **Commit**: 31d255861fefd39312dc636850528dd94765ebc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19478.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19478.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19478.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19478.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19478.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12747)"},{"Id":"499798690","IsPullRequest":true,"CreatedAt":"2019-09-28T18:05:16","Actor":"dotnet-maestro[bot]","Number":"12746","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190928.2\r\n- **Date Produced**: 9/28/2019 4:06 PM\r\n- **Commit**: 31d255861fefd39312dc636850528dd94765ebc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19478.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19478.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19478.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19478.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19478.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12746)"},{"Id":"499783572","IsPullRequest":true,"CreatedAt":"2019-09-28T15:45:28","Actor":"dotnet-maestro[bot]","Number":"12745","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190928.1\r\n- **Date Produced**: 9/28/2019 1:54 PM\r\n- **Commit**: 25051cf8364907bb226e5b3b164f99e7f1c8bd8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19478.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19478.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19478.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19478.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19478.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12745)"},{"Id":"499763021","IsPullRequest":true,"CreatedAt":"2019-09-28T12:03:56","Actor":"dotnet-bot","Number":"12744","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12744","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#12744)"},{"Id":"499762932","IsPullRequest":true,"CreatedAt":"2019-09-28T12:02:50","Actor":"dotnet-maestro[bot]","Number":"12743","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190928.1\r\n- **Date Produced**: 9/28/2019 2:44 PM\r\n- **Commit**: 49d44f3c511b86e2e60a9e7e40d55206c9a9143c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 5.0.100-alpha1.19478.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12743","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/sdk\" (#12743)"},{"Id":"499736376","IsPullRequest":true,"CreatedAt":"2019-09-28T07:40:28","Actor":"dotnet-maestro[bot]","Number":"12742","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.25\r\n- **Date Produced**: 9/28/2019 5:48 AM\r\n- **Commit**: a323ccda8bb6792254b4e447772c48ae03281a30\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.25\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.25\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.25\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.25\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.25\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12742)"},{"Id":"499729500","IsPullRequest":true,"CreatedAt":"2019-09-28T06:10:28","Actor":"dotnet-maestro[bot]","Number":"12741","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.24\r\n- **Date Produced**: 9/28/2019 4:14 AM\r\n- **Commit**: 01d74def06147f8855d65f0891a1cdba8f1794e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.24\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.24\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.24\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.24\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.24\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12741","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12741)"},{"Id":"499725082","IsPullRequest":true,"CreatedAt":"2019-09-28T05:10:28","Actor":"dotnet-maestro[bot]","Number":"12740","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.23\r\n- **Date Produced**: 9/28/2019 3:25 AM\r\n- **Commit**: 01d74def06147f8855d65f0891a1cdba8f1794e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.23\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.23\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.23\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.23\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.23\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12740)"},{"Id":"499702917","IsPullRequest":true,"CreatedAt":"2019-09-28T03:26:25","Actor":"dotnet-maestro[bot]","Number":"12738","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190927.3\r\n- **Date Produced**: 9/27/2019 11:43 PM\r\n- **Commit**: 3819a21a612cd8bc15b6f6c4e361d18490469577\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19477.3\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12738","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12738)"},{"Id":"499715655","IsPullRequest":true,"CreatedAt":"2019-09-28T03:05:30","Actor":"dotnet-maestro[bot]","Number":"12739","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.21\r\n- **Date Produced**: 9/28/2019 1:09 AM\r\n- **Commit**: 81720d9339549e5b706c9a4c4cef0a95f2789231\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.21\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.21\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.21\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.21\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.21\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12739","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12739)"},{"Id":"499690052","IsPullRequest":true,"CreatedAt":"2019-09-28T00:00:28","Actor":"dotnet-maestro[bot]","Number":"12737","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.19\r\n- **Date Produced**: 9/27/2019 10:11 PM\r\n- **Commit**: a1633a2804d8ffa7b8f5bc299433996c19395890\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.19\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.19\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.19\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.19\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.19\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12737","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12737)"},{"Id":"499650912","IsPullRequest":false,"CreatedAt":"2019-09-27T23:39:48","Actor":"TingluoHuang","Number":"12736","RawContent":null,"Title":"`Dotnet.exe --version` shows different version","State":"closed","Body":"## Steps to reproduce\r\n- Download: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.300/dotnet-sdk-2.2.300-win-x64.zip\r\n- unzip.\r\n- `./dotnet.exe --version`\r\n\r\n## Expected  behavior\r\n`./dotnet.exe --version` => 2.2.300\r\n\r\n## Actual behavior\r\n`./dotnet.exe --version` => 2.2.401\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\ntihuang@TingDev MINGW64 ~/Downloads/dotnet-sdk-2.2.300-win-x64\r\n$ ./dotnet.exe --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.401\r\n Commit:    729b316c13\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003133 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-1-003177 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview3-003786 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-rc4-004771 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Users\\tihuang\\Downloads\\dotnet-sdk-2.2.300-win-x64\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 etCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Users\\tihuang\\Downloads\\dotnet-sdk-2.2.300-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 win-x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 tCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 etCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Users\\tihuang\\Downloads\\dotnet-sdk-2.2.300-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 win-x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 tCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 .App]\r\n  Microsoft.NETCore.App 1.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 .App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 .App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Users\\tihuang\\Downloads\\dotnet-sdk-2.2.300-win                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 -x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12736","RelatedDescription":"Closed issue \"`Dotnet.exe --version` shows different version\" (#12736)"},{"Id":"499543504","IsPullRequest":true,"CreatedAt":"2019-09-27T23:38:46","Actor":"wli3","Number":"12732","RawContent":null,"Title":"Auto update dotnet version in first run message","State":"closed","Body":"Fix https://github.com/dotnet/cli/issues/12713\r\n\r\nThere is no dotnet version embedded in CLI. So derive it from full SDK version. {major}.{minor}","Url":"https://github.com/dotnet/cli/pull/12732","RelatedDescription":"Closed or merged PR \"Auto update dotnet version in first run message\" (#12732)"},{"Id":"499576778","IsPullRequest":true,"CreatedAt":"2019-09-27T21:46:50","Actor":"dotnet-maestro[bot]","Number":"12735","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.18\r\n- **Date Produced**: 9/27/2019 7:55 PM\r\n- **Commit**: dbb2e2a160e0e6bdd5b58339d4b0ccac34c1c49f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.18\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.18\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.18\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.18\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.18\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12735","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12735)"},{"Id":"499506293","IsPullRequest":true,"CreatedAt":"2019-09-27T15:55:33","Actor":"dotnet-maestro[bot]","Number":"12731","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.3\r\n- **Date Produced**: 9/27/2019 2:13 PM\r\n- **Commit**: 46241981138f20292a6df007d6aeaf60a3663352\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12731","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12731)"},{"Id":"499308313","IsPullRequest":true,"CreatedAt":"2019-09-27T11:51:45","Actor":"dotnet-maestro[bot]","Number":"12730","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190927.1\r\n- **Date Produced**: 9/27/2019 10:07 AM\r\n- **Commit**: 7e3c99a9229d29443b94770de5628f066bfa17fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19477.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19477.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19477.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19477.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19477.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12730","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12730)"},{"Id":"499189628","IsPullRequest":true,"CreatedAt":"2019-09-27T06:32:10","Actor":"dotnet-maestro[bot]","Number":"12729","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190926.30\r\n- **Date Produced**: 9/27/2019 4:41 AM\r\n- **Commit**: 0ccb1a18ad9d021f0145904d2f49f51eb22f1db2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19476.30\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19476.30\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19476.30\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19476.30\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19476.30\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12729","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12729)"},{"Id":"499168085","IsPullRequest":true,"CreatedAt":"2019-09-27T00:35:40","Actor":"dotnet-maestro[bot]","Number":"12728","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190926.2\r\n- **Date Produced**: 9/26/2019 11:26 PM\r\n- **Commit**: 9cd501f50f426f24d98065d1617ee67cd4ce0d2d\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19476.2\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12728","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12728)"},{"Id":"499119672","IsPullRequest":true,"CreatedAt":"2019-09-26T21:51:44","Actor":"mmitche","Number":"12726","RawContent":null,"Title":"3.0.101 branding","State":"closed","Body":"- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/12726","RelatedDescription":"Closed or merged PR \"3.0.101 branding\" (#12726)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"499857194","IsPullRequest":false,"CreatedAt":"2019-09-29T04:57:44","Actor":"B16180339","Number":"1581","RawContent":null,"Title":"Dotnet","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1581","RelatedDescription":"Closed issue \"Dotnet\" (#1581)"},{"Id":"499764886","IsPullRequest":true,"CreatedAt":"2019-09-28T12:28:37","Actor":"dotnet-maestro[bot]","Number":"1580","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190927.7\r\n- **Date Produced**: 9/28/2019 1:48 AM\r\n- **Commit**: 7e9a177824cbefaee8985a9b517ebb0ea2e17a81\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19477.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19477.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1580","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1580)"},{"Id":"499762811","IsPullRequest":true,"CreatedAt":"2019-09-28T12:11:24","Actor":"dotnet-maestro[bot]","Number":"1579","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190927.2\r\n- **Date Produced**: 9/27/2019 6:33 PM\r\n- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19477.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1579","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1579)"},{"Id":"499412533","IsPullRequest":true,"CreatedAt":"2019-09-27T12:28:38","Actor":"dotnet-maestro[bot]","Number":"1578","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190926.10\r\n- **Date Produced**: 9/27/2019 5:59 AM\r\n- **Commit**: 296c0e71ddcc4885d30af18dea829c1923cfdc5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19476.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19476.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1578","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1578)"},{"Id":"499405308","IsPullRequest":true,"CreatedAt":"2019-09-27T12:11:32","Actor":"dotnet-maestro[bot]","Number":"1577","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190926.6\r\n- **Date Produced**: 9/27/2019 1:21 AM\r\n- **Commit**: b449f372df1a3374ebdc85f42ff137dcda08776b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19476.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19476.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1577","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1577)"},{"Id":"498397654","IsPullRequest":true,"CreatedAt":"2019-09-26T15:09:19","Actor":"dotnet-maestro[bot]","Number":"1574","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1574","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1574)"},{"Id":"498433598","IsPullRequest":true,"CreatedAt":"2019-09-26T15:08:53","Actor":"mmitche","Number":"1575","RawContent":null,"Title":"Update to non prerelease","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1575","RelatedDescription":"Closed or merged PR \"Update to non prerelease\" (#1575)"},{"Id":"498844948","IsPullRequest":true,"CreatedAt":"2019-09-26T12:22:45","Actor":"dotnet-maestro[bot]","Number":"1576","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190926.1\r\n- **Date Produced**: 9/26/2019 9:11 AM\r\n- **Commit**: 0a1850cc370986c7348e09bcd1c1adcf522d6db3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19476.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19476.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19476.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1576","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1576)"},{"Id":"498249739","IsPullRequest":true,"CreatedAt":"2019-09-25T12:30:34","Actor":"dotnet-maestro[bot]","Number":"1573","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 7:06 PM\r\n- **Commit**: da147ece700c2502b91e57d99213feadcfb9c1f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19474.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1573","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1573)"},{"Id":"498239365","IsPullRequest":true,"CreatedAt":"2019-09-25T12:10:59","Actor":"dotnet-maestro[bot]","Number":"1572","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:15 AM\r\n- **Commit**: ef4b288de587f0b86e65b3950e9095f714808ade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19473.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1572","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1572)"},{"Id":"498151562","IsPullRequest":false,"CreatedAt":"2019-09-25T09:07:45","Actor":"NicolasDorier","Number":"1571","RawContent":null,"Title":"Github does not render the diff files of netstandard2.1 correctly","State":"open","Body":"In the [diff for netstandard2.1](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.1_diff.md), Github is showing `(Sorry about that, but we can’t show files that are this big right now.)` instead of a nicely formatted diff.\r\n\r\nProposed workaround:\r\n\r\n* Ping the github team to increase the limit\r\n* Send the dotnet team in holiday during the development of netstandard2.2 so the diff file get smaller.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1571","RelatedDescription":"Open issue \"Github does not render the diff files of netstandard2.1 correctly\" (#1571)"},{"Id":"497649559","IsPullRequest":true,"CreatedAt":"2019-09-24T12:24:38","Actor":"dotnet-maestro[bot]","Number":"1570","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/23/2019 10:04 PM\r\n- **Commit**: 485441f79ead7878af206a6af61a300e1458616a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1570","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1570)"},{"Id":"497622081","IsPullRequest":false,"CreatedAt":"2019-09-24T11:15:45","Actor":"GammaFour","Number":"1569","RawContent":null,"Title":"Massive problems with no support of UWP in .NET Standard 2.1","State":"open","Body":"How can you release .NET Standard 2.1 and not support UWP? I made the mistake of upgrading my NuGet packages yesterday to the recommended versions and I've been untangling this mess ever since. My server code wants to be .NET Standard 2.1. So I go through and retarget all my common libraries only to find that I've screwed the pooch on my UWP client. This is seriously a big miss.","Url":"https://github.com/dotnet/standard/issues/1569","RelatedDescription":"Open issue \"Massive problems with no support of UWP in .NET Standard 2.1\" (#1569)"},{"Id":"497566465","IsPullRequest":false,"CreatedAt":"2019-09-24T09:24:09","Actor":"nikolay-dimitrov","Number":"1568","RawContent":null,"Title":"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found","State":"open","Body":"I have custom method over DbContext(EF 6.3) with class library targeting .NET Framework 4.7.1\r\nIm trying to migrate to .NET Standart 2.1 but into the both cases i got this error when im calling the method above from any places(the example is calling from .NET Standart 2.1 library with installed EF 6.3)\r\n\r\n    public static async Task<IList<T>> SqlQueryAsync<T>(this DbContext db, CommandType type, string sql, List<SqlParameter> parameters) where T : new()\r\n        {\r\n            var conn = db.Database.Connection.State;\r\n\r\n            if (conn == ConnectionState.Closed)\r\n                await db.Database.Connection.OpenAsync();\r\n            using (var command =  db.Database.Connection.CreateCommand())\r\n            {\r\n                command.CommandText = sql;\r\n                command.CommandType = type;\r\n                if (parameters != null && parameters.Count() > 0)\r\n                {\r\n                    foreach (var item in parameters)\r\n                    {\r\n                        DbParameter p = command.CreateParameter();\r\n                        p.DbType = item.DbType;\r\n                        p.ParameterName = item.ParameterName;\r\n                        p.Value = item.Value;\r\n                        command.Parameters.Add(p);\r\n                    }\r\n                }\r\n                var propts = typeof(T).GetProperties();\r\n                var rtnList = new List<T>();\r\n                T model;\r\n                object val;\r\n                using (var reader = await command.ExecuteReaderAsync())\r\n                {\r\n                    while (await reader.ReadAsync())\r\n                    {\r\n                        model = new T();\r\n                        foreach (var l in propts)\r\n                        {\r\n\r\n                            if (Enumerable.Range(0, reader.FieldCount).Any(i => string.Equals(reader.GetName(i), l.Name, StringComparison.OrdinalIgnoreCase)))\r\n                            {\r\n                                val = reader[l.Name];\r\n                                if (val == DBNull.Value)\r\n                                    l.SetValue(model, null);\r\n                                else\r\n                                    l.SetValue(model, val);\r\n                            }\r\n                            \r\n                        }\r\n                        rtnList.Add(model);\r\n                    }\r\n                }\r\n                return rtnList;\r\n            }\r\n        }\r\n\r\nI found simular issue https://github.com/dotnet/corefx/issues/27247# but the proposals there do not resolve the error","Url":"https://github.com/dotnet/standard/issues/1568","RelatedDescription":"Open issue \"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found\" (#1568)"},{"Id":"497516549","IsPullRequest":false,"CreatedAt":"2019-09-24T07:46:11","Actor":"YZahringer","Number":"1567","RawContent":null,"Title":".NET Standard 2.1 support on Universal Windows Platform","State":"open","Body":"Regarding the support of `.NET Standard 2.1` in UWP projects, it is written that it will be supported in the upcoming version.\r\n\r\nThis means that there will be the same problem as with the `.NET Standard 2.0` version and that we will not be able to target older versions of Windows 10? `.NET Standard 2.0` requires as min target version Windows 10 Fall Creators Update `16299`.\r\n\r\nThis is a big problem for my projects and backward compatibility. I can't remove support for older versions of Windows 10, especially `LTSC` editions. This means that my projects are blocked in `.NET Standard 1.4` and it also blocks any dependency updates:\r\n- `Xamarin.Forms 2.5` because version `>=3.0` requires `.NET Standard 2.0`\r\n- `Microsoft.EntityFrameworkCore 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n- `.NET Core 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n\r\nI can't ask my users to have the latest version installed, especially in business applications and Windows `LTSC` editions. I have to wait several years before removing the support of an old version.\r\n\r\nIs it planned to continue support the min target version `16299` of UWP projects with `.NET Standard 2.1`? I understand the constraints, but with Xcode I can still min target `iOS 7` and with Android I can still min target `4.4 KitKat`, still with the latest version of frameworks. And with Windows I can only support the latest version? That doesn't make much sense.","Url":"https://github.com/dotnet/standard/issues/1567","RelatedDescription":"Open issue \".NET Standard 2.1 support on Universal Windows Platform\" (#1567)"},{"Id":"497453537","IsPullRequest":false,"CreatedAt":"2019-09-24T04:51:49","Actor":"shyamutty","Number":"1566","RawContent":null,"Title":"Grpc .net client issue with .NET Core and .NET standard (2.0)","State":"closed","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Closed issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566)"},{"Id":"497424795","IsPullRequest":false,"CreatedAt":"2019-09-24T02:51:23","Actor":"goldmannyc","Number":"1565","RawContent":null,"Title":"Where to download the netstandard.dll 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1565","RelatedDescription":"Open issue \"Where to download the netstandard.dll 2.1?\" (#1565)"},{"Id":"497309683","IsPullRequest":true,"CreatedAt":"2019-09-23T20:25:00","Actor":"terrajobst","Number":"1564","RawContent":null,"Title":"Ns21 summary","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Closed or merged PR \"Ns21 summary\" (#1564)"},{"Id":"497303937","IsPullRequest":true,"CreatedAt":"2019-09-23T20:15:45","Actor":"terrajobst","Number":"1563","RawContent":null,"Title":"Update diffs to final product","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1563","RelatedDescription":"Closed or merged PR \"Update diffs to final product\" (#1563)"},{"Id":"497024033","IsPullRequest":false,"CreatedAt":"2019-09-23T10:49:00","Actor":"yb199478","Number":"1562","RawContent":null,"Title":"Is it possible to add a method that kills the process tree?","State":"open","Body":".Net standard does not provide any method to kill a process tree.","Url":"https://github.com/dotnet/standard/issues/1562","RelatedDescription":"Open issue \"Is it possible to add a method that kills the process tree?\" (#1562)"},{"Id":"496771346","IsPullRequest":true,"CreatedAt":"2019-09-22T12:23:49","Actor":"dotnet-maestro[bot]","Number":"1561","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190921.2\r\n- **Date Produced**: 9/21/2019 6:26 PM\r\n- **Commit**: 4c074ae47660448eae66a362076124177709640a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19471.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1561","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1561)"},{"Id":"496650404","IsPullRequest":true,"CreatedAt":"2019-09-21T12:33:22","Actor":"dotnet-maestro[bot]","Number":"1560","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 4:58 PM\r\n- **Commit**: 0286bce5fd360207ca707fe7024248be428cf0e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1560","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1560)"},{"Id":"496648540","IsPullRequest":true,"CreatedAt":"2019-09-21T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1559","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1559","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1559)"},{"Id":"496322557","IsPullRequest":true,"CreatedAt":"2019-09-20T12:34:19","Actor":"dotnet-maestro[bot]","Number":"1558","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1558","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1558)"},{"Id":"496312709","IsPullRequest":true,"CreatedAt":"2019-09-20T12:11:37","Actor":"dotnet-maestro[bot]","Number":"1557","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1557","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1557)"},{"Id":"496006418","IsPullRequest":true,"CreatedAt":"2019-09-19T20:28:51","Actor":"dotnet-maestro[bot]","Number":"1556","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1556","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1556)"},{"Id":"495468017","IsPullRequest":false,"CreatedAt":"2019-09-19T14:08:45","Actor":"mstoffel-infraserv","Number":"1553","RawContent":null,"Title":"Regex Match Hangs forever","State":"closed","Body":"During processing with one of our applications we ran into an issue with Regex Match method hanging forever with a specific regular expression and specific text. See attached code for details.\r\n[BadRegex.zip](https://github.com/dotnet/standard/files/3628478/BadRegex.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1553","RelatedDescription":"Closed issue \"Regex Match Hangs forever\" (#1553)"},{"Id":"495764912","IsPullRequest":true,"CreatedAt":"2019-09-19T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1555","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1555","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1555)"},{"Id":"495754976","IsPullRequest":true,"CreatedAt":"2019-09-19T12:21:51","Actor":"dotnet-maestro[bot]","Number":"1554","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 8:56 PM\r\n- **Commit**: a28ee518026d2c5d477472f44d391cf9379fc7cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19468.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1554","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1554)"},{"Id":"495184946","IsPullRequest":true,"CreatedAt":"2019-09-18T12:19:39","Actor":"dotnet-maestro[bot]","Number":"1552","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190917.6\r\n- **Date Produced**: 9/18/2019 3:17 AM\r\n- **Commit**: 4ca1feeeb484e8a7089ce8a9d377703ad5b8a53e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19467.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1552","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1552)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"500653467","IsPullRequest":true,"CreatedAt":"2019-10-01T04:30:13","Actor":"joshudson","Number":"41457","RawContent":null,"Title":"Emergency fix for #41432 so we can decide on the right course in master w/o time pressure","State":"open","Body":"Emergency fix for #41432 so we can decide on the right course in master w/o time pressure\r\n\r\nThe single commit 0b62ae25d858f6c1dd08663b75f87e4ef9f98f03 should be rebased for 3.0 maintenance release. I'll probably end up using this branch again for the master fix.","Url":"https://github.com/dotnet/corefx/pull/41457","RelatedDescription":"Open PR \"Emergency fix for #41432 so we can decide on the right course in master w/o time pressure\" (#41457)"},{"Id":"500621370","IsPullRequest":false,"CreatedAt":"2019-10-01T02:22:19","Actor":"btecu","Number":"41456","RawContent":null,"Title":"System.Text.Json default date handling","State":"open","Body":"In JSON.NET you can:\r\n```\r\nJsonConvert.DefaultSettings = () => new JsonSerializerSettings {\r\n    DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n};\r\n```\r\n\r\nIs there anything similar in `System.Text.Json`?\r\nIf there is not an option to set the default, can it be passed in manually?\r\n\r\nAlso, what is the default (`Local`, `Utc`, `Unspecified`)?","Url":"https://github.com/dotnet/corefx/issues/41456","RelatedDescription":"Open issue \"System.Text.Json default date handling\" (#41456)"},{"Id":"500347588","IsPullRequest":false,"CreatedAt":"2019-10-01T01:54:11","Actor":"vslee","Number":"41443","RawContent":null,"Title":"ClientWebSocket.ReceiveAsync() throws IOException when cancelled","State":"closed","Body":"If a `ClientWebSocket.ReceiveAsync()` is cancelled with a `CancellationToken`, it throws an `IOException`. I was expecting an `OperationCanceledException`? Please see the repro below:\r\n\r\n``` C#\r\nstatic async Task Main(string[] args)\r\n{\r\n\tSystem.Net.WebSockets.ClientWebSocket clientWebSocket = new System.Net.WebSockets.ClientWebSocket();\r\n\tvar rcvBytes = new byte[128];\r\n\tvar rcvBuffer = new ArraySegment<byte>(rcvBytes);\r\n\tvar cancellationTokenSource = new System.Threading.CancellationTokenSource();\r\n\tvar cancellationToken = cancellationTokenSource.Token;\r\n\tawait clientWebSocket.ConnectAsync(new Uri(\r\n\t\t\"wss://echo.websocket.org\"), cancellationToken);\r\n\tvar t = Task.Run(async () => {\r\n\t\twhile (true)\r\n\t\t{\r\n\t\t\tSystem.Net.WebSockets.WebSocketReceiveResult rcvResult = await \r\n\t\t\t\tclientWebSocket.ReceiveAsync(\r\n\t\t\t\t\t\trcvBuffer,\r\n\t\t\t\t\t\tcancellationToken);\r\n\t\t\tbyte[] msgBytes = rcvBuffer.Skip(rcvBuffer.Offset).Take(rcvResult.Count).ToArray();\r\n\t\t\t\t\tstring rcvMsg = Encoding.UTF8.GetString(msgBytes);\r\n\t\t\t\t\tConsole.WriteLine(\"Received: {0}\", rcvMsg);\r\n\t\t} });\r\n\tawait Task.Delay(500);\r\n\tcancellationTokenSource.Cancel();\r\n\tConsole.WriteLine(\"cts cancelled\");\r\n}\r\n```\r\n\r\nThrows:\r\n```\r\nSystem.IO.IOException\r\n  HResult=0x80131620\r\n  Message=Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..\r\n  Source=System.Net.Sockets\r\n  StackTrace:\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\r\n\r\nInner Exception 1:\r\nSocketException: The I/O operation has been aborted because of either a thread exit or an application request.\r\n```\r\n\r\nIn .net core 3.0 and 2.2 on VSE 2019 16.3.1 on Windows 10 x64\r\n\r\nMay be related to #5200?","Url":"https://github.com/dotnet/corefx/issues/41443","RelatedDescription":"Closed issue \"ClientWebSocket.ReceiveAsync() throws IOException when cancelled\" (#41443)"},{"Id":"500594456","IsPullRequest":true,"CreatedAt":"2019-10-01T01:50:54","Actor":"dotnet-maestro[bot]","Number":"41453","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190930.2\r\n- **Date Produced**: 9/30/2019 7:06 PM\r\n- **Commit**: 0303386d3bdc4dc9b9ea59fbaadfe0d896f960ee\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview1.19480.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview1.19480.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview1.19480.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41453","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41453)"},{"Id":"500609713","IsPullRequest":true,"CreatedAt":"2019-10-01T01:37:00","Actor":"Dotnet-GitSync-Bot","Number":"41455","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik","Url":"https://github.com/dotnet/corefx/pull/41455","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#41455)"},{"Id":"500594875","IsPullRequest":true,"CreatedAt":"2019-10-01T00:36:55","Actor":"JeremyKuhne","Number":"41454","RawContent":null,"Title":"Break the ACL classes into files","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/41454","RelatedDescription":"Open PR \"Break the ACL classes into files\" (#41454)"},{"Id":"500575530","IsPullRequest":true,"CreatedAt":"2019-09-30T23:24:14","Actor":"carlossanlop","Number":"41452","RawContent":null,"Title":"Unit tests to verify DirectoryInfo.Parent.ToString (CoreFX/Framework)","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/38215\r\nThe `DirectoryInfo.Parent.ToString()` method returns a different value in Core and in Framework. I already documented it in Docs, now we need to make sure it has unit tests.","Url":"https://github.com/dotnet/corefx/pull/41452","RelatedDescription":"Open PR \"Unit tests to verify DirectoryInfo.Parent.ToString (CoreFX/Framework)\" (#41452)"},{"Id":"500411369","IsPullRequest":true,"CreatedAt":"2019-09-30T20:30:19","Actor":"dotnet-maestro-bot","Number":"41447","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/41447","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#41447)"},{"Id":"500503091","IsPullRequest":true,"CreatedAt":"2019-09-30T20:21:39","Actor":"carlossanlop","Number":"41451","RawContent":null,"Title":"Find zip file end of central directory backwards up to max possible size (resubmit due to build break)","State":"open","Body":"Original PR https://github.com/dotnet/corefx/pull/41007\r\nThere was a conflict with a recent Compression change that added nullable checks. The CI passed in my PR, but it ran before the nullable fix was merged.\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41451","RelatedDescription":"Open PR \"Find zip file end of central directory backwards up to max possible size (resubmit due to build break)\" (#41451)"},{"Id":"500496878","IsPullRequest":true,"CreatedAt":"2019-09-30T20:08:48","Actor":"baulig","Number":"41450","RawContent":null,"Title":"Add SystemNative_ThreadInterruptionRequested() to all `EINTR` loops.","State":"open","Body":"In Mono, we need a way of interrupting `errno == EINTR` loops on thread abort and runtime shutdown.  We could either break all those loops and always return to managed on `EINTR` - or call a special function that will check whether it is safe to loop.\r\n\r\nThis should fix the problem outlined in https://github.com/mono/mono/issues/14737.","Url":"https://github.com/dotnet/corefx/pull/41450","RelatedDescription":"Open PR \"Add SystemNative_ThreadInterruptionRequested() to all `EINTR` loops.\" (#41450)"},{"Id":"500494686","IsPullRequest":true,"CreatedAt":"2019-09-30T20:04:18","Actor":"ericstj","Number":"41449","RawContent":null,"Title":"Revert \"Find zip file end of central directory backwards up to max possible size\"","State":"closed","Body":"Reverts dotnet/corefx#41007\r\n\r\nThis change broke the build due to conflicts with https://github.com/dotnet/corefx/pull/41322\r\n","Url":"https://github.com/dotnet/corefx/pull/41449","RelatedDescription":"Closed or merged PR \"Revert \"Find zip file end of central directory backwards up to max possible size\"\" (#41449)"},{"Id":"500482248","IsPullRequest":true,"CreatedAt":"2019-09-30T19:41:07","Actor":"Anipik","Number":"41448","RawContent":null,"Title":"Enable Building of packages in 3.1 branch","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/41448","RelatedDescription":"Open PR \"Enable Building of packages in 3.1 branch\" (#41448)"},{"Id":"500408840","IsPullRequest":true,"CreatedAt":"2019-09-30T18:56:38","Actor":"Dotnet-GitSync-Bot","Number":"41446","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @Youssef1313","Url":"https://github.com/dotnet/corefx/pull/41446","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#41446)"},{"Id":"499976145","IsPullRequest":false,"CreatedAt":"2019-09-30T17:54:37","Actor":"Roman-Blinkov","Number":"41437","RawContent":null,"Title":"Console.Beep() does not works under RDP","State":"closed","Body":"# Console.Beep() does not works under RDP\r\nExample:\r\n`Console.Beep();`\r\n\r\n\r\nBut it **works if called with arguments.**\r\nExample:\r\n`Console.Beep(500, 300);`\r\n\r\n# How to reproduce\r\nBoth client and server: Windows 10 x64 1903 Build 18990\r\nMicrosoft Remote Desktop from Store: https://www.microsoft.com/store/productId/9WZDNCRFJ3PS","Url":"https://github.com/dotnet/corefx/issues/41437","RelatedDescription":"Closed issue \"Console.Beep() does not works under RDP\" (#41437)"},{"Id":"499884410","IsPullRequest":false,"CreatedAt":"2019-09-30T17:34:54","Actor":"chenyj796","Number":"41433","RawContent":null,"Title":"System.Text.Json.JsonSerializer can't deserialize readonly collection property","State":"closed","Body":"I have a Config class which contains a readonly property named Items.\r\nI serialize it to json string, and then deserialize the json string back as below.\r\nAfter run the Run() method, cfg2.Items is empty when cfg3.Items contains one item.\r\n\r\n``` csharp\r\npublic class Config\r\n{\r\n    public HashSet<string> Items { get; } = new HashSet<string>();\r\n}\r\n\r\npublic class ConfigTest\r\n{\r\n    public void Run()\r\n    {\r\n        var cfg = new Config();\r\n        cfg.Items.Add(\"item1\");\r\n        var json = System.Text.Json.JsonSerializer.Serialize(cfg);\r\n        var cfg2 = System.Text.Json.JsonSerializer.Deserialize<Config>(json);\r\n        var cfg3 = Newtonsoft.Json.JsonConvert.DeserializeObject<Config>(json);\r\n    }\r\n}\r\n\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/41433","RelatedDescription":"Closed issue \"System.Text.Json.JsonSerializer can't deserialize readonly collection property\" (#41433)"},{"Id":"500131469","IsPullRequest":false,"CreatedAt":"2019-09-30T17:32:04","Actor":"Simon-IT","Number":"41441","RawContent":null,"Title":"Build corefx from build.cmd fails","State":"closed","Body":"Visual Studio Community 2019  16.4.0 Preview 1.0\r\nWindows 10 1903 build SO 18362.387\r\nNET Core 3.0.100\r\nCMake 3.14.5\r\n\r\nAfter has been pulling the latest comimts the build procedure fails with these two errors:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Microsoft\\VC\\v160\\Microsoft.CppCommon.targets(230,5): error MSB8065: Custom build for item \"D:\\Sources\\NetFoundation\\dotnet\\corefx\\artifacts\\obj\\native\\netcoreapp-Windows_NT-Debug-x64\\CMakeFiles\\af7b5fb01ed3438277a908fb1341432f\\INSTALL_force.rule\" succeeded, but specified output \"d:\\sources\\netfoundation\\dotnet\\corefx\\artifacts\\obj\\native\\netcoreapp-windows_nt-debug-x64\\cmakefiles\\install_force\" has not been created. This may cause incremental build to work incorrectly. [D:\\Sources\\NetFoundation\\dotnet\\corefx\\artifacts\\obj\\native\\netcoreapp-Windows_NT-Debug-x64\\install.vcxproj] [D:\\Sources\\NetFoundation\\dotnet\\corefx\\src\\Native\\build-native.proj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Microsoft\\VC\\v160\\Microsoft.CppCommon.targets(230,5): error MSB8065: Custom build for item \"D:\\Sources\\NetFoundation\\dotnet\\corefx\\artifacts\\obj\\native\\netcoreapp-Windows_NT-Debug-x64\\CMakeFiles\\af7b5fb01ed3438277a908fb1341432f\\INSTALL_force.rule\" succeeded, but specified output \"d:\\sources\\netfoundation\\dotnet\\corefx\\artifacts\\obj\\native\\netcoreapp-windows_nt-debug-x64\\cmakefiles\\install_force\" has not been created. This may cause incremental build to work incorrectly. [D:\\Sources\\NetFoundation\\dotnet\\corefx\\artifacts\\obj\\native\\netcoreapp-Windows_NT-Debug-x64\\install.vcxproj] [D:\\Sources\\NetFoundation\\dotnet\\corefx\\src\\Native\\build-native.proj]\r\n```\r\n`git clean -xdf` has no effects","Url":"https://github.com/dotnet/corefx/issues/41441","RelatedDescription":"Closed issue \"Build corefx from build.cmd fails\" (#41441)"},{"Id":"500386316","IsPullRequest":false,"CreatedAt":"2019-09-30T16:29:11","Actor":"mayur-ekbote","Number":"41445","RawContent":null,"Title":"'GroupCollection' does not contain a definition for 'Count'","State":"closed","Body":"I recently tried to move my web application from .net cor 2.2 to 3.0. While the following code used to compile and run just fine, it now gives the error at every occurrence where Count is invoked on a System.Text.RegularExpressions.Match object\r\n\r\ninternal virtual bool IsValidKeywordFormat(Match m, out string error)\r\n        {\r\n\r\n            int matches = m.Groups.Count(t => t.Success);\r\n            ......\r\n\r\n\r\nError: CS1061 : 'GroupCollection' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'GroupCollection' could be found (are you missing a using directive or an assembly reference?)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41445","RelatedDescription":"Closed issue \"'GroupCollection' does not contain a definition for 'Count'\" (#41445)"},{"Id":"500271377","IsPullRequest":false,"CreatedAt":"2019-09-30T13:17:40","Actor":"pranavkm","Number":"41442","RawContent":null,"Title":"What is the recomendation of using System.Text.Json and double NaN values ?","State":"open","Body":"_From @valeriob on Monday, September 30, 2019 12:49:01 PM_\r\n\r\nHi,\r\nwe are upgrading some applications to aspnetcore 3.0, we have been bitten by something unexpected : System.Text.Json refuse to serialize double.NaN values.\r\nThis cause really nasty bugs because something that works suddenly does not because some result of some calculation is different, or some data changes in some way.\r\nI see that the recommendation (https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-3.0&tabs=visual-studio#jsonnet-support) is to use Json.Net.\r\n\r\nBut how can ppl use this library if such a simple and common use case is not covered ?\r\nI do not know any application that can live without this feature, i understand the fact that there is a specification, but it may very well be unpractical.\r\nhttps://thefactotum.xyz/post/the-devil-is-in-the-json-details/\r\nPython, Go, Javascript,Rust, Ruby handle it without making much fuss 😄 \r\n\r\nThanks\r\nValerio\r\n\r\n_Copied from original issue: aspnet/AspNetCore#14571_","Url":"https://github.com/dotnet/corefx/issues/41442","RelatedDescription":"Open issue \"What is the recomendation of using System.Text.Json and double NaN values ?\" (#41442)"},{"Id":"500074416","IsPullRequest":false,"CreatedAt":"2019-09-30T06:21:11","Actor":"zhiweiv","Number":"41440","RawContent":null,"Title":"Code example in DiagnosticSourceUsersGuide.md is outdated","State":"open","Body":"In section **Discovery of DiagnosticListeners** of https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/DiagnosticSourceUsersGuide.md, the example is incorrect, it passes delegate directly to DiagnosticListener.AllListeners.Subscribe, the needed parameter is IObserver.\r\n\r\nSeems the correct code is in https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/tests/DiagnosticSourceTests.cs#L423.","Url":"https://github.com/dotnet/corefx/issues/41440","RelatedDescription":"Open issue \"Code example in DiagnosticSourceUsersGuide.md is outdated\" (#41440)"},{"Id":"500051733","IsPullRequest":false,"CreatedAt":"2019-09-30T05:01:59","Actor":"iSazonov","Number":"41439","RawContent":null,"Title":"Add API to validate file system paths","State":"open","Body":"## Rationale ##\r\n\r\nIn PowerShell Core repo we actively manipulate paths and do path validation by:\r\n```c#\r\n            try\r\n            {\r\n                FileInfo testFile = new FileInfo(path);\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                if ((e is ArgumentNullException) ||\r\n                    (e is ArgumentException) ||\r\n                    (e is System.Security.SecurityException) ||\r\n                    (e is UnauthorizedAccessException) ||\r\n                    (e is PathTooLongException) ||\r\n                    (e is NotSupportedException))\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n```\r\nThe code allocates many unneeded FileInfo objects and exceptions.\r\n\r\n## Proposed API ##\r\n\r\n```c#\r\nnamespace System.IO\r\n{\r\n    // Fast, no allocations, no exceptions\r\n    public static class Path\r\n    {\r\n        public static bool IsValid(string path);\r\n    }\r\n}\r\n```\r\n\r\nRelated #27049","Url":"https://github.com/dotnet/corefx/issues/41439","RelatedDescription":"Open issue \"Add API to validate file system paths\" (#41439)"},{"Id":"500381420","IsPullRequest":false,"CreatedAt":"2019-09-30T01:55:29","Actor":"KrisJohnstone","Number":"41444","RawContent":null,"Title":"HttpRequest Method Changes during Execution","State":"open","Body":"** Overview **\r\nTrying to send a post message to Azure DevOps and while executing the httpRequest method changes from being Post to Get. The response I get back from Azure DevOps is Http Method not allowed.\r\n\r\n** System Details **\r\nMac OSX 10.4.15\r\n.Net Framework Versions:\r\nIce@Ices-MacBook-Pro-2  /  dotnet --list-sdks\r\n2.1.700 [/usr/local/share/dotnet/sdk]\r\n3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n** Code **   \r\n```\r\npublic WorkItemQueryResult GetListOfStories(string queryString, string tfsInstance, string PAT)\r\n        {\r\n            var client = new HttpClient();\r\n            client.DefaultRequestHeaders.Accept.Clear();\r\n            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));\r\n            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", $\"{GetPatAsEncodedString(PAT)}\");\r\n\r\n            var request = new HttpRequestMessage()\r\n            {\r\n                Content = new StringContent(queryString, Encoding.UTF8, \"application/json\" ),\r\n                Method = HttpMethod.Post,\r\n                RequestUri = new Uri($\"{tfsInstance}_apis/wit/wiql?api-version=5.1\")\r\n            };\r\n            \r\n            request.Headers.Authorization = new AuthenticationHeaderValue(\"Basic\", $\"{GetPatAsEncodedString(PAT)}\");\r\n            request.Headers.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));\r\n\r\n            var task = Task.Run(() => client.SendAsync(request)); \r\n            task.Wait();\r\n\r\n            if (!task.Result.IsSuccessStatusCode) return new WorkItemQueryResult();\r\n            \r\n            var response = task.Result.Content.ReadAsAsync<WorkItemQueryResult>();\r\n            return response.Result;\r\n        }\r\n```\r\n\r\nWith a break point on Task.Run, the request method looks like the following: \r\n<img width=\"1945\" alt=\"Screen Shot 2019-09-30 at 11 47 52 am\" src=\"https://user-images.githubusercontent.com/18162364/65844242-babc6400-e378-11e9-8d55-eba93a61cac6.png\">\r\n\r\nAfter waiting for the task the request looks like the following:\r\n<img width=\"1602\" alt=\"Screen Shot 2019-09-30 at 11 51 08 am\" src=\"https://user-images.githubusercontent.com/18162364/65844260-d162bb00-e378-11e9-8950-501853ffc79b.png\">\r\n\r\nThe response code that I'm receiving is 405 - Method Not Allowed.\r\n\r\n** Items Tried **\r\n- I've tried using both versions of .Net Core in case there was a bug that somehow hadn't been found.\r\n- Tried using .PostAsync instead. \r\n\r\nIt's most likely something silly, but I've not been able to ascertain what the issue is, my google foo is letting me down.","Url":"https://github.com/dotnet/corefx/issues/41444","RelatedDescription":"Open issue \"HttpRequest Method Changes during Execution\" (#41444)"},{"Id":"499902842","IsPullRequest":false,"CreatedAt":"2019-09-30T01:18:49","Actor":"hanxinimm","Number":"41434","RawContent":null,"Title":"private set PropertyInfo GetSetMethod Is null","State":"closed","Body":"my class has two property\r\n\r\npublic long Id => 2;\r\npublic long OrganizationId { get; private set; }\r\n\r\nOrganizationId  PropertyInfo GetSetMethod Is null,\r\nbut IL Code has method\r\n\r\n![image](https://user-images.githubusercontent.com/13499426/65831588-0970ec00-e2ee-11e9-8202-39840f3c4f16.png)\r\n\r\n![image](https://user-images.githubusercontent.com/13499426/65831645-8ac87e80-e2ee-11e9-8d84-780729d28e91.png)\r\n\r\nwhat's  happen?\r\n","Url":"https://github.com/dotnet/corefx/issues/41434","RelatedDescription":"Closed issue \"private set PropertyInfo GetSetMethod Is null\" (#41434)"},{"Id":"499983978","IsPullRequest":false,"CreatedAt":"2019-09-29T22:53:48","Actor":"daeken","Number":"41438","RawContent":null,"Title":"CertificateRequest Crashing (SIGILL) on MacOS","State":"open","Body":"I've run into an odd issue where I'm hitting a SIGILL on MacOS 10.14.6 during the CertificateRequest constructor on Mac. I've tried every combination of hash methods, key sizes and types (RSA and ECDSA), padding methods, etc and they all appear to fail.  The test case below shows the behavior: \r\n\r\n\tusing System;\r\n\tusing System.Security.Cryptography;\r\n\tusing System.Security.Cryptography.X509Certificates;\r\n\r\n\tnamespace MacCertCrash {\r\n\t\tclass Program {\r\n\t\t\tstatic void Main(string[] args) {\r\n\t\t\t\tConsole.WriteLine(\"Step 1\");\r\n\t\t\t\tvar rsa = RSA.Create(2048);\r\n\t\t\t\tConsole.WriteLine(\"Step 2\");\r\n\t\t\t\tvar name = new X500DistinguishedName(\"C=US/ST=Foo/L=Bar/O=Baz/OU=Hax/CN=tempest\");\r\n\t\t\t\tConsole.WriteLine(\"Step 3\");\r\n\t\t\t\tvar req = new CertificateRequest(name, rsa, HashAlgorithmName.SHA512,\r\n\t\t\t\t\tRSASignaturePadding.Pss); // CRASH HERE\r\n\t\t\t\tConsole.WriteLine(\"Step 4\");\r\n\t\t\t\tvar cert = req.CreateSelfSigned(DateTimeOffset.UtcNow, DateTimeOffset.UtcNow.AddYears(10));\r\n\t\t\t\tConsole.WriteLine(\"Done?\");\r\n\t\t\t\tConsole.WriteLine(cert);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\nThe crash occurs in standard debug or release builds.","Url":"https://github.com/dotnet/corefx/issues/41438","RelatedDescription":"Open issue \"CertificateRequest Crashing (SIGILL) on MacOS\" (#41438)"},{"Id":"499911516","IsPullRequest":false,"CreatedAt":"2019-09-29T21:51:53","Actor":"newpost","Number":"41435","RawContent":null,"Title":"Console.OutputEncoding = Encoding.BigEndianUnicode; throw Exception.","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/issues/41435","RelatedDescription":"Closed issue \"Console.OutputEncoding = Encoding.BigEndianUnicode; throw Exception.\" (#41435)"},{"Id":"499933966","IsPullRequest":false,"CreatedAt":"2019-09-29T16:26:11","Actor":"q7164518","Number":"41436","RawContent":null,"Title":"How do I set the JSON DateTime format?","State":"closed","Body":"var json = JsonSerializer.Serialize(new { D = DateTime.Now });\r\nI want to format it as \"yyyy-mm-dd HH: MM :ss\"\r\nHow can I solve it?","Url":"https://github.com/dotnet/corefx/issues/41436","RelatedDescription":"Closed issue \"How do I set the JSON DateTime format?\" (#41436)"},{"Id":"499878688","IsPullRequest":false,"CreatedAt":"2019-09-29T08:23:46","Actor":"hjc4869","Number":"41432","RawContent":null,"Title":"Process.Start() stuck forever on Alpine Linux when UserName is set in StartInfo","State":"open","Body":"Code example:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Diagnostics;\r\n\r\nnamespace test\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var p = new Process\r\n            {\r\n                StartInfo = new ProcessStartInfo\r\n                {\r\n                    FileName = \"/bin/sh\",\r\n                    UserName = \"root\",\r\n                    RedirectStandardInput = true,\r\n                    RedirectStandardOutput = true,\r\n                    RedirectStandardError = true,\r\n                    UseShellExecute = false\r\n                },\r\n                EnableRaisingEvents = true\r\n            };\r\n\r\n            Console.WriteLine(\"Trying to start /bin/sh\");\r\n            p.Start();\r\n            Console.WriteLine(\"/bin/sh started successfully\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nPublish the project with `dotnet publish -c Release -r linux-musl-x64 --self-contained` and copy the output to a fresh-installed Alpine Linux VM.\r\n\r\n```\r\nlocalhost:~/test# ./test\r\nTrying to start /bin/sh\r\n```\r\n(output stuck here)\r\n\r\nThe process tree looks like this\r\n![image](https://user-images.githubusercontent.com/1969802/65828964-3cf24d00-e2d3-11e9-8a85-4e9bf2f7a7a2.png)\r\n\r\n```\r\nlocalhost:~# cat /proc/2421/stack\r\n[<0>] _do_fork+0x21c/0x2fe\r\n[<0>] do_syscall_64+0x50/0xeb\r\n[<0>] entry_SYSCALL_64_after_hwframe+0x44/0xa9\r\n[<0>] 0xffffffffffffffff\r\nlocalhost:~# cat /proc/2429/stack\r\n[<0>] futex_wait_queue_me+0xbc/0x101\r\n[<0>] futex_wait+0xd7/0x1f1\r\n[<0>] do_futex+0x131/0x9a5\r\n[<0>] __se_sys_futex+0x139/0x15e\r\n[<0>] do_syscall_64+0x50/0xeb\r\n[<0>] entry_SYSCALL_64_after_hwframe+0x44/0xa9\r\n[<0>] 0xffffffffffffffff\r\n```\r\n\r\nIt seems that the parent process already called vfork() but child has not yet exec or exit, leaving the parent in the uninterruptible sleep state. Related framework code could possibly be [here](https://github.com/dotnet/corefx/blob/5c83394112febe1b481ab1c0b61a45c850677165/src/Native/Unix/System.Native/pal_process.c#L342)\r\n\r\nEnvironment info\r\n.NET Core SDK version: 3.0.100\r\nOS: Alpine Linux 3.10 latest","Url":"https://github.com/dotnet/corefx/issues/41432","RelatedDescription":"Open issue \"Process.Start() stuck forever on Alpine Linux when UserName is set in StartInfo\" (#41432)"},{"Id":"499843132","IsPullRequest":false,"CreatedAt":"2019-09-29T07:22:18","Actor":"chenyj796","Number":"41430","RawContent":null,"Title":"How do I host a WebApi in WPF application directly since they have different project SDK?","State":"closed","Body":"Currently, I add a project reference to a webapi project.\r\nHow do I host a webapi in WPF application directly since they have different project SDK?","Url":"https://github.com/dotnet/corefx/issues/41430","RelatedDescription":"Closed issue \"How do I host a WebApi in WPF application directly since they have different project SDK?\" (#41430)"},{"Id":"499864925","IsPullRequest":false,"CreatedAt":"2019-09-29T06:14:11","Actor":"huoyaoyuan","Number":"41431","RawContent":null,"Title":"Enumerable.OfType should use where TResult:notnull","State":"open","Body":"Null will never get into result because of it's semantics. So it should be disallowed on the type parameter.\r\n\r\nSince nullable annotation of `System.Linq` hasn't been shipped now, the change isn't breaking.","Url":"https://github.com/dotnet/corefx/issues/41431","RelatedDescription":"Open issue \"Enumerable.OfType should use where TResult:notnull\" (#41431)"},{"Id":"499840788","IsPullRequest":false,"CreatedAt":"2019-09-29T01:56:29","Actor":"sdwdjzhy","Number":"41429","RawContent":null,"Title":"how can I make a JsonConverter to Converter Enum","State":"closed","Body":"``` C#\r\npublic class User\r\n{\r\n   public UserSex Sex { get; set; }\r\n}\r\npublic enum UserSex\r\n{\r\n    unknown = 0,\r\n    male,\r\n    female,\r\n}\r\n\r\nvar user = new User\r\n{\r\n    Sex = UserSex.female,\r\n};\r\n\r\nvar jsetting = new JsonSerializerOptions();\r\n\r\nreturn JsonSerializer.Serialize(user, jsetting);\r\n// print\r\n// {\"Sex\":2}\r\n```\r\nbut I want it is `{ \"Sex\": \"female\" }`\r\nhow can I do?\r\nThanks!\r\n","Url":"https://github.com/dotnet/corefx/issues/41429","RelatedDescription":"Closed issue \"how can I make a JsonConverter to Converter Enum\" (#41429)"},{"Id":"499832330","IsPullRequest":false,"CreatedAt":"2019-09-28T23:33:53","Actor":"davidmilligan","Number":"41428","RawContent":null,"Title":"System.Composition: CompositionContext.TryGetExport throws CompositionFailedException","State":"open","Body":"The `CompositionContext.TryGetExport` method can throw a `CompositionFailedException`. This violates the common convention/expectation that `TryXXX` methods don't throw, instead they just return false. \r\n\r\nI would expect that calling `GetExport` would throw an exception in this situation but I would expect that `TryGetExport` would simply return `false`.\r\n\r\nStack Trace:\r\n```\r\nAn exception of type 'System.Composition.Hosting.CompositionFailedException' occurred in System.Composition.Hosting.dll but was not handled in user code: 'The component (unknown) cannot be created outside the Scoped sharing boundary.'\r\n   at System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(String sharingBoundary)\r\n   at System.Composition.TypedParts.ActivationFeatures.LifetimeFeature.<>c__DisplayClass1_0.<RewriteActivator>b__0(LifetimeContext c, CompositionOperation o)\r\n   at System.Composition.Hosting.Core.CompositionOperation.Run(LifetimeContext outermostLifetimeContext, CompositeActivator compositionRootActivator)\r\n   at System.Composition.Hosting.Core.LifetimeContext.TryGetExport(CompositionContract contract, Object& export)\r\n   at System.Composition.CompositionContext.TryGetExport(Type exportType, String contractName, Object& export)\r\n   at System.Composition.CompositionContext.TryGetExport(Type exportType, Object& export)\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/41428","RelatedDescription":"Open issue \"System.Composition: CompositionContext.TryGetExport throws CompositionFailedException\" (#41428)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"500585873","IsPullRequest":true,"CreatedAt":"2019-10-01T00:02:35","Actor":"chsienki","Number":"38972","RawContent":null,"Title":"Fix docker caching by resetting cache only when mono changes","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38972","RelatedDescription":"Open PR \"Fix docker caching by resetting cache only when mono changes\" (#38972)"},{"Id":"500583990","IsPullRequest":false,"CreatedAt":"2019-09-30T23:55:39","Actor":"KirillOsenkov","Number":"38971","RawContent":null,"Title":"MSBuildWorkspace shouldn't attempt to remove properties declared in an imported file","State":"open","Body":"**Version Used**: \r\n16.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Use MSBuildWorkspace to load a project that uses https://github.com/onovotny/MSBuildSdkExtras\r\n\r\n**Expected Behavior**:\r\nShould work\r\n\r\n**Actual Behavior**:\r\n```\r\nSystem.InvalidOperationException: Cannot modify an evaluated object originating in an imported file \"C:\\Users\\Administrator\\.nuget\\packages\\msbuild.sdk.extras\\1.6.68\\Build\\Inference.targets\".\r\n   at Microsoft.Build.Shared.ErrorUtilities.ThrowInvalidOperation(String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(Boolean condition, String resourceName, Object arg0)\r\n   at Microsoft.Build.Evaluation.Project.RemoveProperty(ProjectProperty property)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFile.<GetProjectFileInfosAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.Worker.<DoOperationAndReportProgressAsync>d__17`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.Worker.<LoadProjectFileInfosAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.Worker.<LoadProjectInfosFromPathAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n```\r\n\r\nI suspect that this line is causing the issue:\r\nhttps://github.com/dotnet/roslyn/blob/98ec28ef6f76a773a54a361ae939df51bcb9b92b/src/Workspaces/Core/MSBuild/MSBuild/ProjectFile/ProjectFile.cs#L78","Url":"https://github.com/dotnet/roslyn/issues/38971","RelatedDescription":"Open issue \"MSBuildWorkspace shouldn't attempt to remove properties declared in an imported file\" (#38971)"},{"Id":"500578855","IsPullRequest":false,"CreatedAt":"2019-09-30T23:36:15","Actor":"mavasani","Number":"38970","RawContent":null,"Title":"Unify AnalyzerDriver.IsDiagnosticAnalyzerSuppressed with compiler's diagnostic filtering logic","State":"open","Body":"See https://github.com/dotnet/roslyn/pull/38792#discussion_r329812476","Url":"https://github.com/dotnet/roslyn/issues/38970","RelatedDescription":"Open issue \"Unify AnalyzerDriver.IsDiagnosticAnalyzerSuppressed with compiler's diagnostic filtering logic\" (#38970)"},{"Id":"500566540","IsPullRequest":true,"CreatedAt":"2019-09-30T22:52:11","Actor":"333fred","Number":"38969","RawContent":null,"Title":"Add API Review notes","State":"open","Body":"Added the notes from today's compiler API review. Also addressed the CommandLineArguments part of the notes, restoring a previously removed API to prevent breaking changes. @agocke for review of this API, as you reviewed the SARIF change that removed it.\r\n\r\n@AlekseyTs @chsienki @jasonmalinowski @AlekseyTs @jaredpar for quick review.","Url":"https://github.com/dotnet/roslyn/pull/38969","RelatedDescription":"Open PR \"Add API Review notes\" (#38969)"},{"Id":"500562665","IsPullRequest":false,"CreatedAt":"2019-09-30T22:39:05","Actor":"CyrusNajmabadi","Number":"38968","RawContent":null,"Title":"can't f5 into latest master","State":"open","Body":"When i try, i get this error in the VS that has launched:\r\n\r\n```\r\n\r\nSetSite failed for package [CSharpPackage]Source: 'Microsoft.VisualStudio.LanguageServices' Description: Could not load file or assembly 'System.Collections.Immutable, Version=1.2.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040) System.IO.FileLoadException: Could not load file or assembly 'System.Collections.Immutable, Version=1.2.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040) File name: 'System.Collections.Immutable, Version=1.2.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'   at Microsoft.VisualStudio.LanguageServices.Implementation.LanguageService.AbstractPackage`2.<InitializeAsync>d__8.MoveNext()   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)   at Microsoft.VisualStudio.LanguageServices.Implementation.LanguageService.AbstractPackage`2.InitializeAsync(CancellationToken cancellationToken, IProgress`1 progress)   at Microsoft.VisualStudio.LanguageServices.CSharp.LanguageService.CSharpPackage.<>n__0(CancellationToken cancellationToken, IProgress`1 progress)   at Microsoft.VisualStudio.LanguageServices.CSharp.LanguageService.CSharpPackage.<InitializeAsync>d__2.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)   at Microsoft.VisualStudio.Shell.AsyncPackage.<>c__DisplayClass19_0.<<Microsoft-VisualStudio-Shell-Interop-IAsyncLoadablePackageInitialize-Initialize>b__1>d.MoveNext() --- End of stack trace from previous location where exception was thrown ---   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)   at Microsoft.VisualStudio.Threading.JoinableTask.<JoinAsync>d__68.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()   at Microsoft.VisualStudio.Services.VsTask.RethrowException(AggregateException e)   at Microsoft.VisualStudio.Services.VsTask.InternalGetResult(Boolean ignoreUIThreadCheck)   at Microsoft.VisualStudio.Services.VsTask.GetResult() WRN: Assembly binding logging is turned OFF. To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1. Note: There is some performance penalty associated with assembly bind failure logging. To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n--\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38968","RelatedDescription":"Open issue \"can't f5 into latest master\" (#38968)"},{"Id":"500559551","IsPullRequest":true,"CreatedAt":"2019-09-30T22:29:23","Actor":"agocke","Number":"38967","RawContent":null,"Title":"Fix language check for netcoreapp3.1","State":"open","Body":"Now checks if the version is < netcoreapp3.0 or netstandard2.1 instead of checking\r\nif they're not equal.","Url":"https://github.com/dotnet/roslyn/pull/38967","RelatedDescription":"Open PR \"Fix language check for netcoreapp3.1\" (#38967)"},{"Id":"500273681","IsPullRequest":true,"CreatedAt":"2019-09-30T22:01:27","Actor":"nnpcYvIVl","Number":"38951","RawContent":null,"Title":"Spelling fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38951","RelatedDescription":"Closed or merged PR \"Spelling fixes\" (#38951)"},{"Id":"500545744","IsPullRequest":false,"CreatedAt":"2019-09-30T21:51:34","Actor":"cartermp","Number":"38966","RawContent":null,"Title":"C# 8 by default for netcoreapp3.1","State":"open","Body":"It currently defaults to C# 7.3.","Url":"https://github.com/dotnet/roslyn/issues/38966","RelatedDescription":"Open issue \"C# 8 by default for netcoreapp3.1\" (#38966)"},{"Id":"500439392","IsPullRequest":true,"CreatedAt":"2019-09-30T21:35:19","Actor":"RikkiGibson","Number":"38955","RawContent":null,"Title":"Skip flaky tests","State":"closed","Body":"Skips all tests that have been mentioned as flaky in #29483 (some were already being skipped)\r\n\r\nThere is a PR out that is supposed to actually fix the tests, but it has been out for several months and still not merged, so I would like to just address this now as it is costing hours in code flow to have these tests fail intermittently.\r\n\r\n/cc @jaredpar","Url":"https://github.com/dotnet/roslyn/pull/38955","RelatedDescription":"Closed or merged PR \"Skip flaky tests\" (#38955)"},{"Id":"500529946","IsPullRequest":false,"CreatedAt":"2019-09-30T21:15:49","Actor":"jnm2","Number":"38965","RawContent":null,"Title":"CA2000 when references did not go out of scope (lambda closure)","State":"open","Body":"**Version Used**: 16.3.1\r\n\r\nSimplified version. I don't think all references are out of scope since the returned action has a reference to the object created by `new DisposableThing()`.\r\n\r\n```cs\r\nclass C\r\n{\r\n    Action Method()\r\n    {\r\n        // CA2000 Call System.IDisposable.Dispose on object created by 'new DisposableThing()'\r\n        // before all references to it are out of scope.\r\n        //                    ↓\r\n        var disposableThing = new DisposableThing();\r\n\r\n        return () =>\r\n        {\r\n            using (disposableThing)\r\n            {\r\n                disposableThing.Foo();\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nclass DisposableThing : IDisposable\r\n{\r\n    public void Foo() { }\r\n\r\n    public void Dispose() { }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38965","RelatedDescription":"Open issue \"CA2000 when references did not go out of scope (lambda closure)\" (#38965)"},{"Id":"500525502","IsPullRequest":true,"CreatedAt":"2019-09-30T21:06:43","Actor":"dotnet-bot","Number":"38964","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38964","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#38964)"},{"Id":"500525405","IsPullRequest":true,"CreatedAt":"2019-09-30T21:06:33","Actor":"dotnet-bot","Number":"38963","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38963","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#38963)"},{"Id":"500524976","IsPullRequest":true,"CreatedAt":"2019-09-30T21:05:41","Actor":"dotnet-bot","Number":"38962","RawContent":null,"Title":"Merge release/dev16.4-preview1-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.4-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38962","RelatedDescription":"Open PR \"Merge release/dev16.4-preview1-vs-deps to master-vs-deps\" (#38962)"},{"Id":"500450284","IsPullRequest":false,"CreatedAt":"2019-09-30T20:41:33","Actor":"shargon","Number":"38956","RawContent":null,"Title":"Compile without switch optimizations","State":"closed","Body":"# Issue Title\r\n\r\nIs possible to specify some flags in the compiler for disable some optimizations? \r\n\r\n# General\r\n\r\nAs i know, when a switch have a lot of entries, is added a method `ComputeStringHash` is possible to prevent this optimizations?","Url":"https://github.com/dotnet/roslyn/issues/38956","RelatedDescription":"Closed issue \"Compile without switch optimizations\" (#38956)"},{"Id":"500512696","IsPullRequest":false,"CreatedAt":"2019-09-30T20:40:58","Actor":"maloo","Number":"38961","RawContent":null,"Title":"IAsyncEnumerable iterator method generates InvalidProgramException at runtime","State":"open","Body":"**Version Used**: Core 3.0.100\r\n\r\n**Steps to Reproduce**:\r\n\r\n1) Call this function:\r\n\r\n\r\n        object _splitsLock = new object();\r\n        public async IAsyncEnumerable<SplitBatch> GetSplits(IEnumerable<string> ids,\r\n            DateTime from, DateTime to, [EnumeratorCancellation] CancellationToken ct)\r\n        {\r\n            if (to == from)\r\n                yield break;\r\n            try\r\n            {\r\n            }\r\n            finally\r\n            {\r\n                lock (_splitsLock)\r\n                    Console.WriteLine(\"\");\r\n            }\r\n        }\r\n\r\n\r\n**Expected Behavior**: No InvalidProgramException\r\n\r\n**Actual Behavior**: InvalidProgramException\r\n\r\nI stripped it of most code while still triggering the error. The lock in the finally block is needed to trigger the exception. Function is called from a grpc streaming server call in asp.net core.","Url":"https://github.com/dotnet/roslyn/issues/38961","RelatedDescription":"Open issue \"IAsyncEnumerable iterator method generates InvalidProgramException at runtime\" (#38961)"},{"Id":"500510087","IsPullRequest":true,"CreatedAt":"2019-09-30T20:35:55","Actor":"cston","Number":"38960","RawContent":null,"Title":"Allow conversion of GetAwaiter extension method this arg","State":"open","Body":"Fixes #30956","Url":"https://github.com/dotnet/roslyn/pull/38960","RelatedDescription":"Open PR \"Allow conversion of GetAwaiter extension method this arg\" (#38960)"},{"Id":"499956570","IsPullRequest":true,"CreatedAt":"2019-09-30T20:03:03","Actor":"cston","Number":"38948","RawContent":null,"Title":"Fix typos","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38948","RelatedDescription":"Closed or merged PR \"Fix typos\" (#38948)"},{"Id":"500480975","IsPullRequest":false,"CreatedAt":"2019-09-30T19:38:33","Actor":"CyrusNajmabadi","Number":"38959","RawContent":null,"Title":"IDE should detect previously generated 'GetHashCode' and offer to upgrade it to use System.HashCode if available.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/38959","RelatedDescription":"Open issue \"IDE should detect previously generated 'GetHashCode' and offer to upgrade it to use System.HashCode if available.\" (#38959)"},{"Id":"500478091","IsPullRequest":false,"CreatedAt":"2019-09-30T19:33:15","Actor":"agocke","Number":"38958","RawContent":null,"Title":"AnalyzerDriver is needs refactoring","State":"open","Body":"There are now many fields/properties that are confusing, including a mix of ConcurrentDictionary and Dictionary with no clear annotation on what the threading model of the type is.","Url":"https://github.com/dotnet/roslyn/issues/38958","RelatedDescription":"Open issue \"AnalyzerDriver is needs refactoring\" (#38958)"},{"Id":"500466918","IsPullRequest":false,"CreatedAt":"2019-09-30T19:11:47","Actor":"tmat","Number":"38957","RawContent":null,"Title":"Null assignable to non-null type via tuple default value","State":"open","Body":"**Version Used**: \r\n![image](https://user-images.githubusercontent.com/41759/65908449-52bb4d00-e37b-11e9-9bd8-eefa999d862e.png)\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\nusing System;\r\n\r\n#nullable enable\r\n\r\nclass C\r\n{\r\n    private readonly int X = 1;\r\n\r\n    static (C C, bool B) F()\r\n    {\r\n        return default;\r\n    }\r\n\r\n    static void Main()\r\n    {\r\n        var (c, _) = F();\r\n        Console.WriteLine(c.X);\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nWarning on `return default`.\r\n\r\n**Actual Behavior**:\r\n\r\nNo warning.\r\n\r\nThe warning is reported if we return `(default, default)` or `(null, false)`.","Url":"https://github.com/dotnet/roslyn/issues/38957","RelatedDescription":"Open issue \"Null assignable to non-null type via tuple default value\" (#38957)"},{"Id":"500279088","IsPullRequest":true,"CreatedAt":"2019-09-30T18:20:00","Actor":"nnpcYvIVl","Number":"38952","RawContent":null,"Title":"Spelling fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38952","RelatedDescription":"Closed or merged PR \"Spelling fixes\" (#38952)"},{"Id":"500414551","IsPullRequest":false,"CreatedAt":"2019-09-30T17:28:28","Actor":"tmat","Number":"38954","RawContent":null,"Title":"Include source files w/o method bodies in the PDB documents","State":"open","Body":"Currently the compiler does not list source files in the debug documents in the PDB that are part of the compilation but do not have any method body. These documents are only added in order to support sequence points.\r\n\r\nThere are other scenarios than stepping that would benefit from all source files being captured in the PDB. For example, [Go To Definition](https://github.com/dotnet/roslyn/issues/24349), or validating that the assembly was built from specific source file content for auditing or [EnC](https://github.com/dotnet/roslyn/pull/38905).","Url":"https://github.com/dotnet/roslyn/issues/38954","RelatedDescription":"Open issue \"Include source files w/o method bodies in the PDB documents\" (#38954)"},{"Id":"500358493","IsPullRequest":false,"CreatedAt":"2019-09-30T15:38:05","Actor":"sharwell","Number":"38953","RawContent":null,"Title":"IDE0008 (Use explicit type) Fix All operation is too broad","State":"open","Body":"**Version Used**: Visual Studio 16.4 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\ncsharp_style_var_elsewhere = false:silent\r\ncsharp_style_var_for_built_in_types = false:warning\r\ncsharp_style_var_when_type_is_apparent = false:silent\r\n```\r\n\r\n```csharp\r\nclass ClassName\r\n{\r\n  void Method()\r\n  {\r\n    var x = new object();\r\n    var y = 0;\r\n  }\r\n}\r\n```\r\n\r\nApply Fix All in Solution for the warning reported on `var y`.\r\n\r\n**Expected Behavior**:\r\n\r\n```csharp\r\nclass ClassName\r\n{\r\n  void Method()\r\n  {\r\n    var x = new object();\r\n    int y = 0;\r\n  }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n```csharp\r\nclass ClassName\r\n{\r\n  void Method()\r\n  {\r\n    object x = new object();\r\n    int y = 0;\r\n  }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/38953","RelatedDescription":"Open issue \"IDE0008 (Use explicit type) Fix All operation is too broad\" (#38953)"},{"Id":"500152610","IsPullRequest":false,"CreatedAt":"2019-09-30T09:18:25","Actor":"paulomorgado","Number":"38950","RawContent":null,"Title":"There's no way to get a display string for a NamedType with access modifiers","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft.CodeAnalysis.CSharp (2.10.0)\r\nMicrosoft.CodeAnalysis.VisualBasic (2.10.0)\r\n\r\n**Steps to Reproduce**:\r\n\r\nCreate a class:\r\n\r\n```csharp\r\npublic class GenericType<U, V>\r\n    where U : struct\r\n    where V : class, System.IDisposable\r\n{\r\n    public System.Collections.Generic.IEnumerable<U> Method(V v) => null;\r\n}\r\n```\r\n\r\nDeclare a display format like this:\r\n\r\n```csharp\r\nprivate static SymbolDisplayFormat DeclarationDisplayFormat =\r\n    new SymbolDisplayFormat(\r\n            globalNamespaceStyle: SymbolDisplayGlobalNamespaceStyle.Omitted,\r\n            typeQualificationStyle: SymbolDisplayTypeQualificationStyle.NameOnly,\r\n            genericsOptions:\r\n                SymbolDisplayGenericsOptions.IncludeTypeParameters|\r\n                SymbolDisplayGenericsOptions.IncludeTypeConstraints |\r\n                SymbolDisplayGenericsOptions.IncludeVariance,\r\n            memberOptions:\r\n                SymbolDisplayMemberOptions.IncludeParameters |\r\n                SymbolDisplayMemberOptions.IncludeType |\r\n                SymbolDisplayMemberOptions.IncludeRef |\r\n                SymbolDisplayMemberOptions.IncludeModifiers |\r\n                SymbolDisplayMemberOptions.IncludeAccessibility |\r\n                SymbolDisplayMemberOptions.IncludeExplicitInterface |\r\n                SymbolDisplayMemberOptions.None,\r\n            extensionMethodStyle:\r\n                SymbolDisplayExtensionMethodStyle.Default,\r\n            parameterOptions:\r\n                SymbolDisplayParameterOptions.IncludeName |\r\n                SymbolDisplayParameterOptions.IncludeType |\r\n                SymbolDisplayParameterOptions.IncludeParamsRefOut |\r\n                SymbolDisplayParameterOptions.IncludeDefaultValue |\r\n                SymbolDisplayParameterOptions.IncludeExtensionThis |\r\n                SymbolDisplayParameterOptions.None,\r\n            propertyStyle:\r\n                SymbolDisplayPropertyStyle.ShowReadWriteDescriptor,\r\n            localOptions:\r\n                SymbolDisplayLocalOptions.IncludeType |\r\n                SymbolDisplayLocalOptions.IncludeRef |\r\n                SymbolDisplayLocalOptions.None,\r\n            kindOptions:\r\n                SymbolDisplayKindOptions.IncludeMemberKeyword |\r\n                SymbolDisplayKindOptions.IncludeTypeKeyword,\r\n            miscellaneousOptions:\r\n                SymbolDisplayMiscellaneousOptions.EscapeKeywordIdentifiers |\r\n                SymbolDisplayMiscellaneousOptions.UseSpecialTypes);\r\n```\r\n\r\nCall, `symbol.ToDisplayString(DeclarationDisplayFormat)` on the symbol for the class.\r\n\r\n**Expected Behavior**:\r\n\r\n`public class GenericType<U, V> where U : struct where V : class`\r\n\r\n**Actual Behavior**:\r\n\r\n`class GenericType<U, V> where U : struct where V : class`\r\n","Url":"https://github.com/dotnet/roslyn/issues/38950","RelatedDescription":"Open issue \"There's no way to get a display string for a NamedType with access modifiers\" (#38950)"},{"Id":"500136525","IsPullRequest":false,"CreatedAt":"2019-09-30T08:46:51","Actor":"Vinigas","Number":"38949","RawContent":null,"Title":"False-positive, wrong null-coalescing-operator ( ?? operator ) programmer-code-error.","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio 2019 Preview Version 16.4.0 Preview 1.0\r\ndotnetcore 3.0.100\r\nWindows 10 Pro\r\n**Steps to Reproduce**:\r\n\r\n1. Create *.cs file in VS and paste this code:\r\n```\r\nusing Microsoft.CodeAnalysis;\r\nusing Microsoft.CodeAnalysis.CSharp;\r\n\r\nnamespace SomeNamespace\r\n{\r\n    internal class SomeClass\r\n    {\r\n        private static string ArrangeUsingRoslyn__SameLogic(string csCode)\r\n        {\r\n            var tree = CSharpSyntaxTree.ParseText(csCode);\r\n\r\n            if (tree == null || tree.TryGetRoot(out SyntaxNode root) == false)\r\n            {\r\n                return csCode;\r\n            }\r\n\r\n            return root.ToFullString();\r\n        }\r\n\r\n        private static string ArrangeUsingRoslyn__SameLogic2(string csCode)\r\n        {\r\n            var tree = CSharpSyntaxTree.ParseText(csCode);\r\n\r\n            if ((tree?.TryGetRoot(out SyntaxNode root) ?? false) == false)\r\n            {\r\n                return csCode;\r\n            }\r\n\r\n            return root.ToFullString();\r\n        }\r\n    }\r\n}\r\n```\r\n3. ArrangeUsingRoslyn__SameLogic(...) and ArrangeUsingRoslyn__SameLogic2(...) contains the same logic.\r\n\r\n**Expected Behavior**:\r\n\r\nNo errors detected in code.\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/6695244/65862640-5b118900-e377-11e9-8920-92ec2ec00ed0.png)\r\nError in code:\r\n> 'root' is not null here.\r\n> Use of unassigned local variable 'root'\r\n\r\nWrong null-coalescing-operator ( ?? operator ) parsing.","Url":"https://github.com/dotnet/roslyn/issues/38949","RelatedDescription":"Open issue \"False-positive, wrong null-coalescing-operator ( ?? operator ) programmer-code-error.\" (#38949)"},{"Id":"499948054","IsPullRequest":false,"CreatedAt":"2019-09-29T17:50:59","Actor":"joshlang","Number":"38947","RawContent":null,"Title":"Erroneous error!  IDE1007 The name 'var' does not exist in the current context","State":"open","Body":"Using VS 2019:  16.4.0 Preview 1.0\r\n\r\nConsider this code:\r\n```\r\nusing System;\r\n\r\nnamespace ConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Action a = () =>\r\n            {\r\n                var (x, y) = (4, 5);\r\n#warning Hi\r\n            };\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIt's fine.  But the error window shows: `IDE1007 The name 'var' does not exist in the current context` and a red squiggly appears under the word 'var'.\r\n\r\nIt compiles without any errors, though.\r\n\r\nAny of the following will remove the IDE1007 error:\r\n- Don't deconstruct the tuple.  `var x = (4, 5)`\r\n- Move the offending code into void Main() instead of in a lambda.\r\n- Remove the #warning (The problem only exists if there are any warnings in the lambda's scope, whether naturally or by creating one with #warning)\r\n","Url":"https://github.com/dotnet/roslyn/issues/38947","RelatedDescription":"Open issue \"Erroneous error!  IDE1007 The name 'var' does not exist in the current context\" (#38947)"},{"Id":"499924067","IsPullRequest":false,"CreatedAt":"2019-09-29T14:34:22","Actor":"dlech","Number":"38946","RawContent":null,"Title":"NotNullIfNotNull does not work with implicit operator","State":"closed","Body":"**Version Used**: master (23 Sep 2019) via https://sharplab.io\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\n#nullable enable\r\n\r\nusing System;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\npublic class StringLike {\r\n    readonly string s;\r\n    \r\n    [return: NotNullIfNotNull(nameof(s))]\r\n    public static implicit operator string?(StringLike? s)\r\n    {\r\n        return s?.s;\r\n    }\r\n    \r\n    [return: NotNullIfNotNull(nameof(s))]\r\n    public static implicit operator StringLike?(string? s)\r\n    {\r\n        if (s == null) {\r\n            return null;\r\n        }\r\n        return new StringLike(s);\r\n    }\r\n    \r\n    [return: NotNullIfNotNull(nameof(s))]\r\n    public static string? Cast(StringLike? s)\r\n    {\r\n        return s?.s;\r\n    }\r\n    \r\n    [return: NotNullIfNotNull(nameof(s))]\r\n    public static StringLike? Cast(string? s)\r\n    {\r\n        if (s == null) {\r\n            return null;\r\n        }\r\n        return new StringLike(s);\r\n    }\r\n    \r\n    \r\n    StringLike(string s) {\r\n        this.s = s;\r\n    }\r\n    \r\n    public static string Default0 = new StringLike(\"default\"); // get warning here\r\n    public static StringLike Default1 = \"default\"; // get warning here\r\n    public static string Default2 = Cast(new StringLike(\"default\")); // no warning here\r\n    public static StringLike Default3 = Cast(\"default\"); // no warning here\r\n}\r\n```\r\n\r\n**Expected Behavior**: `NotNullIfNotNull` should work with implicit cast the same as other static methods\r\n\r\n**Actual Behavior**: named static methods work as expected, but implicit cast does not\r\n","Url":"https://github.com/dotnet/roslyn/issues/38946","RelatedDescription":"Closed issue \"NotNullIfNotNull does not work with implicit operator\" (#38946)"},{"Id":"499913885","IsPullRequest":true,"CreatedAt":"2019-09-29T12:58:36","Actor":"Youssef1313","Number":"38945","RawContent":null,"Title":"[WIP] Use camelCase for variables and method arguments","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38945","RelatedDescription":"Open PR \"[WIP] Use camelCase for variables and method arguments\" (#38945)"},{"Id":"499908518","IsPullRequest":false,"CreatedAt":"2019-09-29T12:11:22","Actor":"Joe4evr","Number":"38944","RawContent":null,"Title":"Erroneous suggestion IDE0067 for disposable object used in 'await using (...) { }'","State":"open","Body":"**Version Used**:\r\nVersion 16.4.0 Preview 1.0\r\nVisualStudio.16.Preview/16.4.0-pre.1.0+29319.158\r\n\r\n**Steps to Reproduce**:\r\nPaste the following code into a project:\r\n```cs\r\nusing System;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\n\r\nstatic class DisposingAnalysis\r\n{\r\n    static void ImplicitSync(ReadOnlySpan<byte> bytes)\r\n    {\r\n        //No suggestions, expected\r\n        using var stream = new MemoryStream();\r\n        stream.Write(bytes);\r\n    }\r\n\r\n    static async Task ImplicitAsync(ReadOnlyMemory<byte> bytes)\r\n    {\r\n        //No suggestions, expected\r\n        await using var stream = new MemoryStream();\r\n        await stream.WriteAsync(bytes);\r\n    }\r\n\r\n    static void ExplicitSync(ReadOnlySpan<byte> bytes)\r\n    {\r\n        //IDE0063: 'using' statement can be simplified, expected\r\n        using (var stream = new MemoryStream())\r\n        {\r\n            stream.Write(bytes);\r\n        }\r\n    }\r\n\r\n    static async Task ExplicitAsync(ReadOnlyMemory<byte> bytes)\r\n    {\r\n        //IDE0063 *AND* IDE0067: Disposable object created by 'new MemoryStream()' is never disposed\r\n        await using (var stream = new MemoryStream())\r\n        {\r\n            await stream.WriteAsync(bytes);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nOnly IDE0063 is reported for both of the explicit syntax methods to point out the new Implictly Scoped `using` Statement syntax.\r\n\r\n**Actual Behavior**:\r\nThe combination of the older, explicitly-scoped syntax and async disposable makes the compiler/IDE think the object will not get disposed and reports IDE0067 in addition to the expected behavior.","Url":"https://github.com/dotnet/roslyn/issues/38944","RelatedDescription":"Open issue \"Erroneous suggestion IDE0067 for disposable object used in 'await using (...) { }'\" (#38944)"},{"Id":"499824084","IsPullRequest":false,"CreatedAt":"2019-09-28T21:40:43","Actor":"dlech","Number":"38943","RawContent":null,"Title":"nullability of value parameter in properties","State":"open","Body":"**Version Used**: master (23 September 2019) via https://sharplab.io\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\n#nullable enable\r\n\r\nusing System;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\npublic class C {\r\n    string? Getter() {\r\n        return null;\r\n    }\r\n    \r\n    void Setter(string s) {\r\n    }\r\n    \r\n    [DisallowNull]\r\n    public string? Property {\r\n        get => Getter();\r\n        set => Setter(value); // get unexpected warning here\r\n    }\r\n    \r\n    public void Test() {\r\n        Property = \"\"; // no warning here as expected\r\n        Property = null; // get warning here as expected\r\n        Setter(Property); // get warning here as expected\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**: Given a property with the `DisallowNull` attribute it should mean that the return value can be null but `value` parameter of the setter cannot be null.\r\n\r\n**Actual Behavior**: The code analysis gets this right when assigning to a property, but not in the property declaration.\r\n","Url":"https://github.com/dotnet/roslyn/issues/38943","RelatedDescription":"Open issue \"nullability of value parameter in properties\" (#38943)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"500653866","IsPullRequest":true,"CreatedAt":"2019-10-01T04:31:34","Actor":"Dotnet-GitSync-Bot","Number":"7805","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik","Url":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx,coreclr\" (#7805)"},{"Id":"500408911","IsPullRequest":true,"CreatedAt":"2019-10-01T04:22:31","Actor":"Dotnet-GitSync-Bot","Number":"7804","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @Youssef1313 @safern","Url":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7804)"},{"Id":"499907137","IsPullRequest":true,"CreatedAt":"2019-09-29T14:16:14","Actor":"MichalStrehovsky","Number":"7803","RawContent":null,"Title":"Delete ReadyToRun portions of the compiler and test tree","State":"closed","Body":"The development of the ReadyToRun compiler moved to the CoreCLR repo. Keeping the sources here is just making it harder to keep the repos in sync.\r\n\r\nDeleting the testing speeds up the CI considerably.","Url":"https://github.com/dotnet/corert/pull/7803","RelatedDescription":"Closed or merged PR \"Delete ReadyToRun portions of the compiler and test tree\" (#7803)"},{"Id":"499773007","IsPullRequest":true,"CreatedAt":"2019-09-29T11:58:37","Actor":"MichalStrehovsky","Number":"7802","RawContent":null,"Title":"Fix Windows debug information for classes","State":"closed","Body":"Fixes a longstanding issue where we were emitting erroneous vfptr debug entries and incorrectly mangling class names. One could only inspect things as they were statically typed in the source (so if a variable was typed as `object` in the sources, you wouldn't see any fields in the native debugger, no matter what was assigned to it).\r\n\r\nIt wasn't too terrible, so I sort of just lived with it, but this should work.\r\n\r\nWith this, casting to base classes in the debugger works.\r\n\r\n## Before\r\n\r\n![before](https://user-images.githubusercontent.com/13110571/65817093-98550a00-e203-11e9-88ce-efd8109ae303.gif)\r\n\r\n\r\n## After\r\n\r\n![after](https://user-images.githubusercontent.com/13110571/65817095-9d19be00-e203-11e9-9ec7-73ffe4587b62.gif)\r\n","Url":"https://github.com/dotnet/corert/pull/7802","RelatedDescription":"Closed or merged PR \"Fix Windows debug information for classes\" (#7802)"},{"Id":"499146410","IsPullRequest":true,"CreatedAt":"2019-09-27T23:17:06","Actor":"Dotnet-GitSync-Bot","Number":"7800","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams","Url":"https://github.com/dotnet/corert/pull/7800","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7800)"},{"Id":"499434828","IsPullRequest":true,"CreatedAt":"2019-09-27T15:09:03","Actor":"am11","Number":"7801","RawContent":null,"Title":"Remove duplicate enum SystemVClassificationType","State":"closed","Body":"Found the duplicate definition at: https://github.com/dotnet/corert/blob/a7ce92678876ba55a1c7a65c464363b51d777b4f/src/JitInterface/src/CorInfoTypes.cs#L1170","Url":"https://github.com/dotnet/corert/pull/7801","RelatedDescription":"Closed or merged PR \"Remove duplicate enum SystemVClassificationType\" (#7801)"},{"Id":"498529328","IsPullRequest":true,"CreatedAt":"2019-09-26T22:29:33","Actor":"Dotnet-GitSync-Bot","Number":"7798","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams @stephentoub","Url":"https://github.com/dotnet/corert/pull/7798","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7798)"},{"Id":"499086023","IsPullRequest":false,"CreatedAt":"2019-09-26T19:57:16","Actor":"jkotas","Number":"7799","RawContent":null,"Title":"CppCodeGen: Implement RVA-backed static fields","State":"open","Body":"E.g. `private static ReadOnlySpan<byte> CategoryForLatin1 => new byte[] { 1, 2, 3, ... };`. CppCodeGen allocates space for these, but does not initialize it.","Url":"https://github.com/dotnet/corert/issues/7799","RelatedDescription":"Open issue \"CppCodeGen: Implement RVA-backed static fields\" (#7799)"},{"Id":"497810701","IsPullRequest":true,"CreatedAt":"2019-09-25T21:17:24","Actor":"Dotnet-GitSync-Bot","Number":"7797","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7797)"},{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-24T00:16:58","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"closed","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"496830692","IsPullRequest":false,"CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Number":"7796","RawContent":null,"Title":"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure","State":"open","Body":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Open issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796)"},{"Id":"494589847","IsPullRequest":true,"CreatedAt":"2019-09-17T14:13:36","Actor":"Dotnet-GitSync-Bot","Number":"7794","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7794)"},{"Id":"494273259","IsPullRequest":true,"CreatedAt":"2019-09-16T23:13:23","Actor":"Dotnet-GitSync-Bot","Number":"7793","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7793)"},{"Id":"493430075","IsPullRequest":false,"CreatedAt":"2019-09-16T15:38:33","Actor":"RalfKornmannEnvision","Number":"7790","RawContent":null,"Title":"GC on ARM64 based \"kind of unix\" system","State":"closed","Body":"I am sorry to bother again. After fixing some more minor issues and brush up my ARM64 assembler knowledge I was finally able to run a simple hello world on my ARM64 system without crashing. Doing things like writing to the log (the system doesn't have a text based console at all), Thread.Sleep, Environment.TickCount, printing the command line arguments etc works fine. But than I made the \"mistake\" to trigger the GC. \r\n\r\nTo make a long story short after some more debugging I noticed that the unwind of the stack does not work. The reason was pretty obvious. Libunwind doesn't have any information about the function were the stack walk should be started. I am aware that there are some parts missing for ARM64 targets that I need to fill but there is one question I was not able to answer so far. Does the GC only need unwind information for the managed code part? Or do I need to provide information for the C/C++ parts and even the dynamic libs of the OS? I am aware that libunwind can fetch these information by it's own. Unfortunately the function that it uses for this is not supported by the OS my system is using.  I may be able to get the unwind sections from the runtime C/C++ code.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7790","RelatedDescription":"Closed issue \"GC on ARM64 based \"kind of unix\" system\" (#7790)"},{"Id":"493684541","IsPullRequest":true,"CreatedAt":"2019-09-15T07:35:11","Actor":"Dotnet-GitSync-Bot","Number":"7792","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7792","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7792)"},{"Id":"493500562","IsPullRequest":true,"CreatedAt":"2019-09-14T14:02:26","Actor":"MichalStrehovsky","Number":"7791","RawContent":null,"Title":"Fix casting to pointers","State":"closed","Body":"Porting a fix made for .NET Native.\r\n\r\nA popular game engine has a `castclass void*` IL instruction in one of the generated files it ships with. This construct is weird enough that it crashes the .NET Native compiler. It doesn't crash the CoreRT compiler, but we still want the runtime side of the fix.","Url":"https://github.com/dotnet/corert/pull/7791","RelatedDescription":"Closed or merged PR \"Fix casting to pointers\" (#7791)"},{"Id":"492984849","IsPullRequest":true,"CreatedAt":"2019-09-13T13:52:21","Actor":"Dotnet-GitSync-Bot","Number":"7789","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @NextTurn","Url":"https://github.com/dotnet/corert/pull/7789","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7789)"},{"Id":"492918947","IsPullRequest":true,"CreatedAt":"2019-09-12T19:11:42","Actor":"Dotnet-GitSync-Bot","Number":"7788","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @TylerBrinkley @tarekgh @obligaron @marek-safar @jkotas @sywhang","Url":"https://github.com/dotnet/corert/pull/7788","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7788)"},{"Id":"491162081","IsPullRequest":true,"CreatedAt":"2019-09-11T00:16:26","Actor":"Dotnet-GitSync-Bot","Number":"7786","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7786","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7786)"},{"Id":"490571600","IsPullRequest":true,"CreatedAt":"2019-09-09T17:52:58","Actor":"davidwrighton","Number":"7779","RawContent":null,"Title":"Resource writing","State":"closed","Body":"- Refactor the win32 resource reading code to use more natural managed data structures\r\n- Build a Win32 resource emitter on top of refactored data structures\r\n- Replace resource section copy logic with new node to generate win32 resources","Url":"https://github.com/dotnet/corert/pull/7779","RelatedDescription":"Closed or merged PR \"Resource writing\" (#7779)"},{"Id":"491229182","IsPullRequest":false,"CreatedAt":"2019-09-09T17:33:38","Actor":"RalfKornmannEnvision","Number":"7787","RawContent":null,"Title":"finally funclets brocken for ARM64!?","State":"open","Body":"I am not sure if this is a corert or coreclr issue but as I am working on a corert port for an custom ARM64 system I start with posting it here.\r\n\r\nAfter adding code to the objectwriter and the ilcompiler I managed to get a simple hello world app running to the main method. But it than crashed during the shutdown. After some debugging i figured out that the static constructors are never called. After some more debugging I noticed that ClassConstructorRunner.GetCctor corrupts the stack frame,\r\n\r\nIt happens at the end of the method in an assembler block that i believe is the finally funclet for the using. It looks like this\r\n\r\n  28667c: a9be7bfd stp x29, x30, [sp, #-32]!\r\n  286680: f90013f3 str x19, [sp, #32]\r\n  286684: 9103a3a0 add x0, x29, #0xe8\r\n  286688: 97fc0d42 bl 189b90 <S_P_CoreLib_System_Threading_LockHolder__Dispose>\r\n  28668c: d503201f nop\r\n  286690: d503201f nop\r\n  286694: f94013f3 ldr x19, [sp, #32]\r\n  286698: a8c27bfd ldp x29, x30, [sp], #32\r\n  28669c: d65f03c0 ret\r\n\r\nThe fact that x19 is stored with an offset of 32 looks strange for me and it overwrites the already stored data. Based on other stackframes I would expect an offset of 16 here. Or the new stackframe for the funclet needs to be 16 bytes larger.\r\n\r\nDisclaimer: As the development system for the custom ARM64 system runs on windows I although use a ARM64 jit that is build to run on X64. Very simular to the protonojit but not as alt jit to get all the data needed to write the arm64 elf file that the linker for the custom ARM64 system needs. Unfortunately I don't have an ARM64 windows or linux system to check if a non cross jit generates the same code.\r\n\r\nI assume there is no ready to use jit for my use case and I need to build it anyway. In this case I could properly fix the issue but I would need a hint how the code is expected to look like.  ","Url":"https://github.com/dotnet/corert/issues/7787","RelatedDescription":"Open issue \"finally funclets brocken for ARM64!?\" (#7787)"},{"Id":"490799316","IsPullRequest":true,"CreatedAt":"2019-09-08T23:57:41","Actor":"MichalStrehovsky","Number":"7785","RawContent":null,"Title":"Mark unsafe intrinsics as reflection blocked","State":"closed","Body":"Keeping these reflection enabled pulls in quite a bit of junk (generic dictionaries, standalone method bodies, bookkeeping) that adds up to 1.5% of the size of Hello World...","Url":"https://github.com/dotnet/corert/pull/7785","RelatedDescription":"Closed or merged PR \"Mark unsafe intrinsics as reflection blocked\" (#7785)"},{"Id":"490775070","IsPullRequest":false,"CreatedAt":"2019-09-08T21:11:53","Actor":"mrzaxaryan","Number":"7784","RawContent":null,"Title":"Non-trivial marshalling is not yet supported by this compiler.","State":"closed","Body":"Can't save image to MemoryStream \r\n.NET Core v3.0.0-preview9\r\nVisual Studio 16.3.0 Preview 3.0\r\nException: `System.Exception: Method '[System.Drawing.Common]System.Drawing.SafeNativeMethods+Gdip.GdipSaveImageToStream(HandleRef,IStream,Guid&,HandleRef)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipSaveImageToStream(HandleRef, Interop.Ole32.IStream, Guid&, HandleRef) + 0x39\r\n   at System.Drawing.Image.Save(Stream, ImageCodecInfo, EncoderParameters) + 0x1af`\r\n","Url":"https://github.com/dotnet/corert/issues/7784","RelatedDescription":"Closed issue \"Non-trivial marshalling is not yet supported by this compiler.\" (#7784)"},{"Id":"490757817","IsPullRequest":true,"CreatedAt":"2019-09-08T20:09:59","Actor":"MichalStrehovsky","Number":"7782","RawContent":null,"Title":"Port GC changes from CoreCLR","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/commit/cd42ee8fe410f71026467ad2e90116115b85f68d\r\nPorts https://github.com/dotnet/coreclr/commit/740752c9d206a465e96a4d01e7dafb6adb6ded63","Url":"https://github.com/dotnet/corert/pull/7782","RelatedDescription":"Closed or merged PR \"Port GC changes from CoreCLR\" (#7782)"},{"Id":"490760342","IsPullRequest":true,"CreatedAt":"2019-09-08T20:08:39","Actor":"MichalStrehovsky","Number":"7783","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7783","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#7783)"},{"Id":"490704961","IsPullRequest":true,"CreatedAt":"2019-09-08T05:12:25","Actor":"Dotnet-GitSync-Bot","Number":"7781","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7781","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7781)"},{"Id":"490412146","IsPullRequest":true,"CreatedAt":"2019-09-08T00:46:12","Actor":"trylek","Number":"7777","RawContent":null,"Title":"Output raw test lists for the individual outcomes from SuperIlc","State":"closed","Body":"This change tweaks SuperIlc to emit simple line-oriented test lists\r\nfor the various compilation and execution outcomes. I found this\r\nquite useful for comparing various runs. I have also deleted a bit\r\nof dead code I noticed.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7777","RelatedDescription":"Closed or merged PR \"Output raw test lists for the individual outcomes from SuperIlc\" (#7777)"},{"Id":"490662770","IsPullRequest":false,"CreatedAt":"2019-09-07T17:55:27","Actor":"nexon33","Number":"7780","RawContent":null,"Title":"Implement GetInterfaceMap","State":"open","Body":"I want to be able to render a view in asp.net core, I need the controller inheritance to be able to call View();\r\nIs there any simple way of doing this or should I forget about it for now?","Url":"https://github.com/dotnet/corert/issues/7780","RelatedDescription":"Open issue \"Implement GetInterfaceMap\" (#7780)"},{"Id":"490072419","IsPullRequest":true,"CreatedAt":"2019-09-06T23:34:35","Actor":"davidwrighton","Number":"7776","RawContent":null,"Title":"Partial compilation and generic ibc processing","State":"closed","Body":"- Support for partial compilation\r\n- Support for parsing generics in IBC data\r\n - Bonus feature of searching referenced and input assemblies for types if the module in the IBC data is invalid","Url":"https://github.com/dotnet/corert/pull/7776","RelatedDescription":"Closed or merged PR \"Partial compilation and generic ibc processing\" (#7776)"},{"Id":"490437186","IsPullRequest":true,"CreatedAt":"2019-09-06T22:57:58","Actor":"Dotnet-GitSync-Bot","Number":"7778","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7778","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7778)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"499679772","IsPullRequest":true,"CreatedAt":"2019-09-30T20:02:05","Actor":"wli3","Number":"3689","RawContent":null,"Title":"Better error message when c++ targeting TFM lower than 3.1","State":"closed","Body":"fix https://github.com/dotnet/sdk/issues/3626","Url":"https://github.com/dotnet/sdk/pull/3689","RelatedDescription":"Closed or merged PR \"Better error message when c++ targeting TFM lower than 3.1\" (#3689)"},{"Id":"500442644","IsPullRequest":false,"CreatedAt":"2019-09-30T18:26:00","Actor":"ghosttie","Number":"3698","RawContent":null,"Title":"publishing appears to succeed but dependencies are missing if child project has space in package id","State":"open","Body":"I had a problem that manifested as an [HTTP Error 500.31 - ANCM Failed to Find Native Dependencies](https://github.com/aspnet/AspNetCore/issues/14443) error which was misleading.\r\n\r\nThe problem turned out to be that the main project had references to other projects that had spaces in their package ids, which somehow kept them from being published correctly, even though there was no error at publish time.\r\n\r\nThis was working in .NET Core 2.2 but is not working in 3.0.\r\n\r\nAlthough there's a simple workaround (remove the spaces) I think this should be fixed, because it worked in previous versions, the error message doesn't lead to a solution, and the package id was set automatically when the project was created so it should have been set to a valid value.\r\n\r\nAn ASP.NET Core maintainer said that it wasn't a bug in their code and to try reporting it here.","Url":"https://github.com/dotnet/sdk/issues/3698","RelatedDescription":"Open issue \"publishing appears to succeed but dependencies are missing if child project has space in package id\" (#3698)"},{"Id":"500287421","IsPullRequest":true,"CreatedAt":"2019-09-30T13:44:40","Actor":"vitek-karas","Number":"3697","RawContent":null,"Title":"Implement writing includedFrameworks references for self-contained apps","State":"open","Body":"For self-contained apps which are of the right version (to maintain backward compat), write the framework references to a new `includedFrameworks` property in `.runtimeconfig.json`.\r\n\r\nWhen the native hosting APIs are used to load a managed component into a process which is running a .NET Core app, the hosting layer should validate that the new component framework requirements are met by the frameworks loaded into the process already. This is to allow the new component to communicate with the app (same FX types), but also to overcome the fact that we don't want to load frameworks twice ever.\r\n\r\nIn order to validate the framework references declared by the new component, the host must know what frameworks are loaded into the process. For framework dependent apps this works fine as the host knows which frameworks it resolved during the app startup. But for self-contained apps, the host doesn't know as everything looks like an app to it.\r\n\r\nThis change adds he new `includedFrameworks` property to the `.runtimeconfig.json` which will be used for self-contained apps (only, it should not occur when `framework` or `frameworks` properties are used). It will contain the list of frameworks which were used to build the self-contained apps. The format is the same as `frameworks` property content.\r\n\r\nTo maintain strict backward compatibility, this change will only write the new property to projects targeting `netcoreapp3.1` or higher.\r\n\r\nAs coded this assumes the change will be approved for 3.1. If it's rejected, I will follow up with a change which will make the new property occur only for 5.0 and above.\r\n\r\n#3541 - master (5.0) version","Url":"https://github.com/dotnet/sdk/pull/3697","RelatedDescription":"Open PR \"Implement writing includedFrameworks references for self-contained apps\" (#3697)"},{"Id":"499924954","IsPullRequest":false,"CreatedAt":"2019-09-29T14:25:25","Actor":"alexandrehtrb","Number":"3696","RawContent":null,"Title":"Make multilanguage project builds","State":"open","Body":"I propose that dotnet build allows multilanguage .NET projects.\r\n\r\nCurrently, a .NET project needs to be language exclusive, that is, only F#, or only C#, or only VB.NET.\r\n\r\nBut, this could change to allow .fs, .cs and .vb files to be compiled together in a same project.\r\n\r\nThe existing way of approaching this problem in F# is separate F# files in F# projects, C# files in C# projects, and VB.NET files in VB.NET projects.\r\n\r\nI originally created a discussion [here](https://github.com/fsharp/fslang-suggestions/issues/788).","Url":"https://github.com/dotnet/sdk/issues/3696","RelatedDescription":"Open issue \"Make multilanguage project builds\" (#3696)"},{"Id":"499762840","IsPullRequest":true,"CreatedAt":"2019-09-28T14:22:33","Actor":"dotnet-maestro[bot]","Number":"3693","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190927.2\r\n- **Date Produced**: 9/27/2019 6:33 PM\r\n- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19477.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3693)"},{"Id":"499763174","IsPullRequest":true,"CreatedAt":"2019-09-28T12:05:23","Actor":"dotnet-bot","Number":"3695","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3695","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3695)"},{"Id":"499763157","IsPullRequest":true,"CreatedAt":"2019-09-28T12:05:16","Actor":"dotnet-bot","Number":"3694","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3694","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3694)"},{"Id":"499723055","IsPullRequest":true,"CreatedAt":"2019-09-28T04:05:13","Actor":"dotnet-maestro[bot]","Number":"3692","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190930.22\r\n- **Date Produced**: 10/1/2019 2:48 AM\r\n- **Commit**: dd532f6e9fa24c13246b944616f066f42ebe957a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19480.22\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3692","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3692)"},{"Id":"497919543","IsPullRequest":false,"CreatedAt":"2019-09-28T02:53:44","Actor":"nguerrera","Number":"3672","RawContent":null,"Title":"It_publishes_and_runs_self_contained_wpf_app assumes `dotnet new wpf` targets 3.0","State":"closed","Body":"Test is failing in merge of core-sdk 3.0 to 3.1 as it starts running is unprepared for the fact that `dotnet new wpf` now targets 3.1.","Url":"https://github.com/dotnet/sdk/issues/3672","RelatedDescription":"Closed issue \"It_publishes_and_runs_self_contained_wpf_app assumes `dotnet new wpf` targets 3.0\" (#3672)"},{"Id":"497912531","IsPullRequest":false,"CreatedAt":"2019-09-28T02:53:44","Actor":"nguerrera","Number":"3671","RawContent":null,"Title":"ReadyToRun failing in 3.1 due to bad assumption about known framework references","State":"closed","Body":"```\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: The \"PrepareForReadyToRunCompilation\" task failed unexpectedly. [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: System.InvalidOperationException: Sequence contains more than one element [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowMoreThanOneElementException() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source) [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.PrepareForReadyToRunCompilation.ExecuteCore() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\n```\r\n\r\nThe code is doing a SingleOrDefault on the KnownFrameworkReferences with Microsoft.NETCore.App framework name, but now there are two that are known: 3.0 and 3.1 so it fails.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3671","RelatedDescription":"Closed issue \"ReadyToRun failing in 3.1 due to bad assumption about known framework references\" (#3671)"},{"Id":"499678524","IsPullRequest":true,"CreatedAt":"2019-09-28T02:53:41","Actor":"dotnet-bot","Number":"3688","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3688","RelatedDescription":"Closed or merged PR \"Merge release/3.1.1xx to master\" (#3688)"},{"Id":"498396299","IsPullRequest":true,"CreatedAt":"2019-09-28T02:51:33","Actor":"dotnet-maestro[bot]","Number":"3675","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3675","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3675)"},{"Id":"499678501","IsPullRequest":true,"CreatedAt":"2019-09-28T02:50:08","Actor":"dotnet-bot","Number":"3687","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3687","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3687)"},{"Id":"499697830","IsPullRequest":true,"CreatedAt":"2019-09-28T00:05:15","Actor":"dotnet-bot","Number":"3691","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3691","RelatedDescription":"Open PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3691)"},{"Id":"499697806","IsPullRequest":true,"CreatedAt":"2019-09-28T00:05:08","Actor":"dotnet-bot","Number":"3690","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.100-preview9","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.100-preview9.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.100-preview9\ngit reset --hard upstream/release/3.0.100-preview9\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.100-preview9 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3690","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.100-preview9\" (#3690)"},{"Id":"498447740","IsPullRequest":true,"CreatedAt":"2019-09-27T23:22:57","Actor":"nguerrera","Number":"3676","RawContent":null,"Title":"Revert \"Remove perf from builds\"","State":"closed","Body":"Revert #3654\r\n\r\nFix #3655","Url":"https://github.com/dotnet/sdk/pull/3676","RelatedDescription":"Closed or merged PR \"Revert \"Remove perf from builds\"\" (#3676)"},{"Id":"499653558","IsPullRequest":true,"CreatedAt":"2019-09-27T23:20:14","Actor":"nguerrera","Number":"3686","RawContent":null,"Title":"Flow available RIDs to R2R via targeting pack, not runtime pack","State":"closed","Body":"Follow up on feedback on merge from 3.0 -> 3.1","Url":"https://github.com/dotnet/sdk/pull/3686","RelatedDescription":"Closed or merged PR \"Flow available RIDs to R2R via targeting pack, not runtime pack\" (#3686)"},{"Id":"499169291","IsPullRequest":true,"CreatedAt":"2019-09-27T23:16:02","Actor":"dotnet-bot","Number":"3682","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3682","RelatedDescription":"Closed or merged PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3682)"},{"Id":"499599835","IsPullRequest":false,"CreatedAt":"2019-09-27T18:58:04","Actor":"swaroop-sridhar","Number":"3685","RawContent":null,"Title":"Publish Single-file: Smart settings for IncludeSymbolsInSingleFile","State":"open","Body":"When publishing an app as a single file, the default setting is to not include PDB files in the output bundle by default (and instead leave them as separate files).\r\n\r\nHowever, this setting is unsuitable for some apps, where the `deps.json` file includes a dependency on the PDB file. This causes runtime-crash of the app when the `apphost` validates the contents against the deps.json manifest. For example: \r\nhttps://github.com/PowerShell/PowerShell/issues/10266\r\nhttps://github.com/Viir/bots/tree/adapt-for-single-file-exe-publish\r\n\r\nThe inclusion of PDB files as a dependency is almost always an error, but an app (and its dependencies/nuget packages) are not required to associate the same semantics with file-extensions. \r\n\r\nSo, if the deps.json writer finds a PDB file in the manifest, the SDK should default the `IncludeSymbolsInSingleFile` setting to true. The SDK should also issue a warning about this change, so that PDBs are not silently included -- unintentionally increasing the size of published apps.\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3685","RelatedDescription":"Open issue \"Publish Single-file: Smart settings for IncludeSymbolsInSingleFile\" (#3685)"},{"Id":"499577923","IsPullRequest":false,"CreatedAt":"2019-09-27T18:07:57","Actor":"dsplaisted","Number":"3684","RawContent":null,"Title":"Re-enable tests disabled as part of repo merge","State":"open","Body":"I'm working on merging the cli and toolset repos, and there are some tests which are failing only on non-Windows and only in CI.  I am going to disable these tests for now in order to not block the repo merge.\r\n\r\nOnce everything is merged into the SDK repo, we should investigate and re-enable them.","Url":"https://github.com/dotnet/sdk/issues/3684","RelatedDescription":"Open issue \"Re-enable tests disabled as part of repo merge\" (#3684)"},{"Id":"499515674","IsPullRequest":false,"CreatedAt":"2019-09-27T14:41:30","Actor":"aguacongas","Number":"3683","RawContent":null,"Title":"dotnet publish with a runtime identifier and no build publish the wrong version of System.Net.Http dll","State":"open","Body":"I have a wrote a Windows Service and I compile it using `donet build -c Release` and I publish it using `dotnet publish -c Release --no-build`   \r\nBut the System.Net.Http dll packaged has the file version 4.6.27110.4, it should be 4.6.27207.3.  \r\nAnd I received error that should be fixed in runtime 2.2.1 :   [System.ServiceModel.CommunicationException: The server returned an invalid or unrecognized response](https://github.com/dotnet/corefx/issues/31423)\r\n\r\nThe project .csproj declare:  \r\n``` xml\r\n<PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <RuntimeIdentifier>win7-x64</RuntimeIdentifier>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n```\r\nThe `dotnet --info` output:\r\n```bash\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  1.1.9 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.11 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\nIf I replace System.Net.Http.dll with file version 4.6.27110.4 by the one I found in dotnet\\shared\\Microsoft.NETCore.App\\2.2.1 I don't received errors. \r\n\r\nIf I don't used the --no-build args it works","Url":"https://github.com/dotnet/sdk/issues/3683","RelatedDescription":"Open issue \"dotnet publish with a runtime identifier and no build publish the wrong version of System.Net.Http dll\" (#3683)"},{"Id":"498386287","IsPullRequest":true,"CreatedAt":"2019-09-26T22:53:53","Actor":"dotnet-maestro[bot]","Number":"3674","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3674","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3674)"},{"Id":"499119549","IsPullRequest":true,"CreatedAt":"2019-09-26T22:51:28","Actor":"mmitche","Number":"3681","RawContent":null,"Title":"[release/3.0.1xx] Rebrand for 3.0.101","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3681","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Rebrand for 3.0.101\" (#3681)"},{"Id":"499103379","IsPullRequest":false,"CreatedAt":"2019-09-26T20:36:17","Actor":"wli3","Number":"3680","RawContent":null,"Title":"Refresh docker images","State":"open","Body":"- [ ] Since they are outdated, it starts to fail and there is no easy fix. Like this case https://github.com/dotnet/core-sdk/pull/4955. Check all our outdate docker images. Update them to the supported version.\r\n- [ ] Check in the docker file to https://github.com/dotnet/dotnet-buildtools-prereqs-docker/ and use the image. We can save a lot of build time by using image instead of installing dependencies during the build","Url":"https://github.com/dotnet/sdk/issues/3680","RelatedDescription":"Open issue \"Refresh docker images\" (#3680)"},{"Id":"498700038","IsPullRequest":false,"CreatedAt":"2019-09-26T07:06:21","Actor":"taori","Number":"3679","RawContent":null,"Title":"Upgraded projects which compile to NS 2.1, didn't compile, downgrade, now compile fails as well","State":"open","Body":"I was trying to update an application to netcore3 to fix some issues, which spawned other issues (RazorTagHelper requiring some Configuration to operate). To attempt resolve those issues i figured i may try to update the libraries to netstandard 2.1 - that didn't fix it either, so i downgraded my projects back to 2.0.\r\n\r\nOddly enough now those libraries won't compile either even if i clean the solution + delete bin/obj manually.\r\n\r\nFehler: Es wurde versucht, einen numerischen Vergleich für \"$(_TargetFrameworkVersionWithoutV)\" auszuführen, der zu \"**.2.0**\" anstatt zu einer Zahl in Bedingung \" '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' < '**2.0**' \" ausgewertet wird.  C:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.NuGetOfflineCache.targets","Url":"https://github.com/dotnet/sdk/issues/3679","RelatedDescription":"Open issue \"Upgraded projects which compile to NS 2.1, didn't compile, downgrade, now compile fails as well\" (#3679)"},{"Id":"498578523","IsPullRequest":false,"CreatedAt":"2019-09-25T23:55:16","Actor":"livarcocc","Number":"3678","RawContent":null,"Title":"Turn wpf vb template tests back","State":"open","Body":"Turned the test off because the wpf vb template has been removed for now.\r\n\r\ncc @KathleenDollard ","Url":"https://github.com/dotnet/sdk/issues/3678","RelatedDescription":"Open issue \"Turn wpf vb template tests back\" (#3678)"},{"Id":"497966698","IsPullRequest":true,"CreatedAt":"2019-09-25T23:42:33","Actor":"dsplaisted","Number":"3673","RawContent":null,"Title":"Fix build error when UserSecretsId property is defined but API is not referenced","State":"closed","Body":"Fixes dotnet/core#3290","Url":"https://github.com/dotnet/sdk/pull/3673","RelatedDescription":"Closed or merged PR \"Fix build error when UserSecretsId property is defined but API is not referenced\" (#3673)"},{"Id":"498458933","IsPullRequest":false,"CreatedAt":"2019-09-25T18:44:27","Actor":"nguerrera","Number":"3677","RawContent":null,"Title":"Make perf tests run out of band","State":"open","Body":"See discussion #3654, #3676, #3655\r\n\r\nWe should not block the official build on them and end up having to turn them off in an urgent situation as was done for 3.0 release.","Url":"https://github.com/dotnet/sdk/issues/3677","RelatedDescription":"Open issue \"Make perf tests run out of band\" (#3677)"},{"Id":"497674518","IsPullRequest":false,"CreatedAt":"2019-09-24T13:02:29","Actor":"smoothdeveloper","Number":"3670","RawContent":null,"Title":"Suggestion: location of global.json (and like files), should they move to a .dotnet subfolder?","State":"open","Body":"Asking if `global.json` (and other similar files) could be resolved from a `.dotnet` subfolder rather than at the root of repository.\r\n\r\nMotives:\r\n1. root folder is a crawded place\r\n1. `global.json` is to  generic of a name, doesn't convey anything related to dotnet, moving it to a folder, and maybe renaming it?\r\n\r\nSorry if this issue has been brought up, tried to search, and it has been bothering me due to point 1.","Url":"https://github.com/dotnet/sdk/issues/3670","RelatedDescription":"Open issue \"Suggestion: location of global.json (and like files), should they move to a .dotnet subfolder?\" (#3670)"},{"Id":"497672701","IsPullRequest":false,"CreatedAt":"2019-09-24T12:59:18","Actor":"retifrav","Number":"3669","RawContent":null,"Title":"dotnet build ignores .config files from .csproj CopyToOutputDirectory","State":"open","Body":"I noticed that `.csproj` rule\r\n\r\n```\r\n<ItemGroup>\r\n  <None Update=\"log4net.config\" CopyToOutputDirectory=\"Always\" />\r\n</ItemGroup>\r\n```\r\n\r\nis ignored for files with `.config` extension when performing `dotnet build`.\r\n\r\nI've done some testing with the following project:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Update=\"ololo.config\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"ololo.config2\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"ololo.confi\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"log4net.config\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"some.txt\" CopyToOutputDirectory=\"Always\" />\r\n  </ItemGroup>\r\n\r\n  ...\r\n\r\n</Project>\r\n```\r\n\r\nThe following files are successfully copied to the output directory:\r\n\r\n- `ololo.config2`\r\n- `ololo.confi`\r\n- `some.txt`\r\n\r\nBut these files are not copied:\r\n\r\n- `ololo.config`\r\n- `log4net.config`\r\n\r\nLike I said, this happens on `dotnet build`. At the same time `dotnet publish` works fine and copies all the files.\r\n\r\nMy environment:\r\n\r\n```\r\n> dotnet --info\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3669","RelatedDescription":"Open issue \"dotnet build ignores .config files from .csproj CopyToOutputDirectory\" (#3669)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1178341418064138245","CreatedAt":"2019-09-29T16:11:01+00:00","UserScreenname":"dotnet","Text":"#dotNETConf is now available on demand!\n👍 83 speakers\n👍 77 sessions\n👍 40+ hours\n👍 200+ local events around the glob… https://t.co/c5lz2EkS4C","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":255,"FavoriteCount":143,"RawContent":null},{"Id":"1178059427242377217","CreatedAt":"2019-09-28T21:30:29+00:00","UserScreenname":"dotnet","Text":"Hi 👋 @timheuer. Welcome back in @dotnet land. 😀 https://t.co/85GRHHLARg","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":84,"FavoriteCount":8,"RawContent":null},{"Id":"1177599991445106695","CreatedAt":"2019-09-27T15:04:51+00:00","UserScreenname":"dotnet","Text":"The #dotNETConf live event may be over, but that just means that all the sessions are now available to watch whenev… https://t.co/iwCcdYUvJ3","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":4778,"FavoriteCount":425,"RawContent":null},{"Id":"1177009895125737478","CreatedAt":"2019-09-26T00:00:01+00:00","UserScreenname":"dotnet","Text":"…and that's a wrap!!! THANK YOU!!! from all of us at #dotNETconf! 👏 👏 👏 \n\nWatch for our on demand sessions - we'll… https://t.co/h1k6wRrSLg","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":106,"FavoriteCount":15,"RawContent":null},{"Id":"1177001086831538184","CreatedAt":"2019-09-25T23:25:01+00:00","UserScreenname":"dotnet","Text":"Be an A11Y. Build Accessible Web Sites for Everyone is streaming live @ #dotNETConf with @rachelappel The last sess… https://t.co/Cqy7FgAB9Z","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":21,"FavoriteCount":3,"RawContent":null},{"Id":"1176993538233516032","CreatedAt":"2019-09-25T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Mixed Reality with Xamarin and Azure Spatial Anchors with @SweekritiS. Tune in:… https://t.co/VtnLnD72W9","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1176985986494021632","CreatedAt":"2019-09-25T22:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: How containerized #SQLServer makes development easier with @michaeljolley. Watch here:… https://t.co/9sHXsLEbvX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":27,"FavoriteCount":7,"RawContent":null},{"Id":"1176978438521008129","CreatedAt":"2019-09-25T21:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf, @MillerMark gives us the science behind creating great UI. Check it out:… https://t.co/reMT35s4iH","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"1176970887410659330","CreatedAt":"2019-09-25T21:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Modeling Relational Data using #CosmosDB with @southpolesteve. Tune in here:… https://t.co/Fhwy6hw0n3","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1176963337957064704","CreatedAt":"2019-09-25T20:55:01+00:00","UserScreenname":"dotnet","Text":"Flat-tops, feature flags, and finite state machines... Disaster resilience the Waffle House way with @wiredferret i… https://t.co/BmJZBZxRCx","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1176955788922904576","CreatedAt":"2019-09-25T20:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf, @ardalis gives us a tour of Microsoft's Reference #ASPNET Core App, eShopOnWeb. Check… https://t.co/g5arV1PVGg","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":26,"FavoriteCount":7,"RawContent":null},{"Id":"1176948239322484736","CreatedAt":"2019-09-25T19:55:01+00:00","UserScreenname":"dotnet","Text":"Get a gentle intro to Azure #CosmosDB for @ASPNET and #SQLServer devs. @_s_hari is streaming now at #dotNETConf:… https://t.co/zBrBJoz6cT","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1176945465516072961","CreatedAt":"2019-09-25T19:44:00+00:00","UserScreenname":"dotnet","Text":"ICYMI Check out this video with Bart De Smet talking about the System.Linq.Async nuget package that adds some commo… https://t.co/ZrFVZMo6NK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2019-10-01T05:30:39.6463641Z","RunDurationInMilliseconds":16464}