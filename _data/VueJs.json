{"Data":{"Vue-Issues":{"Issues":[{"Id":"422180055","IsPullRequest":true,"CreatedAt":"2019-03-19T04:54:28","Actor":"pikax","Number":"9733","RawContent":null,"Title":"fix(types): allow using functions on the PropTypes (#9692)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9733","RelatedDescription":"Closed or merged PR \"fix(types): allow using functions on the PropTypes (#9692)\" (#9733)"},{"Id":"422060237","IsPullRequest":false,"CreatedAt":"2019-03-19T04:48:00","Actor":"kobe990","Number":"9729","RawContent":null,"Title":"vue 2.6.9, the click event can't bubble on some browsers such as UC browser on all android 8.x, part android 6.x or 9.x","State":"closed","Body":"### Version\r\n2.6.9\r\n\r\n### Reproduction link\r\n[https://github.com/kobe990/testVue](https://github.com/kobe990/testVue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. clone the repository from https://github.com/kobe990/testVue\r\n2. npm i (including the vue 2.6.9)\r\n3. npm run dev\r\n4. use the latest UC browser on android 8.x to open this server URL\r\n5. we will see two div (one is a parent div, another is a child)\r\n6. we bind a click event on the parent div\r\n7. when We click the child div, the click event won't be triggered. If we change the vue version to 2.6.8, It is all right.\r\n\r\n### What is expected?\r\nthe click event can bubble correctly\r\n\r\n### What is actually happening?\r\nthe click event can't bubble correctly in the  vue router render page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9729","RelatedDescription":"Closed issue \"vue 2.6.9, the click event can't bubble on some browsers such as UC browser on all android 8.x, part android 6.x or 9.x\" (#9729)"},{"Id":"422521176","IsPullRequest":false,"CreatedAt":"2019-03-19T03:01:54","Actor":"Dongsheng-Zhang","Number":"9737","RawContent":null,"Title":"datetime-picker支持itemHeight","State":"closed","Body":"### What problem does this feature solve?\r\n可以自定义高度\r\n\r\n### What does the proposed API look like?\r\n:itemHeight\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9737","RelatedDescription":"Closed issue \"datetime-picker支持itemHeight\" (#9737)"},{"Id":"422520346","IsPullRequest":false,"CreatedAt":"2019-03-19T02:55:58","Actor":"Dongsheng-Zhang","Number":"9736","RawContent":null,"Title":"datetime-picker希望支持itemHeight自定义solt高度","State":"closed","Body":"`<mt-datetime-picker \r\n        ref=\"picker\" \r\n        confirmText=\"确认\" \r\n        v-model=\"pickerVisible\" \r\n        type=\"date\" \r\n        :visibleItemCount=\"Number(3)\" \r\n        :itemHeight=\"Number(50)\" \r\n        year-format=\"{value} 年\" \r\n        month-format=\"{value} 月\" \r\n        date-format=\"{value} 日\" \r\n        @confirm=\"handleConfirm()\">\r\n\t\t</mt-datetime-picker>`\r\n","Url":"https://github.com/vuejs/vue/issues/9736","RelatedDescription":"Closed issue \"datetime-picker希望支持itemHeight自定义solt高度\" (#9736)"},{"Id":"422350963","IsPullRequest":false,"CreatedAt":"2019-03-18T20:42:24","Actor":"frlinw","Number":"9735","RawContent":null,"Title":"[2.6.9] Transition enter broken","State":"closed","Body":"### Version\r\n2.6.9\r\n\r\n### Reproduction link\r\n[https://codepen.io/frlinw/pen/zbLOZq](https://codepen.io/frlinw/pen/zbLOZq)\r\n\r\n### Steps to reproduce\r\nclick the \"click me\" zone\r\n\r\n### What is expected?\r\nthe red block should fade in\r\n\r\n### What is actually happening?\r\nthe enter transition is ignored\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9735","RelatedDescription":"Closed issue \"[2.6.9] Transition enter broken\" (#9735)"},{"Id":"422253064","IsPullRequest":false,"CreatedAt":"2019-03-18T14:36:34","Actor":"mcmillenb","Number":"9734","RawContent":null,"Title":"Add path to resolved vue package to vue-template-compiler's \"version mismatch\" error","State":"open","Body":"### What problem does this feature solve?\r\nI was recently attempting to build docs via the `documentation` package, which has the `vue-template-compiler` package as a dependency. [I ran into an issue where the build was failing](https://forum.vuejs.org/t/documentation-js-build-command-choking-on-weird-vue-template-compiler-error/58770) because `vue-template-compiler` was throwing a \"Vue packages version mismatch\" error. \r\n\r\nI did not have vue installed globally or in the `node_modules/` of my project's root directory, and it took me a while to figure out how the package was determining the version of vue and where it was resolving on my machine (I had accidentally installed an npm project in a parent directory creating a `node_modules/` folder with the vue package in it). \r\n\r\nIt would be helpful, when the `vue-template-compiler` throws the \"version mismatch\" error, to display the path the to `vue` package that has been resolved. That way, it would be immediately clear which specific `vue` package on the dev's machine the compiler is comparing its version to. \r\n\r\nIn the Vue Forum discussion, I asked Linus Borg if he thought a pull request to add this feature would be helpful, and he said it might be. I have [created a fork](https://github.com/mcmillenb/vue) and [updated the error message](https://github.com/mcmillenb/vue/blob/dev/packages/vue-template-compiler/index.js) on that forked repo. I'm submitting this feature request to be approved before making the pull request. I also am not sure how to write a unit test for the build error messaging and would appreciate guidance.\r\n\r\n### What does the proposed API look like?\r\nUpdated error message looks like this: \r\n\r\n```\r\nVue packages version mismatch:\r\n\r\n- vue@2.5.22\r\n- vue-template-compiler@2.6.8\r\n\r\nPath to vue package: /Users/brianmcmillen/tests/docs-test/node_modules/vue/dist/vue.runtime.common.js\r\n\r\nThis may cause things to work incorrectly. Make sure to use the same version for both.\r\nIf you are using vue-loader@>=10.0, simply update vue-template-compiler.\r\nIf you are using vue-loader@<10.0 or vueify, re-installing vue-loader/vueify should bump vue-template-compiler to the latest.\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9734","RelatedDescription":"Open issue \"Add path to resolved vue package to vue-template-compiler's \"version mismatch\" error\" (#9734)"},{"Id":"422137309","IsPullRequest":false,"CreatedAt":"2019-03-18T14:20:59","Actor":"cypressious","Number":"9731","RawContent":null,"Title":"Programmatic value update is not reflected in <component :is=\"'input'\"> after manual input was made","State":"closed","Body":"### Version\r\n2.6.9\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/mo9jpol699](https://codesandbox.io/s/mo9jpol699)\r\n\r\n### Steps to reproduce\r\n1. Open the linked codesandbox\r\n2. Type something into the textbox\r\n3. Press the \"Set programmatically\" button.\r\n\r\n### What is expected?\r\nThe textbox should contain the current date, the same value that is printed below.\r\n\r\n### What is actually happening?\r\nThe textbox still contains the manually typed text while the current date is printed below.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9731","RelatedDescription":"Closed issue \"Programmatic value update is not reflected in <component :is=\"'input'\"> after manual input was made\" (#9731)"},{"Id":"422142111","IsPullRequest":true,"CreatedAt":"2019-03-18T10:30:38","Actor":"pikax","Number":"9732","RawContent":null,"Title":"fix(types): support accessing inject as string array (#8969)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Improve typescript\r\n\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nUsing the object style still doesn't work as expected, since I based the implementation to have kinda the same behaviour as Props, it would be needed to create a two more `extend` methods to duplicate `ThisTypedComponentOptionsWithRecordProps` \\ `ThisTypedComponentOptionsWithArrayProps`.\r\n","Url":"https://github.com/vuejs/vue/pull/9732","RelatedDescription":"Open PR \"fix(types): support accessing inject as string array (#8969)\" (#9732)"},{"Id":"422082376","IsPullRequest":false,"CreatedAt":"2019-03-18T08:46:45","Actor":"petrnagy","Number":"9730","RawContent":null,"Title":"Vue not preserving background-related inline styles after component redraw","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/5x81bd6z/](https://jsfiddle.net/5x81bd6z/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust wait 10s for the setTimeout to kick in.\r\n\r\nThe problem is that after the component is redraw, only the background: url(img) is preserved, but the other background-related inline styles are ignored. For example \"background-size: cover\".\r\n\r\nYou will see that after 10s, not only the order of < li > elements will change, but the backgrounds will change too.\r\n\r\n### What is expected?\r\nChange the order of < li > elements and preserve all inline styles.\r\n\r\n### What is actually happening?\r\nOnly part of the inline styles of < li > are preserved after component redraw.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9730","RelatedDescription":"Closed issue \"Vue not preserving background-related inline styles after component redraw\" (#9730)"},{"Id":"421503779","IsPullRequest":false,"CreatedAt":"2019-03-18T08:23:42","Actor":"sqal","Number":"9711","RawContent":null,"Title":"Default scoped slot is not present under data.scopedSlots object in functional component","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/m7thp9o8/](https://jsfiddle.net/m7thp9o8/)\r\n\r\n### Steps to reproduce\r\n- Check console logs\r\n\r\n### What is expected?\r\nI expect `data.scopedSlots` to always be the same as its mirrored object `scopedSlots` in functional component context.\r\n\r\n### What is actually happening?\r\nDefault scoped slot function is undefined in `data.scopedSlots` (but not in `context.scopedSlots`) object unless I explicitly use default scoped slot the template, \r\n\r\n```vue\r\n<template #default>\r\n  <p>main content</p>\r\n</template>\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9711","RelatedDescription":"Closed issue \"Default scoped slot is not present under data.scopedSlots object in functional component\" (#9711)"},{"Id":"421397847","IsPullRequest":true,"CreatedAt":"2019-03-18T08:19:42","Actor":"Justineo","Number":"9709","RawContent":null,"Title":"fix(codegen): inline function expression can be named inside a `v-on`…","State":"closed","Body":"… expression (fix #9707)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9709","RelatedDescription":"Closed or merged PR \"fix(codegen): inline function expression can be named inside a `v-on`…\" (#9709)"},{"Id":"421965397","IsPullRequest":false,"CreatedAt":"2019-03-18T08:00:46","Actor":"patrickas","Number":"9725","RawContent":null,"Title":"Interaction between v-scope and v-if not correct (regression from 2.5.x)","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/1pyxu5ch/1/](http://jsfiddle.net/1pyxu5ch/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe fiddle contains two parts.\r\n\r\nPart 1 is the old working syntax.\r\n\r\nPart 2 is the commented out new syntax that does not work anymore. Un-commenting this part triggers the error.\r\n\r\n### What is expected?\r\ntemplate is only included when the condition is true\r\n\r\n### What is actually happening?\r\nsyntax error\r\n\r\n---\r\nThe fiddle uses 2.6.9 from https://unpkg.com/vue@2.6.9/dist/vue.js but I could not find that version in the drop down so I put 2.6.8 instead.\r\n\r\nThis was actually originally reported in issue #9658 for 2.6.8 and fixed in https://github.com/vuejs/vue/commit/781c70514e01bc402828946805bfad7437c7175e but it seems the fix is not enough since the issue is still happening.\r\n\r\nFiling as a regression since the old functionality will be discontinued in future releases.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9725","RelatedDescription":"Closed issue \"Interaction between v-scope and v-if not correct (regression from 2.5.x)\" (#9725)"},{"Id":"421969770","IsPullRequest":true,"CreatedAt":"2019-03-18T07:47:44","Actor":"VitorLuizC","Number":"9728","RawContent":null,"Title":"fix #9727","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis PR fix #9727.","Url":"https://github.com/vuejs/vue/pull/9728","RelatedDescription":"Closed or merged PR \"fix #9727\" (#9728)"},{"Id":"421969222","IsPullRequest":false,"CreatedAt":"2019-03-18T07:47:44","Actor":"VitorLuizC","Number":"9727","RawContent":null,"Title":"Type of VNodeData style property should accept string values","State":"closed","Body":"### Version\r\n2.6.9\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/pkpkn7ljym](https://codesandbox.io/s/pkpkn7ljym)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust try to use a `string` value for `VNodeData`'s `style` property.\r\n\r\n### What is expected?\r\nVue handle `string` values for `style`, so types should allow the same.\r\n\r\n### What is actually happening?\r\nType of `VNodeData`'s `style` don't accept `string` values.\r\n\r\n---\r\n@flow type declarations has same issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9727","RelatedDescription":"Closed issue \"Type of VNodeData style property should accept string values\" (#9727)"},{"Id":"421967458","IsPullRequest":false,"CreatedAt":"2019-03-17T20:22:41","Actor":"panayotov","Number":"9726","RawContent":null,"Title":"v-model not working inside scoped slots","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://codepen.io/bassta/pen/vPrYdY](https://codepen.io/bassta/pen/vPrYdY)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create new component, add slot to it, bind some data to the slot\r\n2. Create new instance of the component, add input inside slot, bind v-model to it.\r\n\r\n### What is expected?\r\nComponent data, bind to v-model to change\r\n\r\n### What is actually happening?\r\nNothing, doesn't throw error\r\n\r\n---\r\nShowing data works, binding v-model to data does not.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9726","RelatedDescription":"Closed issue \"v-model not working inside scoped slots\" (#9726)"},{"Id":"421847978","IsPullRequest":false,"CreatedAt":"2019-03-17T03:34:30","Actor":"MichaelJCole","Number":"9724","RawContent":null,"Title":"<noscript> -> The client-side rendered virtual DOM tree is not matching server-rendered content","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://stackoverflow.com/a/49202327/1483977](https://stackoverflow.com/a/49202327/1483977)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFacebook pixel is an analytics tracking pixel.  The code includes a <noscript> backup tag.  \r\n\r\nWhen my default layout template includes this noscript tag I get an error like this one:\r\n  \r\n[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.\r\n\r\n### What is expected?\r\nNo warnings\r\n\r\n### What is actually happening?\r\nUnnecessary warnings (Vue doesn't render noscript tags) or a bug (Vue does render noscript tags)\r\n\r\nvue.runtime.esm.js:587 [Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside [p>, or missing [tbody>. Bailing hydration and performing full client-side render.\r\n\r\n---\r\nThis is using Vue bundled in Nuxt 1.0\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9724","RelatedDescription":"Closed issue \"<noscript> -> The client-side rendered virtual DOM tree is not matching server-rendered content\" (#9724)"},{"Id":"421845238","IsPullRequest":false,"CreatedAt":"2019-03-16T19:45:53","Actor":"murilolivorato","Number":"9723","RawContent":null,"Title":"detect outside event does not work inside VUE Modal","State":"closed","Body":"\r\nHello guys , I did a drop down compoennt that open , if click inside and close if click outside . I used this function to detect INSIDE / OUTSITE -\r\n\r\nhttps://jsfiddle.net/Linusborg/yzm8t8jq/\r\n\r\nthis is the image of my component -\r\n![vueexample](https://user-images.githubusercontent.com/19832238/54480735-e9bf1e00-480a-11e9-9d05-c03706e9826c.jpg)\r\n\r\n\r\nIt works , but I tried to use this inside VUE Modal , and this function to detect inside / outside the compoent , does not work inside the VUE modal .\r\n\r\nI wold like to detect a click inside the VUE Modal , but NOT inside my component , or outside the component . Does any one there had the same problem ?\r\n\r\nThanks","Url":"https://github.com/vuejs/vue/issues/9723","RelatedDescription":"Closed issue \"detect outside event does not work inside VUE Modal\" (#9723)"},{"Id":"421798892","IsPullRequest":false,"CreatedAt":"2019-03-16T13:00:16","Actor":"GreenMashimaro","Number":"9722","RawContent":null,"Title":"Why does computed change trigger filters?","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://codepen.io/GreenMashimaro/pen/qvYNGE?editors=1111](https://codepen.io/GreenMashimaro/pen/qvYNGE?editors=1111)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a new timer, add a computed, and the computed change triggers the filter change\r\n\r\n### What is expected?\r\nfilters:flt. It will only be triggered once\r\n\r\nMy understanding is that filters will only be triggered once, because there is no correlation between myself. step_count and cpt_val.\r\n\r\n### What is actually happening?\r\nComputed change trigger filters.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9722","RelatedDescription":"Closed issue \"Why does computed change trigger filters?\" (#9722)"},{"Id":"421797853","IsPullRequest":false,"CreatedAt":"2019-03-16T11:59:22","Actor":"toreskogp","Number":"9721","RawContent":null,"Title":"Tagged templates inside data bindings","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/626m32y4xw?fontsize=14](https://codesandbox.io/s/626m32y4xw?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse tagged template inside data binding:\r\n```\r\n<span>{{ t`Hello ${'Vue'}`}}</span>\r\n```\r\n\r\n### What is expected?\r\nI would expect the data binding to return the result of the tagged template function.\r\n\r\n### What is actually happening?\r\nI am getting an error message saying that tagged templates are not supported.\r\n\r\n---\r\nInitially thought this was a feature request since it says that tagged templates are not supported. But @posva closed the original issue https://github.com/vuejs/vue/issues/9719 and asked for a repro, so here it is.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9721","RelatedDescription":"Closed issue \"Tagged templates inside data bindings\" (#9721)"},{"Id":"421794684","IsPullRequest":false,"CreatedAt":"2019-03-16T10:52:05","Actor":"toyouzi","Number":"9720","RawContent":null,"Title":"两组不同的数据，在input type=checkbox时 v-model自动关联。","State":"closed","Body":"当我点击item1或者item2的input时 v-model同时绑定了它们俩 \r\n````html\r\n<table>\r\n <tr v-for=\"item1 in list1\" :key=\"item1.index\">\r\n   <td>{{item1.parentProductName}}</td>\r\n   <td>{{item1.productName}}</td>\r\n   <td><input type=\"checkbox\" v-model=\"item1.status\" :checked=\"item1.status\" @click=\"item1.status = !item1.status\"></td>\r\n </tr>\r\n</table>\r\n<table>\r\n <tr v-for=\"item2 in list2\" :key=\"item2.index\">\r\n   <td>{{item2.parentProductName}}</td>\r\n   <td>{{item2.productName}}</td>\r\n   <td><input type=\"checkbox\" v-model=\"item2.status\" :checked=\"item2.status\" @click=\"item2.status = !item2.status\"></td>\r\n </tr>\r\n</table>\r\n````","Url":"https://github.com/vuejs/vue/issues/9720","RelatedDescription":"Closed issue \"两组不同的数据，在input type=checkbox时 v-model自动关联。\" (#9720)"},{"Id":"421788447","IsPullRequest":false,"CreatedAt":"2019-03-16T09:37:08","Actor":"toreskogp","Number":"9719","RawContent":null,"Title":"Tagged templates inside data bindings","State":"closed","Body":"### What problem does this feature solve?\r\nAccording to the documentation, Vue.js supports the full power of JavaScript expressions inside data bindings. So I got surprised when I tried to use a tagged template inside a data binding and noticed that it did not work.\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates\r\n\r\nTemplate literals are probably the cleanest way to create strings in JavaScript. By extending template literals with a tag you can get even more power out of them, that could solve cases like translations. One of the highest hits I got on Google when I searched for i18n JavaScript was an article describing how that could be handled in a clean fashion with template tags: https://medium.com/@WebReflection/easy-i18n-in-10-lines-of-javascript-poc-eb9e5444d71e\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nI Wish for the tagged template for be a vaild expression inside databindings:\r\n```\r\n<span>{{ $t`Hello ${'Vue'}` }}</span>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9719","RelatedDescription":"Closed issue \"Tagged templates inside data bindings\" (#9719)"},{"Id":"421773595","IsPullRequest":false,"CreatedAt":"2019-03-16T05:52:00","Actor":"KaelWD","Number":"9718","RawContent":null,"Title":"v-on listeners array","State":"open","Body":"### What problem does this feature solve?\r\nTwo components with scoped slots that provide events to a child component. If they are used together some listeners may be overwritten if not normalised first. \r\n\r\n```html\r\n<v-menu>\r\n  <template #activator=\"{ on: menu }\">\r\n    <v-tooltip bottom>\r\n      <template #activator=\"{ on: tooltip }\">\r\n        <v-btn v-on=\"{ ...tooltip, ...menu }\"> <!-- If both have a click event, only the menu will work -->\r\n          Dropdown w/ Tooltip\r\n        </v-btn>\r\n      </template>\r\n      <span>Im A ToolTip</span>\r\n    </v-tooltip>\r\n  </template>\r\n  <v-list>[...]</v-list>\r\n</v-menu>\r\n```\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<component v-on=\"[{ click: foo }, { click: bar }]\">\r\n```\r\nEquivalent to:\r\n```html\r\n<component v-on=\"{ click: [foo, bar] }\">\r\n```\r\n\r\nIn the first example:\r\n```html\r\n<v-menu>\r\n  <template #activator=\"{ on: menu }\">\r\n    <v-tooltip bottom>\r\n      <template #activator=\"{ on: tooltip }\">\r\n        <v-btn v-on=\"[tooltip, menu]\">\r\n          Dropdown w/ Tooltip\r\n        </v-btn>\r\n      </template>\r\n      <span>Im A ToolTip</span>\r\n    </v-tooltip>\r\n  </template>\r\n  <v-list>[...]</v-list>\r\n</v-menu>\r\n```\r\n\r\nCurrently this throws `[Vue warn]: v-on without argument expects an Object value`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9718","RelatedDescription":"Open issue \"v-on listeners array\" (#9718)"},{"Id":"421668728","IsPullRequest":false,"CreatedAt":"2019-03-15T19:26:40","Actor":"Cameron637","Number":"9717","RawContent":null,"Title":"Reference error: performance is not defined when running unit tests (mocha)","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://github.com/Cameron637/vue-runtime-error-reproduction](https://github.com/Cameron637/vue-runtime-error-reproduction)\r\n\r\n\r\n\r\n\r\n\r\n### Environment info\r\n```\r\n\r\nEnvironment Info:\r\n\r\n  System:\r\n    OS: macOS 10.14.3\r\n    CPU: (8) x64 Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\r\n  Binaries:\r\n    Node: 10.15.2 - ~/.nvm/versions/node/v10.15.2/bin/node\r\n    Yarn: Not Found\r\n    npm: 6.9.0 - ~/.nvm/versions/node/v10.15.2/bin/npm\r\n  Browsers:\r\n    Chrome: 72.0.3626.121\r\n    Firefox: 59.0.2\r\n    Safari: 12.0.3\r\n  npmPackages:\r\n    @vue/babel-helper-vue-jsx-merge-props:  1.0.0-beta.2 \r\n    @vue/babel-plugin-transform-vue-jsx:  1.0.0-beta.2 \r\n    @vue/babel-preset-app:  3.5.1 \r\n    @vue/babel-preset-jsx:  1.0.0-beta.2 \r\n    @vue/babel-sugar-functional-vue:  1.0.0-beta.2 \r\n    @vue/babel-sugar-inject-h:  1.0.0-beta.2 \r\n    @vue/babel-sugar-v-model:  1.0.0-beta.2 \r\n    @vue/babel-sugar-v-on:  1.0.0-beta.2 \r\n    @vue/cli-overlay:  3.5.1 \r\n    @vue/cli-plugin-babel: ^3.5.0 => 3.5.1 \r\n    @vue/cli-plugin-eslint: ^3.5.0 => 3.5.1 \r\n    @vue/cli-plugin-unit-mocha: ^3.5.0 => 3.5.1 \r\n    @vue/cli-service: ^3.5.0 => 3.5.1 \r\n    @vue/cli-shared-utils:  3.5.1 \r\n    @vue/component-compiler-utils:  2.6.0 \r\n    @vue/eslint-config-airbnb: ^4.0.0 => 4.0.0 \r\n    @vue/preload-webpack-plugin:  1.1.0 \r\n    @vue/test-utils: 1.0.0-beta.29 => 1.0.0-beta.29 \r\n    @vue/web-component-wrapper:  1.2.0 \r\n    eslint-plugin-vue: ^5.0.0 => 5.2.2 \r\n    vue: ^2.6.6 => 2.6.9 \r\n    vue-eslint-parser:  2.0.3 \r\n    vue-hot-reload-api:  2.3.3 \r\n    vue-loader:  15.7.0 \r\n    vue-style-loader:  4.1.2 \r\n    vue-template-compiler: ^2.5.21 => 2.6.9 \r\n    vue-template-es2015-compiler:  1.9.1 \r\n  npmGlobalPackages:\r\n    @vue/cli: 3.5.0\r\n\r\n```\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm install` and then run `npm run test:unit`\r\n\r\n### What is expected?\r\nThis is a freshly created vue project with the vue-cli. Running the example unit test should pass successfully.\r\n\r\n### What is actually happening?\r\nThe unit test fails with a reference error from vue.runtime.esm.js. \r\n\r\n---\r\nThis is happening because vue 2.6.9 (which is installed by npm by default even though it is ahead of the latest stable release) references the global performance attribute that should be available in the browser on line 4251 of vue.runtime.esm.js, but it is not available in the globals provided by jsdom-global. I've made a pull request to jsdom-global (here: https://github.com/rstacruz/jsdom-global/pull/49) to fix its unavailability, but that repo doesn't seem to be actively maintained and it's doubtful that the fix will be merged anytime soon. It would probably be wise to use a different package or a fork of this one.  If it helps, you're welcome to use my fork which already has the fix: https://github.com/Cameron637/jsdom-global\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9717","RelatedDescription":"Closed issue \"Reference error: performance is not defined when running unit tests (mocha)\" (#9717)"},{"Id":"421642772","IsPullRequest":false,"CreatedAt":"2019-03-15T18:07:09","Actor":"youliang999","Number":"9716","RawContent":null,"Title":"使用vue,js前端输入框，输入中文带字母 比如输入 “我的“ 显示 ”wd我的”","State":"closed","Body":"### What problem does this feature solve?\r\n使用vue,js前端输入框，输入中文带字母 比如输入 “我的“ 显示 ”wd我的”\r\n\r\n### What does the proposed API look like?\r\n使用vue,js前端输入框，输入中文带字母 比如输入 “我的“ 显示 ”wd我的”\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9716","RelatedDescription":"Closed issue \"使用vue,js前端输入框，输入中文带字母 比如输入 “我的“ 显示 ”wd我的”\" (#9716)"},{"Id":"421642289","IsPullRequest":false,"CreatedAt":"2019-03-15T18:05:46","Actor":"youliang999","Number":"9715","RawContent":null,"Title":"使用vue,js前端输入框，输入中文带字母 比如输入 “我的“ 显示 ”wd我的”","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/issues/1790](https://github.com/vuejs/vue/issues/1790)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nddd\r\n\r\n### What is expected?\r\n能正常输入\r\n\r\n### What is actually happening?\r\n不能正常输入中文\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9715","RelatedDescription":"Closed issue \"使用vue,js前端输入框，输入中文带字母 比如输入 “我的“ 显示 ”wd我的”\" (#9715)"},{"Id":"421641729","IsPullRequest":false,"CreatedAt":"2019-03-15T18:04:29","Actor":"youliang999","Number":"9714","RawContent":null,"Title":"使用vue,js前端输入框，输入中文会带上字母 比如输入 “我的“ 显示 ”wd我的” 求大佬解释，生产问题","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/issues/1790](https://github.com/vuejs/vue/issues/1790)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nddd\r\n\r\n### What is expected?\r\n能正常输入\r\n\r\n### What is actually happening?\r\n不能正常输入中文\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9714","RelatedDescription":"Closed issue \"使用vue,js前端输入框，输入中文会带上字母 比如输入 “我的“ 显示 ”wd我的” 求大佬解释，生产问题\" (#9714)"},{"Id":"421601474","IsPullRequest":false,"CreatedAt":"2019-03-15T16:49:21","Actor":"franciscolourenco","Number":"9713","RawContent":null,"Title":"transition-group item with flex parent moves to top-left","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://codepen.io/andymerskin/pen/eRNvLR](https://codepen.io/andymerskin/pen/eRNvLR)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click in any rectangle except the first one\r\n\r\n### What is expected?\r\nThe rectangle should fade out, but not move\r\n\r\n### What is actually happening?\r\nThe rectagle moves to the left-top corner while fading away\r\n\r\n---\r\nThis seems to be caused by the flex parent combined with absolute positioning of the rectangle leaving\r\n\r\n### Related\r\n- https://github.com/vuejs/vue/issues/8973 – The solution suggested in this ticket only works if the rest of the elements are not being animated with `move`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9713","RelatedDescription":"Closed issue \"transition-group item with flex parent moves to top-left\" (#9713)"},{"Id":"421565994","IsPullRequest":false,"CreatedAt":"2019-03-15T15:19:38","Actor":"pdcmoreira","Number":"9712","RawContent":null,"Title":"v-bind only if child is expecting a prop","State":"closed","Body":"### What problem does this feature solve?\r\nLet's say we're using dynamic components to switch between tabs. Each tab is a component.\r\nIn the parent component, we have a bunch of data that might or might not be useful/required to the children, so we just go ahead and pass all that data as props to the children.\r\nEach child declares some of those props, but less props than the parent is passing, which means that the props the child is not taking are being attached to the DOM as attributes.\r\n\r\nMy proposal is a modifier for `v-bind` that tells Vue that it should only consider the `v-bind` if the child is expecting it, so that data doesn't leak to the DOM.\r\n\r\n### What does the proposed API look like?\r\nSince `.prop` is already taken, I can't think of a good modifier name right now. `.ifexpected` comes to mind.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9712","RelatedDescription":"Closed issue \"v-bind only if child is expecting a prop\" (#9712)"},{"Id":"421402236","IsPullRequest":false,"CreatedAt":"2019-03-15T08:22:03","Actor":"mypridelife","Number":"9710","RawContent":null,"Title":"当.vue文件中的div的class名称为m-ad时，会导致节点内容显示不出来","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsbin.com/lilicek/edit?html,output](https://jsbin.com/lilicek/edit?html,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n\r\n\r\n### What is expected?\r\n页面显示hello world\r\n\r\n### What is actually happening?\r\n浏览器：谷歌。\r\n页面未显示任何内容\r\n\r\n---\r\n在普通的html中未复现，故怀疑是vue的问题，才疏学浅，不知道从何排查起，求告知，谢谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9710","RelatedDescription":"Closed issue \"当.vue文件中的div的class名称为m-ad时，会导致节点内容显示不出来\" (#9710)"},{"Id":"421386898","IsPullRequest":false,"CreatedAt":"2019-03-15T07:29:37","Actor":"zhangenming","Number":"9708","RawContent":null,"Title":"v-for can access 'this' key word","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://codepen.io/zhangenming/pen/Ygaqjb](https://codepen.io/zhangenming/pen/Ygaqjb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen\r\n\r\n### What is expected?\r\nv-for can't access 'this' key word\r\n\r\n### What is actually happening?\r\nv-for can access 'this' key word\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9708","RelatedDescription":"Closed issue \"v-for can access 'this' key word\" (#9708)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"422549443","IsPullRequest":false,"CreatedAt":"2019-03-19T05:24:02","Actor":"wghust","Number":"2657","RawContent":null,"Title":"refresh in windows for about 20 times, it will redirect to default page.","State":"open","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router](https://github.com/vuejs/vue-router)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1：windows system\r\n2：refresh one page without default page, eg: '/abc/axxx'\r\n3：it will sometimes redirect to '/'\r\n\r\n### What is expected?\r\nno auto redirect\r\n\r\n### What is actually happening?\r\nredirect to default page '/';\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2657","RelatedDescription":"Open issue \"refresh in windows for about 20 times, it will redirect to default page.\" (#2657)"},{"Id":"422525276","IsPullRequest":true,"CreatedAt":"2019-03-19T03:18:58","Actor":"ChangedenCZD","Number":"2656","RawContent":null,"Title":"$route加入queryArray参数可将符合规则的query key解析成数组","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n$route加入queryArray参数可将符合规则的query key解析成数组;\r\n事例url: http://localhost:8080/route-matching/params-with-regex/123?a=1,2,3&a=1&%24b=1\r\n`{\r\n  \"meta\": {},\r\n  \"path\": \"/params-with-regex/123\",\r\n  \"hash\": \"\",\r\n  \"query\": {\r\n    \"a\": [\r\n      \"1,2,3\",\r\n      \"1\"\r\n    ],\r\n    \"$b\": \"1\"\r\n  },\r\n  \"params\": {\r\n    \"id\": \"123\"\r\n  },\r\n  \"fullPath\": \"/params-with-regex/123?a=1,2,3&a=1&%24b=1\",\r\n  \"queryArray\": {\r\n    \"$a\": [\r\n      \"1\",\r\n      \"2\",\r\n      \"3\",\r\n      \"1\"\r\n    ],\r\n    \"$$b\": [\r\n      \"1\"\r\n    ]\r\n  }\r\n}`","Url":"https://github.com/vuejs/vue-router/pull/2656","RelatedDescription":"Open PR \"$route加入queryArray参数可将符合规则的query key解析成数组\" (#2656)"},{"Id":"422499127","IsPullRequest":true,"CreatedAt":"2019-03-19T03:11:11","Actor":"ChangedenCZD","Number":"2655","RawContent":null,"Title":"test-pr","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2655","RelatedDescription":"Closed or merged PR \"test-pr\" (#2655)"},{"Id":"422075664","IsPullRequest":false,"CreatedAt":"2019-03-18T07:38:42","Actor":"srinivasaraopasupuleti","Number":"2654","RawContent":null,"Title":"router focus","State":"closed","Body":"routes=[{\r\npath:'/home',\r\ncomponent:Home},children:[\r\n{path:'child1' component:Child1},\r\n{path:'child2' component:Child2},\r\n{path:'child3' component:Child3},\r\n{path:'child4' component:Child4},\r\n{path:'subchild1' component:SubChild3},\r\n{path:'subchild2' component:SubChild4},\r\n]\r\nparent component\r\n<router-link :to=\"/child1\"  active-class=\"active\" ></router-link>\r\n\r\n<router-view ></router-view>\r\n\r\nchild component \r\n<router-link :to=\"/subchild1\"  active-class=\"active\" ></router-link>\r\n<router-view ></router-view>\r\nsubchild component\r\n\r\nnavbar  Home   Action  Contact \r\n\r\nsidenavbar                                                  content\r\n                                                                       subchild router \r\nchild1\r\nchild2\r\nchild3\r\nchild4\r\n Home child1  active or \r\nHome child2  active  or\r\nHome child3   active \r\nwhen we click on subchild  but when i select child2 route  active class not getting applied to Home i.e Home is losing focus and when i select subchild route both Home and child1 are losing focus \r\nCould any one help me with that Thanks \r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2654","RelatedDescription":"Closed issue \"router focus\" (#2654)"},{"Id":"421773126","IsPullRequest":false,"CreatedAt":"2019-03-16T09:38:10","Actor":"diavrank","Number":"2653","RawContent":null,"Title":"How to reuse a named view with a nested nested route in Vue?","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have searched in lots of parts of Internet (stackoverflow,vue documentation, blogs, etc.) and I haven´t found the solution that I need. So, the issue is the following:\r\n\r\n**routes.js**\r\n\r\n```\r\n{\r\n    path:'/',\r\n    components:{\r\n        allPageView:LytSPA\r\n    },\r\n    meta:{\r\n        requiresAuth:true\r\n    },\r\n    children:[\r\n        {\r\n            path:'',\r\n            name:'admin',\r\n            components:{\r\n                sectionView:AdminDashboard\r\n            }\r\n        },\r\n        {\r\n            name:'admin.users',\r\n            path:'usuarios',\r\n            components:{\r\n                sectionView:Users\r\n            },\r\n            children:[\r\n                {\r\n                    name:'admin.users.create',\r\n                    path:'crear', \r\n                    components:{\r\n                        sectionView:UsersCreateEdit\r\n                    }\r\n                }\r\n            ]\r\n        }]}\r\n```\r\n\r\nSo, the paths are: / , /usuarios and /usuarios/crear.\r\n\r\nMy views are: App.vue (with a named view), LytSPA.vue (with a named view), AdminDashboard.vue, Users.vue, UsersCreateEdit. So, I have 2 node views and 3 leaf views.\r\n\r\n**App.vue**\r\n\r\n```\r\n<template>\r\n<router-view name=\"allPageView\"></router-view>\r\n</template>\r\n```\r\n\r\n**LytSPA.vue**\r\n\r\n```\r\n<template>\r\n<div>\r\n    <header>\r\n        <header-view></header-view>\r\n    </header>\r\n    <transition name=\"slide-left-aside\">\r\n        <aside v-show=\"!collapsed\">\r\n            <aside-view @collapse=\"collapseAside\"></aside-view>\r\n        </aside>\r\n    </transition>\r\n    <transition name=\"slide-expand-button\">\r\n        <b-button @click=\"collapseAside(false)\" id=\"btnExpand\" v-show=\"collapsed\">\r\n            <font-awesome-icon icon=\"chevron-right\"/>\r\n        </b-button>\r\n    </transition>\r\n    <section id=\"sectionSPA\" :class=\"{collapsed: collapsed}\">\r\n        <breadcrumb-view></breadcrumb-view>\r\n        <router-view name=\"sectionView\" key=\"$route.fullPath\"></router-view>\r\n    </section>\r\n</div></template>\r\n```\r\n\r\nAs you can see, in **LayoutSPA.vue** I dropped my main views in the container **sectionView**, thus:\r\n\r\n - when the path is / load the Dashboard view.\r\n - when the path is /usuarios load the Users view.\r\n\r\nAnd here comes the problem, when the path is /usuarios/crear doesn´t load the UsersCreateEdit view, else it keeps the last one (Users.vue). However, the routing is working because I put a redirect validation for unknown URLs, since the url usuarios/crear doesn´t change so that's work but doesn´t load the view.\r\n\r\nI have already worked of this way with UI-Router in AngularJS and there wasn´t any problem because it works with inheritance of states, but I want to know if exists any way to do the same in Vue???\r\n\r\n\r\n### What is expected?\r\nShow the view UserCreateEdit.vue\r\n\r\n### What is actually happening?\r\nShow the view Users.vue ,this is incorrect, because it shows the same view for 2 different paths.\r\n\r\n---\r\nNote: I have an alternative solution but I don´t like it, because I have to put the admin.users.create route as a sibling of admin.users and it works but I need that it be nested because I need to retrieve the matched routes to build my breadcrumb and I don't want to parse the path to build it.\r\n\r\nImage of running application: https://i.stack.imgur.com/3ZC1c.png\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2653","RelatedDescription":"Closed issue \"How to reuse a named view with a nested nested route in Vue?\" (#2653)"},{"Id":"421517252","IsPullRequest":false,"CreatedAt":"2019-03-15T13:41:30","Actor":"adamdehaven","Number":"2652","RawContent":null,"Title":"\"Cannot read property ‘name’ of undefined\" – vue-router works as long as I don't use router-link component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/6w7y01qo5z?fontsize=14](https://codesandbox.io/s/6w7y01qo5z?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI’ve created a CodeSandbox with my relevant files, however, the bug does not happen in the CodeSandbox or when I run locally. Only when I embed my code in the environment in which it needs to run, I receive the following error:\r\n\r\n![TypeError](https://forum.vuejs.org/uploads/default/original/3X/b/8/b8146297ebe50cd3b4c26d08d1318e826e48bd84.png)\r\n\r\nIf I click on the first call in the stack, here’s the line that’s throwing the error:\r\n\r\n![Error Line](https://forum.vuejs.org/uploads/default/original/3X/0/b/0b0ab3249aa249d8754db0ac3427b30dd0e956ca.png)\r\n\r\nThe `<router-link>` items do not render on the page, however the rest of my Vue app (anything that is not related to vue-router) works fine.\r\n\r\nOnce the page is loaded, if I manually change the URL to `/foo`, the links will then appear, and work as expected.\r\n\r\nThe error only occurs when there is a `<router-link>` element on the page. If I create a function and attach it to a click event (e.g. on a Button) such as shown below, I have no issues. This literally only errors when I use the `<router-link>` element:\r\n\r\n```\r\nmethods: {\r\n    ...\r\n    onButtonClick() {\r\n        // This works fine; no errors!\r\n        this.$router.push({ name: 'bar' })\r\n    }\r\n}\r\n```\r\n\r\nIt also works perfectly if I put the function directly on `<a/>` element:\r\n\r\n`<a href=\"#\" @click.prevent=\"$router.push({ name: 'Foo' })\">Foo</a>`\r\n\r\n \r\n\r\n### What is expected?\r\nThe `<router-link>` component should render properly on load, without error.\r\n\r\n### What is actually happening?\r\nIf there is a `<router-link>` component on the page, the error (referenced above) appears. If I use `this.$router.push()` there are no issues.\r\n\r\n---\r\nThe related Vue JS Forum post can be found here: https://forum.vuejs.org/t/cannot-read-property-name-of-undefined-works-locally-but-not-in-production-environment/58975\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2652","RelatedDescription":"Closed issue \"\"Cannot read property ‘name’ of undefined\" – vue-router works as long as I don't use router-link component\" (#2652)"},{"Id":"421355696","IsPullRequest":false,"CreatedAt":"2019-03-15T08:02:49","Actor":"kingofdelphi","Number":"2651","RawContent":null,"Title":"Hash router remove initial slash not working","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/kingofdelphi/vue-realworld-example-app/blob/master/src/router/index.js](https://github.com/kingofdelphi/vue-realworld-example-app/blob/master/src/router/index.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. yarn install\r\n2. yarn serve\r\n\r\n### What is expected?\r\nClicking on links should change the address bar properly.\r\nTyping the address on address bar should route to the proper page.\r\nBrowser refresh should not change url i.e. url must stay same on browser refresh / reload.\r\n\r\n### What is actually happening?\r\nClicking on links is changing the address bar properly with proper route(this is expected behavior)\r\nTyping the address on address bar doesn't route to the proper page.\r\nBrowser refresh should not convert /#url to /#/url ie do not add slash automatically. \r\n\r\n---\r\nI had successfully used react-router to solve the problems listed above, but I can't seem to get it to work with vue-router.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2651","RelatedDescription":"Closed issue \"Hash router remove initial slash not working\" (#2651)"},{"Id":"420805111","IsPullRequest":false,"CreatedAt":"2019-03-15T07:58:05","Actor":"Christhofernatalius","Number":"2648","RawContent":null,"Title":"Need prop for inactive-class","State":"closed","Body":"### What problem does this feature solve?\r\nWe already have prop `active-class` that will be appended to the element when the route is active.\r\nBut what if that we need to specify class only when the route is not active?\r\n\r\nexample:\r\nwhen active => `.btn-primary`\r\nwhen inactive => `.btn-secondary`\r\n\r\n### What does the proposed API look like?\r\n```\r\n<router-link\r\n    :to=\"{name: 'purchase'}\"\r\n    class=\"btn\"\r\n    active-class=\"btn-primary\"\r\n    inactive-class=\"btn-secondary\">\r\n    Purchase\r\n</router-link>\r\n```\r\n![image](https://user-images.githubusercontent.com/13524958/54327450-c47cb500-463c-11e9-88e6-2f2abd1e3ee8.png)\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2648","RelatedDescription":"Closed issue \"Need prop for inactive-class\" (#2648)"},{"Id":"421354284","IsPullRequest":false,"CreatedAt":"2019-03-15T04:59:31","Actor":"kingofdelphi","Number":"2650","RawContent":null,"Title":"Creating custom hash router","State":"closed","Body":"I need to use hash router. But the route must not contain slash after /# as shown below.\r\n\r\n/#/user/test/ => /#user/test/\r\n\r\n\r\n\r\nI tried with vue-realworld-example-app app using mode: 'hash' on router config. Also, I removed the initial / on the routes. But, when I type in the address bar /#user/test, the route doesn't work properly. But, if I click on a link it works as expected. My changes to the routes file\r\n\r\nhttps://github.com/kingofdelphi/vue-realworld-example-app/commit/a2aabb633676a4508e48252f5f021f75e820337e\r\n\r\nAlso, on refreshing the page using browser refresh button /#user/test gets converted to /#/user/test. \r\n\r\nWhat I want:\r\n1. Clicking on links should change the address bar properly(this is working fine)\r\n2. Typing the address on address bar should route to the proper page(this is not working)\r\n3. browser refresh should not convert /#url  to /#/url ie do not add slash automatically. (this is not working)","Url":"https://github.com/vuejs/vue-router/issues/2650","RelatedDescription":"Closed issue \"Creating custom hash router\" (#2650)"},{"Id":"421228234","IsPullRequest":false,"CreatedAt":"2019-03-14T20:38:52","Actor":"epaterlini","Number":"2649","RawContent":null,"Title":"Buggy Chromium altKey persistence in touch events prevents router-link to act properly","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[http://link-not-needed](http://link-not-needed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOn Kubuntu 18.04, using Chromium 72, do the following:\r\n- setup a simple vue-router view and some links\r\n- open that page with Chromium and try the links with touch events, it works\r\n- then press Alt-Tab to switch to another application and switch back to Chromium\r\n\r\n### What is expected?\r\nRouter links should work as expected\r\n\r\n### What is actually happening?\r\nRouter links are working if triggered with mouse events.\r\nIf triggered via touch events, Chromium incorrectly sets \"altKey\" to true in the original DOM event and that prevents router-link to complete (due to this first line in guardEvent function:\r\nif (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return } )\r\n\r\n---\r\nDon't know also if this affects other users, for my use case for now I have commented out the modifier keys check in \"guardEvent\"\r\n(vue-router.esm.js)\r\n\r\nI built a custom PC equipped with Linux and a touchscreen and encountered this \"behaviour\" while testing the app.\r\nI know that this may not be related with vue-router, just asking if my workaround is feasible and can be introduced eventually in the codebase.\r\nI do not test it with other versions of Chrome or other browsers.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2649","RelatedDescription":"Closed issue \"Buggy Chromium altKey persistence in touch events prevents router-link to act properly\" (#2649)"},{"Id":"419870637","IsPullRequest":true,"CreatedAt":"2019-03-13T09:03:20","Actor":"lamby","Number":"2646","RawContent":null,"Title":"Make the build reproducible","State":"closed","Body":"Whilst working on the [Reproducible Builds](https://reproducible-builds.org/) effort, we noticed that vue-router could not be built reproducibly.\r\n\r\nThis is due to it embedding the current build year into the file headers. This has been replaced with using [`SOURCE_DATE_EPOCH`](https://reproducible-builds.org/specs/source-date-epoch/) where available. This was originally filed in Debian as [#924378](https://bugs.debian.org/924378).","Url":"https://github.com/vuejs/vue-router/pull/2646","RelatedDescription":"Closed or merged PR \"Make the build reproducible\" (#2646)"},{"Id":"420144846","IsPullRequest":true,"CreatedAt":"2019-03-12T18:35:37","Actor":"btoo","Number":"2647","RawContent":null,"Title":"feat(types): use 'Component' type from 'vue' package to allow usage of FunctionalComponent","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2647","RelatedDescription":"Open PR \"feat(types): use 'Component' type from 'vue' package to allow usage of FunctionalComponent\" (#2647)"},{"Id":"417094970","IsPullRequest":true,"CreatedAt":"2019-03-10T19:24:47","Actor":"psalaets","Number":"2638","RawContent":null,"Title":"docs: fix broken link","State":"closed","Body":"At the bottom of the API Reference page, the \"In Component Guards\" link in the [Component Enabled Options section](https://router.vuejs.org/api/#component-enabled-options) wasn't pointing at the correct header.","Url":"https://github.com/vuejs/vue-router/pull/2638","RelatedDescription":"Closed or merged PR \"docs: fix broken link\" (#2638)"},{"Id":"419056481","IsPullRequest":false,"CreatedAt":"2019-03-09T10:24:44","Actor":"gutropolis","Number":"2645","RawContent":null,"Title":"Want to run function on 1st route when user will go from 1st route to 2nd and 2nd to 1st route ","State":"closed","Body":"\r\n\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2645","RelatedDescription":"Closed issue \"Want to run function on 1st route when user will go from 1st route to 2nd and 2nd to 1st route \" (#2645)"},{"Id":"418538306","IsPullRequest":false,"CreatedAt":"2019-03-08T12:24:15","Actor":"Jejec","Number":"2643","RawContent":null,"Title":"translations with vue-router and vue-i18n","State":"closed","Body":"### What problem does this feature solve?\r\nHello,\r\n\r\nI apologize if I don't make my request correctly but I only had a choice for an error or a new feature.\r\nI have been looking for a solution to translate my urls as cleanly as possible according to the language.  I was wondering if you had a particular solution to propose?\r\n\r\nThank you for your time.\r\n\r\n### What does the proposed API look like?\r\nI just don't have a viable solution right now.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2643","RelatedDescription":"Closed issue \"translations with vue-router and vue-i18n\" (#2643)"},{"Id":"418710297","IsPullRequest":false,"CreatedAt":"2019-03-08T11:30:05","Actor":"rderimay","Number":"2644","RawContent":null,"Title":"Route params not passed when staying on same page","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/1946Leau/4/](https://jsfiddle.net/1946Leau/4/)\r\n\r\n### Steps to reproduce\r\nWhen defining routes which do not contain a parameter which is passed in the route params, the component params are updated only when coming from another route. In short, when the route url does not change, nothing is updated.\r\n\r\nIf you call `$router.push({ name:'a', params: { foo: 1 } })` and `$router.push({ name:'a', params: { foo: 2 } })` alternatively, the value of `foo` passed to the component will be updated only if `:foo` is included in the route url (Example B in Fiddle) or if you force an update by using a random query str (Example C in Fiddle)\r\n\r\n### What is expected?\r\nI will expect to have `foo` passed also in the case it is not included in the route url.\r\nAt least, having a way to force the update without the trick with the query string would be nice.\r\n\r\n### What is actually happening?\r\n`foo` is updated only the first time\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2644","RelatedDescription":"Closed issue \"Route params not passed when staying on same page\" (#2644)"},{"Id":"417887894","IsPullRequest":false,"CreatedAt":"2019-03-06T17:01:22","Actor":"mrksbnch","Number":"2642","RawContent":null,"Title":"Special character + is automatically removed from query string","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/zkl0jwwk43](https://codesandbox.io/s/zkl0jwwk43)\r\n\r\n### Steps to reproduce\r\nAdd a query string with the special character \"+\" to the URL in Codesandbox, e.g. add \"?email=test+test@test.com\" to the end of the URL: https://zkl0jwwk43.codesandbox.io/?email=test+test@test.com\r\n\r\n### What is expected?\r\nI can access the query parameter \"test\" with `this.$route.query.test` to get the value \"test+test@test.com\".\r\n\r\n### What is actually happening?\r\nWhen I try to get the value of the query parameter \"test\" I only get \"test test@test.com\" (space instead of \"+\").\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2642","RelatedDescription":"Closed issue \"Special character + is automatically removed from query string\" (#2642)"},{"Id":"417287736","IsPullRequest":false,"CreatedAt":"2019-03-05T13:02:59","Actor":"cvn","Number":"2641","RawContent":null,"Title":"Passing an undefined query param can prevent the url from updating","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://plnkr.co/edit/yJJpcKuhYQwdOk3nZcZs?p=preview](https://plnkr.co/edit/yJJpcKuhYQwdOk3nZcZs?p=preview)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Start with the url `/?q=foo&color=bar`.\r\n2. `this.$router.push({query: {q: 'foo', offset: undefined}})`\r\n\r\n### What is expected?\r\nI expect the url to change to `/?q=foo`\r\n\r\n### What is actually happening?\r\nThe url does not change\r\n\r\n---\r\nI'm doing search filtering using query params. Every time I change a filter, I\r\nadd/remove/modify the appropriate param, and reset my pagination by setting\r\nan offset param to undefined. In my app, the combination of removing a param\r\nand offset not being set to begin with, causes the route not to update.\r\n\r\nThis issue is easy enough to work around, but it took me a while to figure out\r\nwhat was going on.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2641","RelatedDescription":"Open issue \"Passing an undefined query param can prevent the url from updating\" (#2641)"},{"Id":"417158334","IsPullRequest":true,"CreatedAt":"2019-03-05T07:38:35","Actor":"tmorehouse","Number":"2640","RawContent":null,"Title":"fix(router): prevent memory leak by removing app reference from $router.apps once app destroyed (Fixes #2639)","State":"open","Body":"Prevent memory leaks by removing app(s) from `$router.apps` array once app has been destroyed.\r\n\r\nDoes not remove main app (`this.app`) from `this.apps` when it is destroyed through, but maybe it should (remove from both `$router.apps` array and `$router.app`?).\r\n\r\nFixes #2639\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2640","RelatedDescription":"Open PR \"fix(router): prevent memory leak by removing app reference from $router.apps once app destroyed (Fixes #2639)\" (#2640)"},{"Id":"417146203","IsPullRequest":false,"CreatedAt":"2019-03-05T06:57:28","Actor":"tmorehouse","Number":"2639","RawContent":null,"Title":"[bug] Memory leak with this.$router.apps array and secondary apps on page being destroyed","State":"open","Body":"### Version\r\n3.0.2 (and earlier)\r\n\r\n### Reproduction link\r\n[https://bootstrap-vue.js.org/play/](https://bootstrap-vue.js.org/play/)\r\n\r\nSee next steps to easily reproduce the issue.\r\n\r\n### Steps to reproduce\r\nJust go to https://bootstrap-vue.js.org/play/\r\n\r\nAnd enter the following code in the HTML Template area:\r\n\r\n```js\r\n<div>\r\n  <p>This App UID: {{ _uid }}</p>\r\n  <p>$route.apps length: {{ $router.apps.length }}</p>\r\n  <pre>{{\r\n    $router.apps.map(\r\n      a => {\r\n      \treturn { uid: a._uid, destroyed: a._isDestroyed }\r\n      }\r\n    ).reverse()\r\n  }}</pre>\r\n</div>\r\n```\r\n\r\nand just enter `{ }` into the JavaScript area (or leave it as is)\r\n\r\nHit space / delete the space every second or so in either the HTML entry area, or the javascript entry area (there is a 0.75 second debouncer on the app creation/destroy on keypress).\r\n\r\nEach time, the rendered app will be destroyed and recreated.\r\n\r\nThe app shows a mapped version of `$router.apps` array (in the results section)\r\n\r\nYou will see the array grow and grow and grow, with all these `destroyed` instances sticking around.\r\n\r\nIt looks like vue-router isn't cleaning out `$router.apps` array during the destroy hook of the app. (`hook:destroyed').\r\n\r\n### What is expected?\r\nThat the apps that have been `$destroyed` would be removed from the `$router.apps` array\r\n\r\n### What is actually happening?\r\nThe destroyed app references remain in the `$router.apps` array, causing memory usage to grow/leak.\r\n\r\n---\r\nI've noticed a memory leak with `this.$router.apps` array.  It might be related (but not sure) to other memory leaks reported.\r\n\r\nOn a docs site we have, we have a playground that allows you to create and test mini apps in real time.\r\n\r\nAs the user edits the test app, it destroys (app.$destroy()), and then re compiles and mounts the new version.\r\n\r\nEach time the playground app is created, it gets appended to the `this.$router.apps` array, while the destroyed app still remains in the array (albeit it has a destroyed instance, but there is still quite a bit of stuff in the reference).\r\n\r\nThe playground is running under Nuxt.js, and each test in the playground is created as a new app (with a reference to the main $router instance).\r\n\r\nWe are adding in a temporary fix that will scan the `$router.apps` array, and slice out the destroyed app reference.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2639","RelatedDescription":"Open issue \"[bug] Memory leak with this.$router.apps array and secondary apps on page being destroyed\" (#2639)"},{"Id":"416928732","IsPullRequest":false,"CreatedAt":"2019-03-04T18:49:22","Actor":"joelworsham","Number":"2637","RawContent":null,"Title":"Accessibility keyboard shortcuts","State":"closed","Body":"### What problem does this feature solve?\r\nWhen tabbing over router links, pressing the space or enter key does not trigger navigation. Although I can add this layer of logic myself, it seems that this should be natively supported.\r\n\r\n### What does the proposed API look like?\r\nTo the public, nothing would change, the links would just work on keyboard navigation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2637","RelatedDescription":"Closed issue \"Accessibility keyboard shortcuts\" (#2637)"},{"Id":"416901206","IsPullRequest":false,"CreatedAt":"2019-03-04T17:10:19","Actor":"species7213uv","Number":"2636","RawContent":null,"Title":"directive on vue-router does not run update hook when created inside functional component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xqge8a2m/](https://jsfiddle.net/xqge8a2m/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFirst of all, apologies, because my jsfiddle seems to have a different problem. There the render function of the functional component is performed each time the route changes. I don't understand why.\r\nThis does not occur in my project, which I tried to reproduce.\r\nThere I get the \"inserted\" hook, but never the updated, even if I press the links and change the route (and the activeClasses gets updated)\r\n\r\n### What is expected?\r\nThe directives update hook should be triggered\r\n\r\n### What is actually happening?\r\nThe updated hook is not triggered. Only the inserted (when I first render the page). Then nothing more.\r\n\r\n---\r\nI am using the latest vue version 2.6.8.\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2636","RelatedDescription":"Closed issue \"directive on vue-router does not run update hook when created inside functional component\" (#2636)"},{"Id":"416740170","IsPullRequest":false,"CreatedAt":"2019-03-04T11:08:55","Actor":"eugenweissbart","Number":"2635","RawContent":null,"Title":"Tests failing on lazy loading","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router](https://github.com/vuejs/vue-router)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Clone a vue-loader git repo and checkout to 3.0.2\r\n- Run `npm install`\r\n- Run `npm test`\r\n\r\n### What is expected?\r\nAll tests run smoothly\r\n\r\n### What is actually happening?\r\n```ERROR in ./lazy-loading/app.js 32:9\r\nModule parse failed: Unexpected token (32:9)\r\nYou may need an appropriate loader to handle this file type.\r\n|   // a Promise.\r\n| };var Foo = function Foo() {\r\n>   return import('./Foo.vue');\r\n| };\r\n|\r\n @ multi es6-promise/auto ./lazy-loading/app.js lazy-loading[1]```\r\n\r\nThe corresponding test fails afterwards\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2635","RelatedDescription":"Closed issue \"Tests failing on lazy loading\" (#2635)"},{"Id":"416527961","IsPullRequest":false,"CreatedAt":"2019-03-03T15:28:26","Actor":"Fiouz","Number":"2634","RawContent":null,"Title":"Doc: missing RouteRecord type definiton ","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/api/](https://router.vuejs.org/api/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Read the API documentation at https://router.vuejs.org/api/#routes for the `routes` router construction options and see that the `routes` field is designated as an array of `RouteConfig` (with an accompanying definition of that type).\r\n2. Read the API documentation at https://router.vuejs.org/api/#route-object-properties for `$route.matched` and see that the copy of the aforementioned `routes` option is now designated as an array of `RouteRecord` (with not definition of that type)\r\n\r\n### What is expected?\r\nIf the latter is a copy of the former, it should be expected that it should be the same object type or that an explicit relationship between the 2 types be mentioned in the API doc as a canonical definition.\r\n\r\n### What is actually happening?\r\nThere is no canonical definition of what a `RouteRecord` type is, we only have an example that denotes the array of `RouteConfig` and we don't understand why copying a type does not result of an instance of the same type.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2634","RelatedDescription":"Open issue \"Doc: missing RouteRecord type definiton \" (#2634)"},{"Id":"416314158","IsPullRequest":false,"CreatedAt":"2019-03-02T10:12:51","Actor":"joshua-s","Number":"2633","RawContent":null,"Title":"Multiple named views in single vue file","State":"closed","Body":"### What problem does this feature solve?\r\nIt would be great if I could specify multiple named views in a single .vue file. This would make it easier and more centralized to manage applications that require multiple views for each route. By having all the code in one file, it would also make it easy to update both components simultaneously.\r\n\r\n### What does the proposed API look like?\r\nFor instance, if I had header and content views:\r\n```html\r\n<!-- Named slot -->\r\n<template slot=\"header\">\r\n  <div>\r\n    Header content\r\n  </div>\r\n</template>\r\n\r\n<!-- Default slot -->\r\n<template>\r\n  <div>\r\n    Body content\r\n  </div>\r\n</template>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2633","RelatedDescription":"Closed issue \"Multiple named views in single vue file\" (#2633)"},{"Id":"415722332","IsPullRequest":true,"CreatedAt":"2019-02-28T22:39:52","Actor":"gengjiawen","Number":"2632","RawContent":null,"Title":"chore(ci): use official image","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2632","RelatedDescription":"Closed or merged PR \"chore(ci): use official image\" (#2632)"},{"Id":"415703323","IsPullRequest":false,"CreatedAt":"2019-02-28T16:13:30","Actor":"ch3njust1n","Number":"2631","RawContent":null,"Title":"Dynamic Route Appending Query","State":"closed","Body":"Couldn't find anything on Stack or in the doc for [router push](https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort). Leaving this here in case anyone else runs into this issue. Please update the docs.\r\n\r\n### Problem\r\nIn the code below, if I navigate to the Content vue and then search using the Search component it imported, the dynamic route will append the search to the content path instead of changing the path and bringing up the search page e.g.  `localhost:9090/content/search?term=foo` instead of `localhost:9090/search?term=foo` This is caused by the dynamic route `:id`.\r\n\r\n### Solution\r\nPrepend `/` to the path string in the object you pass to `router.push()` as shown below with `/search`.\r\n\r\n**Search:**\r\n```\r\n<input \r\n   type=\"search\"\r\n   name=\"q\"\r\n   v-on:keydown.enter.prevent=\"search()\"\r\n   v-model=\"query\">\r\n...\r\nsearch() {\r\n   router.push({path: '/search', query: {term: this.query} })\r\n}\r\n...\r\n```\r\n\r\n**Content:**\r\n```\r\n<template>\r\n   <Search></Search>\r\n</template>\r\n...\r\n```\r\n\r\n**Router:**\r\n```\r\nexport default new Router({\r\n\tmode: 'history',\r\n\tbase: process.env.BASE_URL,\r\n\troutes: [\r\n           {\r\n              path: '/content/:id',\r\n              name: 'content',\r\n              component: () => import('./views/Content.vue')\r\n           },\r\n           {\r\n              path: '/search',\r\n              name: 'search',\r\n              component: () => import('./views/Search.vue')\r\n           }\r\n        ]\r\n})\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2631","RelatedDescription":"Closed issue \"Dynamic Route Appending Query\" (#2631)"},{"Id":"415105366","IsPullRequest":false,"CreatedAt":"2019-02-27T13:02:35","Actor":"Ihor-Shevtsov","Number":"2629","RawContent":null,"Title":"Components for child routes doesn't show","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/ih-shevtsov/pen/ywNVEe](https://codepen.io/ih-shevtsov/pen/ywNVEe)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click on \"Go to nested route 1\" -> route changed to  /home/nested-route-1\r\n2. Click on \"Go to nested route 2\" -> route changed to  /home/nested-route-2\r\n\r\n### What is expected?\r\nComponents for specific child route must be shown. \r\n\r\n### What is actually happening?\r\nComponents for child routes doesn't show. It is works only for \"parent\" route.\r\n\r\n---\r\nI tried to research this issue in router's code. Seems like incorrect router depth for any reason (https://github.com/vuejs/vue-router/blob/v3.0.2/dist/vue-router.esm.js#L58-L69)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2629","RelatedDescription":"Closed issue \"Components for child routes doesn't show\" (#2629)"},{"Id":"415107355","IsPullRequest":false,"CreatedAt":"2019-02-27T12:58:08","Actor":"yangzhuq","Number":"2630","RawContent":null,"Title":"关于router用query传参时的格式问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsbin.com/yujepuwamo/edit?html](https://jsbin.com/yujepuwamo/edit?html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n当使用 如下方法传递参数时\r\n this.$router.push({\r\n        path: \"/xxx\",\r\n        query: {\r\n          id: “yyy”\r\n        }\r\n      });\r\n\r\n### What is expected?\r\n按照URL的标准格式 将会跳转至如下格式\r\nscheme://host:port/path?id=yyy/#/xxx\r\n\r\n### What is actually happening?\r\n然而生成路径时是如下格式\r\nscheme://host:port/path/#/xxx?id=yyy\r\n\r\n---\r\n这样的结果是在URL不符合路径传参的规则，当然这不影响用 this.$route.query的方法拿到所要传递的参数。但是当用window.location.search的方法时会发现参数被存放在hash的内容了。是否能统一格式呢？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2630","RelatedDescription":"Closed issue \"关于router用query传参时的格式问题\" (#2630)"},{"Id":"415008055","IsPullRequest":false,"CreatedAt":"2019-02-27T08:58:42","Actor":"piotrek-horodenski","Number":"2628","RawContent":null,"Title":"query string parameters disappears when pasting url to the browser","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6motza4y/1/](https://jsfiddle.net/6motza4y/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. prepare components and routing with nested route\r\n2. run app\r\n3. paste absolute url into the browser with query parameters added to the path to the nested route\r\n4. query params disappears and are not accessible thru `$route` object\r\n\r\n### What is expected?\r\nquery params should endure\r\n\r\n### What is actually happening?\r\nquery params are lost\r\n\r\n---\r\njsfiddle doesn't enable navigating to it by pasting query params to the url, so it should be reproduced locally\r\n\r\nThis does not occur when route path is not nested\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2628","RelatedDescription":"Closed issue \"query string parameters disappears when pasting url to the browser\" (#2628)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"421852602","IsPullRequest":true,"CreatedAt":"2019-03-17T04:44:46","Actor":"dollinad","Number":"1523","RawContent":null,"Title":"Fix minor errors in README.md","State":"closed","Body":"Changes involve:\r\n- Removal of dead links: data flow.png and vuex.png\r\n- Removal of discourse markers (although, also, in addition) to make sentences precise","Url":"https://github.com/vuejs/vuex/pull/1523","RelatedDescription":"Closed or merged PR \"Fix minor errors in README.md\" (#1523)"},{"Id":"420554353","IsPullRequest":true,"CreatedAt":"2019-03-13T15:10:35","Actor":"duyanpeng","Number":"1522","RawContent":null,"Title":"Add  subscribeAction  unit","State":"open","Body":"Add  subscribeAction api unit\r\nthank you","Url":"https://github.com/vuejs/vuex/pull/1522","RelatedDescription":"Open PR \"Add  subscribeAction  unit\" (#1522)"},{"Id":"420548516","IsPullRequest":true,"CreatedAt":"2019-03-13T15:06:18","Actor":"duyanpeng","Number":"1521","RawContent":null,"Title":"add subscribeAction unit","State":"closed","Body":"add subscribeAction api unit ","Url":"https://github.com/vuejs/vuex/pull/1521","RelatedDescription":"Closed or merged PR \"add subscribeAction unit\" (#1521)"},{"Id":"418608570","IsPullRequest":false,"CreatedAt":"2019-03-10T18:15:17","Actor":"zzzgit","Number":"1518","RawContent":null,"Title":"Why can’t I assign a socketio object to state in strict mode? ","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/1060733/54004291-023a9300-4190-11e9-8112-17f8814c1fd1.png)\r\n![image](https://user-images.githubusercontent.com/1060733/54004314-154d6300-4190-11e9-808f-b28bf5396181.png)\r\n![image](https://user-images.githubusercontent.com/1060733/54004330-226a5200-4190-11e9-896e-765daa3626c8.png)\r\n\r\n\r\n### What is expected?\r\n\r\n\r\n### What is actually happening?\r\nin strict mode, I can't assign socket object to state.\r\nis there a solution?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1518","RelatedDescription":"Closed issue \"Why can’t I assign a socketio object to state in strict mode? \" (#1518)"},{"Id":"418332613","IsPullRequest":true,"CreatedAt":"2019-03-10T13:44:16","Actor":"davidsandoz","Number":"1517","RawContent":null,"Title":"Make mutation and action payload optional in definition file","State":"closed","Body":"When testing a mutation without payload in TypeScript, it complains that about the missing payload, even though it's not mandatory.\r\n\r\nThis PR simply makes the payload optional.\r\n\r\nFixes #1491","Url":"https://github.com/vuejs/vuex/pull/1517","RelatedDescription":"Closed or merged PR \"Make mutation and action payload optional in definition file\" (#1517)"},{"Id":"418852210","IsPullRequest":false,"CreatedAt":"2019-03-08T16:11:11","Actor":"jcupps","Number":"1520","RawContent":null,"Title":"Feature Request: Private State","State":"open","Body":"### What problem does this feature solve?\r\nI would like the ability to make certain state private to the store, i.e. accessible within store getters, actions, and mutations, but not directly accessible by consumers (e.g. components). This would prevent unintended reading or manipulation of state which should be done through getters or actions/mutations respectively. As far as I know, there is no good way to achieve this today in Vuex.\r\n\r\n### What does the proposed API look like?\r\nThe API could look something like this:\r\n\r\nA store:\r\n```javascript\r\n{\r\n  state() {\r\n    return {\r\n      somethingPublic: ''\r\n    };\r\n  },\r\n\r\n  privateState() {\r\n    return {\r\n      somethingPrivate: []\r\n    };\r\n  },\r\n\r\n  getters: {\r\n    filtered: (state, getters, privateState) => privateState.somethingPrivate.filter(...)\r\n  }\r\n}\r\n```\r\n\r\nIn a component:\r\n```javascript\r\n// works:\r\nthis.$store.state.somethingPublic\r\nthis.$store.getters.filtered\r\n// doesn't work:\r\nthis.$store.state.somethingPrivate\r\nthis.$store.privateState.somethingPrivate\r\n```\r\n\r\nThanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1520","RelatedDescription":"Open issue \"Feature Request: Private State\" (#1520)"},{"Id":"418840190","IsPullRequest":true,"CreatedAt":"2019-03-08T15:42:49","Actor":"vaga","Number":"1519","RawContent":null,"Title":"docs(fr): Fix typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1519","RelatedDescription":"Open PR \"docs(fr): Fix typo\" (#1519)"},{"Id":"413266987","IsPullRequest":true,"CreatedAt":"2019-03-07T18:10:47","Actor":"jennyliang220","Number":"1514","RawContent":null,"Title":"doc: change ECMASCript into ECMAScript","State":"closed","Body":"![image](https://user-images.githubusercontent.com/8498677/53224814-fa1f2580-36b0-11e9-8f4c-28f387d6161b.png)\r\n","Url":"https://github.com/vuejs/vuex/pull/1514","RelatedDescription":"Closed or merged PR \"doc: change ECMASCript into ECMAScript\" (#1514)"},{"Id":"418113903","IsPullRequest":false,"CreatedAt":"2019-03-07T03:36:37","Actor":"zzzgit","Number":"1516","RawContent":null,"Title":"Why can’t I assign a socketio object to state in strict mode","State":"closed","Body":"```javacript\r\nexport default {\r\n\tstate: {\r\n\t\tsocket: null,\r\n\t},\r\n\tmutations: {\r\n\t\tkeepSocket: (state, payload)=>{\r\n\t\t\tstate.socket = payload\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t}\r\n}\r\n```\r\n\r\nI am using `vuex`, if I try to set a [socket-io](https://socket.io/) client object to state in strict mode, I will get an error like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1060733/53930690-35681e00-40cd-11e9-966f-33e86f37044f.png)\r\n","Url":"https://github.com/vuejs/vuex/issues/1516","RelatedDescription":"Closed issue \"Why can’t I assign a socketio object to state in strict mode\" (#1516)"},{"Id":"417789787","IsPullRequest":false,"CreatedAt":"2019-03-06T12:56:21","Actor":"hezhuojie","Number":"1515","RawContent":null,"Title":"Bug: getters of a dynamic module will lose after unregistering other module","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsbin.com/bejenutewi/edit?js,console](https://jsbin.com/bejenutewi/edit?js,console)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njust one the page [https://jsbin.com/bejenutewi/edit?js,console](https://jsbin.com/bejenutewi/edit?js,console)\r\n\r\n### What is expected?\r\nresult of `store.getters['mod/getOne']` should always be 1\r\n\r\n### What is actually happening?\r\ngetter `mod/getOne` is missing, return `undefined`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1515","RelatedDescription":"Open issue \"Bug: getters of a dynamic module will lose after unregistering other module\" (#1515)"},{"Id":"410330210","IsPullRequest":false,"CreatedAt":"2019-02-23T15:17:55","Actor":"djam90","Number":"1509","RawContent":null,"Title":"Unit tests do not run when importing router into store and store into router","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/djam90/vuex-vue-router-issue](https://github.com/djam90/vuex-vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm run test:unit` and see the failure. To get the tests to run again, do not import the store into the router and the router into the store.\r\n\r\n### What is expected?\r\nThe tests should run fine and circular imports should work. They *DO* work in the browser just not in Mocha testing environment. \r\n\r\n### What is actually happening?\r\nError as follows:\r\n\r\n```\r\nTypeError: Cannot read property 'getters' of undefined\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:261:1\r\n    at Array.forEach (<anonymous>)\r\n    at assertRawModule (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:260:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:186:1)\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:200:1\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1\r\n    at Array.forEach (<anonymous>)\r\n    at forEachValue (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:199:1)\r\n    at new ModuleCollection (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:160:1)\r\n    at new Store (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:311:1)\r\n```\r\n\r\n---\r\nMy VueX store needs to be able to import the router so it can do routing things like navigate to another page.\r\nMy router needs to be able to access state from VueX to determine what to do in a `router.beforeEach` handler.\r\n\r\nI have asked for help on Stack Overflow:\r\nhttps://stackoverflow.com/questions/54691789/unable-to-import-vuex-store-into-router-and-router-into-store-in-mocha-tests\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1509","RelatedDescription":"Closed issue \"Unit tests do not run when importing router into store and store into router\" (#1509)"},{"Id":"412632780","IsPullRequest":true,"CreatedAt":"2019-02-21T19:16:28","Actor":"perborgen","Number":"1512","RawContent":null,"Title":"Added Scrimba lessons","State":"closed","Body":"Here are the Scrimba lessons localized and with an `override.styl` file for the styling. Did I do it right?","Url":"https://github.com/vuejs/vuex/pull/1512","RelatedDescription":"Closed or merged PR \"Added Scrimba lessons\" (#1512)"},{"Id":"412637975","IsPullRequest":false,"CreatedAt":"2019-02-20T21:31:16","Actor":"tleeaf","Number":"1513","RawContent":null,"Title":"Naming store state array 'queue' results in one dropped array member","State":"closed","Body":"I named one of my store state members 'queue', which resulted in unexpected behavior, namely that one member of the array would disappear when testing the app in-browser. This occurs independently of any other actions or mutations. I confirmed this by checking the result in vue devtools for chrome, in the vuex tab, and also by adding a v-for that produced simple tags dependent on the data in the 'queue' array.\r\n\r\n`export const store = new Vuex.Store({\r\n  state: {\r\n     queue: [ \r\n      {id: 1333333333}, //one of these members will be dropped \r\n      {id: 1222222222},\r\n      {id: 1111111111}\r\n    ],\r\n    vocabulary: [],\r\n    lessons: [],    \r\n  },\r\n  mutations, actions, getters\r\n})`","Url":"https://github.com/vuejs/vuex/issues/1513","RelatedDescription":"Closed issue \"Naming store state array 'queue' results in one dropped array member\" (#1513)"},{"Id":"409173630","IsPullRequest":false,"CreatedAt":"2019-02-18T18:56:17","Actor":"visualjerk","Number":"1505","RawContent":null,"Title":"Infinite Loop With Error Handler And Vuex","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/z6ww1zp2q4](https://codesandbox.io/s/z6ww1zp2q4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- open browser console\r\n\r\n### What is expected?\r\nNot getting an infinite render loop:\r\n[Vue warn]: You may have an infinite update loop in a component render function.\r\n\r\n### What is actually happening?\r\nGetting an infinite render loop\r\n\r\n---\r\nThis happens when you handle an error that was caused during rendering and try to commit it to the store.\r\n\r\nIt looks like a component that throws an error tries to rerender after the store is updated, even so it doesn't use the store's state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1505","RelatedDescription":"Closed issue \"Infinite Loop With Error Handler And Vuex\" (#1505)"},{"Id":"411557104","IsPullRequest":true,"CreatedAt":"2019-02-18T17:28:27","Actor":"Jinjiang","Number":"1511","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/a6973fa...31e4fbc\r\n/ping @Justineo","Url":"https://github.com/vuejs/vuex/pull/1511","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1511)"},{"Id":"411250556","IsPullRequest":true,"CreatedAt":"2019-02-17T23:34:11","Actor":"brophdawg11","Number":"1510","RawContent":null,"Title":"Add support for namespace functions in mapXXX helpers","State":"open","Body":"This is a stab at adding the functionality requested by https://github.com/vuejs/vuex/issues/863.\r\n\r\nI also noticed that there was another attempt at this in https://github.com/vuejs/vuex/pull/924, but the diff seems to be beyond the scope of just the change.\r\n\r\nUnit tests have been added, but no changes have yet been made to TypeScript types or documentation, etc.","Url":"https://github.com/vuejs/vuex/pull/1510","RelatedDescription":"Open PR \"Add support for namespace functions in mapXXX helpers\" (#1510)"},{"Id":"410145165","IsPullRequest":true,"CreatedAt":"2019-02-14T06:15:56","Actor":"parth67","Number":"1508","RawContent":null,"Title":"Fixed issue#1507 : Memory leak happening while using registerModule/u…","State":"open","Body":"Fixes #1507 \r\n\r\nClosure function was fixed with helper function partial which doesn't retain oldVm in environment.","Url":"https://github.com/vuejs/vuex/pull/1508","RelatedDescription":"Open PR \"Fixed issue#1507 : Memory leak happening while using registerModule/u…\" (#1508)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-02-13T15:23:18","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"closed","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Closed or merged PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-13T15:21:16","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Closed or merged PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"409797501","IsPullRequest":false,"CreatedAt":"2019-02-13T13:09:45","Actor":"skkart","Number":"1507","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mrj8spu0/](https://jsfiddle.net/mrj8spu0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the JSFiddle link mentioned as part of this issue.\r\n2. Check and record the heap memory in the browser on initial stage.\r\n3. Click on the \"Register\" button to dynamically register Module B 100 times\r\n4. Now we will see an increase in heap memory on account of registering module 100 times.\r\n5. Click on \"Un-Register\" button to dynamically un-register Module B 100 times\r\n6. Check the heap memory again, at this point will see an jump in memory usage on account of un-registering 100 module. \r\n\r\n### What is expected?\r\nHeap memory generated on step 3 & 5 must be cleared after step 6. (Final stage)\r\n\r\n### What is actually happening?\r\nHeap memory of the browser is not getting cleared.\r\n\r\n---\r\nWe are observing memory leak of Store._vm while using registerModule/unregisterModule extensively.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n\r\noldVm.$destroy(); \r\noldVm = null; // This is the missing code\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52727462-4ac0bf80-2fdb-11e9-91ce-7dd012cba4b5.png)\r\n\r\n[Heap-20190213T220212.heaptimeline.zip](https://github.com/vuejs/vuex/files/2861246/Heap-20190213T220212.heaptimeline.zip)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1507","RelatedDescription":"Open issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1507)"},{"Id":"409792179","IsPullRequest":false,"CreatedAt":"2019-02-13T12:56:14","Actor":"skkart","Number":"1506","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"We are observing memory leak of Store._vm while using registerModule/unregisterModule.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nI have created an demo link to illustrate the above mentioned problem\r\n[jsFiddle link](https://jsfiddle.net/mrj8spu0/)\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n**_oldVm.$destroy(); \r\noldVm = null;      // This is the missing code_**\r\n```\r\nfunction resetStoreVM (store, state, hot) {\r\n    var oldVm = store._vm;\r\n\r\n    ...\r\n\t...\r\n\r\n    if (oldVm) {\r\n      if (hot) {\r\n        // dispatch changes in all subscribed watchers\r\n        // to force getter re-evaluation for hot reloading.\r\n        store._withCommit(function () {\r\n          oldVm._data.$$state = null;\r\n        });\r\n      }\r\n\r\n      // Existing Code\r\n      Vue.nextTick(function () { return oldVm.$destroy(); });\r\n       \r\n      // The OldVm Object is still in heap even after destroy\r\n      // Appropriate Code\r\n      oldVm.$destroy(); \r\n      oldVm = null;\r\n    }\r\n  }\r\n```\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52712275-1983c780-2fba-11e9-8c67-43b24afe56e1.png)\r\n\r\n[Heap-20190213T172945.heapsnapshot.zip](https://github.com/vuejs/vuex/files/2860354/Heap-20190213T172945.heapsnapshot.zip)\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1506","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1506)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-13T11:12:36","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Closed issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-02-10T09:25:00","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-03-19T05:30:42.4667565Z","RunDurationInMilliseconds":1510}