{"Data":{"GitHubIssues":{"Issues":[{"Id":"360159251","IsPullRequest":true,"CreatedAt":"2018-09-16T21:01:15","Actor":"rynowak","Number":"1417","RawContent":null,"Title":"Add support for generic-typed components","State":"closed","Body":"## What is it?\r\n\r\nThis change adds the ability to define and consume generic-typed components from both C# and Razor.\r\n\r\n**GenericBlink.cshtml**\r\n```\r\n@typeparam TItem\r\n\r\n<blink>\r\n  @ChildContent(Item)\r\n</blink>\r\n\r\n@functions {\r\n    [Parameter] RenderFragment<TItem> ChildContent { get; set; }\r\n    [Parameter] TItem Item { get; set;}\r\n\r\n}\r\n```\r\n\r\n```\r\n<GenericBlink TItem=string Item=\"@Message\">\r\n  <div>Your message was: @context.ToLowerInvariant()</div>\r\n</GenericBlink>\r\n\r\n@functions {\r\n    [Parameter] string Message { get; set; }\r\n}\r\n```\r\n\r\nCurrently when consuming a component from Razor, you must specific the type arguments. Support for type inference of usage of generic-typed components is coming next.\r\n\r\nYou can define type parameters on a component with the new `@typeparam` directive. There is currently no support for type constraints when defining generic-typed components from Razor.\r\n\r\nIf you are defining a component from C# then everything should 'just work' the way you'd expect.\r\n\r\nMost of the work and tricky cases are related to making it possible to consume generic-typed components in generated code.\r\n\r\n## How does it work\r\n\r\nWhen we discover a generic-typed component, we synthesize an extra 'type-argument' attribute for each type-parameter. This gives us intellisense and completion support for specifying types when using the component. The type argument must be a nominal type (like the inside of a `typeof(...)` expression.. ie, it can't be a variable.\r\n\r\nOnce we've bound the component tree and processed cross-cutting features like event handlers and `bind` we find each generic-typed component and process the type parameters. We rewrite the type name of the component and the type name of each parameter that's set (for type-checking) and do code generation with the type-arguments substituted in.\r\n\r\nThis approach obviously won't be used for type-inference, but it's an important feature to provide for cases where you want to (or need to) be specific. \r\n\r\n## Misc\r\n\r\nWhen setting a generic-typed parameter, you won't get support for the shorthand the Razor supports for `string` attributes.\r\n\r\nEx: `<Generic TValue=string Value=\"Foo\" />`\r\nIn this example if `Value` is of type `TValue` then `Foo` will be interpreted as C# not as the contents of a string. \r\n\r\n--\r\n\r\nWhen using generics, there's always the possibility that the error messages could be confusing or misleading when the generic types can't be figured out. I've tried my best to minimize the error cases that you'll get in the editor, so that you can clearly see the error that Blazor reports about missing generic types. If you hit cases where the error messages are misleading, please let us know.","Url":"https://github.com/aspnet/Blazor/pull/1417","RelatedDescription":"Closed or merged PR \"Add support for generic-typed components\" (#1417)"},{"Id":"360675231","IsPullRequest":false,"CreatedAt":"2018-09-16T20:28:42","Actor":"JohnyL","Number":"1434","RawContent":null,"Title":"Error when using C# code in onclick handler of button","State":"open","Body":"I am new to Blazor and I liked it very much. I want to put my time into learning it, so I began from beginning. :)\r\nI was watching [this video](https://youtu.be/MiLAE6HMr10?t=2193) and was trying to set C# code for `onclick` handler of `button`. However, I receive error:\r\n\r\n> Argument 1: cannot convert from 'void' to 'string'\r\n\r\nHere's screenshot of TodoList.cshtml:\r\n![IMG1](https://8hnsoa.am.files.1drv.com/y4mMvxGjcz63kZWfLdKyhpaqEpvmtOfc49NYMVRkUFQuc4ZhUYgJ_Nck0ND97xtLFspXxpzJgyitVExZyVxB5Tfb-fb1tTfqp7fGt2cFSvkMpzOh-J0p5Ivi_EeZMWbodV_zOidXQNZdBW7Ve-wUqBMhPlpzclc0f2XuT_28CKJioWIkTTfrGq6O2uNizNCK64jxSUxQjwTzBiTt8JWUC-gwQ?width=1025&height=611&cropmode=none)","Url":"https://github.com/aspnet/Blazor/issues/1434","RelatedDescription":"Open issue \"Error when using C# code in onclick handler of button\" (#1434)"},{"Id":"360667627","IsPullRequest":false,"CreatedAt":"2018-09-16T18:57:13","Actor":"JamesNK","Number":"1433","RawContent":null,"Title":"NRE exception with Newtonsoft.Json","State":"open","Body":"Hi\r\n\r\nThis PR was raised for Newtonsoft.Json - https://github.com/JamesNK/Newtonsoft.Json/pull/1828\r\nI thought this issue was fixed with a linker configuration change - https://github.com/mono/mono/issues/8872\r\n\r\nCan you double check that this fix is shipping with Blazor so it Just Works for users.","Url":"https://github.com/aspnet/Blazor/issues/1433","RelatedDescription":"Open issue \"NRE exception with Newtonsoft.Json\" (#1433)"},{"Id":"360651988","IsPullRequest":false,"CreatedAt":"2018-09-16T18:38:05","Actor":"JohnyL","Number":"1432","RawContent":null,"Title":"Visual Studio doesn't show \"Blazor\" project template","State":"closed","Body":"Visual Studio doesn't show \"Blazor\" project template:\r\n\r\n![IMG1](https://jy6aig.am.files.1drv.com/y4mauLwTx069pbd96LhWvNZx5BPsgsnmIdSAlWlzLbNhPHf2iI3eNqBe_0_vvl5Px4w7YynXwGSQ4eQtsYVPMuabrqf816F1kQiewqcDOiT5FIPT8M0VhGbdkLf30ZMqCfCpW3BZ2tGOqTlJ9F-Wnt4SmRxHiH82YcE7uUcUg1nRXmPmIlEoqIIEOeYDEcr_Xq7LjFgVIFaSXq5xrW3l2WGIA?width=786&height=553&cropmode=none)\r\n\r\nBlazor Language Services extension is installed:\r\n\r\n![IMG2](https://jy41lw.am.files.1drv.com/y4m7S5LiH6O4ORVvwP67fxjaMpHLPUXjeh8oRIGzEWFkZE4yeLrh9qq-yLQlrNDkTAkrzZC7TE-HuIsZu7nUMAGi4EiRQBvcJF_0efDpcePYwiFKR8rILP2EJs06QiVgbycHx9uiNbjZH7JEesLwHi8drGbyEBNw9CPkEck5RGclG_jINk-PD4ZKHdTAog1gPPi-fJkRmmMVnjzOoa-jmxE9w?width=941&height=653&cropmode=none)\r\n\r\n**Configuration**:\r\n- VS 2017 15.9.0 Preview 2\r\n- .NET Core 2.2.100-preview2-009404\r\n- SDK: 2.2.100-preview2-009404\r\n- OS: Windows 10 Home x64","Url":"https://github.com/aspnet/Blazor/issues/1432","RelatedDescription":"Closed issue \"Visual Studio doesn't show \"Blazor\" project template\" (#1432)"},{"Id":"360601401","IsPullRequest":false,"CreatedAt":"2018-09-16T04:25:24","Actor":"kunalspathak","Number":"1431","RawContent":null,"Title":"Getting Mono.Cecil.ResolutionException during build","State":"open","Body":"Please let me know if this issue should be open in mono repository,\r\n\r\nI followed [directions](https://blazor.net/docs/get-started.html) to start Blazor. It build and worked fine. Then I tried writing some code using [Prose SDKs](https://www.nuget.org/packages/Microsoft.ProgramSynthesis/) and when I built, I get following errors. Is there something that is not supported yet?\r\n```cmd\r\n         Fatal error in IL Linker\r\n         Mono.Cecil.ResolutionException: Failed to resolve System.Runtime.Loader.AssemblyLoadContext\r\n            at Mono.Linker.Steps.MarkStep.HandleUnresolvedType(TypeReference reference)\r\n            at Mono.Linker.Steps.MarkStep.MarkType(TypeReference reference)\r\n            at Mono.Linker.Steps.MarkStep.MarkField(FieldReference reference)\r\n            at Mono.Linker.Steps.MarkStep.InitializeFields(TypeDefinition type)\r\n            at Mono.Linker.Steps.MarkStep.InitializeType(TypeDefinition type)\r\n            at Mono.Linker.Steps.MarkStep.InitializeAssembly(AssemblyDefinition assembly)\r\n            at Mono.Linker.Steps.MarkStep.Initialize()\r\n            at Mono.Linker.Steps.MarkStep.Process(LinkContext context)\r\n            at Mono.Linker.Pipeline.Process(LinkContext context)\r\n            at Mono.Linker.Driver.Run(ILogger customLogger)\r\n            at Mono.Linker.Driver.Execute(String[] args, ILogger customLogger)\r\n```\r\n\r\nThe code I had in `cshtml` file is \r\n\r\n```csharp\r\n        Session s = new Session();\r\n        IEnumerable<Example> examples = new[]\r\n        {\r\n            new Example(new InputRow(\"Greta Hermansson\"), \"Hermansson, G.\")\r\n        };\r\n        s.Constraints.Add(examples);\r\n        Microsoft.ProgramSynthesis.Transformation.Text.Program program = s.Learn();\r\n        code = program.ToString();\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/1431","RelatedDescription":"Open issue \"Getting Mono.Cecil.ResolutionException during build\" (#1431)"},{"Id":"360596834","IsPullRequest":false,"CreatedAt":"2018-09-16T03:12:46","Actor":"tyler0814","Number":"1430","RawContent":null,"Title":"Question: Is it possible to use Local IIS to serve blazor on local machine?","State":"open","Body":"Hello,\r\nI have been trying to set up a new blazor up on IIS using a virtual directory like \"localhost/blazorapp\". However, I keep running into one of two issues:\r\n1) If I start it without debugging (CTRL+F5), I get an IIS HTTP Error 502.5: Process Failure\r\n2) If I start it with debugging (F5):\r\n- On every first run after opening the project, I get \"Caesium.Core.TestRunner> Version for package `Microsoft.AspNetCore.Blazor.Cli` could not be resolved\" in the output window\r\n- On every subsequent run, the browser opens and then closes without loading the site and the output window shows a load of \"Loading\" statement followed by \"The program '[12408] dotnet.exe' has exited with code 1 (0x1).\"\r\n\r\nThe app does work with IIS Express if I change the app URL to localhost instead of localhost/BlazorApp and I also tried a default MVC project and that also serves fine. \r\n\r\nIs serving an unpublished blazor app with Local IIS supported?\r\n\r\nCurrently I have found #1342 and #833 but I do not think my issue fits those exactly since I am not trying to publish the blazor app.\r\n\r\nAny help is much appreciated!","Url":"https://github.com/aspnet/Blazor/issues/1430","RelatedDescription":"Open issue \"Question: Is it possible to use Local IIS to serve blazor on local machine?\" (#1430)"},{"Id":"360513518","IsPullRequest":false,"CreatedAt":"2018-09-15T15:27:02","Actor":"Atulin","Number":"1426","RawContent":null,"Title":"No Blazor template shows up in VS","State":"closed","Body":"VS 15.8.4\r\n![image](https://user-images.githubusercontent.com/11233299/45583446-aa972b00-b8c2-11e8-84b3-aed9e0ecc309.png)\r\n![image](https://user-images.githubusercontent.com/11233299/45583450-b551c000-b8c2-11e8-8764-e924121ba8d4.png)\r\n\r\n``dotnet --version`` results:\r\n```\r\nZestaw .NET Core SDK (odzwierciedlenie dowolnego pliku global.json):\r\n Version:   2.1.402\r\n Commit:    3599f217f4\r\n\r\nŚrodowisko uruchomieniowe:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   c:\\program files\\dotnet\\sdk\\2.1.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.4\r\n  Commit:  85255dde3e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.2 [c:\\program files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [c:\\program files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [c:\\program files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [c:\\program files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [c:\\program files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [c:\\program files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [c:\\program files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [c:\\program files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [c:\\program files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [c:\\program files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [c:\\program files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [c:\\program files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [c:\\program files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1426","RelatedDescription":"Closed issue \"No Blazor template shows up in VS\" (#1426)"},{"Id":"360546828","IsPullRequest":false,"CreatedAt":"2018-09-15T14:53:33","Actor":"grahamehorner","Number":"1429","RawContent":null,"Title":"Blazor - Adaptive Cards","State":"open","Body":"Please consider adding support to blazor for adaptive cards; rendering/injecting interactive cards into the DOM and receiving events from the card. ","Url":"https://github.com/aspnet/Blazor/issues/1429","RelatedDescription":"Open issue \"Blazor - Adaptive Cards\" (#1429)"},{"Id":"360546289","IsPullRequest":false,"CreatedAt":"2018-09-15T14:46:36","Actor":"tezine","Number":"1428","RawContent":null,"Title":"Live reloading not working","State":"open","Body":"Hi, \r\nLive reloading is not working on version 0.5.1. \r\nI'm using dotnet sdk 2.1.300 under Windows 64. \r\nWhenever I change a html content, it's not updated in the browser. I tested using Chrome, pressing F5, cache disabled and debug mode. \r\nIs this working anyhow?\r\nI also tested using dotnet blazor serve without success. ","Url":"https://github.com/aspnet/Blazor/issues/1428","RelatedDescription":"Open issue \"Live reloading not working\" (#1428)"},{"Id":"360528896","IsPullRequest":false,"CreatedAt":"2018-09-15T11:06:00","Actor":"RudyMeijer","Number":"1427","RawContent":null,"Title":"Error 403","State":"closed","Body":"Hi,\r\n\r\nI just published my first Blazor succesfully!\r\n![image](https://user-images.githubusercontent.com/17112368/45585224-5bacbe00-b8e1-11e8-847b-e991ea29280c.png)\r\n\r\nWhen i open the website i get:\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45585234-8565e500-b8e1-11e8-9f07-ff2dda8e430b.png)\r\n\r\nAfter publish the host contains:\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45585325-e2ae6600-b8e2-11e8-9152-84517bf64a2f.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1427","RelatedDescription":"Closed issue \"Error 403\" (#1427)"},{"Id":"360503445","IsPullRequest":false,"CreatedAt":"2018-09-15T03:36:29","Actor":"redmisfitx","Number":"1425","RawContent":null,"Title":"Blazor Project won't compile","State":"open","Body":"Installed .NET Core SDK 2.1.402 and created a Blazor project in Visual Studio 15.8.4 I am not able to run the project. It throws the following error. I've tried suggestions like deleting the json file which has a reference to .net core 2.1.300 among many other things including clearing all nuget packages and restoring them. All to no avail.\r\n\r\nThis is the actual error.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB3073\tThe command \"dotnet \"C:\\Users\\redmi\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.5.1\\targets\\../tools/Microsoft.AspNetCore.Blazor.Build.dll\" write-boot-json obj\\Debug\\netstandard2.0\\Control Edge.dll --references \"C:\\Edge\\obj\\Debug\\netstandard2.0\\blazor/bootjson-references.txt\" --embedded-resources \"C:\\Edge\\obj\\Debug\\netstandard2.0\\blazor/embedded.resources.txt\" --linker-enabled --output \"C:\\Edge\\obj\\Debug\\netstandard2.0\\blazor/blazor.boot.json\"\" exited with code -532462766.\tControl Edge\tC:\\Users\\redmi\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.5.1\\targets\\Blazor.MonoRuntime.targets\t635\t\r\n","Url":"https://github.com/aspnet/Blazor/issues/1425","RelatedDescription":"Open issue \"Blazor Project won't compile\" (#1425)"},{"Id":"360422347","IsPullRequest":false,"CreatedAt":"2018-09-14T19:17:31","Actor":"RudyMeijer","Number":"1424","RawContent":null,"Title":"HTTP Error 502.5 - Process Failure","State":"closed","Body":"Hi, \r\n\r\nI Installed the latest Blazor Language Services extension from the Visual Studio Marketplace in VS2017 15.8.4 and created a new project.\r\n![image](https://user-images.githubusercontent.com/17112368/45570253-4e042380-b862-11e8-9295-fe3b8f30493b.png)\r\n\r\nWhen i run the Blazor application (Ctrl+F5) without modifications i get the error:\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45569911-4a23d180-b861-11e8-96fb-78aaf030047a.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45569725-acc89d80-b860-11e8-8ecc-843566443642.png)\r\n\r\nThe eventlogger shows:\r\n![image](https://user-images.githubusercontent.com/17112368/45570060-b9012a80-b861-11e8-88c9-f6ce84846805.png)\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1424","RelatedDescription":"Closed issue \"HTTP Error 502.5 - Process Failure\" (#1424)"},{"Id":"360386134","IsPullRequest":false,"CreatedAt":"2018-09-14T17:27:27","Actor":"DanElliott","Number":"1423","RawContent":null,"Title":"Namespace tied to directory name causes missing reference build issues","State":"closed","Body":"With 0.5.1, created a new project named BlazorApp1 located in folder XYZ. Build errors claim \r\n\r\n> The type or namespace name 'Shared' does not exist in the namespace 'BlazorApp1' (are you missing an assembly reference?)\r\n\r\n at `obj\\Debug\\netstandard2.0\\App.g.i.cs`, for example.\r\n\r\nReproduce error with `dotnet new blazor -o XYZ -n BlazorApp1`\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1423","RelatedDescription":"Closed issue \"Namespace tied to directory name causes missing reference build issues\" (#1423)"},{"Id":"360247495","IsPullRequest":false,"CreatedAt":"2018-09-14T16:19:37","Actor":"PeskovV","Number":"1421","RawContent":null,"Title":"Why blazor app doesn't work when i change root to folder “_framework”","State":"closed","Body":"I change my base href in `index.html`: was `href=\"/\"` has become `href=\"/schedule/\"`\r\n\r\nAlso i change `Configure`:\r\n \r\n\r\n     app.UseStaticFiles();\r\n                app.UseStaticFiles(new StaticFileOptions()\r\n                {\r\n                    FileProvider = new PhysicalFileProvider(Path.Combine(Directory.GetCurrentDirectory(),@\"Schedule.Client\", @\"dist\")),\r\n                    RequestPath = new PathString(\"/schedule\")\r\n                });\r\nHere located my files\r\n\r\n[![Here located my files:][1]][1]\r\n\r\n\r\ncss, js, resources work good, but _framework which includes wasm files and doesn't work correct.\r\n\r\nindex.html:\r\n\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width\">\r\n        <title>Schedule</title>\r\n        <link rel=\"icon\" href=\"css/Resources/icon_title.png\" />\r\n        <base href=\"/schedule/\" />\r\n        <link href=\"css/bootstrap/bootstrap.min.css\" rel=\"stylesheet\" />\r\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.2.0/css/all.css\" crossorigin=\"anonymous\">\r\n        <link href=\"css/site.css\" rel=\"stylesheet\" />\r\n        <link href=\"css/btnstyle.css\" rel=\"stylesheet\" />\r\n        <script src=\"js/SetScroll.js\"></script>\r\n    \r\n    </head>\r\n    <body>\r\n        <app>\r\n            <div id=\"demo\" style=\"margin:auto; top:30px;\">\r\n                <img src=\"css/Resources/logo-fin.png\" />\r\n                <div class=\"circle fas fa-spinner\"></div>\r\n            </div>\r\n        </app>\r\n    \r\n        <script src=\"_framework/blazor.webassembly.js\"></script>\r\n        <script defer src=\"https://use.fontawesome.com/releases/v5.2.0/js/all.js\" crossorigin=\"anonymous\"></script>\r\n    </body>\r\n    </html>\r\n\r\nWhen I start my app, I get error\r\n[![enter image description here][2]][2]\r\n\r\nWhen i use `href=\"/\"`, all is correct\r\n\r\nWhat could be wrong?\r\nThanks!\r\n\r\nUpdate\r\n\r\nI have found the same problem and solution, but there is used a Azure CLI:\r\nhttps://anthonychu.ca/post/blazor-azure-storage-static-websites/\r\n\r\n[![enter image description here][3]][3]\r\n \r\n  [1]: https://i.stack.imgur.com/q4nsh.png\r\n  [2]: https://i.stack.imgur.com/0yNIS.png\r\n[3]: https://i.stack.imgur.com/gXp6g.png","Url":"https://github.com/aspnet/Blazor/issues/1421","RelatedDescription":"Closed issue \"Why blazor app doesn't work when i change root to folder “_framework”\" (#1421)"},{"Id":"360315028","IsPullRequest":false,"CreatedAt":"2018-09-14T16:16:12","Actor":"stsrki","Number":"1422","RawContent":null,"Title":"Possible bug with for loop","State":"closed","Body":"I have a `SimplePagination` component with just the basics:\r\n```\r\n<Pagination>\r\n    @for ( int i = 0; i <= ( TotalItems / PageSize ); ++i )\r\n    {\r\n        <PaginationItem>@i.ToString()</PaginationItem>\r\n    }\r\n</Pagination>\r\n@functions{\r\n    [Parameter] int TotalItems { get; set; }\r\n\r\n    [Parameter] int PageSize { get; set; } = 10;\r\n}\r\n```\r\n**Use case:**\r\n```\r\n<SimplePagination TotalItems=\"5\" />\r\n<SimplePagination TotalItems=\"15\" />\r\n<SimplePagination TotalItems=\"45\" />\r\n```\r\n\r\n\r\nWhen rendered I get this:\r\n![image](https://user-images.githubusercontent.com/900302/45553866-48dcaf80-b835-11e8-9a54-75b63ce2abf7.png)\r\n\r\nBut if I store the page number inside of temp var I get the expected result:\r\n```\r\n<Pagination>\r\n    @for ( int i = 0; i <= ( TotalItems / PageSize ); ++i )\r\n    {\r\n        var pageNum = i.ToString();\r\n        <PaginationItem>@pageNum</PaginationItem>\r\n    }\r\n</Pagination>\r\n@functions{\r\n    [Parameter] int TotalItems { get; set; }\r\n\r\n    [Parameter] int PageSize { get; set; } = 10;\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/900302/45553947-86d9d380-b835-11e8-8bc1-0b818558483b.png)\r\n\r\nI guess that `ChildContent` inside of my `PaginationItem `will only get the reference to the **ToString()** function instead of it's return value. \r\n\r\nIs this expected behavior ?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1422","RelatedDescription":"Closed issue \"Possible bug with for loop\" (#1422)"},{"Id":"360235115","IsPullRequest":false,"CreatedAt":"2018-09-14T09:50:43","Actor":"stsrki","Number":"1420","RawContent":null,"Title":"[Suggestion] Self closing tags","State":"open","Body":"This is not really an issue, just that it would be good to have. Right now the intellisense cannot detect components that should not have closing tags(or does not need them) e.g. `<div></div>`, but instead they would have a \"_self-close_\" tag e.g. `<input />` or `<img />`.\r\n\r\nPossible use case would be for components that does not have `ChildContent`. For example I have an Icon component and I define the icon name through the `Name `parameter so `ChildContent `is not needed. But every time I use it, the VS intellisense will generate closing tag.\r\n\r\n**Current behavior:**\r\n`<Icon Name=\"user\"></Icon>`\r\n\r\n**Wanted:**\r\n`<Icon Name=\"user\" />`\r\n\r\nMaybe this is not connected to the Blazor team but to the VS team instead, please ignore in that case.\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1420","RelatedDescription":"Open issue \"[Suggestion] Self closing tags\" (#1420)"},{"Id":"360119100","IsPullRequest":true,"CreatedAt":"2018-09-14T09:33:34","Actor":"Suchiman","Number":"1416","RawContent":null,"Title":"ILWipe: Remove AsyncStateMachineAttribute","State":"closed","Body":"From methods that get trimmed, we should remove the `AsyncStateMachineAttribute` if present because it will root the generated private async state machine type which the linker is hence unable to remove.\r\n\r\nIn my test, this helped the linker to remove the following nested struct from `HttpClientHandler`\r\n```csharp\r\n[CompilerGenerated]\r\n[StructLayout(LayoutKind.Auto)]\r\nprivate struct <SendAsync>d__64 : IAsyncStateMachine\r\n{\r\n\tvoid IAsyncStateMachine.MoveNext()\r\n\t{\r\n\t\tthrow ILWipeHelpers.CreateMethodWipedException();\r\n\t}\r\n\r\n\t[DebuggerHidden]\r\n\tvoid IAsyncStateMachine.SetStateMachine(IAsyncStateMachine stateMachine)\r\n\t{\r\n\t\tthrow ILWipeHelpers.CreateMethodWipedException();\r\n\t}\r\n\r\n\tpublic int <>1__state;\r\n\r\n\tpublic AsyncTaskMethodBuilder<HttpResponseMessage> <>t__builder;\r\n\r\n\tpublic HttpClientHandler <>4__this;\r\n\r\n\tpublic HttpRequestMessage request;\r\n\r\n\tpublic CancellationToken cancellationToken;\r\n\r\n\tprivate HttpWebRequest <wrequest>5__2;\r\n\r\n\tprivate HttpWebResponse <wresponse>5__3;\r\n\r\n\tprivate CancellationTokenRegistration <>7__wrap3;\r\n\r\n\tprivate HttpContent <content>5__5;\r\n\r\n\tprivate ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;\r\n\r\n\tprivate Stream <stream>5__6;\r\n\r\n\tprivate ConfiguredTaskAwaitable<Stream>.ConfiguredTaskAwaiter <>u__2;\r\n\r\n\tprivate ConfiguredTaskAwaitable<WebResponse>.ConfiguredTaskAwaiter <>u__3;\r\n\r\n\tprivate TaskAwaiter<HttpResponseMessage> <>u__4;\r\n}\r\n```\r\n\r\nThe `System.Net.Http.dll` stays at 66kb nontheless.\r\nThe removal of the attribute allows the entire state machine to be removed which can enable further linking as its fields will no longer keep them alive.\r\n\r\nAnother idea would be to remove all attributes from these methods which would be the tradeoff of code that would possibly discover these methods via those attributes and eventually run into the `MethodWipedException` exception vs. not finding them in the first place. On the other hand, ILWipe will strip targeted types and methods in the BCL and its unlikely to reflect on the BCL based on attributes.","Url":"https://github.com/aspnet/Blazor/pull/1416","RelatedDescription":"Closed or merged PR \"ILWipe: Remove AsyncStateMachineAttribute\" (#1416)"},{"Id":"360208160","IsPullRequest":false,"CreatedAt":"2018-09-14T09:32:21","Actor":"A51UK","Number":"1419","RawContent":null,"Title":"Having asp.net razor for service side and Blazor on client side on the same views. ","State":"closed","Body":"The idea is that you could use asp.net razor on service side when making the view but use Blazor to do any change on the clients side, like how with use  asp.net razor with JavaScript now. The reason for this is to allow the page to be sent with some data  on load and then use Blazor for any update or change after the page been sent.  \r\n\r\nA example of this would be on a shopping site where the first 10 product would be sent on the page when sent to the user and next load of product would be load on the page by the use of Blazor and Web API. it would be good for SEO as google would be able to see the  first 10 product without it need run any Blazor code.  In order to do this there would be need a way to say with part of the code is for Blazor and with part for the service side (e.g. razor). This would also allow for a more easy upgrade route for non-Blazor website to be able to use Blazor.","Url":"https://github.com/aspnet/Blazor/issues/1419","RelatedDescription":"Closed issue \"Having asp.net razor for service side and Blazor on client side on the same views. \" (#1419)"},{"Id":"360100612","IsPullRequest":false,"CreatedAt":"2018-09-14T07:00:32","Actor":"tauheedul","Number":"1415","RawContent":null,"Title":"Please add Blazor sample with ML.NET","State":"closed","Body":"Blazor allows us to use .NET Core features. Now that the .NET Core supports machine learning, it would be very helpful to learn how we can use ML.NET features with Blazor on the client side.\r\n\r\nIf this works, we could perform machine learning on the client side or server side using our web apps.","Url":"https://github.com/aspnet/Blazor/issues/1415","RelatedDescription":"Closed issue \"Please add Blazor sample with ML.NET\" (#1415)"},{"Id":"360177833","IsPullRequest":false,"CreatedAt":"2018-09-14T06:49:42","Actor":"tn-5","Number":"1418","RawContent":null,"Title":"Server side blazor does not trigger @bind update for auto filled input fields","State":"open","Body":"I have a test app with a login form with a username and password input, both bound to string properties on the model. It works correctly if I manually enter values in these fields (the string properties get updated from the @bind directive).\r\n\r\nIf the browser has a cached username / password combination and I select auto fill for these fields, the fields do get filled (visually on the page) but the bound password property does not get updated (the username does). The password field does get filled correctly on the browser, if I make any change to the field (add a space for example), the string password property does get updated.\r\n\r\nIt looks like whatever event is used to trigger the update does not get processed correctly or does not fire for the auto filled password. I have not tested with other auto filled form fields.\r\n\r\nThis was tested on Safari & Edge. When exactly the same code is used compiled for client side Blazor it works 100%. ","Url":"https://github.com/aspnet/Blazor/issues/1418","RelatedDescription":"Open issue \"Server side blazor does not trigger @bind update for auto filled input fields\" (#1418)"},{"Id":"359091713","IsPullRequest":false,"CreatedAt":"2018-09-13T15:56:09","Actor":"stsrki","Number":"1408","RawContent":null,"Title":"Detect parent from child component","State":"closed","Body":"Sorry if this was answered already. I have a need for the child component to behave differently based on the parent in which it is placed. I need to know if the _ChildComponent_ is placed inside of _ParentComponent_ or not.\r\n\r\nFor axample if I have this\r\n```\r\n<div>\r\n    <ParentComponent>\r\n       <ChildComponent />\r\n    <ParentComponent>\r\n</div>\r\n```\r\nit would render:\r\n```\r\n<div>\r\n    <div class=\"parent-class\"\r\n        <span class=\"child-class hello-parent\"></span>\r\n    <div>\r\n</div>\r\n```\r\n\r\nAnd this\r\n```\r\n<div>\r\n   <ChildComponent />\r\n</div>\r\n```\r\nit would render:\r\n```\r\n<div>\r\n    <span class=\"child-class\"></span>\r\n</div>\r\n```\r\n\r\nIs this even possible?","Url":"https://github.com/aspnet/Blazor/issues/1408","RelatedDescription":"Closed issue \"Detect parent from child component\" (#1408)"},{"Id":"359112289","IsPullRequest":false,"CreatedAt":"2018-09-13T15:55:07","Actor":"ruratnayake","Number":"1409","RawContent":null,"Title":"Int.Parse and Int.TryParse not working","State":"closed","Body":"I have tried to do some validation message display based on the input change on an input field. but seems Int.Parse and TryParse not Working.\r\n\r\nI have modified the counter page in the default template. Functionality should be if user enter valid integer value the increment counter value should be increased by 1. otherwise decrement by 5. no change detected on increment counter \r\n\r\n```html\r\n@page \"/counter\"\r\n\r\n<style type=\"text/css\">\r\n    .show {\r\n        color: red;\r\n        display: block;\r\n    }\r\n\r\n    .hide {\r\n        display: none;\r\n    }\r\n</style>\r\n\r\n<h1>Counter</h1>\r\n\r\n<p>valid input change count: @currentCount (intValString: @intValString)</p>\r\n\r\n<input type=\"text\" bind=\"@intValString\" onchange=\"@OnIntValueStringChange\" />\r\n<span class='@(isIntInput ? \"show\" : \"hide\")'>Enter valid integer value.</span>\r\n\r\n@functions{\r\n\r\n    int currentCount = 0;\r\n\r\n    bool isIntInput = true;\r\n\r\n    string intValString;\r\n\r\n    void OnIntValueStringChange()\r\n    {\r\n        try\r\n        {\r\n            int.Parse(intValString);\r\n            currentCount++;\r\n            isIntInput = true;\r\n        }\r\n        catch (Exception)\r\n        {\r\n            currentCount-=5;\r\n            isIntInput = false;\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1409","RelatedDescription":"Closed issue \"Int.Parse and Int.TryParse not working\" (#1409)"},{"Id":"359146325","IsPullRequest":false,"CreatedAt":"2018-09-13T15:54:14","Actor":"masonwheeler","Number":"1410","RawContent":null,"Title":"Blazor rewrite rule is far too broad","State":"closed","Body":"URL rewriting is important for making a SPA work, but the standard ASP.NET rewrite rule for Blazor is completely broken.  It essentially says \"take any request that doesn't exist and treat it as a request for index.html\", which means that requests for things that *should exist but don't* also return index.html instead of generating a 404, making debugging much more difficult.\r\n\r\nWhat's needed is an analyzer that looks at the various `@page` directives and extracts a set of precise rewrite rules from them.","Url":"https://github.com/aspnet/Blazor/issues/1410","RelatedDescription":"Closed issue \"Blazor rewrite rule is far too broad\" (#1410)"},{"Id":"359596916","IsPullRequest":false,"CreatedAt":"2018-09-13T15:49:32","Actor":"samuelcavendish","Number":"1411","RawContent":null,"Title":"Blazor (Server Side) displays blank page","State":"closed","Body":"I've seen similar issues for older versions, but I think this is a different one since it only seems to affect the server side project, the client side project seems to work correctly.\r\n\r\nI followed the setup instructions from https://blazor.net/docs/get-started.html\r\nVS version 15.8.2\r\ndotnet version 2.1.402\r\n\r\nWhen clicking new project & selecting the server side project it shows the loading screen and then a blank page. There are no errors in the console. \r\n\r\nI had to make just 1 change other than the File -> New Project. Once the project was created, I went into the Server project Properties -> Debug -> Enable SSL. This was to get rid of the error in chrome about the site can't provide a secure connection. ","Url":"https://github.com/aspnet/Blazor/issues/1411","RelatedDescription":"Closed issue \"Blazor (Server Side) displays blank page\" (#1411)"},{"Id":"359815349","IsPullRequest":false,"CreatedAt":"2018-09-13T15:40:58","Actor":"stanac","Number":"1413","RawContent":null,"Title":"Blazor is not re-rendering component when field is changed by mediator message handler","State":"closed","Body":"### Functional impact\r\nDOM is not updated\r\n\r\n### Minimal repro steps\r\nRepro repo here: https://github.com/stanac/BlazorNotRendering\r\n\r\n### Expected result\r\nDOM is updated when field changes.\r\n\r\n### Actual result\r\nDOM is not updated.\r\n\r\n### Further technical details\r\nFor cross component messaging I have created a simple mediator class and registered it as singleton. One component is sending a message and the other one is handling it. Recipient of the message should update DOM from message handler, however it doesn't, field is changed (confirmed from log) however component is not re-rendered. First I thought the problem occurs when updating field from closure, however updating field from `Task.Run(() => { ... })` seams to work fine.\r\n\r\nButton component that is sending the message:\r\n```\r\n@inject Mediator _mediator\r\n\r\n<button onclick=\"@Increment\">Increment</button>\r\n\r\n@functions  {\r\n    private async Task Increment()\r\n    {\r\n        Console.WriteLine(\"Button clicked, sending int message\");\r\n        await _mediator.Invoke<int>(1);\r\n    }\r\n}\r\n```\r\n\r\nComponent that is handling the message:\r\n```\r\n@inject Mediator _mediator\r\n\r\n<span>@counter</span>\r\n\r\n@functions { \r\n\r\n    private int counter = 3;\r\n\r\n    protected override Task OnInitAsync()\r\n    {\r\n        _mediator.Subscribe<int>(msg =>\r\n        {\r\n            counter++;\r\n            Console.WriteLine($\"int message recieved, counter value: {counter}\");\r\n            return Task.FromResult(0);\r\n        });\r\n\r\n        return Task.FromResult(0);\r\n    }\r\n}\r\n```\r\n\r\nMediator (and repro project) are [here](https://github.com/stanac/BlazorNotRendering/blob/master/BlazorNotRendering.Client/Mediator.cs).\r\n\r\n\r\n### Further technical details\r\n- Blazor: 0.5.1\r\n- Firefox: 62.0\r\n- Chrome: 69.0.3497.92\r\n\r\nIs there a workaround for this? Can we force Blazor to re-render component by invoking a method from base class?","Url":"https://github.com/aspnet/Blazor/issues/1413","RelatedDescription":"Closed issue \"Blazor is not re-rendering component when field is changed by mediator message handler\" (#1413)"},{"Id":"359839838","IsPullRequest":false,"CreatedAt":"2018-09-13T15:35:49","Actor":"PascalKoe","Number":"1414","RawContent":null,"Title":"Can't create Blazor server side project with VS","State":"closed","Body":"When creating a server side application, an empty solution is presented. App and Server projects have been created as seen in the file browser but can't be opened in VS.\r\nSimilar problem happens when creating a ASP.NET Core hosted Blazor application.\r\nI have SDK version 2.1.402 installed which should be working according to the Getting Started guide.\r\n\r\n> 1.  Install the .NET Core 2.1 SDK (2.1.300 or later).\r\n\r\nI found a manual fix by editing the SDK version from 2.1.300 to 2.1.402 in the global.json file.\r\nIs this a problem of VS or the thing that creates the Blazor project?\r\nThanks","Url":"https://github.com/aspnet/Blazor/issues/1414","RelatedDescription":"Closed issue \"Can't create Blazor server side project with VS\" (#1414)"},{"Id":"358961107","IsPullRequest":true,"CreatedAt":"2018-09-13T11:44:09","Actor":"SteveSandersonMS","Number":"1407","RawContent":null,"Title":"Update linking","State":"closed","Body":"Updates to newer linker binary, plus config changes recommended by @marek-safar.","Url":"https://github.com/aspnet/Blazor/pull/1407","RelatedDescription":"Closed or merged PR \"Update linking\" (#1407)"},{"Id":"359664465","IsPullRequest":false,"CreatedAt":"2018-09-12T21:45:42","Actor":"vertonghenb","Number":"1412","RawContent":null,"Title":"Unpredictable No element is currently associated with component {ComponentId} ","State":"open","Body":"Using Blazor Server Side\r\nFrom time to time Blazor throws the following error:\r\n`No element is currently associated with component {ComponentId}`\r\n\r\nThe error is always thrown on the first load after a `StateHasChanged`, if you hard refresh the page the error doesn't happen anymore. If you remove a surrounding `<div>` from the page, the error is gone.\r\n\r\n- Is there a way to see which component has which id?\r\n- Is this a known issue?\r\n\r\nFor me this is quite vague and it happends for no certain reason, only from time to time.","Url":"https://github.com/aspnet/Blazor/issues/1412","RelatedDescription":"Open issue \"Unpredictable No element is currently associated with component {ComponentId} \" (#1412)"},{"Id":"358779157","IsPullRequest":false,"CreatedAt":"2018-09-11T11:02:03","Actor":"LaurenceFrost","Number":"1406","RawContent":null,"Title":"Subscribing to data changes","State":"closed","Body":"Coming from a Knockout background, I am used to creating properties (observables) in my view models, and then creating subscriptions to them so that an event automatically occurs when a value changes (regardless of how that value change happens).\r\n\r\nIs there something similar in Blazor (either already, or in the pipeline)?\r\n\r\nTaking the inbuilt \"counter\" example, I want SetDataAsChanged() to be called whenever there is a change to the currentCount variable, keeping in mind that there could be multiple ways that the variable could be updated, and I do not want to have to manually call SetDataAsChanged() each time.\r\n\r\n```\r\n@functions {\r\n    int currentCount = 0;\r\n    bool dataChanged = false;\r\n\r\n    void IncrementCount()\r\n    {\r\n        currentCount += 2;\r\n    }\r\n    \r\n    \r\n    // I want this called whenever currentCount changes (from anywhere)\r\n    void SetDataAsChanged()\r\n    {\r\n        dataChanged = true;\r\n    }\r\n}\r\n```\r\n\r\nIs this possible, or does it conflict with Blazor's design intentions?","Url":"https://github.com/aspnet/Blazor/issues/1406","RelatedDescription":"Closed issue \"Subscribing to data changes\" (#1406)"},{"Id":"358488218","IsPullRequest":true,"CreatedAt":"2018-09-10T06:44:05","Actor":"shibutamang","Number":"1405","RawContent":null,"Title":"Small tweaks to support publish","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1405","RelatedDescription":"Open PR \"Small tweaks to support publish\" (#1405)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-17T05:30:04.1126306Z","RunDurationInMilliseconds":1536}