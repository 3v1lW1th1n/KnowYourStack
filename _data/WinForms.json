{"Data":{"GitHub":{"Issues":[{"Id":"389551147","IsPullRequest":false,"CreatedAt":"2018-12-11T00:54:39","Actor":"maikebing","Number":"228","RawContent":null,"Title":"The comments generated by the designer do not make sense, please cancel","State":"open","Body":" \r\nI recommend canceling the designer to generate comments, or not internationalization,\r\nBecause different language programmers generate comments in different languages when they adjust the interface, there are a lot of changes when they are submitted to git, which is actually of little practical significance.","Url":"https://github.com/dotnet/winforms/issues/228","RelatedDescription":"Open issue \"The comments generated by the designer do not make sense, please cancel\" (#228)"},{"Id":"389545098","IsPullRequest":true,"CreatedAt":"2018-12-11T00:29:59","Actor":"zsd4yr","Number":"227","RawContent":null,"Title":"rev tools dotnet and sdk ver; and pkgs, remove unnecessary","State":"closed","Body":"rev tools dotnet and sdk ver to preview-009820, rev pkgs to 4.6-previ…ew-18606.1, remove unnecessary system drawing primitives package","Url":"https://github.com/dotnet/winforms/pull/227","RelatedDescription":"Closed or merged PR \"rev tools dotnet and sdk ver; and pkgs, remove unnecessary\" (#227)"},{"Id":"389541177","IsPullRequest":true,"CreatedAt":"2018-12-11T00:28:40","Actor":"OliaG","Number":"226","RawContent":null,"Title":"Updated link to CoreFX contributing guidelines","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/226","RelatedDescription":"Closed or merged PR \"Updated link to CoreFX contributing guidelines\" (#226)"},{"Id":"389524707","IsPullRequest":true,"CreatedAt":"2018-12-10T23:01:14","Actor":"JeremyKuhne","Number":"225","RawContent":null,"Title":"Add internals visible to Castle/Moq and create example tests.","State":"open","Body":"Related to discussions in https://github.com/dotnet/winforms/pull/148.\r\n\r\ncc: @raffaeler","Url":"https://github.com/dotnet/winforms/pull/225","RelatedDescription":"Open PR \"Add internals visible to Castle/Moq and create example tests.\" (#225)"},{"Id":"389502963","IsPullRequest":true,"CreatedAt":"2018-12-10T21:53:38","Actor":"AdamYoblick","Number":"224","RawContent":null,"Title":"Helix proof of concept for unit tests","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/224","RelatedDescription":"Open PR \"Helix proof of concept for unit tests\" (#224)"},{"Id":"389472936","IsPullRequest":true,"CreatedAt":"2018-12-10T21:17:00","Actor":"AdamYoblick","Number":"223","RawContent":null,"Title":"disable target that causes only VS builds to fail","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/223","RelatedDescription":"Closed or merged PR \"disable target that causes only VS builds to fail\" (#223)"},{"Id":"389421130","IsPullRequest":true,"CreatedAt":"2018-12-10T19:16:18","Actor":"AdamYoblick","Number":"222","RawContent":null,"Title":"publish package into pipeline artifacts","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/222","RelatedDescription":"Closed or merged PR \"publish package into pipeline artifacts\" (#222)"},{"Id":"389253633","IsPullRequest":true,"CreatedAt":"2018-12-10T18:51:44","Actor":"KlausLoeffelmann","Number":"219","RawContent":null,"Title":"Add doc for using Classic Designer workaround","State":"closed","Body":"This markdown file adds a workaround description of how to use the classic Windows Forms designer, and introduces an image subfolder for screenshots.","Url":"https://github.com/dotnet/winforms/pull/219","RelatedDescription":"Closed or merged PR \"Add doc for using Classic Designer workaround\" (#219)"},{"Id":"388793369","IsPullRequest":true,"CreatedAt":"2018-12-10T17:24:39","Actor":"zsd4yr","Number":"203","RawContent":null,"Title":"update issue-guide.md to include new PR labels","State":"closed","Body":"We found there was a need to include labels for requesting that a PR's history not be squashed at merge-time. We also found that we needed to better communicate when testing was required internally before a PR could be merged. \r\n\r\nThese two labels were added to resolve these needs.","Url":"https://github.com/dotnet/winforms/pull/203","RelatedDescription":"Closed or merged PR \"update issue-guide.md to include new PR labels\" (#203)"},{"Id":"389405328","IsPullRequest":false,"CreatedAt":"2018-12-10T17:23:44","Actor":"livarcocc","Number":"221","RawContent":null,"Title":"How to reference System.Design","State":"open","Body":"@jnm2 commented on [Thu Sep 13 2018](https://github.com/dotnet/core-sdk/issues/79)\n\nWhen converting the project to netcoreapp3.0 and keeping the `System.Design` reference, the compiler doesn't seem to see the reference:\r\n\r\n> CS0012 The type 'ComponentDesigner' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <!-- ... -->\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Reference Include=\"System.Design\" />\r\n    <!-- ... -->\r\n    <FrameworkReference Include=\"Microsoft.DesktopUI\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nHow will this work in the future?\r\n\r\n(edit) This gets it to build:\r\n\r\n```xml\r\n    <Reference Include=\"System.Design\" HintPath=\"C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\System.Design.dll\" />\r\n```\r\n\r\nBut since System.Design is heavily used at runtime, I'm doubtful that the .NET Framework's System.Design will work.\n\n---\n\n@OliaG commented on [Mon Sep 17 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-422212638)\n\nHi Joseph,\r\nThanks for reaching out! The types you mentioned are not added in Core 3.0, we are still finalizing the list of the APIs for Core 3.0, so we'd like to know more about your scenarios. Could you tell us how you are using these types in your app?\r\n\r\nAlso if you haven't done it yet, I would suggest running [Portability Analyzer](https://blogs.msdn.microsoft.com/dotnet/2018/08/08/are-your-windows-forms-and-wpf-applications-ready-for-net-core-3-0/) that will show all APIs in your app that are not yet included in .NET Core 3.0.\n\n---\n\n@jnm2 commented on [Tue Sep 18 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-422492997)\n\nHi Olia,\r\n\r\nOur applications depend on DevExpress's End User Report Designer ([docs](https://docs.devexpress.com/XtraReports/10715/create-end-user-reporting-applications/winforms-reporting/end-user-report-designer)). DevExpress built it on top of the System.ComponentModel/IDesignerHost/CodeDOM set of abstractions, very much like the Windows Forms designer itself.\r\n\r\nThis designer ships for our users at runtime (as the name suggests). We've written custom reporting elements that integrate with it. Since DevExpress based the designer heavily on System.Design, our integrations with the report designer are also tied to System.Design. We're hoping that this doesn't keep us from moving to .NET Core.\r\n\r\nIn this report, see especially `DevExpress.XtraReports.v17.2.Extensions.dll` which houses their End User Report Designer: [Portability report for DevExpress dependencies.xlsx](https://github.com/dotnet/core-sdk/files/2393989/Portability.report.for.DevExpress.dependencies.xlsx)\r\n\r\nThat's what DevExpress's code needs. Our code, which merely integrates with DevExpress's report designer, ends up directly using these types:\r\n\r\n<details>\r\n\r\n```\r\nT:System.ComponentModel.Design.CollectionEditor\r\nT:System.ComponentModel.Design.CollectionEditor.CollectionForm\r\nT:System.ComponentModel.Design.ComponentDesigner\r\nT:System.ComponentModel.Design.DesignerActionItem\r\nT:System.ComponentModel.Design.DesignerActionItemCollection\r\nT:System.ComponentModel.Design.DesignerActionList\r\nT:System.ComponentModel.Design.DesignerActionListCollection\r\nT:System.ComponentModel.Design.DesignerActionMethodItem\r\nT:System.ComponentModel.Design.DesignerActionPropertyItem\r\nT:System.ComponentModel.Design.DesignerActionTextItem\r\nT:System.ComponentModel.Design.DesignerActionUIService\r\nT:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs\r\nT:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler\r\nT:System.ComponentModel.Design.DesignerActionUIStateChangeType\r\nT:System.ComponentModel.Design.MultilineStringEditor\r\nT:System.ComponentModel.Design.Serialization.CodeDomSerializer\r\nT:System.ComponentModel.Design.Serialization.CodeDomSerializerBase\r\nT:System.ComponentModel.Design.Serialization.DesignerSerializationManager\r\nT:System.Drawing.Design.IToolboxService\r\nT:System.Drawing.Design.ToolboxItem\r\nT:System.Drawing.Design.ToolboxItemCollection\r\nT:System.Windows.Forms.Design.AnchorEditor\r\nT:System.Windows.Forms.Design.Behavior.Behavior\r\nT:System.Windows.Forms.Design.Behavior.BehaviorService\r\nT:System.Windows.Forms.Design.Behavior.ControlBodyGlyph\r\nT:System.Windows.Forms.Design.Behavior.GlyphSelectionType\r\nT:System.Windows.Forms.Design.ControlDesigner\r\nT:System.Windows.Forms.Design.ParentControlDesigner\r\nT:System.Windows.Forms.Design.ScrollableControlDesigner\r\nT:System.Windows.Forms.Design.SelectionRules\r\n```\r\n\r\n</details><br/>\r\n\r\nAnd these members:\r\n\r\n<details>\r\n\r\n```\r\nM:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)\r\nM:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)\r\nM:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged\r\nM:System.ComponentModel.Design.CollectionEditor.CollectionForm.get_Items\r\nM:System.ComponentModel.Design.CollectionEditor.CollectionForm.set_Items(System.Object[])\r\nM:System.ComponentModel.Design.CollectionEditor.get_Context\r\nM:System.ComponentModel.Design.ComponentDesigner.#ctor\r\nM:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)\r\nM:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)\r\nM:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)\r\nM:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)\r\nM:System.ComponentModel.Design.ComponentDesigner.get_Component\r\nM:System.ComponentModel.Design.ComponentDesigner.get_Verbs\r\nM:System.ComponentModel.Design.DesignerActionItemCollection.#ctor\r\nM:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)\r\nM:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)\r\nM:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)\r\nM:System.ComponentModel.Design.DesignerActionList.get_Component\r\nM:System.ComponentModel.Design.DesignerActionList.set_AutoShow(System.Boolean)\r\nM:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])\r\nM:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)\r\nM:System.ComponentModel.Design.DesignerActionListCollection.get_Item(System.Int32)\r\nM:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)\r\nM:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)\r\nM:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)\r\nM:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)\r\nM:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)\r\nM:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)\r\nM:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)\r\nM:System.ComponentModel.Design.DesignerActionUIService.add_DesignerActionUIStateChange(System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler)\r\nM:System.ComponentModel.Design.DesignerActionUIService.remove_DesignerActionUIStateChange(System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler)\r\nM:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.get_ChangeType\r\nM:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler.#ctor(System.Object,System.IntPtr)\r\nM:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor\r\nM:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)\r\nM:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)\r\nM:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)\r\nM:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)\r\nM:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)\r\nM:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor\r\nM:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession\r\nM:System.ComponentModel.Design.Serialization.DesignerSerializationManager.get_Errors\r\nM:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)\r\nM:System.Drawing.Design.IToolboxService.GetToolboxItems\r\nM:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)\r\nM:System.Drawing.Design.ToolboxItem.get_TypeName\r\nM:System.Windows.Forms.Design.AnchorEditor.#ctor\r\nM:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)\r\nM:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)\r\nM:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)\r\nM:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)\r\nM:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)\r\nM:System.Windows.Forms.Design.Behavior.BehaviorService.get_CurrentBehavior\r\nM:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)\r\nM:System.Windows.Forms.Design.ControlDesigner.#ctor\r\nM:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)\r\nM:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)\r\nM:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)\r\nM:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)\r\nM:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\r\nM:System.Windows.Forms.Design.ControlDesigner.OnSetCursor\r\nM:System.Windows.Forms.Design.ControlDesigner.get_Control\r\nM:System.Windows.Forms.Design.ControlDesigner.get_ParticipatesWithSnapLines\r\nM:System.Windows.Forms.Design.ControlDesigner.get_SelectionRules\r\nM:System.Windows.Forms.Design.ControlDesigner.set_AutoResizeHandles(System.Boolean)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.#ctor\r\nM:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)\r\nM:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)\r\nM:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor\r\n```\r\n\r\n</details>\n\n---\n\n@OliaG commented on [Tue Sep 18 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-422504230)\n\nThank you, Joseph! I'll get our engineers to look at it and follow up with you.\n\n---\n\n@filipnavara commented on [Tue Sep 18 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-422533340)\n\nWe have similar dependencies for our custom WinForms controls too. The missing API set is nearly identical. In our case they are design-time only and we have a build option to strip them out of release builds, so we are still able to run our application on .NET Core 3 alpha today (with some additional fixes discussed in the CoreFX repository issues).\r\n\r\nI suspect this will come up quite often and it has to be addressed in one way or another. I was hoping that this will eventually come later when the WinForms design-time support is brought in later preview. I'm taking a wait-and-see approach on this one, but wanted to express some support that the scenario is probably common. \n\n---\n\n@OliaG commented on [Tue Sep 18 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-422544930)\n\nThank you Filip!\r\n@Tanya-Solyanik\n\n---\n\n@lextm commented on [Thu Dec 06 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-444999032)\n\nI think `<Reference Include=\"System.Design\" />` should not work by design. There is no GAC for .NET Core, so there is no place to resolve such assemblies.\r\n\r\nIdeally such should come in Windows Compatibility Pack for .NET Core, or Microsoft.WindowsDesktop.App.\n\n---\n\n@jnm2 commented on [Thu Dec 06 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-445001142)\n\n@lextm I was thinking System.Design should be part of `<FrameworkReference Include=\"Microsoft.DesktopUI\" />`.\n\n---\n\n@damageboy commented on [Sat Dec 08 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-445499240)\n\nSame here...\r\nTrying to test our WinForms stuff in .NET Core 3.0 and hitting up on these missing APIs as part of property-grid related runtime support.\r\n\r\nIn my case the missing types are:\r\n* `CollectionEditor`\r\n* `ObjectSelectorEditor`\r\n\n\n---\n\n@dreddy-work commented on [Sat Dec 08 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-445501174)\n\nWe will be taking a look at porting these editors soon. \n\n---\n\n@livarcocc commented on [Sun Dec 09 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-445561874)\n\n@dreddy-work should we move this issue to dotnet/winforms?\n\n---\n\n@dreddy-work commented on [Sun Dec 09 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-445562090)\n\n@livarcocc , yes please. we will be looking into these coming week.\n\n---\n\n@damageboy commented on [Sun Dec 09 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-445562370)\n\nJust to be completely clear. My current issue is simply compiling custom property grid editors that inherit from the said `*Editor` base classes as I have a property grid that presents custom editors @ runtime (not at design time).\r\n\r\nThis is not a VS designer issue, at least as far as I am concerned..\n\n---\n\n@dreddy-work commented on [Sun Dec 09 2018](https://github.com/dotnet/core-sdk/issues/79#issuecomment-445564326)\n\n@damageboy , I understand. When we were porting editors to netcore, our analysis was, the above said editors will be used mostly at the design time and hence prioritized that way. Now that we see runtime usage for these editors, we are discussing to port these editors to net core in the coming weeks.\n\n","Url":"https://github.com/dotnet/winforms/issues/221","RelatedDescription":"Open issue \"How to reference System.Design\" (#221)"},{"Id":"389388140","IsPullRequest":true,"CreatedAt":"2018-12-10T17:10:10","Actor":"AdamYoblick","Number":"220","RawContent":null,"Title":"disable test signing while arcade is looking into issue","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/220","RelatedDescription":"Closed or merged PR \"disable test signing while arcade is looking into issue\" (#220)"},{"Id":"388920279","IsPullRequest":true,"CreatedAt":"2018-12-10T16:31:50","Actor":"dotnet-maestro[bot]","Number":"211","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/211","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#211)"},{"Id":"389066964","IsPullRequest":false,"CreatedAt":"2018-12-09T21:38:21","Actor":"raffaeler","Number":"218","RawContent":null,"Title":"DataObject.SetAudio should be exposed with a new overload taking Span<byte>","State":"open","Body":"The `DataObject` class currently exposes two audio overloads. The [first one](https://github.com/raffaeler/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/DataObject.cs#L385) taking a `byte[]` calls the [second](https://github.com/raffaeler/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/DataObject.cs#L395) who takes a `Stream`:\r\n```c#\r\npublic virtual void SetAudio(byte[] audioBytes)\r\npublic virtual void SetAudio(Stream audioStream)\r\n```\r\n# Rationale \r\nSince the introduction of `Span<T>` it become preferable exposing APIs using `Span<T>` because they are stack-only types minimizing the use of the garbage collector and easily allows slicing the referenced memory.\r\n\r\n## Proposed API\r\n```c#\r\npublic virtual void SetAudio(Span<byte> audioBytes)\r\n```\r\nAn additional advantage of `Span<T>` is that it self describes the contiguous memory to be processed from the API. The existing overload taking `byte[]` does not even allow to specify an offset and length of the array.\r\n\r\nSince the current overloads allow specifying an empty interval and only check whether the parameter (`byte[]` or `Stream` is null), it is also possible to avoid any parameter check since `Span<T>` is a `ref struct` and cannot be null.\r\nThe parameter `Span<byte>` can be empty, as it is for the other overloads.\r\n\r\n## Implementation\r\nThe proposed implementation of the new public API is the following:\r\n```c#\r\npublic virtual void SetAudio(Span<byte> audioBytes)\r\n{\r\n    var stream = new MemoryStream(audioBytes.Length);\r\n    stream.Write(audioBytes);\r\n    stream.Seek(0, SeekOrigin.Begin);\r\n    SetAudio(stream);\r\n}\r\n```\r\n\r\nThe MemoryStream is not disposed as it is not directly consumed from the called methods. The other overload does the same.\r\n\r\nThe [PR for this new API](https://github.com/dotnet/winforms/pull/217) is available and contains also a test with four different types of blobs, including an empty one.\r\n","Url":"https://github.com/dotnet/winforms/issues/218","RelatedDescription":"Open issue \"DataObject.SetAudio should be exposed with a new overload taking Span<byte>\" (#218)"},{"Id":"389066885","IsPullRequest":true,"CreatedAt":"2018-12-09T21:37:29","Actor":"raffaeler","Number":"217","RawContent":null,"Title":"New API Proposal. A new overload for DataObject.SetAudio","State":"open","Body":"In this PR, a new DataObject.SetAudio overload is added:\r\n```\r\npublic virtual void SetAudio(Span<byte> audioBytes)\r\n```\r\nThe PR includes the test with different blob payloads.\r\nAn [issue has been created](https://github.com/dotnet/winforms/issues/218) to discuss the proposal.","Url":"https://github.com/dotnet/winforms/pull/217","RelatedDescription":"Open PR \"New API Proposal. A new overload for DataObject.SetAudio\" (#217)"},{"Id":"389043979","IsPullRequest":false,"CreatedAt":"2018-12-09T17:21:51","Actor":"Liminiens","Number":"216","RawContent":null,"Title":"System.Resources.Resx code readability and style issues","State":"open","Body":"**Problem description:**\r\n\r\nCurrently there is an issue with code style consistency in `System.Resources.Resx...` family (like using BCL types instead of keywords), and in some places the readability of the code could be improved. For example, use  `foreach` instead of `for`, or remove redundant else conditions. Also some patterns like `str != null && str.Length > 0`, or `.Equals` can be simplified.","Url":"https://github.com/dotnet/winforms/issues/216","RelatedDescription":"Open issue \"System.Resources.Resx code readability and style issues\" (#216)"},{"Id":"389023423","IsPullRequest":false,"CreatedAt":"2018-12-09T13:29:41","Actor":"KlausLoeffelmann","Number":"215","RawContent":null,"Title":"Port ToolStrip HighDpi improvements from Framework runtime to Core","State":"open","Body":"This is a back-port of the bug fix from .NET 4.8 (BUG 378542) and its original description:\r\n\r\nAdjustments for controls for smooth operation in HighDPI PerMonitorV2 mode are usually straight-forward, since the basic infrastructure for this is already implemented in the control class.\r\nBasically, the problem has to be solved that if a form is moved from one monitor to another with a different pixel density, the size of the form and also the size of all controls placed on it have to be adapted to the new resolution.\r\n\r\nOne starting point here is the fact that the font size of the form is adjusted according to the new Monitor DPI value. Since the font property is an ambient property, the font size changes propagate to all hosted controls so that they are also affected by the font size changes, and for which the display has already been adapted to the changed pixel density. The trigger for the font adjustment is the method `WmDpiChangedBeforeParent` in the control class. \r\n \r\nSecondly, further DPI-dependent adjustments must be made, and the `RescaleConstantsForDpi` method, which can be overwritten, provides the second approach.\r\n \r\n**Challenges with ToolStrip based Controls**\r\n \r\nAll classes inherited from `ToolStripItem` are not controls, but components, so they are not included in the normal method inheritance chain, or in other words: `RescaleConstantsForDpi` is not invoked for component based classes. `ToolStripDropDown`, which forms the container for an opened pulldown menu/pulldown `ToolBoxButton`, is only instantiated if needed and is not part of the normal control tree of a Forms/Control container. For this reason, this control does not implicitly gets its overridden `RescaleConstantsForDPI` called either.\r\n \r\n**Solution**\r\n \r\nIn order to get the right point in time within the normally excluded control classes when the DPI change (the transition from one monitor to another) occurs, we enable `ToolStrip` itself in a way other controls/components can register at the `ToolStrip` to receive a kind of `Rescale` event. This is done with the new field variable `rescaleConstsCallbackDelegate`. Because `ToolStrip` itself is placed on a form or container, its `RescaleConstantsForDPI` is called accordingly, so it performs the Invoke based on this delegate, triggering all listening components. However, this event must be initially wired for all of the `ToolStripItem`-based components it is hosting, and this is done in `ToolStripItem`'s `SetOwner` method.\r\nThis means that `ToolStrip`, all controls derived from `ToolStrip` and also all components derived from `ToolStripItem` are triggered when the DPI changes and the required size adjustments are due. A problem remains with the `ToolStripDropDown` containers, which host only `ToolStripDropDownItem`-based components, but which again are derived from `ToolStripItem`. The latter enables us to intervene in the rescaling event, determine if the affected `ToolStripItem` \"has\" a `DropDown`, and then make any necessary rescaling here (and in any subordinate) as well. This happens in the `ProcessDropDownItems` method of the `ToolStripDropDownItem` class, which in turn is called by `ToolStrip_RescaleConstants` (and which in turn is triggered by the new delegate in `ToolStrip` and the wiring of `ToolStripItem`).\r\n \r\nCode changes in all remaining classes then serve as far as possible to make the actual size adjustments for the new DPI value.","Url":"https://github.com/dotnet/winforms/issues/215","RelatedDescription":"Open issue \"Port ToolStrip HighDpi improvements from Framework runtime to Core\" (#215)"},{"Id":"389004281","IsPullRequest":false,"CreatedAt":"2018-12-09T09:43:01","Actor":"MohammadHamdyGhanem","Number":"214","RawContent":null,"Title":"Upgrade ReportViewer  Control","State":"open","Body":"1- Allow us to change the default zoom of the ReportViewrer  control programmatically. I prefer to use \"fit width\", so I had to hack the control using reflection to do so, which can cause problems in different versions.\r\n\r\n2- Allow to save the report in doc format. Some Arabic reports is miss-formatted in docx.\r\n\r\n3- I suggest also to add a static method to the ReportViewrer  control to Allow us to print the report directly with the default printer without viewing the report first. We also usee reflection to write this class (which works fine with 2012 version of the ReportViewrer and may cause problems in later versions, so it will be better to be a part of the control):\r\n\r\n```c#\r\nusing System;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Globalization;\r\nusing System.Drawing;\r\nusing System.Drawing.Imaging;\r\nusing System.Drawing.Printing;\r\nusing Microsoft.Reporting.WinForms;\r\nusing System.Collections.Generic;\r\nusing System.Collections.Specialized;\r\nusing System.Diagnostics;\r\nusing System.ComponentModel;\r\nusing System.Data;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing System.Windows.Forms;\r\n\r\npublic class ReportPrinter\r\n{\r\n    public static void Print(LocalReport Report)\r\n    {\r\n        AutoPrintCls AuroPrint = new AutoPrintCls(Report);\r\n        AuroPrint.Print();\r\n    }\r\n\r\n    public static void Print(ServerReport Report)\r\n    {\r\n        AutoPrintCls AuroPrint = new AutoPrintCls(Report);\r\n        AuroPrint.Print();\r\n    }\r\n\r\n    private class AutoPrintCls : PrintDocument\r\n    {\r\n        private PageSettings m_pageSettings;\r\n        private int m_currentPage;\r\n        private List<Stream> m_pages = new List<Stream>();\r\n\r\n        internal AutoPrintCls(ServerReport serverReport)\r\n            : this((Report)serverReport)\r\n        {\r\n            RenderAllServerReportPages(serverReport);\r\n        }\r\n\r\n        internal AutoPrintCls(LocalReport localReport)\r\n            : this((Report)localReport)\r\n        {\r\n            RenderAllLocalReportPages(localReport);\r\n        }\r\n\r\n        private AutoPrintCls(Report report)\r\n        {\r\n            ReportPageSettings reportPageSettings = report.GetDefaultPageSettings();\r\n            m_pageSettings = new PageSettings();\r\n            m_pageSettings.PaperSize = reportPageSettings.PaperSize;\r\n            m_pageSettings.Margins = reportPageSettings.Margins;\r\n            m_pageSettings.Landscape = reportPageSettings.IsLandscape;\r\n        }\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            base.Dispose(disposing);\r\n\r\n            if (disposing)\r\n            {\r\n                foreach (Stream s in m_pages)\r\n                {\r\n                    s.Dispose();\r\n                }\r\n\r\n                m_pages.Clear();\r\n            }\r\n        }\r\n\r\n        protected override void OnBeginPrint(PrintEventArgs e)\r\n        {\r\n            base.OnBeginPrint(e);\r\n\r\n            m_currentPage = 0;\r\n        }\r\n\r\n        protected override void OnPrintPage(PrintPageEventArgs e)\r\n        {\r\n            base.OnPrintPage(e);\r\n\r\n            Stream pageToPrint = m_pages[m_currentPage];\r\n            pageToPrint.Position = 0;\r\n\r\n            // Load each page into a Metafile to draw it.\r\n            using (Metafile pageMetaFile = new Metafile(pageToPrint))\r\n            {\r\n                Rectangle adjustedRect = new Rectangle(e.PageBounds.Left - Convert.ToInt32((int)(e.PageSettings.HardMarginX)), e.PageBounds.Top - Convert.ToInt32((int)(e.PageSettings.HardMarginY)), e.PageBounds.Width, e.PageBounds.Height);\r\n                // Draw a white background for the report\r\n                e.Graphics.FillRectangle(Brushes.White, adjustedRect);\r\n\r\n                // Draw the report content\r\n                e.Graphics.DrawImage(pageMetaFile, adjustedRect);\r\n\r\n                // Prepare for next page.  Make sure we haven't hit the end.\r\n                m_currentPage += 1;\r\n                e.HasMorePages = m_currentPage < m_pages.Count;\r\n            }\r\n        }\r\n\r\n        protected override void OnQueryPageSettings(QueryPageSettingsEventArgs e)\r\n        {\r\n            e.PageSettings = (PageSettings)m_pageSettings.Clone();\r\n        }\r\n\r\n        private void RenderAllServerReportPages(ServerReport serverReport)\r\n        {\r\n            try\r\n            {\r\n                string deviceInfo = CreateEMFDeviceInfo(0, 0);\r\n\r\n                // Generating Image renderer pages one at a time can be expensive.  In order\r\n                // to generate page 2, the server would need to recalculate page 1 and throw it\r\n                // away.  Using PersistStreams causes the server to generate all the pages in\r\n                // the background but return as soon as page 1 is complete.\r\n                NameValueCollection firstPageParameters = new NameValueCollection();\r\n                firstPageParameters.Add(\"rs:PersistStreams\", \"True\");\r\n\r\n                // GetNextStream returns the next page in the sequence from the background process\r\n                // started by PersistStreams.\r\n                NameValueCollection nonFirstPageParameters = new NameValueCollection();\r\n                nonFirstPageParameters.Add(\"rs:GetNextStream\", \"True\");\r\n\r\n                string mimeType = null;\r\n                string fileExtension = null;\r\n\r\n\r\n                Stream pageStream = serverReport.Render(\"IMAGE\", deviceInfo, firstPageParameters, out mimeType,out fileExtension);\r\n\r\n\r\n\r\n                // The server returns an empty stream when moving beyond the last page.\r\n                while (pageStream.Length > 0)\r\n                {\r\n                    m_pages.Add(pageStream);\r\n\r\n                    pageStream = serverReport.Render(\"IMAGE\", deviceInfo, nonFirstPageParameters,out mimeType,out fileExtension);\r\n                }\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                MessageBox.Show(\"possible missing information ::  \" + e.Message);\r\n            }\r\n        }\r\n\r\n        private void RenderAllLocalReportPages(LocalReport localReport)\r\n        {\r\n            try\r\n            {\r\n                string deviceInfo = CreateEMFDeviceInfo(0, 0);\r\n\r\n                Warning[] warnings = null;\r\n\r\n                localReport.Render(\"IMAGE\", deviceInfo, LocalReportCreateStreamCallback,out warnings);\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                MessageBox.Show(\"error :: \" + e.Message);\r\n            }\r\n        }\r\n\r\n        private Stream LocalReportCreateStreamCallback(string name, string extension, Encoding encoding, string mimeType, bool willSeek)\r\n        {\r\n            MemoryStream stream = new MemoryStream();\r\n            m_pages.Add(stream);\r\n\r\n            return stream;\r\n        }\r\n\r\n        private string CreateEMFDeviceInfo(int startPage, int endPage)\r\n        {\r\n            int hundrethsOfInch = m_pageSettings.Landscape ? m_pageSettings.PaperSize.Height : m_pageSettings.PaperSize.Width;\r\n            int hundrethsOfInch2 = m_pageSettings.Landscape ? m_pageSettings.PaperSize.Width : m_pageSettings.PaperSize.Height;\r\n            string _text = string.Format(CultureInfo.InvariantCulture, \"<MarginTop>{0}</MarginTop><MarginLeft>{1}</MarginLeft><MarginRight>{2}</MarginRight><MarginBottom>{3}</MarginBottom><PageHeight>{4}</PageHeight><PageWidth>{5}</PageWidth>\", new object[] { ToInches(m_pageSettings.Margins.Top), ToInches(m_pageSettings.Margins.Left), ToInches(m_pageSettings.Margins.Right), ToInches(m_pageSettings.Margins.Bottom), ToInches(hundrethsOfInch2), ToInches(hundrethsOfInch) });\r\n            return string.Format(CultureInfo.InvariantCulture, \"<DeviceInfo><OutputFormat>emf</OutputFormat><StartPage>{0}</StartPage><EndPage>{1}</EndPage>{2}</DeviceInfo>\", new object[] { startPage, endPage, _text });\r\n        }\r\n\r\n        private static string ToInches(int hundrethsOfInch)\r\n        {\r\n            double inches = hundrethsOfInch / 100.0;\r\n            return inches.ToString(CultureInfo.InvariantCulture) + \"in\";\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis class can be used like this:\r\n```c#\r\nLocalReport Report = new LocalReport();\r\nReport.ReportEmbeddedResource = \"Project1.Report1.rdlc\";\r\nReport.DataSources.Add(\r\n          new ReportDataSource( ) {Name = \"DataSet1\", Value = BindingSource1}); \r\nReportPrinter.Print(Report);\r\n```\r\n\r\nIf this functionality is built in the ReportViewer, the Print methods can be added directly and make use of the internal code of the control. We can use it like this:\r\n```c#\r\nLocalReport Report = new LocalReport();\r\nReport.ReportEmbeddedResource = \"Project1.Report1.rdlc\";\r\nReport.DataSources.Add(\r\n          new ReportDataSource( ) {Name = \"DataSet1\", Value = BindingSource1}); \r\nReportViewer.Print(Report);\r\n```","Url":"https://github.com/dotnet/winforms/issues/214","RelatedDescription":"Open issue \"Upgrade ReportViewer  Control\" (#214)"},{"Id":"388937155","IsPullRequest":true,"CreatedAt":"2018-12-08T16:37:18","Actor":"sharwell","Number":"213","RawContent":null,"Title":"Verify copyright headers in CI","State":"open","Body":"This shows one approach to validating the .NET Foundation copyright header in all files added to the project. A code fix is provided to add the header if a file is missing one. See notes in the diff for additional commentary.\r\n\r\n⚠️ I wanted the file header warnings (SA1633, SA1636) to show up as warnings when building inside the IDE, but I was not able to do that. Something in the current project configuration is forcing warnings to be treated as errors everywhere. I typically configure projects so code style issues are reported as warnings during iterative development, and only turn into errors for command line builds (optional) and CI builds (encouraged).","Url":"https://github.com/dotnet/winforms/pull/213","RelatedDescription":"Open PR \"Verify copyright headers in CI\" (#213)"},{"Id":"388925259","IsPullRequest":true,"CreatedAt":"2018-12-08T14:07:19","Actor":"Liminiens","Number":"212","RawContent":null,"Title":"Clean up resx code","State":"open","Body":"Addreses https://github.com/dotnet/winforms/issues/216\r\n\r\n- Code readability improvements\r\n- Compare types directly\r\n- Use char `String.Split` overload\r\n- Replaced `str != null && str.Length > 0` pattern with `String.IsNullOrEmpty`\r\n- Use language keywords insted of BCL types\r\n- Removed unused parameter `isMetaData` in `ResXResourceReader.ParseAssemblyNode`\r\n- Removed unused field `binaryFormatter ` in `ResXResourceWriter`\r\n- Simplified/unnested `if` statements where possible\r\n- Replaced `for` loops with `foreach` loops\r\n- Fixed local variable naming in a few places","Url":"https://github.com/dotnet/winforms/pull/212","RelatedDescription":"Open PR \"Clean up resx code\" (#212)"},{"Id":"388865238","IsPullRequest":true,"CreatedAt":"2018-12-08T00:51:25","Actor":"AdamYoblick","Number":"209","RawContent":null,"Title":"Revert \"disable test signing for now (#206)\"","State":"closed","Body":"This reverts commit cf9f5f7a0d4bed538deb68a7b84a144bc44e44a3.","Url":"https://github.com/dotnet/winforms/pull/209","RelatedDescription":"Closed or merged PR \"Revert \"disable test signing for now (#206)\"\" (#209)"},{"Id":"388861842","IsPullRequest":true,"CreatedAt":"2018-12-08T00:49:21","Actor":"AdamYoblick","Number":"208","RawContent":null,"Title":"disable test signing for real this time","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/208","RelatedDescription":"Closed or merged PR \"disable test signing for real this time\" (#208)"},{"Id":"388849536","IsPullRequest":true,"CreatedAt":"2018-12-08T00:15:34","Actor":"AdamYoblick","Number":"206","RawContent":null,"Title":"disable test signing for now","State":"closed","Body":"test signing is running into sporadic failures on build machines, so disable it for now","Url":"https://github.com/dotnet/winforms/pull/206","RelatedDescription":"Closed or merged PR \"disable test signing for now\" (#206)"},{"Id":"388821500","IsPullRequest":false,"CreatedAt":"2018-12-08T00:09:01","Actor":"lextm","Number":"204","RawContent":null,"Title":"Verb runas does not trigger UAC elevation in preview 1","State":"closed","Body":"* .NET Core Version: (3.0 Preview1)\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nIt is very common to call another executable using `Process` class and pass `\"runas\"` as verb to trigger UAC prompt, so that the executable to call is launched as elevated.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nNo UAC prompt. The executable is launched but not elevated.\r\n\r\n**Expected behavior:**\r\nUAC prompt should show. The executable should be launched and elevated.\r\n\r\n**Minimal repro:**\r\nWill attach later.","Url":"https://github.com/dotnet/winforms/issues/204","RelatedDescription":"Closed issue \"Verb runas does not trigger UAC elevation in preview 1\" (#204)"},{"Id":"388851760","IsPullRequest":true,"CreatedAt":"2018-12-07T23:38:43","Actor":"kevingosse","Number":"207","RawContent":null,"Title":"Remove CodeAccessSecurity","State":"open","Body":"Contributes to https://github.com/dotnet/winforms/issues/40\r\n\r\n - Removed security attributes\r\n - Removed CAS asserts\r\n - Deleted SecurityUtil.cs and WinFormsSecurity.cs (contained only CAS-related helpers)","Url":"https://github.com/dotnet/winforms/pull/207","RelatedDescription":"Open PR \"Remove CodeAccessSecurity\" (#207)"},{"Id":"388834169","IsPullRequest":true,"CreatedAt":"2018-12-07T22:19:29","Actor":"zsd4yr","Number":"205","RawContent":null,"Title":"charset utf-8","State":"open","Body":"Some commits coming in were adding unicode not readable chars\r\n\r\nThis change should prevent that in new files / additions. ","Url":"https://github.com/dotnet/winforms/pull/205","RelatedDescription":"Open PR \"charset utf-8\" (#205)"},{"Id":"388579645","IsPullRequest":true,"CreatedAt":"2018-12-07T22:10:48","Actor":"Liminiens","Number":"199","RawContent":null,"Title":"Remove unused symbols and commented code from resx code","State":"closed","Body":"SYSTEM_WEB, UNUSED, SOAP_FORMATTER, aren't set anywhere. SoapFormatter is obsolete since .NET 2.0, and there is no System.Web in .NET Core :)","Url":"https://github.com/dotnet/winforms/pull/199","RelatedDescription":"Closed or merged PR \"Remove unused symbols and commented code from resx code\" (#199)"},{"Id":"388681860","IsPullRequest":true,"CreatedAt":"2018-12-07T22:08:04","Actor":"kevingosse","Number":"201","RawContent":null,"Title":"Suppress SecurityCritical attributes","State":"closed","Body":"Contributes to https://github.com/dotnet/winforms/issues/48 \r\n\r\n- Restore compiler warning CS0649: there actually no unused field in this project\r\n- Fix warnings due to SecurityCriticalScope being obsolete","Url":"https://github.com/dotnet/winforms/pull/201","RelatedDescription":"Closed or merged PR \"Suppress SecurityCritical attributes\" (#201)"},{"Id":"388646053","IsPullRequest":true,"CreatedAt":"2018-12-07T18:45:03","Actor":"dotnet-maestro[bot]","Number":"200","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/200","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#200)"},{"Id":"388751748","IsPullRequest":false,"CreatedAt":"2018-12-07T17:45:53","Actor":"rido-min","Number":"202","RawContent":null,"Title":"Incorrect ThreadExceptionDialog","State":"open","Body":"* .NET Core Version:\r\n```\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview1-27031-02\r\n  Commit:  16fc8e9125\r\n```\r\n* Have you experienced this same bug with .NET Framework? No\r\n\r\n**Problem description:**\r\n\r\nThread Exception Dialog shows some issues:\r\n\r\n- Resources are not used\r\n- Buttons overlap\r\n- Text is not formatted\r\n\r\n![image](https://user-images.githubusercontent.com/14916339/49663771-82702180-fa04-11e8-937a-573b423ea573.png)\r\n\r\n\r\n\r\n**Expected behavior:**\r\nSame as .NET Framework\r\n\r\n![image](https://user-images.githubusercontent.com/14916339/49663855-cf53f800-fa04-11e8-81af-d82fe9fb8b3b.png)\r\n\r\n\r\n**Minimal repro:**\r\n`dotnet new winforms` and edit the Form1.cs to throw an exception from button click\r\n\r\n```cs\r\nprivate void buttonExit_Click(object sender, EventArgs e)\r\n{\r\n    throw new Exception(\"MyException\");\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/202","RelatedDescription":"Open issue \"Incorrect ThreadExceptionDialog\" (#202)"},{"Id":"388870808","IsPullRequest":false,"CreatedAt":"2018-12-05T16:11:24","Actor":"stefanov-stefan","Number":"210","RawContent":null,"Title":"win-x64 publish with Core3 Preview and VS2019 results in \"\"CheckEmbeddedRootDescriptor\" task was not given a value for the required parameter \"AssemblyPath\"\"","State":"open","Body":"I have been trying to publish a plain dotnet new winforms app by following the steps [here]([url](https://github.com/dotnet/core/blob/master/samples/linker-instructions.md)), but I end up with error: error MSB4044: The \"CheckEmbeddedRootDescriptor\" task was not given a value for the required parameter \"AssemblyPath\".\r\n\r\nSee attached image for the whole process. \r\n\r\nI am running VS2019 Preview and have the following SDKs installed: https://www.screencast.com/t/29MbjIeY04 \r\n\r\nAny advice on how I can overcome this?\r\n![linker_issue](https://user-images.githubusercontent.com/1288402/49526561-be966b80-f8b8-11e8-9af1-ab64f18b0801.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/210","RelatedDescription":"Open issue \"win-x64 publish with Core3 Preview and VS2019 results in \"\"CheckEmbeddedRootDescriptor\" task was not given a value for the required parameter \"AssemblyPath\"\"\" (#210)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-12-11T05:31:10.1773874Z","RunDurationInMilliseconds":900}