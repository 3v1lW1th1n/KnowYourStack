{"Data":{"Blog":{"FeedItems":[{"Title":"Upcoming Updates for .NET Framework 4.8","PublishedOn":"2019-04-19T21:40:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Upcoming Updates for .NET Framework 4.8\nThe .NET Framework 4.8 product release is now available. The .NET Framework 4.8 product will receive updates on the same cadence and the usual channels (Windows...","Href":"https://devblogs.microsoft.com/dotnet/upcoming-updates-for-net-framework-4-8/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 4","PublishedOn":"2019-04-18T22:15:51+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we are making the fourth preview of Entity Framework Core 3.0 available on NuGet, alongside .NET Core 3.0 Preview 4 and ASP.NET Core 3.0 Preview 4. We encourage you to install this preview to...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-4/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 4","PublishedOn":"2019-04-18T22:13:01+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 4. It includes a chart control for Windows Forms, HTTP/2 support, GC updates to use less memory, support for CPU limits with Docker, the addition of...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-4/","RawContent":null},{"Title":"Announcing the .NET Framework 4.8","PublishedOn":"2019-04-18T20:12:27+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"We are thrilled to announce the release of the .NET Framework 4.8 today. It’s included in the Windows 10 May 2019 Update. .NET Framework 4.8 is also available on Windows 7+ and Windows Server 2008...","Href":"https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/","RawContent":null},{"Title":".NET Core April 2019 Updates – 2.1.10 and 2.2.4","PublishedOn":"2019-04-09T20:35:28+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included fixes.\n.NET Core 2.2.4 and .NET...","Href":"https://devblogs.microsoft.com/dotnet/net-core-april-2019-updates-2-1-10-and-2-2-4/","RawContent":null},{"Title":"Announcing ML.NET 1.0 RC – Machine Learning for .NET","PublishedOn":"2019-04-05T23:36:08+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0-rc-machine-learning-for-net/","RawContent":null},{"Title":".NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-04-02T21:47:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Visual Studio 2019 .NET productivity","PublishedOn":"2019-04-02T19:00:17+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Your friendly neighborhood .NET productivity team (aka. Roslyn) focuses a lot on improving the .NET coding experience. Sometimes it’s the little refactorings and code fixes that really improve your...","Href":"https://devblogs.microsoft.com/dotnet/visual-studio-2019-net-productivity-2/","RawContent":null},{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2019-04-02T10:40:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,019 years. In the Japanese calendar, however, a new era begins...","Href":"https://devblogs.microsoft.com/dotnet/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":"Announcing F# 4.6","PublishedOn":"2019-03-29T21:40:28+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce general availability of F# 4.6 and the F# tools for Visual Studio 2019! In this post, I&#8217;ll show you how to get started, explain the F# 4.6 feature set, give you...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9341532248","Type":"PullRequestEvent","CreatedAt":"2019-03-29T14:44:24","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Merged pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337730849","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:29:48","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Opened pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337725308","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Opened pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9337679090","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:16:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Merged pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9337677839","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:15:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Merged pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335742237","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:21:55","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Opened pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335605309","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:00:02","Actor":"scottaddie","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Opened pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9266562420","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:04:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Merged pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."},{"Id":"9445263990","Type":"IssuesEvent","CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Opened issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109) at dotnet/announcements","RelatedBody":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: #252"},{"Id":"9434908530","Type":"IssuesEvent","CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Opened issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108) at dotnet/announcements","RelatedBody":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core)."},{"Id":"9425046734","Type":"IssuesEvent","CreatedAt":"2019-04-11T15:16:44","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Opened issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107) at dotnet/announcements","RelatedBody":".NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](need link) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9499202154","Type":"IssuesEvent","CreatedAt":"2019-04-24T05:27:46","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24211","RelatedDescription":"Opened issue \"Satellite Lookup on case sensitive file systems...\" (#24211) at dotnet/coreclr","RelatedBody":"@tarekgh Made a request for searching for Satellite Assemblies using case insensitive path search.\r\n\r\nInitial prototype of the case insensitive search illustrated the complexity of such an approach.\r\n\r\nThe prototype case insensitive search code was removed and this issue was opened for the design discussion.\r\n\r\n@jkotas made the alternative suggestion that we control the build tooling.  We could simply 'lower case` the culture directories....\r\n\r\nSee discussion which started here https://github.com/dotnet/coreclr/pull/24191#discussion_r277793894"},{"Id":"9499176789","Type":"PullRequestEvent","CreatedAt":"2019-04-24T05:20:29","Actor":"am11","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24210","RelatedDescription":"Opened pull request \"Delete null comparisons of non-null arguments\" (#24210) at dotnet/coreclr","RelatedBody":"gcc 8 complains that these conditions cannot be met, as argument is\r\nnonnull, e.g.:\r\n\r\n> error: nonnull argument 'this' compared to NULL\r\n> [-Werror=nonnull-compare]"},{"Id":"9499114125","Type":"PullRequestEvent","CreatedAt":"2019-04-24T05:01:49","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24203","RelatedDescription":"Merged pull request \"Match managed DetermineLibraryNameVariations implementation to native DetermineLibNameVariations implementation.\" (#24203) at dotnet/coreclr","RelatedBody":"Fixes #24187 "},{"Id":"9499114118","Type":"IssuesEvent","CreatedAt":"2019-04-24T05:01:49","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24187","RelatedDescription":"Closed issue \"DetermineLibNameVariations in System.Runtime.Loader doesn't match native\" (#24187) at dotnet/coreclr","RelatedBody":"The managed implementation doesn't match native implementation.\r\n\r\nhttps://github.com/dotnet/coreclr/pull/24143#discussion_r277138341\r\n\r\nCc @jkoritzinsky "},{"Id":"9498953294","Type":"IssuesEvent","CreatedAt":"2019-04-24T04:13:31","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24209","RelatedDescription":"Opened issue \"Redundant length check when using Span<byte> => new byte[]\" (#24209) at dotnet/coreclr","RelatedBody":"```csharp\r\npublic static bool IsHexadecimalChar(char c)\r\n{\r\n    var charToHex = CharToHexLookup;\r\n    var i = (int)c;\r\n    return (uint)i < (uint)charToHex.Length && charToHex[i] != 0xff;\r\n}\r\n\r\nprivate static ReadOnlySpan<byte> CharToHexLookup => new byte[]\r\n{\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 15\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 31\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 47\r\n    0x0,  0x1,  0x2,  0x3,  0x4,  0x5,  0x6,  0x7,  0x8,  0x9,  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 63\r\n    0xFF, 0xA,  0xB,  0xC,  0xD,  0xE,  0xF,  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 79\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 95\r\n    0xFF, 0xa,  0xb,  0xc,  0xd,  0xe,  0xf // 102\r\n};\r\n```\r\nGenerates\r\n```asm\r\nPathStringHelper.IsHexadecimalChar(Char)\r\n    L0000: sub rsp, 0x48\r\n    L0004: movzx eax, cx\r\n    L0007: cmp eax, 0x67\r\n    L000a: jae L002f\r\n    L000c: cmp eax, 0x67   ; this check is same as above\r\n    L000f: jae L0036           \r\n    L0011: movsxd rax, eax\r\n    L0014: mov rdx, 0x1a744990bc8\r\n    L001e: add rax, rdx\r\n    L0021: cmp byte [rax], 0xff\r\n    L0024: setnz al\r\n    L0027: movzx eax, al\r\n    L002a: add rsp, 0x48\r\n    L002e: ret\r\n    L002f: xor eax, eax\r\n    L0031: add rsp, 0x48\r\n    L0035: ret\r\n    L0036: call System.ThrowHelper.ThrowIndexOutOfRangeException()\r\n    L003b: int3\r\n```"},{"Id":"9498768799","Type":"PullRequestEvent","CreatedAt":"2019-04-24T03:21:11","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24204","RelatedDescription":"Merged pull request \"Delete unnecessary static and update GCSample to VS2019\" (#24204) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9498091350","Type":"IssuesEvent","CreatedAt":"2019-04-24T00:12:16","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/11126","RelatedDescription":"Closed issue \"Remove checked-in ArrayBufferWriter\" (#11126) at dotnet/cli","RelatedBody":"When https://github.com/dotnet/corefx/issues/34894 is in"},{"Id":"9498090082","Type":"IssuesEvent","CreatedAt":"2019-04-24T00:11:57","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/11190","RelatedDescription":"Closed issue \"Install global tool failed with error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'any'.\" (#11190) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nRequire: machine also install netcoreapp2.1 runtime since \"dotnetsay\" is targeting 2.1. This should not be required when netcoreapp3.0 is released and dotnetsay is updated\r\n1. Create empty directory\r\n2. not yet implemented Run dotnet new tool-manifest\r\n\ta. In the meantime copy the following and create file called dotnet-tools.json\r\n \r\n{\r\n\"version\": 1,\r\n\"isRoot\": true,\r\n\"tools\": {}\r\n}\r\n3. cd to the directory with manifest file\r\n4. run dotnet tool install dotnetsay\r\n## Expected  behavior\r\nRun dotnet tool install dotnetsay succeeded.\r\n\r\n## Actual behavior\r\nRun failed with error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'any'.\r\n![image](https://user-images.githubusercontent.com/33921754/56344804-e72c5b80-61f0-11e9-9813-28f48c941a6d.png)\r\n\r\n\r\n\r\n## Environment data\r\nD16.0/28803.202(16.0.2) + CLI/SDK: 3.0.100-preview5-011354\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011354\r\n Commit:    3796a49205\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011354\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27617-04\r\n  Commit:  f28abecf15\r\n\r\n.NET Core SDKs installed:\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011354 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19217-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27617-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27617-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"9498051218","Type":"PullRequestEvent","CreatedAt":"2019-04-24T00:01:20","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11240","RelatedDescription":"Opened pull request \"Merge release/3.0.1xx to master\" (#11240) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9497874378","Type":"PullRequestEvent","CreatedAt":"2019-04-23T23:13:50","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11238","RelatedDescription":"Merged pull request \"release/2.2.3xx: Update debain jessie image\" (#11238) at dotnet/cli","RelatedBody":"The \"Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]\" leg of the release/2.1.7xx CLI build is failing:\r\n\r\n**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**\r\n\r\ndebian.org re-organized their folders anD deleted \"jessie-updates\". Cherry-picking the change that addresses this. \r\n\r\nThe release/2.2.3xx hasn't had a successful build of all legs yet - this should solve the problem."},{"Id":"9497861904","Type":"PullRequestEvent","CreatedAt":"2019-04-23T23:10:43","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11239","RelatedDescription":"Merged pull request \"release/2.1.7xx: Update debain jessie image\" (#11239) at dotnet/cli","RelatedBody":"The \"Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]\" leg of the release/2.1.7xx CLI build is failing:\r\n\r\n**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**\r\n\r\ndebian.org re-organized their folders and deleted \"jessie-updates\". Cherry-picking the change that addresses this. \r\n\r\nThe release/2.1.7xx hasn't had a successful build of all legs yet - this should solve the problem."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9494485903","Type":"IssuesEvent","CreatedAt":"2019-04-23T14:36:15","Actor":"ststeiger","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1166","RelatedDescription":"Opened issue \"Referenced NetStandard-project does not get local-copied in .NET Core application \" (#1166) at dotnet/standard","RelatedBody":"I've created a project called \r\n`System.ServiceProcess`\r\nas netstandard 2.0 library. \r\n\r\nI've referenced project `System.ServiceProcess` in project `LdapService`. \r\nThe two projects are in the same solution. \r\n\r\nLdapService references project `System.ServiceProcess`. \r\nLdapService also references project `IniParser`. \r\nIniParser is a netstandard 2.0 library. \r\n\r\nIniParser gets localcopied to LdapService. \r\nSystem.ServiceProcess does not. \r\n\r\nI added <RestoreProjectStyle>PackageReference</RestoreProjectStyle> which once helped in a .NET Framework 4.6.1 project. \r\nBut that doesn't work .\r\nI tried setting localCopy to true, also no effect. \r\n\r\nIt looks like it's wrongly identifying System.ServiceProcess as a SharedFramework-DLL, and thus ignores local-copying. \r\n\r\nBUG.\r\n\r\nVersion Information:\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.5\r\nVisualStudio.15.Release/15.9.5+28307.280\r\nNetCore 2.1\r\n```\r\n"},{"Id":"9493420639","Type":"PullRequestEvent","CreatedAt":"2019-04-23T12:23:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1165","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1165) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19222.2\r\n\r\n"},{"Id":"9493286304","Type":"PullRequestEvent","CreatedAt":"2019-04-23T12:03:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1165","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1165) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19222.2\r\n\r\n"},{"Id":"9490066513","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:29:21","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1164","RelatedDescription":"Merged pull request \"Update branding on master\" (#1164) at dotnet/standard","RelatedBody":""},{"Id":"9490066108","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:29:15","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1163","RelatedDescription":"Merged pull request \"Merge from master\" (#1163) at dotnet/standard","RelatedBody":""},{"Id":"9490037258","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:21:01","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1164","RelatedDescription":"Opened pull request \"Update branding on master\" (#1164) at dotnet/standard","RelatedBody":""},{"Id":"9490034336","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:20:11","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1163","RelatedDescription":"Opened pull request \"Merge from master\" (#1163) at dotnet/standard","RelatedBody":""},{"Id":"9489401375","Type":"IssuesEvent","CreatedAt":"2019-04-22T22:26:07","Actor":"CalvinFengDatacom","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1162","RelatedDescription":"Closed issue \"Multiple assemblies with equivalent identity have been imported\" (#1162) at dotnet/standard","RelatedBody":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks"},{"Id":"9489338685","Type":"IssuesEvent","CreatedAt":"2019-04-22T22:12:14","Actor":"CalvinFengDatacom","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1162","RelatedDescription":"Opened issue \"Multiple assemblies with equivalent identity have been imported\" (#1162) at dotnet/standard","RelatedBody":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks"},{"Id":"9489232340","Type":"IssuesEvent","CreatedAt":"2019-04-22T21:50:45","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1103","RelatedDescription":"Closed issue \"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception\" (#1103) at dotnet/standard","RelatedBody":""},{"Id":"9482892530","Type":"PullRequestEvent","CreatedAt":"2019-04-21T18:54:16","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1160","RelatedDescription":"Merged pull request \"Add EnumeratorCancellationAttribute\" (#1160) at dotnet/standard","RelatedBody":"This aligns .NET Standard with the [PR made in CoreFx](https://github.com/dotnet/corefx/pull/37064). For more details, see the [API discussion](https://github.com/dotnet/corefx/issues/37012).\r\n\r\nThis is a last minute firedrill for preview 5 (which will be used for demoing functionality during Build), which means I'll have to merge this by tomorrow morning. If there are any concerns, please let me know ASAP or we'll simply back it out after preview 5."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9499141129","Type":"IssuesEvent","CreatedAt":"2019-04-24T05:09:58","Actor":"chucklu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37111","RelatedDescription":"Closed issue \"The default encoding is not correct\" (#37111) at dotnet/corefx","RelatedBody":"\r\nI try to get the default encoding in win10 by powershell 6.1 with the following command\r\n```powershell\r\n[System.Text.Encoding]::Default.EncodingName\r\n```\r\nWhat I got is Unicode (UTF-8), however the actually default encoding should be Chinese Simplified (GB2312).\r\n\r\nYou can check more detail info in https://github.com/PowerShell/PowerShell/issues/9450\r\n\r\n"},{"Id":"9498906586","Type":"PullRequestEvent","CreatedAt":"2019-04-24T03:59:55","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37131","RelatedDescription":"Opened pull request \"Fix CPINFOEXW definition\" (#37131) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9499158224","Type":"IssuesEvent","CreatedAt":"2019-04-24T05:15:04","Actor":"kameko","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/35233","RelatedDescription":"Opened issue \"Implicit class-local object field for lock statement\" (#35233) at dotnet/roslyn","RelatedBody":"**Version Used**: C# 7\r\n\r\nI use the `lock` statement a fair bit, and I find it very redundant that for every single time I have used it, across the span of years, I have, in all cases, had to write exactly one read-only object field in every class I use it with, and then reference that object as the object to lock on, only inside the class it was defined. I've never needed more than one object, I've never needed to pass the object outside of the class. Why is it that the lock statement can't simply take the form of\r\n```cs\r\nlock\r\n{\r\n    // ...\r\n}\r\n```\r\nand just create a private internal object field in that class? For multiple statements, they would just refer to that same object. The old syntax would still be there for the edge cases of requiring a handle on the object, but for every case of the `lock` statement I've ever seen, it hasn't been needed in those cases. I don't see this case being any different from an auto-property versus a fully-written property with an explicitly-written backing field.\r\n\r\nSorry if this has already been suggested, but I couldn't find a suggestion already made for it. I would have done this years ago but I figured it was such an obvious idea that it was already suggested and just shot down. It's a complaint I see from new C# users all the time."},{"Id":"9498614313","Type":"IssuesEvent","CreatedAt":"2019-04-24T02:38:30","Actor":"walterlv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/35232","RelatedDescription":"Opened issue \"Method which returns nested Awaitable do not warn developers to write multiple awaits.\" (#35232) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual Studio 2019\r\n\r\n**Steps to Reproduce**:\r\n\r\nAssume that we have a method that returns nested awaitables:\r\n\r\n```csharp\r\nTask<Task> FooAsync()\r\n{\r\n    throw new NotImplementedException();\r\n}\r\n```\r\n\r\nIf developers forget to await it, C# language will warn the developers to add an `await` keyboard:\r\n\r\n```csharp\r\nFooAsync();\r\n```\r\n\r\nBut if we add one `await`, the C# language will not warn the developers to add another required `await` keyword:\r\n\r\n```csharp\r\nawait FooAsync();\r\n```\r\n\r\nThe correct usage is:\r\n\r\n```csharp\r\nawait await FooAsync();\r\n```\r\n\r\nI think that C# language should add this warning because we sometimes cannot find out this incorrect usage ourselves especially in UI applications:\r\n\r\n```csharp\r\nawait await Dispatcher.InvokeAsync(async ()=>\r\n{\r\n    // Ignored codes.\r\n});\r\n```\r\n"},{"Id":"9498582436","Type":"PullRequestEvent","CreatedAt":"2019-04-24T02:30:04","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35230","RelatedDescription":"Merged pull request \"Merge dev16.1-vs-deps to master-vs-deps\" (#35230) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9498473090","Type":"PullRequestEvent","CreatedAt":"2019-04-24T02:00:48","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34402","RelatedDescription":null,"RelatedBody":"Fixes #32093"},{"Id":"9498472821","Type":"PullRequestEvent","CreatedAt":"2019-04-24T02:00:45","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34402","RelatedDescription":"Closed pull request \"Do not qualify instance member access within a constructor initializer\" (#34402) at dotnet/roslyn","RelatedBody":"Fixes #32093"},{"Id":"9498361514","Type":"PullRequestEvent","CreatedAt":"2019-04-24T01:30:10","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35231","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#35231) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9498048716","Type":"PullRequestEvent","CreatedAt":"2019-04-24T00:00:44","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35231","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#35231) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9498214800","Type":"PullRequestEvent","CreatedAt":"2019-04-24T00:48:14","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7342","RelatedDescription":"Opened pull request \"Port GC changes from coreclr - 3\" (#7342) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7336\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/b2b4ea22fcf71ef61ff84aa9669da2419c7541a5):**\r\n- https://github.com/dotnet/coreclr/commit/41c47b8555d7d471547cfb641112cd31e37cb7ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c5bfdd98204d7cb265f633534d593ca9c008ca6b ([already merged](https://github.com/dotnet/corert/commit/254ae2344a64386bbb652e7318c937d523890d49))\r\n- https://github.com/dotnet/coreclr/commit/b04644c55ae003bd1c6c8fefe33d5dfe6ef240f0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/ab849639db83ee65e51838ef147cee8d21b813c7 ([already merged](https://github.com/dotnet/corert/commit/d56451ee402459a23ff28fe1eff672d131468580))\r\n- https://github.com/dotnet/coreclr/commit/840554e77f01a327e0c5df59d229149fd50b5c2d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/7e4afb4fbf900b789f53ccb816c6ddba7807de68 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c9a0d6d510e92dc4ebd4b78f766c706abce0a9af (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8d02c0786825a27d67fb2af150f751dbda360bef (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/11f2dbd1d8376358727a686126024984b01e3383 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c5ad5fd0f83b26d00ef567b215a7dcd5dd8394c9 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/67a8ef7380e9e30f10e67d3b34898903e6d18946 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/07fa3a32336d2da5d2bf652ad01d33f18b2debaf (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/dab2f6b76a1ed088a871374189e2133db9c9accb (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/958279de27e7f3c30ad53e35277653d1ec0f1e6e (manual port)\r\n- https://github.com/dotnet/coreclr/commit/ed57233f4d26114d45b1293ced80a09f879f72cf (manual port, omitted changes)\r\n\r\n**Points of interest**:\r\nhttps://github.com/dotnet/coreclr/commit/8d02c0786825a27d67fb2af150f751dbda360bef also contains shutdown logic which i could not identify in corert.\r\nAlso this change reordered the initialization due to \"This isn't done as part of InitializeGarbageCollector() above because it requires write barriers to have been set up on x86, which happens as part of InitJITHelpers1.\" which i've omitted as it seems to not apply to corert."},{"Id":"9498160200","Type":"IssuesEvent","CreatedAt":"2019-04-24T00:32:12","Actor":"Alan-FGR","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7341","RelatedDescription":"Opened issue \"Pinvoked libraries somehow get broken in CoreRT\" (#7341) at dotnet/corert","RelatedBody":"Hello there.\r\n\r\nI'm trying to debug a pretty hairy behavior in CoreRT here. This isn't a proper issue because my time is limited and I'm struggling to make sense of what's happening, but I think it's better to use an issue instead of Gitter to log my findings and maybe get help.\r\n\r\nI'm working on [C# bindings for the PhysX library](https://github.com/Alan-FGR/SharpPhysX), and I have a testbed sample kinda thing which renders the debug geometry from the PhysX library, it's working fine on both .NET Framework (4.7.2) and .NET Core 2.1, and the code seems correct. However, I couldn't get that to work properly on CoreRT.\r\n\r\nAt first I thought it could be something in my pinvokes/wrappers, but after some investigation by debugging the output binary in VS, the stack traces point to the PhysX internals, most specifically some threading code (most of the time at least). At that point I've tried to make a minimal repro using only the PhysX libraries, but I simply couldn't get the problem to manifest. I then started from the other way and stripped stuff from the sample until I get something that works, that's when I noticed that for some reason the contact solving stuff in PhysX is broken, take a look at these lovely gifs :trollface::\r\nHere's the proper expected result on CoreCLR:\r\n![coreclr](https://user-images.githubusercontent.com/8399299/56623789-23562680-660c-11e9-896e-c1b4dcd0d7ef.gif)\r\nHere's what happens on CoreRT:\r\n![corert](https://user-images.githubusercontent.com/8399299/56623786-20f3cc80-660c-11e9-8890-0905b1785400.gif)\r\n\r\nHowever, the thing is, even though the error happens in PhysX, when I remove the other libraries (I was trying to make a minimal SSCCE), the thing works, here's a minimal code that does the same thing except the other libraries were removed (it plots the cube height to console): https://github.com/Alan-FGR/CoreRT_SharpPhysX_Debug and it works fine on CoreRT, and here's a branch of SharpPhysX with some *kinda minimal* code that doesn't work: https://github.com/Alan-FGR/SharpPhysX/tree/corert_debug, note how the code that has to do with PhysX is the same (not 1:1 but the pinvoke calls are), the project in question is the [\"dotnetCore\"](https://github.com/Alan-FGR/SharpPhysX/tree/corert_debug/dotnetCore) the code is all in the DebugRenderer though because I thought it could be the abstract impls :P...\r\n\r\nI've also tried to remove PhysX and have just the rendering (bgfx debug text and whatnot), and that works fine, **the thing only crashes when I'm using all the pinvoked libs at the same time**, what makes me think that somehow they're conflicting with each other, like maybe they're writing on each other memories or something, I don't really know... but that makes debugging very hard, especially since I'm a total n00b at debugging interop.\r\n\r\nI'm going to try and make some better repros, but in case some of you want to give it a try I think that's all you need, the native PhysX is an opensource project too (https://github.com/NVIDIAGameWorks/PhysX/tree/4.0) and the native library (SharpPhysXLib) was built against the latest 4.0."},{"Id":"9498050753","Type":"PullRequestEvent","CreatedAt":"2019-04-24T00:01:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7336","RelatedDescription":"Merged pull request \"Port GC changes from coreclr - 2\" (#7336) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7332\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [lastly ported commit](https://github.com/dotnet/coreclr/commit/9ae6ed25affc42343a3f88f147ff4a5fbd1e9727):**\r\n- https://github.com/dotnet/coreclr/commit/51e968b013e9b1582035f202e004ed024f747f4f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4627704051a81c65d81771d7e776b676b8a2d44f (already merged)\r\n- https://github.com/dotnet/coreclr/commit/9e1e0b7c8f4d5ef1602ab6947a597559effbe60f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1b827b5a82f8c6f8a9ed760ee127938dea5a7ea4 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8bc067c194f0b44e95c6e6a490b99078a2fa9719 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fc3220f19a8ee8266e0782bf8878790453f790e6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d5906ff3e0d0f864c1432f1f39d586ca3d79fbb6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/992d37064fa76ea7633734607381545e228806a5 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ecdf277ce50f29cccb494157cdbbfda86517feac (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b2b4ea22fcf71ef61ff84aa9669da2419c7541a5 (omitted, need guidance)"},{"Id":"9497874650","Type":"IssuesEvent","CreatedAt":"2019-04-23T23:13:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7045","RelatedDescription":"Closed issue \"export function in generated lib\" (#7045) at dotnet/corert","RelatedBody":"I saw a lot of function of dotnet are exported in static libs\r\n\r\nis this by design?\r\n\r\nupFromDict_System_Linq_Expressions_System_Linq_Expressions_Expression__Lambda_4<System___Canon>_TypeHandle_System_Linq_Expressions_System_Linq_Expressions_Expression_1<TDelegate_System___Canon>\r\n  2BB2858 __GenericLookupFromDict_System_Linq_Expressions_System_Linq_Expressions_Expression__Lambda_4<System___Canon>_TypeHandle_TDelegate_System___Canon\r\n  2BB2858 __GenericLookupFromDict_System_Linq_Expressions_System_Linq_Expressions_Interpreter_InstructionList__EmitIntSwitch<System___Canon>_TypeHandle_System_Linq_Expressions_System_Linq_Expressions_Interpreter_IntSwitchInstruction_1<T_System___Canon>\r\n  2BB2858 __GenericLookupFromDict_System_Linq_Expressions_System_Linq_Expressions_Interpreter_LabelInfo__CommonNode<System___Canon>_TypeHandle_S_P_CoreLib_System_Collections_Generic_EqualityComparer_1<T_System___Canon>\r\n  2BB2858 __GenericLookupFromDict_System_Linq_Expressions_System_Linq_Expressions_Interpreter_LabelInfo__CommonNode<System___Canon>_TypeHandle_System_Collections_System_Collections_Generic_HashSet_1<T_System___Canon>\r\n  2BB2858 __GenericLookupFromDict_System_Linq_Expressions_System_Linq_Expressions_Interpreter_LightCompiler_QuoteVisitor__VisitLambda<System___Canon>_MethodDictionary_System_Linq_Express"},{"Id":"9497813683","Type":"IssuesEvent","CreatedAt":"2019-04-23T22:58:44","Actor":"josephmoresena","Repository":"dotnet/","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7340","RelatedDescription":"Opened issue \"clang: warning: argument unused during compilation: '-exported_symbols_list\" (#7340) at dotnet/","RelatedBody":"I am testing the operation of shared libraries in linux and in sum everything works wonderfully however when I ran objdump in linux about the compiled .so I realized that we are exporting all the internal symbols of the library and not only those that we mark as export\r\n\r\n`clang: warning: argument unused during compilation: '-exported_symbols_list obj / Debug / netstandard2.0 / linux-x64 / native / NativeLibrary.exports' [-Wunused-command-line-argument]`\r\nThe .SO file is almost twice the size of the DLL.\r\n\r\nWindows dumpbin.exe /EXPORTS:\r\n` Section contains the following exports for NativeLibrary.dll\r\n\r\n    00000000 characteristics\r\n    FFFFFFFF time date stamp\r\n        0.00 version\r\n           1 ordinal base\r\n          19 number of functions\r\n          19 number of names\r\n\r\n    ordinal hint RVA      name\r\n\r\n          1    0 000B1DC0 callback = callback\r\n          2    1 000B0D60 create_fixed_string = create_fixed_string\r\n          3    2 000B0030 finalize_object = finalize_object\r\n          4    3 000B0A80 free_memory = free_memory\r\n          5    4 000B0B90 get_char_string = get_char_string\r\n          6    5 000B2450 get_int_array = get_int_array\r\n          7    6 000B1150 get_native_string = get_native_string\r\n          8    7 000AFEF0 get_number = get_number\r\n          9    8 000B29C0 get_object = get_object\r\n         10    9 000B2BD0 get_object_info = get_object_info\r\n         11    A 000B0850 get_object_type = get_object_type\r\n         12    B 000AFD10 get_ramdom_number = get_ramdom_number\r\n         13    C 000AF9E0 get_random_instance = get_random_instance\r\n         14    D 000AF7E0 get_random_seeded_instance = get_random_seeded_instance\r\n         15    E 000B1390 get_structure = get_structure\r\n         16    F 000B3290 print_numbers = print_numbers\r\n         17   10 000B2080 read_object = read_object\r\n         18   11 000B1720 read_structure = read_structure\r\n         19   12 000B0FE0 write_character_string = write_character_string\r\n\r\n  Summary\r\n\r\n       2B000 .data\r\n      1BC000 .managed\r\n       30000 .pdata\r\n      241000 .rdata\r\n       19000 .reloc\r\n        1000 .rsrc\r\n       AA000 .text`\r\n\r\nLinux nm -D --defined-only:\r\n`00000000001e8c70 T AppendExceptionStackFrame\r\n0000000000868258 B __bss_start\r\n000000000019a680 T callback\r\n000000000018896c T ConstrainedCallSupport_GetStubs\r\n0000000000198ee0 T create_fixed_string\r\n00000000002c5c90 T Dbl2IntOvf\r\n00000000002c5cf0 T Dbl2LngOvf\r\n00000000002c5cc0 T Dbl2UIntOvf\r\n00000000002c5d20 T Dbl2ULngOvf\r\n0000000000280de0 T DebugFuncEvalAbortHelper\r\n0000000000280d90 T DebugFuncEvalHelper\r\n0000000000868258 D _edata\r\n0000000000872090 B _end\r\n00000000001ea3f0 T FailFast\r\n0000000000198560 T finalize_object\r\n00000000003786c4 T _fini\r\n00000000002c5d50 T Flt2IntOvf\r\n00000000002c5d90 T Flt2LngOvf\r\n0000000000198b90 T free_memory\r\n0000000000479b48 R g_compilerEmbeddedSettingsBlob\r\n0000000000198d00 T get_char_string\r\n000000000019abf0 T get_int_array\r\n0000000000199340 T get_native_string\r\n0000000000197ba0 T get_number\r\n000000000019b1f0 T get_object\r\n000000000019b2f0 T get_object_info\r\n00000000001988c0 T get_object_type\r\n0000000000197990 T get_ramdom_number\r\n00000000001978c0 T get_random_instance\r\n0000000000197480 T get_random_seeded_instance\r\n00000000001e9e90 T GetRuntimeException\r\n0000000000199590 T get_structure\r\n00000000001de2c0 T GetSystemArrayEEType\r\n000000000018d940 T GlobalizationNative_ChangeCase\r\n000000000018dc50 T GlobalizationNative_ChangeCaseInvariant\r\n000000000018dfb0 T GlobalizationNative_ChangeCaseTurkish\r\n000000000018ebe0 T GlobalizationNative_CloseSortHandle\r\n000000000018eda0 T GlobalizationNative_CompareString\r\n000000000018f520 T GlobalizationNative_CompareStringOrdinalIgnoreCase\r\n000000000018f320 T GlobalizationNative_EndsWith\r\n000000000018cad0 T GlobalizationNative_EnumCalendarInfo\r\n000000000018c8c0 T GlobalizationNative_GetCalendarInfo\r\n000000000018c6a0 T GlobalizationNative_GetCalendars\r\n000000000018fc10 T GlobalizationNative_GetDefaultLocaleName\r\n0000000000192c60 T GlobalizationNative_GetICUVersion\r\n000000000018d710 T GlobalizationNative_GetJapaneseEraStartDate\r\n000000000018d660 T GlobalizationNative_GetLatestJapaneseEra\r\n00000000001902b0 T GlobalizationNative_GetLocaleInfoGroupingSizes\r\n000000000018fdd0 T GlobalizationNative_GetLocaleInfoInt\r\n0000000000190700 T GlobalizationNative_GetLocaleInfoString\r\n000000000018fa60 T GlobalizationNative_GetLocaleName\r\n000000000018f8c0 T GlobalizationNative_GetLocales\r\n0000000000191130 T GlobalizationNative_GetLocaleTimeFormat\r\n000000000018eb00 T GlobalizationNative_GetSortHandle\r\n000000000018f4a0 T GlobalizationNative_GetSortKey\r\n000000000018ed50 T GlobalizationNative_GetSortVersion\r\n0000000000191210 T GlobalizationNative_GetTimeZoneDisplayName\r\n000000000018ee20 T GlobalizationNative_IndexOf\r\n000000000018efc0 T GlobalizationNative_IndexOfOrdinalIgnoreCase\r\n000000000018ef00 T GlobalizationNative_LastIndexOf\r\n0000000000191310 T GlobalizationNative_LoadICU\r\n000000000018f1e0 T GlobalizationNative_StartsWith\r\n000000000012a368 T _init\r\n00000000002b6cf0 T InitializeFinalizerThread\r\n00000000002c52a0 T InitializeModules\r\n000000000032b0d0 T __managed__Startup\r\n00000000001a23f0 T OnFirstChanceException\r\n0000000000868088 D PointerToReturnFromCallDescrThunk\r\n00000000008680c0 D PointerToReturnFromUniversalTransition\r\n00000000008680c8 D PointerToReturnFromUniversalTransition_DebugStepTailCall\r\n00000000008680a8 D PointerToRhpCallCatchFunclet2\r\n00000000008680b8 D PointerToRhpCallFilterFunclet2\r\n00000000008680b0 D PointerToRhpCallFinallyFunclet2\r\n00000000008680a0 D PointerToRhpRethrow2\r\n0000000000868098 D PointerToRhpThrowEx2\r\n0000000000868090 D PointerToRhpThrowHwEx2\r\n000000000019ba10 T print_numbers\r\n00000000002b7750 T ProcessFinalizers\r\n000000000019a8b0 T read_object\r\n000000000019a340 T read_structure\r\n00000000002b9540 T RhAllocateThunk\r\n00000000002b9270 T RhAllocLocal\r\n00000000002b92a0 T RhAllocLocal2\r\n00000000002b9210 T RhArrayStoreCheckAny\r\n00000000002b8e50 T RhBox\r\n00000000002b9250 T RhBoxAndNullCheck\r\n00000000002b8f10 T RhBoxAny\r\n0000000000185574 T RhCallDescrWorker\r\n00000000002b8670 T RhCollect\r\n0000000000185938 T RhCommonStub\r\n00000000002b9530 T RhCreateThunksHeap\r\n00000000002b9520 T RhDisableConservativeReportingRegion\r\n00000000002b8720 T RhEndNoGCRegion\r\n00000000002b7e50 T RhExceptionHandling_FailedAllocation\r\n00000000002b7e30 T RhExceptionHandling_ThrowClasslibDivideByZeroException\r\n00000000002b7e10 T RhExceptionHandling_ThrowClasslibOverflowException\r\n00000000002b9590 T RhFreeThunk\r\n00000000002b7720 T RhGcStress_Initialize\r\n00000000002b7730 T RhGcStress_Initialize2\r\n00000000001859d6 T RhGetCommonStubAddress\r\n00000000002b9350 T RhGetCurrentThreadStackTrace\r\n00000000001859de T RhGetCurrentThunkContext\r\n00000000002b86c0 T RhGetGcTotalMemory\r\n00000000002b96a0 T RhGetThunkSize\r\n00000000002b94e0 T RhInitializeConservativeReportingRegion\r\n00000000002b92e0 T RhMemberwiseClone\r\n00000000002b8e40 T RhNewArray\r\n00000000002b8e10 T RhNewObject\r\n000000000018540b T RhNewString\r\n00000000001863b0 T RhpAssignRef\r\n00000000001863b0 T RhpAssignRefAVLocation\r\n00000000001863b0 T RhpAssignRefESI\r\n0000000000186498 T RhpByRefAssignRef\r\n00000000002b93f0 T RhpCalculateStackTraceWorker\r\n0000000000185705 T RhpCallCatchFunclet\r\n0000000000185884 T RhpCallFilterFunclet\r\n00000000001857cf T RhpCallFinallyFunclet\r\n00000000001859f8 T RhpCastableObjectDispatch_CommonStub\r\n00000000001859fb T RhpCastableObjectDispatchHelper\r\n00000000001859fa T RhpCastableObjectDispatchHelper_TailCalled\r\n00000000002b8ce0 T RhpCastableObjectResolve\r\n00000000001863da T RhpCheckedAssignRef\r\n00000000001863da T RhpCheckedAssignRefAVLocation\r\n00000000001863da T RhpCheckedAssignRefESI\r\n0000000000186416 T RhpCheckedLockCmpXchg\r\n0000000000186419 T RhpCheckedLockCmpXchgAVLocation\r\n0000000000186459 T RhpCheckedXchg\r\n000000000018645c T RhpCheckedXchgAVLocation\r\n00000000002b6ee0 T RhpCidResolve\r\n0000000000281520 T RhpDebugFuncEvalHelper\r\n00000000002b8650 T RhpFailFastForPInvokeExceptionCoop\r\n00000000002b8620 T RhpFailFastForPInvokeExceptionPreemp\r\n00000000001861e1 T RhpInitialDynamicInterfaceDispatch\r\n00000000001861e1 T RhpInitialInterfaceDispatch\r\n00000000001859fc T RhpInterfaceDispatch1\r\n0000000000185af5 T RhpInterfaceDispatch16\r\n0000000000185a15 T RhpInterfaceDispatch2\r\n0000000000185bef T RhpInterfaceDispatch32\r\n0000000000185a3b T RhpInterfaceDispatch4\r\n0000000000185de9 T RhpInterfaceDispatch64\r\n0000000000185a7b T RhpInterfaceDispatch8\r\n00000000001861e3 T RhpInterfaceDispatchSlow\r\n00000000002bb330 T RhpLdelemaRef\r\n00000000001858b8 T RhpLockCmpXchg32\r\n00000000001858bb T RhpLockCmpXchg32AVLocation\r\n00000000001858c0 T RhpLockCmpXchg64\r\n00000000001858c3 T RhpLockCmpXchg64AVLocation\r\n0000000000185473 T RhpNewArray\r\n00000000001854e6 T RhpNewArrayRare\r\n0000000000185348 T RhpNewFast\r\n0000000000185381 T RhpNewFinalizable\r\n0000000000185388 T RhpNewObject\r\n00000000001858cc T RhpPInvoke\r\n000000000018591a T RhpPInvokeReturn\r\n00000000002b6fa0 T RhpResolveInterfaceMethod\r\n0000000000185696 T RhpRethrow\r\n00000000002b9330 T RhpReversePInvokeBadTransition\r\n00000000002b78b0 T RhpSetHaveNewClasslibs\r\n00000000002bb1b0 T RhpStelemRef\r\n00000000001859f9 T RhpTailCallTLSDispatchCell\r\n00000000001855ed T RhpThrowEx\r\n0000000000185578 T RhpThrowHwEx\r\n00000000001861f4 T RhpUniversalTransition\r\n00000000001862d2 T RhpUniversalTransition_DebugStepTailCall\r\n00000000001861e0 T RhpVTableOffsetDispatch\r\n00000000002b7010 T RhResolveDispatch\r\n00000000002b7070 T RhResolveDispatchOnType\r\n00000000002b7fd0 T RhRethrow\r\n00000000002b95e0 T RhSetThunkData\r\n00000000002b8700 T RhStartNoGCRegion\r\n00000000002b7f70 T RhThrowEx\r\n00000000002b7e80 T RhThrowHwEx\r\n00000000002b9640 T RhTryGetThunkData\r\n00000000002baa90 T RhTypeCast_AreTypesAssignable\r\n00000000002bb410 T RhTypeCast_AreTypesEquivalent\r\n00000000002bb020 T RhTypeCast_CheckArrayStore\r\n00000000002bb5b0 T RhTypeCast_CheckCast\r\n00000000002bb590 T RhTypeCast_CheckCast2\r\n00000000002ba1c0 T RhTypeCast_CheckCastArray\r\n00000000002ba1a0 T RhTypeCast_CheckCastArray2\r\n00000000002b9fb0 T RhTypeCast_CheckCastClass\r\n00000000002b9f90 T RhTypeCast_CheckCastClass2\r\n00000000002baef0 T RhTypeCast_CheckCastInterface\r\n00000000002baed0 T RhTypeCast_CheckCastInterface2\r\n00000000002b9fe0 T RhTypeCast_CheckUnbox\r\n00000000002bb150 T RhTypeCast_CheckVectorElemAddr\r\n00000000002bb510 T RhTypeCast_IsInstanceOf\r\n00000000002bb4f0 T RhTypeCast_IsInstanceOf2\r\n00000000002ba040 T RhTypeCast_IsInstanceOfArray\r\n00000000002ba020 T RhTypeCast_IsInstanceOfArray2\r\n00000000002b9d90 T RhTypeCast_IsInstanceOfClass\r\n00000000002b9d70 T RhTypeCast_IsInstanceOfClass2\r\n00000000002ba210 T RhTypeCast_IsInstanceOfInterface\r\n00000000002ba1f0 T RhTypeCast_IsInstanceOfInterface2\r\n00000000002b9100 T RhUnbox2\r\n00000000002b8fb0 T RhUnboxAny\r\n00000000002b9150 T RhUnboxNullable\r\n0000000000192fc0 T __start___managedcode\r\n0000000000868250 D __start___modules\r\n00000000003759c4 T __start___unbox\r\n00000000003759c1 T __stop___managedcode\r\n0000000000868258 D __stop___modules\r\n00000000003786c1 T __stop___unbox\r\n000000000018a180 T SystemNative_Access\r\n000000000018a140 T SystemNative_ChDir\r\n000000000018a050 T SystemNative_ChMod\r\n0000000000189c60 T SystemNative_Close\r\n0000000000189e00 T SystemNative_CloseDir\r\n0000000000188db0 T SystemNative_ConfigureTerminalForChildProcess\r\n00000000001894f0 T SystemNative_ConvertErrorPalToPlatform\r\n00000000001894d0 T SystemNative_ConvertErrorPlatformToPal\r\n000000000018a8b0 T SystemNative_CopyFile\r\n0000000000189c70 T SystemNative_Dup\r\n000000000018a090 T SystemNative_FChMod\r\n0000000000189f30 T SystemNative_FcntlCanGetSetPipeSz\r\n0000000000189f40 T SystemNative_FcntlGetPipeSz\r\n0000000000189e70 T SystemNative_FcntlSetFD\r\n0000000000189fc0 T SystemNative_FcntlSetIsNonBlocking\r\n0000000000189f80 T SystemNative_FcntlSetPipeSz\r\n000000000018a100 T SystemNative_FLock\r\n000000000018aca0 T SystemNative_ForkAndExecProcess\r\n0000000000189a20 T SystemNative_FStat\r\n000000000018a0d0 T SystemNative_FSync\r\n000000000018a370 T SystemNative_FTruncate\r\n000000000018c190 T SystemNative_GetAbsoluteTime\r\n0000000000188fc0 T SystemNative_GetControlCharacters\r\n000000000018c1c0 T SystemNative_GetCpuUtilization\r\n000000000018b6c0 T SystemNative_GetCwd\r\n000000000018c530 T SystemNative_GetEGid\r\n000000000018c520 T SystemNative_GetEUid\r\n000000000018c560 T SystemNative_GetGroupList\r\n000000000018a6c0 T SystemNative_GetLine\r\n000000000018b840 T SystemNative_GetNonCryptographicallySecureRandomBytes\r\n000000000018ab50 T SystemNative_GetPeerID\r\n000000000018b4f0 T SystemNative_GetPid\r\n000000000018b680 T SystemNative_GetPriority\r\n000000000018c430 T SystemNative_GetPwNamR\r\n000000000018c340 T SystemNative_GetPwUidR\r\n0000000000189d30 T SystemNative_GetReadDirRBufferSize\r\n000000000018b410 T SystemNative_GetRLimit\r\n000000000018b500 T SystemNative_GetSid\r\n00000000001891d0 T SystemNative_GetSignalForBreak\r\n000000000018c620 T SystemNative_GetSystemTimeAsTicks\r\n000000000018c1a0 T SystemNative_GetTimebaseInfo\r\n000000000018c140 T SystemNative_GetTimestamp\r\n000000000018c0e0 T SystemNative_GetTimestampResolution\r\n000000000018c550 T SystemNative_GetUid\r\n0000000000188970 T SystemNative_GetWindowSize\r\n0000000000188c20 T SystemNative_InitializeConsoleBeforeRead\r\n0000000000189400 T SystemNative_InitializeTerminalAndSignalHandling\r\n000000000018ab30 T SystemNative_INotifyAddWatch\r\n000000000018ab20 T SystemNative_INotifyInit\r\n000000000018ab40 T SystemNative_INotifyRemoveWatch\r\n00000000001889a0 T SystemNative_IsATty\r\n000000000018b4e0 T SystemNative_Kill\r\n000000000018ac70 T SystemNative_LChflags\r\n000000000018ac90 T SystemNative_LChflagsCanSetHiddenFlag\r\n000000000018a1d0 T SystemNative_Link\r\n000000000018abd0 T SystemNative_LockFileRegion\r\n000000000018a190 T SystemNative_LSeek\r\n0000000000189b00 T SystemNative_LStat\r\n000000000018a2c0 T SystemNative_MAdvise\r\n000000000018a010 T SystemNative_MkDir\r\n000000000018a210 T SystemNative_MksTemps\r\n000000000018a250 T SystemNative_MMap\r\n000000000018a2f0 T SystemNative_MSync\r\n000000000018a2b0 T SystemNative_MUnmap\r\n0000000000189bb0 T SystemNative_Open\r\n0000000000189df0 T SystemNative_OpenDir\r\n000000000018b650 T SystemNative_PathConf\r\n000000000018b400 T SystemNative_PClose\r\n0000000000189e10 T SystemNative_Pipe\r\n000000000018a3b0 T SystemNative_Poll\r\n000000000018b3f0 T SystemNative_POpen\r\n000000000018a670 T SystemNative_PosixFAdvise\r\n000000000018a730 T SystemNative_Read\r\n0000000000189d40 T SystemNative_ReadDirR\r\n000000000018a790 T SystemNative_ReadLink\r\n0000000000189180 T SystemNative_ReadStdin\r\n000000000018abc0 T SystemNative_RealPath\r\n000000000018b970 T SystemNative_RegisterForCtrl\r\n000000000018b9f0 T SystemNative_RegisterForSigChld\r\n000000000018a7c0 T SystemNative_Rename\r\n000000000018b990 T SystemNative_RestoreAndHandleCtrl\r\n000000000018a800 T SystemNative_RmDir\r\n000000000018b7a0 T SystemNative_SchedGetAffinity\r\n000000000018b6e0 T SystemNative_SchedSetAffinity\r\n000000000018c540 T SystemNative_SetEUid\r\n00000000001889b0 T SystemNative_SetKeypadXmit\r\n000000000018b6b0 T SystemNative_SetPriority\r\n000000000018b480 T SystemNative_SetRLimit\r\n00000000001891e0 T SystemNative_SetSignalForBreak\r\n000000000018b9e0 T SystemNative_SetTerminalInvalidationHandler\r\n0000000000189cf0 T SystemNative_ShmOpen\r\n0000000000189d10 T SystemNative_ShmUnlink\r\n0000000000189940 T SystemNative_Stat\r\n00000000001890f0 T SystemNative_StdinReady\r\n00000000001898e0 T SystemNative_StrErrorR\r\n000000000018a840 T SystemNative_Sync\r\n000000000018a330 T SystemNative_SysConf\r\n000000000018b510 T SystemNative_SysLog\r\n0000000000188d80 T SystemNative_UninitializeConsoleAfterRead\r\n0000000000189cb0 T SystemNative_Unlink\r\n000000000018b980 T SystemNative_UnregisterForCtrl\r\n000000000018c060 T SystemNative_UTimensat\r\n000000000018b520 T SystemNative_WaitIdAnyExitedNoHangNoWait\r\n000000000018b5b0 T SystemNative_WaitPidExitedNoHang\r\n000000000018a850 T SystemNative_Write\r\n00000000001852f4 T unw_getcontext\r\n0000000000184ed0 T unw_get_fpreg\r\n0000000000184fa0 T unw_get_proc_info\r\n0000000000184fd0 T unw_get_proc_name\r\n0000000000184e30 T unw_get_reg\r\n0000000000184f50 T unw_get_save_loc\r\n0000000000184d90 T unw_init_local\r\n0000000000184ff0 T unw_is_fpreg\r\n0000000000185010 T unw_is_signal_frame\r\n0000000000185020 T unw_iterate_dwarf_unwind_cache\r\n0000000000868080 D unw_local_addr_space\r\n0000000000185000 T unw_regname\r\n0000000000184fc0 T unw_resume\r\n0000000000184f10 T unw_set_fpreg\r\n0000000000184e70 T unw_set_reg\r\n0000000000184f90 T unw_step\r\n0000000000199080 T write_character_string`"},{"Id":"9497813683","Type":"IssuesEvent","CreatedAt":"2019-04-23T22:58:44","Actor":"josephmoresena","Repository":"dotnet/","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7340","RelatedDescription":"Opened issue \"clang: warning: argument unused during compilation: '-exported_symbols_list\" (#7340) at dotnet/","RelatedBody":"I am testing the operation of shared libraries in linux and in sum everything works wonderfully however when I ran objdump in linux about the compiled .so I realized that we are exporting all the internal symbols of the library and not only those that we mark as export\r\n\r\n`clang: warning: argument unused during compilation: '-exported_symbols_list obj / Debug / netstandard2.0 / linux-x64 / native / NativeLibrary.exports' [-Wunused-command-line-argument]`\r\nThe .SO file is almost twice the size of the DLL.\r\n\r\nWindows dumpbin.exe /EXPORTS:\r\n` Section contains the following exports for NativeLibrary.dll\r\n\r\n    00000000 characteristics\r\n    FFFFFFFF time date stamp\r\n        0.00 version\r\n           1 ordinal base\r\n          19 number of functions\r\n          19 number of names\r\n\r\n    ordinal hint RVA      name\r\n\r\n          1    0 000B1DC0 callback = callback\r\n          2    1 000B0D60 create_fixed_string = create_fixed_string\r\n          3    2 000B0030 finalize_object = finalize_object\r\n          4    3 000B0A80 free_memory = free_memory\r\n          5    4 000B0B90 get_char_string = get_char_string\r\n          6    5 000B2450 get_int_array = get_int_array\r\n          7    6 000B1150 get_native_string = get_native_string\r\n          8    7 000AFEF0 get_number = get_number\r\n          9    8 000B29C0 get_object = get_object\r\n         10    9 000B2BD0 get_object_info = get_object_info\r\n         11    A 000B0850 get_object_type = get_object_type\r\n         12    B 000AFD10 get_ramdom_number = get_ramdom_number\r\n         13    C 000AF9E0 get_random_instance = get_random_instance\r\n         14    D 000AF7E0 get_random_seeded_instance = get_random_seeded_instance\r\n         15    E 000B1390 get_structure = get_structure\r\n         16    F 000B3290 print_numbers = print_numbers\r\n         17   10 000B2080 read_object = read_object\r\n         18   11 000B1720 read_structure = read_structure\r\n         19   12 000B0FE0 write_character_string = write_character_string\r\n\r\n  Summary\r\n\r\n       2B000 .data\r\n      1BC000 .managed\r\n       30000 .pdata\r\n      241000 .rdata\r\n       19000 .reloc\r\n        1000 .rsrc\r\n       AA000 .text`\r\n\r\nLinux nm -D --defined-only:\r\n`00000000001e8c70 T AppendExceptionStackFrame\r\n0000000000868258 B __bss_start\r\n000000000019a680 T callback\r\n000000000018896c T ConstrainedCallSupport_GetStubs\r\n0000000000198ee0 T create_fixed_string\r\n00000000002c5c90 T Dbl2IntOvf\r\n00000000002c5cf0 T Dbl2LngOvf\r\n00000000002c5cc0 T Dbl2UIntOvf\r\n00000000002c5d20 T Dbl2ULngOvf\r\n0000000000280de0 T DebugFuncEvalAbortHelper\r\n0000000000280d90 T DebugFuncEvalHelper\r\n0000000000868258 D _edata\r\n0000000000872090 B _end\r\n00000000001ea3f0 T FailFast\r\n0000000000198560 T finalize_object\r\n00000000003786c4 T _fini\r\n00000000002c5d50 T Flt2IntOvf\r\n00000000002c5d90 T Flt2LngOvf\r\n0000000000198b90 T free_memory\r\n0000000000479b48 R g_compilerEmbeddedSettingsBlob\r\n0000000000198d00 T get_char_string\r\n000000000019abf0 T get_int_array\r\n0000000000199340 T get_native_string\r\n0000000000197ba0 T get_number\r\n000000000019b1f0 T get_object\r\n000000000019b2f0 T get_object_info\r\n00000000001988c0 T get_object_type\r\n0000000000197990 T get_ramdom_number\r\n00000000001978c0 T get_random_instance\r\n0000000000197480 T get_random_seeded_instance\r\n00000000001e9e90 T GetRuntimeException\r\n0000000000199590 T get_structure\r\n00000000001de2c0 T GetSystemArrayEEType\r\n000000000018d940 T GlobalizationNative_ChangeCase\r\n000000000018dc50 T GlobalizationNative_ChangeCaseInvariant\r\n000000000018dfb0 T GlobalizationNative_ChangeCaseTurkish\r\n000000000018ebe0 T GlobalizationNative_CloseSortHandle\r\n000000000018eda0 T GlobalizationNative_CompareString\r\n000000000018f520 T GlobalizationNative_CompareStringOrdinalIgnoreCase\r\n000000000018f320 T GlobalizationNative_EndsWith\r\n000000000018cad0 T GlobalizationNative_EnumCalendarInfo\r\n000000000018c8c0 T GlobalizationNative_GetCalendarInfo\r\n000000000018c6a0 T GlobalizationNative_GetCalendars\r\n000000000018fc10 T GlobalizationNative_GetDefaultLocaleName\r\n0000000000192c60 T GlobalizationNative_GetICUVersion\r\n000000000018d710 T GlobalizationNative_GetJapaneseEraStartDate\r\n000000000018d660 T GlobalizationNative_GetLatestJapaneseEra\r\n00000000001902b0 T GlobalizationNative_GetLocaleInfoGroupingSizes\r\n000000000018fdd0 T GlobalizationNative_GetLocaleInfoInt\r\n0000000000190700 T GlobalizationNative_GetLocaleInfoString\r\n000000000018fa60 T GlobalizationNative_GetLocaleName\r\n000000000018f8c0 T GlobalizationNative_GetLocales\r\n0000000000191130 T GlobalizationNative_GetLocaleTimeFormat\r\n000000000018eb00 T GlobalizationNative_GetSortHandle\r\n000000000018f4a0 T GlobalizationNative_GetSortKey\r\n000000000018ed50 T GlobalizationNative_GetSortVersion\r\n0000000000191210 T GlobalizationNative_GetTimeZoneDisplayName\r\n000000000018ee20 T GlobalizationNative_IndexOf\r\n000000000018efc0 T GlobalizationNative_IndexOfOrdinalIgnoreCase\r\n000000000018ef00 T GlobalizationNative_LastIndexOf\r\n0000000000191310 T GlobalizationNative_LoadICU\r\n000000000018f1e0 T GlobalizationNative_StartsWith\r\n000000000012a368 T _init\r\n00000000002b6cf0 T InitializeFinalizerThread\r\n00000000002c52a0 T InitializeModules\r\n000000000032b0d0 T __managed__Startup\r\n00000000001a23f0 T OnFirstChanceException\r\n0000000000868088 D PointerToReturnFromCallDescrThunk\r\n00000000008680c0 D PointerToReturnFromUniversalTransition\r\n00000000008680c8 D PointerToReturnFromUniversalTransition_DebugStepTailCall\r\n00000000008680a8 D PointerToRhpCallCatchFunclet2\r\n00000000008680b8 D PointerToRhpCallFilterFunclet2\r\n00000000008680b0 D PointerToRhpCallFinallyFunclet2\r\n00000000008680a0 D PointerToRhpRethrow2\r\n0000000000868098 D PointerToRhpThrowEx2\r\n0000000000868090 D PointerToRhpThrowHwEx2\r\n000000000019ba10 T print_numbers\r\n00000000002b7750 T ProcessFinalizers\r\n000000000019a8b0 T read_object\r\n000000000019a340 T read_structure\r\n00000000002b9540 T RhAllocateThunk\r\n00000000002b9270 T RhAllocLocal\r\n00000000002b92a0 T RhAllocLocal2\r\n00000000002b9210 T RhArrayStoreCheckAny\r\n00000000002b8e50 T RhBox\r\n00000000002b9250 T RhBoxAndNullCheck\r\n00000000002b8f10 T RhBoxAny\r\n0000000000185574 T RhCallDescrWorker\r\n00000000002b8670 T RhCollect\r\n0000000000185938 T RhCommonStub\r\n00000000002b9530 T RhCreateThunksHeap\r\n00000000002b9520 T RhDisableConservativeReportingRegion\r\n00000000002b8720 T RhEndNoGCRegion\r\n00000000002b7e50 T RhExceptionHandling_FailedAllocation\r\n00000000002b7e30 T RhExceptionHandling_ThrowClasslibDivideByZeroException\r\n00000000002b7e10 T RhExceptionHandling_ThrowClasslibOverflowException\r\n00000000002b9590 T RhFreeThunk\r\n00000000002b7720 T RhGcStress_Initialize\r\n00000000002b7730 T RhGcStress_Initialize2\r\n00000000001859d6 T RhGetCommonStubAddress\r\n00000000002b9350 T RhGetCurrentThreadStackTrace\r\n00000000001859de T RhGetCurrentThunkContext\r\n00000000002b86c0 T RhGetGcTotalMemory\r\n00000000002b96a0 T RhGetThunkSize\r\n00000000002b94e0 T RhInitializeConservativeReportingRegion\r\n00000000002b92e0 T RhMemberwiseClone\r\n00000000002b8e40 T RhNewArray\r\n00000000002b8e10 T RhNewObject\r\n000000000018540b T RhNewString\r\n00000000001863b0 T RhpAssignRef\r\n00000000001863b0 T RhpAssignRefAVLocation\r\n00000000001863b0 T RhpAssignRefESI\r\n0000000000186498 T RhpByRefAssignRef\r\n00000000002b93f0 T RhpCalculateStackTraceWorker\r\n0000000000185705 T RhpCallCatchFunclet\r\n0000000000185884 T RhpCallFilterFunclet\r\n00000000001857cf T RhpCallFinallyFunclet\r\n00000000001859f8 T RhpCastableObjectDispatch_CommonStub\r\n00000000001859fb T RhpCastableObjectDispatchHelper\r\n00000000001859fa T RhpCastableObjectDispatchHelper_TailCalled\r\n00000000002b8ce0 T RhpCastableObjectResolve\r\n00000000001863da T RhpCheckedAssignRef\r\n00000000001863da T RhpCheckedAssignRefAVLocation\r\n00000000001863da T RhpCheckedAssignRefESI\r\n0000000000186416 T RhpCheckedLockCmpXchg\r\n0000000000186419 T RhpCheckedLockCmpXchgAVLocation\r\n0000000000186459 T RhpCheckedXchg\r\n000000000018645c T RhpCheckedXchgAVLocation\r\n00000000002b6ee0 T RhpCidResolve\r\n0000000000281520 T RhpDebugFuncEvalHelper\r\n00000000002b8650 T RhpFailFastForPInvokeExceptionCoop\r\n00000000002b8620 T RhpFailFastForPInvokeExceptionPreemp\r\n00000000001861e1 T RhpInitialDynamicInterfaceDispatch\r\n00000000001861e1 T RhpInitialInterfaceDispatch\r\n00000000001859fc T RhpInterfaceDispatch1\r\n0000000000185af5 T RhpInterfaceDispatch16\r\n0000000000185a15 T RhpInterfaceDispatch2\r\n0000000000185bef T RhpInterfaceDispatch32\r\n0000000000185a3b T RhpInterfaceDispatch4\r\n0000000000185de9 T RhpInterfaceDispatch64\r\n0000000000185a7b T RhpInterfaceDispatch8\r\n00000000001861e3 T RhpInterfaceDispatchSlow\r\n00000000002bb330 T RhpLdelemaRef\r\n00000000001858b8 T RhpLockCmpXchg32\r\n00000000001858bb T RhpLockCmpXchg32AVLocation\r\n00000000001858c0 T RhpLockCmpXchg64\r\n00000000001858c3 T RhpLockCmpXchg64AVLocation\r\n0000000000185473 T RhpNewArray\r\n00000000001854e6 T RhpNewArrayRare\r\n0000000000185348 T RhpNewFast\r\n0000000000185381 T RhpNewFinalizable\r\n0000000000185388 T RhpNewObject\r\n00000000001858cc T RhpPInvoke\r\n000000000018591a T RhpPInvokeReturn\r\n00000000002b6fa0 T RhpResolveInterfaceMethod\r\n0000000000185696 T RhpRethrow\r\n00000000002b9330 T RhpReversePInvokeBadTransition\r\n00000000002b78b0 T RhpSetHaveNewClasslibs\r\n00000000002bb1b0 T RhpStelemRef\r\n00000000001859f9 T RhpTailCallTLSDispatchCell\r\n00000000001855ed T RhpThrowEx\r\n0000000000185578 T RhpThrowHwEx\r\n00000000001861f4 T RhpUniversalTransition\r\n00000000001862d2 T RhpUniversalTransition_DebugStepTailCall\r\n00000000001861e0 T RhpVTableOffsetDispatch\r\n00000000002b7010 T RhResolveDispatch\r\n00000000002b7070 T RhResolveDispatchOnType\r\n00000000002b7fd0 T RhRethrow\r\n00000000002b95e0 T RhSetThunkData\r\n00000000002b8700 T RhStartNoGCRegion\r\n00000000002b7f70 T RhThrowEx\r\n00000000002b7e80 T RhThrowHwEx\r\n00000000002b9640 T RhTryGetThunkData\r\n00000000002baa90 T RhTypeCast_AreTypesAssignable\r\n00000000002bb410 T RhTypeCast_AreTypesEquivalent\r\n00000000002bb020 T RhTypeCast_CheckArrayStore\r\n00000000002bb5b0 T RhTypeCast_CheckCast\r\n00000000002bb590 T RhTypeCast_CheckCast2\r\n00000000002ba1c0 T RhTypeCast_CheckCastArray\r\n00000000002ba1a0 T RhTypeCast_CheckCastArray2\r\n00000000002b9fb0 T RhTypeCast_CheckCastClass\r\n00000000002b9f90 T RhTypeCast_CheckCastClass2\r\n00000000002baef0 T RhTypeCast_CheckCastInterface\r\n00000000002baed0 T RhTypeCast_CheckCastInterface2\r\n00000000002b9fe0 T RhTypeCast_CheckUnbox\r\n00000000002bb150 T RhTypeCast_CheckVectorElemAddr\r\n00000000002bb510 T RhTypeCast_IsInstanceOf\r\n00000000002bb4f0 T RhTypeCast_IsInstanceOf2\r\n00000000002ba040 T RhTypeCast_IsInstanceOfArray\r\n00000000002ba020 T RhTypeCast_IsInstanceOfArray2\r\n00000000002b9d90 T RhTypeCast_IsInstanceOfClass\r\n00000000002b9d70 T RhTypeCast_IsInstanceOfClass2\r\n00000000002ba210 T RhTypeCast_IsInstanceOfInterface\r\n00000000002ba1f0 T RhTypeCast_IsInstanceOfInterface2\r\n00000000002b9100 T RhUnbox2\r\n00000000002b8fb0 T RhUnboxAny\r\n00000000002b9150 T RhUnboxNullable\r\n0000000000192fc0 T __start___managedcode\r\n0000000000868250 D __start___modules\r\n00000000003759c4 T __start___unbox\r\n00000000003759c1 T __stop___managedcode\r\n0000000000868258 D __stop___modules\r\n00000000003786c1 T __stop___unbox\r\n000000000018a180 T SystemNative_Access\r\n000000000018a140 T SystemNative_ChDir\r\n000000000018a050 T SystemNative_ChMod\r\n0000000000189c60 T SystemNative_Close\r\n0000000000189e00 T SystemNative_CloseDir\r\n0000000000188db0 T SystemNative_ConfigureTerminalForChildProcess\r\n00000000001894f0 T SystemNative_ConvertErrorPalToPlatform\r\n00000000001894d0 T SystemNative_ConvertErrorPlatformToPal\r\n000000000018a8b0 T SystemNative_CopyFile\r\n0000000000189c70 T SystemNative_Dup\r\n000000000018a090 T SystemNative_FChMod\r\n0000000000189f30 T SystemNative_FcntlCanGetSetPipeSz\r\n0000000000189f40 T SystemNative_FcntlGetPipeSz\r\n0000000000189e70 T SystemNative_FcntlSetFD\r\n0000000000189fc0 T SystemNative_FcntlSetIsNonBlocking\r\n0000000000189f80 T SystemNative_FcntlSetPipeSz\r\n000000000018a100 T SystemNative_FLock\r\n000000000018aca0 T SystemNative_ForkAndExecProcess\r\n0000000000189a20 T SystemNative_FStat\r\n000000000018a0d0 T SystemNative_FSync\r\n000000000018a370 T SystemNative_FTruncate\r\n000000000018c190 T SystemNative_GetAbsoluteTime\r\n0000000000188fc0 T SystemNative_GetControlCharacters\r\n000000000018c1c0 T SystemNative_GetCpuUtilization\r\n000000000018b6c0 T SystemNative_GetCwd\r\n000000000018c530 T SystemNative_GetEGid\r\n000000000018c520 T SystemNative_GetEUid\r\n000000000018c560 T SystemNative_GetGroupList\r\n000000000018a6c0 T SystemNative_GetLine\r\n000000000018b840 T SystemNative_GetNonCryptographicallySecureRandomBytes\r\n000000000018ab50 T SystemNative_GetPeerID\r\n000000000018b4f0 T SystemNative_GetPid\r\n000000000018b680 T SystemNative_GetPriority\r\n000000000018c430 T SystemNative_GetPwNamR\r\n000000000018c340 T SystemNative_GetPwUidR\r\n0000000000189d30 T SystemNative_GetReadDirRBufferSize\r\n000000000018b410 T SystemNative_GetRLimit\r\n000000000018b500 T SystemNative_GetSid\r\n00000000001891d0 T SystemNative_GetSignalForBreak\r\n000000000018c620 T SystemNative_GetSystemTimeAsTicks\r\n000000000018c1a0 T SystemNative_GetTimebaseInfo\r\n000000000018c140 T SystemNative_GetTimestamp\r\n000000000018c0e0 T SystemNative_GetTimestampResolution\r\n000000000018c550 T SystemNative_GetUid\r\n0000000000188970 T SystemNative_GetWindowSize\r\n0000000000188c20 T SystemNative_InitializeConsoleBeforeRead\r\n0000000000189400 T SystemNative_InitializeTerminalAndSignalHandling\r\n000000000018ab30 T SystemNative_INotifyAddWatch\r\n000000000018ab20 T SystemNative_INotifyInit\r\n000000000018ab40 T SystemNative_INotifyRemoveWatch\r\n00000000001889a0 T SystemNative_IsATty\r\n000000000018b4e0 T SystemNative_Kill\r\n000000000018ac70 T SystemNative_LChflags\r\n000000000018ac90 T SystemNative_LChflagsCanSetHiddenFlag\r\n000000000018a1d0 T SystemNative_Link\r\n000000000018abd0 T SystemNative_LockFileRegion\r\n000000000018a190 T SystemNative_LSeek\r\n0000000000189b00 T SystemNative_LStat\r\n000000000018a2c0 T SystemNative_MAdvise\r\n000000000018a010 T SystemNative_MkDir\r\n000000000018a210 T SystemNative_MksTemps\r\n000000000018a250 T SystemNative_MMap\r\n000000000018a2f0 T SystemNative_MSync\r\n000000000018a2b0 T SystemNative_MUnmap\r\n0000000000189bb0 T SystemNative_Open\r\n0000000000189df0 T SystemNative_OpenDir\r\n000000000018b650 T SystemNative_PathConf\r\n000000000018b400 T SystemNative_PClose\r\n0000000000189e10 T SystemNative_Pipe\r\n000000000018a3b0 T SystemNative_Poll\r\n000000000018b3f0 T SystemNative_POpen\r\n000000000018a670 T SystemNative_PosixFAdvise\r\n000000000018a730 T SystemNative_Read\r\n0000000000189d40 T SystemNative_ReadDirR\r\n000000000018a790 T SystemNative_ReadLink\r\n0000000000189180 T SystemNative_ReadStdin\r\n000000000018abc0 T SystemNative_RealPath\r\n000000000018b970 T SystemNative_RegisterForCtrl\r\n000000000018b9f0 T SystemNative_RegisterForSigChld\r\n000000000018a7c0 T SystemNative_Rename\r\n000000000018b990 T SystemNative_RestoreAndHandleCtrl\r\n000000000018a800 T SystemNative_RmDir\r\n000000000018b7a0 T SystemNative_SchedGetAffinity\r\n000000000018b6e0 T SystemNative_SchedSetAffinity\r\n000000000018c540 T SystemNative_SetEUid\r\n00000000001889b0 T SystemNative_SetKeypadXmit\r\n000000000018b6b0 T SystemNative_SetPriority\r\n000000000018b480 T SystemNative_SetRLimit\r\n00000000001891e0 T SystemNative_SetSignalForBreak\r\n000000000018b9e0 T SystemNative_SetTerminalInvalidationHandler\r\n0000000000189cf0 T SystemNative_ShmOpen\r\n0000000000189d10 T SystemNative_ShmUnlink\r\n0000000000189940 T SystemNative_Stat\r\n00000000001890f0 T SystemNative_StdinReady\r\n00000000001898e0 T SystemNative_StrErrorR\r\n000000000018a840 T SystemNative_Sync\r\n000000000018a330 T SystemNative_SysConf\r\n000000000018b510 T SystemNative_SysLog\r\n0000000000188d80 T SystemNative_UninitializeConsoleAfterRead\r\n0000000000189cb0 T SystemNative_Unlink\r\n000000000018b980 T SystemNative_UnregisterForCtrl\r\n000000000018c060 T SystemNative_UTimensat\r\n000000000018b520 T SystemNative_WaitIdAnyExitedNoHangNoWait\r\n000000000018b5b0 T SystemNative_WaitPidExitedNoHang\r\n000000000018a850 T SystemNative_Write\r\n00000000001852f4 T unw_getcontext\r\n0000000000184ed0 T unw_get_fpreg\r\n0000000000184fa0 T unw_get_proc_info\r\n0000000000184fd0 T unw_get_proc_name\r\n0000000000184e30 T unw_get_reg\r\n0000000000184f50 T unw_get_save_loc\r\n0000000000184d90 T unw_init_local\r\n0000000000184ff0 T unw_is_fpreg\r\n0000000000185010 T unw_is_signal_frame\r\n0000000000185020 T unw_iterate_dwarf_unwind_cache\r\n0000000000868080 D unw_local_addr_space\r\n0000000000185000 T unw_regname\r\n0000000000184fc0 T unw_resume\r\n0000000000184f10 T unw_set_fpreg\r\n0000000000184e70 T unw_set_reg\r\n0000000000184f90 T unw_step\r\n0000000000199080 T write_character_string`"},{"Id":"9497582989","Type":"IssuesEvent","CreatedAt":"2019-04-23T22:08:04","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7339","RelatedDescription":"Opened issue \"Porting GC changes from coreclr\" (#7339) at dotnet/corert","RelatedBody":"In the current porting of the GC changes from coreclr we've skipped some things that will need to be ported later on\r\n- [ ] [FEATURE_MANUALLY_MANAGED_CARD_BUNDLES](https://github.com/dotnet/corert/pull/7332#issuecomment-485586119)\r\n- [ ] [container memory limits](https://github.com/dotnet/corert/pull/7336#issuecomment-485969598)"},{"Id":"9497581175","Type":"PullRequestEvent","CreatedAt":"2019-04-23T22:07:42","Actor":"tarekgh","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7337","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7337) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh"},{"Id":"9497449504","Type":"IssuesEvent","CreatedAt":"2019-04-23T21:42:13","Actor":"tarekgh","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7338","RelatedDescription":"Opened issue \"WebAssembly CI legs are failing because of missing CMake\" (#7338) at dotnet/corert","RelatedBody":"\r\nhttps://ci.dot.net/job/dotnet_corert/job/master/job/release_windows_nt_wasm_prtest/1616/consoleFull#49494639283554902-aff0-4799-9e92-0ada24ce2a06\r\n\r\n```\r\n14:19:43 CMake is a pre-requisite to build this repository but it was not found on the path. Please install CMake from http://www.cmake.org/download/ and ensure it is on your path.\r\n14:19:43 Setting build variables failed.\r\n```\r\n\r\nhttps://github.com/dotnet/corert/pull/7337"},{"Id":"9497215047","Type":"PullRequestEvent","CreatedAt":"2019-04-23T21:02:21","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7337","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7337) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9496227465","Type":"PullRequestEvent","CreatedAt":"2019-04-23T18:28:38","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7336","RelatedDescription":"Opened pull request \"Port GC changes from coreclr - 2\" (#7336) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7332\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [lastly ported commit](https://github.com/dotnet/coreclr/commit/9ae6ed25affc42343a3f88f147ff4a5fbd1e9727):**\r\n- https://github.com/dotnet/coreclr/commit/51e968b013e9b1582035f202e004ed024f747f4f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4627704051a81c65d81771d7e776b676b8a2d44f (already merged)\r\n- https://github.com/dotnet/coreclr/commit/9e1e0b7c8f4d5ef1602ab6947a597559effbe60f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1b827b5a82f8c6f8a9ed760ee127938dea5a7ea4 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8bc067c194f0b44e95c6e6a490b99078a2fa9719 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fc3220f19a8ee8266e0782bf8878790453f790e6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d5906ff3e0d0f864c1432f1f39d586ca3d79fbb6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/992d37064fa76ea7633734607381545e228806a5 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ecdf277ce50f29cccb494157cdbbfda86517feac (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b2b4ea22fcf71ef61ff84aa9669da2419c7541a5 (omitted, need guidance)"},{"Id":"9496198375","Type":"PullRequestEvent","CreatedAt":"2019-04-23T18:24:26","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7335","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/coreclr\" (#7335) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Anipik"},{"Id":"9496192586","Type":"PullRequestEvent","CreatedAt":"2019-04-23T18:23:36","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7335","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7335) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9498084067","Type":"IssuesEvent","CreatedAt":"2019-04-24T00:10:17","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3173","RelatedDescription":"Opened issue \"Move Version calculation to targets\" (#3173) at dotnet/sdk","RelatedBody":"Currently, the .NET Core SDK initializes `Version` property during evaluation phase in `Microsoft.NET.DefaultAssemblyInfo.targets` based on the values of `VersionPrefix` and `VersionSuffix` properties. \r\n\r\nConsider a NuGet package that provides a optional feature that generates version based on some property set by the project. The package targets do not have the opportunity to set `VersionPrefix` since there is no extension point in between the import of .NET Core `Sdk.targets` and `Microsoft.NET.DefaultAssemblyInfo.targets`. The first available extension point is an import of \"BeforeMicrosoftCommonTargets\".\r\n\r\n**Proposal**\r\n \r\nMove the `Version` initialization to a target and update all usages to depend on that target. This would be a breaking change, but would also allow more complex version calculation to be performed than can be done by just evaluation. E.g. version based on git commit depth, etc.\r\n\r\n**Non-breaking alternative**\r\n\r\nAdd `ImportBeforeSdkTargets` property that contains a list of files to be imported from `Sdk.targets` before the rest of the SDK targets are imported. The SDK package could then add its targets file to the list in its `.props` file and set the `VersionPrefix` and `VersionSuffix` in that file. \r\n "},{"Id":"9497729889","Type":"PullRequestEvent","CreatedAt":"2019-04-23T22:39:09","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3172","RelatedDescription":"Merged pull request \"Ignore NuGet warning NU5123 (for long paths)\" (#3172) at dotnet/sdk","RelatedBody":"#3132 added a test project with a long path in it (HelloWorldWithSubDirs).  When we create dotnet tool packages for the tests, we bundle the test assets in them, and this is triggering [NU5123](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5123) [in our builds](https://dev.azure.com/dnceng/internal/_build/results?buildId=166542).\r\n\r\nSo this PR fixes this by ignoring that NuGet warning."},{"Id":"9497211535","Type":"PullRequestEvent","CreatedAt":"2019-04-23T21:01:48","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3167","RelatedDescription":"Merged pull request \"Move the SDK Performance tests to Helix\" (#3167) at dotnet/sdk","RelatedBody":"Move the SDK Performance tests to Helix\r\n\r\n@MattGal\r\n@DrewScoggins\r\n@adiaaida \r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"open","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Open PR \"add links to ML.NET docs\" (#141)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"436503105","IsPullRequest":false,"CreatedAt":"2019-04-24T05:27:45","Actor":"sdmaclea","Number":"24211","RawContent":null,"Title":"Satellite Lookup on case sensitive file systems...","State":"open","Body":"@tarekgh Made a request for searching for Satellite Assemblies using case insensitive path search.\r\n\r\nInitial prototype of the case insensitive search illustrated the complexity of such an approach.\r\n\r\nThe prototype case insensitive search code was removed and this issue was opened for the design discussion.\r\n\r\n@jkotas made the alternative suggestion that we control the build tooling.  We could simply 'lower case` the culture directories....\r\n\r\nSee discussion which started here https://github.com/dotnet/coreclr/pull/24191#discussion_r277793894","Url":"https://github.com/dotnet/coreclr/issues/24211","RelatedDescription":"Open issue \"Satellite Lookup on case sensitive file systems...\" (#24211)"},{"Id":"436501579","IsPullRequest":true,"CreatedAt":"2019-04-24T05:20:29","Actor":"am11","Number":"24210","RawContent":null,"Title":"Delete null comparisons of non-null arguments","State":"open","Body":"gcc 8 complains that these conditions cannot be met, as argument is\r\nnonnull, e.g.:\r\n\r\n> error: nonnull argument 'this' compared to NULL\r\n> [-Werror=nonnull-compare]","Url":"https://github.com/dotnet/coreclr/pull/24210","RelatedDescription":"Open PR \"Delete null comparisons of non-null arguments\" (#24210)"},{"Id":"436407773","IsPullRequest":true,"CreatedAt":"2019-04-24T05:01:48","Actor":"jkoritzinsky","Number":"24203","RawContent":null,"Title":"Match managed DetermineLibraryNameVariations implementation to native DetermineLibNameVariations implementation.","State":"closed","Body":"Fixes #24187 ","Url":"https://github.com/dotnet/coreclr/pull/24203","RelatedDescription":"Closed or merged PR \"Match managed DetermineLibraryNameVariations implementation to native DetermineLibNameVariations implementation.\" (#24203)"},{"Id":"436086034","IsPullRequest":false,"CreatedAt":"2019-04-24T05:01:48","Actor":"MichalStrehovsky","Number":"24187","RawContent":null,"Title":"DetermineLibNameVariations in System.Runtime.Loader doesn't match native","State":"closed","Body":"The managed implementation doesn't match native implementation.\r\n\r\nhttps://github.com/dotnet/coreclr/pull/24143#discussion_r277138341\r\n\r\nCc @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/issues/24187","RelatedDescription":"Closed issue \"DetermineLibNameVariations in System.Runtime.Loader doesn't match native\" (#24187)"},{"Id":"436488863","IsPullRequest":false,"CreatedAt":"2019-04-24T04:13:28","Actor":"benaadams","Number":"24209","RawContent":null,"Title":"Redundant length check when using Span<byte> => new byte[]","State":"open","Body":"```csharp\r\npublic static bool IsHexadecimalChar(char c)\r\n{\r\n    var charToHex = CharToHexLookup;\r\n    var i = (int)c;\r\n    return (uint)i < (uint)charToHex.Length && charToHex[i] != 0xff;\r\n}\r\n\r\nprivate static ReadOnlySpan<byte> CharToHexLookup => new byte[]\r\n{\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 15\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 31\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 47\r\n    0x0,  0x1,  0x2,  0x3,  0x4,  0x5,  0x6,  0x7,  0x8,  0x9,  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 63\r\n    0xFF, 0xA,  0xB,  0xC,  0xD,  0xE,  0xF,  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 79\r\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 95\r\n    0xFF, 0xa,  0xb,  0xc,  0xd,  0xe,  0xf // 102\r\n};\r\n```\r\nGenerates\r\n```asm\r\nPathStringHelper.IsHexadecimalChar(Char)\r\n    L0000: sub rsp, 0x48\r\n    L0004: movzx eax, cx\r\n    L0007: cmp eax, 0x67\r\n    L000a: jae L002f\r\n    L000c: cmp eax, 0x67   ; this check is same as above\r\n    L000f: jae L0036           \r\n    L0011: movsxd rax, eax\r\n    L0014: mov rdx, 0x1a744990bc8\r\n    L001e: add rax, rdx\r\n    L0021: cmp byte [rax], 0xff\r\n    L0024: setnz al\r\n    L0027: movzx eax, al\r\n    L002a: add rsp, 0x48\r\n    L002e: ret\r\n    L002f: xor eax, eax\r\n    L0031: add rsp, 0x48\r\n    L0035: ret\r\n    L0036: call System.ThrowHelper.ThrowIndexOutOfRangeException()\r\n    L003b: int3\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24209","RelatedDescription":"Open issue \"Redundant length check when using Span<byte> => new byte[]\" (#24209)"},{"Id":"436438890","IsPullRequest":true,"CreatedAt":"2019-04-24T03:21:10","Actor":"jkotas","Number":"24204","RawContent":null,"Title":"Delete unnecessary static and update GCSample to VS2019","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24204","RelatedDescription":"Closed or merged PR \"Delete unnecessary static and update GCSample to VS2019\" (#24204)"},{"Id":"435975411","IsPullRequest":true,"CreatedAt":"2019-04-24T02:06:37","Actor":"ahsonkhan","Number":"24182","RawContent":null,"Title":"[No merge] [No review] Update coreclr repo README.md","State":"closed","Body":"Testing out test failure in CI.\r\n\r\nhttps://github.com/dotnet/coreclr/issues/24159\r\n","Url":"https://github.com/dotnet/coreclr/pull/24182","RelatedDescription":"Closed or merged PR \"[No merge] [No review] Update coreclr repo README.md\" (#24182)"},{"Id":"436460195","IsPullRequest":false,"CreatedAt":"2019-04-24T01:50:05","Actor":"VincentBu","Number":"24208","RawContent":null,"Title":"[arm64] Test failed: System.Threading.ThreadPools.Tests.ThreadPoolTests.SetMinMaxThreadsTest","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/179/\r\n\r\n**Failed tests:**\r\nSystem.Threading.ThreadPools.Tests.ThreadPoolTests.SetMinMaxThreadsTest\r\n\r\n**Log:**\r\n```\r\nSystem.Threading.ThreadPools.Tests.ThreadPoolTests.SetMinMaxThreadsTest [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Threading.ThreadPool/tests/ThreadPoolTests.cs(117,0): at System.Threading.ThreadPools.Tests.ThreadPoolTests.SetMinMaxThreadsTest()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24208","RelatedDescription":"Open issue \"[arm64] Test failed: System.Threading.ThreadPools.Tests.ThreadPoolTests.SetMinMaxThreadsTest\" (#24208)"},{"Id":"436454390","IsPullRequest":false,"CreatedAt":"2019-04-24T01:20:04","Actor":"VincentBu","Number":"24207","RawContent":null,"Title":"[x64] Throw exception when running run-corefx-tests.py","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_ubuntu_corefx_baseline/908/\r\n\r\n**Log:**\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/tests/scripts/run-corefx-tests.py\", line 411, in <module>\r\n    main(Args)\r\n  File \"/mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/tests/scripts/run-corefx-tests.py\", line 226, in main\r\n    args)\r\n  File \"/mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/tests/scripts/run-corefx-tests.py\", line 148, in validate_args\r\n    validate_arg(exclusion_rsp_file, lambda item: os.path.isfile(exclusion_rsp_file))\r\n  File \"/mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/tests/scripts/run-corefx-tests.py\", line 117, in validate_arg\r\n    raise Exception('Argument: %s is not valid.' % (arg))\r\nException: Argument: /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline%/tests/scripts/run-corefx-tests-exclusions.txt is not valid.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24207","RelatedDescription":"Open issue \"[x64] Throw exception when running run-corefx-tests.py\" (#24207)"},{"Id":"436453833","IsPullRequest":true,"CreatedAt":"2019-04-24T01:17:05","Actor":"dotnet-maestro-bot","Number":"24206","RawContent":null,"Title":"Update CoreClr to preview6-27623-74 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/24206","RelatedDescription":"Open PR \"Update CoreClr to preview6-27623-74 (master)\" (#24206)"},{"Id":"436439887","IsPullRequest":true,"CreatedAt":"2019-04-24T00:03:40","Actor":"jkoritzinsky","Number":"24205","RawContent":null,"Title":"Update IBCMerge and ensure that it runs when in a release build and ibcoptimize is set.","State":"open","Body":"We weren't restoring the IBCMerge package, so we didn't actually end up invoking IBCMerge. Additionally, we silently failed if we couldn't find IBCMerge where we expected it.\r\n\r\nThis updates our build script to restore and run the .NET Core version of IBCMerge.\r\n\r\nAfter building with IBC optimization enabled, the IL images of System.Private.CoreLib before invoking Crossgen contain IBC data.","Url":"https://github.com/dotnet/coreclr/pull/24205","RelatedDescription":"Open PR \"Update IBCMerge and ensure that it runs when in a release build and ibcoptimize is set.\" (#24205)"},{"Id":"436395532","IsPullRequest":true,"CreatedAt":"2019-04-23T23:34:58","Actor":"BruceForstall","Number":"24201","RawContent":null,"Title":"Enable fine-grained and universal exclusions for CoreFX tests","State":"closed","Body":"One problem we've had in coreclr Jenkins when running corefx\r\ntests (in the coreclr outerloop runs -- the ones using the\r\nrun-corefx-tests.py harness) is the inability to exclude\r\nfailing tests for x86 or x64, and the inability to have\r\nfine-grained exclusions. This has led to problems like\r\nhttps://github.com/dotnet/coreclr/issues/22442 where\r\nvirtually all Windows x86 and x64 corefx runs fail due to\r\ntimeouts. And issues like https://github.com/dotnet/coreclr/issues/24159\r\nwhere all corefx test legs fail, and we have no control\r\nover exclusions to get them all passing again quickly.\r\n\r\nNow that the corefx RunTests.cmd/sh wrapper scripts\r\nparse named arguments, including a response file that\r\nis passed on to xunit, and also that the corefx used\r\nxunit has support for this response file as well as\r\nfine-grained exclusions (per-method/per-class/per-namespace),\r\nwe can take advantage of it.\r\n\r\nThis change adds a single, global, corefx xunit exclusion\r\nresponse file, that will be used for all platforms. Since this\r\nrun-corefx-tests.py mechanism is not expected to live much longer,\r\nthis seems sufficient.","Url":"https://github.com/dotnet/coreclr/pull/24201","RelatedDescription":"Closed or merged PR \"Enable fine-grained and universal exclusions for CoreFX tests\" (#24201)"},{"Id":"436387273","IsPullRequest":true,"CreatedAt":"2019-04-23T23:28:08","Actor":"dotnet-maestro-bot","Number":"24200","RawContent":null,"Title":"Update CoreClr to preview6-27623-73 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/24200","RelatedDescription":"Closed or merged PR \"Update CoreClr to preview6-27623-73 (master)\" (#24200)"},{"Id":"436366337","IsPullRequest":true,"CreatedAt":"2019-04-23T22:39:33","Actor":"Anipik","Number":"24197","RawContent":null,"Title":"Revert \"Dummy commit\"","State":"closed","Body":"Reverts dotnet/coreclr#24195\r\nI accidently merged the change in the upstream fork rather than in my own fork","Url":"https://github.com/dotnet/coreclr/pull/24197","RelatedDescription":"Closed or merged PR \"Revert \"Dummy commit\"\" (#24197)"},{"Id":"436406824","IsPullRequest":true,"CreatedAt":"2019-04-23T21:54:03","Actor":"luhenry","Number":"24202","RawContent":null,"Title":"WIP: Implement GC.RegisterMemoryLoadChangeNotification","State":"open","Body":"This allows users to register a callback to be called whenever the\r\nmemory load is between a low and high thresholds. The idea is to allow\r\nthem to tweak their memory usage based on the available memory.\r\n\r\nIt is only internal for now because we are not confident on the shape of\r\nthe API and if it's the best we can provide users. This needs to go\r\nthrough a few iterations with first party users like ASP.NET or corefx.\r\n\r\nFor https://github.com/dotnet/coreclr/issues/18619","Url":"https://github.com/dotnet/coreclr/pull/24202","RelatedDescription":"Open PR \"WIP: Implement GC.RegisterMemoryLoadChangeNotification\" (#24202)"},{"Id":"436280973","IsPullRequest":true,"CreatedAt":"2019-04-23T20:58:55","Actor":"tarekgh","Number":"24190","RawContent":null,"Title":"Fix failures caused by ICU regression","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/37098\r\n\r\n.NET Core depends on ICU when running on Linux/OSX. Recently some people raised some failure on the framework stack. After investigation we found a regression in ICU which is the root cause of this failure. The regression is, when calling ICU to get some date patterns/properties, in some cases ICU return error code U_MISSING_RESOURCE_ERROR. Although the framework code written to fallback to some invariant values at that time, but we had some wrong line of code which assumed we never fail and trying to access the returned value without checking. That cause the framework to throw NullReferenceException.\r\n\r\nThe fix here is to make the framework resilient against such cases and continue to run nicely. I have contact ICU support members and I learned there is similar issue tracked in ICU repo https://unicode-org.atlassian.net/browse/ICU-20558","Url":"https://github.com/dotnet/coreclr/pull/24190","RelatedDescription":"Closed or merged PR \"Fix failures caused by ICU regression\" (#24190)"},{"Id":"436378230","IsPullRequest":true,"CreatedAt":"2019-04-23T20:35:35","Actor":"fadimounir","Number":"24199","RawContent":null,"Title":"Fixing 23941","State":"open","Body":"The issue here is that in R2R code, unlike jitted IL code, the pinvoke calls are wrapped by a pair of calls to the JIT_PInvokeBegin and JIT_PInvokeEnd helpers, which link and unlink the InlinedCallFrame to the current thread. We do not initialize and link the ICF in the method prolog, and unlink it in the epilog, like jitted code does. We do this in the JIT helpers, right before/after the pinvoke call.\r\nWhen an exception is thrown, the JIT_PInvokeEnd helper will be skipped since execution will resume at the nearest valid catch block, and the ICF will remain linked to the thread, which poses a problem if the method attempts another pinvoke operation (it will try to link the ICF which is already the top frame, and we'll end up in an infinite loop). Therefore, for the R2R case, we need to pop the ICF from the chain during exception unwinding.\r\n\r\nFixes #23941","Url":"https://github.com/dotnet/coreclr/pull/24199","RelatedDescription":"Open PR \"Fixing 23941\" (#24199)"},{"Id":"436335254","IsPullRequest":true,"CreatedAt":"2019-04-23T20:14:59","Actor":"janvorli","Number":"24196","RawContent":null,"Title":"Fix crash after unload with server GC","State":"closed","Body":"When server GC is on, the DomainAssembly::EnumStaticGCRefs is called to\r\nenumerate GC statics. For collectible assemblies, the GC statics are\r\nstored in managed arrays and so there is no need for a special\r\nenumeration of the GC statics. Attempt to do that was causing a crash\r\ndue to the fact that the corresponding DomainLocalModule::m_pGCStatics\r\nis always NULL for collectible assemblies and we were trying to access\r\nit.\r\n\r\nClose #24140","Url":"https://github.com/dotnet/coreclr/pull/24196","RelatedDescription":"Closed or merged PR \"Fix crash after unload with server GC\" (#24196)"},{"Id":"436368086","IsPullRequest":true,"CreatedAt":"2019-04-23T20:10:41","Actor":"sywhang","Number":"24198","RawContent":null,"Title":"Fix LTTng probe check disabling GC events enabled by EventPipe","State":"open","Body":"This helper method was introduced to enable GC's own cache of events in `gceventstatus.h` from getting updated accordingly when LTTng probes were enabled. However, if we enable EventPipe without LTTng, it means this helper will disable all GC events on the next GC that happens since none of the LTTng probes are enabled. \r\n\r\nThis fix queries EventPipe endpoints as well to figure out whether these keywords are enabled, so that the LTTng probe won't disable them if EventPipe is enabled as well. \r\n\r\ncc @Maoni0 ","Url":"https://github.com/dotnet/coreclr/pull/24198","RelatedDescription":"Open PR \"Fix LTTng probe check disabling GC events enabled by EventPipe\" (#24198)"},{"Id":"436301455","IsPullRequest":true,"CreatedAt":"2019-04-23T19:56:10","Actor":"Anipik","Number":"24192","RawContent":null,"Title":"Nullable : System.Diagnostics.Eventing (Directory)","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24192","RelatedDescription":"Closed or merged PR \"Nullable : System.Diagnostics.Eventing (Directory)\" (#24192)"},{"Id":"436325742","IsPullRequest":true,"CreatedAt":"2019-04-23T18:21:58","Actor":"Anipik","Number":"24195","RawContent":null,"Title":"Dummy commit","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24195","RelatedDescription":"Closed or merged PR \"Dummy commit\" (#24195)"},{"Id":"436302597","IsPullRequest":true,"CreatedAt":"2019-04-23T17:23:29","Actor":"luhenry","Number":"24194","RawContent":null,"Title":"Switch to workstation GC in case of constrained CPU resources","State":"open","Body":"Right now, if the user sets the configuration so that the server GC is\r\nused, the server GC will be loaded even in conditions where we know the\r\nworkstation GC would fare better. An example of such conditions is\r\nconstrained environment where there is only 1 or less CPU or with very\r\nlow memory.\r\n\r\nThis can be harmful if users deploy the same projects on different kind\r\nof platforms: deploying to a 20+ cores server and to Azure Functions\r\nwill require largely different configurations for the runtime.\r\n\r\nThere are already multiple ways for the user to specify to use the\r\nserver GC or not:\r\n - setting `COMPlus_gcServer` as an environment variable\r\n - setting `gcServer` in the configuration file\r\n - setting `System.GC.Server` passed to `coreclr_initialize`\r\n\r\nFix https://github.com/dotnet/coreclr/issues/23949","Url":"https://github.com/dotnet/coreclr/pull/24194","RelatedDescription":"Open PR \"Switch to workstation GC in case of constrained CPU resources\" (#24194)"},{"Id":"436301954","IsPullRequest":true,"CreatedAt":"2019-04-23T17:21:52","Actor":"stephentoub","Number":"24193","RawContent":null,"Title":"Nullable: Contract.cs and more interop","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24193","RelatedDescription":"Open PR \"Nullable: Contract.cs and more interop\" (#24193)"},{"Id":"436293535","IsPullRequest":true,"CreatedAt":"2019-04-23T16:59:46","Actor":"sdmaclea","Number":"24191","RawContent":null,"Title":"WIP Fix Satellite Assembly loading","State":"open","Body":"When loading satellite assemblies, we should probe next to the parent\r\nassembly and load into the same AssemblyLoadContext as the parent\r\nassembly.\r\n\r\nDisable fallback probing for satellite assemblies.\r\n\r\nAdd AssemblyLoadContext.Resolving handler to probe for satellite\r\nassemblies next to parent\r\n\r\nFixes #20979","Url":"https://github.com/dotnet/coreclr/pull/24191","RelatedDescription":"Open PR \"WIP Fix Satellite Assembly loading\" (#24191)"},{"Id":"436239822","IsPullRequest":false,"CreatedAt":"2019-04-23T15:05:17","Actor":"YohDeadfall","Number":"24189","RawContent":null,"Title":"Getting underlying value of nullable without code duplication in generics","State":"open","Body":"As I know, there is no way to write an universal generic method which can accept reference types and value types, and get underlying values of the last ones. It can be workaround by delegates and a null check.\r\n\r\nAnother way I'm playing with for JSON serialization is:\r\n\r\n```csharp\r\npublic static TRuntime GetValueOrDefault<TRuntime, TDeclared>(TDeclared value)\r\n{\r\n    return value is TRuntime underlying ? underlying : default;\r\n}\r\n```\r\n\r\nThe method behaves like `Nullable<T>.GetValueOrDefault()`, but it allocates and works slower. It's expected, however I see no allocations and no big difference in the generated code below. What is a reason of this?\r\n\r\n```csharp\r\n[MemoryDiagnoser]\r\n[DisassemblyDiagnoser(printAsm: true, printSource: true, printIL: true)]\r\npublic class Program\r\n{\r\n    private static void Main(string[] args)\r\n    {\r\n        var x = GetValueOrDefault_Unified<int, int?>(512);\r\n        BenchmarkRunner.Run<Program>();\r\n    }\r\n\r\n    public int? Value { get; set; } = 0;\r\n\r\n    [Benchmark]\r\n    public int GetValueOrDefault_Nullable()\r\n    {\r\n        return GetValueOrDefault_Nullable<int>(Value);\r\n    }\r\n\r\n    [Benchmark]\r\n    public int GetValueOrDefault_Unified()\r\n    {\r\n        return GetValueOrDefault_Unified<int, int?>(Value);\r\n    }\r\n\r\n    [Benchmark]\r\n    public int GetValueOrDefault_Nullable_Const()\r\n    {\r\n        return GetValueOrDefault_Nullable<int>(42);\r\n    }\r\n\r\n    [Benchmark]\r\n    public int GetValueOrDefault_Unified_Const()\r\n    {\r\n        return GetValueOrDefault_Unified<int, int?>(42);\r\n    }\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static TRuntime GetValueOrDefault_Nullable<TRuntime>(TRuntime? value)\r\n        where TRuntime : struct\r\n    {\r\n        return value.GetValueOrDefault();\r\n    }\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static TRuntime GetValueOrDefault_Unified<TRuntime, TDeclared>(TDeclared value)\r\n    {\r\n        return value is TRuntime typed ? typed : default;\r\n    }\r\n}\r\n```\r\n\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.16299.1029 (1709/FallCreatorsUpdate/Redstone3)\r\nIntel Core i7-8650U CPU 1.90GHz (Kaby Lake R), 1 CPU, 8 logical and 4 physical cores\r\nFrequency=2062499 Hz, Resolution=484.8487 ns, Timer=TSC\r\n.NET Core SDK=3.0.100-preview4-011223\r\n  [Host]     : .NET Core 3.0.0-preview4-27615-11 (CoreCLR 4.6.27615.73, CoreFX 4.700.19.21213), 64bit RyuJIT\r\n  DefaultJob : .NET Core 3.0.0-preview4-27615-11 (CoreCLR 4.6.27615.73, CoreFX 4.700.19.21213), 64bit RyuJIT\r\n```\r\n\r\n|                           Method |       Mean |     Error |    StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------------------------------- |-----------:|----------:|----------:|-------:|------:|------:|----------:|\r\n|       GetValueOrDefault_Nullable |   4.693 ns | 0.0409 ns | 0.0363 ns |      - |     - |     - |         - |\r\n|        GetValueOrDefault_Unified | 103.374 ns | 0.7403 ns | 0.6562 ns | 0.0114 |     - |     - |      48 B |\r\n| GetValueOrDefault_Nullable_Const |   4.472 ns | 0.0142 ns | 0.0126 ns |      - |     - |     - |         - |\r\n|  GetValueOrDefault_Unified_Const |  96.553 ns | 0.4753 ns | 0.3969 ns | 0.0114 |     - |     - |      48 B |\r\n\r\n```\r\n; temp.Program.GetValueOrDefault_Nullable()\r\n       sub     rsp,18h\r\n       nop\r\n       mov     rcx,qword ptr [rcx+10h]\r\n       mov     qword ptr [rsp+10h],rcx\r\n       lea     rcx,[rsp+8]\r\n       movzx   eax,byte ptr [rsp+10h]\r\n       mov     byte ptr [rcx],al\r\n       mov     eax,dword ptr [rsp+14h]\r\n       mov     dword ptr [rcx+4],eax\r\n       mov     rcx,qword ptr [rsp+8]\r\n       mov     rax,7FF8DDCD4068h\r\n       add     rsp,18h\r\n       jmp     rax\r\n       add     byte ptr [rcx],bl\r\n       add     al,1\r\n       add     byte ptr [rdx],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax],ah\r\n       adc     ebp,0FFFFFFDDh\r\n       clc\r\n       jg      M00_L00\r\nM00_L00:\r\n       add     byte ptr [rdi],cl\r\n; Total bytes of code 81\r\n```\r\n\r\n```\r\n; temp.Program.GetValueOrDefault_Unified()\r\n       sub     rsp,18h\r\n       nop\r\n       mov     rcx,qword ptr [rcx+10h]\r\n       mov     qword ptr [rsp+10h],rcx\r\n       lea     rcx,[rsp+8]\r\n       movzx   eax,byte ptr [rsp+10h]\r\n       mov     byte ptr [rcx],al\r\n       mov     eax,dword ptr [rsp+14h]\r\n       mov     dword ptr [rcx+4],eax\r\n       mov     rcx,qword ptr [rsp+8]\r\n       mov     rax,7FF8DDCC4068h\r\n       add     rsp,18h\r\n       jmp     rax\r\n       add     byte ptr [rcx],bl\r\n       add     al,1\r\n       add     byte ptr [rdx],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax],al\r\n       add     byte ptr [rax-7Eh],ah\r\n       ???\r\n       ???\r\n       clc\r\n       jg      M00_L00\r\nM00_L00:\r\n       add     byte ptr [rsi+48h],dl\r\n; Total bytes of code 82\r\n```\r\n\r\n```\r\n; temp.Program.GetValueOrDefault_Nullable_Const()\r\n               return GetValueOrDefault_Nullable<int>(42);\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       IL_0000: ldc.i4.s 42\r\n       IL_0002: newobj System.Void System.Nullable`1<System.Int32>::.ctor(!0)\r\n       mov     ecx,2Ah\r\n       mov     eax,1\r\n       IL_0007: call TRuntime temp.Program::GetValueOrDefault_Nullable<System.Int32>(System.Nullable`1<TRuntime>)\r\n       IL_000c: ret\r\n       lea     rdx,[rsp]\r\n       mov     byte ptr [rdx],al\r\n       mov     dword ptr [rdx+4],ecx\r\n       mov     rcx,qword ptr [rsp]\r\n       mov     rax,7FF8DDCB4068h\r\n; Total bytes of code 33\r\n```\r\n\r\n```\r\n; temp.Program.GetValueOrDefault_Unified_Const()\r\n               return GetValueOrDefault_Unified<int, int?>(42);\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       IL_0000: ldc.i4.s 42\r\n       IL_0002: newobj System.Void System.Nullable`1<System.Int32>::.ctor(!0)\r\n       mov     ecx,2Ah\r\n       mov     eax,1\r\n       IL_0007: call TRuntime temp.Program::GetValueOrDefault_Unified<System.Int32,System.Nullable`1<System.Int32>>(TDeclared)\r\n       IL_000c: ret\r\n       lea     rdx,[rsp]\r\n       mov     byte ptr [rdx],al\r\n       mov     dword ptr [rdx+4],ecx\r\n       mov     rcx,qword ptr [rsp]\r\n       mov     rax,7FF8DDCB4068h\r\n; Total bytes of code 33\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24189","RelatedDescription":"Open issue \"Getting underlying value of nullable without code duplication in generics\" (#24189)"},{"Id":"436021682","IsPullRequest":true,"CreatedAt":"2019-04-23T13:24:45","Actor":"Dotnet-GitSync-Bot","Number":"24186","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel","Url":"https://github.com/dotnet/coreclr/pull/24186","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#24186)"},{"Id":"436180264","IsPullRequest":false,"CreatedAt":"2019-04-23T13:12:33","Actor":"noahfalk","Number":"24188","RawContent":null,"Title":"EventPipe Streaming support for greater than 4GB streams","State":"open","Body":"The Netperf file format appears to have size limitations because it uses 32 bit values to refer to other positions in the stream. It doesn't look hard to generate 1-10 MB/sec of trace data which means a stream could hit the limit in under 10 minutes of operation. Alternately a long running dotnet-counters scenario might log at 10 KB/sec which will hit the stream limit in about 5 days of service uptime.\r\n\r\nWe need to:\r\n- [ ] Identify any fundamental limitations in the Netperf format so that we can theoretically support 2^64 bytes of streamed or on-disk data\r\n- [ ] Update the netperf format documentation\r\n- [ ] Update the emitter in the runtime to generate the modified format\r\n- [ ] Update TraceEvent and PerfView to parse the modified format, as well as eliminate 32 bit limitations in that code\r\n- [ ] Test streaming scenarios that exceed 4GB with our various tools\r\n\r\n\r\nYou could also imagine attacking this problem from the angle of compression but I think that is at best a complementary effort. Even with a 10x reduction in stream size we've only moved the 10 minute scenario to a 100 minute scenario. If we want this to be considered a serious technology I think we need to support sustained high rate telemetry for services that might run non-stop for months.\r\n\r\ncc @jorive @sywhang @brianrob @vancem ","Url":"https://github.com/dotnet/coreclr/issues/24188","RelatedDescription":"Open issue \"EventPipe Streaming support for greater than 4GB streams\" (#24188)"},{"Id":"436011307","IsPullRequest":false,"CreatedAt":"2019-04-23T05:57:25","Actor":"BruceForstall","Number":"24185","RawContent":null,"Title":"Assertion failed 'result == lateArgs->gtOp.gtOp1'","State":"open","Body":"Happens in CI:\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_corefx_jitstress1/785/consoleText\r\n\r\nDoesn't require JitStress. I repro'ed locally (after setup using `run-corefx-tests.py`):\r\n```\r\nf:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\tests\\System.Threading.Tasks.Tests\\netcoreapp-Windows_NT-Release-x86>RunTests.cmd --runtime-path f:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\testhost\\netcoreapp-Windows_NT-Release-x86 --dotnet-root f:\\gh\\coreclr11\\_\\fx_x86\\.dotnet\r\n----- start 22:50:37.71 ===============  To repro directly: =====================================================\r\npushd f:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\tests\\System.Threading.Tasks.Tests\\netcoreapp-Windows_NT-Release-x86\\\r\nset COMPlus_TieredCompilation=0\r\n\"f:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\testhost\\netcoreapp-Windows_NT-Release-x86\\dotnet.exe\" xunit.console.dll System.Threading.Tasks.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=failing -notrait category=OuterLoop\r\npopd\r\n===========================================================================================================\r\n\r\nf:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\tests\\System.Threading.Tasks.Tests\\netcoreapp-Windows_NT-Release-x86>set COMPlus_TieredCompilation=0\r\n\r\nf:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\tests\\System.Threading.Tasks.Tests\\netcoreapp-Windows_NT-Release-x86>\"f:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\testhost\\netcoreapp-Windows_NT-Release-x86\\dotnet.exe\" xunit.console.dll System.Threading.Tasks.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=failing -notrait category=OuterLoop\r\n  Discovering: System.Threading.Tasks.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Threading.Tasks.Tests (found 539 of 715 test cases)\r\n  Starting:    System.Threading.Tasks.Tests (parallel test collections = on, max threads = 8)\r\n    System.Threading.Tasks.Tests.TaskSchedulerTests.GetTaskSchedulersForDebugger_DebuggerAttached_ReturnsAllSchedulers [SKIP]\r\n      Condition(s) not met: \"DebuggerIsAttached\"\r\n    System.Threading.Tasks.Tests.TaskSchedulerTests.GetScheduledTasksForDebugger_DebuggerAttached_ReturnsTasksFromCustomSchedulers [SKIP]\r\n      Condition(s) not met: \"DebuggerIsAttached\"\r\n\r\nAssert failure(PID 22808 [0x00005918], Thread: 6384 [0x18f0]): Assertion failed 'result == lateArgs->gtOp.gtOp1' in 'System.Threading.Tasks.Tests.TaskRtTests_Core:RunTaskWaitTest_NegativeTests()' (IL size 667)\r\n\r\n    File: f:\\gh\\coreclr11\\src\\jit\\gentree.cpp Line: 7962\r\n    Image: f:\\gh\\coreclr11\\_\\fx_x86\\artifacts\\bin\\testhost\\netcoreapp-Windows_NT-Release-x86\\dotnet.exe\r\n\r\n----- end 22:51:41.72 ----- exit code -1073740286 ----------------------------------------------------------\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/24185","RelatedDescription":"Open issue \"Assertion failed 'result == lateArgs->gtOp.gtOp1'\" (#24185)"},{"Id":"436000734","IsPullRequest":false,"CreatedAt":"2019-04-23T05:06:25","Actor":"BruceForstall","Number":"24184","RawContent":null,"Title":"CoreFX test failure: System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent","State":"open","Body":"Looks like a timeout\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_windows_nt_corefx_baseline/840/consoleFull\r\n\r\n```\r\n22:45:50      System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent [FAIL]\r\n22:45:50         System.TimeoutException : Task timed out after 00:00:30\r\n22:45:50         Stack Trace:\r\n22:45:50              at System.Threading.Tasks.TaskTimeoutExtensions.TimeoutAfter(Task task, TimeSpan timeout)\r\n22:45:50           D:\\j\\workspace\\x64_checked_w---a7bd363e\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cookies.cs(153,0): at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent()\r\n22:45:50           --- End of stack trace from previous location where exception was thrown ---\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24184","RelatedDescription":"Open issue \"CoreFX test failure: System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent\" (#24184)"},{"Id":"435993197","IsPullRequest":false,"CreatedAt":"2019-04-23T04:26:04","Actor":"BruceForstall","Number":"24183","RawContent":null,"Title":"runtest.py crash parsing failures","State":"open","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_jitx86hwintrinsicnoavx2/431/consoleFull\r\n\r\nTest run had one failure:\r\n```\r\n05:31:33                                                       GRAND TOTAL: 10450          0          1           0        5552.797s (5628.209s)\r\n```\r\n\r\nPython stack:\r\n```\r\n05:31:44 Parsing test results from (D:\\j\\workspace\\x86_checked_w---fa86ae90\\bin\\Logs\\TestRunResults_Windows_NT_x86_Checked)\r\n05:31:44 Traceback (most recent call last):\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2431, in <module>\r\n05:31:44     sys.exit(main(args))\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2417, in main\r\n05:31:44     tests = parse_test_results(host_os, arch, build_type, coreclr_repo_location, test_location)\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2092, in parse_test_results\r\n05:31:44     test_output = failure_info[0].text\r\n05:31:44   File \"C:\\Python27\\lib\\xml\\etree\\ElementTree.py\", line 266, in __getitem__\r\n05:31:44     return self._children[index]\r\n05:31:44 IndexError: list index out of range\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/24183","RelatedDescription":"Open issue \"runtest.py crash parsing failures\" (#24183)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"436439304","IsPullRequest":true,"CreatedAt":"2019-04-24T00:01:19","Actor":"dotnet-bot","Number":"11240","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11240","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#11240)"},{"Id":"436400585","IsPullRequest":true,"CreatedAt":"2019-04-23T23:13:50","Actor":"johnbeisner","Number":"11238","RawContent":null,"Title":"release/2.2.3xx: Update debain jessie image","State":"closed","Body":"The \"Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]\" leg of the release/2.1.7xx CLI build is failing:\r\n\r\n**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**\r\n\r\ndebian.org re-organized their folders anD deleted \"jessie-updates\". Cherry-picking the change that addresses this. \r\n\r\nThe release/2.2.3xx hasn't had a successful build of all legs yet - this should solve the problem.","Url":"https://github.com/dotnet/cli/pull/11238","RelatedDescription":"Closed or merged PR \"release/2.2.3xx: Update debain jessie image\" (#11238)"},{"Id":"436400597","IsPullRequest":true,"CreatedAt":"2019-04-23T23:10:42","Actor":"johnbeisner","Number":"11239","RawContent":null,"Title":"release/2.1.7xx: Update debain jessie image","State":"closed","Body":"The \"Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]\" leg of the release/2.1.7xx CLI build is failing:\r\n\r\n**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**\r\n\r\ndebian.org re-organized their folders and deleted \"jessie-updates\". Cherry-picking the change that addresses this. \r\n\r\nThe release/2.1.7xx hasn't had a successful build of all legs yet - this should solve the problem.","Url":"https://github.com/dotnet/cli/pull/11239","RelatedDescription":"Closed or merged PR \"release/2.1.7xx: Update debain jessie image\" (#11239)"},{"Id":"436098429","IsPullRequest":true,"CreatedAt":"2019-04-23T22:10:10","Actor":"vitek-karas","Number":"11233","RawContent":null,"Title":"Add --roll-forward command line usage","State":"closed","Body":"The new roll forward feature introduces a new command line option `--roll-forward`. It's implemented by the host, but the command line help is sometimes shown from the code in CLI repo.\r\n\r\nThe feature is added in dotnet/core-setup#5891\r\n\r\nThis change modifies the command line help to show `--roll-forward`.\r\nIt also removes the `--roll-forward-on-no-candidate-fx`. This setting is still supported, but the intent is to obsolete it. The new `--roll-forward` fully replaces it.\r\n\r\nFixes #11213 ","Url":"https://github.com/dotnet/cli/pull/11233","RelatedDescription":"Closed or merged PR \"Add --roll-forward command line usage\" (#11233)"},{"Id":"435304826","IsPullRequest":false,"CreatedAt":"2019-04-23T22:10:09","Actor":"vitek-karas","Number":"11213","RawContent":null,"Title":"Add command line usage help for the new --roll-forward option","State":"closed","Body":"The new roll forward feature introduces a new command line option `--roll-forward`. It's implemented by the host, but the command line help is sometimes shown from the code in CLI repo.\r\n\r\nThe feature is added in dotnet/core-setup#5891\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11213","RelatedDescription":"Closed issue \"Add command line usage help for the new --roll-forward option\" (#11213)"},{"Id":"436151065","IsPullRequest":true,"CreatedAt":"2019-04-23T22:09:00","Actor":"dotnet-maestro[bot]","Number":"11235","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190422.14\r\n- **Date Produced**: 4/23/2019 12:16 AM\r\n- **Commit**: 792478638e670b5a916c725cc416905cd9f9f78a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19222.14\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11235","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11235)"},{"Id":"435831669","IsPullRequest":true,"CreatedAt":"2019-04-23T22:08:43","Actor":"dotnet-bot","Number":"11225","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11225","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#11225)"},{"Id":"436252978","IsPullRequest":true,"CreatedAt":"2019-04-23T16:11:01","Actor":"dotnet-maestro[bot]","Number":"11237","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190423.2\r\n- **Date Produced**: 4/23/2019 3:19 PM\r\n- **Commit**: e854a58b469c2b4a660fc6e448657d1dd8e40ab9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19223.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11237","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#11237)"},{"Id":"436154443","IsPullRequest":true,"CreatedAt":"2019-04-23T13:04:17","Actor":"dotnet-maestro[bot]","Number":"11236","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190420.1\r\n- **Date Produced**: 4/20/2019 12:43 PM\r\n- **Commit**: 7a747389b05f83a35470fec2c469a984ffcc1779\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19220.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11236","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11236)"},{"Id":"436150891","IsPullRequest":true,"CreatedAt":"2019-04-23T12:45:24","Actor":"dotnet-maestro[bot]","Number":"11234","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11234","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11234)"},{"Id":"435630923","IsPullRequest":false,"CreatedAt":"2019-04-23T12:04:12","Actor":"narcis-pv","Number":"11223","RawContent":null,"Title":"Dependent assembly not found when using target manifest file (FDD)","State":"closed","Body":"# Local runtime store not used in probing path\r\nAssembly not found in the local runtime store on Windows when using target manifest files. Using COREHOST_TRACE, the runtime **is not** probing store path: `C:\\Program Files\\dotnet\\store`\r\n\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (Project.deps.json) was not found:\r\n    package: 'Swashbuckle.AspNetCore.Swagger', version: '4.0.1'\r\n    path: 'lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll'\r\n  This assembly was expected to be in the local runtime store as the application was published using the following target manifest files:\r\n    artifact.xml\r\n```\r\n# General\r\n\r\nProject published using manifest file declared in `Project.cspro`j as following:\r\n\r\n`<TargetManifestFiles>artifact.xml</TargetManifestFiles>`\r\n\r\nManifest file `artifact.xml` generated using:\r\n```\r\ndotnet store --manifest project.csproj --framework netcoreapp2.2 --runtime win7-x64 --skip-optimization\r\n```\r\noutput target manifest file:\r\n```\r\n<StoreArtifacts>\r\n  <Package Id=\"Swashbuckle.AspNetCore\" Version=\"4.0.1\" />\r\n  <Package Id=\"Swashbuckle.AspNetCore.Swagger\" Version=\"4.0.1\" />\r\n  <Package Id=\"Swashbuckle.AspNetCore.SwaggerGen\" Version=\"4.0.1\" />\r\n  <Package Id=\"Swashbuckle.AspNetCore.SwaggerUI\" Version=\"4.0.1\" />\r\n</StoreArtifacts>\r\n```\r\nAfter the dotnet publish command executes, in the output folder there is no Swashbuckle.*, correct.\r\n\r\n`Project.deps.json`\r\n```\r\n    \"Swashbuckle.AspNetCore.Swagger/4.0.1\": {\r\n      \"type\": \"package\",\r\n      \"serviceable\": true,\r\n      \"sha512\": \"sha512-rqzS3vHrjz+tR5j0nZOKZyaMTDfLGbVYkwMq205aYuGbsiGwbOlNU0Q8lq4Q0ptQPMKVkUf8XouCIdJ3qpK17w==\",\r\n      \"path\": \"swashbuckle.aspnetcore.swagger/4.0.1\",\r\n      \"hashPath\": \"swashbuckle.aspnetcore.swagger.4.0.1.nupkg.sha512\"\r\n    }\r\n```\r\n\r\nLocal runtime store: `C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.0` contains the packages for Swashbuckle.*\r\n![image](https://user-images.githubusercontent.com/45754576/56345196-d1ef0700-61c7-11e9-8d6b-f78fe3349d13.png)\r\n\r\nTrace using `COREHOST_TRACE=1`\r\n```\r\nProcessing TPA for deps entry [Swashbuckle.AspNetCore.Swagger, 4.0.1, lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll]\r\n  Considering entry [Swashbuckle.AspNetCore.Swagger/4.0.1/lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll], probe dir [], probe fx level:0, entry fx level:0\r\n    Local path query did not exist OUTPUT_FOLDER\\Swashbuckle.AspNetCore.Swagger.dll\r\n    Skipping... not found in deps dir 'OUTPUT_FOLDER\\'\r\n    Skipping... not found in probe dir ''\r\n  Considering entry [Swashbuckle.AspNetCore.Swagger/4.0.1/lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll], probe dir [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App\\2.2.2], probe fx level:1, entry fx level:0\r\n    Skipping... not found in deps json.\r\n    Skipping... not found in probe dir 'C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App\\2.2.2'\r\n  Considering entry [Swashbuckle.AspNetCore.Swagger/4.0.1/lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll], probe dir [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.2.2], probe fx level:2, entry fx level:0\r\n    Skipping... not found in deps json.\r\n    Skipping... not found in probe dir 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.2.2'\r\nError:\r\n  An assembly specified in the application dependencies manifest (Project.deps.json) was not found:\r\n    package: 'Swashbuckle.AspNetCore.Swagger', version: '4.0.1'\r\n    path: 'lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll'\r\n  This assembly was expected to be in the local runtime store as the application was published using the following target manifest files:\r\n    artifact.xml\r\n```\r\n\r\nI have also tried to put the packages in `C:\\Users\\%username%\\.dotnet\\store\\x64\\netcoreapp2.2`, same error.\r\n\r\nI even tried setting `DOTNET_PACKAGES_CACHE` described in [this doc in dotnet-cli assembly resolution](https://github.com/dotnet/cli/blob/v2.2.203/Documentation/specs/corehost.md), same error.\r\n\r\n# Expected behavior\r\nApplication starts correctly. \r\nAccording to this [runtime-store](https://docs.microsoft.com/en-us/dotnet/core/deploying/runtime-store) doc, it should load dependecies defined in target manifest files from path: `C:\\Program Files\\dotnet\\store`\r\n\r\n# Actual behavior\r\nError is thrown at application start-up\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (Project.deps.json) was not found:\r\n    package: 'Swashbuckle.AspNetCore.Swagger', version: '4.0.1'\r\n    path: 'lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll'\r\n  This assembly was expected to be in the local runtime store as the application was published using the following target manifest files:\r\n    artifact.xml\r\n```\r\n\r\n### Reproduction repo\r\nSample repository can be found here: https://github.com/narcis-pv/dotnet-core-target-manifest-bug\r\n\r\n### Other\r\nI have even tried providing a `runtimeconfig.template.json` with `additionalProbingPaths`, still doesn't work, the paths are not used in probe.\r\n\r\n```\r\n{\r\n  \"runtimeOptions\": {\r\n    \"additionalProbingPaths\": [\r\n      \"C:\\\\Program Files\\\\dotnet\\\\store\\\\|arch|\\\\|tfm|\",\r\n      \"C:\\\\Program Files\\\\dotnet\\\\store\\\\x64\\\\netcoreapp2.0\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nI've already submitted an issue [here](https://github.com/dotnet/core/issues/2595), on the general dotnet repo, but it might not have been the most aprroapriate place.\r\n\r\n### Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/11223","RelatedDescription":"Closed issue \"Dependent assembly not found when using target manifest file (FDD)\" (#11223)"},{"Id":"435320623","IsPullRequest":false,"CreatedAt":"2019-04-23T01:18:39","Actor":"dagood","Number":"11214","RawContent":null,"Title":"Sentinel and cache files not removed when uninstalling .NET Core SDK","State":"closed","Body":"@scottaddie commented on [Fri Apr 19 2019](https://github.com/dotnet/core-setup/issues/5946)\n\n## Steps to reproduce\r\n1. Uninstall the .NET Core SDK via Win10's Control Panel:\r\n\r\n![image](https://user-images.githubusercontent.com/10702007/56444142-2a540080-62bd-11e9-8cf6-d151044d78b8.png)\r\n\r\n2. Navigate to the _%USERPROFILE%/.dotnet_ directory. Notice that _sentinel_ and _*.dotnetUserLevelCache_ files are left behind. The following screenshot shows the files are left behind after uninstalling .NET Core SDK 2.2.104:\r\n\r\n![image](https://user-images.githubusercontent.com/10702007/56444039-b3b70300-62bc-11e9-937b-727badeaf062.png)\r\n\r\n## Expected  behavior\r\nThe version-specific files depicted in the screenshot above should be deleted.\r\n\r\n## Actual behavior\r\nThe version-specific files depicted in the screenshot above aren't deleted.\r\n\r\n## Environment data\r\nWin10 v1809\n\n---\n\n@dagood commented on [Fri Apr 19 2019](https://github.com/dotnet/core-setup/issues/5946#issuecomment-485028320)\n\nThe SDK installer is created in https://github.com/dotnet/core-sdk, but these files look to me like they're created during SDK usage (or first run) rather than placed directly by the installer. Moving to https://github.com/dotnet/cli with that in mind.\n\n","Url":"https://github.com/dotnet/cli/issues/11214","RelatedDescription":"Closed issue \"Sentinel and cache files not removed when uninstalling .NET Core SDK\" (#11214)"},{"Id":"435881727","IsPullRequest":false,"CreatedAt":"2019-04-23T01:06:08","Actor":"jkears","Number":"11230","RawContent":null,"Title":"DotNet New -n is not renaming custom template","State":"closed","Body":"## Steps to reproduce\r\n1. In a folder D:\\\\ProjectTemplates\\SomeCo.DomainTemplate.CSharp copy in a working c# class library project and rename it to **DomainTemplate.csproj**\r\n2. Add new subfolder in project root folder called .**template.config**\r\n3. Create a new **template.json** file in the .template.config folder with the following content ...\r\n{\r\n    \"$schema\": \"http://json.schemastore.org/template\",\r\n    \"author\": \"Me\",\r\n    \"classifications\": [ \"Domain\", \"Class Library\"],\r\n    \"identity\": \"SomeCo.DomainTemplate.CSharp\",\r\n    \"name\": \"SomeCo Domain Class Library\",\r\n    \"shortName\": \"scdomain\",\r\n    \"sourceName\": \"SomeCo.DomainTemplate\",      \r\n    \"preferNameDirectory\" : true\r\n   \r\n}\r\n\r\n4. Install template as follows\r\n**dotnet new -i D:\\ProjectTemplates\\SomeCo\\DomainTemplate\\CSharp**\r\nverify custom template is installed\r\n\r\n5. Create new project in a known empty folder\r\n**dotnet new scdomain --name domaina -o domaina** \r\n\r\n## Expected  behavior\r\nThat a new subfolder is created called domaina containing my custom template was created and renamed to domaina.csproj\r\n\r\n## Actual behavior\r\nA new subfolder is created called domaina and although the csproj that my custom template was created based upon is there it has the name of the project that my template had, in my case  DomainTemplate.csproj\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11230","RelatedDescription":"Closed issue \"DotNet New -n is not renaming custom template\" (#11230)"},{"Id":"435938436","IsPullRequest":false,"CreatedAt":"2019-04-22T23:51:18","Actor":"richlander","Number":"11232","RawContent":null,"Title":"Enable CLI config to disable preview warnings","State":"open","Body":"I'd love a config setting that disables the preview warnings. I use previews 99% of the time, and would love cleaner CLI spew ... it's a lot of text!\r\n\r\n```console\r\n/usr/local/share/dotnet/sdk/3.0.100-preview4-011222/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/Users/rich/git/sudoku-solver/src/sudoku-solver/sudoku-solver.csproj]\r\n```","Url":"https://github.com/dotnet/cli/issues/11232","RelatedDescription":"Open issue \"Enable CLI config to disable preview warnings\" (#11232)"},{"Id":"435917356","IsPullRequest":false,"CreatedAt":"2019-04-22T22:25:13","Actor":"danmosemsft","Number":"11231","RawContent":null,"Title":"macOS Startup System.ComponentModel.Win32Exception (13): Permission denied","State":"open","Body":"@tn-5 commented on [Sat Apr 20 2019](https://github.com/dotnet/coreclr/issues/24146)\n\nWith the latest nightly build of netcore 3 (3.0.100-preview5-011505) it is not possible to run a net core application on macos, it give an exception on startup:\r\nSystem.ComponentModel.Win32Exception (13): Permission denied\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\n\n---\n\n@danmosemsft commented on [Mon Apr 22 2019](https://github.com/dotnet/coreclr/issues/24146#issuecomment-485573014)\n\nBased on the linked issue, this seems to depend on install location. I'm pretty sure this isn't runtime. May not be CLI either but moving there seems a better bet.\n\n","Url":"https://github.com/dotnet/cli/issues/11231","RelatedDescription":"Open issue \"macOS Startup System.ComponentModel.Win32Exception (13): Permission denied\" (#11231)"},{"Id":"435597966","IsPullRequest":true,"CreatedAt":"2019-04-22T20:35:46","Actor":"dotnet-maestro[bot]","Number":"11222","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190421.5\r\n- **Date Produced**: 4/22/2019 4:48 AM\r\n- **Commit**: be0d4e5d360eb2fcd526beeca8f0997db02f32a8\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19221.5\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190422.7\r\n- **Date Produced**: 4/22/2019 7:11 PM\r\n- **Commit**: cb764d762acad2d4c79c17e44de79efcbce90bfb\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview5.19222.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11222","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11222)"},{"Id":"435866316","IsPullRequest":true,"CreatedAt":"2019-04-22T19:55:43","Actor":"mmitche","Number":"11229","RawContent":null,"Title":"[release/2.2.2xx] Update build name 222","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.2.1xx and 2.2.2xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11229","RelatedDescription":"Open PR \"[release/2.2.2xx] Update build name 222\" (#11229)"},{"Id":"435866155","IsPullRequest":true,"CreatedAt":"2019-04-22T19:55:18","Actor":"mmitche","Number":"11228","RawContent":null,"Title":"[release/2.2.1xx] Update cli build name","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.2.1xx and 2.2.2xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11228","RelatedDescription":"Open PR \"[release/2.2.1xx] Update cli build name\" (#11228)"},{"Id":"435865879","IsPullRequest":true,"CreatedAt":"2019-04-22T19:54:32","Actor":"mmitche","Number":"11227","RawContent":null,"Title":"[release/2.1.6xx] Update cli build name","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.1.5xx and 2.1.6xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11227","RelatedDescription":"Open PR \"[release/2.1.6xx] Update cli build name\" (#11227)"},{"Id":"435865787","IsPullRequest":true,"CreatedAt":"2019-04-22T19:54:17","Actor":"mmitche","Number":"11226","RawContent":null,"Title":"[release/2.1.5xx] Update cli build name","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.1.5xx and 2.1.6xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11226","RelatedDescription":"Open PR \"[release/2.1.5xx] Update cli build name\" (#11226)"},{"Id":"435565975","IsPullRequest":true,"CreatedAt":"2019-04-22T18:27:15","Actor":"wli3","Number":"11221","RawContent":null,"Title":"Update branding to preview 6","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11221","RelatedDescription":"Closed or merged PR \"Update branding to preview 6\" (#11221)"},{"Id":"435562158","IsPullRequest":true,"CreatedAt":"2019-04-22T17:51:44","Actor":"wli3","Number":"11220","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11220","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview5\" (#11220)"},{"Id":"435706393","IsPullRequest":true,"CreatedAt":"2019-04-22T12:14:06","Actor":"dotnet-maestro[bot]","Number":"11224","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11224","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11224)"},{"Id":"435272925","IsPullRequest":true,"CreatedAt":"2019-04-22T00:04:20","Actor":"dotnet-maestro[bot]","Number":"11212","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190419.3\r\n- **Date Produced**: 4/19/2019 6:58 PM\r\n- **Commit**: ffc244d4c158d20fff5fe562255e3061d8be4b82\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19219.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11212","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11212)"},{"Id":"435390877","IsPullRequest":true,"CreatedAt":"2019-04-21T20:49:06","Actor":"dotnet-maestro[bot]","Number":"11217","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190419.11\r\n- **Date Produced**: 4/20/2019 3:55 AM\r\n- **Commit**: e00479998c70a01e9e4a11d3e2aed5e0f5187c86\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview5.19219.11\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190420.1\r\n- **Date Produced**: 4/20/2019 3:07 PM\r\n- **Commit**: 413e8d1ac55ad355429ebf772b6f3b54802be5a3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview5.19220.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11217","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11217)"},{"Id":"435423340","IsPullRequest":false,"CreatedAt":"2019-04-20T17:52:00","Actor":"hamzahamidi","Number":"11219","RawContent":null,"Title":"Dotnet run works only as root","State":"open","Body":"## Steps to reproduce\r\nI was following the official dotnet tutorial https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/create . When I try to run the application ( dotnet run) I get this error:\r\n```\r\nprojects/dotnet-core-starter/dotnet-core-starter.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n\r\n```\r\nsudo dotnet run works as expected!\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n```\r\nprojects/dotnet-core-starter/dotnet-core-starter.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.203\r\n Commit:    e5bab63eca\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.203/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.4\r\n  Commit:  f95848e524\r\n\r\n.NET Core SDKs installed:\r\n  2.2.203 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11219","RelatedDescription":"Open issue \"Dotnet run works only as root\" (#11219)"},{"Id":"435391479","IsPullRequest":true,"CreatedAt":"2019-04-20T12:49:04","Actor":"dotnet-maestro[bot]","Number":"11218","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190419.1\r\n- **Date Produced**: 4/19/2019 12:47 PM\r\n- **Commit**: c01de3fd223affb9f861260f41ebcc12e473a9ad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19219.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11218)"},{"Id":"435390837","IsPullRequest":true,"CreatedAt":"2019-04-20T12:42:16","Actor":"dotnet-maestro[bot]","Number":"11216","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.7\r\n- **Date Produced**: 4/19/2019 12:41 AM\r\n- **Commit**: 5e7ce5b394f3477bb0a485a4b761b7742e95be37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11216","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11216)"},{"Id":"435327403","IsPullRequest":true,"CreatedAt":"2019-04-20T02:31:30","Actor":"wli3","Number":"11215","RawContent":null,"Title":"Merge release/3.0.1xx to master 0419","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11215","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master 0419\" (#11215)"},{"Id":"435261169","IsPullRequest":false,"CreatedAt":"2019-04-19T21:49:25","Actor":"spboyer","Number":"11211","RawContent":null,"Title":"Cross platform issue : dotnet pack fails to add item when parent folder name equals file name","State":"closed","Body":"## Steps to reproduce\r\nAdd a folder called `xpath.js` containing a file called `xpath.js` \r\n\r\ni.e - `npm_modules\\xpath.js\\xpath.js`\r\n\r\nrun `dotnet pack -c Release`\r\n\r\n** csproj file snippet **\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <None Include=\"node_modules\\*\\**\" CopyToOutputDirectory=\"PreserveNewest\" CopyToPublishDirectory=\"PreserveNewest\"/>\r\n    <None Include=\"scripts\\**\\*\" CopyToOutputDirectory=\"PreserveNewest\" CopyToPublishDirectory=\"PreserveNewest\" />\r\n  </ItemGroup>\r\n```\r\n\r\n## Expected  behavior\r\n\r\nSuccessfully created package '/.../mypackage.nupkg'.\r\n\r\n## Actual behavior\r\n\r\n```console\r\n   \r\ndotnet pack --configuration Release    \r\n\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/usr/local/share/dotnet/sdk/2.2.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(202,5): \r\nerror NU5118: File '/.../netcoreapp2.2/publish/node_modules/xpath.js/xpath.js'\r\nis not added because the package already contains file 'tools/netcoreapp2.2/any/node_modules/xpath.js' \r\n[/Users/shayneboyer/github/spboyer/dotnet-azure/azure.csproj]\r\n\r\n```\r\n\r\n\r\n## Environment data\r\n\r\n```console\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    51868761f2\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.100/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11211","RelatedDescription":"Closed issue \"Cross platform issue : dotnet pack fails to add item when parent folder name equals file name\" (#11211)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"436223894","IsPullRequest":false,"CreatedAt":"2019-04-23T14:36:14","Actor":"ststeiger","Number":"1166","RawContent":null,"Title":"Referenced NetStandard-project does not get local-copied in .NET Core application ","State":"open","Body":"I've created a project called \r\n`System.ServiceProcess`\r\nas netstandard 2.0 library. \r\n\r\nI've referenced project `System.ServiceProcess` in project `LdapService`. \r\nThe two projects are in the same solution. \r\n\r\nLdapService references project `System.ServiceProcess`. \r\nLdapService also references project `IniParser`. \r\nIniParser is a netstandard 2.0 library. \r\n\r\nIniParser gets localcopied to LdapService. \r\nSystem.ServiceProcess does not. \r\n\r\nI added <RestoreProjectStyle>PackageReference</RestoreProjectStyle> which once helped in a .NET Framework 4.6.1 project. \r\nBut that doesn't work .\r\nI tried setting localCopy to true, also no effect. \r\n\r\nIt looks like it's wrongly identifying System.ServiceProcess as a SharedFramework-DLL, and thus ignores local-copying. \r\n\r\nBUG.\r\n\r\nVersion Information:\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.5\r\nVisualStudio.15.Release/15.9.5+28307.280\r\nNetCore 2.1\r\n```\r\n\r\nIf I rename the project to System.ServiceProcess**1**, then it works as expected.","Url":"https://github.com/dotnet/standard/issues/1166","RelatedDescription":"Open issue \"Referenced NetStandard-project does not get local-copied in .NET Core application \" (#1166)"},{"Id":"436150323","IsPullRequest":true,"CreatedAt":"2019-04-23T12:23:39","Actor":"dotnet-maestro[bot]","Number":"1165","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19222.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1165","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1165)"},{"Id":"435956019","IsPullRequest":true,"CreatedAt":"2019-04-23T01:29:21","Actor":"mmitche","Number":"1164","RawContent":null,"Title":"Update branding on master","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1164","RelatedDescription":"Closed or merged PR \"Update branding on master\" (#1164)"},{"Id":"435955846","IsPullRequest":true,"CreatedAt":"2019-04-23T01:29:14","Actor":"mmitche","Number":"1163","RawContent":null,"Title":"Merge from master","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1163","RelatedDescription":"Closed or merged PR \"Merge from master\" (#1163)"},{"Id":"435913700","IsPullRequest":false,"CreatedAt":"2019-04-22T22:26:07","Actor":"CalvinFengDatacom","Number":"1162","RawContent":null,"Title":"Multiple assemblies with equivalent identity have been imported","State":"closed","Body":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks","Url":"https://github.com/dotnet/standard/issues/1162","RelatedDescription":"Closed issue \"Multiple assemblies with equivalent identity have been imported\" (#1162)"},{"Id":"435451508","IsPullRequest":true,"CreatedAt":"2019-04-21T18:54:16","Actor":"terrajobst","Number":"1160","RawContent":null,"Title":"Add EnumeratorCancellationAttribute","State":"closed","Body":"This aligns .NET Standard with the [PR made in CoreFx](https://github.com/dotnet/corefx/pull/37064). For more details, see the [API discussion](https://github.com/dotnet/corefx/issues/37012).\r\n\r\nThis is a last minute firedrill for preview 5 (which will be used for demoing functionality during Build), which means I'll have to merge this by tomorrow morning. If there are any concerns, please let me know ASAP or we'll simply back it out after preview 5.","Url":"https://github.com/dotnet/standard/pull/1160","RelatedDescription":"Closed or merged PR \"Add EnumeratorCancellationAttribute\" (#1160)"},{"Id":"435454723","IsPullRequest":true,"CreatedAt":"2019-04-20T23:47:10","Actor":"terrajobst","Number":"1161","RawContent":null,"Title":"Add tool to automate generation of .NET Core baseline","State":"closed","Body":"This adds a batch file that generates the API surface of .NET Core that matters to .NET Standard. This script updates the contents of `src\\platforms\\netcoreapp`, stripped down to just the contents that matter for .NET Standard. It's meant to be manually diff'ed against the .NET Standard reference assemblies to propose API changes.\r\n\r\nWe should move the `GenNetStandard` tool to our engineering tools (Arcade) so that they are available to people that don't have access to the internal share. However, since the process is currently manual and only done by me, that seems acceptable. At least this this makes it reproducable by other people, which is better to what we have today.\r\n\r\nThe script assume that the caller has an enlistment for dotnet/corefx in a folder that is parallel to dotnet/standard and that is named corefx. In practice, this should hold for most people that work on this.\r\n\r\n/cc @stephentoub @wtgodbe ","Url":"https://github.com/dotnet/standard/pull/1161","RelatedDescription":"Closed or merged PR \"Add tool to automate generation of .NET Core baseline\" (#1161)"},{"Id":"434735356","IsPullRequest":true,"CreatedAt":"2019-04-20T12:05:46","Actor":"dotnet-maestro[bot]","Number":"1157","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.1\r\n- **Date Produced**: 4/18/2019 8:10 AM\r\n- **Commit**: 46718d98c0fd03690a6a8c83da692a4a85a17902\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19218.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.4\r\n- **Date Produced**: 4/18/2019 10:50 PM\r\n- **Commit**: 1d4c87ff798d7de521128e6c3d890055c2401e80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19218.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.7\r\n- **Date Produced**: 4/19/2019 12:41 AM\r\n- **Commit**: 5e7ce5b394f3477bb0a485a4b761b7742e95be37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19218.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1157","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1157)"},{"Id":"434706475","IsPullRequest":false,"CreatedAt":"2019-04-19T23:24:03","Actor":"IKende","Number":"1156","RawContent":null,"Title":"NETStandard 2.0 GZipStream write date error in .Net Framework 4.6.1","State":"closed","Body":"code\r\n``` csharp\r\n public class GzipTest\r\n    {\r\n        public static byte[] Create()\r\n        {\r\n            using (System.IO.MemoryStream memory = new MemoryStream())\r\n            {\r\n                using (GZipStream gstream = new GZipStream(memory, CompressionMode.Compress))\r\n                {\r\n                    for (int i = 0; i < 100; i++)\r\n                    {\r\n                        byte[] data = System.Text.Encoding.UTF8.GetBytes(\"abcdefghkoksdsafsdfasdfksajfskdjfskdfjslfasdfsdfsdfalsdfsd\");\r\n                        gstream.Write(data, 0, data.Length);\r\n                    }\r\n                    gstream.Flush();\r\n                    return memory.ToArray();\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\nusing .Net Framework 4.61 invoke this function ，debugging output information:\r\n```\r\nmemory.Length\r\n10\r\nmemory.ToArray()\r\n{byte[10]}\r\n    [0]: 31\r\n    [1]: 139\r\n    [2]: 8\r\n    [3]: 0\r\n    [4]: 0\r\n    [5]: 0\r\n    [6]: 0\r\n    [7]: 0\r\n    [8]: 4\r\n    [9]: 0\r\n```","Url":"https://github.com/dotnet/standard/issues/1156","RelatedDescription":"Closed issue \"NETStandard 2.0 GZipStream write date error in .Net Framework 4.6.1\" (#1156)"},{"Id":"434958748","IsPullRequest":true,"CreatedAt":"2019-04-19T19:46:08","Actor":"terrajobst","Number":"1158","RawContent":null,"Title":"Add Overrides","State":"closed","Body":"This doesn't change API surface but simply records the overrides made in .NET Core to minimize the diff.","Url":"https://github.com/dotnet/standard/pull/1158","RelatedDescription":"Closed or merged PR \"Add Overrides\" (#1158)"},{"Id":"432819882","IsPullRequest":false,"CreatedAt":"2019-04-19T19:00:10","Actor":"nimisha84","Number":"1142","RawContent":null,"Title":"Migration issues for a project moved from 4.7.2 Framework to .Net Standard 2.0","State":"closed","Body":"Hi Team,\r\nhttps://github.com/intuit/QuickBooks-V3-DotNET-SDK/\r\nWe have this class lib project which was on 4.6.1 and needed migration to .Net Standard so that it can support .Net Core too.\r\nSo, we migrated it to 4.7.2 first and then changed all .csproj files to support both 4.7.2 and Net Standard 2.0.\r\nWe are facing a really weird issue here. We have about 16 projects in this solution and using the new .csproj with targetframeworks 4.7.2 and Net Standard2.0, I see that release and debug dlls are generated for majority of projects in the .Net Standard but for some reason for about 4 of these projects, the target version of these dlls is always 4.7.2.  I have tried to compare the .csproj across all projects which build successfully to generate .Net Standard dlls vs those which do not generate. There isn't any diff at all. \r\n**Intuit.Ipp.Core for example builds successfully to generate .Net Standard dlls but Intuit.Ipp.Exception, Intuit.Ipp.Retry, Intuit.Ipp.Utility, Intuit.Ipp.OAuth2PlatformClient always build to generate 4.7.2 dlls.**\r\n\r\n**Another issue is that even though there are no circular ref, the project build order is not honored and you will see a lot of xcopy failures.**\r\n\r\nPlease help.!\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1142","RelatedDescription":"Closed issue \"Migration issues for a project moved from 4.7.2 Framework to .Net Standard 2.0\" (#1142)"},{"Id":"434539992","IsPullRequest":true,"CreatedAt":"2019-04-19T17:24:44","Actor":"terrajobst","Number":"1152","RawContent":null,"Title":"Implement IEquatable on Memory<T>","State":"closed","Body":"Based [on feedback](https://github.com/dotnet/standard/pull/909#discussion_r226390377) from @marek-safar.\r\n\r\nAlso see:\r\n* https://github.com/dotnet/corefx/issues/32905\r\n* https://github.com/dotnet/coreclr/pull/23586","Url":"https://github.com/dotnet/standard/pull/1152","RelatedDescription":"Closed or merged PR \"Implement IEquatable on Memory<T>\" (#1152)"},{"Id":"434545210","IsPullRequest":true,"CreatedAt":"2019-04-19T17:24:31","Actor":"terrajobst","Number":"1154","RawContent":null,"Title":"Fix Range.GetOffsetAndLength()","State":"closed","Body":"We ended up [agreeing](https://github.com/dotnet/corefx/issues/35508) that it's best to use tuples in cases like this.\r\n\r\n***Note**: This isn't a breaking change in .NET Standard, as `Range` hasn't shipped yet.*","Url":"https://github.com/dotnet/standard/pull/1154","RelatedDescription":"Closed or merged PR \"Fix Range.GetOffsetAndLength()\" (#1154)"},{"Id":"434544916","IsPullRequest":true,"CreatedAt":"2019-04-19T17:24:17","Actor":"terrajobst","Number":"1153","RawContent":null,"Title":"Respond to change in .NET Core to simplify Index and Range","State":"closed","Body":"We had recent [design change](https://github.com/dotnet/corefx/issues/35972) that simplifies `Index` and `Range`: instead of having to provide indexers that take `Index` and `Range`, the compiler [can lower](https://github.com/dotnet/csharplang/blob/master/proposals/index-range-changes.md) `Index` automatically and allows indexing via `Range` to be expressed via a method called `Slice`. Both make the feature more useful for interfaces where adding members isn't easily possible.\r\n\r\n***Note**: This isn't a breaking change in .NET Standard, as `Index` and `Range` haven't shipped yet.*","Url":"https://github.com/dotnet/standard/pull/1153","RelatedDescription":"Closed or merged PR \"Respond to change in .NET Core to simplify Index and Range\" (#1153)"},{"Id":"433533107","IsPullRequest":false,"CreatedAt":"2019-04-19T01:28:32","Actor":"rashadrivera","Number":"1147","RawContent":null,"Title":"SUGGESTION: Please Make AsnReader And AnsWriter Public","State":"closed","Body":"All,\r\n\r\nI have a real need for the internl classes that are being used in .NET Core 2.x.  I need a Asn reader and writer and I've recently discovered the [AsnReader and AsnWriter](https://github.com/dotnet/corefx/tree/master/src/Common/src/System/Security/Cryptography/Asn1Reader) as internal classes.  **Can these classes become public within .NET Standard?**  My products are built upon .NET Standard exclusively and not .NET Core or .NET.\r\n\r\nIn my case, I need them to create certificate revocation lists (CRL) and translate online certificate status protocol (OCSP) requests and responses.  I've used BouncyCastle as part of my solution, but I feel it is a poor implementation because of its cryptic design and the fact that I **must** give it unadulterated access to my private keys (which is a serious FIPS security concern).  \r\n\r\nMy goal is to use out-of-process signing like Azure.  But in order to do that, I need a solution that allows me to generate Asn data without third party tools like BouncyCastle.  ","Url":"https://github.com/dotnet/standard/issues/1147","RelatedDescription":"Closed issue \"SUGGESTION: Please Make AsnReader And AnsWriter Public\" (#1147)"},{"Id":"434963712","IsPullRequest":true,"CreatedAt":"2019-04-18T22:03:07","Actor":"terrajobst","Number":"1159","RawContent":null,"Title":"Remove finalizers","State":"closed","Body":"My understanding from earlier discussions with @jkotas and @marek-safar was that we should treat finalizers as an implementation detail of the platform that implements .NET Standard. Thus, I've changed my diffing to generally exclude all finalizers. This PR updates the reference assembly to match it.\r\n\r\n@jkotas / @marek-safar: I assume you're OK with that?","Url":"https://github.com/dotnet/standard/pull/1159","RelatedDescription":"Closed or merged PR \"Remove finalizers\" (#1159)"},{"Id":"434538136","IsPullRequest":true,"CreatedAt":"2019-04-18T01:38:21","Actor":"terrajobst","Number":"1151","RawContent":null,"Title":"Reorder members","State":"closed","Body":"***No API change***\r\n\r\nThis doesn't change the API surface but only reorders some members to make diffing between .NET Core and .NET Standard easier. For some reason, when we created .NET Standard, the members weren't consistently sorted. Since I don't trust myself, I've diffed the produced binary against the build produced by master to ensure no API surface changes were introduced.","Url":"https://github.com/dotnet/standard/pull/1151","RelatedDescription":"Closed or merged PR \"Reorder members\" (#1151)"},{"Id":"434245360","IsPullRequest":true,"CreatedAt":"2019-04-17T12:23:55","Actor":"dotnet-maestro[bot]","Number":"1150","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190417.1\r\n- **Date Produced**: 4/17/2019 7:32 AM\r\n- **Commit**: 4e21d52dabbb9f5705a90f097acb1465a0354c0d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19217.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1150","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1150)"},{"Id":"434067891","IsPullRequest":false,"CreatedAt":"2019-04-17T02:50:12","Actor":"yyjdelete","Number":"1149","RawContent":null,"Title":"Transitive dependency(PackageReference/ProjectReference)not working when app and libs has different targetFramework","State":"open","Body":"Also report as dotnet/sdk#3103, dotnet/core#2571.\r\n\r\nReference transitive not working when app and lib has different targetFramework, and the lib use an transitive dependency from special targetFramework of an multi-targetFramework PackageReference/ProjectReference\r\n\r\nThat mainly affect reference any libraries which target single `netstandard2.0` and reference other multi-targetFramework libraries , as it give no warn/error at build time.\r\n\r\n### Step:\r\n\r\nTested with dotnet-sdk : 3.0.100-preview3-010431, 2.1.504 and some other version\r\n\r\nRun ConsoleApp5 in https://github.com/yyjdelete/test_dotnet_indirect_dependency\r\nAnd see an FileNotFoundException for `System.Data.SqlClient, Version=4.5.0.0`(Ignore the MissingMethodException, as it's expected https://github.com/dotnet/standard/issues/1052#issuecomment-457399181). The same if replace `ClassLibrary1` and `ClassLibrary2` with packed `.nupkg`\r\n\r\nProject struct:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)->use `System.Data.SqlClient` directly or exported as public api of `ClassLibrary2`\r\n---|--ClassLibrary2(netstandard2.0;net472)\r\n------|--System.Data.SqlClient(when netstandard2.0)\r\n```\r\n\r\n### Expected:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)\r\n---|--System.Data.SqlClient(net472)\r\n---|--ClassLibrary2(net472)\r\n```\r\n1. The `System.Data.SqlClient` should be include in the output bins of `ConsoleApp5`, if used by `ClassLibrary1(netstandard2.0)`.\r\nOr at least give an warning, to make people know which Reference must be added explicitly. It's almost impossibe to find all of them by hand in an project with deep reference transitive(can also be something in nupkg).\r\n\r\n2. VisualStudio should show the same result of project struct as the output does, and `System.Data.SqlClient` should be include again with `ClassLibrary1(netstandard2.0)` if it's removed with `ClassLibrary2(net472)`\r\nI already know it's reasonable to reference `ClassLibrary2` with `net472`(runtime) instead of `netstandard2.0`, so ignore the `MissingMethodException`.\r\n\r\n### Actual:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)\r\n---|--ClassLibrary2(net472)\r\n\r\n***System.Data.SqlClient is missing\r\n```\r\n1. The `System.Data.SqlClient` is missing from the output, even it's used by `ClassLibrary1(netstandard2.0)`, and get an `FileNotFoundException` when execute.\r\n2. VisualStudio show that ConsoleApp5(net472) use ClassLibrary2(net472), while the output use ClassLibrary2(netstandard2.0).\r\n![image](https://user-images.githubusercontent.com/1819074/55792414-24a72f80-5af3-11e9-9a58-e7bd08696b90.png)","Url":"https://github.com/dotnet/standard/issues/1149","RelatedDescription":"Open issue \"Transitive dependency(PackageReference/ProjectReference)not working when app and libs has different targetFramework\" (#1149)"},{"Id":"433742428","IsPullRequest":true,"CreatedAt":"2019-04-16T12:14:06","Actor":"dotnet-maestro[bot]","Number":"1148","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190415.12\r\n- **Date Produced**: 4/16/2019 12:12 AM\r\n- **Commit**: 517bf671ea342965d007aa48f5bfd4926e58d582\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19215.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1148","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1148)"},{"Id":"433244267","IsPullRequest":true,"CreatedAt":"2019-04-15T12:13:52","Actor":"dotnet-maestro[bot]","Number":"1146","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190414.2\r\n- **Date Produced**: 4/14/2019 4:07 PM\r\n- **Commit**: bcf1186cb0db792906fd319ae49bdbc41f44f8ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19214.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1146","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1146)"},{"Id":"432966330","IsPullRequest":true,"CreatedAt":"2019-04-14T12:13:32","Actor":"dotnet-maestro[bot]","Number":"1145","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190413.2\r\n- **Date Produced**: 4/13/2019 9:02 PM\r\n- **Commit**: 10655eec2ab92accc1487d077979935127f16b4e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19213.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1145","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1145)"},{"Id":"432889036","IsPullRequest":false,"CreatedAt":"2019-04-13T19:21:08","Actor":"JamesNK","Number":"1144","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders to netstandard","State":"open","Body":"https://github.com/dotnet/corefx/blob/4fa6319fb590b046ba4c962088b960a31749f245/src/System.Net.Http/src/System/Net/Http/HttpResponseMessage.cs#L119-L130\r\n\r\nDiscussion: https://github.com/dotnet/corefx/issues/34912#issuecomment-482777355","Url":"https://github.com/dotnet/standard/issues/1144","RelatedDescription":"Open issue \"Add HttpResponseMessage.TrailingHeaders to netstandard\" (#1144)"},{"Id":"432840145","IsPullRequest":true,"CreatedAt":"2019-04-13T12:08:31","Actor":"dotnet-maestro[bot]","Number":"1143","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190412.2\r\n- **Date Produced**: 4/12/2019 4:37 PM\r\n- **Commit**: 9d0fd805448082c8d55e2434607b481bca70a146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19212.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1143","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1143)"},{"Id":"432775994","IsPullRequest":false,"CreatedAt":"2019-04-12T23:24:57","Actor":"danny-may","Number":"1141","RawContent":null,"Title":"Linq extensions for IAsyncEnumerable","State":"closed","Body":"With `IAsyncEnumerable<T>` being added to .net standard 2,1, I feel it would make sense to also add all the Linq extensions on `IEnumerable<T>` to `IAsyncEnumerable<T>`, be that in a new extension class (e.g. `AsyncEnumerable.cs`) or as additional methods in the existing `Enumerable.cs` class.\r\n\r\n```csharp\r\npublic static class AsyncEnumerable\r\n{\r\n    ....\r\n    public static IAsyncEnumerable<T> Where<T>(this IAsyncEnumerable<T>, Func<T, bool> predicate) { ... }\r\n    public static IAsyncEnumerable<T> Where<T>(this IAsyncEnumerable<T>, Func<T, Task<bool>> predicate) { ... }\r\n     // Maybe this Func<T, ValueTask<bool>> overload?\r\n    public static IAsyncEnumerable<T> Where<T>(this IAsyncEnumerable<T>, Func<T, ValueTask<bool>> predicate) { ... }\r\n    ....\r\n    public static Task<T[]> ToArrayAsync<T>(this IAsyncEnumerable<T>) { ... }\r\n    ....\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>) { ... }\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>, Func<T, bool> predicate) { ... }\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>, Func<T, Task<bool>> predicate) { ... }\r\n     // Maybe this Func<T, ValueTask<bool>> overload?\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>, Func<T, ValueTask<bool>> predicate) { ... }\r\n    ....\r\n}\r\n```\r\n\r\n```csharp\r\nvar allItems = MyAsyncEnumerableMethod();\r\nvar evens = await allItems.Where(item => item.id % 2 == 0).ToArrayAsync();\r\nvar firstOdd = await allItems.FirstOrDefaultAsync(item => item.id % 2 == 1);\r\n```\r\n\r\nI understand this would need to be implemented into the .net core and .net framework releases too, I figured it would make sense to raise it here first as its an API proposal?","Url":"https://github.com/dotnet/standard/issues/1141","RelatedDescription":"Closed issue \"Linq extensions for IAsyncEnumerable\" (#1141)"},{"Id":"432616368","IsPullRequest":false,"CreatedAt":"2019-04-12T15:17:58","Actor":"hinteadan","Number":"1140","RawContent":null,"Title":"string.Join unexpected behavior when calling Join(String separator, params object[] values);","State":"closed","Body":"When calling the `String Join(String separator, params object[] values)` signature and pass a **null** value as the first parameter, followed by a type other than string, then any number and type of other parameters, the method **returns an empty string**.\r\n\r\nCode samples:\r\n`string.Join(\",\", null, 0) //returns \"\"`\r\n`string.Join(\",\", null, 0, null, null, \"\", null, 0, \"\", null, new Exception(), DateTime.Now) //returns \"\"`","Url":"https://github.com/dotnet/standard/issues/1140","RelatedDescription":"Closed issue \"string.Join unexpected behavior when calling Join(String separator, params object[] values);\" (#1140)"},{"Id":"432532476","IsPullRequest":true,"CreatedAt":"2019-04-12T12:13:53","Actor":"dotnet-maestro[bot]","Number":"1139","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190411.2\r\n- **Date Produced**: 4/11/2019 10:43 PM\r\n- **Commit**: e7b5230799a6db9121d90cf548d5a2313bd682dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19211.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1139","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1139)"},{"Id":"431985706","IsPullRequest":true,"CreatedAt":"2019-04-11T12:13:49","Actor":"dotnet-maestro[bot]","Number":"1137","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190410.7\r\n- **Date Produced**: 4/11/2019 3:17 AM\r\n- **Commit**: 4f645e4a5385eb96cad3f72f5ded239761c7d075\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19210.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1137","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1137)"},{"Id":"431464888","IsPullRequest":true,"CreatedAt":"2019-04-10T12:13:44","Actor":"dotnet-maestro[bot]","Number":"1136","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/9/2019 12:54 PM\r\n- **Commit**: 63b76f3f952f821d0a7996427a9f3534f1c25ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1136","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1136)"},{"Id":"430928858","IsPullRequest":true,"CreatedAt":"2019-04-09T12:13:46","Actor":"dotnet-maestro[bot]","Number":"1135","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.1\r\n- **Date Produced**: 4/9/2019 8:35 AM\r\n- **Commit**: 9d7e665ecf2606094677524ecd5af0fc39c7bb49\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1135)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"436069654","IsPullRequest":false,"CreatedAt":"2019-04-24T05:09:58","Actor":"chucklu","Number":"37111","RawContent":null,"Title":"The default encoding is not correct","State":"closed","Body":"\r\nI try to get the default encoding in win10 by powershell 6.1 with the following command\r\n```powershell\r\n[System.Text.Encoding]::Default.EncodingName\r\n```\r\nWhat I got is Unicode (UTF-8), however the actually default encoding should be Chinese Simplified (GB2312).\r\n\r\nYou can check more detail info in https://github.com/PowerShell/PowerShell/issues/9450\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37111","RelatedDescription":"Closed issue \"The default encoding is not correct\" (#37111)"},{"Id":"436486075","IsPullRequest":true,"CreatedAt":"2019-04-24T03:59:54","Actor":"jkotas","Number":"37131","RawContent":null,"Title":"Fix CPINFOEXW definition","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/37131","RelatedDescription":"Open PR \"Fix CPINFOEXW definition\" (#37131)"},{"Id":"436164667","IsPullRequest":true,"CreatedAt":"2019-04-24T03:02:18","Actor":"ViktorHofer","Number":"37116","RawContent":null,"Title":"Fix test asset publishing when retrying","State":"closed","Body":"Fixes official builds that are retried, i.e.: https://dev.azure.com/dnceng/internal/_build/results?buildId=165244\r\n\r\nThe capability to overwrite is exposed here: https://github.com/dotnet/arcade/blob/334225fbbdb0aa87f793dab0db6b7a78d01baa3d/src/Microsoft.DotNet.Build.Tasks.Feed/src/PushToBlobFeed.cs#L28","Url":"https://github.com/dotnet/corefx/pull/37116","RelatedDescription":"Closed or merged PR \"Fix test asset publishing when retrying\" (#37116)"},{"Id":"436317879","IsPullRequest":true,"CreatedAt":"2019-04-24T01:11:12","Actor":"cston","Number":"37123","RawContent":null,"Title":"Port remaining members of Microsoft.VisualBasic.Strings","State":"closed","Body":"Port remaining members of `Microsoft.VisualBasic.Strings` from https://github.com/Microsoft/referencesource/tree/master/Microsoft.VisualBasic/runtime/msvbalib.","Url":"https://github.com/dotnet/corefx/pull/37123","RelatedDescription":"Closed or merged PR \"Port remaining members of Microsoft.VisualBasic.Strings\" (#37123)"},{"Id":"436444156","IsPullRequest":true,"CreatedAt":"2019-04-24T00:25:06","Actor":"wfurt","Number":"37130","RawContent":null,"Title":"fix ReadAtLeastAsync","State":"open","Body":"we are hitting occasional assert while running HTTP2 tests agains real server (microsoft.com)\r\nThe issue is intermittent and hard to predictably reproduce. In one of the runs I collected following debug log:\r\n\r\n >  EnsureIncomingBytesAsync:  minBytes = 4072 **bytesRead = 4096**  bytesNeeded=4065 span=7 **Available=4089** 1363727842\r\n\r\nThe ReadAtLeastAsync() function read more bytes than Available space in buffer. And than Commit() is rightfully unhappy. \r\n\r\nIt seems like the problem lives in ReadAtLeastAsync().\r\nIf we read least than needed bytes we will loop again but we would read into same buffer. That can corrupt data but also it can make totalBytesRead go beyond buffer size as we do not calculate remaining space anyhow. \r\n\r\nAs this issue is very difficult to reproduce I could not verify actual fix. However since the ReadAtLeastAsync() is clearly wrong I'll assume it is unless we get another evidence. \r\n\r\nfixes #37015 \r\nfixes #37008\r\n ","Url":"https://github.com/dotnet/corefx/pull/37130","RelatedDescription":"Open PR \"fix ReadAtLeastAsync\" (#37130)"},{"Id":"436408369","IsPullRequest":true,"CreatedAt":"2019-04-23T21:58:56","Actor":"joperezr","Number":"37129","RawContent":null,"Title":"Adding System.Text.Json OOB package","State":"open","Body":"fixes #37126\r\n\r\ncc: @terrajobst @joshfree @ericstj @ahsonkhan \r\n\r\nRemoving the System.Text.Json source package and pushing a binary package instead.\r\n\r\nFYI: @KrzysztofCwalina @maririos ","Url":"https://github.com/dotnet/corefx/pull/37129","RelatedDescription":"Open PR \"Adding System.Text.Json OOB package\" (#37129)"},{"Id":"436388779","IsPullRequest":true,"CreatedAt":"2019-04-23T21:03:46","Actor":"Dotnet-GitSync-Bot","Number":"37128","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corefx/pull/37128","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#37128)"},{"Id":"436267973","IsPullRequest":false,"CreatedAt":"2019-04-23T20:58:34","Actor":"Cynthia-Jiang","Number":"37120","RawContent":null,"Title":"ASP.NET core 2.2.4 impersonation not working with SocketsHttpHandler","State":"closed","Body":"environment:\r\nDC: windows server 2012R2\r\nserver1: windows server 2016, ASP.NET core 2.2.4 web API on IIS with windows authentication enabled\r\nserver2: windows server 2012R2, ASP.NET core 2.2 web api on IIS with windows authentication enabled\r\nclient: any browsers\r\nclient -> server1 -> server2. \r\nthe ASP.NET core app in server1 will impersonate the authenticated user then call server 2 web api.\r\ni have configured app pools on both servers to use service account, and have configured SPN accordingly, added delegation setting for the service account of server1.\r\n\r\nsample code of how i do impersonate:\r\n\r\n```\r\nvar windowsIdentity = (WindowsIdentity)this.HttpContext.User.Identity;\r\n\r\nawait (WindowsIdentity.RunImpersonated(windowsIdentity.AccessToken, async () =>\r\n{\r\n\t\r\n    using (HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Get, \"http://winsvr12r2-1.jiangya1.lab:4000/api/values\"))\r\n    {\r\n\t\t\r\n        string user_name = WindowsIdentity.GetCurrent().Name;\r\n        \r\n\t\ttry\r\n        {\r\n\t\t\t\r\n            var response = await _client.SendAsync(requestMessage);\r\n            \r\n\t\t\tvar responseString = await response.Content.ReadAsStringAsync();\r\n            \r\n\t\t\tresult = ($\"Called API as: {WindowsIdentity.GetCurrent().Name}.\\n\\n\" +\r\n                               $\"{responseString}\\n\");\r\n        \r\n\t\t}\r\n        \r\n\t\tcatch (Exception ex)\r\n        {\r\n        \r\n\t\t\tresult = ex.ToString();\r\n        }\r\n    }\r\n}));\r\nreturn result;\r\n```\r\n\r\n\r\nexpected scenario:  the impersonation process would succeed,and server2 gets requests from the initial credential.\r\nreal scenario: server1 would throw following exception:\r\n`System.Net.Http.HttpRequestException: This is usually a temporary error during hostname resolution and means that the local server did not receive a response from an authoritative server ---> System.Net.Sockets.SocketException: This is usually a temporary error during hostname resolution and means that the local server did not receive a response from an authoritative server\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at WebApplication2.Controllers.PassThroughController.<>c__DisplayClass5_0.<<Get>b__0>d.MoveNext() in C:\\Users\\jiangya\\source\\repos\\WebApplication2\\WebApplication2\\Controllers\\PassThroughController.cs:line 92\r\n`\r\n\r\n**further troubleshooting:**\r\nwhile doing debugging, i found that if i turn off SocketsHttpHandler following [this](https://docs.microsoft.com/en-us/dotnet/api/system.net.http.socketshttphandler?view=netcore-2.2)\r\nand use HTTPClientHandler, the issue will get resolved. which seems indicate that ASP.NET core impersonation is not working with SocketsHttpHandler.\r\ni also attached full callstack here:\r\n[working-callstack.txt](https://github.com/dotnet/corefx/files/3108447/working-callstack.txt)\r\n[non-working-callstack.txt](https://github.com/dotnet/corefx/files/3108451/non-working-callstack.txt)\r\n\r\n**I understand the new socket handler is designed to eliminate platform dependencies, however can you suggest how to make it work with impersonation?**\r\n\r\nnon-working callstack with SocketsHttpHandler:\r\n`\r\n0:030> !\\\\**********\\shared\\Microsoft.NETCore.App\\2.2.4\\sos.clrstack\r\nOS Thread Id: 0xe00 (30)\r\n        Child SP               IP Call Site\r\n000000d9e19fbf78 00007ffca5a60160   Interop+Winsock.GetAddrInfoExW(System.String, System.String, Int32, IntPtr, System.Net.Sockets.AddressInfoEx ByRef, System.Net.Sockets.AddressInfoEx* ByRef, IntPtr, System.Threading.NativeOverlapped ByRef, LPLOOKUPSERVICE_COMPLETION_ROUTINE, IntPtr ByRef)\r\n000000d9e19fbf78 00007ffc343c65a4   Interop+Winsock.GetAddrInfoExW(System.String, System.String, Int32, IntPtr, System.Net.Sockets.AddressInfoEx ByRef, System.Net.Sockets.AddressInfoEx* ByRef, IntPtr, System.Threading.NativeOverlapped ByRef, LPLOOKUPSERVICE_COMPLETION_ROUTINE, IntPtr ByRef)\r\n000000d9e19fbf20 00007ffc343c65a4 DomainBoundILStubClass.IL_STUB_PInvoke(System.String, System.String, Int32, IntPtr, System.Net.Sockets.AddressInfoEx ByRef, System.Net.Sockets.AddressInfoEx* ByRef, IntPtr, System.Threading.NativeOverlapped ByRef, LPLOOKUPSERVICE_COMPLETION_ROUTINE, IntPtr ByRef)\r\n000000d9e19fc040 00007ffc8aaafba8 System.Net.NameResolutionPal.GetAddrInfoAsync(System.Net.DnsResolveAsyncResult)  \r\n000000d9e19fc110 00007ffc8aaac27b System.Net.Dns.HostResolutionBeginHelper(System.String, Boolean, Boolean, System.AsyncCallback, System.Object)  \r\n000000d9e19fc190 00007ffc8aaacea8 System.Net.Dns.BeginGetHostAddresses(System.String, System.AsyncCallback, System.Object)  \r\n000000d9e19fc1e0 00007ffc8ab1bcc2 System.Net.Sockets.MultipleConnectAsync.StartConnectAsync(System.Net.Sockets.SocketAsyncEventArgs, System.Net.DnsEndPoint)  \r\n000000d9e19fc250 00007ffc8ab08f23 System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType, System.Net.Sockets.SocketAsyncEventArgs)  \r\n000000d9e19fc2b0 00007ffc343c5d98 System.Net.Http.ConnectHelper+d__2.MoveNext()  \r\n000000d9e19fc3a0 00007ffc343c5759 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start \r\n000000d9e19fc410 00007ffc8a95726e System.Net.Http.ConnectHelper.ConnectAsync(System.String, Int32, System.Threading.CancellationToken)\r\n000000d9e19fc4d0 00007ffc8a95afae System.Net.Http.HttpConnectionPool+d__44.MoveNext()  \r\n000000d9e19fc6e0 00007ffc343c51e9 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start \r\n000000d9e19fc750 00007ffc8a95950e System.Net.Http.HttpConnectionPool.CreateConnectionAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\r\n000000d9e19fc850 00007ffc343c4d29 System.Net.Http.HttpConnectionPool.GetConnectionAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)  \r\n000000d9e19fc9f0 00007ffc8a95a662 System.Net.Http.HttpConnectionPool+d__39.MoveNext()  \r\n000000d9e19fcaf0 00007ffc343c3ff9 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start \r\n000000d9e19fcb60 00007ffc8a959225 System.Net.Http.HttpConnectionPool.SendWithRetryAsync(System.Net.Http.HttpRequestMessage, Boolean, System.Threading.CancellationToken)\r\n000000d9e19fcc00 00007ffc8a9593ee System.Net.Http.HttpConnectionPool.SendWithProxyAuthAsync(System.Net.Http.HttpRequestMessage, Boolean, System.Threading.CancellationToken)  \r\n000000d9e19fcc60 00007ffc8a9457a2 System.Net.Http.AuthenticationHelper+d__16.MoveNext()  \r\n000000d9e19fcd60 00007ffc343c3cf9 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start \r\n000000d9e19fcdd0 00007ffc8a9443fb System.Net.Http.AuthenticationHelper.SendWithAuthAsync(System.Net.Http.HttpRequestMessage, System.Uri, System.Net.ICredentials, Boolean, Boolean, Boolean, System.Net.Http.HttpConnectionPool, System.Threading.CancellationToken)\r\n000000d9e19fce90 00007ffc8a95946c System.Net.Http.HttpConnectionPool.SendAsync(System.Net.Http.HttpRequestMessage, Boolean, System.Threading.CancellationToken)  \r\n000000d9e19fcef0 00007ffc8a95c79c System.Net.Http.HttpConnectionPoolManager.SendAsyncCore(System.Net.Http.HttpRequestMessage, System.Uri, Boolean, Boolean, System.Threading.CancellationToken)  \r\n000000d9e19fcfd0 00007ffc8a95c93a System.Net.Http.HttpConnectionPoolManager.SendAsync(System.Net.Http.HttpRequestMessage, Boolean, System.Threading.CancellationToken)  \r\n000000d9e19fd030 00007ffc8a958cea System.Net.Http.HttpAuthenticatedConnectionHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)  \r\n000000d9e19fd060 00007ffc8a95f388 System.Net.Http.RedirectHandler+d__4.MoveNext()  \r\n000000d9e19fd100 00007ffc343c2729 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start \r\n000000d9e19fd170 00007ffc8a95efba System.Net.Http.RedirectHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\r\n000000d9e19fd1f0 00007ffc8a95ead2 System.Net.Http.SocketsHttpHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)  \r\n000000d9e19fd240 00007ffc8a93a259 System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)  \r\n000000d9e19fd290 00007ffc8a93ce42 System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)  \r\n000000d9e19fd2e0 00007ffc8a936954 System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpCompletionOption, System.Threading.CancellationToken)  \r\n000000d9e19fd350 00007ffc343bf2fd Error: Failed to load C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.2.4\\coreclr.dll\r\nWebApplication2.Controllers.PassThroughController+c__DisplayClass5_0+b__0>d.MoveNext()\r\n000000d9e19fd3c0 00007ffc343bf109 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start \r\n000000d9e19fd430 00007ffc343bf098 WebApplication2.Controllers.PassThroughController+c__DisplayClass5_0.b__0()\r\n000000d9e19fd4a0 00007ffc8ba09446 System.Security.Principal.WindowsIdentity+c__DisplayClass60_0`1 .b__0()\r\n000000d9e19fd4d0 00007ffc8ba09517 System.Security.Principal.WindowsIdentity+c__DisplayClass64_0.b__0(System.Object)  \r\n000000d9e19fd510 00007ffc8d3c2019 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  \r\n000000d9e19fd590 00007ffc8ba07993 System.Security.Principal.WindowsIdentity.RunImpersonatedInternal(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle, System.Action)  \r\n000000d9e19fd5e0 00007ffc8ba077df System.Security.Principal.WindowsIdentity.RunImpersonated \r\n000000d9e19fd630 00007ffc343be842 WebApplication2.Controllers.PassThroughController+d__5.MoveNext()\r\n000000d9e19fd690 00007ffc343be5d9 System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start \r\n000000d9e19fd700 00007ffc343be558 WebApplication2.Controllers.PassThroughController.Get()\r\n\r\n`\r\n\r\nworking callstack with HttpClientHandler:\r\n`\r\n0:014> k\r\nChild-SP          RetAddr           Call Site\r\n00 000000b3`80a7e140 00007ffc`a5a5ec39 \r\nws2_32!WinsockThreadpool_CreateWorkContext+0x9b   \r\n01 000000b3`80a7e180 00007ffc`a5a59684 ws2_32!WinsockThreadpool_SubmitWork+0x45   \r\n02 000000b3`80a7e1d0 00007ffc`a5a58009 ws2_32!NSQUERY::LookupServiceNextAsync+0x154   \r\n03 000000b3`80a7e250 00007ffc`a5a56b67 ws2_32!WSALookupServiceNextAsyncW+0x169   \r\n04 000000b3`80a7e2b0 00007ffc`a5a57070 ws2_32!NSSUBJOB::LookupAsyncAndHandleResultsQDNS4F+0xb7   \r\n05 000000b3`80a7e340 00007ffc`a5a5717e ws2_32!NSSUBJOB::TrySubmitQDNS4F+0x6c   \r\n06 000000b3`80a7e390 00007ffc`a5a56814 ws2_32!NSSUBJOB::TrySubmit+0x8e   \r\n07 000000b3`80a7e3f0 00007ffc`a5a55f06 ws2_32!NSJOB::SubmitChild+0x44   \r\n08 000000b3`80a7e440 00007ffc`a5a56329 ws2_32!NSJOB::ForEachChild+0xd6   \r\n09 (Inline Function) --------`-------- ws2_32!NSJOB::ForEachChild+0x12   \r\n0a 000000b3`80a7e490 00007ffc`a5a57201 ws2_32!NSJOB::TrySubmit+0x89   \r\n0b 000000b3`80a7e4f0 00007ffc`a5a56814 ws2_32!NSSUBJOB::TrySubmit+0x111   \r\n0c 000000b3`80a7e550 00007ffc`a5a55f06 ws2_32!NSJOB::SubmitChild+0x44   \r\n0d 000000b3`80a7e5a0 00007ffc`a5a56329 ws2_32!NSJOB::ForEachChild+0xd6   \r\n0e (Inline Function) --------`-------- ws2_32!NSJOB::ForEachChild+0x12   \r\n0f 000000b3`80a7e5f0 00007ffc`a5a55913 ws2_32!NSJOB::TrySubmit+0x89   \r\n10 000000b3`80a7e650 00007ffc`a5a6145c ws2_32!NSMASTERJOB::TrySubmit+0x53   \r\n11 000000b3`80a7e690 00007ffc`99109ac1 ws2_32!GetAddrInfoExW+0x12fc   \r\n12 000000b3`80a7e8d0 00007ffc`991099d1 webio!WapDnsResolveGeneric+0xd9   \r\n13 000000b3`80a7e9c0 00007ffc`99108e3e webio!WapStartDnsIoContext+0x31   \r\n14 000000b3`80a7e9f0 00007ffc`99108a6e webio!WaStartDnsQuery+0x21e   \r\n15 000000b3`80a7eab0 00007ffc`99108fa4 webio!WapTcpStartDnsQuery+0x38e   \r\n16 000000b3`80a7eb40 00007ffc`991090b7 webio!WaTcpConnectRequest+0x54   \r\n17 000000b3`80a7eb90 00007ffc`99102f44 webio!WapHttpConnect+0x107   \r\n18 000000b3`80a7ec20 00007ffc`99102da8 webio!WaQueueHttpRequest+0x144   \r\n19 (Inline Function) --------`-------- webio!WapStartQueueRequest+0x1c   \r\n1a (Inline Function) --------`-------- webio!WapGetConnectionCompletionRoutine+0x5c   \r\n1b 000000b3`80a7ecc0 00007ffc`99102c88 webio!WapStartGetConnection+0xf8   \r\n1c 000000b3`80a7ed10 00007ffc`99102b16 webio!WapStartGetEndpoints+0x44   \r\n1d 000000b3`80a7ed40 00007ffc`99105008 webio!WapAsynchronousSendHttpRequest+0x266   \r\n1e (Inline Function) --------`-------- webio!WapSendHttpRequest+0x2f   \r\n1f 000000b3`80a7ee20 00007ffc`9f001c65 webio!WebSendHttpRequest+0x38   \r\n20 (Inline Function) --------`-------- winhttp!WEBIO_SENDER::SendRequest+0x21d   \r\n21 000000b3`80a7ee80 00007ffc`9f007528 winhttp!WEBIO_REQUEST::SendRequest+0x415   \r\n22 000000b3`80a7ef70 00007ffc`9f007b60 winhttp!HTTP_USER_REQUEST::_SysSendRequest+0x1028   \r\n23 000000b3`80a7f170 00007ffc`9f00783b winhttp!HTTP_USER_REQUEST::_SendRequestWithDrainComplete+0x2d0   \r\n24 000000b3`80a7f200 00007ffc`9f0023fb winhttp!HTTP_USER_REQUEST::_SendRequestWithProxyInitialized+0x6b   \r\n25 000000b3`80a7f230 00007ffc`9efe3a57 winhttp!HTTP_USER_REQUEST::OnProxyResolvedOnSend+0xbf   \r\n26 000000b3`80a7f280 00007ffc`9efe3710 winhttp!UserRequestProxyCompletion::OnProxyResolved+0x27   \r\n27 000000b3`80a7f2b0 00007ffc`9efe351e winhttp!WxProxyManager::WxProxyFailoverCompletionRoutine+0x90   \r\n28 000000b3`80a7f2e0 00007ffc`a60dec59 winhttp!RefCountWorkItemThread+0x1e   \r\n29 000000b3`80a7f310 00007ffc`a60c328a ntdll!RtlpTpWorkCallback+0x129   \r\n2a 000000b3`80a7f3f0 00007ffc`a4e98364 ntdll!TppWorkerThread+0x4aa   \r\n2b 000000b3`80a7f7f0 00007ffc`a60f7091 KERNEL32!BaseThreadInitThunk+0x14   \r\n2c 000000b3`80a7f820 00000000`00000000 ntdll!RtlUserThreadStart+0x21   \r\n\r\n\r\n`\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37120","RelatedDescription":"Closed issue \"ASP.NET core 2.2.4 impersonation not working with SocketsHttpHandler\" (#37120)"},{"Id":"436273907","IsPullRequest":true,"CreatedAt":"2019-04-23T20:46:51","Actor":"carlossanlop","Number":"37121","RawContent":null,"Title":"Directory.Move behaves differently on Unix vs. Windows","State":"closed","Body":"Fixes #33486\r\n\r\n@stephentoub @JeremyKuhne @danmosemsft Do we want to take this breaking change for the sake of consistency across operating systems?","Url":"https://github.com/dotnet/corefx/pull/37121","RelatedDescription":"Closed or merged PR \"Directory.Move behaves differently on Unix vs. Windows\" (#37121)"},{"Id":"436378609","IsPullRequest":false,"CreatedAt":"2019-04-23T20:36:36","Actor":"BrijeshKrSingh","Number":"37127","RawContent":null,"Title":"Issue with Microsoft.Window.Compatibility ","State":"open","Body":"Hi Team,\r\n\r\nI am using core2.1 and having issue with Ldap search. I am calling BeginSendRequest function and it is working for all options except NoPartialResultSupport. It is throwing error as \"Operation is not supported on this platform.\" Is it known issue?","Url":"https://github.com/dotnet/corefx/issues/37127","RelatedDescription":"Open issue \"Issue with Microsoft.Window.Compatibility \" (#37127)"},{"Id":"436351074","IsPullRequest":false,"CreatedAt":"2019-04-23T19:25:48","Actor":"joshfree","Number":"37126","RawContent":null,"Title":"Microsoft.Bcl.Json.Sources (change to binary distribution)","State":"open","Body":"Tracking issue for replacing the Microsoft.Bcl.Json.Sources package with a proper netstandard20 binary package for preview 6\r\n\r\n/cc @joperezr @terrajobst @rynowak @KrzysztofCwalina @Petermarcu ","Url":"https://github.com/dotnet/corefx/issues/37126","RelatedDescription":"Open issue \"Microsoft.Bcl.Json.Sources (change to binary distribution)\" (#37126)"},{"Id":"435955330","IsPullRequest":true,"CreatedAt":"2019-04-23T19:08:49","Actor":"dotnet-maestro[bot]","Number":"37107","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190408.5\r\n- **Date Produced**: 4/9/2019 2:33 AM\r\n- **Commit**: 8ef5ada20b5343b0cb9e7fd577341426dab76cd8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19208.5\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190421.1\r\n- **Date Produced**: 4/21/2019 7:07 PM\r\n- **Commit**: 6fbe91e4cf707a180b445efe8d15b36d80292497\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19221.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190422.1\r\n- **Date Produced**: 4/23/2019 1:58 AM\r\n- **Commit**: 5eee83eaa61eff38f470dc690218bebf73f46e23\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19222.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37107","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/standard\" (#37107)"},{"Id":"436326500","IsPullRequest":true,"CreatedAt":"2019-04-23T18:24:59","Actor":"Dotnet-GitSync-Bot","Number":"37125","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Anipik","Url":"https://github.com/dotnet/corefx/pull/37125","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#37125)"},{"Id":"436319677","IsPullRequest":true,"CreatedAt":"2019-04-23T18:06:21","Actor":"steveharter","Number":"37124","RawContent":null,"Title":"Fix JSON deserializer property name escaping and address naming feedback","State":"open","Body":"Address naming feedback from https://github.com/dotnet/corefx/pull/36940.\r\n\r\nAdd tests for property name escaping and properly handle; once the writer supports pre-escaped property names this code will be changed to remove the `#if false`\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37124","RelatedDescription":"Open PR \"Fix JSON deserializer property name escaping and address naming feedback\" (#37124)"},{"Id":"436301922","IsPullRequest":false,"CreatedAt":"2019-04-23T17:21:46","Actor":"benaadams","Number":"37122","RawContent":null,"Title":"API Socket.SetRawSocketOption","State":"open","Body":"Currently the PAL layer blocks unknown options; eventually they may become adopted as enums, however prior to that it would be useful to be able to pass them through in an unvalidated manner.\r\n\r\n```csharp\r\npublic partial class Socket\r\n{\r\n    unsafe int SetRawSocketOption(int optionLevel, int optionName, byte* optionValue, int optionLength)\r\n}\r\n```\r\n\r\nThis has come up in https://github.com/dotnet/corefx/issues/16375 and also when trying to use TCP_CORK on Linux https://github.com/aspnet/AspNetCore/pull/9603\r\n\r\n/cc @stephentoub @geoffkizer ","Url":"https://github.com/dotnet/corefx/issues/37122","RelatedDescription":"Open issue \"API Socket.SetRawSocketOption\" (#37122)"},{"Id":"436171989","IsPullRequest":true,"CreatedAt":"2019-04-23T15:36:39","Actor":"dotnet-maestro[bot]","Number":"37117","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190422.74\r\n- **Date Produced**: 4/23/2019 12:40 AM\r\n- **Commit**: c0cae0a041549edd759366eb3e732f8348b466b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview6-27622-74\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview6-27622-74\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview6-27622-74\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37117","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#37117)"},{"Id":"436255291","IsPullRequest":false,"CreatedAt":"2019-04-23T15:34:54","Actor":"layomia","Number":"37119","RawContent":null,"Title":"Prevent the value out param of TryGetX methods of Utf8JsonReader and JsonDocument from containing an instantiated instance when we return false","State":"open","Body":"e.g., in https://github.com/layomia/corefx/blob/3a41aebc08a55f6346ad56f711ce198a0bde54c3/src/System.Text.Json/src/System/Text/Json/Document/JsonDocument.cs#L482-L485, if the input segment is succesfully parsed, but `segment.Length == bytesConsumed` is `false`, we'll return `false` and `out` a `DateTime` instance.\r\n\r\nThis also occurs in other places in the namespace.\r\n\r\nWe want to emit default(T) when `false` is returned, and should not emit a semantic value.","Url":"https://github.com/dotnet/corefx/issues/37119","RelatedDescription":"Open issue \"Prevent the value out param of TryGetX methods of Utf8JsonReader and JsonDocument from containing an instantiated instance when we return false\" (#37119)"},{"Id":"436242752","IsPullRequest":false,"CreatedAt":"2019-04-23T15:10:59","Actor":"tmds","Number":"37118","RawContent":null,"Title":"Add CancellationToken overloads to Socket.ConnectAsync and Socket.AcceptAsync","State":"open","Body":"CancellationTokens were added to SendAsync and ReceiveAsync in https://github.com/dotnet/corefx/pull/36516\r\n\r\nThis for adding overloads to ConnectAsync and AcceptAsync:\r\n```cs\r\npublic Task ConnectAsync(EndPoint, CancellationToken);\r\npublic Task ConnectAsync(IPAddress, int port, CancellationToken);\r\npublic Task ConnectAsync(IPAddress[], int port, CancellationToken);\r\npublic Task ConnectAsync(string host, int port, CancellationToken);\r\npublic Task<Socket> AcceptAsync(CancellationToken);\r\n```\r\n\r\nCC @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/37118","RelatedDescription":"Open issue \"Add CancellationToken overloads to Socket.ConnectAsync and Socket.AcceptAsync\" (#37118)"},{"Id":"436012298","IsPullRequest":true,"CreatedAt":"2019-04-23T14:42:25","Actor":"wfurt","Number":"37109","RawContent":null,"Title":"make invalidUri more invalid","State":"closed","Body":"This is small test improvement to GetAsync_InvalidUrl_ExpectedExceptionThrown()\r\nThis test was failing for me and after some investigation I found root cause -> my ISP.\r\n\r\nThis test generates URI from guid assuming that it would be invalid (instead of using known invalid name) \r\nHowever in my case ISP resolves names (and probably tries to serve ads for mistyped hosts)\r\n\r\n```\r\n        Output:\r\n          4/22/2019 10:13:39 PM connecting to http://e3e88f4d7635459a99c5eef499931512\r\n      System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandlerTest.GetAsync_InvalidUrl_ExpectedExceptionThrown [FAIL]\r\n\r\n\r\nfurt@Ubuntu16:~/github/wfurt-corefx-max/src/System.Net.Http/tests/FunctionalTests$ nslookup e3e88f4d7635459a99c5eef499931512.\r\nServer:\t\t10.211.55.1\r\nAddress:\t10.211.55.1#53\r\n\r\nNon-authoritative answer:\r\nName:\te3e88f4d7635459a99c5eef499931512\r\nAddress: 198.105.254.23\r\nName:\te3e88f4d7635459a99c5eef499931512\r\nAddress: 198.105.244.23\r\n\r\nand tcpdump:\r\n\r\n22:13:25.604873 ethertype IPv4 (0x0800), length 74: 10.211.55.17.48348 > 198.105.244.23.443: Flags [S], seq 4187127244, win 29200, options [mss 1460,sackOK,TS val 5584185 ecr 0,nop,wscale 7], length 0\r\n22:13:25.672991 ethertype IPv4 (0x0800), length 54: 198.105.244.23.443 > 10.211.55.17.48348: Flags [R.], seq 3970218873, ack 4187127245, win 8192, length 0\r\n\r\n```\r\nadding '_' makes invalidUri truly invalid and it fails as it should and test does pass. \r\n ","Url":"https://github.com/dotnet/corefx/pull/37109","RelatedDescription":"Closed or merged PR \"make invalidUri more invalid\" (#37109)"},{"Id":"436150153","IsPullRequest":true,"CreatedAt":"2019-04-23T12:48:24","Actor":"dotnet-maestro[bot]","Number":"37115","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19222.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19222.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.SourceRewriter** -> 1.0.0-beta.19222.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37115","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#37115)"},{"Id":"436107649","IsPullRequest":true,"CreatedAt":"2019-04-23T11:47:03","Actor":"stephentoub","Number":"37113","RawContent":null,"Title":"Revert \"Squash fix for process name.\"","State":"closed","Body":"Reverts dotnet/corefx#36913\r\n\r\nFixes regression https://github.com/dotnet/corefx/issues/37083#issuecomment-485679386\r\ncc: @tmds, @danmosemsft, @2E0PGS, @MarcoRossignoli","Url":"https://github.com/dotnet/corefx/pull/37113","RelatedDescription":"Closed or merged PR \"Revert \"Squash fix for process name.\"\" (#37113)"},{"Id":"436107922","IsPullRequest":false,"CreatedAt":"2019-04-23T10:13:34","Actor":"mikenorgate","Number":"37114","RawContent":null,"Title":"HttpClient slow parallized requests on linux","State":"open","Body":"I have found that making a bunch of parallel requests to different domains shows a large difference in response times between Windows and Linux. As you can see from the test results below when running on Linux the first run of requests consistently take over a second whereas on Windows the timing is much lower\r\n\r\nHere are the full details of the test I am running:\r\n\r\n### Environment:\r\n- Windows: Windows 10 Pro 1809. .Net core 2.2\r\n- Linux: Ubuntu 16.04.2 LTS. .Net core 2.2\r\n\r\n### Test Results:\r\n**Linux**\r\n```\r\nRun 1\r\nMax: 00:00:01.7611629\r\nMin: 00:00:01.0997532\r\nAvg: 00:00:01.3080000\r\nRun 2\r\nMax: 00:00:00.5364598\r\nMin: 00:00:00.1077417\r\nAvg: 00:00:00.1840000\r\n```\r\n```\r\nRun 1\r\nMax: 00:00:01.6518448\r\nMin: 00:00:01.0683208\r\nAvg: 00:00:01.2680000\r\nRun 2\r\nMax: 00:00:00.5278526\r\nMin: 00:00:00.1088224\r\nAvg: 00:00:00.1820000\r\n```\r\n```\r\nRun 1\r\nMax: 00:00:01.6706209\r\nMin: 00:00:01.0816414\r\nAvg: 00:00:01.2540000\r\nRun 2\r\nMax: 00:00:00.5382613\r\nMin: 00:00:00.1050479\r\nAvg: 00:00:00.1880000\r\n```\r\n\r\n\r\n**Windows:**\r\n```\r\nRun 1\r\nMax: 00:00:00.7903048\r\nMin: 00:00:00.2537194\r\nAvg: 00:00:00.4020000\r\nRun 2\r\nMax: 00:00:00.5417385\r\nMin: 00:00:00.1077183\r\nAvg: 00:00:00.1770000\r\n```\r\n```\r\nRun 1\r\nMax: 00:00:00.7238954\r\nMin: 00:00:00.2259200\r\nAvg: 00:00:00.3750000\r\nRun 2\r\nMax: 00:00:00.5352573\r\nMin: 00:00:00.1058812\r\nAvg: 00:00:00.2670000\r\n```\r\n```\r\nRun 1\r\nMax: 00:00:00.7443581\r\nMin: 00:00:00.2271784\r\nAvg: 00:00:00.3820000\r\nRun 2\r\nMax: 00:00:00.5431293\r\nMin: 00:00:00.1050701\r\nAvg: 00:00:00.2390000\r\n```\r\n\r\n### Test Code:\r\n```\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var client = new HttpClient();\r\n\r\n            var domains = new string[]\r\n            {\r\n                \"http://example.com\",\r\n                \"http://example.net\",\r\n                \"http://example.org\",\r\n                \"http://example.edu\",\r\n                \"http://iana.org\",\r\n                \"https://google.com\",\r\n            };\r\n\r\n            //Adding this in removes the spike in times\r\n            //foreach (var domain in domains)\r\n            //{\r\n            //    client.GetAsync(domain).Wait();\r\n            //}\r\n\r\n            Console.WriteLine(\"Run 1\");\r\n            RunTest(client, domains);\r\n            Console.WriteLine(\"Run 2\");\r\n            RunTest(client, domains);\r\n        }\r\n\r\n        private static void RunTest(HttpClient client, string[] domains)\r\n        {\r\n            var times = new TimeSpan[100];\r\n            var tasks = Enumerable.Range(0, times.Length)\r\n                .Select(async i =>\r\n                {\r\n                    var s = Stopwatch.StartNew();\r\n                    var response = await client.GetAsync(domains[i % domains.Length]);\r\n                    times[i] = s.Elapsed;\r\n                });\r\n\r\n            Task.WaitAll(tasks.ToArray());\r\n\r\n\r\n            Console.WriteLine(\"Max: \" + times.Max());\r\n            Console.WriteLine(\"Min: \" + times.Min());\r\n            Console.WriteLine(\"Avg: \" + TimeSpan.FromMilliseconds(times.Average(x=>x.TotalMilliseconds)));\r\n        }\r\n    }\r\n```","Url":"https://github.com/dotnet/corefx/issues/37114","RelatedDescription":"Open issue \"HttpClient slow parallized requests on linux\" (#37114)"},{"Id":"436021736","IsPullRequest":true,"CreatedAt":"2019-04-23T10:13:18","Actor":"Dotnet-GitSync-Bot","Number":"37110","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel","Url":"https://github.com/dotnet/corefx/pull/37110","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#37110)"},{"Id":"436075992","IsPullRequest":false,"CreatedAt":"2019-04-23T09:01:25","Actor":"dma198","Number":"37112","RawContent":null,"Title":"HttpClient does not works with localhost when proxy is enabled in system settings even with localhost in the list of proxy exclude addresses.","State":"open","Body":"**Environment:**\r\n- Windows 10. Has proxy configured. localhost in exclude list.\r\n- .Net Core 2.2.101\r\n-  Http server binds to all interfaces (*)\r\n-  Tested url(GET method) normally works in browser\r\n \r\nCall new HttpClient().GetAsync(\"http://localhost/api:5500\").Wait()\r\n\r\nGenerates exception: \"The server returned an invalid or unrecognized response\".\r\n\r\nAfter disabling proxy in system settings all is works.\r\n\r\nGuess HttpClient uses proxy regardless that it is localhost.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37112","RelatedDescription":"Open issue \"HttpClient does not works with localhost when proxy is enabled in system settings even with localhost in the list of proxy exclude addresses.\" (#37112)"},{"Id":"435929935","IsPullRequest":true,"CreatedAt":"2019-04-23T04:26:45","Actor":"davidfowl","Number":"37106","RawContent":null,"Title":"Fix flaky test","State":"closed","Body":"- Synchronize reads and writes using a tcs.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/37100","Url":"https://github.com/dotnet/corefx/pull/37106","RelatedDescription":"Closed or merged PR \"Fix flaky test\" (#37106)"},{"Id":"435958417","IsPullRequest":true,"CreatedAt":"2019-04-23T02:44:29","Actor":"dotnet-maestro[bot]","Number":"37108","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190422.75\r\n- **Date Produced**: 4/23/2019 1:31 AM\r\n- **Commit**: 4895a06c0dcc5d13f75dd55bdce83f7792d72ba4\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview5-27622-75\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37108","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37108)"},{"Id":"435922299","IsPullRequest":true,"CreatedAt":"2019-04-22T23:58:51","Actor":"dotnet-maestro[bot]","Number":"37105","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190422.73\r\n- **Date Produced**: 4/22/2019 10:40 PM\r\n- **Commit**: 8651946d4a4379ec0b2d189d64562686ca7bdb90\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview4-27622-73\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview4-27622-73\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview4-27622-73\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37105","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37105)"},{"Id":"435901136","IsPullRequest":true,"CreatedAt":"2019-04-22T21:36:15","Actor":"dotnet-maestro[bot]","Number":"37102","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190419.72\r\n- **Date Produced**: 4/19/2019 11:57 PM\r\n- **Commit**: cc29bc4004f9e15959e9cc8fbd8b740088672ca3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview4-27619-72\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview4-27619-72\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview4-27619-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37102","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37102)"},{"Id":"435895549","IsPullRequest":true,"CreatedAt":"2019-04-22T21:14:51","Actor":"maryamariyan","Number":"37101","RawContent":null,"Title":"Ports System.Data.OleDb","State":"open","Body":"- [x] Exposes and adds implementation for APIs in System.Data.OleDb\r\n- [x] Sets up the packaging for System.Data.OleDb (cc: @ericstj)\r\n- [x] Reimplements NativeOledbWrapper in C#, and adds PROPVARIANT struct (cc: @tannergooding )\r\n- [x] Sets up test project for netstandard and netfx with basic first draft tests\r\n- [x] Fix API Compat errors on src project (cc: @ericstj )\r\n- [x] delete any MDAC numbers or other commented bug numbers\r\n- [x] Remove dead strings from \r\n- [x] Use code formatter to cleanup file indentation\r\n- [x] Sort usings and remove blank lines\r\n\r\nTODO:\r\n\r\n- [ ] Removed unused code, remove unused usings\r\n- [ ] Increase code coverage and add more tests that show proper usage for the OleDB data types\r\n- [ ] (Future PR) We want this to be in the compat pack. \r\n- [ ] (Future PR) Extract common files between Odbc and SqlClient and OleDb","Url":"https://github.com/dotnet/corefx/pull/37101","RelatedDescription":"Open PR \"Ports System.Data.OleDb\" (#37101)"},{"Id":"435913861","IsPullRequest":false,"CreatedAt":"2019-04-12T02:20:57","Actor":"DSBRBrasil","Number":"37104","RawContent":null,"Title":".NET Core fails XML validation while .NET Framework succeeds","State":"open","Body":"Hi,\r\nWhy, I don't  validate a document using .net standard 2.0? I get that's message: Type not declared\r\nThat's my code:\r\n```\r\n var xDoc = XDocument.Parse(\"<consStatServ versao=\\\"4.00\\\" xmlns=\\\"http://www.portalfiscal.inf.br/nfe\\\"><tpAmb>2</tpAmb><cUF>29</cUF><xServ>STATUS</xServ></consStatServ>\");\r\n   var xss = new XmlSchemaSet();\r\n   xss.Add(\"http://www.portalfiscal.inf.br/nfe\", @\"D:\\Schemas\\consStatServ_v4.00.xsd\");\r\n   //Validar Xml\r\n   xDoc.Validate(xss, (sender, args) =>\r\n            {\r\n                throw new FalhaValidacaoSchemaException(args.Message);\r\n\r\n            });\r\n```","Url":"https://github.com/dotnet/corefx/issues/37104","RelatedDescription":"Open issue \".NET Core fails XML validation while .NET Framework succeeds\" (#37104)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"436500472","IsPullRequest":false,"CreatedAt":"2019-04-24T05:15:04","Actor":"kameko","Number":"35233","RawContent":null,"Title":"Implicit class-local object field for lock statement","State":"open","Body":"**Version Used**: C# 7\r\n\r\nI use the `lock` statement a fair bit, and I find it very redundant that for every single time I have used it, across the span of years, I have, in all cases, had to write exactly one read-only object field in every class I use it with, and then reference that object as the object to lock on, only inside the class it was defined. I've never needed more than one object, I've never needed to pass the object outside of the class. Why is it that the lock statement can't simply take the form of\r\n```cs\r\nlock\r\n{\r\n    // ...\r\n}\r\n```\r\nand just create a private internal object field in that class? For multiple statements, they would just refer to that same object. The old syntax would still be there for the edge cases of requiring a handle on the object, but for every case of the `lock` statement I've ever seen, it hasn't been needed in those cases. I don't see this case being any different from an auto-property versus a fully-written property with an explicitly-written backing field.\r\n\r\nSorry if this has already been suggested, but I couldn't find a suggestion already made for it. I would have done this years ago but I figured it was such an obvious idea that it was already suggested and just shot down. It's a complaint I see from new C# users all the time.","Url":"https://github.com/dotnet/roslyn/issues/35233","RelatedDescription":"Open issue \"Implicit class-local object field for lock statement\" (#35233)"},{"Id":"436469916","IsPullRequest":false,"CreatedAt":"2019-04-24T02:38:29","Actor":"walterlv","Number":"35232","RawContent":null,"Title":"Method which returns nested Awaitable do not warn developers to write multiple awaits.","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019\r\n\r\n**Steps to Reproduce**:\r\n\r\nAssume that we have a method that returns nested awaitables:\r\n\r\n```csharp\r\nTask<Task> FooAsync()\r\n{\r\n    throw new NotImplementedException();\r\n}\r\n```\r\n\r\nIf developers forget to await it, C# language will warn the developers to add an `await` keyboard:\r\n\r\n```csharp\r\nFooAsync();\r\n```\r\n\r\nBut if we add one `await`, the C# language will not warn the developers to add another required `await` keyword:\r\n\r\n```csharp\r\nawait FooAsync();\r\n```\r\n\r\nThe correct usage is:\r\n\r\n```csharp\r\nawait await FooAsync();\r\n```\r\n\r\nI think that C# language should add this warning because we sometimes cannot find out this incorrect usage ourselves especially in UI applications:\r\n\r\n```csharp\r\nawait await Dispatcher.InvokeAsync(async ()=>\r\n{\r\n    // Ignored codes.\r\n});\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/35232","RelatedDescription":"Open issue \"Method which returns nested Awaitable do not warn developers to write multiple awaits.\" (#35232)"},{"Id":"436439091","IsPullRequest":true,"CreatedAt":"2019-04-24T02:30:04","Actor":"dotnet-bot","Number":"35230","RawContent":null,"Title":"Merge dev16.1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35230","RelatedDescription":"Closed or merged PR \"Merge dev16.1-vs-deps to master-vs-deps\" (#35230)"},{"Id":"436439142","IsPullRequest":true,"CreatedAt":"2019-04-24T01:30:09","Actor":"dotnet-bot","Number":"35231","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35231","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35231)"},{"Id":"436439070","IsPullRequest":true,"CreatedAt":"2019-04-24T00:00:22","Actor":"dotnet-bot","Number":"35229","RawContent":null,"Title":"Merge dev16.0-vs-deps to dev16.1-preview2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into dev16.1-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-dev16.1-preview2-vs-deps\ngit reset --hard upstream/dev16.1-preview2-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-dev16.1-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35229","RelatedDescription":"Open PR \"Merge dev16.0-vs-deps to dev16.1-preview2-vs-deps\" (#35229)"},{"Id":"436439023","IsPullRequest":true,"CreatedAt":"2019-04-24T00:00:09","Actor":"dotnet-bot","Number":"35228","RawContent":null,"Title":"Merge dev16.0 to dev16.1-preview2","State":"open","Body":"\nThis is an automatically generated pull request from dev16.0 into dev16.1-preview2.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-to-dev16.1-preview2\ngit reset --hard upstream/dev16.1-preview2\ngit merge upstream/dev16.0\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-to-dev16.1-preview2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35228","RelatedDescription":"Open PR \"Merge dev16.0 to dev16.1-preview2\" (#35228)"},{"Id":"436381495","IsPullRequest":true,"CreatedAt":"2019-04-23T23:56:27","Actor":"YairHalberstadt","Number":"35220","RawContent":null,"Title":"Don't suggest static members in PropertySubPatternCompletionProvider","State":"closed","Body":"This should be a relatively simple fix. It should prevent things like this being suggested by intellisense:\r\n\r\n![image](https://user-images.githubusercontent.com/29174528/56614266-8fd32480-6610-11e9-9eba-f8f77da4705a.png)\r\n\r\nSee:  https://github.com/dotnet/roslyn/issues/33250\r\n","Url":"https://github.com/dotnet/roslyn/pull/35220","RelatedDescription":"Closed or merged PR \"Don't suggest static members in PropertySubPatternCompletionProvider\" (#35220)"},{"Id":"436434648","IsPullRequest":false,"CreatedAt":"2019-04-23T23:39:04","Actor":"agocke","Number":"35227","RawContent":null,"Title":"Support nullable variance in interface implementation","State":"open","Body":"Essentially, the work from  #23268 and #30958, but for interface implementation.","Url":"https://github.com/dotnet/roslyn/issues/35227","RelatedDescription":"Open issue \"Support nullable variance in interface implementation\" (#35227)"},{"Id":"436421031","IsPullRequest":false,"CreatedAt":"2019-04-23T22:43:59","Actor":"heejaechang","Number":"35226","RawContent":null,"Title":"null exception on Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer.HaveSameReturnTypes(Symbol member1, TypeMap typeMap1, Symbol member2, TypeMap typeMap2, TypeCompareKind typeComparison)","State":"open","Body":"sorry, I dont have anything more than the callstack.\r\n\r\n...\r\n\r\n\r\n04/23/2019 15:29:26 : Error : Microsoft.CodeAnalysis.Remote.CodeAnalysisService (8091) : Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer.HaveSameReturnTypes(Symbol member1, TypeMap typeMap1, Symbol member2, TypeMap typeMap2, TypeCompareKind typeComparison)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer.Equals(Symbol member1, Symbol member2)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers.FindOverriddenOrHiddenMembersInType(Symbol member, Boolean memberIsFromSomeCompilation, NamedTypeSymbol memberContainingType, NamedTypeSymbol currType, Symbol& currTypeBestMatch, Boolean& currTypeHasSameKindNonMatch, ArrayBuilder`1& hiddenBuilder)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers.MakeOverriddenOrHiddenMembersWorker(Symbol member)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol.get_OverriddenOrHiddenMembers()\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol.get_OverriddenProperty()\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol..ctor(SourceMemberContainerTypeSymbol containingType, Binder bodyBinder, BasePropertyDeclarationSyntax syntax, String name, Location location, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol.Create(SourceMemberContainerTypeSymbol containingType, Binder bodyBinder, PropertyDeclarationSyntax syntax, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.AddNonTypeMembers(MembersAndInitializersBuilder builder, SyntaxList`1 members, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.AddDeclaredNontypeMembers(MembersAndInitializersBuilder builder, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.BuildMembersAndInitializers(DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembersAndInitializers()\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MakeAllMembers(DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembersByNameSlow()\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembersByName()\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembers(String name)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol.Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers(String name)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindOverridesAsync>d__41.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractMethodOrPropertyOrEventSymbolReferenceFinder`1.<DetermineCascadedSymbolsAsync>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.OrdinaryMethodReferenceFinder.<DetermineCascadedSymbolsAsync>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<>c__DisplayClass21_2.<<DetermineAllSymbolsCoreAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<DetermineAllSymbolsCoreAsync>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<>c__DisplayClass21_2.<<DetermineAllSymbolsCoreAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<DetermineAllSymbolsCoreAsync>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<DetermineAllSymbolsAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__37.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<FindAsync>d__1`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Remote.CodeAnalysisService.<>c__DisplayClass3_0.<<GetReferenceCountAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Remote.ServiceHubServiceBase.<RunServiceAsync>d__36`1.MoveNext()\r\n04/23/2019 15:29:26 : Error : Microsoft.CodeAnalysis.Remote.CodeAnalysisService (8091) : From:    at Microsoft.CodeAnalysis.Remote.ServiceHubServiceBase.LogException(Exception ex)\r\n   at Microsoft.CodeAnalysis.Remote.ServiceHubServiceBase.<RunServiceAsync>d__36`1.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Remote.ServiceHubServiceBase.<RunServiceAsync>d__36`1.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.Remote.CodeAnalysisService.<>c__DisplayClass3_0.<<GetReferenceCountAsync>b__0>d.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<FindAsync>d__1`1.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__37.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__31.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<DetermineAllSymbolsAsync>d__20.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<DetermineAllSymbolsCoreAsync>d__21.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Threading.Tasks.Task.WhenAllPromise.Invoke(Task completedTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Threading.Tasks.UnwrapPromise`1.TrySetFromTask(Task task, Boolean lookForOce)\r\n   at System.Threading.Tasks.UnwrapPromise`1.InvokeCore(Task completingTask)\r\n   at System.Threading.Tasks.UnwrapPromise`1.Invoke(Task completingTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<>c__DisplayClass21_2.<<DetermineAllSymbolsCoreAsync>b__0>d.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Threading.Tasks.Task.WhenAllPromise.Invoke(Task completedTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Threading.Tasks.UnwrapPromise`1.TrySetFromTask(Task task, Boolean lookForOce)\r\n   at System.Threading.Tasks.UnwrapPromise`1.InvokeCore(Task completingTask)\r\n   at System.Threading.Tasks.UnwrapPromise`1.Invoke(Task completingTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<DetermineAllSymbolsCoreAsync>d__21.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Threading.Tasks.Task.WhenAllPromise.Invoke(Task completedTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Threading.Tasks.UnwrapPromise`1.TrySetFromTask(Task task, Boolean lookForOce)\r\n   at System.Threading.Tasks.UnwrapPromise`1.InvokeCore(Task completingTask)\r\n   at System.Threading.Tasks.UnwrapPromise`1.Invoke(Task completingTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<>c__DisplayClass21_2.<<DetermineAllSymbolsCoreAsync>b__0>d.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.OrdinaryMethodReferenceFinder.<DetermineCascadedSymbolsAsync>d__1.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractMethodOrPropertyOrEventSymbolReferenceFinder`1.<DetermineCascadedSymbolsAsync>d__1.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(TResult result)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindImplementedInterfaceMembersAsync>d__44.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(TResult result)\r\n   at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.<FindTypesFromCacheOrComputeAsync>d__9.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35226","RelatedDescription":"Open issue \"null exception on Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer.HaveSameReturnTypes(Symbol member1, TypeMap typeMap1, Symbol member2, TypeMap typeMap2, TypeCompareKind typeComparison)\" (#35226)"},{"Id":"436417015","IsPullRequest":true,"CreatedAt":"2019-04-23T22:28:26","Actor":"genlu","Number":"35225","RawContent":null,"Title":"Fix razor completion","State":"open","Body":"Fix #35172. This also include the single commit from #35194, to avoid future merge conflcit.\r\n\r\nFYI @heejaechang \r\n\r\n![RazorCompletion](https://user-images.githubusercontent.com/788783/56620471-dbb8a600-65dd-11e9-8acb-15bde8f0791a.gif)\r\n\r\n@jinujoseph @vatsalyaagrawal this needs QB approval.","Url":"https://github.com/dotnet/roslyn/pull/35225","RelatedDescription":"Open PR \"Fix razor completion\" (#35225)"},{"Id":"436413908","IsPullRequest":false,"CreatedAt":"2019-04-23T22:17:24","Actor":"genlu","Number":"35224","RawContent":null,"Title":"Code Cleanup having trouble with switch expression","State":"open","Body":"See the screenshot from Roslyn source below. The switch expression is flagged for IDE0055, but click \"Run code clean up\" in VS doesn't do anything.\r\n\r\n```\r\n1>C:\\github\\roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(82,9,82,13): warning IDE0055: Fix formatting\r\n1>C:\\github\\roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(83,13,83,17): warning IDE0055: Fix formatting\r\n1>C:\\github\\roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(84,13,84,17): warning IDE0055: Fix formatting\r\n1>C:\\github\\roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(85,13,85,17): warning IDE0055: Fix formatting\r\n1>C:\\github\\roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(86,9,86,13): warning IDE0055: Fix formatting\r\n1>C:\\github\\roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\MoveToNamespaceResult.cs(21,38,21,39): warning IDE0055: Fix formatting\r\n```\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/788783/56619457-6b5c5580-65da-11e9-9f40-526553c5863d.png)\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.Features/MoveToNamespace/AbstractMoveToNamespaceCodeAction.cs,49\r\n","Url":"https://github.com/dotnet/roslyn/issues/35224","RelatedDescription":"Open issue \"Code Cleanup having trouble with switch expression\" (#35224)"},{"Id":"436410157","IsPullRequest":false,"CreatedAt":"2019-04-23T22:04:48","Actor":"shubham26S","Number":"35223","RawContent":null,"Title":"Analyzer 'Microsoft.NetCore.Analyzers.Runtime.DisposableFieldsShouldBeDisposed' threw an exception of type 'System.NullReferenceException'","State":"open","Body":"**Version Used**: \r\n2.9.2\r\n**Steps to Reproduce**:\r\n\r\n0. Use .Net standard 2.0\r\n1. Inherit IDisposable interface\r\n2. Implement Dispose() and Dispose(Boolean) methods\r\n\r\n**Expected Behavior**:\r\nNo error\r\n**Actual Behavior**:\r\nError\tAD0001\tAnalyzer 'Microsoft.NetCore.Analyzers.Runtime.DisposableFieldsShouldBeDisposed' threw an exception of type 'System.NullReferenceException' with message 'Object reference not set to an instance of an object.'.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35223","RelatedDescription":"Open issue \"Analyzer 'Microsoft.NetCore.Analyzers.Runtime.DisposableFieldsShouldBeDisposed' threw an exception of type 'System.NullReferenceException'\" (#35223)"},{"Id":"436393357","IsPullRequest":false,"CreatedAt":"2019-04-23T21:52:25","Actor":"tmat","Number":"35221","RawContent":null,"Title":"Semicolon terminating a field declaration misplaced when typed","State":"closed","Body":"**Version Used**: \r\n![image](https://user-images.githubusercontent.com/41759/56616102-824a7a00-65d1-11e9-8958-5b124f763a06.png)\r\n\r\n**Steps to Reproduce**:\r\n\r\nPlace caret in the below code as indicated by `|` and type `;`.\r\n\r\n```C#\r\nusing System;\r\nclass Program\r\n{\r\n    private const int Max = 1000|\r\n\r\n    [Obsolete]\r\n    public string Property { get; set; }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n```C#\r\nusing System;\r\nclass Program\r\n{\r\n    private const int Max = 1000;\r\n\r\n    [Obsolete]\r\n    public string Property { get; set; }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\nThe semicolon is written to the buffer after the `[Obsolete]` attribute.\r\n\r\n```C#\r\nusing System;\r\nclass Program\r\n{\r\n    private const int Max = 1000\r\n\r\n    [Obsolete];\r\n    public string Property { get; set; }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35221","RelatedDescription":"Closed issue \"Semicolon terminating a field declaration misplaced when typed\" (#35221)"},{"Id":"436341788","IsPullRequest":true,"CreatedAt":"2019-04-23T21:46:40","Actor":"CyrusNajmabadi","Number":"35215","RawContent":null,"Title":"A couple of tweaks around features that add parameter null-checks.","State":"closed","Body":"Fixes: https://github.com/dotnet/roslyn/issues/33963\r\nFixes: https://github.com/dotnet/roslyn/issues/24237\r\n\r\n1. Unify the code used between 'generate constructor' and 'add parameter null check'.\r\n2. Add parameter null check should use `x is null` when on C#7 and above.  It's the most simple and idiomatic way to check for `null` now.\r\n3. Generate constructor should not add null-checks for nullable-struct parameters.  The fact that they're nullable indicates that null is ok.  If we add the null check, then the signature says 'null is ok' but we immediately throw.  The right thing there if hte user doesn't want null is to instead just not allow a nullable struct, forcing the caller to check first.\r\n","Url":"https://github.com/dotnet/roslyn/pull/35215","RelatedDescription":"Closed or merged PR \"A couple of tweaks around features that add parameter null-checks.\" (#35215)"},{"Id":"436398314","IsPullRequest":false,"CreatedAt":"2019-04-23T21:42:54","Actor":"333fred","Number":"35222","RawContent":null,"Title":"Completion is incorrect for lambda parameters","State":"closed","Body":"```C#\r\nusing System;\r\n\r\nnamespace ConsoleApp2\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Test(prog => prog.[||]); // Invoke completion on prog.\r\n        }\r\n\r\n        static void Test(Action<Program> d)\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nInvoking completion here brings up the members of `Action<Program>`, not the members of `Program`, rendering completion completely useless. cc @ivanbasov.","Url":"https://github.com/dotnet/roslyn/issues/35222","RelatedDescription":"Closed issue \"Completion is incorrect for lambda parameters\" (#35222)"},{"Id":"436373193","IsPullRequest":true,"CreatedAt":"2019-04-23T20:23:13","Actor":"jasonmalinowski","Number":"35219","RawContent":null,"Title":"Ensure we refresh ruleset severities after a ruleset change","State":"open","Body":"If a ruleset file changed, we didn't always reapply the new values in the IDE. For legacy projects the IDE is taking the ruleset files and applying them to the compilation; for CPS projects that's being done when we call into the compiler to parse the command line string. We forgot to reparse the command line string, so CPS projects wouldn't refresh until some other command line string changed or the project was unloaded or reloaded.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/35164\r\n\r\n<details><summary>Ask Mode template</summary>\r\n\r\n### Customer scenario\r\n\r\nIf the customer changes a rulesetfile inside a CPS project, the changed severities won't be used in the IDE until some later point where we evict our cached values.\r\n\r\n### Bugs this fixes\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/35164\r\n\r\n### Workarounds, if any\r\n\r\nWorkaround would be to unload and reload the project.\r\n\r\n### Risk\r\n\r\nLow.\r\n\r\n### Performance impact\r\n\r\nLow, since this is an uncommon code path being touched.\r\n\r\n### Is this a regression from a previous update?\r\n\r\nYes, it was probably broken in 16.0 when we rewrote our project system integration.\r\n\r\n### Root cause analysis\r\n\r\nWe didn't have any unit tests for this particular issue. We did fix some bugs around this general area but it seems this snuck through when we fixed the other bugs.\r\n\r\nA unit test has been added.\r\n\r\n### How was the bug found?\r\n\r\nCustomer report.\r\n\r\n</details>","Url":"https://github.com/dotnet/roslyn/pull/35219","RelatedDescription":"Open PR \"Ensure we refresh ruleset severities after a ruleset change\" (#35219)"},{"Id":"436365915","IsPullRequest":true,"CreatedAt":"2019-04-23T20:05:03","Actor":"dibarbet","Number":"35218","RawContent":null,"Title":"Port toggle line comment telemetry to 16.1","State":"open","Body":"Port https://github.com/dotnet/roslyn/commit/a3ea63c2f0436c43ba47a829948e8c0efeb2a4bb to 16.1\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/35218","RelatedDescription":"Open PR \"Port toggle line comment telemetry to 16.1\" (#35218)"},{"Id":"436363665","IsPullRequest":true,"CreatedAt":"2019-04-23T19:59:26","Actor":"jaredpar","Number":"35217","RawContent":null,"Title":"Make bootstrap 32 bit in 32 bit CI","State":"open","Body":"This changes our bootstrap compiler to run as a 32 bit process in the 32\r\nbit CI runs. The intent of this runs is to validate we can function on\r\n32 bit systems and that should extend to the compiler as well.\r\n\r\nThis can help us identify the rare cases where we emit code that doesn't\r\nperform well on the 32 bit JIT, or just outright crashes.","Url":"https://github.com/dotnet/roslyn/pull/35217","RelatedDescription":"Open PR \"Make bootstrap 32 bit in 32 bit CI\" (#35217)"},{"Id":"436359312","IsPullRequest":false,"CreatedAt":"2019-04-23T19:48:04","Actor":"heejaechang","Number":"35216","RawContent":null,"Title":"preprocessor colorization is off","State":"open","Body":"repro.\r\n\r\nopen ContainedDocument.cs\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/56611162-00a11f00-65c6-11e9-814c-fc5a73ad03ea.png)\r\n\r\nlooks like preprocessor is not colorized correctly.","Url":"https://github.com/dotnet/roslyn/issues/35216","RelatedDescription":"Open issue \"preprocessor colorization is off\" (#35216)"},{"Id":"436307557","IsPullRequest":true,"CreatedAt":"2019-04-23T19:00:16","Actor":"dotnet-bot","Number":"35210","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35210","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35210)"},{"Id":"436313262","IsPullRequest":true,"CreatedAt":"2019-04-23T19:00:06","Actor":"dotnet-bot","Number":"35211","RawContent":null,"Title":"Merge dev16.1-preview2-vs-deps to dev16.1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview2-vs-deps into dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview2-vs-deps-to-dev16.1-vs-deps\ngit reset --hard upstream/dev16.1-vs-deps\ngit merge upstream/dev16.1-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview2-vs-deps-to-dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35211","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview2-vs-deps to dev16.1-vs-deps\" (#35211)"},{"Id":"436320239","IsPullRequest":true,"CreatedAt":"2019-04-23T18:07:45","Actor":"dibarbet","Number":"35214","RawContent":null,"Title":"Features/lsp support liveshare2","State":"open","Body":"This copies and creates liveshare LSP handlers so that they can be exported from roslyn instead of from liveshare.\r\n\r\nThe implementation of all the handlers is copied directly from liveshare.  For now, I'll be leaving that as-is and later will be going 1 by 1 to clean them all up once liveshare is working from roslyn.  Mainly would like feedback on the structure (handlers, location of classes, etc)\r\n\r\nWhere possible, I've moved the implementation into the features layer.  However, some have dependencies on the UI, so I've kept those in the VS language services layer until we can remove those dependencies.\r\n\r\nTODO - more tests\r\nTODO - get actual release build of MS.VS.LanguageServer.Protocol (so CI passes)","Url":"https://github.com/dotnet/roslyn/pull/35214","RelatedDescription":"Open PR \"Features/lsp support liveshare2\" (#35214)"},{"Id":"436317836","IsPullRequest":true,"CreatedAt":"2019-04-23T18:01:48","Actor":"RikkiGibson","Number":"35213","RawContent":null,"Title":"Only emit readonly attributes implicitly when feature enabled","State":"open","Body":"Resolves #35113","Url":"https://github.com/dotnet/roslyn/pull/35213","RelatedDescription":"Open PR \"Only emit readonly attributes implicitly when feature enabled\" (#35213)"},{"Id":"436313652","IsPullRequest":true,"CreatedAt":"2019-04-23T17:50:59","Actor":"ryzngard","Number":"35212","RawContent":null,"Title":"Focus first tabbable element in PMU dialog","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35212","RelatedDescription":"Open PR \"Focus first tabbable element in PMU dialog\" (#35212)"},{"Id":"436307416","IsPullRequest":true,"CreatedAt":"2019-04-23T17:49:05","Actor":"dotnet-bot","Number":"35209","RawContent":null,"Title":"Merge dev16.1-preview2-vs-deps to dev16.1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview2-vs-deps into dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview2-vs-deps-to-dev16.1-vs-deps\ngit reset --hard upstream/dev16.1-vs-deps\ngit merge upstream/dev16.1-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview2-vs-deps-to-dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35209","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview2-vs-deps to dev16.1-vs-deps\" (#35209)"},{"Id":"436293822","IsPullRequest":false,"CreatedAt":"2019-04-23T17:00:29","Actor":"vsfeedback","Number":"35208","RawContent":null,"Title":"Generate Constructor","State":"open","Body":"<p>When I use Ctrl+dot, and use the Generate Constructor option, it always creates a <strong>public</strong> constructor. I think this should create a <strong>protected</strong> constructor when the class is abstract.</p><p>public abstract class Example</p><p>{</p><p>     // Ctrl + dot here and select Generate constructor</p><p>}</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/531718/generate-constructor.html\nVSTS ticketId: 847234_\n_These are the original issue comments:_\n\nJono on 4/13/2019, 00:01 PM (9 days ago): <p>Oops. I meant to say use ctrl+dot on the <strong>class name</strong> and select the Generate Constructor option.</p>\n\nJane Wu [MSFT] on 4/15/2019, 01:26 AM (8 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>\nKendra Havens [MSFT] on 4/18/2019, 02:28 PM (4 days ago): <p>If the abstract class is not marked public the code fix will generate a protected constructor. <a target=\"_blank\"> https://github.com/dotnet/roslyn/issues/20595 </a></p><p>Just to clarify, you would like the constructor to be protected even when the abstract class is public?</p>\n\nJono on 4/22/2019, 09:57 PM (12 hours ago): <p>I believe that the constructors for all abstract classes should be protected by default, even if the class itself is public. This is because you can never create an instance of an abstract class. </p><p>So to answer <a rel=\"user\" href=\"https://developercommunity.visualstudio.com/users/44551/c431bd99-0155-451e-85eb-030dfb2f9783.html\" nodeid=\"44551\">@Kendra Havens [MSFT]</a>: Yes please :D</p><p><br></p>\n","Url":"https://github.com/dotnet/roslyn/issues/35208","RelatedDescription":"Open issue \"Generate Constructor\" (#35208)"},{"Id":"436149158","IsPullRequest":true,"CreatedAt":"2019-04-23T14:30:06","Actor":"dotnet-bot","Number":"35206","RawContent":null,"Title":"Merge dev16.1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35206","RelatedDescription":"Closed or merged PR \"Merge dev16.1-vs-deps to master-vs-deps\" (#35206)"},{"Id":"436149303","IsPullRequest":true,"CreatedAt":"2019-04-23T13:30:07","Actor":"dotnet-bot","Number":"35207","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35207","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35207)"},{"Id":"436082790","IsPullRequest":true,"CreatedAt":"2019-04-23T09:16:32","Actor":"slang25","Number":"35205","RawContent":null,"Title":"Update Async Streams proposal link","State":"open","Body":"There might be some more links to update, I'll check later and update those too in a separate PR.","Url":"https://github.com/dotnet/roslyn/pull/35205","RelatedDescription":"Open PR \"Update Async Streams proposal link\" (#35205)"},{"Id":"436054047","IsPullRequest":false,"CreatedAt":"2019-04-23T08:09:49","Actor":"davkean","Number":"35204","RawContent":null,"Title":"[Regression] Errors that reported during build become stale if reported before \"IntelliSense\" category","State":"open","Body":"I cannot repro this in 15.9, but cannot tell if that's because it doesn't repro or because its faster.\r\n\r\nI'm running into this a lot in the large solution I'm working in.\r\n\r\n**Version Used**: \r\nVersion 16.1.0 [28728.66.d16.1stg]\r\nVersion 16.1.0 Preview 2.0 [28817.7.d16.1]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Extract attached solution ([ClassLibrary1.zip](https://github.com/dotnet/roslyn/files/3106503/ClassLibrary1.zip))\r\n2. Delete .vs folder (!important)\r\n3. Open solution\r\n4. In ClassLibrary1\\Class1.cs remove the `IComparable` implementation from `Foo`\r\n5. Immediately build via F6 so that the \"Build\" errors show up before the \"IntelliSense\" error (!important)\r\n\r\n**Expected Behavior**:\r\nOnly a single error in IntelliSense & Build category\r\n\r\n```\r\nError\tCS1503\tArgument 1: cannot convert from 'ClassLibrary1.Foo' to 'System.IComparable'\tConsoleApp407\tC:\\Users\\davkean\\Source\\Repos\\ConsoleApp407\\ConsoleApp407\\Program.cs\t10\tActive\r\n```\r\n\r\nIf I switch to Build category:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1503\tArgument 1: cannot convert from 'ClassLibrary1.Foo' to 'System.IComparable'\tConsoleApp407\tC:\\Users\\davkean\\Source\\Repos\\ConsoleApp407\\ConsoleApp407\\Program.cs\t10\tN/A\r\n```\r\n\r\n**Actual Behavior**:\r\nTwo errors in IntelliSense & Build category\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1503\tArgument 1: cannot convert from 'ClassLibrary1.Foo' to 'System.IComparable'\tConsoleApp407\tC:\\Users\\davkean\\Source\\Repos\\ConsoleApp407\\ConsoleApp407\\Program.cs\t10\t\r\nError\tCS1503\tArgument 1: cannot convert from 'ClassLibrary1.Foo' to 'System.IComparable'\tConsoleApp407\tC:\\Users\\davkean\\Source\\Repos\\ConsoleApp407\\ConsoleApp407\\Program.cs\t10\tActive\r\n```\r\n\r\nIf I switch to Build category (notice that the Suppression column is different to Expected):\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1503\tArgument 1: cannot convert from 'ClassLibrary1.Foo' to 'System.IComparable'\tConsoleApp407\tC:\\Users\\davkean\\Source\\Repos\\ConsoleApp407\\ConsoleApp407\\Program.cs\t10\t\r\n```\r\n\r\nIf you re-add the `IComparable` implementation (without building), only the second error goes away and the other sticks around and becomes stale until the next build.\r\n\r\nIf you _wait_ until IntelliSense appears _and then_ build, only a single error appears.","Url":"https://github.com/dotnet/roslyn/issues/35204","RelatedDescription":"Open issue \"[Regression] Errors that reported during build become stale if reported before \"IntelliSense\" category\" (#35204)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"436448513","IsPullRequest":true,"CreatedAt":"2019-04-24T00:48:12","Actor":"Suchiman","Number":"7342","RawContent":null,"Title":"Port GC changes from coreclr - 3","State":"open","Body":"This port continues https://github.com/dotnet/corert/pull/7336\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/b2b4ea22fcf71ef61ff84aa9669da2419c7541a5):**\r\n- https://github.com/dotnet/coreclr/commit/41c47b8555d7d471547cfb641112cd31e37cb7ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c5bfdd98204d7cb265f633534d593ca9c008ca6b ([already merged](https://github.com/dotnet/corert/commit/254ae2344a64386bbb652e7318c937d523890d49))\r\n- https://github.com/dotnet/coreclr/commit/b04644c55ae003bd1c6c8fefe33d5dfe6ef240f0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/ab849639db83ee65e51838ef147cee8d21b813c7 ([already merged](https://github.com/dotnet/corert/commit/d56451ee402459a23ff28fe1eff672d131468580))\r\n- https://github.com/dotnet/coreclr/commit/840554e77f01a327e0c5df59d229149fd50b5c2d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/7e4afb4fbf900b789f53ccb816c6ddba7807de68 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c9a0d6d510e92dc4ebd4b78f766c706abce0a9af (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8d02c0786825a27d67fb2af150f751dbda360bef (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/11f2dbd1d8376358727a686126024984b01e3383 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c5ad5fd0f83b26d00ef567b215a7dcd5dd8394c9 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/67a8ef7380e9e30f10e67d3b34898903e6d18946 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/07fa3a32336d2da5d2bf652ad01d33f18b2debaf (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/dab2f6b76a1ed088a871374189e2133db9c9accb (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/958279de27e7f3c30ad53e35277653d1ec0f1e6e (manual port)\r\n- https://github.com/dotnet/coreclr/commit/ed57233f4d26114d45b1293ced80a09f879f72cf (manual port, omitted changes)\r\n\r\n**Points of interest**:\r\nhttps://github.com/dotnet/coreclr/commit/8d02c0786825a27d67fb2af150f751dbda360bef also contains shutdown logic which i could not identify in corert.\r\nAlso this change reordered the initialization due to \"This isn't done as part of InitializeGarbageCollector() above because it requires write barriers to have been set up on x86, which happens as part of InitJITHelpers1.\" which i've omitted as it seems to not apply to corert.","Url":"https://github.com/dotnet/corert/pull/7342","RelatedDescription":"Open PR \"Port GC changes from coreclr - 3\" (#7342)"},{"Id":"436445576","IsPullRequest":false,"CreatedAt":"2019-04-24T00:32:11","Actor":"Alan-FGR","Number":"7341","RawContent":null,"Title":"Pinvoked libraries somehow get broken in CoreRT","State":"open","Body":"Hello there.\r\n\r\nI'm trying to debug a pretty hairy behavior in CoreRT here. This isn't a proper issue because my time is limited and I'm struggling to make sense of what's happening, but I think it's better to use an issue instead of Gitter to log my findings and maybe get help.\r\n\r\nI'm working on [C# bindings for the PhysX library](https://github.com/Alan-FGR/SharpPhysX), and I have a testbed sample kinda thing which renders the debug geometry from the PhysX library, it's working fine on both .NET Framework (4.7.2) and .NET Core 2.1, and the code seems correct. However, I couldn't get that to work properly on CoreRT.\r\n\r\nAt first I thought it could be something in my pinvokes/wrappers, but after some investigation by debugging the output binary in VS, the stack traces point to the PhysX internals, most specifically some threading code (most of the time at least). At that point I've tried to make a minimal repro using only the PhysX libraries, but I simply couldn't get the problem to manifest. I then started from the other way and stripped stuff from the sample until I get something that works, that's when I noticed that for some reason the contact solving stuff in PhysX is broken, take a look at these lovely gifs :trollface::\r\nHere's the proper expected result on CoreCLR:\r\n![coreclr](https://user-images.githubusercontent.com/8399299/56623789-23562680-660c-11e9-896e-c1b4dcd0d7ef.gif)\r\nHere's what happens on CoreRT:\r\n![corert](https://user-images.githubusercontent.com/8399299/56623786-20f3cc80-660c-11e9-8890-0905b1785400.gif)\r\n\r\nHowever, the thing is, even though the error happens in PhysX, when I remove the other libraries (I was trying to make a minimal SSCCE), the thing works, here's a minimal code that does the same thing except the other libraries were removed (it plots the cube height to console): https://github.com/Alan-FGR/CoreRT_SharpPhysX_Debug and it works fine on CoreRT, and here's a branch of SharpPhysX with some *kinda minimal* code that doesn't work: https://github.com/Alan-FGR/SharpPhysX/tree/corert_debug, note how the code that has to do with PhysX is the same (not 1:1 but the pinvoke calls are), the project in question is the [\"dotnetCore\"](https://github.com/Alan-FGR/SharpPhysX/tree/corert_debug/dotnetCore) the code is all in the DebugRenderer though because I thought it could be the abstract impls :P...\r\n\r\nI've also tried to remove PhysX and have just the rendering (bgfx debug text and whatnot), and that works fine, **the thing only crashes when I'm using all the pinvoked libs at the same time**, what makes me think that somehow they're conflicting with each other, like maybe they're writing on each other memories or something, I don't really know... but that makes debugging very hard, especially since I'm a total n00b at debugging interop.\r\n\r\nI'm going to try and make some better repros, but in case some of you want to give it a try I think that's all you need, the native PhysX is an opensource project too (https://github.com/NVIDIAGameWorks/PhysX/tree/4.0) and the native library (LibSharpPhysX) was built against the latest 4.0.","Url":"https://github.com/dotnet/corert/issues/7341","RelatedDescription":"Open issue \"Pinvoked libraries somehow get broken in CoreRT\" (#7341)"},{"Id":"436328568","IsPullRequest":true,"CreatedAt":"2019-04-24T00:01:11","Actor":"Suchiman","Number":"7336","RawContent":null,"Title":"Port GC changes from coreclr - 2","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7332\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [lastly ported commit](https://github.com/dotnet/coreclr/commit/9ae6ed25affc42343a3f88f147ff4a5fbd1e9727):**\r\n- https://github.com/dotnet/coreclr/commit/51e968b013e9b1582035f202e004ed024f747f4f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4627704051a81c65d81771d7e776b676b8a2d44f (already merged)\r\n- https://github.com/dotnet/coreclr/commit/9e1e0b7c8f4d5ef1602ab6947a597559effbe60f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1b827b5a82f8c6f8a9ed760ee127938dea5a7ea4 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8bc067c194f0b44e95c6e6a490b99078a2fa9719 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fc3220f19a8ee8266e0782bf8878790453f790e6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d5906ff3e0d0f864c1432f1f39d586ca3d79fbb6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/992d37064fa76ea7633734607381545e228806a5 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ecdf277ce50f29cccb494157cdbbfda86517feac (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b2b4ea22fcf71ef61ff84aa9669da2419c7541a5 (omitted, need guidance)","Url":"https://github.com/dotnet/corert/pull/7336","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 2\" (#7336)"},{"Id":"436424914","IsPullRequest":false,"CreatedAt":"2019-04-23T22:58:43","Actor":"josephmoresena","Number":"7340","RawContent":null,"Title":"clang: warning: argument unused during compilation: '-exported_symbols_list","State":"open","Body":"I am testing the operation of shared libraries in linux and in sum everything works wonderfully however when I ran objdump in linux about the compiled .so I realized that we are exporting all the internal symbols of the library and not only those that we mark as export\r\n\r\n`clang: warning: argument unused during compilation: '-exported_symbols_list obj / Debug / netstandard2.0 / linux-x64 / native / NativeLibrary.exports' [-Wunused-command-line-argument]`\r\nThe .SO file is almost twice the size of the DLL.\r\n\r\nWindows dumpbin.exe /EXPORTS:\r\n` Section contains the following exports for NativeLibrary.dll\r\n\r\n    00000000 characteristics\r\n    FFFFFFFF time date stamp\r\n        0.00 version\r\n           1 ordinal base\r\n          19 number of functions\r\n          19 number of names\r\n\r\n    ordinal hint RVA      name\r\n\r\n          1    0 000B1DC0 callback = callback\r\n          2    1 000B0D60 create_fixed_string = create_fixed_string\r\n          3    2 000B0030 finalize_object = finalize_object\r\n          4    3 000B0A80 free_memory = free_memory\r\n          5    4 000B0B90 get_char_string = get_char_string\r\n          6    5 000B2450 get_int_array = get_int_array\r\n          7    6 000B1150 get_native_string = get_native_string\r\n          8    7 000AFEF0 get_number = get_number\r\n          9    8 000B29C0 get_object = get_object\r\n         10    9 000B2BD0 get_object_info = get_object_info\r\n         11    A 000B0850 get_object_type = get_object_type\r\n         12    B 000AFD10 get_ramdom_number = get_ramdom_number\r\n         13    C 000AF9E0 get_random_instance = get_random_instance\r\n         14    D 000AF7E0 get_random_seeded_instance = get_random_seeded_instance\r\n         15    E 000B1390 get_structure = get_structure\r\n         16    F 000B3290 print_numbers = print_numbers\r\n         17   10 000B2080 read_object = read_object\r\n         18   11 000B1720 read_structure = read_structure\r\n         19   12 000B0FE0 write_character_string = write_character_string\r\n\r\n  Summary\r\n\r\n       2B000 .data\r\n      1BC000 .managed\r\n       30000 .pdata\r\n      241000 .rdata\r\n       19000 .reloc\r\n        1000 .rsrc\r\n       AA000 .text`\r\n\r\nLinux nm -D --defined-only:\r\n`00000000001e8c70 T AppendExceptionStackFrame\r\n0000000000868258 B __bss_start\r\n000000000019a680 T callback\r\n000000000018896c T ConstrainedCallSupport_GetStubs\r\n0000000000198ee0 T create_fixed_string\r\n00000000002c5c90 T Dbl2IntOvf\r\n00000000002c5cf0 T Dbl2LngOvf\r\n00000000002c5cc0 T Dbl2UIntOvf\r\n00000000002c5d20 T Dbl2ULngOvf\r\n0000000000280de0 T DebugFuncEvalAbortHelper\r\n0000000000280d90 T DebugFuncEvalHelper\r\n0000000000868258 D _edata\r\n0000000000872090 B _end\r\n00000000001ea3f0 T FailFast\r\n0000000000198560 T finalize_object\r\n00000000003786c4 T _fini\r\n00000000002c5d50 T Flt2IntOvf\r\n00000000002c5d90 T Flt2LngOvf\r\n0000000000198b90 T free_memory\r\n0000000000479b48 R g_compilerEmbeddedSettingsBlob\r\n0000000000198d00 T get_char_string\r\n000000000019abf0 T get_int_array\r\n0000000000199340 T get_native_string\r\n0000000000197ba0 T get_number\r\n000000000019b1f0 T get_object\r\n000000000019b2f0 T get_object_info\r\n00000000001988c0 T get_object_type\r\n0000000000197990 T get_ramdom_number\r\n00000000001978c0 T get_random_instance\r\n0000000000197480 T get_random_seeded_instance\r\n00000000001e9e90 T GetRuntimeException\r\n0000000000199590 T get_structure\r\n00000000001de2c0 T GetSystemArrayEEType\r\n000000000018d940 T GlobalizationNative_ChangeCase\r\n000000000018dc50 T GlobalizationNative_ChangeCaseInvariant\r\n000000000018dfb0 T GlobalizationNative_ChangeCaseTurkish\r\n000000000018ebe0 T GlobalizationNative_CloseSortHandle\r\n000000000018eda0 T GlobalizationNative_CompareString\r\n000000000018f520 T GlobalizationNative_CompareStringOrdinalIgnoreCase\r\n000000000018f320 T GlobalizationNative_EndsWith\r\n000000000018cad0 T GlobalizationNative_EnumCalendarInfo\r\n000000000018c8c0 T GlobalizationNative_GetCalendarInfo\r\n000000000018c6a0 T GlobalizationNative_GetCalendars\r\n000000000018fc10 T GlobalizationNative_GetDefaultLocaleName\r\n0000000000192c60 T GlobalizationNative_GetICUVersion\r\n000000000018d710 T GlobalizationNative_GetJapaneseEraStartDate\r\n000000000018d660 T GlobalizationNative_GetLatestJapaneseEra\r\n00000000001902b0 T GlobalizationNative_GetLocaleInfoGroupingSizes\r\n000000000018fdd0 T GlobalizationNative_GetLocaleInfoInt\r\n0000000000190700 T GlobalizationNative_GetLocaleInfoString\r\n000000000018fa60 T GlobalizationNative_GetLocaleName\r\n000000000018f8c0 T GlobalizationNative_GetLocales\r\n0000000000191130 T GlobalizationNative_GetLocaleTimeFormat\r\n000000000018eb00 T GlobalizationNative_GetSortHandle\r\n000000000018f4a0 T GlobalizationNative_GetSortKey\r\n000000000018ed50 T GlobalizationNative_GetSortVersion\r\n0000000000191210 T GlobalizationNative_GetTimeZoneDisplayName\r\n000000000018ee20 T GlobalizationNative_IndexOf\r\n000000000018efc0 T GlobalizationNative_IndexOfOrdinalIgnoreCase\r\n000000000018ef00 T GlobalizationNative_LastIndexOf\r\n0000000000191310 T GlobalizationNative_LoadICU\r\n000000000018f1e0 T GlobalizationNative_StartsWith\r\n000000000012a368 T _init\r\n00000000002b6cf0 T InitializeFinalizerThread\r\n00000000002c52a0 T InitializeModules\r\n000000000032b0d0 T __managed__Startup\r\n00000000001a23f0 T OnFirstChanceException\r\n0000000000868088 D PointerToReturnFromCallDescrThunk\r\n00000000008680c0 D PointerToReturnFromUniversalTransition\r\n00000000008680c8 D PointerToReturnFromUniversalTransition_DebugStepTailCall\r\n00000000008680a8 D PointerToRhpCallCatchFunclet2\r\n00000000008680b8 D PointerToRhpCallFilterFunclet2\r\n00000000008680b0 D PointerToRhpCallFinallyFunclet2\r\n00000000008680a0 D PointerToRhpRethrow2\r\n0000000000868098 D PointerToRhpThrowEx2\r\n0000000000868090 D PointerToRhpThrowHwEx2\r\n000000000019ba10 T print_numbers\r\n00000000002b7750 T ProcessFinalizers\r\n000000000019a8b0 T read_object\r\n000000000019a340 T read_structure\r\n00000000002b9540 T RhAllocateThunk\r\n00000000002b9270 T RhAllocLocal\r\n00000000002b92a0 T RhAllocLocal2\r\n00000000002b9210 T RhArrayStoreCheckAny\r\n00000000002b8e50 T RhBox\r\n00000000002b9250 T RhBoxAndNullCheck\r\n00000000002b8f10 T RhBoxAny\r\n0000000000185574 T RhCallDescrWorker\r\n00000000002b8670 T RhCollect\r\n0000000000185938 T RhCommonStub\r\n00000000002b9530 T RhCreateThunksHeap\r\n00000000002b9520 T RhDisableConservativeReportingRegion\r\n00000000002b8720 T RhEndNoGCRegion\r\n00000000002b7e50 T RhExceptionHandling_FailedAllocation\r\n00000000002b7e30 T RhExceptionHandling_ThrowClasslibDivideByZeroException\r\n00000000002b7e10 T RhExceptionHandling_ThrowClasslibOverflowException\r\n00000000002b9590 T RhFreeThunk\r\n00000000002b7720 T RhGcStress_Initialize\r\n00000000002b7730 T RhGcStress_Initialize2\r\n00000000001859d6 T RhGetCommonStubAddress\r\n00000000002b9350 T RhGetCurrentThreadStackTrace\r\n00000000001859de T RhGetCurrentThunkContext\r\n00000000002b86c0 T RhGetGcTotalMemory\r\n00000000002b96a0 T RhGetThunkSize\r\n00000000002b94e0 T RhInitializeConservativeReportingRegion\r\n00000000002b92e0 T RhMemberwiseClone\r\n00000000002b8e40 T RhNewArray\r\n00000000002b8e10 T RhNewObject\r\n000000000018540b T RhNewString\r\n00000000001863b0 T RhpAssignRef\r\n00000000001863b0 T RhpAssignRefAVLocation\r\n00000000001863b0 T RhpAssignRefESI\r\n0000000000186498 T RhpByRefAssignRef\r\n00000000002b93f0 T RhpCalculateStackTraceWorker\r\n0000000000185705 T RhpCallCatchFunclet\r\n0000000000185884 T RhpCallFilterFunclet\r\n00000000001857cf T RhpCallFinallyFunclet\r\n00000000001859f8 T RhpCastableObjectDispatch_CommonStub\r\n00000000001859fb T RhpCastableObjectDispatchHelper\r\n00000000001859fa T RhpCastableObjectDispatchHelper_TailCalled\r\n00000000002b8ce0 T RhpCastableObjectResolve\r\n00000000001863da T RhpCheckedAssignRef\r\n00000000001863da T RhpCheckedAssignRefAVLocation\r\n00000000001863da T RhpCheckedAssignRefESI\r\n0000000000186416 T RhpCheckedLockCmpXchg\r\n0000000000186419 T RhpCheckedLockCmpXchgAVLocation\r\n0000000000186459 T RhpCheckedXchg\r\n000000000018645c T RhpCheckedXchgAVLocation\r\n00000000002b6ee0 T RhpCidResolve\r\n0000000000281520 T RhpDebugFuncEvalHelper\r\n00000000002b8650 T RhpFailFastForPInvokeExceptionCoop\r\n00000000002b8620 T RhpFailFastForPInvokeExceptionPreemp\r\n00000000001861e1 T RhpInitialDynamicInterfaceDispatch\r\n00000000001861e1 T RhpInitialInterfaceDispatch\r\n00000000001859fc T RhpInterfaceDispatch1\r\n0000000000185af5 T RhpInterfaceDispatch16\r\n0000000000185a15 T RhpInterfaceDispatch2\r\n0000000000185bef T RhpInterfaceDispatch32\r\n0000000000185a3b T RhpInterfaceDispatch4\r\n0000000000185de9 T RhpInterfaceDispatch64\r\n0000000000185a7b T RhpInterfaceDispatch8\r\n00000000001861e3 T RhpInterfaceDispatchSlow\r\n00000000002bb330 T RhpLdelemaRef\r\n00000000001858b8 T RhpLockCmpXchg32\r\n00000000001858bb T RhpLockCmpXchg32AVLocation\r\n00000000001858c0 T RhpLockCmpXchg64\r\n00000000001858c3 T RhpLockCmpXchg64AVLocation\r\n0000000000185473 T RhpNewArray\r\n00000000001854e6 T RhpNewArrayRare\r\n0000000000185348 T RhpNewFast\r\n0000000000185381 T RhpNewFinalizable\r\n0000000000185388 T RhpNewObject\r\n00000000001858cc T RhpPInvoke\r\n000000000018591a T RhpPInvokeReturn\r\n00000000002b6fa0 T RhpResolveInterfaceMethod\r\n0000000000185696 T RhpRethrow\r\n00000000002b9330 T RhpReversePInvokeBadTransition\r\n00000000002b78b0 T RhpSetHaveNewClasslibs\r\n00000000002bb1b0 T RhpStelemRef\r\n00000000001859f9 T RhpTailCallTLSDispatchCell\r\n00000000001855ed T RhpThrowEx\r\n0000000000185578 T RhpThrowHwEx\r\n00000000001861f4 T RhpUniversalTransition\r\n00000000001862d2 T RhpUniversalTransition_DebugStepTailCall\r\n00000000001861e0 T RhpVTableOffsetDispatch\r\n00000000002b7010 T RhResolveDispatch\r\n00000000002b7070 T RhResolveDispatchOnType\r\n00000000002b7fd0 T RhRethrow\r\n00000000002b95e0 T RhSetThunkData\r\n00000000002b8700 T RhStartNoGCRegion\r\n00000000002b7f70 T RhThrowEx\r\n00000000002b7e80 T RhThrowHwEx\r\n00000000002b9640 T RhTryGetThunkData\r\n00000000002baa90 T RhTypeCast_AreTypesAssignable\r\n00000000002bb410 T RhTypeCast_AreTypesEquivalent\r\n00000000002bb020 T RhTypeCast_CheckArrayStore\r\n00000000002bb5b0 T RhTypeCast_CheckCast\r\n00000000002bb590 T RhTypeCast_CheckCast2\r\n00000000002ba1c0 T RhTypeCast_CheckCastArray\r\n00000000002ba1a0 T RhTypeCast_CheckCastArray2\r\n00000000002b9fb0 T RhTypeCast_CheckCastClass\r\n00000000002b9f90 T RhTypeCast_CheckCastClass2\r\n00000000002baef0 T RhTypeCast_CheckCastInterface\r\n00000000002baed0 T RhTypeCast_CheckCastInterface2\r\n00000000002b9fe0 T RhTypeCast_CheckUnbox\r\n00000000002bb150 T RhTypeCast_CheckVectorElemAddr\r\n00000000002bb510 T RhTypeCast_IsInstanceOf\r\n00000000002bb4f0 T RhTypeCast_IsInstanceOf2\r\n00000000002ba040 T RhTypeCast_IsInstanceOfArray\r\n00000000002ba020 T RhTypeCast_IsInstanceOfArray2\r\n00000000002b9d90 T RhTypeCast_IsInstanceOfClass\r\n00000000002b9d70 T RhTypeCast_IsInstanceOfClass2\r\n00000000002ba210 T RhTypeCast_IsInstanceOfInterface\r\n00000000002ba1f0 T RhTypeCast_IsInstanceOfInterface2\r\n00000000002b9100 T RhUnbox2\r\n00000000002b8fb0 T RhUnboxAny\r\n00000000002b9150 T RhUnboxNullable\r\n0000000000192fc0 T __start___managedcode\r\n0000000000868250 D __start___modules\r\n00000000003759c4 T __start___unbox\r\n00000000003759c1 T __stop___managedcode\r\n0000000000868258 D __stop___modules\r\n00000000003786c1 T __stop___unbox\r\n000000000018a180 T SystemNative_Access\r\n000000000018a140 T SystemNative_ChDir\r\n000000000018a050 T SystemNative_ChMod\r\n0000000000189c60 T SystemNative_Close\r\n0000000000189e00 T SystemNative_CloseDir\r\n0000000000188db0 T SystemNative_ConfigureTerminalForChildProcess\r\n00000000001894f0 T SystemNative_ConvertErrorPalToPlatform\r\n00000000001894d0 T SystemNative_ConvertErrorPlatformToPal\r\n000000000018a8b0 T SystemNative_CopyFile\r\n0000000000189c70 T SystemNative_Dup\r\n000000000018a090 T SystemNative_FChMod\r\n0000000000189f30 T SystemNative_FcntlCanGetSetPipeSz\r\n0000000000189f40 T SystemNative_FcntlGetPipeSz\r\n0000000000189e70 T SystemNative_FcntlSetFD\r\n0000000000189fc0 T SystemNative_FcntlSetIsNonBlocking\r\n0000000000189f80 T SystemNative_FcntlSetPipeSz\r\n000000000018a100 T SystemNative_FLock\r\n000000000018aca0 T SystemNative_ForkAndExecProcess\r\n0000000000189a20 T SystemNative_FStat\r\n000000000018a0d0 T SystemNative_FSync\r\n000000000018a370 T SystemNative_FTruncate\r\n000000000018c190 T SystemNative_GetAbsoluteTime\r\n0000000000188fc0 T SystemNative_GetControlCharacters\r\n000000000018c1c0 T SystemNative_GetCpuUtilization\r\n000000000018b6c0 T SystemNative_GetCwd\r\n000000000018c530 T SystemNative_GetEGid\r\n000000000018c520 T SystemNative_GetEUid\r\n000000000018c560 T SystemNative_GetGroupList\r\n000000000018a6c0 T SystemNative_GetLine\r\n000000000018b840 T SystemNative_GetNonCryptographicallySecureRandomBytes\r\n000000000018ab50 T SystemNative_GetPeerID\r\n000000000018b4f0 T SystemNative_GetPid\r\n000000000018b680 T SystemNative_GetPriority\r\n000000000018c430 T SystemNative_GetPwNamR\r\n000000000018c340 T SystemNative_GetPwUidR\r\n0000000000189d30 T SystemNative_GetReadDirRBufferSize\r\n000000000018b410 T SystemNative_GetRLimit\r\n000000000018b500 T SystemNative_GetSid\r\n00000000001891d0 T SystemNative_GetSignalForBreak\r\n000000000018c620 T SystemNative_GetSystemTimeAsTicks\r\n000000000018c1a0 T SystemNative_GetTimebaseInfo\r\n000000000018c140 T SystemNative_GetTimestamp\r\n000000000018c0e0 T SystemNative_GetTimestampResolution\r\n000000000018c550 T SystemNative_GetUid\r\n0000000000188970 T SystemNative_GetWindowSize\r\n0000000000188c20 T SystemNative_InitializeConsoleBeforeRead\r\n0000000000189400 T SystemNative_InitializeTerminalAndSignalHandling\r\n000000000018ab30 T SystemNative_INotifyAddWatch\r\n000000000018ab20 T SystemNative_INotifyInit\r\n000000000018ab40 T SystemNative_INotifyRemoveWatch\r\n00000000001889a0 T SystemNative_IsATty\r\n000000000018b4e0 T SystemNative_Kill\r\n000000000018ac70 T SystemNative_LChflags\r\n000000000018ac90 T SystemNative_LChflagsCanSetHiddenFlag\r\n000000000018a1d0 T SystemNative_Link\r\n000000000018abd0 T SystemNative_LockFileRegion\r\n000000000018a190 T SystemNative_LSeek\r\n0000000000189b00 T SystemNative_LStat\r\n000000000018a2c0 T SystemNative_MAdvise\r\n000000000018a010 T SystemNative_MkDir\r\n000000000018a210 T SystemNative_MksTemps\r\n000000000018a250 T SystemNative_MMap\r\n000000000018a2f0 T SystemNative_MSync\r\n000000000018a2b0 T SystemNative_MUnmap\r\n0000000000189bb0 T SystemNative_Open\r\n0000000000189df0 T SystemNative_OpenDir\r\n000000000018b650 T SystemNative_PathConf\r\n000000000018b400 T SystemNative_PClose\r\n0000000000189e10 T SystemNative_Pipe\r\n000000000018a3b0 T SystemNative_Poll\r\n000000000018b3f0 T SystemNative_POpen\r\n000000000018a670 T SystemNative_PosixFAdvise\r\n000000000018a730 T SystemNative_Read\r\n0000000000189d40 T SystemNative_ReadDirR\r\n000000000018a790 T SystemNative_ReadLink\r\n0000000000189180 T SystemNative_ReadStdin\r\n000000000018abc0 T SystemNative_RealPath\r\n000000000018b970 T SystemNative_RegisterForCtrl\r\n000000000018b9f0 T SystemNative_RegisterForSigChld\r\n000000000018a7c0 T SystemNative_Rename\r\n000000000018b990 T SystemNative_RestoreAndHandleCtrl\r\n000000000018a800 T SystemNative_RmDir\r\n000000000018b7a0 T SystemNative_SchedGetAffinity\r\n000000000018b6e0 T SystemNative_SchedSetAffinity\r\n000000000018c540 T SystemNative_SetEUid\r\n00000000001889b0 T SystemNative_SetKeypadXmit\r\n000000000018b6b0 T SystemNative_SetPriority\r\n000000000018b480 T SystemNative_SetRLimit\r\n00000000001891e0 T SystemNative_SetSignalForBreak\r\n000000000018b9e0 T SystemNative_SetTerminalInvalidationHandler\r\n0000000000189cf0 T SystemNative_ShmOpen\r\n0000000000189d10 T SystemNative_ShmUnlink\r\n0000000000189940 T SystemNative_Stat\r\n00000000001890f0 T SystemNative_StdinReady\r\n00000000001898e0 T SystemNative_StrErrorR\r\n000000000018a840 T SystemNative_Sync\r\n000000000018a330 T SystemNative_SysConf\r\n000000000018b510 T SystemNative_SysLog\r\n0000000000188d80 T SystemNative_UninitializeConsoleAfterRead\r\n0000000000189cb0 T SystemNative_Unlink\r\n000000000018b980 T SystemNative_UnregisterForCtrl\r\n000000000018c060 T SystemNative_UTimensat\r\n000000000018b520 T SystemNative_WaitIdAnyExitedNoHangNoWait\r\n000000000018b5b0 T SystemNative_WaitPidExitedNoHang\r\n000000000018a850 T SystemNative_Write\r\n00000000001852f4 T unw_getcontext\r\n0000000000184ed0 T unw_get_fpreg\r\n0000000000184fa0 T unw_get_proc_info\r\n0000000000184fd0 T unw_get_proc_name\r\n0000000000184e30 T unw_get_reg\r\n0000000000184f50 T unw_get_save_loc\r\n0000000000184d90 T unw_init_local\r\n0000000000184ff0 T unw_is_fpreg\r\n0000000000185010 T unw_is_signal_frame\r\n0000000000185020 T unw_iterate_dwarf_unwind_cache\r\n0000000000868080 D unw_local_addr_space\r\n0000000000185000 T unw_regname\r\n0000000000184fc0 T unw_resume\r\n0000000000184f10 T unw_set_fpreg\r\n0000000000184e70 T unw_set_reg\r\n0000000000184f90 T unw_step\r\n0000000000199080 T write_character_string`","Url":"https://github.com/dotnet/corert/issues/7340","RelatedDescription":"Open issue \"clang: warning: argument unused during compilation: '-exported_symbols_list\" (#7340)"},{"Id":"436411073","IsPullRequest":false,"CreatedAt":"2019-04-23T22:08:04","Actor":"Suchiman","Number":"7339","RawContent":null,"Title":"Port missing GC changes from coreclr","State":"open","Body":"In the current porting of the GC changes from coreclr we've skipped some things that will need to be ported later on\r\n- [ ] [FEATURE_MANUALLY_MANAGED_CARD_BUNDLES](https://github.com/dotnet/corert/pull/7332#issuecomment-485586119)\r\n- [ ] [container memory limits](https://github.com/dotnet/corert/pull/7336#issuecomment-485969598)","Url":"https://github.com/dotnet/corert/issues/7339","RelatedDescription":"Open issue \"Port missing GC changes from coreclr\" (#7339)"},{"Id":"436388840","IsPullRequest":true,"CreatedAt":"2019-04-23T22:07:41","Actor":"Dotnet-GitSync-Bot","Number":"7337","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7337","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7337)"},{"Id":"436403184","IsPullRequest":false,"CreatedAt":"2019-04-23T21:42:12","Actor":"tarekgh","Number":"7338","RawContent":null,"Title":"WebAssembly CI legs are failing because of missing CMake","State":"open","Body":"\r\nhttps://ci.dot.net/job/dotnet_corert/job/master/job/release_windows_nt_wasm_prtest/1616/consoleFull#49494639283554902-aff0-4799-9e92-0ada24ce2a06\r\n\r\n```\r\n14:19:43 CMake is a pre-requisite to build this repository but it was not found on the path. Please install CMake from http://www.cmake.org/download/ and ensure it is on your path.\r\n14:19:43 Setting build variables failed.\r\n```\r\n\r\nhttps://github.com/dotnet/corert/pull/7337","Url":"https://github.com/dotnet/corert/issues/7338","RelatedDescription":"Open issue \"WebAssembly CI legs are failing because of missing CMake\" (#7338)"},{"Id":"436326557","IsPullRequest":true,"CreatedAt":"2019-04-23T18:24:25","Actor":"Dotnet-GitSync-Bot","Number":"7335","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Anipik","Url":"https://github.com/dotnet/corert/pull/7335","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7335)"},{"Id":"435511136","IsPullRequest":true,"CreatedAt":"2019-04-23T13:23:57","Actor":"Suchiman","Number":"7332","RawContent":null,"Title":"Port GC changes from coreclr","State":"closed","Body":"This port starts of as of https://github.com/dotnet/coreclr/commit/52aa019ec9bed8c08a2f8e230804b363bcaef6f4 where coreclr and corert GC directories were in sync.\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [starting commit](https://github.com/dotnet/coreclr/commit/52aa019ec9bed8c08a2f8e230804b363bcaef6f4):**\r\n- https://github.com/dotnet/coreclr/commit/5a7dc18f5985bd28ea798e6a9fc4b8ad5fef09ca (already merged)\r\n- https://github.com/dotnet/coreclr/commit/6570085031f7a03bd42cca3ffd82b00122d5e2a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/cc315c9663d340e704d994808eb298447a84fd59 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/7bd38e8836611908298363688b7faac6eaf065ce (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6f6fda958dac38896abe9487def2242add822809 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/9a8106a6fc79649bd8296e84f457d10211eed9db (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9ae6ed25affc42343a3f88f147ff4a5fbd1e9727 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/pull/9770/commits/6b7fec4f171c4840d772ce3c608018474a9c24ae (ommitted, not directly related to gc, but previous commit)\r\n\r\n**Points of interests**\r\nIn the last commit of this batch, i've transplanted the changes from `gcenv.ee.cpp` to `gcrhenv.cpp`.\r\nNot sure how to transplant the changes in gchelpers.cpp and jithelper asm changes.\r\nOne thing i've noticed while adjusting `gcrhenv.cpp`, is the lack of [FlushProcessWriteBuffers();](https://github.com/dotnet/coreclr/commit/9ae6ed25affc42343a3f88f147ff4a5fbd1e9727#diff-201b4e5e474739077d3e01e2f2dc4b9fL1277) calls in the corert codebase.\r\nOutside of the GC, corert also seems to miss software write watch.","Url":"https://github.com/dotnet/corert/pull/7332","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr\" (#7332)"},{"Id":"435787375","IsPullRequest":true,"CreatedAt":"2019-04-22T23:19:29","Actor":"Dotnet-GitSync-Bot","Number":"7334","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel @tannergooding @dotnet-maestro-bot @sdmaclea","Url":"https://github.com/dotnet/corert/pull/7334","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7334)"},{"Id":"435681026","IsPullRequest":false,"CreatedAt":"2019-04-22T10:28:48","Actor":"ifew","Number":"7333","RawContent":null,"Title":"I compiled Net Core with EFCore but waiting a long time","State":"open","Body":"I developing some native app and using MySql.Data.EntityFrameworkCore but waiting a long time for compile, I'm not sure to correct or not.\r\n\r\nand then I try another code from other (https://github.com/rubin55/dot-hello). it's same\r\n\r\nI don't know why?\r\n\r\nMy Code \r\nhttps://github.com/ifew/aws-lambda-lambdanative-db/tree/master/src/aws-lambda-lambdanative\r\n\r\nMy OS: MacOS Mojave\r\nCPU Intel Core i5 2.9 GHz\r\nMemory:\t8 GB\r\n\r\npx. sorry for bad English","Url":"https://github.com/dotnet/corert/issues/7333","RelatedDescription":"Open issue \"I compiled Net Core with EFCore but waiting a long time\" (#7333)"},{"Id":"435405893","IsPullRequest":true,"CreatedAt":"2019-04-20T14:34:44","Actor":"MichalStrehovsky","Number":"7331","RawContent":null,"Title":"Implement NativeLibrary API on CoreRT","State":"open","Body":"The only thing that's missing is the DllImportResolver. It's easy, but I don't want to bloat this code review any more than is necessary. This is a lot of code.","Url":"https://github.com/dotnet/corert/pull/7331","RelatedDescription":"Open PR \"Implement NativeLibrary API on CoreRT\" (#7331)"},{"Id":"434505045","IsPullRequest":true,"CreatedAt":"2019-04-20T00:07:07","Actor":"jkotas","Number":"7320","RawContent":null,"Title":"Update objwriter version","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7320","RelatedDescription":"Closed or merged PR \"Update objwriter version\" (#7320)"},{"Id":"435226482","IsPullRequest":true,"CreatedAt":"2019-04-19T18:19:33","Actor":"Dotnet-GitSync-Bot","Number":"7330","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @krwq @safern","Url":"https://github.com/dotnet/corert/pull/7330","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7330)"},{"Id":"435034664","IsPullRequest":false,"CreatedAt":"2019-04-19T16:29:55","Actor":"drearyrainDeng","Number":"7327","RawContent":null,"Title":"Question：how cli judge whether to compile native or managed code?","State":"closed","Body":"To example \"Hello World\".we just call command like that \"dotnet publish -r win-x64 -c release\"\r\nso dotnet  how to judge compile native or managed code?","Url":"https://github.com/dotnet/corert/issues/7327","RelatedDescription":"Closed issue \"Question：how cli judge whether to compile native or managed code?\" (#7327)"},{"Id":"435010848","IsPullRequest":true,"CreatedAt":"2019-04-19T16:04:45","Actor":"Dotnet-GitSync-Bot","Number":"7326","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @Anipik @tannergooding @krwq @safern @buyaa-n @bbartels","Url":"https://github.com/dotnet/corert/pull/7326","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7326)"},{"Id":"435162096","IsPullRequest":false,"CreatedAt":"2019-04-19T13:10:23","Actor":"MarcoRossignoli","Number":"7329","RawContent":null,"Title":"Cannot compile repo with VS2019","State":"closed","Body":"I've installed VS 2017/2019/2019 preview I cannot compile the repo:\r\n```\r\nF:\\git\\corert (master -> origin)\r\nλ build\r\nChecking pre-requisites...\r\n\r\nCommencing CoreRT Repo build\r\n\r\nCommencing build of native components for Windows_NT.x64.Debug\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.0.2\r\n** Copyright (c) 2019 Microsoft Corporation\r\n**********************************************************************\r\n[vcvarsall.bat] Environment initialized for: 'x86_x64'\r\nCMake Error: Could not create named generator Visual Studio 16 2019\r\n\r\nGenerators\r\n  Visual Studio 15 2017 [arch] = Generates Visual Studio 2017 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 14 2015 [arch] = Generates Visual Studio 2015 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 12 2013 [arch] = Generates Visual Studio 2013 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 11 2012 [arch] = Generates Visual Studio 2012 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 10 2010 [arch] = Generates Visual Studio 2010 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"IA64\".\r\n  Visual Studio 9 2008 [arch]  = Generates Visual Studio 2008 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"IA64\".\r\n  Visual Studio 8 2005 [arch]  = Deprecated.  Generates Visual Studio 2005\r\n                                 project files.  Optional [arch] can be\r\n                                 \"Win64\".\r\n  Borland Makefiles            = Generates Borland makefiles.\r\n  NMake Makefiles              = Generates NMake makefiles.\r\n  NMake Makefiles JOM          = Generates JOM makefiles.\r\n  Green Hills MULTI            = Generates Green Hills MULTI files\r\n                                 (experimental, work-in-progress).\r\n  MSYS Makefiles               = Generates MSYS makefiles.\r\n  MinGW Makefiles              = Generates a make file for use with\r\n                                 mingw32-make.\r\n  Unix Makefiles               = Generates standard UNIX makefiles.\r\n  Ninja                        = Generates build.ninja files.\r\n  Watcom WMake                 = Generates Watcom WMake makefiles.\r\n  CodeBlocks - MinGW Makefiles = Generates CodeBlocks project files.\r\n  CodeBlocks - NMake Makefiles = Generates CodeBlocks project files.\r\n  CodeBlocks - NMake Makefiles JOM\r\n                               = Generates CodeBlocks project files.\r\n  CodeBlocks - Ninja           = Generates CodeBlocks project files.\r\n  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files.\r\n  CodeLite - MinGW Makefiles   = Generates CodeLite project files.\r\n  CodeLite - NMake Makefiles   = Generates CodeLite project files.\r\n  CodeLite - Ninja             = Generates CodeLite project files.\r\n  CodeLite - Unix Makefiles    = Generates CodeLite project files.\r\n  Sublime Text 2 - MinGW Makefiles\r\n                               = Generates Sublime Text 2 project files.\r\n  Sublime Text 2 - NMake Makefiles\r\n                               = Generates Sublime Text 2 project files.\r\n  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files.\r\n  Sublime Text 2 - Unix Makefiles\r\n                               = Generates Sublime Text 2 project files.\r\n  Kate - MinGW Makefiles       = Generates Kate project files.\r\n  Kate - NMake Makefiles       = Generates Kate project files.\r\n  Kate - Ninja                 = Generates Kate project files.\r\n  Kate - Unix Makefiles        = Generates Kate project files.\r\n  Eclipse CDT4 - NMake Makefiles\r\n                               = Generates Eclipse CDT 4.0 project files.\r\n  Eclipse CDT4 - MinGW Makefiles\r\n                               = Generates Eclipse CDT 4.0 project files.\r\n  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files.\r\n  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files.\r\n\r\nFailed to generate native component build project\r\nNative component build failed. Refer F:\\git\\corert\\buildscripts\\..\\bin\\Logs\\Native_Windows_NT__x64__Debug.log for details.\r\n```\r\nThere is no file in `Log` directory.\r\nSure I'm missing something, maybe some vs component.","Url":"https://github.com/dotnet/corert/issues/7329","RelatedDescription":"Closed issue \"Cannot compile repo with VS2019\" (#7329)"},{"Id":"435054675","IsPullRequest":true,"CreatedAt":"2019-04-19T06:32:55","Actor":"jkotas","Number":"7328","RawContent":null,"Title":"Fix objwriter for OSX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7328","RelatedDescription":"Closed or merged PR \"Fix objwriter for OSX\" (#7328)"},{"Id":"434280838","IsPullRequest":true,"CreatedAt":"2019-04-19T06:02:57","Actor":"tannergooding","Number":"7316","RawContent":null,"Title":"Updating the roslyn toolset to 3.1.0-beta3-19213-02","State":"closed","Body":"CC. @jkotas \r\n\r\nThis brings in the latest nullability changes and the new `readonly members` feature, which will be needed for changes like https://github.com/dotnet/coreclr/pull/23827\r\n\r\nThe compiler version matches that in arcade and buildtools right now.","Url":"https://github.com/dotnet/corert/pull/7316","RelatedDescription":"Closed or merged PR \"Updating the roslyn toolset to 3.1.0-beta3-19213-02\" (#7316)"},{"Id":"434891687","IsPullRequest":true,"CreatedAt":"2019-04-19T00:06:12","Actor":"Dotnet-GitSync-Bot","Number":"7324","RawContent":null,"Title":"Mirror changes from dotnet/coreclr [Donot Merge]","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @Anipik @tannergooding @krwq @safern @bbartels","Url":"https://github.com/dotnet/corert/pull/7324","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr [Donot Merge]\" (#7324)"},{"Id":"434950698","IsPullRequest":true,"CreatedAt":"2019-04-18T20:40:43","Actor":"MichalStrehovsky","Number":"7325","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7325","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7325)"},{"Id":"434667998","IsPullRequest":true,"CreatedAt":"2019-04-18T14:12:28","Actor":"MichalStrehovsky","Number":"7322","RawContent":null,"Title":"Fix Windows issues with the new object writer","State":"closed","Body":"See individual commits.","Url":"https://github.com/dotnet/corert/pull/7322","RelatedDescription":"Closed or merged PR \"Fix Windows issues with the new object writer\" (#7322)"},{"Id":"434732785","IsPullRequest":true,"CreatedAt":"2019-04-18T14:09:33","Actor":"hc4","Number":"7323","RawContent":null,"Title":"Make __modules section writeable on linux to prevent TEXTREL section","State":"closed","Body":"fixes #7321","Url":"https://github.com/dotnet/corert/pull/7323","RelatedDescription":"Closed or merged PR \"Make __modules section writeable on linux to prevent TEXTREL section\" (#7323)"},{"Id":"434617611","IsPullRequest":false,"CreatedAt":"2019-04-18T14:09:33","Actor":"hc4","Number":"7321","RawContent":null,"Title":"Linux shared library contains TEXTREL section","State":"closed","Body":"This section makes shared library non-shareable between processes.\r\nAlso it prevents packing with UPX.\r\n\r\nThe problem is caused by `__modules` section, which is marked ReadOnly and accessed with relocation type `IMAGE_REL_BASED_DIR64`\r\n\r\nI will try to investigate further. It is possible that another libobjwriter modification will be required.\r\n\r\nrelated to #4988","Url":"https://github.com/dotnet/corert/issues/7321","RelatedDescription":"Closed issue \"Linux shared library contains TEXTREL section\" (#7321)"},{"Id":"434453402","IsPullRequest":true,"CreatedAt":"2019-04-17T19:42:09","Actor":"MichalStrehovsky","Number":"7319","RawContent":null,"Title":"Increase official build Linux job timeout","State":"closed","Body":"We need more time when building the object writer package. 120 is probably overboard (we timed out while copying artifacts around), but it matches the Windows job timeout.","Url":"https://github.com/dotnet/corert/pull/7319","RelatedDescription":"Closed or merged PR \"Increase official build Linux job timeout\" (#7319)"},{"Id":"434396249","IsPullRequest":true,"CreatedAt":"2019-04-17T18:29:23","Actor":"Dotnet-GitSync-Bot","Number":"7318","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @tarekgh","Url":"https://github.com/dotnet/corert/pull/7318","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7318)"},{"Id":"434362500","IsPullRequest":false,"CreatedAt":"2019-04-17T16:01:32","Actor":"NextTurn","Number":"7317","RawContent":null,"Title":"Unable to load DLL 'clrcompression.dll'","State":"closed","Body":"## Stack trace\r\n\r\n```\r\nUnhandled Exception: System.IO.Compression.ZLibException: The underlying compression routine could not be loaded correctly. ---> System.DllNotFoundException: Unable to load DLL 'clrcompression.dll': The specified module could not be found.\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.FixupModuleCell(InteropHelpers.ModuleFixupCell*) + 0xef\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.ResolvePInvokeSlow(InteropHelpers.MethodFixupCell*) + 0x4f\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.ResolvePInvoke(InteropHelpers.MethodFixupCell*) + 0x3e\r\n   at Interop.zlib.InflateInit2_(ZLibNative.ZStream&, Int32) + 0x41\r\n   at System.IO.Compression.ZLibNative.ZLibStreamHandle.InflateInit2_(Int32) + 0x40\r\n   at System.IO.Compression.ZLibNative.CreateZLibStreamForInflate(ZLibNative.ZLibStreamHandle&, Int32) + 0x4e\r\n   at System.IO.Compression.Inflater.InflateInit(Int32) + 0x45\r\n```\r\n\r\n## Command\r\n\r\n```\r\ndotnet publish -r win-x64\r\n```\r\n\r\n## Environment\r\n\r\n.NET Core 3.0 or 2.2\r\nWindows 10 1809 x64\r\n\r\nRuns fine with CoreCLR.","Url":"https://github.com/dotnet/corert/issues/7317","RelatedDescription":"Closed issue \"Unable to load DLL 'clrcompression.dll'\" (#7317)"},{"Id":"433999560","IsPullRequest":true,"CreatedAt":"2019-04-16T22:34:23","Actor":"jkotas","Number":"7315","RawContent":null,"Title":"ObjWriter build fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7315","RelatedDescription":"Closed or merged PR \"ObjWriter build fixes\" (#7315)"},{"Id":"433850919","IsPullRequest":true,"CreatedAt":"2019-04-16T17:05:26","Actor":"jkotas","Number":"7314","RawContent":null,"Title":"Use CentOS docker image for official builds","State":"closed","Body":"The same one is used for CoreCLR official builds","Url":"https://github.com/dotnet/corert/pull/7314","RelatedDescription":"Closed or merged PR \"Use CentOS docker image for official builds\" (#7314)"},{"Id":"433794769","IsPullRequest":true,"CreatedAt":"2019-04-16T15:28:46","Actor":"Dotnet-GitSync-Bot","Number":"7313","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corert/pull/7313","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7313)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"436441305","IsPullRequest":false,"CreatedAt":"2019-04-24T00:10:17","Actor":"tmat","Number":"3173","RawContent":null,"Title":"Move Version calculation to targets","State":"open","Body":"Currently, the .NET Core SDK initializes `Version` property during evaluation phase in `Microsoft.NET.DefaultAssemblyInfo.targets` based on the values of `VersionPrefix` and `VersionSuffix` properties. \r\n\r\nConsider a NuGet package that provides a optional feature that generates version based on some property set by the project. The package targets do not have the opportunity to set `VersionPrefix` since there is no extension point in between the import of .NET Core `Sdk.targets` and `Microsoft.NET.DefaultAssemblyInfo.targets`. The first available extension point is an import of \"BeforeMicrosoftCommonTargets\".\r\n\r\n**Proposal**\r\n \r\nMove the `Version` initialization to a target and update all usages to depend on that target. This would be a breaking change, but would also allow more complex version calculation to be performed than can be done by just evaluation. E.g. version based on git commit depth, etc.\r\n\r\n**Alterantive**\r\n\r\nInitialize `Version` after common targets are imported.\r\nThis would also be breaking, since the version wouldn't be initialized where it would have been before.\r\n\r\n**Non-breaking alternative**\r\n\r\nAdd `ImportBeforeDotNetSdkTargets` property that contains a list of files to be imported from `Sdk.targets` before the rest of the SDK targets are imported. The SDK package could then add its targets file to the list in its `.props` file and set the `VersionPrefix` and `VersionSuffix` in that file. \r\n\r\n** Workaround **\r\nUntil one of the options above is available, we work around this in Arcade by hooking up BeforeCommonTargets and overriding all properties that were set based on `VersionPrefix` to that point. \r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3173","RelatedDescription":"Open issue \"Move Version calculation to targets\" (#3173)"},{"Id":"436370590","IsPullRequest":true,"CreatedAt":"2019-04-23T22:39:09","Actor":"dsplaisted","Number":"3172","RawContent":null,"Title":"Ignore NuGet warning NU5123 (for long paths)","State":"closed","Body":"#3132 added a test project with a long path in it (HelloWorldWithSubDirs).  When we create dotnet tool packages for the tests, we bundle the test assets in them, and this is triggering [NU5123](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5123) [in our builds](https://dev.azure.com/dnceng/internal/_build/results?buildId=166542).\r\n\r\nSo this PR fixes this by ignoring that NuGet warning.","Url":"https://github.com/dotnet/sdk/pull/3172","RelatedDescription":"Closed or merged PR \"Ignore NuGet warning NU5123 (for long paths)\" (#3172)"},{"Id":"435938360","IsPullRequest":true,"CreatedAt":"2019-04-23T21:01:47","Actor":"johnbeisner","Number":"3167","RawContent":null,"Title":"Move the SDK Performance tests to Helix","State":"closed","Body":"Move the SDK Performance tests to Helix\r\n\r\n@MattGal\r\n@DrewScoggins\r\n@adiaaida \r\n","Url":"https://github.com/dotnet/sdk/pull/3167","RelatedDescription":"Closed or merged PR \"Move the SDK Performance tests to Helix\" (#3167)"},{"Id":"436270337","IsPullRequest":true,"CreatedAt":"2019-04-23T18:21:09","Actor":"dsplaisted","Number":"3171","RawContent":null,"Title":"Updates for running tests as tools","State":"closed","Body":"- Allow test execution directory to be specified via command line\r\n- Create .binlogs for basic library building tests (this can help to investigate the environment the tests are running in, which SDK is used, etc.)","Url":"https://github.com/dotnet/sdk/pull/3171","RelatedDescription":"Closed or merged PR \"Updates for running tests as tools\" (#3171)"},{"Id":"436150441","IsPullRequest":true,"CreatedAt":"2019-04-23T13:59:54","Actor":"dotnet-maestro[bot]","Number":"3169","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19222.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3169","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3169)"},{"Id":"436151372","IsPullRequest":false,"CreatedAt":"2019-04-23T12:06:14","Actor":"Rast1234","Number":"3170","RawContent":null,"Title":"dotnet test without shared runtime","State":"open","Body":"Currently we run our apps with heavily customized corporate docker image. We publish self-contained apps, because we deemed it too time consuming and potentially problematic to get shared runtime to run in there.\r\nSo basically we do this (extra stuff omitted) in microsoft's SDK image:\r\n```dockerfile\r\nRUN dotnet restore \"Foo.csproj\" --runtime linux-x64\r\nRUN dotnet build \"Foo.csproj\" --runtime linux-x64 --no-restore \r\nRUN dotnet publish \"Foo.csproj\" --runtime linux-x64 --no-restore --self-contained\r\n```\r\nThen we copy results to our image and just run the binary.\r\n\r\nIs it possible to publish and run tests the same way? I am aware that test project is not executable by itself and requires a test runner. Test runner relies on shared runtime AFAIK. Can we get a self-contained test runner somehow? Or integrate it into test project maybe?","Url":"https://github.com/dotnet/sdk/issues/3170","RelatedDescription":"Open issue \"dotnet test without shared runtime\" (#3170)"},{"Id":"436140961","IsPullRequest":false,"CreatedAt":"2019-04-23T11:39:08","Actor":"vitek-karas","Number":"3168","RawContent":null,"Title":"dotnet store fails with \"the destination is a folder instead of a file\" in 3.0 SDK","State":"open","Body":"This is based on the repro from dotnet/cli#11223 which can be found [here](https://github.com/narcis-pv/dotnet-core-target-manifest-bug).\r\n\r\nRunning the `dotnet store` command described in the repro with .NET Core SDK 3.0.100-preview6-011540 produces error like this:\r\n```\r\nMicrosoft (R) Build Engine version 16.1.65-preview+gc86abee47b for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 929.46 ms for F:\\AppModel\\repro\\dotnet-core-target-manifest-bug-master\\TargetManifestBug.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011540\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ComposeStore.targets(347,5): error MSB3024: Could not copy the file \"F:\\AppModel\\repro\\dotnet-core-target-manifest-bug-master\\obj\\Debug\\netcoreapp2.2\\win7-x64\\TargetManifestBug.exe\" to the destination file \"C:\\Users\\vitkaras\\.dotnet\\store\\x64\\netcoreapp2.2\\\", because the destination is a folder instead of a file. To copy the source file into a folder, consider using the DestinationFolder parameter instead of DestinationFiles. [F:\\AppModel\\repro\\dotnet-core-target-manifest-bug-master\\TargetManifestBug.csproj]\r\n  Files were composed in C:\\Users\\vitkaras\\.dotnet\\store\\x64\\netcoreapp2.2\\\r\n  The list of packages stored is in C:\\Users\\vitkaras\\.dotnet\\store\\x64\\netcoreapp2.2\\artifact.xml\r\n```\r\n\r\nRunning the same on .NET Core SDK 2.2.100 (using `global.json`) works just fine.\r\nSeems like a regression in 3.0.","Url":"https://github.com/dotnet/sdk/issues/3168","RelatedDescription":"Open issue \"dotnet store fails with \"the destination is a folder instead of a file\" in 3.0 SDK\" (#3168)"},{"Id":"435563213","IsPullRequest":true,"CreatedAt":"2019-04-22T18:27:06","Actor":"wli3","Number":"3163","RawContent":null,"Title":"Update branding to preview 6","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3163","RelatedDescription":"Closed or merged PR \"Update branding to preview 6\" (#3163)"},{"Id":"435560822","IsPullRequest":true,"CreatedAt":"2019-04-22T17:51:40","Actor":"wli3","Number":"3162","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3162","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview5\" (#3162)"},{"Id":"435738707","IsPullRequest":false,"CreatedAt":"2019-04-22T14:05:48","Actor":"bryanfarrell","Number":"3166","RawContent":null,"Title":"GenerateAssemblyInfo support for InternalsVisibleToAttribute and AssemblyMetadataAttribute","State":"open","Body":"Hello,\r\n\r\nIn our .NET 4.7.2 applications we set the InternalsVisibleTo attribute on our libraries so that our internal unit test projects can run unit tests on internal methods without having to go through the trouble of putting public signatures of these methods into the class and wrapping everything in preprocessor directives.\r\n\r\nWe also make use of the AssemblyMetadata attribute to have our build system add vital diagnostic information to our assemblies so that there is never an issue with identifying when a project was built, from what repo commit etc.  This has made identifying and fixing bugs much easier more efficient.\r\n\r\nTo set these values we've manually set the InternalsVisibleTo attribute at design time into the AssemblyInfo.cs file.  We also have our build system inject the values into the AssemblyInfo.cs file at build time during the build (but the changes are not committed as the metadata all build version related metadata).\r\n\r\nIn .NET Standard and Core we've found that the common Assembly Attributes are now set in the project file.  Do you have plans to add these other attributes to the Microsoft.NET.GenerateAssemblyInfo.targets file so that they an be included in the project file so the new generate assembly info functionality can support adding these to the output assembly?\r\n\r\nWe have read there is a workaround where we can set the property GenerateAssemblyInfo to False and add an AssemblyInfo.cs file to the .NET Standard/Core projects but we would rather not use this workaround.  For one we do not know how long it will be supported and also we do not know if it will break the new project build workflow in some way.\r\n\r\nCan you please provide some advice on how these attributes can be used in .NET Standard/Core project files without the workaround or an indication if you plan on adding support for them to the Microsoft.NET.GenerateAssemblyInfo.targets file?\r\n\r\nThank you,\r\n\r\nBryan","Url":"https://github.com/dotnet/sdk/issues/3166","RelatedDescription":"Open issue \"GenerateAssemblyInfo support for InternalsVisibleToAttribute and AssemblyMetadataAttribute\" (#3166)"},{"Id":"435703501","IsPullRequest":true,"CreatedAt":"2019-04-22T12:01:40","Actor":"dotnet-bot","Number":"3165","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3165","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#3165)"},{"Id":"435688151","IsPullRequest":false,"CreatedAt":"2019-04-22T10:56:31","Actor":"raffaeler","Number":"3164","RawContent":null,"Title":"Error parsing dotnet publish parameters when using ReadyToRun ","State":"open","Body":"Version:   3.0.100-preview5-011507\r\nCommit:    fddc070d00\r\n\r\nWhen running `dotnet publish` using both `-p:ReadyToRun` and `--self-contained` the message is misleading:\r\n\r\n```\r\n$ dotnet publish -c Release -r linux-arm --self-contained -p:ReadyToRun=true -o scd\r\nMicrosoft (R) Build Engine version 16.1.65-preview+gc86abee47b for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/opt/dotnet/sdk/3.0.100-preview5-011507/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.TargetingPackResolution.targets(85,33): error MSB4030: \"-p:ReadyToRun=true\" is an invalid value for the \"SelfContained\" parameter of the \"ResolveFrameworkReferences\" task.\r\nThe \"SelfContained\" parameter is of type \"System.Boolean\". [/home/pi/test3/test3.csproj]\r\n```\r\n\r\nIf instead, I specify `=true` the command succeed:\r\n```\r\n $ dotnet publish -c Release -r linux-arm --self-contained=true -p:ReadyToRun=true -o scd\r\nMicrosoft (R) Build Engine version 16.1.65-preview+gc86abee47b for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 372.72 ms for /home/pi/test3/test3.csproj.\r\n/opt/dotnet/sdk/3.0.100-preview5-011507/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/home/pi/test3/test3.csproj]\r\n  test3 -> /home/pi/test3/bin/Release/netcoreapp3.0/linux-arm/test3.dll\r\n  test3 -> /home/pi/test3/bin/Release/netcoreapp3.0/linux-arm/test3.Views.dll\r\n  test3 -> /home/pi/test3/scd/\r\n```\r\nIt looks like `-p:ReadyToRun` already forces `--self-contained=true` but I would like the command output to clearly states whether the produced output is self-contained or not.\r\n\r\nBy the way, the parameter `--self-contained` can be used alone (without `=true`) and it has been possible even in .NET Core 2.x. The following command is valid and succeeds:\r\n```\r\ndotnet publish -c Release -r linux-arm --self-contained -o abc\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3164","RelatedDescription":"Open issue \"Error parsing dotnet publish parameters when using ReadyToRun \" (#3164)"},{"Id":"435008587","IsPullRequest":false,"CreatedAt":"2019-04-22T03:53:29","Actor":"sbomer","Number":"3145","RawContent":null,"Title":"TestAsTools job fails with latest SDK","State":"closed","Body":"See the failures in https://github.com/dotnet/sdk/pull/3133:\r\n```\r\nF:\\workspace\\_work\\1\\s\\src\\Tests\\Directory.Build.targets(56,5): error MSB3073: The command \"dotnet tool install --local testSdkRestore --version 3.0.100-ci --add-source F:\\workspace\\_work\\1\\s\\artifacts\\packages\\Debug\\NonShipping\\\" exited with code 1. [F:\\workspace\\_work\\1\\s\\src\\Tests\\Microsoft.NET.Restore.Tests\\Microsoft.NET.Restore.Tests.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3145","RelatedDescription":"Closed issue \"TestAsTools job fails with latest SDK\" (#3145)"},{"Id":"435154253","IsPullRequest":true,"CreatedAt":"2019-04-22T03:00:10","Actor":"dotnet-bot","Number":"3149","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3149","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3149)"},{"Id":"435484986","IsPullRequest":false,"CreatedAt":"2019-04-21T07:46:06","Actor":"JamesNK","Number":"3161","RawContent":null,"Title":".NET Core 3 does not load pdbs from NuGet packages","State":"open","Body":"Source Link does not work when a NuGet package has its PDB files in the primary nupkg package because the symbols are never loaded. It works in .NET Core 2.2.\r\n\r\nRepo: [ConsoleApp20.zip](https://github.com/dotnet/sdk/files/3101009/ConsoleApp20.zip)\r\n\r\nSuccess:\r\n\r\n1. View csproj and note that the version target framework is `netcoreapp2.2`\r\n2. Launch console with debugging and step into JsonConvert.SerializeObject\r\n3. Source Link downloads and opens source code file\r\n\r\nFailure:\r\n\r\n1. Change csproj target framework to `netcoreapp3.0`\r\n2. Launch console with debugging and step into JsonConvert.SerializeObject\r\n3. Visual Studio steps over the Newtonsoft.Json API.\r\n\r\nVS 2019 16.1 Preview 1\r\n.NET Core 3.0.100-preview5-011367","Url":"https://github.com/dotnet/sdk/issues/3161","RelatedDescription":"Open issue \".NET Core 3 does not load pdbs from NuGet packages\" (#3161)"},{"Id":"435390745","IsPullRequest":true,"CreatedAt":"2019-04-20T13:26:35","Actor":"dotnet-maestro[bot]","Number":"3160","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.7\r\n- **Date Produced**: 4/19/2019 12:41 AM\r\n- **Commit**: 5e7ce5b394f3477bb0a485a4b761b7742e95be37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19218.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3160","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3160)"},{"Id":"435366474","IsPullRequest":false,"CreatedAt":"2019-04-20T07:27:03","Actor":"nguyenquyhy","Number":"3159","RawContent":null,"Title":"Getting \"GenerateDepsFile\" task failed unexpectedly with KeyNotFoundException when publishing project","State":"open","Body":"I am getting `\"GenerateDepsFile\" task failed unexpectedly` with `KeyNotFoundException` when publishing my projects.\r\n\r\nBelow are the conditions that trigger the issue:\r\n- .NET Core 3.0 Preview 4\r\n- WindowsAzure.Storage 9.3.3 is in a .NET Standard library\r\n\r\nThis can be fixed by either going back to Preview 3 or add WindowsAzure.Storage directly into the .NET Core project.\r\n\r\nError in build log:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011223\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(801,5): Error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly.\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at Microsoft.NET.Build.Tasks.DependencyContextBuilder2.CalculateExcludedLibraries() in /_/src/Tasks/Microsoft.NET.Build.Tasks/DependencyContextBuilder2.cs:line 769\r\n   at Microsoft.NET.Build.Tasks.DependencyContextBuilder2.Build() in /_/src/Tasks/Microsoft.NET.Build.Tasks/DependencyContextBuilder2.cs:line 215\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.WriteDepsFileNew(String depsFilePath) in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 248\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 284\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 35\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.Execute() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 262\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nSample repository: https://github.com/nguyenquyhy/IssueWindowsAzureStoragePublish","Url":"https://github.com/dotnet/sdk/issues/3159","RelatedDescription":"Open issue \"Getting \"GenerateDepsFile\" task failed unexpectedly with KeyNotFoundException when publishing project\" (#3159)"},{"Id":"435348681","IsPullRequest":true,"CreatedAt":"2019-04-20T02:51:47","Actor":"swaroop-sridhar","Number":"3158","RawContent":null,"Title":"Mark PDB files generated by R2R as ExcludeFromSingleFile","State":"open","Body":"When published with `PublishReadyToRun=true` and `PublishReadyToRunEmitSymbols=true` certain additional symbol files are generated:\r\nOn Windows: `<app>.ni.pdb`\r\nOn Linux: `<app>.<guid>.map`\r\n\r\nWhen additionally publishing with `PublishSingleFile=true` exclude the above files from being bundled into the single-file output.","Url":"https://github.com/dotnet/sdk/pull/3158","RelatedDescription":"Open PR \"Mark PDB files generated by R2R as ExcludeFromSingleFile\" (#3158)"},{"Id":"435334688","IsPullRequest":true,"CreatedAt":"2019-04-20T02:31:13","Actor":"dotnet-bot","Number":"3155","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3155","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3155)"},{"Id":"435326772","IsPullRequest":true,"CreatedAt":"2019-04-20T02:31:10","Actor":"wli3","Number":"3154","RawContent":null,"Title":"Merge release/3.0.1xx to master 0419","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3154","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master 0419\" (#3154)"},{"Id":"435341558","IsPullRequest":true,"CreatedAt":"2019-04-20T01:12:25","Actor":"sbomer","Number":"3157","RawContent":null,"Title":"Enable native asset filtering","State":"open","Body":"This enables ILLink.Tasks to trim native assets that are no longer necessary after linking managed code. The behavior kicks in whenever the linker runs, but can be disabled by setting `TrimmerKeepNativeAssets`.","Url":"https://github.com/dotnet/sdk/pull/3157","RelatedDescription":"Open PR \"Enable native asset filtering\" (#3157)"},{"Id":"435339950","IsPullRequest":true,"CreatedAt":"2019-04-20T00:53:31","Actor":"sbomer","Number":"3156","RawContent":null,"Title":"ILLink cleanup","State":"open","Body":"Respond to remaining feedback from https://github.com/dotnet/sdk/pull/3125:\r\n- Use default deps generation mode\r\n- Use `TrimmerRootDescriptor` (singular) itemgroup, without a corresponding property\r\n\r\n@swaroop-sridhar The second two commits set the proper linker defaults. I made them part of the same PR to avoid having to fix merge conflicts between these changes.","Url":"https://github.com/dotnet/sdk/pull/3156","RelatedDescription":"Open PR \"ILLink cleanup\" (#3156)"},{"Id":"435265510","IsPullRequest":true,"CreatedAt":"2019-04-19T23:35:53","Actor":"dsplaisted","Number":"3152","RawContent":null,"Title":"Switch to new deps file generation mode by default","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3152","RelatedDescription":"Closed or merged PR \"Switch to new deps file generation mode by default\" (#3152)"},{"Id":"435292738","IsPullRequest":true,"CreatedAt":"2019-04-19T21:52:29","Actor":"wli3","Number":"3153","RawContent":null,"Title":"update stage 0 to 3.0.100-preview5-011481","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3153","RelatedDescription":"Closed or merged PR \"update stage 0 to 3.0.100-preview5-011481\" (#3153)"},{"Id":"435058150","IsPullRequest":true,"CreatedAt":"2019-04-19T19:22:32","Actor":"wli3","Number":"3147","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3147","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3147)"},{"Id":"435254481","IsPullRequest":false,"CreatedAt":"2019-04-19T17:49:58","Actor":"Tratcher","Number":"3151","RawContent":null,"Title":"ResolvePackageAssets InvalidDataException Found invalid data while decoding","State":"open","Body":"```\r\nResolution.targets(233,5): message NETSDK1062: Unable to use package assets cache due to I/O error. This can occur when\r\n the same project is built more than once in parallel. Performance may be degraded, but the build result will not be im\r\npacted. [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\n\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly. [D:\\github\\AspNetCore\\ar\r\ntifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018: System.IO.InvalidDataException: Found invalid data while decoding. [D:\\github\r\n\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\n\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.ValidateHead\r\ner(BinaryReader reader, Byte[] settingsHash) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 529\r\n [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.OpenCacheStr\r\neam(Stream stream, Byte[] settingsHash) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 511 [D:\\\r\ngithub\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReader\r\nFromDisk(ResolvePackageAssets task, Byte[] settingsHash) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets\r\n.cs:line 492 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(Resolv\r\nePackageAssets task) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 440 [D:\\github\\AspNetCore\\a\r\nrtifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups() in /_/s\r\nrc/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 284 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\D\r\nebug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore() in /_/src/\r\nTasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 276 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debu\r\ng\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/Tas\r\nkBase.cs:line 35 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITask\r\nExecutionHost.Execute() [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.Move\r\nNext() [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\n```\r\n\r\nRepo: https://github.com/aspnet/aspnetcore\r\nBranch: master\r\nCommand: `build.cmd -all -pack`\r\nTracking: https://github.com/aspnet/AspNetCore-Internal/issues/2009\r\n\r\nHow does one go about debugging this?","Url":"https://github.com/dotnet/sdk/issues/3151","RelatedDescription":"Open issue \"ResolvePackageAssets InvalidDataException Found invalid data while decoding\" (#3151)"},{"Id":"435059918","IsPullRequest":true,"CreatedAt":"2019-04-19T17:31:27","Actor":"wli3","Number":"3148","RawContent":null,"Title":"Merges/release/2.2.2xx to release/3.0.1xx 2","State":"closed","Body":"Send https://github.com/dotnet/sdk/pull/3139 again. CI is stuck","Url":"https://github.com/dotnet/sdk/pull/3148","RelatedDescription":"Closed or merged PR \"Merges/release/2.2.2xx to release/3.0.1xx 2\" (#3148)"},{"Id":"435154799","IsPullRequest":true,"CreatedAt":"2019-04-19T14:14:42","Actor":"dotnet-maestro[bot]","Number":"3150","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.4\r\n- **Date Produced**: 4/18/2019 10:50 PM\r\n- **Commit**: 1d4c87ff798d7de521128e6c3d890055c2401e80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19218.4\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3150","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3150)"},{"Id":"435021289","IsPullRequest":false,"CreatedAt":"2019-04-19T01:55:09","Actor":"ajaybhargavb","Number":"3146","RawContent":null,"Title":"Internal error: new deps file generation logic did not produce the same result as the old logic","State":"open","Body":"I've included both the old and new deps files here.\r\n\r\n[Microsoft.AspNetCore.Razor.Test.MvcShim.deps.zip](https://github.com/dotnet/sdk/files/3096744/Microsoft.AspNetCore.Razor.Test.MvcShim.deps.zip)\r\n\r\n\r\nOriginal error:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error : Internal error: new deps file generation logic did not produce the same result as the old logic. [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     Please file an issue for this at https://github.com/dotnet/sdk and include the following two files:  [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     Deps file from old logic: C:\\Github\\aspnet\\AspNetCore-Tooling\\artifacts\\bin\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Debug\\netcoreapp3.0\\Microsoft.AspNetCore.Razor.Test.MvcShim.deps.json [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     Deps file from new logic: C:\\Github\\aspnet\\AspNetCore-Tooling\\artifacts\\bin\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Debug\\netcoreapp3.0\\Microsoft.AspNetCore.Razor.Test.MvcShim.deps.new.json [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     You can work around this by setting the DepsFileGenerationMode MSBuild property to 'old' [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\n```\r\n\r\n```\r\ndotnet --info:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview4-011216\r\n Commit:    19c844a865\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27613-07\r\n  Commit:  5c329c85ae\r\n```","Url":"https://github.com/dotnet/sdk/issues/3146","RelatedDescription":"Open issue \"Internal error: new deps file generation logic did not produce the same result as the old logic\" (#3146)"},{"Id":"434990963","IsPullRequest":true,"CreatedAt":"2019-04-18T23:00:24","Actor":"heng-liu","Number":"3144","RawContent":null,"Title":"Insert NuGet Build 5.1.0-preview2.5965 into SDK master","State":"open","Body":"Insert NuGet Build 5.1.0-preview2.5965 into master branch.","Url":"https://github.com/dotnet/sdk/pull/3144","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-preview2.5965 into SDK master\" (#3144)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1120820297974730752","CreatedAt":"2019-04-23T22:42:37+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":5,"RawContent":null},{"Id":"1119356060135907328","CreatedAt":"2019-04-19T21:44:16+00:00","UserScreenname":"dotnet","Text":"Upcoming Updates for .NET Framework 4.8 https://t.co/MYATh2Zg6u","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":86,"FavoriteCount":31,"RawContent":null},{"Id":"1119087634003841025","CreatedAt":"2019-04-19T03:57:38+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.8 is now available. https://t.co/emspxTsaEX","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":379,"FavoriteCount":223,"RawContent":null},{"Id":"1119030394605588480","CreatedAt":"2019-04-19T00:10:11+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3 Preview 4 https://t.co/7QaZC5qmx6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":373,"FavoriteCount":216,"RawContent":null},{"Id":"1118906461180973059","CreatedAt":"2019-04-18T15:57:43+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1118551190927622144","CreatedAt":"2019-04-17T16:26:00+00:00","UserScreenname":"dotnet","Text":"If you're enjoying the DevOps for https://t.co/iOiV9qNspl Developers series on @ch9 check out this FREE ebook from… https://t.co/IlN3xK8cpo","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"1118529550902865924","CreatedAt":"2019-04-17T15:00:00+00:00","UserScreenname":"dotnet","Text":"In part 3 of DevOps For https://t.co/iOiV9r53NV Developers @AbelSquidHead\n&amp; @jeremylikness show us how to create a… https://t.co/s7eQpdTakW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1118196772604530688","CreatedAt":"2019-04-16T16:57:40+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":20,"FavoriteCount":5,"RawContent":null},{"Id":"1116672310809903105","CreatedAt":"2019-04-12T12:00:00+00:00","UserScreenname":"dotnet","Text":"The #OnDotNet show joined forces with @azureadvocates to bring you DevOps for https://t.co/iOiV9r53NV Developers!… https://t.co/eP7EZV54nW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1116372533907902465","CreatedAt":"2019-04-11T16:08:47+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/XI2YUBZA88","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1115751220235231232","CreatedAt":"2019-04-09T22:59:55+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2019-04-24T05:30:29.6528539Z","RunDurationInMilliseconds":8824}