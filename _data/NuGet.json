{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1, released in 1999 and 2006...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11087795232","Type":"IssuesEvent","CreatedAt":"2019-12-14T05:16:13","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7748","RelatedDescription":"Closed issue \"I Can't delete a new create package\" (#7748) at NuGet/NuGetGallery","RelatedBody":"@LuGuangguang commented on [Tue Nov 26 2019](https://github.com/NuGet/Home/issues/8859)\n\nI learn to how to create a package.When I had public a package,I want to delete this. But I can't by the URL \"https://docs.microsoft.com/zh-cn/nuget/quickstart/create-and-publish-a-package-using-visual-studio-net-framework\".This is no the delete button.\r\n \r\nthis doc\r\n![PHZE(IIAT (%RF51${(RNDR](https://user-images.githubusercontent.com/34500722/69702479-47da2a00-112a-11ea-916c-46b7e5464878.jpg)\r\n\r\nthis my project\r\n![L9%FP{ AT56MX)A80PD@3EV](https://user-images.githubusercontent.com/34500722/69702619-98ea1e00-112a-11ea-910e-246141aae206.png)\r\n\r\nThank you!\r\n\r\n\r\n\r\n\n\n"},{"Id":"11087754622","Type":"IssuesEvent","CreatedAt":"2019-12-14T04:52:33","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7759","RelatedDescription":"Closed issue \"The package does not pass validation\" (#7759) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nThe project has been published many times and is stuck in the Validating step. I don't know why. This is just a small class library\r\n\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. The source address\r\n\r\nhttps://github.com/zhenlei520/System.Extension.Core/tree/release/features-2.0\r\n\r\n2. Release package details\r\n\r\nhttps://www.nuget.org/packages/EInfrastructure.Core.ServiceDiscovery.Consul.AspNetCore/\r\nhttps://www.nuget.org/packages/EInfrastructure.Core.Config.IdentificationExtensions/\r\n\r\n![image](https://user-images.githubusercontent.com/9740886/70515068-ac0bdd80-1b6f-11ea-848a-fd67fec02f46.png)\r\n![image](https://user-images.githubusercontent.com/9740886/70515110-bd54ea00-1b6f-11ea-96d6-310e90e17f19.png)\r\n\r\n\r\n"},{"Id":"11087752936","Type":"IssuesEvent","CreatedAt":"2019-12-14T04:51:36","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7760","RelatedDescription":"Closed issue \"Show license from README.md file\" (#7760) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nThere is a package where NuGet doesn't show license https://www.nuget.org/packages/DNS/.\r\n[README.md](https://github.com/kapetan/dns/blob/master/README.md#license) has the license inside.\r\n\r\n### Describe the solution you'd like\r\nShow license in NuGet gallery\r\n\r\n### Additional context\r\n![image](https://user-images.githubusercontent.com/580536/70518186-97fdb700-1b42-11ea-8ea8-773ea6f177e2.png)\r\n![image](https://user-images.githubusercontent.com/580536/70518204-a0ee8880-1b42-11ea-8968-ddf97dc3f525.png)\r\n"},{"Id":"11087663010","Type":"PullRequestEvent","CreatedAt":"2019-12-14T03:58:48","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7771","RelatedDescription":"Opened pull request \"[Token Scanning-Phase 1] Robust UI\" (#7771) at NuGet/NuGetGallery","RelatedBody":"The PR is to fix the following issues:\r\n1. Break the word\r\n![image](https://user-images.githubusercontent.com/41028779/70843124-f4323680-1de1-11ea-950b-f257f8b397c8.png)\r\n\r\n2. Clicking the 'Verify' button should clean up the last action message. \r\n"},{"Id":"11087550088","Type":"PullRequestEvent","CreatedAt":"2019-12-14T02:57:46","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7770","RelatedDescription":"Opened pull request \"Build extensions targets file for build pipelines\" (#7770) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2883\r\n\r\nThis adds an optional point to insert targets file during the build."},{"Id":"11086990968","Type":"PullRequestEvent","CreatedAt":"2019-12-13T23:29:52","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7768","RelatedDescription":"Merged pull request \"Add support for a Usabilla feedback button on every page\" (#7768) at NuGet/NuGetGallery","RelatedBody":"This is behind feature flag `NuGetGallery.UsabillaEveryPage`.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/7385.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70759998-156d2700-1cfd-11ea-98d6-ed45a3244db8.png)\r\n\r\nThe survey questions can be changed from the Usabilla portal.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70760028-3766a980-1cfd-11ea-8729-c97db7a4ffcd.png)\r\n\r\nNote that when the modal opens and the page content does not fill the viewport (i.e. there is no vertical scroll bar, the footer jumps up). I have not found a workaround and there is similar behavior on other websites:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70760084-5ebd7680-1cfd-11ea-85ee-344937f6ab3c.png)\r\n\r\n"},{"Id":"11085342216","Type":"IssuesEvent","CreatedAt":"2019-12-13T18:47:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7769","RelatedDescription":"Opened issue \"[2019-12-16] Deployment\" (#7769) at NuGet/NuGetGallery","RelatedBody":"# NuGetGallery\r\n\r\n- [ ] Merge dev to master\r\n- [ ] DEV\r\n  - [ ] DatabaseMigration.Gallery\r\n  - [ ] NuGetGallery\r\n- [ ] INT\r\n  - [ ] DatabaseMigration.Gallery\r\n  - [ ] NuGetGallery\r\n- [ ] PROD\r\n  - [ ] DatabaseMigration.Gallery\r\n  - [ ] NuGetGallery"},{"Id":"11078838213","Type":"PullRequestEvent","CreatedAt":"2019-12-13T00:35:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7768","RelatedDescription":"Opened pull request \"Add support for a Usabilla feedback button on every page\" (#7768) at NuGet/NuGetGallery","RelatedBody":"This is behind feature flag `NuGetGallery.UsabillaEveryPage`.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/7385.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70759998-156d2700-1cfd-11ea-98d6-ed45a3244db8.png)\r\n\r\nThe survey questions can be changed from the Usabilla portal.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70760028-3766a980-1cfd-11ea-8729-c97db7a4ffcd.png)\r\n\r\nNote that when the modal opens and the page content does not fill the viewport (i.e. there is no vertical scroll bar, the footer jumps up). I have not found a workaround and there is similar behavior on other websites:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70760084-5ebd7680-1cfd-11ea-85ee-344937f6ab3c.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11087338075","Type":"IssuesEvent","CreatedAt":"2019-12-14T01:18:23","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8931","RelatedDescription":"Closed issue \"Temporary Workaround for failing CI due to an issue downloading the dotnet-install script\" (#8931) at NuGet/Home","RelatedBody":"CI is failing due to an issue downloading the dotnet-install script.\r\nNeed a workaround to unblock our builds."},{"Id":"11087069150","Type":"IssuesEvent","CreatedAt":"2019-12-13T23:51:17","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8940","RelatedDescription":"Opened issue \"Broken tests in NuGet.CommandLine.Test for Mono on Mac\" (#8940) at NuGet/Home","RelatedBody":"There're 2 broken tests for mono on Mac:\r\nNuGetListCommandTest.ListCommand_InvalidInput_V3_NotFound(invalidInput: \"https://api.nuget.org/v4/index.json\")\r\nNuGetVerifyCommandTest.VerifyCommand_WithAuthorSignedPackage_FailsGracefully"},{"Id":"11086337323","Type":"IssuesEvent","CreatedAt":"2019-12-13T21:18:38","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8939","RelatedDescription":"Opened issue \"Broken test in SigningUtilityTests(unit test)\" (#8939) at NuGet/Home","RelatedBody":"In  SigningUtilityTests(unit test),  3 tests  failed on Linux and Mac.\r\nThey're:\r\n```\r\nSignAsync_WhenChainBuildingFails_ThrowsAsync\r\nSignAsync_WhenPackageEntryCountWouldRequireZip64_FailsAsync\r\nSignAsync_WithUntrustedSelfSignedCertificate_SucceedsAsync\r\n```\r\n"},{"Id":"11086273993","Type":"IssuesEvent","CreatedAt":"2019-12-13T21:07:45","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8938","RelatedDescription":"Opened issue \"Broken test in TimestampProviderTests\" (#8938) at NuGet/Home","RelatedBody":"In TimestampProviderTests, there're 3 tests failed on Windows(net472).\r\nThe list is:\r\n```\r\nGetTimestampAsync_WhenRequestNull_ThrowsAsync\r\nGetTimestampAsync_WhenLoggerNull_ThrowsAsync\r\nGetTimestampAsync_WhenCancelled_ThrowsAsync\r\n```\r\n"},{"Id":"11086259540","Type":"IssuesEvent","CreatedAt":"2019-12-13T21:05:16","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8937","RelatedDescription":"Opened issue \"Broken test in  SignatureUtilityTests(functional test)\" (#8937) at NuGet/Home","RelatedBody":"In  SignatureUtilityTests(functional test), GetTimestampCertificateChain_WithNoSigningCertificateUsage_Throws failed on Windows(netcore), Linux and Mac"},{"Id":"11086252319","Type":"IssuesEvent","CreatedAt":"2019-12-13T21:04:03","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8936","RelatedDescription":"Opened issue \"Linux machines failing CI builds due to dotnet-install connection problem\" (#8936) at NuGet/Home","RelatedBody":"Linux Machines are failing to run Functional Tests when attempting to run dotnet-install.sh.\r\nThere appears to be some network configuration or connectivity problem.\r\n\r\nExample failing builds:\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3298450\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3298446\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3298399\r\n\r\nAs a temporary workaround, I placed the resolved script directly into our build folder: https://github.com/NuGet/Home/issues/8931\r\n\r\n[This build](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=3317306) calls  curl -o cli/dotnet-install.sh -L -v https://dot.net/v1/dotnet-install.sh.  curl follows a redirection to https://dotnet.microsoft.com/download/dotnet-core/scripts/v1/dotnet-install.sh but is then unable to reach that URL.\r\n\r\n@dtivel  noticed that curl tries using the IPv6 address, so he forced IPv4 in [this build](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=3317526), but the overall failure is still the same."},{"Id":"11086225999","Type":"IssuesEvent","CreatedAt":"2019-12-13T20:59:47","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8935","RelatedDescription":"Opened issue \"Broken test in TimestampTests\" (#8935) at NuGet/Home","RelatedBody":"In TimestampTests,\r\ntest Timestamp_Verify_WithOfflineRevocation_ReturnsCorrectFlagsAndLogsAsync  failed on Linux and Mac."},{"Id":"11086152570","Type":"IssuesEvent","CreatedAt":"2019-12-13T20:47:43","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8934","RelatedDescription":"Opened issue \" Broken test in SignatureTrustAndValidityVerificationProviderTests(functional test)\" (#8934) at NuGet/Home","RelatedBody":"In SignatureTrustAndValidityVerificationProviderTests(functional test), \r\nthere're 19 tests failed on Mac , 15 on Linux, 1 on Windows(netcore)\r\nThe list is :\r\nOn Mac:\r\n```\r\n1.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync   \r\n2.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOnlineRevocationMode_WarnsAsync   \r\n3..GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOfflineRevocationMode_WarnsAsync    \r\n4.GetTrustResultAsync_WithTrustedButExpiredPrimaryAndTimestampCertificates_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WarnsAsync    \r\n5.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync    \r\n6.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync   \r\n7.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync    \r\n8.GetTrustResultAsync_WithUnavailableRevocationInformationInVerify_WarnsAsync   \r\n9.GetTrustResultAsync_WithTimestampChainingToUntrustedRoot_NotAllowIgnoreTimestamp_FailAsync    \r\n10.GetTrustResultAsync_WithUnavailableRevocationInformationInRequireMode_WarnsAsync     \r\n11.AuthorPrimarySignatures.GetTrustResultAsync_WithRevokedTimestampCertificate_ReturnsStatusAsync(allowIgnoreTimestamp: False, expectedStatus: Disallowed)\r\n12.AuthorPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: True)\r\n13.AuthorPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: False)\r\n14.RepositoryPrimarySignatures.GetTrustResultAsync_WithRevokedTimestampCertificate_ReturnsStatusAsync(allowIgnoreTimestamp: False, expectedStatus: Disallowed)\r\n15.RepositoryPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: False) \r\n16.RepositoryPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: True)\r\n17.RepositoryCountersignatures.VerifyAsync_WithRevokedTimestampCertificate_ReturnsStatusAsync(allowIgnoreTimestamp: False, expectedStatus: Disallowed)\r\n18.RepositoryCountersignatures.VerifyAsync_WithRevokedCountersignatureCertificate_ReturnsSuspectAsync(allowEverything: True)   \r\n19.RepositoryCountersignatures.VerifyAsync_WithRevokedCountersignatureCertificate_ReturnsSuspectAsync(allowEverything: False)\r\n```\r\n\r\nOn Linux:\r\n```\r\n1.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync\r\n2.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOnlineRevocationMode_WarnsAsync \r\n3.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowIllegal_WarnsAsync\r\n4.GetTrustResultAsync_WithUnavailableRevocationInformationInAcceptMode_DoesNotWarnAsync\r\n5.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOfflineRevocationMode_WarnsAsync \r\n6.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_InAllowedUntrustedRootList_AllowUntrustedFalse_SucceedsAsync\r\n7.GetTrustResultAsync_WithTrustedButExpiredPrimaryAndTimestampCertificates_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WarnsAsync\r\n8.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync \r\n9.GetTrustResultAsync_WithSignedAndCountersignedPackage_SucceedsAsync\r\n10.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync\r\n11.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync\r\n12.GetTrustResultAsync_WithUnavailableRevocationInformationInVerify_WarnsAsync\r\n13.GetTrustResultAsync_WithSignedTimestampedCountersignedAndCountersignatureTimestampedPackage_SucceedsAsync\r\n14.GetTrustResultAsync_WithTimestampChainingToUntrustedRoot_NotAllowIgnoreTimestamp_FailAsync\r\n15.GetTrustResultAsync_WithUnavailableRevocationInformationInRequireMode_WarnsAsync\r\n```\r\n\r\nOn Windows(netcore):\r\n`RepositoryCountersignatures.VerifyAsync_WithRevokedCountersignatureCertificate_ReturnsSuspectAsync`"},{"Id":"11085992478","Type":"IssuesEvent","CreatedAt":"2019-12-13T20:21:06","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8933","RelatedDescription":"Opened issue \"Broken test in SignatureTest\" (#8933) at NuGet/Home","RelatedBody":"In SignatureTest,  Verify_WithUntrustedSelfSignedCertificateAndNotAllowUntrusted_FailsAsync failed on Linux and Mac"},{"Id":"11085664458","Type":"IssuesEvent","CreatedAt":"2019-12-13T19:33:46","Actor":"krafs","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8932","RelatedDescription":"Opened issue \"Dependency resolution only within same repository\" (#8932) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used:\r\nNuGet.exe\r\n\r\nNuGet version:\r\n5.4.0.6315\r\n\r\nOS version:\r\n10.0.18363 Build 18363\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Add new source (e.g. **simple-source**) to _nuget.config_\r\n\r\n2. Add a new package (e.g. **startup**) to **simple-source**\r\n\r\n3. Install the package: `nuget install startup -source simple-source`\r\n\r\nNuGet successfully installs **startup**, but then attempts to resolve any dependencies it might have. It seems to do this by searching for the package in simple-source **and** nuget.org. The problem is this: If a different package, on nuget.org, also happens to be named **startup**, nuget.exe will resolve the dependency of that package instead of (in addition to?) mine.\r\n\r\nNow, maybe there is a command to tell nuget.exe to only resolve dependencies in a specific repository? Because I like having several sources specified in my nuget.config, but I want to be able to choose between them - not only for the one package, but for all the dependent packages as well.\r\n\r\nEven if I enforce unique package id on all packages, maybe some other developer uploads a package to nuget.org that is unique there, but that conflicts with a package on my private feed. So the next time I install that package from my own feed, it would suddenly also download any and all dependency of that new package over at nuget.org\r\n\r\nIs this already a feature, that I've missed?\r\n"},{"Id":"11085470265","Type":"IssuesEvent","CreatedAt":"2019-12-13T19:05:52","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8931","RelatedDescription":"Opened issue \"CI is failing due to an issue downloading the dotnet-install script\" (#8931) at NuGet/Home","RelatedBody":"CI is failing due to an issue downloading the dotnet-install script."},{"Id":"11083303687","Type":"IssuesEvent","CreatedAt":"2019-12-13T14:11:51","Actor":"JurjenBiewenga","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8930","RelatedDescription":"Opened issue \"Pushing large package to ProGet Server results in a 400 bad request with `There must be exactly one package.` as reason\" (#8930) at NuGet/Home","RelatedBody":"NuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0.6315, 4.9.2.5706, and 3.4.4.1321\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1909 (18363.476)\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Setup a ProGet server with a chocolatey/nuget v2 feed\r\n\r\n2. Try to push a package bigger than 4.5G\r\n\r\n## Other suggested things\r\n\r\n3.4.4 does appear to work but it hits a timeout however patching the timeout ends up giving the same error.\r\n\r\nThis appears similar to #7228 however we have no success at all with pushing.\r\n\r\n### Verbose Logs\r\n\r\n```NuGet Version: 5.4.0.6315\r\nPushing SW-35.3.5.0-Alpha12.nupkg to 'https://proget.clevr.net/nuget/Projects/'...\r\n  PUT https://proget.clevr.net/nuget/Projects/\r\n  BadRequest https://proget.clevr.net/nuget/Projects/ 222346ms\r\nResponse status code does not indicate success: 400 (There must be exactly one package.).\r\nSystem.Net.Http.HttpRequestException: Response status code does not indicate success: 400 (There must be exactly one package.).\r\n   at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.EnsureSuccessStatusCode(HttpResponseMessage response, Nullable`1 codeNotToThrow, ILogger logger)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<>c__DisplayClass23_0.<PushPackageToServer>b__0(HttpResponseMessage response)\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__18`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageToServer>d__23.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageCore>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackage>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<Push>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.PushRunner.<Run>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.PushCommand.<ExecuteCommandAsync>d__36.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)```\r\n"},{"Id":"11082556061","Type":"IssuesEvent","CreatedAt":"2019-12-13T12:25:52","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8929","RelatedDescription":"Opened issue \"[Test Failure][Unstable] An error occurred while applying transformation to 'Web.config' when updating packages in ASP.NET Web Forms Site project\" (#8929) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.5.0.6346\r\nVS Version: Master\\29612.110\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Launch VS and click 'Create a New Project' button.\r\n2. Create an ASP.NET Web Forms Site project.\r\n3. Open PM UI of this project and go to ‘Update’ tab.\r\n4. Select all packages and click ‘Update’ button.\r\n## Expected\r\nIt is successful to update all the packages.\r\n## Actual\r\nAn error occurred while applying transformation to 'Web.config' when updating packages as below screenshot.\r\n![AnErrorOccurred](https://user-images.githubusercontent.com/20632625/70800124-686ed900-1de6-11ea-875a-94e2da1cef28.PNG)\r\n\r\n## Note\r\n1. Unstable issue, the repro rate is 50%.\r\n2. It didn’t repro on 16.5 Preview1: D16.5\\29521.150 (with implicit NuGet Client 5.5.0.6293)."},{"Id":"11082525908","Type":"IssuesEvent","CreatedAt":"2019-12-13T12:21:08","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8928","RelatedDescription":"Opened issue \"[Test Failure] Updating package ‘EntityFramework’ need to restart VS for 3 times\" (#8928) at NuGet/Home","RelatedBody":"##  Details about Problem\r\nNuGet version: NuGet Client Dev\\5.5.0.6346\r\nVS Version: Master\\29612.110\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps\r\n1. Launch VS and click “Create a New Project” button.\r\n2. Create an ASP.NET Web Application (.NET Framework) project (Single Page Application).\r\n3. Open PM UI of this project and go to ‘Update’ tab.\r\n4. Select all packages and click ‘Update’ button.\r\n## Expected\r\nUpdating package ‘EntityFramework’ from version 6.2.0 to 6.4.0 need to restart VS for only 1 time.\r\n## Actual\r\nUpdating package ‘EntityFramework’ from version 6.2.0 to 6.4.0 need to restart VS for 3 times as below screenshot. That’s boring to restart VS just for uninstalling the same package ‘EntityFramework.6.2.0’.\r\n![ThreeTimeRestartRequest](https://user-images.githubusercontent.com/20632625/70799964-ff876100-1de5-11ea-8509-ad61df4236f1.png)\r\n## Note\r\nIt didn’t repro on 16.5 Preview1: D16.5\\29521.150 (with implicit NuGet Client 5.5.0.6293)\r\n"},{"Id":"11079345251","Type":"IssuesEvent","CreatedAt":"2019-12-13T02:39:01","Actor":"SotoiGhost","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8694","RelatedDescription":"Closed issue \"Adding a NuGet package to Visual Studio does not add .targets and .props files of package dependencies\" (#8694) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nIt seems that **.targets** and **.props** files of dependencies packages are not being added correctly to the **project.assets.json** file or to **Foo.csproj.nuget.g.props** and **Foo.csproj.nuget.g.targets** files. These files are added until you explicitly add the NuGet package to the project.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nThis happens with Visual Studio 2019 16.3 on Windows, Visual Studio for Mac Version 8.3.3 (build 8), also with Mono's MSBuild when using /t:restore the nuget.g.props and nuget.g.targets files do not contain dependencies.\r\n\r\nNuGet version: 5.3.0.6192\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100\r\n\r\nVS version (if appropriate): Visual Studio 2019 16.3 on Windows, Visual Studio for Mac Version 8.3.3 (build 8)\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): macOS Mojave 10.14.6 (18G103)\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nTest case: [AdMobTest.zip](https://github.com/NuGet/Home/files/3725941/AdMobTest.zip)\r\n\r\nSteps to reproduce the error:\r\n\r\n1. Open the test case.\r\n2. Add the `Xamarin.Firebase.iOS.Analytics` package.\r\n3. Build.\r\n\r\nWhen it fails, open the **AdMobTest.csproj.nuget.g.targets** and it will be just 1 import when it should be 3 imports due to dependencies. \r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n[log.txt](https://github.com/NuGet/Home/files/3726527/log.txt)\r\n\r\nThe workaround for this by now is to add NuGet dependencies explicitly to your project."},{"Id":"11079188188","Type":"IssuesEvent","CreatedAt":"2019-12-13T02:00:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8927","RelatedDescription":"Opened issue \"Add more settings tests - completely cover project\\sln level support across products\" (#8927) at NuGet/Home","RelatedBody":"Add more settings tests - completely cover project\\sln level support across products"},{"Id":"11078645161","Type":"IssuesEvent","CreatedAt":"2019-12-12T23:53:14","Actor":"Whiletru3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8926","RelatedDescription":"Opened issue \"nuspec with dll, native and content in output folder\" (#8926) at NuGet/Home","RelatedBody":"Hello\r\n\r\nI try to create a nuget package with existing dlls and content files\r\n\r\nI have to reference one dll (c++/cli), add some native dlls and copy to output and add one folder with files to output path. I read the nuspec documentation ( https://docs.microsoft.com/en-us/nuget/reference/nuspec ) but it is unclear...\r\n\r\nHere is the folder structure :\r\nbin\\xxx*.dll -> all the binaries c++/cli and native \r\nresources\\*.* -> all the content files\r\n\r\nafter install of nuget package, it should :\r\n- reference xxxnet.dll (c++/cli) in project\r\n- copy all native dlls in output path\r\n- copy the folder resources with all the files in output path\r\n\r\nHere is my current nuspec file :\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<package  xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>    \r\n    <id>xxx.x64</id>\r\n    <version>15.5.3.3</version>\r\n    <title>xxx toolkit</title>\r\n    <authors>xxx</authors>\r\n    <owners>xxx</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>xxx x64 Windows</description>\r\n    <releaseNotes></releaseNotes>\r\n    <copyright>2019</copyright>\r\n    <tags></tags>\r\n    <references>\r\n        <reference file=\"xxxnet.dll\" />\r\n    </references>\r\n    <!-- <contentFiles> -->\r\n        <!-- <files include=\"ressources\\*.*\"  buildAction=\"None\" copyToOutput=\"true\" /> -->\r\n        <!-- <files include=\"bin\\xxx*.dll\" exclude=\"bin\\xxxnet.dll\" flatten=\"true\" buildAction=\"None\" copyToOutput=\"true\" /> -->\r\n    <!-- </contentFiles> -->\r\n  </metadata>\r\n  <files>\r\n    <file src=\"bin\\xxxnet.dll\" target=\"lib\\any\" />\r\n    <file src=\"resources\\*.*\"  target=\"content\\resources\"  />\r\n    <file src=\"bin\\xxx*.dll\" exclude=\"bin\\xxxnet.dll\" target=\"content\" />\r\n  </files>\r\n</package>\r\n```\r\nI already tried contentFiles, references but it doesn't work and now i'm lost.\r\nAny example whould be great\r\n\r\nThanks"},{"Id":"11078076368","Type":"IssuesEvent","CreatedAt":"2019-12-12T22:08:02","Actor":"bmajik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8925","RelatedDescription":"Opened issue \"vs/nuget/nugetaction telemetry doesn't log info about currently installed packages\" (#8925) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\n\r\nNuGet version (x.x.x.xxx): 5.5.0.0\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate): Dev16\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win10 1909\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Use VS UI to add/remove/update packages from either a dotnet core or bigdotnet project\r\n\r\n2. Use telemetry monitor to watch for vs/nuget/nugetaction event\r\n\r\nExpected: a property of some kind on the event showing richer information about the packages already installed when the user chose to modify the installed packageset somehow.  Specificallly, hashes of the package names and package versions. \r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nAny project will show the issue\r\n\r\n"},{"Id":"11077116022","Type":"IssuesEvent","CreatedAt":"2019-12-12T19:50:31","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8924","RelatedDescription":"Opened issue \"Improving search by providing package recommendations\" (#8924) at NuGet/Home","RelatedBody":"Deliver spec to explore business/technical options.\nClient side and/or Server side?\netc..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-12-14T05:30:42.452066Z","RunDurationInMilliseconds":2038}