{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ML.NET 1.0 RC – Machine Learning for .NET","PublishedOn":"2019-04-05T23:36:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0-rc-machine-learning-for-net/","RawContent":null},{"Title":".NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-04-02T21:47:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Visual Studio 2019 .NET productivity","PublishedOn":"2019-04-02T19:00:17+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Your friendly neighborhood .NET productivity team (aka. Roslyn) focuses a lot on improving the .NET coding experience. Sometimes it’s the little refactorings and code fixes that really improve your...","Href":"https://devblogs.microsoft.com/dotnet/visual-studio-2019-net-productivity-2/","RawContent":null},{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2019-04-02T10:40:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,019 years. In the Japanese calendar, however, a new era begins...","Href":"https://devblogs.microsoft.com/dotnet/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":"Announcing F# 4.6","PublishedOn":"2019-03-29T21:40:28+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce general availability of F# 4.6 and the F# tools for Visual Studio 2019! In this post, I&#8217;ll show you how to get started, explain the F# 4.6 feature set, give you...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-6/","RawContent":null},{"Title":"Migrating Delegate.BeginInvoke Calls for .NET Core","PublishedOn":"2019-03-28T21:29:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I recently worked with a couple customers migrating applications to .NET Core that had to make code changes to workaround BeginInvoke and EndInvoke methods on delegates not being supported on .NET...","Href":"https://devblogs.microsoft.com/dotnet/migrating-delegate-begininvoke-calls-for-net-core/","RawContent":null},{"Title":".NET Framework March 2019 Update","PublishedOn":"2019-03-20T00:40:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddresses an issue in which the Framework throws an...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/","RawContent":null},{"Title":".NET Core Container Images now Published to Microsoft Container Registry","PublishedOn":"2019-03-15T14:12:09+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We are now publishing .NET Core container images to Microsoft Container Registry (MCR). We have also made other changes to the images we publish, described in this post.\nImportant: You will need to...","Href":"https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/","RawContent":null},{"Title":".NET Core March 2019 Updates – 1.0.15, 1.1.12, 2.1.9 and 2.2.3","PublishedOn":"2019-03-12T22:59:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core March 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes.\n\n.NET Core...","Href":"https://devblogs.microsoft.com/dotnet/net-core-march-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.11 – Machine Learning for .NET","PublishedOn":"2019-03-09T01:03:28+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-0-11-machine-learning-for-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9341532248","Type":"PullRequestEvent","CreatedAt":"2019-03-29T14:44:24","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Merged pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337730849","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:29:48","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Opened pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337725308","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Opened pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9337679090","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:16:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Merged pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9337677839","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:15:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Merged pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335742237","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:21:55","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Opened pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335605309","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:00:02","Actor":"scottaddie","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Opened pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9266562420","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:04:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Merged pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""},{"Id":"9266559615","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:03:34","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Merged pull request \"Add Dave to cake.md\" (#138) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9228689700","Type":"IssuesEvent","CreatedAt":"2019-03-12T17:35:17","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Opened issue \"March 2019 .NET Updates\" (#103) at dotnet/announcements","RelatedBody":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0))\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9150531193","Type":"IssuesEvent","CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Opened issue \"SDK Installers will remove previous patch versions\" (#102) at dotnet/announcements","RelatedBody":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions)."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9390297367","Type":"PullRequestEvent","CreatedAt":"2019-04-06T03:32:17","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23708","RelatedDescription":"Merged pull request \"Nullable: System.Text\" (#23708) at dotnet/coreclr","RelatedBody":""},{"Id":"9390283562","Type":"PullRequestEvent","CreatedAt":"2019-04-06T03:23:57","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22875","RelatedDescription":"Closed pull request \"[WIP] Helpers to support Intrinsics in SpanHelpers.Char\" (#22875) at dotnet/coreclr","RelatedBody":"Common helper methods to support the PRs (will base them on this PR)"},{"Id":"9390282988","Type":"PullRequestEvent","CreatedAt":"2019-04-06T03:23:37","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23731","RelatedDescription":"Merged pull request \"Match PtrToStringUTF8 to the other PtrToString* families.\" (#23731) at dotnet/coreclr","RelatedBody":"Fixes #23723.\r\n\r\nI decided to keep `PtrToStringUTF8` throwing an `ArgumentOutOfRangeException` so that we were consistent there with prior behavior, and since an `ArgumentOutOfRangeException` inherits from `ArgumentException` it still fulfills the contract for the wrapping `PtrToStringAuto`."},{"Id":"9390282984","Type":"IssuesEvent","CreatedAt":"2019-04-06T03:23:37","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/23723","RelatedDescription":"Closed issue \"Marshal.PtrToStringUTF8(IntPtr, int) has a different behavior\" (#23723) at dotnet/coreclr","RelatedBody":"The `Marshal.PtrToStringUTF8(IntPtr, int)` method has a different behavior as compared to the other `Marshal.PtrToString*(IntPtr, int)` methods.\r\n\r\nIn particular, the other `PtrToString` methods will throw if `ptr == IntPtr.Zero`. However, `PtrToStringUTF8` will return `null`.\r\n\r\nWe should resolve these to be consistent."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9389916769","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:01:26","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11080","RelatedDescription":"Opened pull request \"Merge release/3.0.1xx to master\" (#11080) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9390244721","Type":"IssuesEvent","CreatedAt":"2019-04-06T03:00:49","Actor":"benneyman","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1127","RelatedDescription":"Opened issue \"[Help] Targeting netstandard2.0 for a class library\" (#1127) at dotnet/standard","RelatedBody":"After a lot of googling I came to realize that my existing class library(net462) should be targeting netstandard2.0 to be able to reference into my react app (dotnet new react) which targets netcoreapp2.1.\r\n\r\nI am not sure how to make my class library to target netstandard2.0 from Visual Studio 2013. From the extensive googling I did I know we need VS 2017 (15.3) to do this. I do not have access to VS 2017.\r\n\r\nI feel there could be other ways of doing this without having to have VS2017 from the googling I did. But I can't any concrete solutions.\r\n\r\nCould you please guide me on how to target a class library to netstandard2.0 from Visual Studio 2013 or using CLI tools so that I will be able to add a project reference to my react project."},{"Id":"9389997855","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:36:41","Actor":"JohnTortugo","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1126","RelatedDescription":"Opened pull request \"Onboard on async publishing\" (#1126) at dotnet/standard","RelatedBody":"Test build was here: https://dnceng.visualstudio.com/internal/_build/results?buildId=144566\r\n\r\nTest release: https://dnceng.visualstudio.com/internal/_releaseProgress?_a=release-pipeline-progress&releaseId=4241"},{"Id":"9385867220","Type":"PullRequestEvent","CreatedAt":"2019-04-05T12:11:02","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1125","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1125) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19204.16\r\n\r\n"},{"Id":"9385810360","Type":"PullRequestEvent","CreatedAt":"2019-04-05T12:00:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1125","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1125) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19204.16\r\n\r\n"},{"Id":"9384151605","Type":"IssuesEvent","CreatedAt":"2019-04-05T07:06:17","Actor":"Jacksiro","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1124","RelatedDescription":"Closed issue \"Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell'\" (#1124) at dotnet/standard","RelatedBody":"I am using VS 2017 Community and have targeted .Net v4.5 in my app. My app throws the error of \r\n\r\n```\r\n\r\n> See the end of this message for details on invoking \r\n> just-in-time (JIT) debugging instead of this dialog box.\r\n> \r\n> ************** Exception Text **************\r\n> System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.\r\n> File name: 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n>    at EasyTabs.TitleBarTabs.SetFrameSize()\r\n>    at EasyTabs.TitleBarTabs.OnSizeChanged(EventArgs e)\r\n>    at System.Windows.Forms.Control.UpdateBounds(Int32 x, Int32 y, Int32 width, Int32 height, Int32 clientWidth, Int32 clientHeight)\r\n>    at System.Windows.Forms.Control.UpdateBounds()\r\n>    at System.Windows.Forms.Control.WndProc(Message& m)\r\n>    at System.Windows.Forms.ScrollableControl.WndProc(Message& m)\r\n>    at System.Windows.Forms.Form.WndProc(Message& m)\r\n>    at EasyTabs.TitleBarTabs.WndProc(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n>    at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n> \r\n> WRN: Assembly binding logging is turned OFF.\r\n> To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n> Note: There is some performance penalty associated with assembly bind failure logging.\r\n> To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n> \r\n> \r\n> \r\n> ************** Loaded Assemblies **************\r\n> mscorlib\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.NET/Framework/v4.0.30319/mscorlib.dll\r\n> ----------------------------------------\r\n> vSongBook\r\n>     Assembly Version: 2.3.5.2\r\n>     Win32 Version: 2.3.5.2\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/vSongBook.exe\r\n> ----------------------------------------\r\n> System.Windows.Forms\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Windows.Forms/v4.0_4.0.0.0__b77a5c561934e089/System.Windows.Forms.dll\r\n> ----------------------------------------\r\n> System\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System/v4.0_4.0.0.0__b77a5c561934e089/System.dll\r\n> ----------------------------------------\r\n> System.Drawing\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Drawing/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Drawing.dll\r\n> ----------------------------------------\r\n> JacksiroCtrl\r\n>     Assembly Version: 1.2.5.0\r\n>     Win32 Version: 1.2.5.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/JacksiroCtrl.DLL\r\n> ----------------------------------------\r\n> SQLite.NET\r\n>     Assembly Version: 0.21.1869.3794\r\n>     Win32 Version: 0.21.1869.3794\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/SQLite.NET.DLL\r\n> ----------------------------------------\r\n> System.Data\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_32/System.Data/v4.0_4.0.0.0__b77a5c561934e089/System.Data.dll\r\n> ----------------------------------------\r\n> System.Core\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Core/v4.0_4.0.0.0__b77a5c561934e089/System.Core.dll\r\n> ----------------------------------------\r\n> System.Xml\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Xml/v4.0_4.0.0.0__b77a5c561934e089/System.Xml.dll\r\n> ----------------------------------------\r\n> EasyTabs\r\n>     Assembly Version: 1.3.3.0\r\n>     Win32 Version: 1.3.3.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/EasyTabs.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Uxtheme\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Uxtheme.DLL\r\n> ----------------------------------------\r\n> Win32Interop.User32\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.User32.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Dwmapi\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Dwmapi.DLL\r\n> ----------------------------------------\r\n> \r\n> ************** JIT Debugging **************\r\n> To enable just-in-time (JIT) debugging, the .config file for this\r\n> application or computer (machine.config) must have the\r\n> jitDebugging value set in the system.windows.forms section.\r\n> The application must also be compiled with debugging\r\n> enabled.\r\n> \r\n> For example:\r\n> \r\n> <configuration>\r\n>     <system.windows.forms jitDebugging=\"true\" />\r\n> </configuration>\r\n> \r\n> When JIT debugging is enabled, any unhandled exception\r\n> will be sent to the JIT debugger registered on the computer\r\n> rather than be handled by this dialog box.\r\n\r\n```\r\n\r\nKIndly advice me on the on how to resolve this issue"},{"Id":"9384105492","Type":"IssuesEvent","CreatedAt":"2019-04-05T06:56:02","Actor":"Jacksiro","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1124","RelatedDescription":"Opened issue \"Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell'\" (#1124) at dotnet/standard","RelatedBody":"I am using VS 2017 Community and have targeted .Net v4.5 in my app. My app throws the error of \r\n\r\n```\r\n\r\n> See the end of this message for details on invoking \r\n> just-in-time (JIT) debugging instead of this dialog box.\r\n> \r\n> ************** Exception Text **************\r\n> System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.\r\n> File name: 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n>    at EasyTabs.TitleBarTabs.SetFrameSize()\r\n>    at EasyTabs.TitleBarTabs.OnSizeChanged(EventArgs e)\r\n>    at System.Windows.Forms.Control.UpdateBounds(Int32 x, Int32 y, Int32 width, Int32 height, Int32 clientWidth, Int32 clientHeight)\r\n>    at System.Windows.Forms.Control.UpdateBounds()\r\n>    at System.Windows.Forms.Control.WndProc(Message& m)\r\n>    at System.Windows.Forms.ScrollableControl.WndProc(Message& m)\r\n>    at System.Windows.Forms.Form.WndProc(Message& m)\r\n>    at EasyTabs.TitleBarTabs.WndProc(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n>    at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n> \r\n> WRN: Assembly binding logging is turned OFF.\r\n> To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n> Note: There is some performance penalty associated with assembly bind failure logging.\r\n> To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n> \r\n> \r\n> \r\n> ************** Loaded Assemblies **************\r\n> mscorlib\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.NET/Framework/v4.0.30319/mscorlib.dll\r\n> ----------------------------------------\r\n> vSongBook\r\n>     Assembly Version: 2.3.5.2\r\n>     Win32 Version: 2.3.5.2\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/vSongBook.exe\r\n> ----------------------------------------\r\n> System.Windows.Forms\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Windows.Forms/v4.0_4.0.0.0__b77a5c561934e089/System.Windows.Forms.dll\r\n> ----------------------------------------\r\n> System\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System/v4.0_4.0.0.0__b77a5c561934e089/System.dll\r\n> ----------------------------------------\r\n> System.Drawing\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Drawing/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Drawing.dll\r\n> ----------------------------------------\r\n> JacksiroCtrl\r\n>     Assembly Version: 1.2.5.0\r\n>     Win32 Version: 1.2.5.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/JacksiroCtrl.DLL\r\n> ----------------------------------------\r\n> SQLite.NET\r\n>     Assembly Version: 0.21.1869.3794\r\n>     Win32 Version: 0.21.1869.3794\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/SQLite.NET.DLL\r\n> ----------------------------------------\r\n> System.Data\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_32/System.Data/v4.0_4.0.0.0__b77a5c561934e089/System.Data.dll\r\n> ----------------------------------------\r\n> System.Core\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Core/v4.0_4.0.0.0__b77a5c561934e089/System.Core.dll\r\n> ----------------------------------------\r\n> System.Xml\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Xml/v4.0_4.0.0.0__b77a5c561934e089/System.Xml.dll\r\n> ----------------------------------------\r\n> EasyTabs\r\n>     Assembly Version: 1.3.3.0\r\n>     Win32 Version: 1.3.3.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/EasyTabs.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Uxtheme\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Uxtheme.DLL\r\n> ----------------------------------------\r\n> Win32Interop.User32\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.User32.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Dwmapi\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Dwmapi.DLL\r\n> ----------------------------------------\r\n> \r\n> ************** JIT Debugging **************\r\n> To enable just-in-time (JIT) debugging, the .config file for this\r\n> application or computer (machine.config) must have the\r\n> jitDebugging value set in the system.windows.forms section.\r\n> The application must also be compiled with debugging\r\n> enabled.\r\n> \r\n> For example:\r\n> \r\n> <configuration>\r\n>     <system.windows.forms jitDebugging=\"true\" />\r\n> </configuration>\r\n> \r\n> When JIT debugging is enabled, any unhandled exception\r\n> will be sent to the JIT debugger registered on the computer\r\n> rather than be handled by this dialog box.\r\n\r\n```\r\n\r\nKIndly advice me on the on how to resolve this issue"},{"Id":"9383681377","Type":"IssuesEvent","CreatedAt":"2019-04-05T04:53:06","Actor":"Groostav","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1123","RelatedDescription":"Opened issue \"phantom connection when mixing async & blocking calls on TcpClient \" (#1123) at dotnet/standard","RelatedBody":"on .net 4.6.1, win10\r\n\r\n1. create a TCPClient object\r\n2. attempt to connect synchronously to an endpoint with no bound service, get a `SocketException: Connection actively refused\"\r\n3. attempt to `connectAsync` to that same endpoint \r\n\r\nexpected: Asynchronously get a `SocketException: Connection Actively Refused`\r\nactual: connection is established, `tcpClient.Connected` returns true, `tcpClient.GetStream()` returns non-null, `tcpClient.GetStream().write(...)` throws `NotConnectedException`.\r\n\r\n```C#\r\n        \r\n[Test] //baseline, good behaviour\r\npublic async Task when_only_using_async_calls_should_get_consistent_behaviour()\r\n{\r\n    //setup\r\n    var localhost = \"127.0.0.1\";\r\n    var port = 27041; \r\n    \r\n    var tcpClient = new TcpClient();\r\n\r\n    //act\r\n    try\r\n    {\r\n        await tcpClient.ConnectAsync(localhost, port);\r\n        Assert.Fail(\"connection was actually established!\");\r\n    }\r\n    catch (SocketException ex)\r\n    {\r\n        //continue\r\n    }\r\n\r\n    Func<Task> act = (async () => await tcpClient.ConnectAsync(localhost, port));\r\n\r\n    //assert\r\n    act.Should().Throw<SocketException>();\r\n}        \r\n\r\n\r\n[Test]\r\npublic async Task when_mixing_sync_and_async_tcpclient_calls_should_get_hideous_behaviour()\r\n{\r\n    //setup\r\n    var localhost = \"127.0.0.1\";\r\n    var port = 27041; \r\n    \r\n    var tcpClient = new TcpClient();\r\n\r\n    //act\r\n    try\r\n    {\r\n        tcpClient.Connect(localhost, port);\r\n        Assert.Fail(\"connection was actually established!\");\r\n    }\r\n    catch (SocketException ex)\r\n    {\r\n        //continue\r\n    }\r\n\r\n    await tcpClient.ConnectAsync(localhost, port);\r\n\r\n    //assert\r\n    tcpClient.Connected.Should().BeTrue();\r\n    tcpClient.GetStream().Should().NotBeNull();\r\n\r\n    //seems very strange\r\n    //subsequent interactions with tcpClient throw \"not connected\" exceptions\r\n    //I would've expected the `ConnectAsync` method to throw the same `SocketException`,\r\n}\r\n```"},{"Id":"9379541476","Type":"IssuesEvent","CreatedAt":"2019-04-04T15:07:56","Actor":"Korporal","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1122","RelatedDescription":"Opened issue \".NET Framework support\" (#1122) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nOn [this ](https://github.com/dotnet/standard/blob/master/docs/versions.md)page we see this subtext under the chart:\r\n\r\n> 2 .NET Framework will not support .NET Standard 2.1 or any other later version. For more details, see this blog post.\r\n\r\nI can understand how some specific version like .NET Framework 4.6.1 (for example) will not support .NET Standard 2.1 but _all_ **future** versions of the .NET Framework too?\r\n\r\nThis statements amounts to a phasing out of .NET Framework, it tells us that we should begin to stop targeting it - well that's what seems to be a logical conclusion anyway.\r\n\r\nI don't understand why some future version of .NET Framework (e.g. 4.8) could not include support for .NET Core 2.1?\r\n\r\nWe read [here ](https://docs.microsoft.com/en-us/dotnet/standard/net-standard)the following Microsoft statement:\r\n\r\n> The .NET Standard is a formal specification of .NET APIs that are intended to be available on all .NET implementations.\r\n\r\nBut now you're retracting this and instead should be saying:\r\n\r\n> The .NET Standard 2.0 and below, is a formal specification of .NET APIs that are intended to be available on all .NET implementations.\r\n\r\nCan Microsoft please be clearer about this? Companies and their staff are under a huge burden to keep up with all sorts of developments in the technology world and if we are being advised to phase out our own support for the .NET Framework then please say so very clearly and definitively.\r\n\r\nThanks\r\n\r\n"},{"Id":"9378158114","Type":"PullRequestEvent","CreatedAt":"2019-04-04T12:13:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1121","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1121) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19203.10\r\n\r\n"},{"Id":"9378092930","Type":"PullRequestEvent","CreatedAt":"2019-04-04T12:03:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1121","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1121) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19203.10\r\n\r\n"},{"Id":"9377967087","Type":"IssuesEvent","CreatedAt":"2019-04-04T11:43:44","Actor":"markrendle","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1120","RelatedDescription":"Opened issue \"Please please please don't call it .NET Standard 2.1 when it aligns with .NET Core 3.0\" (#1120) at dotnet/standard","RelatedBody":"This is exactly the sort of version number weirdness that .NET takes flak for.\r\n\r\nIn the commit explaining the 2.1 decision, the 3.0 section is:\r\n\r\n- **3.0**\r\n  - Aligns with .NET Core, which will be released at the same time as .NET\r\n    Standard vNext\r\n  - Pros\r\n    + Leaves room for another .NET Standard that is smaller\r\n    + Simpler messaging when we ship .NET Core and .NET Standard and aligns with\r\n      what we did for .NET Core 2.0.\r\n  - Cons\r\n    + A 3.0 isn't really warranted for .NET Standard\r\n    + Perpetuates the problem of aligning .NET Core & .NET Standard versions and\r\n      requires arbitrary skipping of version numbers\r\n\r\n*Simpler messaging* should be a top priority here. I'm going to spend as much time explaining to clients why they can't use .NET Standard 2.1 with the .NET Core 2.1 LTS as my niece Allyce does explaining how to spell her name.\r\n\r\nIf a 3.0 is warranted for .NET Core, with it's `IAsyncEnumerable`, `IAsyncDisposable`, `Range` and `Index` and all the new overloads of existing APIs, then why isn't it warranted for .NET Standard?\r\n\r\nBetter yet, why not publish a .NET Standard 2.1 which aligns with .NET Core 2.1, with all the `Span<T>` goodness, and a .NET Standard 3.0 which aligns with .NET Core 3.0?\r\n\r\nDeliberately versioning .NET Standard independently of .NET Core, especially on the major version numbers, just seems perverse and unnecessary."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9390330727","Type":"PullRequestEvent","CreatedAt":"2019-04-06T03:56:21","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36637","RelatedDescription":"Merged pull request \"Support json deserialize of 'null' and 'bool' when declared type is typeof(object)\" (#36637) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/36611 which previously threw a NullReferenceException instead of returning null when deserializing a null root object that has typeof(object):\r\n```object obj = JsonSerializer.Parse<object>(\"null\");```\r\n\r\nAlso includes refactoring around polymorphic support and enables someone to write an object-based value converter in the future."},{"Id":"9390330723","Type":"IssuesEvent","CreatedAt":"2019-04-06T03:56:21","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/36611","RelatedDescription":"Closed issue \"NullRef in HandleNull when parsing null object\" (#36611) at dotnet/corefx","RelatedBody":"When calling JsonSerializer.Parse with type `typeof(object)` and a null json object there is a null ref in `HandleNull`.\r\n\r\nI'm guessing it's at line https://github.com/dotnet/corefx/blob/master/src/System.Text.Json/src/System/Text/Json/Serialization/JsonSerializer.Read.HandleNull.cs#L16 because the `JsonPropertyInfo` isn't set when the object type is `Object`\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Text.Json/src/System/Text/Json/Serialization/JsonSerializer.Read.cs#L30"},{"Id":"9390315101","Type":"PullRequestEvent","CreatedAt":"2019-04-06T03:45:07","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36402","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/standard\" (#36402) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190326.2\r\n- **Date Produced**: 3/26/2019 8:37 PM\r\n- **Commit**: d759ace4885e63a5d60ccd5bc99657c54ff07463\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19176.2\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190327.2\r\n- **Date Produced**: 3/27/2019 1:48 PM\r\n- **Commit**: 95b8ab66649877d199c425c52d60b9b46a839d60\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19177.2\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190328.1\r\n- **Date Produced**: 3/28/2019 12:55 PM\r\n- **Commit**: c8e24b1df4c4f51663c009e190d639adf22c5e79\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19178.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 12:31 PM\r\n- **Commit**: f8238897464cb3fe09480ea56153436ef24ca9ce\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19179.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190330.1\r\n- **Date Produced**: 3/30/2019 12:39 PM\r\n- **Commit**: 68dd5612cdd5f9204a832b1e0db9a4628d4337ad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19180.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190330.1\r\n- **Date Produced**: 3/30/2019 12:39 PM\r\n- **Commit**: 68dd5612cdd5f9204a832b1e0db9a4628d4337ad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19180.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190330.1\r\n- **Date Produced**: 3/30/2019 12:39 PM\r\n- **Commit**: 68dd5612cdd5f9204a832b1e0db9a4628d4337ad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19180.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190402.1\r\n- **Date Produced**: 4/2/2019 12:32 PM\r\n- **Commit**: ac7dc16f6651892e711de024bc796074a98ad4e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19202.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190403.1\r\n- **Date Produced**: 4/3/2019 12:26 PM\r\n- **Commit**: a652c72dd650656e8284eb8cfb95cb9965a2e75e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19203.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190404.1\r\n- **Date Produced**: 4/4/2019 12:29 PM\r\n- **Commit**: 0362f55e37d73b7e607b2f256279caaac82c8725\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19204.1\r\n\r\n"},{"Id":"9390314054","Type":"PullRequestEvent","CreatedAt":"2019-04-06T03:44:21","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/35874","RelatedDescription":"Closed pull request \"Improve performance of Pipe.Reader.AsStream()\" (#35874) at dotnet/corefx","RelatedBody":"The Stream returned from the base PipeReader uses public APIs on PipeReader because it needs to work with any PipeReader implementation.  But the vast majority case is a PipeReader returned from Pipe, and the Stream returned from its AsStream can make use of internals on Pipe.  This change does so, reducing the overheads involved in accessing a reader as a stream.\r\n\r\nOne thing I don't love about this is that it moves a little more work under the lock, which can increase contention, but in doing so avoids the need to take the lock a second time for synchronous completion, which can reduce contention.\r\n\r\ncc: @benaadams, @davidfowl, @ahsonkhan \r\n\r\nBefore:\r\n```\r\n      Method |        Mean |     Error |    StdDev | Allocated |\r\n------------ |------------:|----------:|----------:|----------:|\r\n   ReadByte1 | 27,698.7 ns | 201.84 ns | 157.58 ns |       0 B |\r\n ReadByte128 |    804.0 ns |  16.04 ns |  38.44 ns |       0 B |\r\n```\r\n\r\nAfter:\r\n```\r\n      Method |        Mean |     Error |    StdDev | Allocated |\r\n------------ |------------:|----------:|----------:|----------:|\r\n   ReadByte1 | 19,197.3 ns | 381.99 ns | 439.90 ns |       0 B |\r\n ReadByte128 |    600.2 ns |  11.34 ns |  11.13 ns |       0 B |\r\n```\r\n\r\nBenchmark:\r\n```C#\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Attributes.Jobs;\r\nusing BenchmarkDotNet.Running;\r\nusing System;\r\nusing System.IO;\r\nusing System.IO.Pipelines;\r\nusing System.Threading.Tasks;\r\n\r\n[MemoryDiagnoser]\r\n[InProcess]\r\npublic class Benchmark\r\n{\r\n    private static void Main() => BenchmarkRunner.Run<Benchmark>();\r\n\r\n    private readonly byte[] _data = new byte[128];\r\n    private readonly byte[] _buffer1 = new byte[1];\r\n    private readonly byte[] _buffer128 = new byte[128];\r\n    private readonly Pipe _pipe = new Pipe();\r\n\r\n    [Benchmark]\r\n    public async Task ReadByte1()\r\n    {\r\n        await _pipe.Writer.WriteAsync(_data);\r\n        _pipe.Writer.Complete();\r\n        Stream s = _pipe.Reader.AsStream();\r\n\r\n        while (await s.ReadAsync(_buffer1) != 0) ;\r\n\r\n        _pipe.Reader.Complete();\r\n        _pipe.Reset();\r\n    }\r\n\r\n    [Benchmark]\r\n    public async Task ReadByte128()\r\n    {\r\n        await _pipe.Writer.WriteAsync(_data);\r\n        _pipe.Writer.Complete();\r\n        Stream s = _pipe.Reader.AsStream();\r\n\r\n        while (await s.ReadAsync(_buffer128) != 0) ;\r\n\r\n        _pipe.Reader.Complete();\r\n        _pipe.Reset();\r\n    }\r\n}\r\n```"},{"Id":"9390247280","Type":"PullRequestEvent","CreatedAt":"2019-04-06T03:02:14","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36583","RelatedDescription":"Merged pull request \"Add the TPM Object Identifiers to the static table in OidLookup\" (#36583) at dotnet/corefx","RelatedBody":"Experimentation suggests that these values are non-localized in Windows,\r\nand are currently unmapped in OpenSSL; so they are good candidates for\r\nstatic registration in OidLookup.\r\n\r\nThe TpmIdentifiers test passed on Windows Server 2012 R2 before the change,\r\nto help prevent typos with registration.\r\n\r\nFixes #32382."},{"Id":"9390247274","Type":"IssuesEvent","CreatedAt":"2019-04-06T03:02:14","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32382","RelatedDescription":"Closed issue \"X509Certificate wrongly parsed the subject from the given raw data of certificate in MacOs  \" (#32382) at dotnet/corefx","RelatedBody":"Name                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Darwin 16.7.0 Darwin Kernel Version 16.7.0: Mon Nov 13 21:56:25 PST 2017; root:xnu-3789.72.11~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nX509Certificate2 x509Certificate = new X509Certificate2(certData); // certData is byte[]\r\n\r\nIn MacOS, the result of x509Certificate is as followed\r\nPS /Users/administrator> $cert.Subject\r\nOID.2.23.133.2.3=id:00020065, OID.2.23.133.2.2=<tpm-name>, OID.2.23.133.2.1=id:564D5700\r\n\r\nWhile in ubuntu or windows, the result is:\r\nTPMVersion=id:00020065, TPMModel=<tpm-name>, TPMManufacturer=id:564D5700"},{"Id":"9390232620","Type":"PullRequestEvent","CreatedAt":"2019-04-06T02:53:23","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35673","RelatedDescription":"Merged pull request \"Label implements IEquatable<Label>\" (#35673) at dotnet/corefx","RelatedBody":"Adds an implementation of `IEquatable<Label>` to `System.Reflection.Emit.Label`.\r\n\r\nFixes dotnet/corefx#32959\r\nRelies on [dotnet/corecrl/pull/22938](https://github.com/dotnet/coreclr/pull/22938)"},{"Id":"9390232613","Type":"IssuesEvent","CreatedAt":"2019-04-06T02:53:22","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32959","RelatedDescription":"Closed issue \"System.Reflection.Emit.Label should implement IEquatable\" (#32959) at dotnet/corefx","RelatedBody":"From @marek-safar's [comment](https://github.com/dotnet/standard/pull/829#discussion_r227070864).\r\n\r\n```C#\r\nnamespace System.Reflection.Emit\r\n{\r\n    public partial struct Label : IEquatable<Label>\r\n    {\r\n        // Existing members\r\n        public override bool Equals(object obj);\r\n        public bool Equals(Label obj);\r\n        public override int GetHashCode();\r\n        public static bool operator ==(Label a, Label b);\r\n        public static bool operator !=(Label a, Label b);\r\n    }\r\n}\r\n```\r\n\r\nWould be neat for 3.0 so we might be able to pull it into .NET Standard 2.1 as well."},{"Id":"9390231424","Type":"PullRequestEvent","CreatedAt":"2019-04-06T02:52:37","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/36595","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#36595) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19203.10\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19203.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.SourceRewriter** -> 1.0.0-beta.19203.10\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9390147337","Type":"PullRequestEvent","CreatedAt":"2019-04-06T02:00:14","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34805","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#34805) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9390147124","Type":"PullRequestEvent","CreatedAt":"2019-04-06T02:00:09","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34806","RelatedDescription":"Merged pull request \"Merge master to features/editorconfig-in-compiler\" (#34806) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9390146980","Type":"PullRequestEvent","CreatedAt":"2019-04-06T02:00:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34807","RelatedDescription":"Merged pull request \"Merge master to features/lspSupport\" (#34807) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9390072321","Type":"PullRequestEvent","CreatedAt":"2019-04-06T01:15:35","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34809","RelatedDescription":"Opened pull request \"Make compilation outputs available via a workspace service\" (#34809) at dotnet/roslyn","RelatedBody":"TODO: tests"},{"Id":"9390025241","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:50:43","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34808","RelatedDescription":"Opened pull request \"Implement import completion for types\" (#34808) at dotnet/roslyn","RelatedBody":"Using existing symbol APIs.\r\n\r\nTODO:\r\n\r\n- [ ] Add tests\r\n- [ ] More profiling needs to be done.\r\n\r\n@CyrusNajmabadi Could you please take a look?"},{"Id":"9390008011","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:42:04","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34695","RelatedDescription":"Merged pull request \"`t is null` with LangVersion 7 should produce a diagnostic\" (#34695) at dotnet/roslyn","RelatedBody":"Fixes #34678"},{"Id":"9390008006","Type":"IssuesEvent","CreatedAt":"2019-04-06T00:42:04","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/34678","RelatedDescription":"Closed issue \"`t is null` with LangVersion 7 should produce a diagnostic\" (#34678) at dotnet/roslyn","RelatedBody":"The issue was reported by @varobc in https://github.com/dotnet/cli/issues/11020\r\nFYI @peterhuene @333fred \r\n\r\nWhen this is fixed (likely in 16.1), this should be documented as a breaking change, albeit a short-lived one."},{"Id":"9389914828","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:00:45","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34807","RelatedDescription":"Opened pull request \"Merge master to features/lspSupport\" (#34807) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9389914660","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:00:41","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34806","RelatedDescription":"Opened pull request \"Merge master to features/editorconfig-in-compiler\" (#34806) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9389914410","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:00:36","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34805","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#34805) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9389974404","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:25:51","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7264","RelatedDescription":"Merged pull request \"Attempt 3 at passing Azure feed / Key to the publish job\" (#7264) at dotnet/corert","RelatedBody":"Inline scripts have their own syntax for properties and require input arguments to be called out like a method signature."},{"Id":"9389973223","Type":"PullRequestEvent","CreatedAt":"2019-04-06T00:25:16","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7264","RelatedDescription":"Opened pull request \"Attempt 3 at passing Azure feed / Key to the publish job\" (#7264) at dotnet/corert","RelatedBody":"Inline scripts have their own syntax for properties and require input arguments to be called out like a method signature."},{"Id":"9389793193","Type":"PullRequestEvent","CreatedAt":"2019-04-05T23:15:37","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7263","RelatedDescription":"Merged pull request \"Set working folder for official build publish task\" (#7263) at dotnet/corert","RelatedBody":""},{"Id":"9389791063","Type":"PullRequestEvent","CreatedAt":"2019-04-05T23:14:53","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7263","RelatedDescription":"Opened pull request \"Set working folder for official build publish task\" (#7263) at dotnet/corert","RelatedBody":""},{"Id":"9389386293","Type":"PullRequestEvent","CreatedAt":"2019-04-05T21:29:14","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7262","RelatedDescription":"Merged pull request \"Publish to Azure blob feed\" (#7262) at dotnet/corert","RelatedBody":"MyGet keeps running out of storage quota (see https://github.com/dotnet/core-eng/issues/5070). Switch to Azure blob feed so CoreRT nightly builds are publicly available."},{"Id":"9388650701","Type":"PullRequestEvent","CreatedAt":"2019-04-05T19:11:02","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7262","RelatedDescription":"Opened pull request \"Publish to Azure blob feed\" (#7262) at dotnet/corert","RelatedBody":"MyGet keeps running out of storage quota (see https://github.com/dotnet/core-eng/issues/5070). Switch to Azure blob feed so CoreRT nightly builds are publicly available."},{"Id":"9386153322","Type":"PullRequestEvent","CreatedAt":"2019-04-05T12:56:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7261","RelatedDescription":"Merged pull request \"Update dependencies\" (#7261) at dotnet/corert","RelatedBody":"Should pick up dotnet/corefx#36552."},{"Id":"9386116458","Type":"PullRequestEvent","CreatedAt":"2019-04-05T12:51:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7258","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7258) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"9385281106","Type":"PullRequestEvent","CreatedAt":"2019-04-05T10:24:34","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7261","RelatedDescription":"Opened pull request \"Update dependencies\" (#7261) at dotnet/corert","RelatedBody":"Should pick up dotnet/corefx#36552."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"open","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Open PR \"add links to ML.NET docs\" (#141)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"429985030","IsPullRequest":true,"CreatedAt":"2019-04-06T01:53:18","Actor":"GrabYourPitchforks","Number":"23783","RawContent":null,"Title":"[WIP] Fast codegen-free field access","State":"open","Body":"Contributes to https://github.com/dotnet/corefx/issues/24390. This is only a proof of concept to solicit discussion.\r\n\r\nThis is an experimental `FieldAccessor` type which provides read+write access to a class's instance fields in a manner almost as high performance as raw codegen.\r\n\r\n```cs\r\nstatic void Main()\r\n{\r\n    FieldInfo field = typeof(Person).GetField(\"LastName\");\r\n    var accessor = new FieldAccessor<Person, string>(field);\r\n\r\n    Person p = new Person\r\n    {\r\n        FirstName = \"John\",\r\n        LastName = \"Smith\"\r\n    };\r\n\r\n    while (true)\r\n    {\r\n        GetLastNameFromFieldAccessor(accessor, p);\r\n        GetLastNameFromPersonDirectly(accessor, p);\r\n    }\r\n}\r\n\r\n[MethodImpl(MethodImplOptions.AggressiveOptimization | MethodImplOptions.NoInlining)]\r\nstatic string GetLastNameFromFieldAccessor(FieldAccessor<Person, string> accessor, Person p)\r\n{\r\n    return accessor.GetRef(p);\r\n}\r\n\r\n[MethodImpl(MethodImplOptions.AggressiveOptimization | MethodImplOptions.NoInlining)]\r\nstatic string GetLastNameFromPersonDirectly(object unused, Person p)\r\n{\r\n    return p.LastName;\r\n}\r\n\r\npublic class Person\r\n{\r\n    public string FirstName;\r\n    public string LastName;\r\n}\r\n```\r\n\r\n```asm\r\nGetLastNameFromFieldAccessor(System.Reflection.FieldAccessor`2<Person,System.String>, Person):\r\n00007ffc`74526ce0 0f1f440000      nop     dword ptr [rax+rax]\r\n00007ffc`74526ce5 488b4108        mov     rax,qword ptr [rcx+8]   ; rax := offset of Person.LastName field\r\n00007ffc`74526ce9 488b0a          mov     rcx,qword ptr [rdx]   ; null check on Person before we perform the byref operation\r\n00007ffc`74526cec 488b0402        mov     rax,qword ptr [rdx+rax]   ; deref Person.LastName field and return it\r\n00007ffc`74526cf0 c3              ret\r\n\r\nGetLastNameFromPersonDirectly(System.Object, Person):\r\n00007ffc`74526d10 0f1f440000      nop     dword ptr [rax+rax]\r\n00007ffc`74526d15 488b4210        mov     rax,qword ptr [rdx+10h]   ; return Person.LastName directly\r\n00007ffc`74526d19 c3              ret\r\n```\r\n\r\nLots of open issues here, especially regarding how readonly fields should be treated, whether the type checks in the `FieldAccessor` ctor are correct, and so on. But it serves as a proof of concept that we can pull this off to enable codegen-free fast serialization scenarios.\r\n\r\n(This also slightly optimizes the `Memory<T>.Span` property getter.)\r\n\r\n/cc @jkotas @steveharter @stephentoub @dotnet/jit-contrib as FYI","Url":"https://github.com/dotnet/coreclr/pull/23783","RelatedDescription":"Open PR \"[WIP] Fast codegen-free field access\" (#23783)"},{"Id":"429981198","IsPullRequest":true,"CreatedAt":"2019-04-06T01:06:46","Actor":"dotnet-maestro-bot","Number":"23782","RawContent":null,"Title":"Update CoreClr to preview5-27605-73 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/23782","RelatedDescription":"Open PR \"Update CoreClr to preview5-27605-73 (master)\" (#23782)"},{"Id":"429980647","IsPullRequest":true,"CreatedAt":"2019-04-06T01:00:57","Actor":"sergiy-k","Number":"23781","RawContent":null,"Title":"Add crossgen option to build-test.sh","State":"open","Body":"This option will cause the script to call crossgen to precompile the managed assemblies in CORE_ROOT after generating layout.\r\n\r\n ","Url":"https://github.com/dotnet/coreclr/pull/23781","RelatedDescription":"Open PR \"Add crossgen option to build-test.sh\" (#23781)"},{"Id":"429979684","IsPullRequest":false,"CreatedAt":"2019-04-06T00:51:52","Actor":"noahfalk","Number":"23780","RawContent":null,"Title":"Provide an Out-of-Process Control Mechanism for EventPipe that is usable by external customers","State":"open","Body":"This is the same as #18658 with the explicit requirement that external customers can use the control mechanism. This means it has to have a public and documented API.","Url":"https://github.com/dotnet/coreclr/issues/23780","RelatedDescription":"Open issue \"Provide an Out-of-Process Control Mechanism for EventPipe that is usable by external customers\" (#23780)"},{"Id":"429979226","IsPullRequest":true,"CreatedAt":"2019-04-06T00:47:35","Actor":"luhenry","Number":"23779","RawContent":null,"Title":"Make GC.GetGCMemoryInfo public","State":"open","Body":"This is to be used to allow users to optimize memory consumption based\r\non what's available to the GC and on the system.\r\n\r\nThis is based on https://github.com/dotnet/corefx/issues/34631","Url":"https://github.com/dotnet/coreclr/pull/23779","RelatedDescription":"Open PR \"Make GC.GetGCMemoryInfo public\" (#23779)"},{"Id":"429979085","IsPullRequest":true,"CreatedAt":"2019-04-06T00:45:59","Actor":"VSadov","Number":"23778","RawContent":null,"Title":"Make  GCToOSInterface::FlushProcessWriteBuffers use MEMBARRIER_CMD_PRIVATE_EXPEDITED if available","State":"open","Body":"Make  GCToOSInterface::FlushProcessWriteBuffers use MEMBARRIER_CMD_PRIVATE_EXPEDITED if available\r\nBasically a port of  https://github.com/dotnet/coreclr/pull/20949   to  GCToOSInterface\r\n\r\n\r\nCould be responsible for #22303, at least there is a possibility. \r\nSeems like a good-to-have anyways.","Url":"https://github.com/dotnet/coreclr/pull/23778","RelatedDescription":"Open PR \"Make  GCToOSInterface::FlushProcessWriteBuffers use MEMBARRIER_CMD_PRIVATE_EXPEDITED if available\" (#23778)"},{"Id":"429862070","IsPullRequest":true,"CreatedAt":"2019-04-05T22:56:22","Actor":"wfurt","Number":"23765","RawContent":null,"Title":"Fedora.28.Amd64 queue is dead. Use container instead","State":"closed","Body":"all Fedora test runs are failing now.  ","Url":"https://github.com/dotnet/coreclr/pull/23765","RelatedDescription":"Closed or merged PR \"Fedora.28.Amd64 queue is dead. Use container instead\" (#23765)"},{"Id":"429955546","IsPullRequest":true,"CreatedAt":"2019-04-05T22:20:25","Actor":"jorive","Number":"23777","RawContent":null,"Title":"[WIP] Remove the MultiFileSec option from EventPipe.","State":"open","Body":"This option was a pseudo mechanism to fake \"streaming\" events out-of-proc.\r\nThe idea was to have EventPipe creating files every N seconds, with event data up to that point. Thus, external processes could read these files in an attempt to get \"read-time\" data.\r\nNow, we actually have streaming of event through IPC channels.","Url":"https://github.com/dotnet/coreclr/pull/23777","RelatedDescription":"Open PR \"[WIP] Remove the MultiFileSec option from EventPipe.\" (#23777)"},{"Id":"429955093","IsPullRequest":true,"CreatedAt":"2019-04-05T22:18:17","Actor":"jkoritzinsky","Number":"23776","RawContent":null,"Title":"Normalize directory separators before calling LoadLibrary","State":"open","Body":"Fixes #22094","Url":"https://github.com/dotnet/coreclr/pull/23776","RelatedDescription":"Open PR \"Normalize directory separators before calling LoadLibrary\" (#23776)"},{"Id":"429955012","IsPullRequest":true,"CreatedAt":"2019-04-05T22:17:56","Actor":"sandreenko","Number":"23775","RawContent":null,"Title":"Reenable System.Runtime.Tests. for arm64.","State":"open","Body":"The issue was fixed by https://github.com/dotnet/coreclr/pull/23627.\r\n\r\nCloses #23444 and closes #18914.","Url":"https://github.com/dotnet/coreclr/pull/23775","RelatedDescription":"Open PR \"Reenable System.Runtime.Tests. for arm64.\" (#23775)"},{"Id":"429954558","IsPullRequest":true,"CreatedAt":"2019-04-05T22:15:56","Actor":"stephentoub","Number":"23774","RawContent":null,"Title":"Nullable: shared\\System (most of it)","State":"open","Body":"And some other things it touches.","Url":"https://github.com/dotnet/coreclr/pull/23774","RelatedDescription":"Open PR \"Nullable: shared\\System (most of it)\" (#23774)"},{"Id":"429908599","IsPullRequest":true,"CreatedAt":"2019-04-05T21:46:54","Actor":"wtgodbe","Number":"23770","RawContent":null,"Title":"Update branding to preview5","State":"closed","Body":"CC @danmosemsft @vivmishra @karelz @leecow ","Url":"https://github.com/dotnet/coreclr/pull/23770","RelatedDescription":"Closed or merged PR \"Update branding to preview5\" (#23770)"},{"Id":"429908560","IsPullRequest":true,"CreatedAt":"2019-04-05T21:46:26","Actor":"wtgodbe","Number":"23769","RawContent":null,"Title":"Update branding to preview4","State":"closed","Body":"CC @danmosemsft @vivmishra @karelz @leecow ","Url":"https://github.com/dotnet/coreclr/pull/23769","RelatedDescription":"Closed or merged PR \"Update branding to preview4\" (#23769)"},{"Id":"429908684","IsPullRequest":true,"CreatedAt":"2019-04-05T21:46:03","Actor":"fadimounir","Number":"23771","RawContent":null,"Title":"Replacing some calls to GetThread with an inlined version","State":"closed","Body":"#22772 ","Url":"https://github.com/dotnet/coreclr/pull/23771","RelatedDescription":"Closed or merged PR \"Replacing some calls to GetThread with an inlined version\" (#23771)"},{"Id":"429945882","IsPullRequest":false,"CreatedAt":"2019-04-05T21:42:52","Actor":"gregg-miskelly","Number":"23773","RawContent":null,"Title":"Debugger crashing during launch on OSX in master branch","State":"open","Body":"## Repro steps\r\nOn macOS, using current master bits (I used 3.0.100-preview4-011077), create a new console app (`dotnet new console`), and attempt to debug it.\r\n\r\nResult:\r\nCrash in the following code:\r\n```\r\n  * frame #0: 0x000000019c7d4eb3 libmscordaccore.dylib`CorUnix::InternalCreateEvent(CorUnix::CPalThread*, _SECURITY_ATTRIBUTES*, int, int, char16_t const*, void**) + 115\r\n    frame #1: 0x000000019c7d4ff4 libmscordaccore.dylib`CreateEventW + 84\r\n    frame #2: 0x000000019c408051 libmscordbi.dylib`CordbRCEventThread::Init() + 33\r\n    frame #3: 0x000000019c41cd0a libmscordbi.dylib`Cordb::Initialize() + 106\r\n    frame #4: 0x000000019bdea629 libvsdebugeng.impl.dylib`ManagedDM::CCoreClrAttachRequest::AttachToCoreClrProcessImpl(this=0x0000000100d180d0, pCorDebug=0x0000000100b30638) + 953 at CoreClrAttachRequest.h:155\r\n    frame #5: 0x000000019bddaa0e libvsdebugeng.impl.dylib`ManagedDM::CCoreClrAttachRequest::AttachToCoreClrProcess(pCordb=0x0000000100b30638, pArg=0x0000000100d180d0, hrRuntimeLoaded=0) + 286 at CoreClrAttachRequest.h:87\r\n    frame #6: 0x000000019c2cf438 libdbgshim.dylib`RuntimeStartupHelper::InvokeStartupCallback(char*, void*) + 712\r\n    frame #7: 0x000000019c329355 libdbgshim.dylib`PAL_RuntimeStartupHelper::InvokeStartupCallback() + 229\r\n    frame #8: 0x000000019c32910c libdbgshim.dylib`PAL_RuntimeStartupHelper::StartupHelperThread() + 140\r\n    frame #9: 0x000000019c32904e libdbgshim.dylib`StartupHelperThread(void*) + 14\r\n    frame #10: 0x000000019c32a5f8 libdbgshim.dylib`CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n    frame #11: 0x00007fff5f2ea6c1 libsystem_pthread.dylib`_pthread_body + 340\r\n    frame #12: 0x00007fff5f2ea56d libsystem_pthread.dylib`_pthread_start + 377\r\n    frame #13: 0x00007fff5f2e9c5d libsystem_pthread.dylib`thread_start + 13\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23773","RelatedDescription":"Open issue \"Debugger crashing during launch on OSX in master branch\" (#23773)"},{"Id":"429852616","IsPullRequest":true,"CreatedAt":"2019-04-05T21:26:11","Actor":"dotnet-maestro-bot","Number":"23763","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @luhenry\n* @AaronRobinsonMSFT\n* @stephentoub\n* @jkoritzinsky\n* @GrabYourPitchforks\n* @jkotas\n* @safern\n* @janvorli\n* @echesakovMSFT\n* @sywhang\n* @CarolEidt\n* @vitek-karas\n* @krwq\n* @sandreenko\n* @davidwrighton\n* @tannergooding\n* @AndyAyersMS\n* @BruceForstall\n* @brianrob\n* @kouvel\n* @briansull\n* @wtgodbe\n* @buyaa-n\n* @dotnet-maestro-bot\n* @k15tfu\n* @danmosemsft\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/23763","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#23763)"},{"Id":"429936253","IsPullRequest":true,"CreatedAt":"2019-04-05T21:10:10","Actor":"sdmaclea","Number":"23772","RawContent":null,"Title":"Whitespace","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23772","RelatedDescription":"Closed or merged PR \"Whitespace\" (#23772)"},{"Id":"429852852","IsPullRequest":true,"CreatedAt":"2019-04-05T21:07:58","Actor":"luhenry","Number":"23764","RawContent":null,"Title":"Fix rounding to UINT32_MAX","State":"closed","Body":"In case you would have UINT32_MAX - 1 CPUs, you would round up to return UINT32_MAX CPUs.","Url":"https://github.com/dotnet/coreclr/pull/23764","RelatedDescription":"Closed or merged PR \"Fix rounding to UINT32_MAX\" (#23764)"},{"Id":"429879227","IsPullRequest":true,"CreatedAt":"2019-04-05T21:05:18","Actor":"fadimounir","Number":"23767","RawContent":null,"Title":"Fix issue 23713: handle TypeDesc field handles","State":"closed","Body":"Fix for #23713 ","Url":"https://github.com/dotnet/coreclr/pull/23767","RelatedDescription":"Closed or merged PR \"Fix issue 23713: handle TypeDesc field handles\" (#23767)"},{"Id":"429887664","IsPullRequest":true,"CreatedAt":"2019-04-05T18:44:29","Actor":"sywhang","Number":"23768","RawContent":null,"Title":"Fix EventPipe IPC streaming","State":"open","Body":"This addresses https://github.com/dotnet/coreclr/issues/23756.\r\n\r\nIn particular:\r\n- Decrease FlushTimerPeriod (rate at which event gets streamed out to IPC channel) to 50ms from 100ms\r\n- Add a method in `EventPipeBufferManager` to support flushing the next event to IPC channel.\r\n- Decrease `EventPipeFile`'s `m_block`'s size from 100K to 1K for IPC streaming sessions *only*. ","Url":"https://github.com/dotnet/coreclr/pull/23768","RelatedDescription":"Open PR \"Fix EventPipe IPC streaming\" (#23768)"},{"Id":"429862318","IsPullRequest":false,"CreatedAt":"2019-04-05T17:32:06","Actor":"omajid","Number":"23766","RawContent":null,"Title":"assembler.cpp can use the variable instr after deleting it","State":"open","Body":"This code can `delete instr` in multiple places but still does a `instr->opcode = -1` at exit of some methods\r\n\r\nhttps://github.com/dotnet/coreclr/blob/aea3b1a80d6c114e3e67bc9521bf39a8a17371d1/src/ilasm/assembler.cpp#L2044-L2060\r\n\r\nhttps://github.com/dotnet/coreclr/blob/aea3b1a80d6c114e3e67bc9521bf39a8a17371d1/src/ilasm/assembler.cpp#L2070-L2082","Url":"https://github.com/dotnet/coreclr/issues/23766","RelatedDescription":"Open issue \"assembler.cpp can use the variable instr after deleting it\" (#23766)"},{"Id":"429844391","IsPullRequest":true,"CreatedAt":"2019-04-05T16:44:15","Actor":"safern","Number":"23762","RawContent":null,"Title":"Nullable feature into master [NO MERGE]","State":"open","Body":"Draft PR, once we're ready to merge into master again, I'll promote it to be a real PR. In the meantime we will use this one for potential test failures or build breaks. ","Url":"https://github.com/dotnet/coreclr/pull/23762","RelatedDescription":"Open PR \"Nullable feature into master [NO MERGE]\" (#23762)"},{"Id":"429569390","IsPullRequest":true,"CreatedAt":"2019-04-05T16:28:49","Actor":"AaronRobinsonMSFT","Number":"23758","RawContent":null,"Title":"Fix invalid use of stack memory","State":"closed","Body":"Fixes #23689 ","Url":"https://github.com/dotnet/coreclr/pull/23758","RelatedDescription":"Closed or merged PR \"Fix invalid use of stack memory\" (#23758)"},{"Id":"429831081","IsPullRequest":false,"CreatedAt":"2019-04-05T16:08:50","Actor":"omajid","Number":"23761","RawContent":null,"Title":"module.cpp can free a pointer and then use it","State":"open","Body":"https://github.com/dotnet/coreclr/blob/73fa28f5088a9f88d1b38dd62b5f8d43c350f605/src/debug/di/module.cpp#L1994-L2003\r\n\r\nIt looks like this code can `delete pClass`, and then assign that deleted pointer to `m_pClass`.","Url":"https://github.com/dotnet/coreclr/issues/23761","RelatedDescription":"Open issue \"module.cpp can free a pointer and then use it\" (#23761)"},{"Id":"429594083","IsPullRequest":true,"CreatedAt":"2019-04-05T14:02:24","Actor":"grant-d","Number":"23759","RawContent":null,"Title":"Revert perf optimization in Trim(Span)","State":"closed","Body":"This [optimization](https://github.com/grant-d/coreclr/commit/ee5f321368daa6fe64226a3dd287285eb97b43bd#diff-cc88fbaa6077c440a3e08374eb41c5ea) in [this PR](https://github.com/dotnet/coreclr/pull/22798) broke several units that were previously working.\r\n\r\nLocal testing confirms **undoing optimization is successful** - tests all pass again.\r\n\r\nThis PR simply fixes the issue. We can look at re-optimization in a separate PR.\r\n\r\nMore detail [here](https://github.com/dotnet/corefx/pull/35576#discussion_r272431304)\r\n\r\ncc @ahsonkhan ","Url":"https://github.com/dotnet/coreclr/pull/23759","RelatedDescription":"Closed or merged PR \"Revert perf optimization in Trim(Span)\" (#23759)"},{"Id":"429734980","IsPullRequest":false,"CreatedAt":"2019-04-05T12:39:46","Actor":"loop-evgeny","Number":"23760","RawContent":null,"Title":"Provide a way to attach a managed debugger to this process or a child process","State":"open","Body":"I have a .NET Core process that starts another .NET Core process. I want to debug the child process with Visual Studio. I control the code for both processes, but still cannot do this!\r\n\r\nStarting the parent process under the debugger is useless. Calling `System.Diagnostics.Debugger.Launch()` in the child process is useless, because that forces attaching a native debugger, not managed. Even if I check  \"Manually choose debugging engines\" in the JIT debug dialog I cannot uncheck \"Native\", so I'm forced to use mixed-mode debugging. The child process then gets stuck on the `Debugger.Launch()` line and I cannot continue it.\r\n\r\nDebugger.Break() does nothing if a debugger is not already attached.\r\n\r\nDebug.Fail() and Debug.Assert(false) just crash the child process.","Url":"https://github.com/dotnet/coreclr/issues/23760","RelatedDescription":"Open issue \"Provide a way to attach a managed debugger to this process or a child process\" (#23760)"},{"Id":"429563298","IsPullRequest":false,"CreatedAt":"2019-04-05T02:59:55","Actor":"sywhang","Number":"23756","RawContent":null,"Title":"Diagnostics IPC might not stream Events as fast as we want","State":"open","Body":"With https://github.com/dotnet/coreclr/pull/23448 we can now stream events out of proc in \"real time\" through IPC. However, because we currently don't touch buffers that are being written to when trying to write events through the IPC channel, when buffers aren't filling up as fast as the rate at which we poll these buffers to stream events out, we may run into situations where events get written to the IPC channels at a very very slow rate. \r\n\r\nThis is keeping non-verbose events like the runtime performance counters from being streamed over IPC near real-time. \r\n\r\nWe should instead do what EventListener is doing - get events out of the buffer before they fill up. \r\n\r\nNote that there is one more place we may need to change, which is the implementation of `EventPipeFile` where it has its own cache of `EventPipeBlock` that it tries to fill up before pushing things on the pipe. This wasn't an issue for EventListener because EventListener directly puts the payload into managed callback.","Url":"https://github.com/dotnet/coreclr/issues/23756","RelatedDescription":"Open issue \"Diagnostics IPC might not stream Events as fast as we want\" (#23756)"},{"Id":"429542128","IsPullRequest":false,"CreatedAt":"2019-04-05T02:57:54","Actor":"jignparm","Number":"23754","RawContent":null,"Title":"System.Numerics.Tensor, can't create with > 2G elements","State":"closed","Body":"The constructor of Tensor()  class takes an int32 value, and thus cannot create large tensor objects.\r\n\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Numerics.Tensors/src/System/Numerics/Tensors/Tensor.cs#L269\r\n\r\nOnnxRuntime depends on System.Numerics.Tensor to score machine learning models, some of which produce quite large tensors. While the native C++ API can handle large tensors produced by some models, the C# API is not able to handle them due to this 2G limitation.\r\n\r\nSee the corresponding issue below:\r\n\r\nhttps://github.com/Microsoft/onnxruntime/issues/713\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/23754","RelatedDescription":"Closed issue \"System.Numerics.Tensor, can't create with > 2G elements\" (#23754)"},{"Id":"429546504","IsPullRequest":true,"CreatedAt":"2019-04-05T01:38:03","Actor":"safern","Number":"23755","RawContent":null,"Title":"Fix Debug.Assert in GenericDelegateCache","State":"closed","Body":"The Debug.Assert is not matching what we're casting the value to, nor the generic parameters. Causing the JIT Perf tests to fail in the PR to merge to master:\r\n\r\n```\r\nAssertion Failed\r\n\r\n   at System.Threading.Tasks.GenericDelegateCache`2.<>c.<.cctor>b__4_2(Task`1 wrappedAntecedents, Object state)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(Thread threadPoolThread)\r\n   at System.Threading.Tasks.Task.ExecuteFromThreadPool(Thread threadPoolThread)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n```\r\n\r\ncc: @stephentoub @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/23755","RelatedDescription":"Closed or merged PR \"Fix Debug.Assert in GenericDelegateCache\" (#23755)"},{"Id":"429563320","IsPullRequest":false,"CreatedAt":"2017-07-07T15:38:55","Actor":"RehanSaeed","Number":"23757","RawContent":null,"Title":"Dynamically Loading .NET Core Assemblies","State":"open","Body":"I've published an ASP.NET Core project to a folder and I'm trying to dynamically load the assembly containing the ASP.NET Core `Startup` class. I then want to instantiate the `Startup` class and hand it over to the `TestHost` API, so I can start the site in memory. I've written the following code:\r\n\r\n```c#\r\n    var directoryPath = @\"C:\\Dlls\";\r\n    var assemblyFilePath = Path.Combine(directoryPath, \"Foo.dll\");\r\n    var assemblyName = AssemblyLoadContext.GetAssemblyName(assemblyFilePath);\r\n    var assembly = new AssemblyLoader(directoryPath).LoadFromAssemblyName(assemblyName);\r\n    var startupType = assembly.ExportedTypes\r\n        .FirstOrDefault(x => string.Equals(x.Name, \"Startup\"));\r\n    var webHostBuilder = new WebHostBuilder()\r\n        .UseStartup(startupType)\r\n        .UseUrls(new string[] { \"http://localhost\" });\r\n    using (var testServer = new TestServer(webHostBuilder))\r\n    {\r\n        var response = testServer.CreateClient().GetAsync(\"/\");\r\n    }\r\n\r\n    public class AssemblyLoader : AssemblyLoadContext\r\n    {\r\n        private readonly string directoryPath;\r\n\r\n        public AssemblyLoader(string directoryPath) =>\r\n            this.directoryPath = directoryPath;\r\n\r\n        protected override Assembly Load(AssemblyName assemblyName)\r\n        {\r\n            var dependencyContext = DependencyContext.Default;\r\n            var compilationLibraries = dependencyContext\r\n                .CompileLibraries\r\n                .Where(x => x.Name.Contains(assemblyName.Name))\r\n                .ToList();\r\n            if (compilationLibraries.Count > 0)\r\n            {\r\n                return Assembly.Load(new AssemblyName(compilationLibraries.First().Name));\r\n            }\r\n            else\r\n            {\r\n                var file = new FileInfo($\"{this.directoryPath}{Path.DirectorySeparatorChar}{assemblyName.Name}.dll\");\r\n                if (File.Exists(file.FullName))\r\n                {\r\n                    var asemblyLoader = new AssemblyLoader(file.DirectoryName);\r\n                    return asemblyLoader.LoadFromAssemblyPath(file.FullName);\r\n                }\r\n            }\r\n\r\n            return Assembly.Load(assemblyName);\r\n        }\r\n    }\r\n```\r\n\r\nThis works when I publish the app as a self contained application, however, I'd like to avoid dealing with runtime identifiers (RID's) if possible. When I publish normally the code throws a `TypeLoadException` when `assembly.ExportedTypes` is called. The full stack trace:\r\n\r\n```\r\nSystem.TypeLoadException occurred\r\n  HResult=0x80131522\r\n  Message=Method 'ConfigureServices' in type 'Foo.Startup' from assembly 'Foo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' does not have an implementation.\r\n  Source=<Cannot evaluate the exceptionsource>\r\n  StackTrace:    at\r\n   System.Reflection.RuntimeAssembly.GetExportedTypes(RuntimeAssembly assembly, ObjectHandleOnStack retTypes)    at\r\n    System.Reflection.RuntimeAssembly.GetExportedTypes()\r\n```\r\n\r\nHow can I dynamically load the .NET Core runtime in the `AssemblyLoader` class? [Related StackOverflow question](https://stackoverflow.com/questions/44545544/dynamically-loading-an-asp-net-core-assembly).\r\n\r\n[EDIT] @karelz changes: formatting code with c# syntax (\\`\\`\\`c#) and stack trace in \\`\\`\\` block.","Url":"https://github.com/dotnet/coreclr/issues/23757","RelatedDescription":"Open issue \"Dynamically Loading .NET Core Assemblies\" (#23757)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"429973638","IsPullRequest":true,"CreatedAt":"2019-04-06T00:01:26","Actor":"dotnet-bot","Number":"11080","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11080","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#11080)"},{"Id":"429721244","IsPullRequest":true,"CreatedAt":"2019-04-05T23:32:53","Actor":"dotnet-maestro[bot]","Number":"11076","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11076","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11076)"},{"Id":"429959101","IsPullRequest":false,"CreatedAt":"2019-04-05T22:36:18","Actor":"zivkan","Number":"11079","RawContent":null,"Title":"add reference should preserve filesystem casing","State":"open","Body":"## Steps to reproduce\r\n```console\r\ndotnet new classlib -n MyLib\r\ndotnet new console -n MyApp\r\ndotnet add myapp\\myapp.csproj reference mylib\\mylib.csproj\r\n```\r\n\r\n## Expected  behavior\r\n```console\r\nReference `..\\MyLib\\MyLib.csproj` added to the project.\r\n```\r\n(same as filesystem case)\r\n\r\n## Actual behavior\r\n```console\r\nReference `..\\mylib\\mylib.csproj` added to the project.\r\n```\r\n(same as command line argument case)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```console\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27428-5\r\n  Commit:  b6802f2e79\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/11079","RelatedDescription":"Open issue \"add reference should preserve filesystem casing\" (#11079)"},{"Id":"429522206","IsPullRequest":true,"CreatedAt":"2019-04-05T19:37:17","Actor":"wli3","Number":"11074","RawContent":null,"Title":"Move to system.text.json for rest of CLI","State":"closed","Body":"The only behavior change I can find is the trailing comma. Due to corefx's change will not be in time for preview 4. However RuntimeConfig is a file generate by SDK. I think this should be ok. But I need you opinion","Url":"https://github.com/dotnet/cli/pull/11074","RelatedDescription":"Closed or merged PR \"Move to system.text.json for rest of CLI\" (#11074)"},{"Id":"429733352","IsPullRequest":true,"CreatedAt":"2019-04-05T17:37:44","Actor":"dotnet-maestro[bot]","Number":"11078","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190404.1\r\n- **Date Produced**: 4/4/2019 12:23 PM\r\n- **Commit**: 3b7ba6208dc8dbeb89b8031f35fd532b656d7e14\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19204.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11078","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11078)"},{"Id":"429721387","IsPullRequest":true,"CreatedAt":"2019-04-05T12:48:30","Actor":"dotnet-maestro[bot]","Number":"11077","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190404.5\r\n- **Date Produced**: 4/5/2019 5:44 AM\r\n- **Commit**: 29951061e1eb8a2d63dca201c57343fa3344c211\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19204.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11077","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11077)"},{"Id":"429547337","IsPullRequest":true,"CreatedAt":"2019-04-05T02:31:57","Actor":"dotnet-maestro[bot]","Number":"11075","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190404.3\r\n- **Date Produced**: 4/5/2019 1:27 AM\r\n- **Commit**: 4b990161372b4d720377b7ab604393fe33613f2a\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview3.19204.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11075","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11075)"},{"Id":"429241180","IsPullRequest":true,"CreatedAt":"2019-04-05T00:01:34","Actor":"dotnet-maestro[bot]","Number":"11071","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190403.1\r\n- **Date Produced**: 4/3/2019 4:41 PM\r\n- **Commit**: 82cca8869ca50c3bb08358e93c9d2ff40a3b6cdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19203.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11071","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11071)"},{"Id":"428746032","IsPullRequest":true,"CreatedAt":"2019-04-04T23:34:35","Actor":"dotnet-maestro[bot]","Number":"11061","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190402.1\r\n- **Date Produced**: 4/2/2019 12:19 PM\r\n- **Commit**: 49817a7df8672436d9d23b813fdd5268d6019157\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19202.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190403.1\r\n- **Date Produced**: 4/3/2019 12:16 PM\r\n- **Commit**: 8368a94e1efbeb83c04e1ac79be88b8e5bffb7ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19203.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11061","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11061)"},{"Id":"428188617","IsPullRequest":true,"CreatedAt":"2019-04-04T23:32:05","Actor":"dotnet-maestro[bot]","Number":"11052","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190402.13\r\n- **Date Produced**: 4/3/2019 12:44 AM\r\n- **Commit**: 764f362c8e92e41905fe5f6c782ab9980c86c909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19202.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11052","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11052)"},{"Id":"429088431","IsPullRequest":true,"CreatedAt":"2019-04-04T21:01:44","Actor":"peterhuene","Number":"11070","RawContent":null,"Title":"Make sure that an empty argument is preserved.","State":"closed","Body":"These changes fix issue #8892.\r\n\r\nThe net effect is that when an empty argument is detected, a pair of double quotes will be emitted.\r\n\r\nSee #10909 for the original PR.","Url":"https://github.com/dotnet/cli/pull/11070","RelatedDescription":"Closed or merged PR \"Make sure that an empty argument is preserved.\" (#11070)"},{"Id":"429477557","IsPullRequest":false,"CreatedAt":"2019-04-04T20:51:22","Actor":"kavitachana","Number":"11073","RawContent":null,"Title":"global nuget.config not being used on run","State":"open","Body":"## Steps to reproduce\r\nI created a tool path for Jenkins to use ( /opt/jenkins/tools/com.cloudbees.jenkins.plugins.customtools.CustomTool/DotNet_2.1.403/xdgDataHome) and set the environment variable XDG_DATA_HOME to that tool path.\r\n\r\n## Expected  behavior\r\nWhen I run restores without a Nuget.config in the project or workspace, I expect it to use the global nuget.config I created in xdgDataHome which contains the location I want the dependencies pulled.\r\n\r\n\r\n## Actual behavior\r\nOn run, I get multiple failures, and it does not use the nuget.config I created. Instead it tries to pull dependencies from the default location (https://api.nuget.org/v3/index.json ).\r\n\r\nShouldn't this work with a dotnet cli on a linux server?\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11073","RelatedDescription":"Open issue \"global nuget.config not being used on run\" (#11073)"},{"Id":"429080127","IsPullRequest":true,"CreatedAt":"2019-04-04T19:47:36","Actor":"wli3","Number":"11069","RawContent":null,"Title":"Create sentinel file with retry","State":"closed","Body":"Please review by commit\r\n\r\ncore-sdk start to fail occasionally in test during creating sentinel file. https://dev.azure.com/dnceng/public/_build/results?buildId=142547&view=ms.vss-test-web.build-test-results-tab\r\n\r\nIt starts to show up due to https://github.com/dotnet/cli/pull/10729 in which we stop honoring DOTNET_SKIP_FIRST_TIME_EXPERIENCE. That means CLI will always run first run experience(which no longer has expand nuget cache) and create first run sentinel. A race condition during creating first run sentinel start to happen during test. Although it is rare in real usage, I think we should still add retry for creating sentinel file to solve the problem.\r\n","Url":"https://github.com/dotnet/cli/pull/11069","RelatedDescription":"Closed or merged PR \"Create sentinel file with retry\" (#11069)"},{"Id":"429432867","IsPullRequest":false,"CreatedAt":"2019-04-04T19:37:03","Actor":"diedona","Number":"11072","RawContent":null,"Title":"Visual Studio 2017 Build error (SDK 2.2)","State":"closed","Body":"## Steps to reproduce\r\nUse Visual Studio 2017 (15.9.11) **with only the latest asp.net core SDK** (https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-2.2.202-windows-x64-installer)\r\n\r\n## Expected  behavior\r\nCreate and compile projects with VS\r\n\r\n## Actual behavior\r\nYou can only create the projects, as it will ask you what to target:\r\n![erro-01](https://user-images.githubusercontent.com/3251917/55580097-28504600-56f0-11e9-8a65-1c2cb2b5f051.png)\r\n\r\nHowever, when you try to build it:\r\n![erro-02](https://user-images.githubusercontent.com/3251917/55580159-46b64180-56f0-11e9-98ba-506482463ddb.PNG)\r\n\r\nNETSDK1045\tThe current .NET SDK does not support targeting .NET Core 2.2.  Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.\r\n\r\nHowever i can build it through the CLI:\r\n![erro-03](https://user-images.githubusercontent.com/3251917/55580294-a6ace800-56f0-11e9-8bb5-71da8f83f7ca.png)\r\n\r\nAnd i can see my dotnet version pointing to 2.2.202:\r\n![erro-04](https://user-images.githubusercontent.com/3251917/55580480-086d5200-56f1-11e9-8db0-71ea8ace0478.png)\r\n\r\n## Workaround\r\nInstalling dotnet-sdk-2.2.105-win-x64.exe along with 2.2.202 solves the issue and i'm able to compile it in visual studio.\r\n\r\n## Environment data\r\nSDK do .NET Core (refletindo qualquer global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nAmbiente de tempo de execuçao:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11072","RelatedDescription":"Closed issue \"Visual Studio 2017 Build error (SDK 2.2)\" (#11072)"},{"Id":"429018493","IsPullRequest":true,"CreatedAt":"2019-04-04T19:10:54","Actor":"wli3","Number":"11067","RawContent":null,"Title":"Merge release/3.0.1xx to master 040319","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11067","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master 040319\" (#11067)"},{"Id":"429069389","IsPullRequest":false,"CreatedAt":"2019-04-04T03:43:29","Actor":"wli3","Number":"11068","RawContent":null,"Title":"Clean up setting DOTNET_SKIP_FIRST_TIME_EXPERIENCE in script","State":"open","Body":"after https://github.com/dotnet/cli/issues/10364 this flag is no longer honored. We should remove it in our build script across CLI, SDK, toolset, core-sdk\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11068","RelatedDescription":"Open issue \"Clean up setting DOTNET_SKIP_FIRST_TIME_EXPERIENCE in script\" (#11068)"},{"Id":"428838265","IsPullRequest":true,"CreatedAt":"2019-04-03T19:05:34","Actor":"nguerrera","Number":"11064","RawContent":null,"Title":"Insert roslyn for 16.1 P1 (2.1.7xx)","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11064","RelatedDescription":"Closed or merged PR \"Insert roslyn for 16.1 P1 (2.1.7xx)\" (#11064)"},{"Id":"428888702","IsPullRequest":false,"CreatedAt":"2019-04-03T18:36:06","Actor":"michaelveloz","Number":"11066","RawContent":null,"Title":"Dotnet not rolling forward","State":"closed","Body":"## Steps to reproduce\r\nI created a simple app that targeted .net core 2.1.0 using Visual Studio under windows and used \"publish\" to produce a framework dependent app, which I then copied over to a unix machine which has .net core 2.1.105 installed.\r\n\r\n## Expected  behavior\r\nI expected dotnet to run my 2.1.0-targeted app against 2.1.105 as per this doc: https://docs.microsoft.com/en-us/dotnet/core/versions/selection which describes apps rolling forward\r\n\r\n## Actual behavior\r\nError message \"Microsoft.NETCore.App version 2.1.0 was not found... check depdenceies.. or install framework 2.1.0\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.105)\r\n\r\nProduct Information:\r\n Version:            2.1.105\r\n Commit SHA-1 hash:  141cc8d976\r\n\r\nRuntime Environment:\r\n OS Name:     linuxmint\r\n OS Version:  19\r\n OS Platform: Linux\r\n RID:         linuxmint.19-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.105/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11066","RelatedDescription":"Closed issue \"Dotnet not rolling forward\" (#11066)"},{"Id":"428847415","IsPullRequest":true,"CreatedAt":"2019-04-03T18:29:09","Actor":"nguerrera","Number":"11065","RawContent":null,"Title":"Insert roslyn for 16.1 P1 (2.2.3xx)","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11065","RelatedDescription":"Closed or merged PR \"Insert roslyn for 16.1 P1 (2.2.3xx)\" (#11065)"},{"Id":"428657539","IsPullRequest":false,"CreatedAt":"2019-04-03T18:26:03","Actor":"Meai","Number":"11059","RawContent":null,"Title":"Comments in .runtimeconfig.dev.json dont seem to work","State":"closed","Body":"## Steps to reproduce\r\nComments in the json file make it not find assemblies in the `/home/pc/.nuget/packages/` folder.\r\nBut Visual Studio 2019 community edition does not complain about the comments in the .json file. So you can decide who here made the mistake and give somebody else this issue but at least by default print out the used probing paths if an assembly wasn't found, in my opinion that is the least that the cli should be doing. Because my suspicion is that whatever JSON parser you are using is erroring out internally and then you just use the default nuget folders and then it wont find everything it needs to run - silently...\r\n\r\n```\r\n{\r\n  \"runtimeOptions\": {\r\n    \"additionalProbingPaths\": [\r\n      //\"/home/pc/workarea/software/dotnet/sdk/NuGetFallbackFolder\",\r\n      \"/home/pc/.nuget/packages\"\r\n    ]\r\n  }\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /home/pc/workarea/software/dotnet/sdk/2.2.105/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.2.105 [/home/pc/workarea/software/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.3 [/home/pc/workarea/software/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.3 [/home/pc/workarea/software/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/home/pc/workarea/software/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11059","RelatedDescription":"Closed issue \"Comments in .runtimeconfig.dev.json dont seem to work\" (#11059)"},{"Id":"428818901","IsPullRequest":true,"CreatedAt":"2019-04-03T16:22:22","Actor":"rainersigwald","Number":"11063","RawContent":null,"Title":"MSBuild 16.1.27","State":"closed","Body":"This is the MSBuild version that's currently inserted in the 16.1 preview 1 branch.\r\n","Url":"https://github.com/dotnet/cli/pull/11063","RelatedDescription":"Closed or merged PR \"MSBuild 16.1.27\" (#11063)"},{"Id":"428816495","IsPullRequest":true,"CreatedAt":"2019-04-03T15:54:35","Actor":"rainersigwald","Number":"11062","RawContent":null,"Title":"Msbuild 16.1.27 (2.1.7xx)","State":"closed","Body":"This is the MSBuild version that's currently inserted in the 16.1 preview 1 branch.","Url":"https://github.com/dotnet/cli/pull/11062","RelatedDescription":"Closed or merged PR \"Msbuild 16.1.27 (2.1.7xx)\" (#11062)"},{"Id":"428682986","IsPullRequest":true,"CreatedAt":"2019-04-03T10:15:09","Actor":"singhsarab","Number":"11060","RawContent":null,"Title":"Converging dotnet test and dotnet vstest","State":"open","Body":"Fixes: https://github.com/Microsoft/vstest/issues/1453\r\n\r\n### Description\r\nAdd the ability inside the dotnet test verb to honor dll/exe as input just like dotnet vstest verb.\r\n\r\nRaising it against 2.2.2xx for now.\r\nWill cherry-pick to 2.2.3xx and 3.0.1xx if advised.\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11060","RelatedDescription":"Open PR \"Converging dotnet test and dotnet vstest\" (#11060)"},{"Id":"428388246","IsPullRequest":false,"CreatedAt":"2019-04-03T03:53:28","Actor":"dylank","Number":"11055","RawContent":null,"Title":"dotnet restore --interactive: 401 Unauthorized on Windows with Azure DevOps feed","State":"closed","Body":"## Steps to reproduce\r\n\r\ndotnet restore always fails on Windows when connecting to a private feed hosted on ADO.\r\n\r\n```\r\n>dotnet restore --interactive\r\n  Restoring packages for ....csproj...\r\n  Restoring packages for ...csproj...\r\nC:\\Program Files\\dotnet\\sdk\\2.2.104\\NuGet.targets(114,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/microsoft/_packaging/something/nuget/v3/index.json. [....sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.104\\NuGet.targets(114,5): error :   Response status code does not indicate success: 401 (Unauthorized). [....sln]\r\n```\r\n\r\n## Expected  behavior\r\nRunning `dotnet restore --interactive` should prompt for code auth, like it does on macOS. Alternatively, running `dotnet restore` should behave like `nuget restore` does, and prompt for credentials allowing you to enter a PAT.\r\n\r\n## Actual behavior\r\nOn Windows 10, running `dotnet restore --interactive` or `dotnet restore` will always fail when connecting to a private feed on ADO.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.104\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11055","RelatedDescription":"Closed issue \"dotnet restore --interactive: 401 Unauthorized on Windows with Azure DevOps feed\" (#11055)"},{"Id":"428518835","IsPullRequest":false,"CreatedAt":"2019-04-03T01:28:07","Actor":"flcdrg","Number":"11058","RawContent":null,"Title":"dotnet-install.ps1 installs locally even when same version is already installed globally","State":"open","Body":"## Steps to reproduce\r\n\r\n1. On a machine that already has 2.2.101 SDK installed\r\n2. `.\\dotnet-install.ps1 -Version 2.2.101`\r\n\r\n## Expected behavior\r\n\r\nDo nothing. \r\n\r\nMaybe provide a `-Force` parameter so that only when that is given, do you still install the version\r\n\r\n## Actual behavior\r\n\r\nVersion is installed into `c:\\users\\USERNAME\\AppData\\Local\\Microsoft\\dotnet`, even if it was already installed in `C:\\Program Files\\dotnet\\sdk`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003156 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11058","RelatedDescription":"Open issue \"dotnet-install.ps1 installs locally even when same version is already installed globally\" (#11058)"},{"Id":"428417045","IsPullRequest":false,"CreatedAt":"2019-04-02T22:51:53","Actor":"richlander","Number":"11056","RawContent":null,"Title":"dotnet build doesn't work when filtered to a supported framework for current SDK","State":"closed","Body":"I am wanting to build a project with the .NET Core 2.2 SDK. The project targets .NET Core 3.0 and 2.2. It should work, but instead, it makes me sad.\r\n\r\n```console\r\nC:\\git\\testapps\\cpumath>type cpumath.csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp3.0;net472;netcoreapp2.2</TargetFrameworks>\r\n    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ML.CpuMath\" Version=\"0.11.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\nC:\\git\\testapps\\cpumath>dotnet build -f netcoreapp2.2\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.2.105\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n\r\nC:\\git\\testapps\\cpumath>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27529-09\r\n  Commit:  0a688d1b7e\r\n```","Url":"https://github.com/dotnet/cli/issues/11056","RelatedDescription":"Closed issue \"dotnet build doesn't work when filtered to a supported framework for current SDK\" (#11056)"},{"Id":"428419314","IsPullRequest":false,"CreatedAt":"2019-04-02T20:09:09","Actor":"richlander","Number":"11057","RawContent":null,"Title":"File in use problems","State":"open","Body":"I am using .NET Core and in a short timespan, I see the following two errors. They are intermittent (build again and the error goes away). I am using VS Code at the same time (if that matters). I have never seen this before. Any clues what might be going on? These are serious issues if at all pervasive.\r\n\r\n```console\r\nC:\\git\\testapps\\cpumath>dotnet build\r\nMicrosoft (R) Build Engine version 16.1.46-preview+ge12aa7ba78 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 971.7 ms for C:\\git\\testapps\\cpumath\\cpumath.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.GenerateAssemblyInfo.targets(133,5): error MSB3713: The file \"obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs\" could not be created. The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n  cpumath -> C:\\git\\testapps\\cpumath\\bin\\Debug\\net472\\cpumath.exe\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.GenerateAssemblyInfo.targets(133,5): error MSB3713: The file \"obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs\" could not be created. The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.25\r\n```\r\n\r\nAnd then:\r\n\r\n```console\r\nC:\\git\\testapps\\cpumath>dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\git\\testapps\\cpumath\\cpumath.csproj...\r\n  Generating MSBuild file C:\\git\\testapps\\cpumath\\obj\\cpumath.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\git\\testapps\\cpumath\\obj\\cpumath.csproj.nuget.g.targets.\r\n  Restore completed in 345.7 ms for C:\\git\\testapps\\cpumath\\cpumath.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\2.2.105\\Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3101: Could not write state file \"obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache\". The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n  cpumath -> C:\\git\\testapps\\cpumath\\bin\\Debug\\netcoreapp2.2\\cpumath.dll\r\n\r\nBuild succeeded.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.2.105\\Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3101: Could not write state file \"obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache\". The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n    1 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:04.33\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/11057","RelatedDescription":"Open issue \"File in use problems\" (#11057)"},{"Id":"428383804","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:46","Actor":"nugetlurker","Number":"11054","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into cli","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into cli release/2.1.7xx branch","Url":"https://github.com/dotnet/cli/pull/11054","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into cli\" (#11054)"},{"Id":"428383784","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:43","Actor":"nugetlurker","Number":"11053","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into cli","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into cli release/2.2.3xx branch","Url":"https://github.com/dotnet/cli/pull/11053","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into cli\" (#11053)"},{"Id":"427835882","IsPullRequest":false,"CreatedAt":"2019-04-01T17:56:25","Actor":"tylerohlsen","Number":"11051","RawContent":null,"Title":"Inconsistent target path between solution build and project build when platform specified","State":"open","Body":"## Steps to reproduce\r\nThe target path / output directory are different building the solution vs building the project when the platform is specified.\r\n`dotnet build MyProject.sln /p:Platform=\"Any CPU\"`  \r\n`dotnet build MyProject.csproj /p:Platform=\"Any CPU\"`  \r\n(where MyProject.sln contains MyProject.csproj)\r\n\r\n## Expected  behavior\r\nThe TargetPath for MyProject for both commands should be the same.\r\n\r\n## Actual behavior\r\nTargetPath when building the solution: ```MyProject\\bin\\Debug\\netstandard2.0\\MyProject.dll```\r\nTargetPath when building the project: ```MyProject\\bin\\Any CPU\\Debug\\netstandard2.0\\MyProject.dll```\r\n\r\n## Environment data\r\n<details><summary>My environment data</summary>  \r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview4-004233 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-rc3-004530 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download```\r\n</details>","Url":"https://github.com/dotnet/cli/issues/11051","RelatedDescription":"Open issue \"Inconsistent target path between solution build and project build when platform specified\" (#11051)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"429990573","IsPullRequest":false,"CreatedAt":"2019-04-06T03:00:49","Actor":"benneyman","Number":"1127","RawContent":null,"Title":"[Help] Targeting netstandard2.0 for a class library","State":"open","Body":"After a lot of googling I came to realize that my existing class library(net462) should be targeting netstandard2.0 to be able to reference into my react app (dotnet new react) which targets netcoreapp2.1.\r\n\r\nI am not sure how to make my class library to target netstandard2.0 from Visual Studio 2013. From the extensive googling I did I know we need VS 2017 (15.3) to do this. I do not have access to VS 2017.\r\n\r\nI feel there could be other ways of doing this without having to have VS2017 from the googling I did. But I can't any concrete solutions.\r\n\r\nCould you please guide me on how to target a class library to netstandard2.0 from Visual Studio 2013 or using CLI tools so that I will be able to add a project reference to my react project.","Url":"https://github.com/dotnet/standard/issues/1127","RelatedDescription":"Open issue \"[Help] Targeting netstandard2.0 for a class library\" (#1127)"},{"Id":"429978073","IsPullRequest":true,"CreatedAt":"2019-04-06T00:36:40","Actor":"JohnTortugo","Number":"1126","RawContent":null,"Title":"Onboard on async publishing","State":"open","Body":"Relates to: https://github.com/dotnet/arcade/issues/2442\r\n\r\nTest build was here: https://dnceng.visualstudio.com/internal/_build/results?buildId=144566\r\n\r\nTest release: https://dnceng.visualstudio.com/internal/_releaseProgress?_a=release-pipeline-progress&releaseId=4241","Url":"https://github.com/dotnet/standard/pull/1126","RelatedDescription":"Open PR \"Onboard on async publishing\" (#1126)"},{"Id":"429720581","IsPullRequest":true,"CreatedAt":"2019-04-05T12:11:02","Actor":"dotnet-maestro[bot]","Number":"1125","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19204.16\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1125","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1125)"},{"Id":"429609384","IsPullRequest":false,"CreatedAt":"2019-04-05T07:06:16","Actor":"Jacksiro","Number":"1124","RawContent":null,"Title":"Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell'","State":"closed","Body":"I am using VS 2017 Community and have targeted .Net v4.5 in my app. My app throws the error of \r\n\r\n```\r\n\r\n> See the end of this message for details on invoking \r\n> just-in-time (JIT) debugging instead of this dialog box.\r\n> \r\n> ************** Exception Text **************\r\n> System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.\r\n> File name: 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n>    at EasyTabs.TitleBarTabs.SetFrameSize()\r\n>    at EasyTabs.TitleBarTabs.OnSizeChanged(EventArgs e)\r\n>    at System.Windows.Forms.Control.UpdateBounds(Int32 x, Int32 y, Int32 width, Int32 height, Int32 clientWidth, Int32 clientHeight)\r\n>    at System.Windows.Forms.Control.UpdateBounds()\r\n>    at System.Windows.Forms.Control.WndProc(Message& m)\r\n>    at System.Windows.Forms.ScrollableControl.WndProc(Message& m)\r\n>    at System.Windows.Forms.Form.WndProc(Message& m)\r\n>    at EasyTabs.TitleBarTabs.WndProc(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n>    at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n> \r\n> WRN: Assembly binding logging is turned OFF.\r\n> To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n> Note: There is some performance penalty associated with assembly bind failure logging.\r\n> To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n> \r\n> \r\n> \r\n> ************** Loaded Assemblies **************\r\n> mscorlib\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.NET/Framework/v4.0.30319/mscorlib.dll\r\n> ----------------------------------------\r\n> vSongBook\r\n>     Assembly Version: 2.3.5.2\r\n>     Win32 Version: 2.3.5.2\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/vSongBook.exe\r\n> ----------------------------------------\r\n> System.Windows.Forms\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Windows.Forms/v4.0_4.0.0.0__b77a5c561934e089/System.Windows.Forms.dll\r\n> ----------------------------------------\r\n> System\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System/v4.0_4.0.0.0__b77a5c561934e089/System.dll\r\n> ----------------------------------------\r\n> System.Drawing\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Drawing/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Drawing.dll\r\n> ----------------------------------------\r\n> JacksiroCtrl\r\n>     Assembly Version: 1.2.5.0\r\n>     Win32 Version: 1.2.5.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/JacksiroCtrl.DLL\r\n> ----------------------------------------\r\n> SQLite.NET\r\n>     Assembly Version: 0.21.1869.3794\r\n>     Win32 Version: 0.21.1869.3794\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/SQLite.NET.DLL\r\n> ----------------------------------------\r\n> System.Data\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_32/System.Data/v4.0_4.0.0.0__b77a5c561934e089/System.Data.dll\r\n> ----------------------------------------\r\n> System.Core\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Core/v4.0_4.0.0.0__b77a5c561934e089/System.Core.dll\r\n> ----------------------------------------\r\n> System.Xml\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Xml/v4.0_4.0.0.0__b77a5c561934e089/System.Xml.dll\r\n> ----------------------------------------\r\n> EasyTabs\r\n>     Assembly Version: 1.3.3.0\r\n>     Win32 Version: 1.3.3.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/EasyTabs.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Uxtheme\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Uxtheme.DLL\r\n> ----------------------------------------\r\n> Win32Interop.User32\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.User32.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Dwmapi\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Dwmapi.DLL\r\n> ----------------------------------------\r\n> \r\n> ************** JIT Debugging **************\r\n> To enable just-in-time (JIT) debugging, the .config file for this\r\n> application or computer (machine.config) must have the\r\n> jitDebugging value set in the system.windows.forms section.\r\n> The application must also be compiled with debugging\r\n> enabled.\r\n> \r\n> For example:\r\n> \r\n> <configuration>\r\n>     <system.windows.forms jitDebugging=\"true\" />\r\n> </configuration>\r\n> \r\n> When JIT debugging is enabled, any unhandled exception\r\n> will be sent to the JIT debugger registered on the computer\r\n> rather than be handled by this dialog box.\r\n\r\n```\r\n\r\nKIndly advice me on the on how to resolve this issue","Url":"https://github.com/dotnet/standard/issues/1124","RelatedDescription":"Closed issue \"Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell'\" (#1124)"},{"Id":"429582381","IsPullRequest":false,"CreatedAt":"2019-04-05T04:53:06","Actor":"Groostav","Number":"1123","RawContent":null,"Title":"phantom connection when mixing async & blocking calls on TcpClient ","State":"open","Body":"apologies if this is the wrong place to report this!\r\n\r\non .net 4.6.1, win10\r\n\r\n1. create a TCPClient object\r\n2. attempt to connect synchronously to an endpoint with no bound service, get a `SocketException: Connection actively refused\"\r\n3. attempt to `connectAsync` to that same endpoint \r\n\r\nexpected: Asynchronously get a `SocketException: Connection Actively Refused`\r\nactual: connection is established, `tcpClient.Connected` returns true, `tcpClient.GetStream()` returns non-null, `tcpClient.GetStream().write(...)` throws `NotConnectedException`.\r\n\r\n```C#\r\n        \r\n[Test] //baseline, good behaviour\r\npublic async Task when_only_using_async_calls_should_get_consistent_behaviour()\r\n{\r\n    //setup\r\n    var localhost = \"127.0.0.1\";\r\n    var port = 27041; \r\n    \r\n    var tcpClient = new TcpClient();\r\n\r\n    //act\r\n    try\r\n    {\r\n        await tcpClient.ConnectAsync(localhost, port);\r\n        Assert.Fail(\"connection was actually established!\");\r\n    }\r\n    catch (SocketException ex)\r\n    {\r\n        //continue\r\n    }\r\n\r\n    Func<Task> act = (async () => await tcpClient.ConnectAsync(localhost, port));\r\n\r\n    //assert\r\n    act.Should().Throw<SocketException>();\r\n}        \r\n\r\n\r\n[Test]\r\npublic async Task when_mixing_sync_and_async_tcpclient_calls_should_get_hideous_behaviour()\r\n{\r\n    //setup\r\n    var localhost = \"127.0.0.1\";\r\n    var port = 27041; \r\n    \r\n    var tcpClient = new TcpClient();\r\n\r\n    //act\r\n    try\r\n    {\r\n        tcpClient.Connect(localhost, port);\r\n        Assert.Fail(\"connection was actually established!\");\r\n    }\r\n    catch (SocketException ex)\r\n    {\r\n        //continue\r\n    }\r\n\r\n    await tcpClient.ConnectAsync(localhost, port);\r\n\r\n    //assert\r\n    tcpClient.Connected.Should().BeTrue();\r\n    tcpClient.GetStream().Should().NotBeNull();\r\n\r\n    //seems very strange\r\n    //subsequent interactions with tcpClient throw \"not connected\" exceptions\r\n    //I would've expected the `ConnectAsync` method to throw the same `SocketException`,\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1123","RelatedDescription":"Open issue \"phantom connection when mixing async & blocking calls on TcpClient \" (#1123)"},{"Id":"429333028","IsPullRequest":false,"CreatedAt":"2019-04-04T15:07:55","Actor":"Korporal","Number":"1122","RawContent":null,"Title":"The end of .NET Framework support?","State":"open","Body":"Hi,\r\n\r\nOn [this ](https://github.com/dotnet/standard/blob/master/docs/versions.md)page we see this footnote under the chart:\r\n\r\n> 2 .NET Framework will not support .NET Standard 2.1 or any other later version. For more details, see this blog post.\r\n\r\nI can understand how some specific version like .NET Framework 4.6.1 (for example) will not support .NET Standard 2.1 but _all_ **future** versions of the .NET Framework too?\r\n\r\nThis statements amounts to a phasing out of .NET Framework, it tells us that we should begin to stop targeting it - well that's what seems to be a logical conclusion anyway.\r\n\r\nI don't understand why some future version of .NET Framework (e.g. 4.8) could not include support for .NET Core 2.1?\r\n\r\nWe read [here ](https://docs.microsoft.com/en-us/dotnet/standard/net-standard)the following Microsoft statement:\r\n\r\n> The .NET Standard is a formal specification of .NET APIs that are intended to be available on **_all_** .NET implementations.\r\n\r\nBut now you're retracting this and instead should be saying:\r\n\r\n> The .NET Standard 2.0 and below, is a formal specification of .NET APIs that are intended to be available on all .NET implementations.\r\n\r\nCan Microsoft please be clearer about this? Companies and their staff are under a huge burden to keep up with all sorts of developments in the technology world and if we are being advised to phase out our own support for the .NET Framework then please say so very clearly and definitively, mentioning this kind of thing as small footnote isn't helpful.\r\n\r\nThanks\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1122","RelatedDescription":"Open issue \"The end of .NET Framework support?\" (#1122)"},{"Id":"429240376","IsPullRequest":true,"CreatedAt":"2019-04-04T12:13:48","Actor":"dotnet-maestro[bot]","Number":"1121","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19203.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1121","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1121)"},{"Id":"429232379","IsPullRequest":false,"CreatedAt":"2019-04-04T11:43:44","Actor":"markrendle","Number":"1120","RawContent":null,"Title":"Please please please don't call it .NET Standard 2.1 when it aligns with .NET Core 3.0","State":"open","Body":"This is exactly the sort of version number weirdness that .NET takes flak for.\r\n\r\nIn the commit explaining the 2.1 decision, the 3.0 section is:\r\n\r\n- **3.0**\r\n  - Aligns with .NET Core, which will be released at the same time as .NET\r\n    Standard vNext\r\n  - Pros\r\n    + Leaves room for another .NET Standard that is smaller\r\n    + Simpler messaging when we ship .NET Core and .NET Standard and aligns with\r\n      what we did for .NET Core 2.0.\r\n  - Cons\r\n    + A 3.0 isn't really warranted for .NET Standard\r\n    + Perpetuates the problem of aligning .NET Core & .NET Standard versions and\r\n      requires arbitrary skipping of version numbers\r\n\r\n*Simpler messaging* should be a top priority here. I'm going to spend as much time explaining to clients why they can't use .NET Standard 2.1 with the .NET Core 2.1 LTS as my niece Allyce does explaining how to spell her name.\r\n\r\nIf a 3.0 is warranted for .NET Core, with it's `IAsyncEnumerable`, `IAsyncDisposable`, `Range` and `Index` and all the new overloads of existing APIs, then why isn't it warranted for .NET Standard?\r\n\r\nBetter yet, why not publish a .NET Standard 2.1 which aligns with .NET Core 2.1, with all the `Span<T>` goodness, and a .NET Standard 3.0 which aligns with .NET Core 3.0?\r\n\r\nDeliberately versioning .NET Standard independently of .NET Core, especially on the major version numbers, just seems perverse and unnecessary.","Url":"https://github.com/dotnet/standard/issues/1120","RelatedDescription":"Open issue \"Please please please don't call it .NET Standard 2.1 when it aligns with .NET Core 3.0\" (#1120)"},{"Id":"428727330","IsPullRequest":true,"CreatedAt":"2019-04-03T12:11:00","Actor":"dotnet-maestro[bot]","Number":"1119","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190402.13\r\n- **Date Produced**: 4/3/2019 12:44 AM\r\n- **Commit**: 764f362c8e92e41905fe5f6c782ab9980c86c909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19202.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1119","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1119)"},{"Id":"428466923","IsPullRequest":false,"CreatedAt":"2019-04-02T22:06:10","Actor":"wtgodbe","Number":"1118","RawContent":null,"Title":"Consider adding Nullable annotations to .Net Standard","State":"open","Body":"https://github.com/dotnet/coreclr/tree/NullableFeature\r\n\r\nWe should consider adding the annotations from the above Feature branch to the .Net Standard for 2.1.\r\n\r\nCC @wtgodbe @terrajobst @dotnet/nullablefc ","Url":"https://github.com/dotnet/standard/issues/1118","RelatedDescription":"Open issue \"Consider adding Nullable annotations to .Net Standard\" (#1118)"},{"Id":"428187528","IsPullRequest":true,"CreatedAt":"2019-04-02T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1117","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19201.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1117","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1117)"},{"Id":"427275509","IsPullRequest":true,"CreatedAt":"2019-03-30T12:23:34","Actor":"dotnet-maestro[bot]","Number":"1116","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1116","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1116)"},{"Id":"426954195","IsPullRequest":true,"CreatedAt":"2019-03-29T12:13:42","Actor":"dotnet-maestro[bot]","Number":"1115","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1115","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1115)"},{"Id":"426800191","IsPullRequest":false,"CreatedAt":"2019-03-29T03:29:38","Actor":"CalvinFengDatacom","Number":"1114","RawContent":null,"Title":"Multiple assemblies with equivalent identity have been imported","State":"open","Body":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks","Url":"https://github.com/dotnet/standard/issues/1114","RelatedDescription":"Open issue \"Multiple assemblies with equivalent identity have been imported\" (#1114)"},{"Id":"420728685","IsPullRequest":false,"CreatedAt":"2019-03-28T16:46:11","Actor":"OpenSpacesAndPlaces","Number":"1100","RawContent":null,"Title":"Question....On .Net Framework 4.7 without any SDKs...","State":"closed","Body":"I'm currently running into an issue with a hosting company that only has .Net Framework 4.7 installed and no supporting SDKS for netstandard 2.0.\r\n\r\nThe netstandard 2.0. library is needed for EntityFramework Core and SignalR Core.\r\n\r\nThe problem is:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n\r\n- Simply trying to add the 4.7.1. dll results in:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context\r\n\r\n- Pre-compiling/Publish has not helped.\r\n- Attempting to include the required base libraries (the ones .Net Standard would be used to pull in) has not helped.\r\n- Various combinations of assembly rules/config settings has not helped.\r\n\r\n---\r\n\r\nI'm totally fine with hand adding every last nuget package needed if there is a way to redirect the netstandard bindings to the base libraries.\r\n\r\nUnfortunately there is no RDP access to the server - so any fix has to be within the confines of bin folder drops or web.config values.\r\n\r\n---\r\n\r\nAny help appreciated!\r\nAny other details I can provide - let me know!","Url":"https://github.com/dotnet/standard/issues/1100","RelatedDescription":"Closed issue \"Question....On .Net Framework 4.7 without any SDKs...\" (#1100)"},{"Id":"426583515","IsPullRequest":false,"CreatedAt":"2019-03-28T16:14:20","Actor":"CoenraadS","Number":"1113","RawContent":null,"Title":"System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'","State":"open","Body":"I have a .Net Core Project that requires `System.UriTemplate` which doesn't seem implemented.\r\n\r\n`System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'`\r\n\r\n`TypeLoadException: Could not load type 'System.UriTemplate' from assembly 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.`\r\n\r\n.Net Core 2.1 Console Project\r\n\r\n![image](https://user-images.githubusercontent.com/5593825/55173581-3c3dfa00-517c-11e9-95d0-7380e4ce654a.png)\r\n\r\n\r\n```\r\nusing Microsoft.ServiceBus.Messaging;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            string connectionString = \"\";\r\n            var q = QueueClient.CreateFromConnectionString(connectionString, \"myqueue\");\r\n\r\n            var sessions = q.GetMessageSessions();\r\n\r\n            var names = sessions.Select(e => e.SessionId);\r\n\r\n            foreach (var name in names)\r\n            {\r\n                Console.WriteLine(name);\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1113","RelatedDescription":"Open issue \"System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'\" (#1113)"},{"Id":"426455070","IsPullRequest":true,"CreatedAt":"2019-03-28T12:24:04","Actor":"dotnet-maestro[bot]","Number":"1112","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190327.11\r\n- **Date Produced**: 3/28/2019 1:58 AM\r\n- **Commit**: 69f276904fdd6d8f81404b857f295537894b81d3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19177.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1112","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1112)"},{"Id":"426112720","IsPullRequest":true,"CreatedAt":"2019-03-27T19:57:52","Actor":"wtgodbe","Number":"1111","RawContent":null,"Title":"Update build pools","State":"closed","Body":"@MattGal @mmitche PTAL","Url":"https://github.com/dotnet/standard/pull/1111","RelatedDescription":"Closed or merged PR \"Update build pools\" (#1111)"},{"Id":"425696215","IsPullRequest":true,"CreatedAt":"2019-03-27T13:10:47","Actor":"ericstj","Number":"1109","RawContent":null,"Title":"Make some packages optional for source build","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1109","RelatedDescription":"Closed or merged PR \"Make some packages optional for source build\" (#1109)"},{"Id":"425920602","IsPullRequest":true,"CreatedAt":"2019-03-27T12:13:39","Actor":"dotnet-maestro[bot]","Number":"1110","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190326.14\r\n- **Date Produced**: 3/27/2019 12:08 AM\r\n- **Commit**: e23a3e2fd09a6222361ce47b78d23ab42867924c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19176.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1110","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1110)"},{"Id":"425628046","IsPullRequest":true,"CreatedAt":"2019-03-26T20:21:32","Actor":"dotnet-maestro[bot]","Number":"1108","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190325.9\r\n- **Date Produced**: 3/25/2019 10:36 PM\r\n- **Commit**: 13daa29185518ef3c6d4074fd07efbc5236a76c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19175.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1108","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1108)"},{"Id":"425140404","IsPullRequest":true,"CreatedAt":"2019-03-26T19:53:53","Actor":"wtgodbe","Number":"1107","RawContent":null,"Title":"Add transport package for NetStandard","State":"closed","Body":"This creates a transport package, `Microsoft.Private.Standard`, which contains the same netstandard2.1 binaries as `NetStandard.Library`, but not `NetStandard.Library.Targets`. The assets are in `ref\\netstandard2.1` instead of `build\\netstandard2.1\\ref`. This transport package can be consumed by Core-Setup for the purpose of creating the targeting pack, rather than publicly shipping `NetStandard.Library`, or having Core-Setup consume its Standard dependencies through `NetStandard.Library`. Eventually we can phase out NS.L in favor of this transport package.\r\n\r\n@ericstj @dagood @terrajobst PTAL\r\n\r\nResolves https://github.com/dotnet/standard/issues/1106","Url":"https://github.com/dotnet/standard/pull/1107","RelatedDescription":"Closed or merged PR \"Add transport package for NetStandard\" (#1107)"},{"Id":"425067073","IsPullRequest":false,"CreatedAt":"2019-03-26T19:53:53","Actor":"wtgodbe","Number":"1106","RawContent":null,"Title":"Create a transport package for NetStandard","State":"closed","Body":"We should create a transport package for Net Standard, and stop shipping/building stable versions of NS.Library. Instead, we can have Core-Setup consume the transport package, and release the bits through a targeting pack. The contents should be similar to what's in NS.Library today, but in the `ref\\netstandard2.1` folder instead of `build`\r\n\r\nCC @dagood @ericstj ","Url":"https://github.com/dotnet/standard/issues/1106","RelatedDescription":"Closed issue \"Create a transport package for NetStandard\" (#1106)"},{"Id":"423998952","IsPullRequest":true,"CreatedAt":"2019-03-22T17:11:38","Actor":"dotnet-maestro[bot]","Number":"1104","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1104)"},{"Id":"422563592","IsPullRequest":false,"CreatedAt":"2019-03-19T06:25:32","Actor":"githubdigo","Number":"1103","RawContent":null,"Title":"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1103","RelatedDescription":"Open issue \"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception\" (#1103)"},{"Id":"421676181","IsPullRequest":true,"CreatedAt":"2019-03-18T19:09:34","Actor":"terrajobst","Number":"1102","RawContent":null,"Title":"Expose RandomNumberGenerator.GetInt32","State":"closed","Body":"Fixes #1101.","Url":"https://github.com/dotnet/standard/pull/1102","RelatedDescription":"Closed or merged PR \"Expose RandomNumberGenerator.GetInt32\" (#1102)"},{"Id":"420975088","IsPullRequest":false,"CreatedAt":"2019-03-18T19:09:34","Actor":"khellang","Number":"1101","RawContent":null,"Title":"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32","State":"closed","Body":"I'd like to propose the inclusion of the new `System.Security.Cryptography.RandomNumberGenerator.GetInt32` APIs, added in https://github.com/dotnet/corefx/pull/31243.\r\n\r\nAs noted in https://github.com/dotnet/corefx/issues/30873, this is often incorrectly implemented, which can lead to security vulnerabilities and bias. It would be nice if it was part of the standard, to have a convenient API for this across all platforms.\r\n\r\nThe implementation doesn't have a lot of dependencies and could probably be (more or less) copied to other platforms.\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex ec34484..2b7d68b 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -810,6 +810,8 @@ namespace System.Security.Cryptography\r\n         public virtual void GetBytes(System.Span<byte> data) { }\r\n         public virtual void GetNonZeroBytes(byte[] data) { }\r\n         public virtual void GetNonZeroBytes(System.Span<byte> data) { }\r\n+        public static int GetInt32(int fromInclusive, int toExclusive) { throw null; }\r\n+        public static int GetInt32(int toExclusive) { throw null; }\r\n     }\r\n     [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n     public abstract partial class RC2 : System.Security.Cryptography.SymmetricAlgorithm\r\n\r\n```\r\n\r\n// @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1101","RelatedDescription":"Closed issue \"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32\" (#1101)"},{"Id":"419180568","IsPullRequest":false,"CreatedAt":"2019-03-10T17:28:29","Actor":"jinyuttt","Number":"1099","RawContent":null,"Title":"Elliptic Curve Cryptography","State":"closed","Body":"Provide elliptic curve cryptography? ","Url":"https://github.com/dotnet/standard/issues/1099","RelatedDescription":"Closed issue \"Elliptic Curve Cryptography\" (#1099)"},{"Id":"418668244","IsPullRequest":true,"CreatedAt":"2019-03-09T00:32:27","Actor":"stephentoub","Number":"1098","RawContent":null,"Title":"Add dummy field to TypedReference","State":"closed","Body":"cc: @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1098","RelatedDescription":"Closed or merged PR \"Add dummy field to TypedReference\" (#1098)"},{"Id":"418474274","IsPullRequest":false,"CreatedAt":"2019-03-07T22:27:38","Actor":"MgSam","Number":"1097","RawContent":null,"Title":"Change .NET Standard 2.1 version number","State":"closed","Body":"It was just [announced ](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/#) that the next version of .NET Standard will be 2.1, which will be implemented by .NET Core 3.0 and incompatible with .NET Core 2.1 and incompatible with any version of .NET Framework. Got all that?\r\n\r\nI implore you to please change the version number of Standard 2.1 before it's too late. It is extremely confusing to have it be Standard 2.1 which is incompatible with Core 2.1. I strongly feel that Standard should version alongside of Core (given that Core is the lead implementation of .NET) and should be Standard 3.0\r\n\r\nIn lieu of that, at the very least it should get a version number which doesn't actively lead to confusion by aligning with the version number of an incompatible version of Core. Standard 2.5?\r\n\r\nI know Microsoft has a reputation to uphold at being horrible at naming things, but this is a bridge too far :)","Url":"https://github.com/dotnet/standard/issues/1097","RelatedDescription":"Closed issue \"Change .NET Standard 2.1 version number\" (#1097)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"429865870","IsPullRequest":true,"CreatedAt":"2019-04-06T03:56:21","Actor":"steveharter","Number":"36637","RawContent":null,"Title":"Support json deserialize of 'null' and 'bool' when declared type is typeof(object)","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/36611 which previously threw a NullReferenceException instead of returning null when deserializing a null root object that has typeof(object):\r\n```object obj = JsonSerializer.Parse<object>(\"null\");```\r\n\r\nAlso includes refactoring around polymorphic support and enables someone to write an object-based value converter in the future.","Url":"https://github.com/dotnet/corefx/pull/36637","RelatedDescription":"Closed or merged PR \"Support json deserialize of 'null' and 'bool' when declared type is typeof(object)\" (#36637)"},{"Id":"429733159","IsPullRequest":true,"CreatedAt":"2019-04-06T02:49:58","Actor":"dotnet-maestro[bot]","Number":"36624","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190404.13\r\n- **Date Produced**: 4/5/2019 5:46 AM\r\n- **Commit**: 209213958004859a79ca586e7b278b5c7fe1f4b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27604-13\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview4-27604-13\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview4-27604-13\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36624","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#36624)"},{"Id":"429953647","IsPullRequest":true,"CreatedAt":"2019-04-06T02:40:23","Actor":"safern","Number":"36644","RawContent":null,"Title":"Remove Microsoft.Windows.Compatibility.Shims package","State":"closed","Body":"We don't need to do this anymore since starting 2.1, we use the inbox shipped shims. So if people want the latest shims, they should just move to latest frameworks. If we want to ship the latest shims for 2.0, we would need to also cross compile the shims for 2.1 and so on for newer frameworks. @ericstj and I decided it is not worth, and if we need to ship a fix to the shims package we can do it from the 2.1 branch.\r\n\r\ncc: @jkotas @ericstj @danmosemsft @Anipik ","Url":"https://github.com/dotnet/corefx/pull/36644","RelatedDescription":"Closed or merged PR \"Remove Microsoft.Windows.Compatibility.Shims package\" (#36644)"},{"Id":"429963480","IsPullRequest":true,"CreatedAt":"2019-04-06T02:39:52","Actor":"VSadov","Number":"36645","RawContent":null,"Title":"Fix a race condition in a TaskStatusTest","State":"closed","Body":"See: https://github.com/dotnet/coreclr/issues/20706","Url":"https://github.com/dotnet/corefx/pull/36645","RelatedDescription":"Closed or merged PR \"Fix a race condition in a TaskStatusTest\" (#36645)"},{"Id":"429887853","IsPullRequest":true,"CreatedAt":"2019-04-06T02:37:22","Actor":"Dotnet-GitSync-Bot","Number":"36638","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @safern @safern @krwq @krwq @tannergooding @tannergooding @danmosemsft @stephentoub @safern @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @stephentoub @krwq @buyaa-n @stephentoub @stephentoub @stephentoub @safern @stephentoub @stephentoub @krwq @stephentoub @safern @safern","Url":"https://github.com/dotnet/corefx/pull/36638","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#36638)"},{"Id":"429975582","IsPullRequest":false,"CreatedAt":"2019-04-06T00:15:41","Actor":"dbaileyut","Number":"36647","RawContent":null,"Title":"Group lookup fails if first Global Catalog server is down","State":"open","Body":"There appears to be a bug with Global Catalog discovery/error handling in System.DirectoryServices.AccountManagement\r\n\r\nIf the \"first\" Global Catalog in an Active Directory site is unavailable, calling System.DirectoryServices.AccountManagement.Principal.GetGroups() results in an error.\r\n\r\nIt appears to be related to the code block at https://github.com/dotnet/corefx/blob/a6f76f4f620cbe74821c6445af3f13e048361658/src/System.DirectoryServices.AccountManagement/src/System/DirectoryServices/AccountManagement/AD/ADStoreCtx.cs#L1207-L1215\r\n\r\nsince it gets all the GCs and tests their names without confirming they're available. If the first one succeeds, it breaks out.\r\n\r\nSee attached stack trace and rough test code.\r\n[StackTrace.txt](https://github.com/dotnet/corefx/files/3049985/StackTrace.txt)\r\n[Replication-CSTest.txt](https://github.com/dotnet/corefx/files/3049987/Replication-CSTest.txt)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/36647","RelatedDescription":"Open issue \"Group lookup fails if first Global Catalog server is down\" (#36647)"},{"Id":"429969537","IsPullRequest":true,"CreatedAt":"2019-04-05T23:32:45","Actor":"steveharter","Number":"36646","RawContent":null,"Title":"Fix deserialize cache test","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/36618\r\n\r\nHad an incorrect call to Verify() that was only triggered based on thread timing.\r\n","Url":"https://github.com/dotnet/corefx/pull/36646","RelatedDescription":"Open PR \"Fix deserialize cache test\" (#36646)"},{"Id":"429860982","IsPullRequest":true,"CreatedAt":"2019-04-05T22:47:02","Actor":"echesakovMSFT","Number":"36636","RawContent":null,"Title":"Add linux-musl-arm64 RID to Microsoft.Private.CoreFx.NETCoreApp","State":"closed","Body":"Add linux-musl-arm64 to the collections of OfficialBuildRIDs of Microsoft.Private.CoreFx.NETCoreApp\r\n\r\nFixes https://github.com/dotnet/corefx/issues/36617 and https://github.com/dotnet/coreclr/issues/23749\r\n\r\nI built corefx locally and below is corresponding section of Microsoft.Private.CoreFx.NETCoreApp/runtime.json:\r\n```js\r\n    \"linux-musl-arm64\": {\r\n      \"Microsoft.Private.CoreFx.NETCoreApp\": {\r\n        \"runtime.linux-musl-arm64.Microsoft.Private.CoreFx.NETCoreApp\": \"4.6.0-ci.19205.1\"\r\n      }\r\n    },\r\n    \"linux-musl-arm64-aot\": {\r\n      \"Microsoft.Private.CoreFx.NETCoreApp\": {\r\n        \"runtime.linux-musl-arm64-aot.Microsoft.Private.CoreFx.NETCoreApp\": \"4.6.0-ci.19205.1\"\r\n      }\r\n    },\r\n```","Url":"https://github.com/dotnet/corefx/pull/36636","RelatedDescription":"Closed or merged PR \"Add linux-musl-arm64 RID to Microsoft.Private.CoreFx.NETCoreApp\" (#36636)"},{"Id":"429951557","IsPullRequest":false,"CreatedAt":"2019-04-05T22:04:14","Actor":"steveharter","Number":"36643","RawContent":null,"Title":"Json serializer support for interface-based collections","State":"open","Body":"This issue is to add built-in support for specific collections interfaces including:\r\n- `IEnumerable`\r\n- `IEnumerable<T>`\r\n- `ICollection`\r\n- `ICollection<T>`\r\n- `IList`\r\n- `IList<T>`\r\n- `IReadOnlyCollection<T>`\r\n\r\nIt should leverage the [extensibility support for IEnumerable](https://github.com/dotnet/corefx/issues/36640) and register these interfaces.\r\n\r\nDesign notes:\r\n1) No new public APIs are needed.\r\n2) The instance returned should only implement the specific interface. It should **not** be possible to cast to our implementation. This ensures we can change the type later if necessary and prevents other general misuses.\r\nFor example, the likely implementation for `IEnumerable<T>` is an internal class that implements `IEnumerable<T>` where the only public members are those used to implement `IEnumerable<T>`. The internal class then forwards each `IEnumerable<T>` member call to an instance of `List<T>` which is stored in a private field and thus not accessible publically and not castable to `List<T>` or other interfaces like `IList<T>`.\r\n3) We may want to also provide default implementations of some non-interfaces as well pending feedback (for example `System.Collections.Immutable.ImmutableArray`)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/36643","RelatedDescription":"Open issue \"Json serializer support for interface-based collections\" (#36643)"},{"Id":"429949597","IsPullRequest":false,"CreatedAt":"2019-04-05T21:57:02","Actor":"ericstj","Number":"36642","RawContent":null,"Title":"Pushing SystemColors down may have broken KnownColor linkage","State":"open","Body":"SystemColors are supposed to respond to user-preference changed events (EG: someone changes the system to High Contstrast mode).  This happens under ifdef in the KnownColor table.  Previously we only cared about this support for SystemColors which were in Drawing.Common so we ifdef'ed that linkage.\r\n\r\nNow that we've pushed the SystemColors down we should remove the ifdef.  To avoid pulling SystemEvents into the shared framework we can call it through reflection.","Url":"https://github.com/dotnet/corefx/issues/36642","RelatedDescription":"Open issue \"Pushing SystemColors down may have broken KnownColor linkage\" (#36642)"},{"Id":"429948111","IsPullRequest":false,"CreatedAt":"2019-04-05T21:51:20","Actor":"ericstj","Number":"36641","RawContent":null,"Title":"Wrong ColorUtil being used on netcoreapp3.0 (and maybe netcoreapp2.1)","State":"open","Body":"It appears that we're using the wrong source for this.  There's a netcoreapp2.0 and netcoreapp2.1 version and only 2.0 is used.","Url":"https://github.com/dotnet/corefx/issues/36641","RelatedDescription":"Open issue \"Wrong ColorUtil being used on netcoreapp3.0 (and maybe netcoreapp2.1)\" (#36641)"},{"Id":"429859449","IsPullRequest":true,"CreatedAt":"2019-04-05T21:47:03","Actor":"wtgodbe","Number":"36635","RawContent":null,"Title":"Update branding to preview4","State":"closed","Body":"CC @danmosemsft @vivmishra @karelz @leecow ","Url":"https://github.com/dotnet/corefx/pull/36635","RelatedDescription":"Closed or merged PR \"Update branding to preview4\" (#36635)"},{"Id":"429946226","IsPullRequest":false,"CreatedAt":"2019-04-05T21:44:10","Actor":"steveharter","Number":"36640","RawContent":null,"Title":"Json serializer support for IEnumerable deserialization extensibilty ","State":"open","Body":"This is a placeholder to provide the ability to define an IEnumerable converter and have it called automatically when a given IEnumerable-derived type is deserialized.\r\n\r\nThis is useful for\r\n- Adding converters for collection types that don't support `IList`. Currently the deserializer only supports `IList` and `Array`. For example, a converter can be created to support types from the `System.Collection.Immutable` namespace.\r\n- Internally used to register built-in converters for `IEnumerable`, `IList`, `Array` etc.\r\n\r\nRelated information can be found in the programming model [documentation](https://github.com/dotnet/corefx/blob/master/src/System.Text.Json/docs/SerializerProgrammingModel.md).\r\n\r\nTo create a new converter:\r\n1) Create a class that derives from JsonEnumerableConverter which closes the to the supported type.\r\n2) Override the CreateFromList shown below\r\n3) Override CanConvert to determine what type(s) can be converted - IEnumerable, IList, IList<foo>, etc.\r\n4) Register the converter through an instance of `JsonSerializerOptions`. We may also allow an attribute-based mechanism (TBD).\r\n\r\n```cs\r\nnamespace System.Text.Json.Serialization.Policies\r\n{\r\n    public abstract class JsonEnumerableConverter\r\n    {\r\n        public abstract IEnumerable CreateFromList(Type enumerableType, Type elementType, IList sourceList);\r\n        public abstract bool CanConvert(Type enumerableType);\r\n    }\r\n}\r\n\r\nnamespace System.Text.Json.Serialization\r\n{\r\n    public class JsonSerializerOptions\r\n    {\r\n...\r\n        public void AddEnumerableConverter(JsonEnumerableConverter converter);\r\n...\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/36640","RelatedDescription":"Open issue \"Json serializer support for IEnumerable deserialization extensibilty \" (#36640)"},{"Id":"429859351","IsPullRequest":true,"CreatedAt":"2019-04-05T21:41:13","Actor":"wtgodbe","Number":"36634","RawContent":null,"Title":"Update branding to preview5","State":"closed","Body":"CC @danmosemsft @vivmishra @karelz @leecow ","Url":"https://github.com/dotnet/corefx/pull/36634","RelatedDescription":"Closed or merged PR \"Update branding to preview5\" (#36634)"},{"Id":"429928740","IsPullRequest":false,"CreatedAt":"2019-04-05T20:47:22","Actor":"steveharter","Number":"36639","RawContent":null,"Title":"Json serializer support for data type extensibilty","State":"open","Body":"This is a placeholder to provide the ability to define a data type converter and have it called automatically when a given type is (de)serialized.\r\n\r\nRelated information can be found in the programming model [documentation](https://github.com/dotnet/corefx/blob/master/src/System.Text.Json/docs/SerializerProgrammingModel.md).\r\n\r\nTo create a new converter:\r\n1) Create a class that derives from JsonValueConverter<T> which closes the <T> to the supported type.\r\n2) Override the Read and Write methods shown below\r\n3) Have the user register the converter either through an Attribute or at run-time through `JsonSerializerOptions` (TBD)\r\n\r\n\r\n```cs\r\nnamespace System.Text.Json.Serialization.Policies\r\n{\r\n    public abstract class JsonValueConverter<TValue>\r\n    {\r\n        public abstract bool TryRead(Type valueType, ref JsonValueReader reader, out TValue value);\r\n        public abstract void Write(TValue value, ref JsonValueWriter writer);\r\n        public virtual bool CanRead {get;}\r\n        public virtual bool CanWrite {get;}\r\n    }\r\n\r\n    // JsonValueReader and JsonValueWriter TBD but will closely match the\r\n    // existing WriteXXXValue and ReadXXXValue on Utf8JsonReader and Utf8JsonWriter\r\n    // and include a TokenType property.\r\n}\r\n```\r\n\r\nNote there is currently a partial implementation of this used internally which will be converted to the same approach here for built-in data types.\r\n\r\nDesign goals:\r\n1) Support single-value (primitive) data types only. This means the json can contain only a single value. This is necessary due to the streaming model where the next value may not be available to the reader. If this is not sufficient, a different POCO extensibility model can be used.\r\n2) No boxing.\r\n3) Allow replacement of existing converters. For example, a new 'string' converter could be created to automatically convert json number values to strings, or a 'long' converter to convert json strings to a long.\r\n4) If multiple converters are specified for a type, TryRead is called in a chain based on the order they are added at run-time and based on the true\\false return value plus the value(s) from CanRead.\r\n5) If multiple converters are specified for a type, TryWrite is called in a chain based on the order they are added at run-time and based on the value(s) from CanWrite.","Url":"https://github.com/dotnet/corefx/issues/36639","RelatedDescription":"Open issue \"Json serializer support for data type extensibilty\" (#36639)"},{"Id":"429851489","IsPullRequest":true,"CreatedAt":"2019-04-05T19:55:45","Actor":"dotnet-maestro-bot","Number":"36632","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @davidfowl\n* @buyaa-n\n* @dotnet-maestro[bot]\n* @ericstj\n* @ahsonkhan\n* @safern\n* @tarikulsabbir\n* @stephentoub\n* @ViktorHofer\n* @steveharter\n* @danmosemsft\n* @wfurt\n* @jkoritzinsky\n* @jkotas\n* @karelz\n* @vancem\n* @chcosta\n* @Wraith2\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/36632","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#36632)"},{"Id":"429858111","IsPullRequest":true,"CreatedAt":"2019-04-05T18:50:09","Actor":"davidfowl","Number":"36633","RawContent":null,"Title":"Various cleanup and feedback","State":"closed","Body":"- Doc comments for options\r\n- Added test coverage for StreamPipeWriterOptions\r\n- Reset tailBufferedBytes to 0 in StreamPipeWriter.FlushAsync","Url":"https://github.com/dotnet/corefx/pull/36633","RelatedDescription":"Closed or merged PR \"Various cleanup and feedback\" (#36633)"},{"Id":"429643630","IsPullRequest":true,"CreatedAt":"2019-04-05T17:46:10","Actor":"davidfowl","Number":"36621","RawContent":null,"Title":"Added ConfigureAwait(false) to the Stream.ReadAsync call","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/36621","RelatedDescription":"Closed or merged PR \"Added ConfigureAwait(false) to the Stream.ReadAsync call\" (#36621)"},{"Id":"429638838","IsPullRequest":true,"CreatedAt":"2019-04-05T16:58:38","Actor":"davidfowl","Number":"36620","RawContent":null,"Title":"Added PipeWriter.Create(stream)","State":"closed","Body":"- Adds the ability to wrap an existing Stream in a PipeWriter to get the buffer management benefits.\r\n- Added tests\r\n\r\nContributes to #27246","Url":"https://github.com/dotnet/corefx/pull/36620","RelatedDescription":"Closed or merged PR \"Added PipeWriter.Create(stream)\" (#36620)"},{"Id":"429846349","IsPullRequest":false,"CreatedAt":"2019-04-05T16:49:46","Actor":"Eilon","Number":"36631","RawContent":null,"Title":"Azure Linux Web App, \"it\" culture not working","State":"open","Body":"_From @valeriob on Friday, 05 April 2019 08:05:46_\r\n\r\n### Describe the bug\r\nCreate a new aspnetcore 2.2 web app, enable it and en cultures as the documentation instructs, and make a page that prints the current date in short date format \"d\".\r\nRun it locally with an italian browser, it correctly use the dd/MM/yyyy pattern, then deploy it to azure linux web app (code and framework dependent, not container) navigate to that page with the same browser with italian language : the displayed date has the english M/d/yyyy pattern.\r\nPrinting the output of this code in a page confirms that the database of culture information has problems : \r\n\r\nnew System.Globalization.CultureInfo(\"it\").DateTimeFormat.ShortDatePattern)\r\nnew System.Globalization.CultureInfo(\"en\").DateTimeFormat.ShortDatePattern)\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#9106_","Url":"https://github.com/dotnet/corefx/issues/36631","RelatedDescription":"Open issue \"Azure Linux Web App, \"it\" culture not working\" (#36631)"},{"Id":"429834007","IsPullRequest":false,"CreatedAt":"2019-04-05T16:16:04","Actor":"dagood","Number":"36630","RawContent":null,"Title":"Microsoft.VisualBasic.dll has no FileVersion in non-Windows transport packages","State":"open","Body":"In Core-Setup, I'm adding a check to make sure all DLL files in the Platform Manifest have `FileVersion`s. (https://github.com/dotnet/core-setup/pull/5682) I hit a problem in non-Windows PR validation with `Microsoft.VisualBasic.dll` not having versions in non-Windows transport packages:\r\n\r\n| File in package cache | FileVersion |\r\n| --- | --- |\r\n| microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\ref\\netcoreapp3.0\\Microsoft.VisualBasic.dll | 14.7.3060.0 |\r\n| runtime.linux-arm.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\linux-arm\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | **0.0.0.0** |\r\n| runtime.linux-arm64.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\linux-arm64\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | **0.0.0.0** |\r\n| runtime.linux-musl-x64.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\linux-musl-x64\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | **0.0.0.0** |\r\n| runtime.linux-x64.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\linux-x64\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | **0.0.0.0** |\r\n| runtime.osx-x64.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\osx-x64\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | **0.0.0.0** |\r\n| runtime.rhel.6-x64.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\rhel.6-x64\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | **0.0.0.0** |\r\n| runtime.win-arm.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\win-arm\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | 14.7.3060.0 |\r\n| runtime.win-arm64.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\win-arm64\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | 14.7.3060.0 |\r\n| runtime.win-x64.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | 14.7.3060.0 |\r\n| runtime.win-x86.microsoft.private.corefx.netcoreapp\\4.6.0-preview4.19204.3\\runtimes\\win-x86\\lib\\netcoreapp3.0\\Microsoft.VisualBasic.dll | 14.7.3060.0 |\r\n\r\nOther DLLs have correct FileVersions in the non-Windows runtime transport packages, including `Microsoft.VisualBasic.Core.dll`.\r\n\r\n/cc @ericstj ","Url":"https://github.com/dotnet/corefx/issues/36630","RelatedDescription":"Open issue \"Microsoft.VisualBasic.dll has no FileVersion in non-Windows transport packages\" (#36630)"},{"Id":"429778136","IsPullRequest":false,"CreatedAt":"2019-04-05T14:16:43","Actor":"yetanotherchris","Number":"36629","RawContent":null,"Title":"Regex matches \"^*\" when ^ isn't quantifiable?","State":"open","Body":"I have the following C# regular expression\r\n\r\n```\r\nvar regex = new Regex(@\"^*_.$\");\r\nstring input = \"THIS_LINE_HAS_MANY_UNDERSCORES_L\";\r\n\r\nstring result = regex.Match(input).Groups[0].Value;\r\nConsole.WriteLine(result);\r\n```\r\n\r\nEven though to the best my knowledge the regex is invalid (* has no element to match on), it outputs the following (which is really just the `_.$` part):\r\n\r\n```\r\n_L\r\n```\r\n\r\nIs `^` treated as a character class by the .NET Regex engine?","Url":"https://github.com/dotnet/corefx/issues/36629","RelatedDescription":"Open issue \"Regex matches \"^*\" when ^ isn't quantifiable?\" (#36629)"},{"Id":"429739806","IsPullRequest":true,"CreatedAt":"2019-04-05T14:02:15","Actor":"dotnet-maestro[bot]","Number":"36626","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190404.1\r\n- **Date Produced**: 4/4/2019 12:29 PM\r\n- **Commit**: 0362f55e37d73b7e607b2f256279caaac82c8725\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19204.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36626","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#36626)"},{"Id":"429760052","IsPullRequest":false,"CreatedAt":"2019-04-05T13:38:52","Actor":"ConcreteHatstand","Number":"36628","RawContent":null,"Title":"FileStream.Lock(Int64, Int64) failure on Linux - always uses 'F_WRLCK'.","State":"open","Body":"I am unable to create a shared lock (F_RDLCK) on a region within a file opened read-only on Linux. \r\n\r\nFileStream.Lock always seems to use 'fcntl(fd, F_SETLK, {type=F_WRLCK...'.\r\n\r\nFor a file opened read-only, setting a 'F_WRLCK' (exclusive lock)  is not a valid operation and triggers an EBADF (Bad file descriptor) error from fcntl, which triggers an Unhandled Exception from dotnet.\r\n\r\nI can see this using 'strace', e.g. strace -o st_output.txt -f dotnet myprogram.\r\n\r\nWhat is needed here is some way (property or method I guess) to specify the lock type, either F_RDLCK (a shared lock) or F_WRLCK (an exclusive lock).\r\n\r\nTo clarify those options and fcntl's behaviour - any number of concurrent shared locks can be made on the same part of a file unless there is an exclusive lock on it.\r\n\r\nAnd ONE exclusive lock can be made on a specific region within a file unless there is already a lock - shared or exclusive - already present.\r\n\r\nNote that the test program attached (a dotnet console app) expects a file 'testfile' to exist in its directory which can contain any random text.\r\n\r\nThis is my first issue, I do hope I have done this correctly! Regards.\r\n\r\n[Program_output.txt](https://github.com/dotnet/corefx/files/3048126/Program_output.txt)\r\n\r\n\r\n[Program.txt](https://github.com/dotnet/corefx/files/3048087/Program.txt)\r\n","Url":"https://github.com/dotnet/corefx/issues/36628","RelatedDescription":"Open issue \"FileStream.Lock(Int64, Int64) failure on Linux - always uses 'F_WRLCK'.\" (#36628)"},{"Id":"429741507","IsPullRequest":true,"CreatedAt":"2019-04-05T12:55:54","Actor":"filipnavara","Number":"36627","RawContent":null,"Title":"Fix encoding of Digest authentication headers","State":"open","Body":"Fix encoding of Digest authentication headers for servers that don't understand RFC 5987 encoding. The original HTTP Digest specification (RFC 2617) predates RFC 5987 by 11 years. For user names that don't require RFC 5987 use the old encoding that is compatible with the original specification. This affects mainly user names that contain the '@' character.\r\n\r\nThe actual fix is removing this line:\r\n\r\nhttps://github.com/filipnavara/corefx/blob/bbfc1d7e52b96ea617c6b9c37cad363449fbe1ae/src/System.Net.Http/src/System/Net/Http/Headers/HeaderUtilities.cs#L103\r\n\r\nRest is renaming method names for clarity, adding `static` modifier and reusing the same code from `ContentDispositionHeaderValue`.\r\n\r\nFixes #36622","Url":"https://github.com/dotnet/corefx/pull/36627","RelatedDescription":"Open PR \"Fix encoding of Digest authentication headers\" (#36627)"},{"Id":"429739497","IsPullRequest":false,"CreatedAt":"2019-04-05T12:50:52","Actor":"deokershesh","Number":"36625","RawContent":null,"Title":".NET Core ODBC Bridge porting","State":"open","Body":"We are in the process of porting .NET Core ODBC Bridge code to database specific code for our native ODBC driver. I added following line in \"D:\\corefx\\src\\Common\\src\\Interop\\Windows\\Interop.Libraries.cs\" to make an entry for our own ODBC driver.\r\n","Url":"https://github.com/dotnet/corefx/issues/36625","RelatedDescription":"Open issue \".NET Core ODBC Bridge porting\" (#36625)"},{"Id":"429682294","IsPullRequest":false,"CreatedAt":"2019-04-05T10:15:07","Actor":"shvez","Number":"36623","RawContent":null,"Title":"Failure to load System.Configuration.ConfigurationManager assembly during dynamic loading of assemblies","State":"open","Body":"Hi, there\r\nI've written a small application implementing the idea of dynamic loading and demonstrating the issue. Here is the link: https://www.dropbox.com/s/8nhftd9cy7rhv31/Loader.7z?dl=0\r\n\r\nthe application provided with binaries, so I hope all you need is open VS and start debugging\r\n\r\n**The expected behavior** is being able to load ClientConfigSection from config.\r\n\r\n**What get** is an exception notifying that ConfigurationManager assembly cannot be loaded although ConfigurationManager assembly already successfully loaded to context. The exception happens in Application.cs:29 - method 'Run'\r\n\r\nWhat extra information should I provide?\r\nIs this an issue in .netcore code or an issue in my understanding of how it should work?\r\nUPD:\r\n**Envirounment info**\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6","Url":"https://github.com/dotnet/corefx/issues/36623","RelatedDescription":"Open issue \"Failure to load System.Configuration.ConfigurationManager assembly during dynamic loading of assemblies\" (#36623)"},{"Id":"429679812","IsPullRequest":false,"CreatedAt":"2019-04-05T10:08:28","Actor":"shutdown256","Number":"36622","RawContent":null,"Title":"Digest authentication does not respect RFC7616-3.4","State":"open","Body":"Similarly to #24482 when sending  Authorization header in HTTP Digest authentication, current implementation does not respect [RFC7616-3.4](https://tools.ietf.org/html/rfc7616#section-3.4) where it says that `username*` field should NOT be used over username field unless it contains characters not allowed inside the ABNF quoted-string production. This for example means that even `@` symbol commonly present in username field causes `username*=utf-8''` style encoding with which many servers are not yet compatible.\r\n\r\nCode to reproduce:\r\n```c#\r\npublic async Task DigestAuthTest()\r\n{\r\n\tvar uri = new Uri(\"https://mail.emclient.com/webdav/\");\r\n\tvar request = WebRequest.CreateHttp(uri);\r\n\trequest.KeepAlive = true;\r\n\trequest.PreAuthenticate = true;\r\n\trequest.UserAgent = \"Fake UA/1.0.0\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\trequest.Headers.Add(\"Accept-Encoding\", \"gzip, deflate\");\r\n\trequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;\r\n\r\n\tvar credentialCache = new CredentialCache();\r\n\tvar cred = new NetworkCredential(\"fakeusername@emclient.com\", \"fakepassword123\");\r\n\tcredentialCache.Add(uri, \"Digest\", cred);\r\n\r\n\trequest.Credentials = credentialCache;\r\n\tconst string payload = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><D:propfind xmlns:D=\\\"DAV:\\\"><D:prop><D:current-user-principal /><D:resourcetype /></D:prop></D:propfind>\";\r\n\r\n\trequest.Method = \"PROPFIND\";\r\n\trequest.ContentType = \"text/xml; charset=utf-8\";\r\n\trequest.Accept = \"text/xml\";\r\n\trequest.Headers.Add(\"Brief\", \"t\");\r\n\trequest.Headers.Add(\"Depth\", \"0\");\r\n\trequest.AutomaticDecompression = DecompressionMethods.Deflate | DecompressionMethods.GZip;\r\n\trequest.ContentLength = payload.Length;\r\n\r\n\tusing (var sw = new StreamWriter(await request.GetRequestStreamAsync()))\r\n\t{\r\n\t\tawait sw.WriteAsync(payload);\r\n\t\tawait sw.FlushAsync();\r\n\t}\r\n\tvar response = (HttpWebResponse) await request.GetResponseAsync();\r\n\tAssert.IsTrue(response.StatusCode == HttpStatusCode.MultiStatus);\r\n}\r\n```\r\n\r\nthis produces following request:\r\n\r\n```\r\nPROPFIND https://mail.emclient.com/webdav/ HTTP/1.1\r\nUser-Agent: eM Client Test/8.0.0.0\r\nAccept-Encoding: gzip, deflate\r\nAccept: text/xml\r\nBrief: t\r\nDepth: 0\r\nConnection: Keep-Alive\r\nAuthorization: Digest username*=utf-8''fakeusername%40emclient.com, realm=\"mail.emclient.com\", nonce=\"bd19b1f32831baa857ccd0b14b85bd73\", uri=\"/webdav/\", response=\"e7e5d738c4195fe0e350070a6d130256\", algorithm=md5, opaque=\"4bc4f13929d28e0859ee285ad15429c6\", qop=auth, nc=00000001, cnonce=\"659F07D423KRHJ6k\"\r\nContent-Type: text/xml; charset=utf-8\r\nContent-Length: 141\r\nHost: mail.emclient.com\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?><D:propfind xmlns:D=\"DAV:\"><D:prop><D:current-user-principal /><D:resourcetype /></D:prop></D:propfind>\r\n```\r\n\r\nbut expected (abbreviated) result is:\r\n`username=\"fakeusername@emclient.com\",`\r\n\r\nWe belive the problematic code is here:\r\nhttps://github.com/dotnet/corefx/blob/dc965e16c4f71163df9de013951c95916992c908/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/AuthenticationHelper.Digest.cs#L95\r\n\r\nand similarly to \r\nhttps://github.com/dotnet/corefx/blob/dc965e16c4f71163df9de013951c95916992c908/src/System.Net.Http/src/System/Net/Http/Headers/ContentDispositionHeaderValue.cs#L444\r\nit should run a check first to determine whether or not to use the star utf-8 encoding.","Url":"https://github.com/dotnet/corefx/issues/36622","RelatedDescription":"Open issue \"Digest authentication does not respect RFC7616-3.4\" (#36622)"},{"Id":"429564275","IsPullRequest":true,"CreatedAt":"2019-04-05T04:05:43","Actor":"ahsonkhan","Number":"36619","RawContent":null,"Title":"Disable Json serializer CacheTests since its failing on linux.","State":"closed","Body":"See https://github.com/dotnet/corefx/issues/36618\r\n\r\ncc @safern, @steveharter ","Url":"https://github.com/dotnet/corefx/pull/36619","RelatedDescription":"Closed or merged PR \"Disable Json serializer CacheTests since its failing on linux.\" (#36619)"},{"Id":"429563925","IsPullRequest":false,"CreatedAt":"2019-04-05T03:03:21","Actor":"ahsonkhan","Number":"36618","RawContent":null,"Title":"System.Text.Json.Serialization.Tests.CacheTests/MultipleThreads failing on Linux","State":"open","Body":"New test introduced in https://github.com/dotnet/corefx/pull/36549 is failing.\r\n\r\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190404.4/workItem/System.Text.Json.Tests/analysis/xunit/System.Text.Json.Serialization.Tests.CacheTests~2FMultipleThreads\r\nFedora.28.Amd64-x64-Release\r\n```text\r\nUnhandled Exception of Type System.AggregateException\r\nMessage :\r\nSystem.AggregateException : One or more errors occurred. (Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0) (Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0) (Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0)\r\n---- Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\n---- Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\n---- Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\nStack Trace :\r\n   at System.Threading.Tasks.Task.WaitAllCore(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 4811\r\n   at System.Threading.Tasks.Task.WaitAll(Task[] tasks) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 4548\r\n   at System.Text.Json.Serialization.Tests.CacheTests.MultipleThreads() in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 50\r\n----- Inner Stack Trace #1 (Xunit.Sdk.EqualException) -----\r\n   at System.Text.Json.Serialization.Tests.SimpleTestClass.Verify() in /__w/1/s/src/System.Text.Json/tests/Serialization/TestClasses.cs:line 147\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<MultipleThreads>g__SerializeAndDeserializeObject|0_0(Boolean useEmptyJson) in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 39\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<>c__DisplayClass0_0.<MultipleThreads>b__1() in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 45\r\n   at System.Threading.Tasks.Task.InnerInvoke() in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2460\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2439\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 288\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 313\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2400\r\n----- Inner Stack Trace #2 (Xunit.Sdk.EqualException) -----\r\n   at System.Text.Json.Serialization.Tests.SimpleTestClass.Verify() in /__w/1/s/src/System.Text.Json/tests/Serialization/TestClasses.cs:line 147\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<MultipleThreads>g__SerializeAndDeserializeObject|0_0(Boolean useEmptyJson) in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 39\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<>c__DisplayClass0_0.<MultipleThreads>b__1() in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 45\r\n   at System.Threading.Tasks.Task.InnerInvoke() in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2460\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2439\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 288\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 313\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2400\r\n----- Inner Stack Trace #3 (Xunit.Sdk.EqualException) -----\r\n   at System.Text.Json.Serialization.Tests.SimpleTestClass.Verify() in /__w/1/s/src/System.Text.Json/tests/Serialization/TestClasses.cs:line 147\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<MultipleThreads>g__SerializeAndDeserializeObject|0_0(Boolean useEmptyJson) in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 39\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<>c__DisplayClass0_0.<MultipleThreads>b__1() in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 45\r\n   at System.Threading.Tasks.Task.InnerInvoke() in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2460\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2439\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 288\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 313\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread) in /__w/5/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2400\r\n```\r\n\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F33520~2Fmerge/test~2Ffunctional~2Fcli~2F/20190404.42/workItem/System.Text.Json.Tests/analysis/xunit/System.Text.Json.Serialization.Tests.CacheTests~2FMultipleThreads\r\nUbuntu.1604.Arm64-arm64-Release\r\nUbuntu.1804.Amd64-x64-Release\r\n```text\r\nMessage :\r\nSystem.AggregateException : One or more errors occurred. (Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0)\r\n---- Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0\r\nStack Trace :\r\n   at System.Threading.Tasks.Task.WaitAllCore(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken) in /__w/8/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 4811\r\n   at System.Threading.Tasks.Task.WaitAll(Task[] tasks) in /__w/8/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 4543\r\n   at System.Text.Json.Serialization.Tests.CacheTests.MultipleThreads() in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 49\r\n----- Inner Stack Trace -----\r\n   at System.Text.Json.Serialization.Tests.SimpleTestClass.Verify() in /__w/1/s/src/System.Text.Json/tests/Serialization/TestClasses.cs:line 146\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<MultipleThreads>g__SerializeAndDeserializeObject|0_0(Boolean useEmptyJson) in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 38\r\n   at System.Text.Json.Serialization.Tests.CacheTests.<>c__DisplayClass0_0.<MultipleThreads>b__1() in /__w/1/s/src/System.Text.Json/tests/Serialization/CacheTests.cs:line 45\r\n   at System.Threading.Tasks.Task.InnerInvoke() in /__w/8/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2450\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj) in /__w/8/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2438\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/8/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 288\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/8/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 313\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread) in /__w/8/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2400\r\n```\r\n\r\nTest disabled in https://github.com/dotnet/corefx/pull/36619","Url":"https://github.com/dotnet/corefx/issues/36618","RelatedDescription":"Open issue \"System.Text.Json.Serialization.Tests.CacheTests/MultipleThreads failing on Linux\" (#36618)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"429973525","IsPullRequest":true,"CreatedAt":"2019-04-06T02:00:14","Actor":"dotnet-bot","Number":"34805","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34805","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34805)"},{"Id":"429973533","IsPullRequest":true,"CreatedAt":"2019-04-06T02:00:09","Actor":"dotnet-bot","Number":"34806","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34806","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#34806)"},{"Id":"429973545","IsPullRequest":true,"CreatedAt":"2019-04-06T02:00:05","Actor":"dotnet-bot","Number":"34807","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34807","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#34807)"},{"Id":"429982032","IsPullRequest":true,"CreatedAt":"2019-04-06T01:15:35","Actor":"tmat","Number":"34809","RawContent":null,"Title":"Make compilation outputs available via a workspace service","State":"open","Body":"TODO: tests","Url":"https://github.com/dotnet/roslyn/pull/34809","RelatedDescription":"Open PR \"Make compilation outputs available via a workspace service\" (#34809)"},{"Id":"429979566","IsPullRequest":true,"CreatedAt":"2019-04-06T00:50:43","Actor":"genlu","Number":"34808","RawContent":null,"Title":"Implement import completion for types","State":"open","Body":"Using existing symbol APIs.\r\n\r\nSome quick measurement done in code:\r\n\r\n- First invocation in a solution can be slow. Since we are iterating all top level type symbols from all referenced compilations and PE references. Here's the number from `MS.VS.LanguageService.Charp.UnitTest`, which can reach 27 compilations and 232 PEs (including facade assemblies). As a result, 19011 distinct completion items are created, which takes 281ms (this is the time spendt in this completion provider, not the time to collect completion items from all providers)\r\n\r\n![image](https://user-images.githubusercontent.com/788783/55662828-2491f180-57cc-11e9-9683-f1a7909d0115.png)\r\n\r\n- Subsequent invocations would be faster, since we cache all the completion items (both roslyn and VS items). This is still true if edits has been made in the code, because we only need to recreate those items for current compilation.\r\n\r\n![image](https://user-images.githubusercontent.com/788783/55662924-3b851380-57cd-11e9-8028-254af501f9fd.png)\r\n\r\n\r\n\r\nTODO:\r\n\r\n- [ ] Add VB\r\n- [ ] Add tests\r\n- [ ] More profiling needs to be done.\r\n\r\n@CyrusNajmabadi Could you please take a look?","Url":"https://github.com/dotnet/roslyn/pull/34808","RelatedDescription":"Open PR \"Implement import completion for types\" (#34808)"},{"Id":"429972662","IsPullRequest":true,"CreatedAt":"2019-04-05T23:54:41","Actor":"chborl","Number":"34804","RawContent":null,"Title":"When generating constructor, trim known prefixes from argument name to get parameter name ","State":"open","Body":"Fixes #33673 \r\n\r\nWhen generating a constructor, the name of the constructor's parameter is based on the name of the argument that was passed to the constructor.  This PR removes any common prefixes  (\"_\", \"m_\", \"s_\", \"t_\") before creating the parameter name.","Url":"https://github.com/dotnet/roslyn/pull/34804","RelatedDescription":"Open PR \"When generating constructor, trim known prefixes from argument name to get parameter name \" (#34804)"},{"Id":"429968200","IsPullRequest":false,"CreatedAt":"2019-04-05T23:24:44","Actor":"khyperia","Number":"34803","RawContent":null,"Title":"Highlighting call to local function calls ExtractMethodCodeRefactoringProvider to throw","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2017\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\nclass Program {\r\n    public static void Main() {\r\n        int x = 1;\r\n        int Func() => x + (x = 2);\r\n        Func();\r\n    }\r\n}\r\n```\r\n\r\nHighlight the call to `Func();` on the last line\r\n\r\n**Expected Behavior**:\r\n\r\nNot throw an exception\r\n\r\n**Actual Behavior**:\r\n\r\n`ExtractMethodCodeRefactoringProvider encountered an error and has been disabled`\r\n\r\n```\r\nSystem.InvalidOperationException : Matrix does not contain Key 'AB'.\r\n   at Roslyn.Utilities.Contract.ThrowIfFalse(Boolean condition,String message)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.ExtractMethodMatrix.GetVariableStyle(Boolean captured,Boolean dataFlowIn,Boolean dataFlowOut,Boolean alwaysAssigned,Boolean variableDeclared,Boolean readInside,Boolean writtenInside,Boolean readOutside,Boolean writtenOutside,Boolean unsafeAddressTaken)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.GetVariableStyle(Dictionary`2 symbolMap,ISymbol symbol,SemanticModel model,ITypeSymbol type,Boolean captured,Boolean dataFlowIn,Boolean dataFlowOut,Boolean alwaysAssigned,Boolean variableDeclared,Boolean readInside,Boolean writtenInside,Boolean readOutside,Boolean writtenOutside,Boolean unsafeAddressTaken)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.GenerateVariableInfoMap(SemanticModel model,DataFlowAnalysis dataFlowAnalysisData,Dictionary`2 symbolMap)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.AnalyzeAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ExtractMethodAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.AbstractExtractMethodService`3.ExtractMethodAsync[TValidator,TExtractor,TResult](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.GetCodeActionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n```\r\n\r\n---\r\n\r\nMethod extraction with local functions turns out to be really hard yet again :wink: (Sorry if I spammed y'all with a bajillion Watsons while narrowing this down to a minimal repro)","Url":"https://github.com/dotnet/roslyn/issues/34803","RelatedDescription":"Open issue \"Highlighting call to local function calls ExtractMethodCodeRefactoringProvider to throw\" (#34803)"},{"Id":"429720466","IsPullRequest":true,"CreatedAt":"2019-04-05T23:19:22","Actor":"dotnet-bot","Number":"34786","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34786","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34786)"},{"Id":"429720516","IsPullRequest":true,"CreatedAt":"2019-04-05T23:19:17","Actor":"dotnet-bot","Number":"34787","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34787","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#34787)"},{"Id":"429720552","IsPullRequest":true,"CreatedAt":"2019-04-05T23:19:13","Actor":"dotnet-bot","Number":"34788","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34788","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#34788)"},{"Id":"429959852","IsPullRequest":true,"CreatedAt":"2019-04-05T22:39:51","Actor":"sharwell","Number":"34802","RawContent":null,"Title":"Move Regex embedded language to the Features layer","State":"open","Body":":construction: Builds on #34801","Url":"https://github.com/dotnet/roslyn/pull/34802","RelatedDescription":"Open PR \"Move Regex embedded language to the Features layer\" (#34802)"},{"Id":"429959473","IsPullRequest":true,"CreatedAt":"2019-04-05T22:38:07","Actor":"sharwell","Number":"34801","RawContent":null,"Title":"Fix layering issues with embedded languages interfaces","State":"open","Body":"* Eliminate the distinction between `IEmbeddedLanguageEditorFeaturesProvider`, `IEmbeddedLanguageFeaturesProvider`, and `IEmbeddedLanguagesProvider` in the MEF catalog\r\n* Eliminate the use of `Instance` members to bypass the declared `ServiceLayer` layering for features\r\n* Eliminate the shadowing of `Language` properties with different contents depending on which service the property is accessed through","Url":"https://github.com/dotnet/roslyn/pull/34801","RelatedDescription":"Open PR \"Fix layering issues with embedded languages interfaces\" (#34801)"},{"Id":"429683651","IsPullRequest":true,"CreatedAt":"2019-04-05T22:28:13","Actor":"heejaechang","Number":"34784","RawContent":null,"Title":"remove unnecessary cancellation token and use one in OperationContext.","State":"closed","Body":"the cancellation token will be removed from ICodeCleanUpFixer in next API update","Url":"https://github.com/dotnet/roslyn/pull/34784","RelatedDescription":"Closed or merged PR \"remove unnecessary cancellation token and use one in OperationContext.\" (#34784)"},{"Id":"429922604","IsPullRequest":false,"CreatedAt":"2019-04-05T20:29:23","Actor":"stephentoub","Number":"34800","RawContent":null,"Title":"Nullable warning when tmp variable introduced","State":"open","Body":"**Version Used**: \r\n3.1.0-beta1-19172-05+edd2de88fb3e84a097fb30b4070e0f219f624e40\r\n\r\n**Repro**:\r\n```C#\r\n#nullable enable\r\nusing System;\r\n\r\npublic class Program\r\n{\r\n    public static void Main()\r\n    {\r\n        A? itemA = GetA();\r\n\r\n        if (itemA?.Value != null)\r\n        {\r\n            Console.WriteLine(itemA.Name); // no warning\r\n        }\r\n\r\n        B? tmp = itemA?.Value;\r\n        if (tmp != null)\r\n        {\r\n            Console.WriteLine(itemA.Name); // warns\r\n        }\r\n    }\r\n\r\n    private static A? GetA() => new A();\r\n\r\n    class A\r\n    {\r\n        public string Name = \"name\";\r\n        public B? Value = new B();\r\n    }\r\n\r\n    class B\r\n    {\r\n        public string? Value = \"value\";\r\n    }\r\n}\r\n```\r\n\r\nHere the first case guarded by `itemA?.Value != null` doesn't warn, but the second case guarded by the `tmp != null` variable does warn: \"Possible dereference of a null reference.\"\r\n\r\nI'm not sure if this is supposed to not warn or if this falls into the same theorem-proving area as https://github.com/dotnet/roslyn/issues/34665.\r\n\r\ncc: @cston, @gafter, @dotnet/nullablefc","Url":"https://github.com/dotnet/roslyn/issues/34800","RelatedDescription":"Open issue \"Nullable warning when tmp variable introduced\" (#34800)"},{"Id":"429912113","IsPullRequest":true,"CreatedAt":"2019-04-05T19:57:43","Actor":"agocke","Number":"34799","RawContent":null,"Title":"Implement \"character class\" for analyzerconfig globs","State":"open","Body":"Implements the bracket syntax from Unix globs\r\n(https://en.wikipedia.org/wiki/Glob_(programming)), commonly referred to\r\nas \"character classes\" in regular expressions.","Url":"https://github.com/dotnet/roslyn/pull/34799","RelatedDescription":"Open PR \"Implement \"character class\" for analyzerconfig globs\" (#34799)"},{"Id":"429908705","IsPullRequest":false,"CreatedAt":"2019-04-05T19:47:17","Actor":"gafter","Number":"34798","RawContent":null,"Title":"Implement `where T: class` and `where T: struct` for overrides and implementations","State":"open","Body":"See https://github.com/dotnet/csharplang/issues/2378#issuecomment-479634969\r\n\r\nThe LDM has specified that an override method or an explicit implementation method may specify the `struct` or `class` constraint on type parameters, and that such constraints are checked that they are implied by the constraints on the method being implemented or overridden.\r\n\r\nWhen the `class` constraint is used, a nullable annotation on that type parameter `T?` does not mean `Nullable<T>` but rather it is a nullable reference type.\r\n\r\nThis needs to be implemented.","Url":"https://github.com/dotnet/roslyn/issues/34798","RelatedDescription":"Open issue \"Implement `where T: class` and `where T: struct` for overrides and implementations\" (#34798)"},{"Id":"429898962","IsPullRequest":true,"CreatedAt":"2019-04-05T19:17:18","Actor":"AlekseyTs","Number":"34797","RawContent":null,"Title":"Treat unconstrained type parameters declared in ```#nullable disable``` context as having an unknown nullability in case they are substituted with a reference type.","State":"open","Body":"As apposed to possibly nullable or not nullable reference type.\r\nFixes #29980.","Url":"https://github.com/dotnet/roslyn/pull/34797","RelatedDescription":"Open PR \"Treat unconstrained type parameters declared in ```#nullable disable``` context as having an unknown nullability in case they are substituted with a reference type.\" (#34797)"},{"Id":"429880443","IsPullRequest":true,"CreatedAt":"2019-04-05T18:23:36","Actor":"jcouv","Number":"34796","RawContent":null,"Title":"Revert \"Format `{}`\"","State":"open","Body":"Reverts dotnet/roslyn#34619\r\n\r\n@sharwell @Neme12 From discussion with Mads and Neal, this should be formatted with a space after all, for symmetry with the formatting of object initializer syntax.","Url":"https://github.com/dotnet/roslyn/pull/34796","RelatedDescription":"Open PR \"Revert \"Format `{}`\"\" (#34796)"},{"Id":"429854981","IsPullRequest":false,"CreatedAt":"2019-04-05T18:22:59","Actor":"stephentoub","Number":"34792","RawContent":null,"Title":"Nullable warning on Debug.Assert'd manually-implemented property","State":"closed","Body":"**Version Used**: \r\n3.1.0-beta1-19172-05+edd2de88fb3e84a097fb30b4070e0f219f624e40\r\n\r\n**Repro**:\r\n```C#\r\n#nullable enable\r\nusing System.Diagnostics;\r\n\r\npublic class Program\r\n{\r\n    public static void Main() { }\r\n\r\n    public struct MyStruct<T>\r\n    {\r\n        private readonly T[]? _array;\r\n\r\n        public MyStruct(T[] array)\r\n        {\r\n            _array = array;\r\n            AutoProp = array;\r\n            Field = array;\r\n        }\r\n\r\n        public T[]? ManuallyBacked => _array;\r\n        public T[]? AutoProp { get; }\r\n        public T[]? Field;\r\n\r\n        public void Method()\r\n        {\r\n            Debug.Assert(Field != null);\r\n            Debug.Assert(Field.Length > 0);\r\n\r\n            Debug.Assert(AutoProp != null);\r\n            Debug.Assert(AutoProp.Length > 0);\r\n\r\n            Debug.Assert(ManuallyBacked != null);\r\n            Debug.Assert(ManuallyBacked.Length > 0);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis unexpectedly produces a warning on `ManuallyBacked.Length`:\r\n\"Possible dereference of a null reference.\"\r\n\r\nAs expected, `AutoProp.Length` and `Field.Length` do not warn.\r\n\r\ncc: @cston, @jaredpar, @dotnet/nullablefc ","Url":"https://github.com/dotnet/roslyn/issues/34792","RelatedDescription":"Closed issue \"Nullable warning on Debug.Assert'd manually-implemented property\" (#34792)"},{"Id":"429874335","IsPullRequest":true,"CreatedAt":"2019-04-05T18:06:00","Actor":"RikkiGibson","Number":"34795","RawContent":null,"Title":"Fix netmodule build targeting net470 declaring a struct auto-getter","State":"open","Body":"@jaredpar @agocke @JoeRobich @jasonmalinowski \r\n","Url":"https://github.com/dotnet/roslyn/pull/34795","RelatedDescription":"Open PR \"Fix netmodule build targeting net470 declaring a struct auto-getter\" (#34795)"},{"Id":"429863391","IsPullRequest":true,"CreatedAt":"2019-04-05T17:35:15","Actor":"dibarbet","Number":"34794","RawContent":null,"Title":"[Draft] Move basic vs cloud kernal implementation of LSP into roslyn.","State":"open","Body":"TODO - Tests","Url":"https://github.com/dotnet/roslyn/pull/34794","RelatedDescription":"Open PR \"[Draft] Move basic vs cloud kernal implementation of LSP into roslyn.\" (#34794)"},{"Id":"429857027","IsPullRequest":true,"CreatedAt":"2019-04-05T17:17:48","Actor":"sharwell","Number":"34793","RawContent":null,"Title":"Compute indices when OOP is disabled","State":"open","Body":"Fixes #34631","Url":"https://github.com/dotnet/roslyn/pull/34793","RelatedDescription":"Open PR \"Compute indices when OOP is disabled\" (#34793)"},{"Id":"429833097","IsPullRequest":true,"CreatedAt":"2019-04-05T16:13:47","Actor":"cston","Number":"34791","RawContent":null,"Title":"Avoid optimizing goto in SyntheticBoundNodeFactory.Switch()","State":"open","Body":"`SyntheticBoundNodeFactory.Switch()` is used to generate synthesized switch statements for async rewriters, and the `goto` maybe a branch outside of the current `try` block, so merging a `Beq` + `Br` might result in a conditional branch outside of the block which is not supported in the code generator.\r\n\r\nFixes #33542 \r\nFixes #34720","Url":"https://github.com/dotnet/roslyn/pull/34791","RelatedDescription":"Open PR \"Avoid optimizing goto in SyntheticBoundNodeFactory.Switch()\" (#34791)"},{"Id":"429755267","IsPullRequest":true,"CreatedAt":"2019-04-05T13:27:54","Actor":"Therzok","Number":"34790","RawContent":null,"Title":"[WIP] Attempt to reduce allocations coming in from SQLite backend","State":"open","Body":"cc @sharwell \r\n\r\nFixes #34789","Url":"https://github.com/dotnet/roslyn/pull/34790","RelatedDescription":"Open PR \"[WIP] Attempt to reduce allocations coming in from SQLite backend\" (#34790)"},{"Id":"429735053","IsPullRequest":false,"CreatedAt":"2019-04-05T12:39:58","Actor":"Therzok","Number":"34789","RawContent":null,"Title":"Lots of capture classes allocations in SQLitePersistentStorage","State":"open","Body":"**Version Used**: \r\n3.0.0-beta4-19157-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Load a solution and do a small edit session\r\n2. https://gist.github.com/Therzok/89843786060d0d417a4479450ca0090b\r\n\r\n**Expected Behavior**:\r\nNot as many allocations for operating the with database.\r\n\r\n**Actual Behavior**:\r\nThe persistent storage allocates 1GB (and the IDE - VSMac - allocates a total of 3GB in this scenario). This cost is just operational, not data.\r\n","Url":"https://github.com/dotnet/roslyn/issues/34789","RelatedDescription":"Open issue \"Lots of capture classes allocations in SQLitePersistentStorage\" (#34789)"},{"Id":"429700887","IsPullRequest":true,"CreatedAt":"2019-04-05T11:05:41","Actor":"heejaechang","Number":"34785","RawContent":null,"Title":"use new CPS API to report designer attribute","State":"open","Body":"fix https://github.com/dotnet/roslyn/issues/33854","Url":"https://github.com/dotnet/roslyn/pull/34785","RelatedDescription":"Open PR \"use new CPS API to report designer attribute\" (#34785)"},{"Id":"429677367","IsPullRequest":false,"CreatedAt":"2019-04-05T10:02:26","Actor":"davkean","Number":"34783","RawContent":null,"Title":"\"Use auto property\" suggests removing a field in a serializable class","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n\"Use Auto property\" suggests removing a field in a serializable class with zero indication that this will break serialization.\r\n\r\n``` VB\r\n        <Serializable()>\r\n        Private NotInheritable Class ResourcesDataFormat\r\n            'List of resources\r\n            Private ReadOnly _resources() As Resource ' <!-- Use Auto Property\r\n\r\n            Public Sub New(Resources() As Resource)\r\n                _resources = Resources\r\n            End Sub\r\n\r\n            Public ReadOnly Property Resources() As Resource()\r\n                Get\r\n                    Return _resources\r\n                End Get\r\n            End Property\r\n\r\n        End Class\r\n\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n","Url":"https://github.com/dotnet/roslyn/issues/34783","RelatedDescription":"Open issue \"\"Use auto property\" suggests removing a field in a serializable class\" (#34783)"},{"Id":"429675259","IsPullRequest":false,"CreatedAt":"2019-04-05T09:57:20","Actor":"VasilievSerg","Number":"34782","RawContent":null,"Title":"Freezing up when getting compilation","State":"open","Body":"Hello.\r\nThere is .sln file, which contains 2 projects: A and B. The  'A'  project refers to the 'B' project and vice versa.\r\n\r\nGetting compilation for both projects goes from two threads: `project.GetCompilationAsync(cancellationToken).Result`\r\n\r\nIt freezes at the stage of getting a compilation.\r\nExternal code (call stack) for both threads in the moment when they are expecting to get compilation:\r\n```\r\nmscorlib.dll!System.Threading.ManualResetEventSlim.Wait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken)\r\nmscorlib.dll!System.Threading.Tasks.Task.SpinThenBlockingWait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken)\r\nmscorlib.dll!System.Threading.Tasks.Task.InternalWait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken)\r\nmscorlib.dll!System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Compilation>.GetResultCore(bool waitCompletionNotification)\r\n```\r\nCodeAnalysis packages version: **3.0.0**\r\nMSBuild packages version: **16.0.461**\r\n\r\nThe link to download the project, on which the problem is reproduced: https://drive.google.com/open?id=1ajzX5w5Q97mp67zJZL8U3dhXSMUBl-8o\r\n\r\nI hope, this information will be useful.\r\nThanks.","Url":"https://github.com/dotnet/roslyn/issues/34782","RelatedDescription":"Open issue \"Freezing up when getting compilation\" (#34782)"},{"Id":"429565946","IsPullRequest":true,"CreatedAt":"2019-04-05T03:14:38","Actor":"gafter","Number":"34781","RawContent":null,"Title":"Report unboxing conversion of a possibly null value.","State":"open","Body":"Fixes #33359","Url":"https://github.com/dotnet/roslyn/pull/34781","RelatedDescription":"Open PR \"Report unboxing conversion of a possibly null value.\" (#34781)"},{"Id":"429537961","IsPullRequest":false,"CreatedAt":"2019-04-05T00:35:05","Actor":"ivanbasov","Number":"34780","RawContent":null,"Title":"Intellisense misses internal LINQ variables available in Locals, Watch and Immediate windows","State":"open","Body":"**Version Used**: 16.0, 16.1\r\n\r\n**Steps to Reproduce**:\r\n```\r\nusing System;\r\nusing System.Linq;\r\n\r\nclass LetSample1\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        string[] strings = { \"A penny saved is a penny earned.\", \"The early bird catches the worm.\", \"The pen is mightier than the sword.\" };\r\n        // Split the sentence into an array of words            \r\n        // and select those whose first letter is a vowel.           \r\n        var earlyBirdQuery =\r\n            (from sentence in strings\r\n             let words = sentence.Split(' ')\r\n             from word in words\r\n             let w = word.ToLower()\r\n             where w[0] == 'a' || w[0] == 'e'\r\n             || w[0] == 'i' || w[0] == 'o'\r\n             || w[0] == 'u'\r\n             select new\r\n             {\r\n                 FirstWord = w.First(),\r\n                 LastWord = w.Last()\r\n             }).ToList();\r\n        Console.ReadLine();\r\n    }\r\n}\r\n```\r\n\r\nPut a breakpoint at `select new`\r\n`word` and `w` are available in the Locals window. They can be evaluated in the Watch window and in the Immediate window.\r\n\r\nType `w` in the Watch window or in the Immediate Window. \r\n**Expected**\r\nIntellisense contains `word` and `w`\r\n**Actual**\r\nIntellisense does not contain `word` and `w`","Url":"https://github.com/dotnet/roslyn/issues/34780","RelatedDescription":"Open issue \"Intellisense misses internal LINQ variables available in Locals, Watch and Immediate windows\" (#34780)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"429976790","IsPullRequest":true,"CreatedAt":"2019-04-06T00:25:51","Actor":"nattress","Number":"7264","RawContent":null,"Title":"Attempt 3 at passing Azure feed / Key to the publish job","State":"closed","Body":"Inline scripts have their own syntax for properties and require input arguments to be called out like a method signature.","Url":"https://github.com/dotnet/corert/pull/7264","RelatedDescription":"Closed or merged PR \"Attempt 3 at passing Azure feed / Key to the publish job\" (#7264)"},{"Id":"429966491","IsPullRequest":true,"CreatedAt":"2019-04-05T23:15:36","Actor":"nattress","Number":"7263","RawContent":null,"Title":"Set working folder for official build publish task","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7263","RelatedDescription":"Closed or merged PR \"Set working folder for official build publish task\" (#7263)"},{"Id":"429896736","IsPullRequest":true,"CreatedAt":"2019-04-05T21:29:14","Actor":"nattress","Number":"7262","RawContent":null,"Title":"Publish to Azure blob feed","State":"closed","Body":"MyGet keeps running out of storage quota (see https://github.com/dotnet/core-eng/issues/5070). Switch to Azure blob feed so CoreRT nightly builds are publicly available.","Url":"https://github.com/dotnet/corert/pull/7262","RelatedDescription":"Closed or merged PR \"Publish to Azure blob feed\" (#7262)"},{"Id":"429686003","IsPullRequest":true,"CreatedAt":"2019-04-05T12:56:35","Actor":"MichalStrehovsky","Number":"7261","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"Should pick up dotnet/corefx#36552.","Url":"https://github.com/dotnet/corert/pull/7261","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7261)"},{"Id":"429363643","IsPullRequest":true,"CreatedAt":"2019-04-05T12:51:00","Actor":"Dotnet-GitSync-Bot","Number":"7258","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7258","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7258)"},{"Id":"429508597","IsPullRequest":true,"CreatedAt":"2019-04-04T22:24:10","Actor":"EgorBo","Number":"7260","RawContent":null,"Title":"Move AssemblyName to shared","State":"open","Body":"CoreRT part of https://github.com/dotnet/coreclr/pull/23737","Url":"https://github.com/dotnet/corert/pull/7260","RelatedDescription":"Open PR \"Move AssemblyName to shared\" (#7260)"},{"Id":"429412133","IsPullRequest":true,"CreatedAt":"2019-04-04T20:52:56","Actor":"jkotas","Number":"7259","RawContent":null,"Title":"Fix build with VS2019","State":"closed","Body":"The environment setup scripts that come with VS2019 change current directory. It breaks places in the build that depend on current directory.","Url":"https://github.com/dotnet/corert/pull/7259","RelatedDescription":"Closed or merged PR \"Fix build with VS2019\" (#7259)"},{"Id":"429278376","IsPullRequest":true,"CreatedAt":"2019-04-04T16:04:09","Actor":"Dotnet-GitSync-Bot","Number":"7257","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7257","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7257)"},{"Id":"429080050","IsPullRequest":true,"CreatedAt":"2019-04-04T10:18:54","Actor":"Dotnet-GitSync-Bot","Number":"7255","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7255","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7255)"},{"Id":"429191733","IsPullRequest":false,"CreatedAt":"2019-04-04T10:06:18","Actor":"DenMpei","Number":"7256","RawContent":null,"Title":" [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Drawing.Common","State":"open","Body":"Good day! \r\n\r\nI run: dotnet publish -r win-x64 -c release \r\nConsole application\r\n.Net Core version: 2.2\r\n\r\nAnd I get such an error ... What can I do about it?\r\n\r\nGenerating native code\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Drawing.Common","Url":"https://github.com/dotnet/corert/issues/7256","RelatedDescription":"Open issue \" [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Drawing.Common\" (#7256)"},{"Id":"429036821","IsPullRequest":true,"CreatedAt":"2019-04-04T04:36:53","Actor":"Dotnet-GitSync-Bot","Number":"7254","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corert/pull/7254","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7254)"},{"Id":"428980545","IsPullRequest":true,"CreatedAt":"2019-04-03T22:45:33","Actor":"Dotnet-GitSync-Bot","Number":"7252","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkoritzinsky","Url":"https://github.com/dotnet/corert/pull/7252","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7252)"},{"Id":"428993042","IsPullRequest":true,"CreatedAt":"2019-04-03T21:57:51","Actor":"trylek","Number":"7253","RawContent":null,"Title":"SuperILC support for scripted test app executions","State":"open","Body":"In CoreCLR, each test app has an accompanying cmd script that executes\r\nthe app using CoreRun, possibly passing command-line arguments as\r\nrequired by the particular test case. Previously, SuperIlc used to\r\nblindly execute the native executable - the lack of proper command-line\r\narguments were causing failures in dozens of tests.\r\n\r\nThis change tweaks SuperIlc to embrace the execution scripts as a\r\npreferred alternative to directly running the executables [that option\r\nstill exists and is exercised in the CoreRT R2R testing]. I have also\r\nsimplified bits of the code by directly passing around the BuildOptions\r\nstructure rather than propagating multiple arguments representing\r\nvarious fields on the structure. This also let me better encapsulate\r\nlocating the CoreRun executable.\r\n\r\nI have replaced CrossgenDirectory with CoreRootDirectory with better\r\nserves our needs as it needs to be passed as the CORE_ROOT environment\r\nvariable to the test execution scripts. I have restored Simon's original\r\ncode treating --crossgen as a mere flag.\r\n\r\nI have modified ParallelRunner.Launch to output to the Console as this\r\nparticular message mostly serves as a visual progress indicator when\r\nrunning the tests, it's no use in the rollup log.\r\n\r\nI have slightly trimmed down the ProcessRunner reports: when the process\r\nsucceeds, we don't need to report its exit code as it's either implicit\r\nor we can look it up in the scripts. In case of failure, only dump\r\nthe hex form of the exit code if it's negative as that's where NT\r\nstatuses or HRESULT's get displayed as meaningless big negative integers.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7253","RelatedDescription":"Open PR \"SuperILC support for scripted test app executions\" (#7253)"},{"Id":"428908115","IsPullRequest":true,"CreatedAt":"2019-04-03T21:18:34","Actor":"Dotnet-GitSync-Bot","Number":"7251","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @janvorli @janvorli @janvorli","Url":"https://github.com/dotnet/corert/pull/7251","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7251)"},{"Id":"428805822","IsPullRequest":true,"CreatedAt":"2019-04-03T16:22:53","Actor":"MichalStrehovsky","Number":"7250","RawContent":null,"Title":"Fix regression in Enum.CompareTo","State":"closed","Body":"`Enum.CompareTo` is expected to return -1/0/1, but e.g. `Byte.CompareTo` does not. We can't delegate this.","Url":"https://github.com/dotnet/corert/pull/7250","RelatedDescription":"Closed or merged PR \"Fix regression in Enum.CompareTo\" (#7250)"},{"Id":"428492299","IsPullRequest":true,"CreatedAt":"2019-04-03T16:06:06","Actor":"yowl","Number":"7247","RawContent":null,"Title":"wasm: remove unneeded fpext when doing ops on 2 floats","State":"closed","Body":"previously when floats where popped off the stack they were always widened to doubles.  This change removes that and only widens floats when the operation has a double on the other side.","Url":"https://github.com/dotnet/corert/pull/7247","RelatedDescription":"Closed or merged PR \"wasm: remove unneeded fpext when doing ops on 2 floats\" (#7247)"},{"Id":"428724140","IsPullRequest":true,"CreatedAt":"2019-04-03T11:53:31","Actor":"hc4","Number":"7249","RawContent":null,"Title":"Fix building Ubuntu shared libraries","State":"open","Body":"fixes #4988.\r\nCoreRT can now produce working shared lib for linux-x64.\r\n\r\nBut I have some questions\r\n\r\n- Should we use the trick with jumping to GOTPCREL ptr for other Rh* stubs (like RhExceptionHandling_FailedAllocation)?\r\n- Is it right way to check, that symbol should be exported as global through IExportableSymbolNode.GetExportForm()?\r\n- Is it enough to pass all tests to check, that this commit nothing breaks?","Url":"https://github.com/dotnet/corert/pull/7249","RelatedDescription":"Open PR \"Fix building Ubuntu shared libraries\" (#7249)"},{"Id":"428526993","IsPullRequest":false,"CreatedAt":"2019-04-03T02:01:57","Actor":"yowl","Number":"7248","RawContent":null,"Title":"wasm: support Generic Virtual Method Calls & Shared Generics (was: some linq methods fail to compile)","State":"open","Body":"When attempting to build an Uno Platform project, it fails on a method \r\n```\r\n{[System.Linq]System.Linq.Enumerable+Iterator`1<Windows.UI.Xaml.Documents.Inline>.Select<string>(Func``2<Inline,string>)}\r\n```\r\n in the ctor for `WebAssemblyVTableSlotNode` on the assert\r\n```\r\nDebug.Assert(!targetMethod.HasInstantiation);\r\n```\r\nNot done any more investigation yet.","Url":"https://github.com/dotnet/corert/issues/7248","RelatedDescription":"Open issue \"wasm: support Generic Virtual Method Calls & Shared Generics (was: some linq methods fail to compile)\" (#7248)"},{"Id":"428458380","IsPullRequest":true,"CreatedAt":"2019-04-02T23:12:29","Actor":"Dotnet-GitSync-Bot","Number":"7246","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7246","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7246)"},{"Id":"428022723","IsPullRequest":true,"CreatedAt":"2019-04-02T21:44:03","Actor":"jkotas","Number":"7244","RawContent":null,"Title":"Store StructMarshalingData for OffsetOf on blittable types","State":"closed","Body":"Fixes #7232","Url":"https://github.com/dotnet/corert/pull/7244","RelatedDescription":"Closed or merged PR \"Store StructMarshalingData for OffsetOf on blittable types\" (#7244)"},{"Id":"428224212","IsPullRequest":true,"CreatedAt":"2019-04-02T13:22:41","Actor":"MichalStrehovsky","Number":"7245","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"The UTC bug that was blocking the integration is now fixed.","Url":"https://github.com/dotnet/corert/pull/7245","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7245)"},{"Id":"428005918","IsPullRequest":true,"CreatedAt":"2019-04-02T11:47:26","Actor":"Dotnet-GitSync-Bot","Number":"7243","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @krwq @krwq","Url":"https://github.com/dotnet/corert/pull/7243","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7243)"},{"Id":"427930897","IsPullRequest":true,"CreatedAt":"2019-04-02T03:24:36","Actor":"Dotnet-GitSync-Bot","Number":"7242","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7242","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7242)"},{"Id":"427883213","IsPullRequest":true,"CreatedAt":"2019-04-01T21:55:39","Actor":"Dotnet-GitSync-Bot","Number":"7241","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @acid-chicken","Url":"https://github.com/dotnet/corert/pull/7241","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7241)"},{"Id":"427452743","IsPullRequest":true,"CreatedAt":"2019-04-01T21:26:28","Actor":"trylek","Number":"7238","RawContent":null,"Title":"SuperIlc - minor improvements and bugfixes","State":"closed","Body":"These are a couple of items I spotted in my local SuperIlc testing:\r\n\r\n1) FindCoreRun was crashing with nullref when no ReferencePaths were\r\nspecified. I used this opportunity to unify the idiom of converting\r\nthe command line argument to an IEnumerable<string>.\r\n\r\n2) The execution step was missing logging of failures similar to\r\nwhat we have for compilations. I have adapted compilation logging\r\nfor this purpose.\r\n\r\n3) I hit and fixed a typo in the DateTime formatting string for the\r\nCompileDirectory command.\r\n\r\n4) I came to the conclusion that it's more precise to have the\r\n\"outcome\" table represent individual compilations and executions\r\nrather than the complete \"apps\" (folders) so I modified the code\r\nas appropriate.\r\n\r\n5) I fixed a bug where I had incorrectly placed a try / catch block\r\nand that caused error count calculation to be slightly off.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7238","RelatedDescription":"Closed or merged PR \"SuperIlc - minor improvements and bugfixes\" (#7238)"},{"Id":"427666802","IsPullRequest":true,"CreatedAt":"2019-04-01T18:26:01","Actor":"filipnavara","Number":"7239","RawContent":null,"Title":"Add missing PreAllocatedOverlapped and ThreadPoolBoundHandle classes …","State":"closed","Body":"…on Unix builds\r\n\r\nContributes to https://github.com/dotnet/corert/issues/7090.","Url":"https://github.com/dotnet/corert/pull/7239","RelatedDescription":"Closed or merged PR \"Add missing PreAllocatedOverlapped and ThreadPoolBoundHandle classes …\" (#7239)"},{"Id":"427716069","IsPullRequest":true,"CreatedAt":"2019-04-01T15:25:10","Actor":"MichalStrehovsky","Number":"7240","RawContent":null,"Title":"Fix regression in Enum.GetValues","State":"closed","Body":"Found during Project N integration.","Url":"https://github.com/dotnet/corert/pull/7240","RelatedDescription":"Closed or merged PR \"Fix regression in Enum.GetValues\" (#7240)"},{"Id":"427311595","IsPullRequest":true,"CreatedAt":"2019-03-31T08:54:03","Actor":"MichalStrehovsky","Number":"7237","RawContent":null,"Title":"Add option to enable method body folding","State":"closed","Body":"This adds an option to specify the user would like to fold identical method bodies together. When enabled, we generate method bodies into separate COMDAT sections and when linker has `/OPT:ICF` passed to it (we already pass that), it's going to fold sections with identical content together.\r\n\r\nThis results in size savings - e.g. we save 170 kB on a Hello world because there's lots of methods with identical bodies in the image.\r\n\r\nI've also enabled folding of the `FoldableReadOnlyDataSection`. This was added for Project N but wasn't taken advantage of in the open source compiler. With this, we can fold identical interface dispatch maps and a couple other things. The size savings from that are not substatial, but we can do it without being under the optional switch, so that's nice.","Url":"https://github.com/dotnet/corert/pull/7237","RelatedDescription":"Closed or merged PR \"Add option to enable method body folding\" (#7237)"},{"Id":"427230798","IsPullRequest":true,"CreatedAt":"2019-03-30T03:19:34","Actor":"Dotnet-GitSync-Bot","Number":"7236","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Gnbrkm41","Url":"https://github.com/dotnet/corert/pull/7236","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7236)"},{"Id":"427214057","IsPullRequest":true,"CreatedAt":"2019-03-30T02:06:05","Actor":"Dotnet-GitSync-Bot","Number":"7235","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sdmaclea","Url":"https://github.com/dotnet/corert/pull/7235","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7235)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"429720784","IsPullRequest":true,"CreatedAt":"2019-04-05T23:03:24","Actor":"dotnet-maestro[bot]","Number":"3084","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19204.16\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3084","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3084)"},{"Id":"429873264","IsPullRequest":true,"CreatedAt":"2019-04-05T18:03:00","Actor":"jkoritzinsky","Number":"3087","RawContent":null,"Title":"Convert ComHost tasks to use System.Text.Json instead of Newtonsoft.Json","State":"open","Body":"Fixes #3081 \r\n\r\ncc: @nguerrera @wli3","Url":"https://github.com/dotnet/sdk/pull/3087","RelatedDescription":"Open PR \"Convert ComHost tasks to use System.Text.Json instead of Newtonsoft.Json\" (#3087)"},{"Id":"429836629","IsPullRequest":true,"CreatedAt":"2019-04-05T16:22:55","Actor":"dsplaisted","Number":"3086","RawContent":null,"Title":"Rewrite deps file generation","State":"open","Body":"Fixes #3010\r\n\r\n## Background\r\n\r\nThe ResolvePackageAssets task outputs the resolved files from the assets file in various MSBuild items.  It uses an optimized cache file in order to avoid the performance overhead of reading the assets file if the assets file  hasn't changed.\r\n\r\nThe GenerateDepsFile task currently still reads the assets file directly.  This is a bit of a perf hit, but the task is not part of our \"inner loop\" perf scenario, since if you just make a code change and rebuild, the deps file will be up-to-date and won't need to be regenerated.\r\n\r\nThe GenerateDepsFile task has a `FilesToSkip` parameter, which is a list of files that should not be written to the deps file.  Generally, these are the \"conflict\" files that come from ResolvePackageFileConflicts.  However, the linker also wants to be able to specify files that shouldn't be written to the deps file because they have been linked out\r\n\r\nThe `FilesToSkip` items are full resolved paths.  Currently, the GenerateDepsFile task essentially translates assets from the assets file to the deps file, and in both of these cases the assets are identified by a package ID and version, and a relative path inside the package.  So for the FilesToSkip, the resolved path needs to be translated into a NuGet package ID and a relative path inside the package.  This is done via a \"heuristic\" that walks up the directory tree until it finds a .nuspec file, since NuGet puts the .nuspec file in the root of the package's folder in the package cache.\r\n\r\nHowever, now that we use targeting packs and apphost packs which are installed to dotnet\\packs instead of coming from a NuGet package, there are assets for which this heuristic doesn't work.  This is the issue described in #3010, and it means that any FilesToSkip that come from these packs will be ignored, and the file will still be written to the deps file.\r\n\r\n## Description of changes\r\n\r\nThis PR implements new logic for generating the deps file.  Most of the logic for doing this is actually implemented in the `DependencyContextBuilder` class.  So this PR adds a new `DependencyContextBuilder2` class which implements the new logic, and the `GenerateDepsFile` task can use the old logic, the new logic, or both of them and ensure that the results are the same.\r\n\r\n`DependencyContextBuilder2` works similarly to `DependencyContextBuilder`, except that instead of relying on the assets file for the assets to write to the deps file, it takes lists of files which come from the outputs of the ResolvePackageAssets task.  These items have metadata which indicates which package they belong to and the relative path to the asset within the package.  The new code still reads the assets file in order to get the \"libraries\" from the assets file and their dependencies.  In the future we can update ResolvePackageAssets to output and cache this data as well, and then we would be able to avoid the perf hit of reading the assets file in GenerateDepsFile as well.  The data that comes from the assets file (via the `ProjectContext` class) is all read in the `DependencyContextBuilder2` constructor, which should help make it clearer what data we would need for this.\r\n\r\nThe new logic does not use the `FilesToSkip` parameter, rather the files to skip should simply be removed from the items that are passed to the `GenerateDepsFile` task, for example:\r\n\r\n```xml\r\n    <ItemGroup>\r\n      <ResolvedCompileFileDefinitions Remove=\"@(_ConflictPackageFiles)\" />\r\n      <NativeCopyLocalItems Remove=\"@(_ConflictPackageFiles)\" />\r\n      <ResourceCopyLocalItems Remove=\"@(_ConflictPackageFiles)\" />\r\n      <RuntimeCopyLocalItems Remove=\"@(_ConflictPackageFiles)\" />\r\n      <RuntimeTargetsCopyLocalItems Remove=\"@(_ConflictPackageFiles)\" />\r\n      <RuntimePackAsset Remove=\"@(_ConflictPackageFiles)\" />\r\n    </ItemGroup>\r\n```\r\n\r\n## Comparing old and new deps file generation logic\r\n\r\nWith this PR, the `GenerateDepsFile` task is able to use either the old logic, the new logic, or run both and compare the results, erroring out if there is a difference.  The comparison and erroring out was necessary in order to ensure that the new code produced the same results as the old code (except in cases where we wanted it to differ).  Right now the default is still to run both modes and compare the result.  If we want to get more coverage ensuring that the results are the same in the wild, we could leave this as the default for a few previews, before removing the old logic.  Otherwise, I'd suggest we default to the new logic and leave the old logic in as an option for a few previews as an escape hatch if this breaks anything.\r\n\r\n## Other changes\r\n\r\n- Stop generating runtime signature for deps file.  This used the SHA1 algorithm but as far as we can tell was never consumed by the runtime or anywhere else\r\n- Read PackageOverrides.txt from targeting pack\r\n- Avoid using heuristic to find NuGet package ID.  If there wasn't metadata on the item to indicate the package ID, but the heuristic would have found a package ID, throw an exception so that we can find these cases and add the appropriate metadata","Url":"https://github.com/dotnet/sdk/pull/3086","RelatedDescription":"Open PR \"Rewrite deps file generation\" (#3086)"},{"Id":"429720942","IsPullRequest":true,"CreatedAt":"2019-04-05T16:00:20","Actor":"dotnet-bot","Number":"3085","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3085","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3085)"},{"Id":"429522655","IsPullRequest":true,"CreatedAt":"2019-04-05T15:34:10","Actor":"dsplaisted","Number":"3080","RawContent":null,"Title":"Rewrite deps file generation","State":"closed","Body":"WIP for now, sending PR to get CI coverage.","Url":"https://github.com/dotnet/sdk/pull/3080","RelatedDescription":"Closed or merged PR \"Rewrite deps file generation\" (#3080)"},{"Id":"429531681","IsPullRequest":true,"CreatedAt":"2019-04-05T04:00:10","Actor":"dotnet-bot","Number":"3083","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3083","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3083)"},{"Id":"429531671","IsPullRequest":true,"CreatedAt":"2019-04-05T02:30:10","Actor":"dotnet-bot","Number":"3082","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3082","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3082)"},{"Id":"429523372","IsPullRequest":false,"CreatedAt":"2019-04-04T23:22:03","Actor":"wli3","Number":"3081","RawContent":null,"Title":"migrate newtonsoft.json to system.text.json in RegFreeComManifest.cs and ClsidMap.cs","State":"open","Body":"https://github.com/dotnet/sdk/blob/afae0615d5cbb16c058c5ce1fd65215d07df24d9/src/Tasks/Microsoft.NET.Build.Tasks/ClsidMap.cs\r\nhttps://github.com/dotnet/sdk/blob/afae0615d5cbb16c058c5ce1fd65215d07df24d9/src/Tasks/Microsoft.NET.Build.Tasks/RegFreeComManifest.cs\r\n","Url":"https://github.com/dotnet/sdk/issues/3081","RelatedDescription":"Open issue \"migrate newtonsoft.json to system.text.json in RegFreeComManifest.cs and ClsidMap.cs\" (#3081)"},{"Id":"429508363","IsPullRequest":true,"CreatedAt":"2019-04-04T22:23:18","Actor":"MSLukeWest","Number":"3079","RawContent":null,"Title":"Adding PublishItemsOutputGroup to support VS installer projects","State":"open","Body":"VS installer projects need to be able to access an output group that contains publishing outputs in order to create MSIs for self contained deployment, so I'm adding PublishItemsOutputGroup to the publishing targets.","Url":"https://github.com/dotnet/sdk/pull/3079","RelatedDescription":"Open PR \"Adding PublishItemsOutputGroup to support VS installer projects\" (#3079)"},{"Id":"427160016","IsPullRequest":true,"CreatedAt":"2019-04-04T20:52:44","Actor":"livarcocc","Number":"3062","RawContent":null,"Title":"Switching to Jobs from Phases for YAML and also switch to new pools.","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3062","RelatedDescription":"Closed or merged PR \"Switching to Jobs from Phases for YAML and also switch to new pools.\" (#3062)"},{"Id":"429477816","IsPullRequest":true,"CreatedAt":"2019-04-04T20:52:05","Actor":"johnbeisner","Number":"3078","RawContent":null,"Title":"Switching to Jobs from Phases for YAML","State":"open","Body":"Switching to Jobs from Phases for YAML and also switch to new pools.","Url":"https://github.com/dotnet/sdk/pull/3078","RelatedDescription":"Open PR \"Switching to Jobs from Phases for YAML\" (#3078)"},{"Id":"427293027","IsPullRequest":true,"CreatedAt":"2019-04-04T20:11:47","Actor":"kouvel","Number":"3064","RawContent":null,"Title":"Change option that enables/disables tier 0 JIT and expose another related option","State":"closed","Body":"Depends on https://github.com/dotnet/coreclr/pull/23597\r\n\r\n- Tier 0 JIT is being referred to as quick JIT. Renamed option that was added by https://github.com/dotnet/sdk/pull/2925 to StartupTierQuickJit, which indicates whether tiered compilation may use quick JIT in its startup tier. Default will be false.\r\n- Added option QuickJitForLoops that configures whether quick JIT may be used for methods that contain loops. Default will be false, so `<StartupTierQuickJit>true</StartupTierQuickJit>` would still not use quick JIT for methods that contain loops by default.","Url":"https://github.com/dotnet/sdk/pull/3064","RelatedDescription":"Closed or merged PR \"Change option that enables/disables tier 0 JIT and expose another related option\" (#3064)"},{"Id":"429240525","IsPullRequest":true,"CreatedAt":"2019-04-04T20:10:08","Actor":"dotnet-maestro[bot]","Number":"3077","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19203.10\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3077","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3077)"},{"Id":"429036286","IsPullRequest":false,"CreatedAt":"2019-04-04T00:59:49","Actor":"jgunzy","Number":"3076","RawContent":null,"Title":"Build errors in VS2017 after installing VS2019","State":"open","Body":"I have an existing solution containing some projects targeting .Net Core 2.1 and .Net Standard 2.0.\r\n\r\nI installed VS2019, and the solution builds.  If I open VS2017 and try to build the same solution, I get errors saying:\r\nThe current .NET SDK does not support targeting .NET Core 2.1.  Either target .NET Core 1.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.\t\r\nand\r\nThe current .NET SDK does not support targeting .NET Standard 2.0.  Either target .NET Standard 1.6 or lower, or use a version of the .NET SDK that supports .NET Standard 2.0.\t\r\n\r\nThis was working before install of VS2019, and still works in VS2019, just not in VS2017.","Url":"https://github.com/dotnet/sdk/issues/3076","RelatedDescription":"Open issue \"Build errors in VS2017 after installing VS2019\" (#3076)"},{"Id":"429017416","IsPullRequest":false,"CreatedAt":"2019-04-03T23:28:40","Actor":"terrajobst","Number":"3075","RawContent":null,"Title":"Framework defines can easily break code","State":"open","Body":"With #309 we've added an implicit define based on the target framework, which is super useful for customers when using conditional compilation.\r\n\r\nUnfortunately, this makes it extremely easy to write code that breaks during retargeting. Let's say I'm in a .NET Standard project and I'd like to add a code path that uses some new feature in .NET Standard 2.1, so I multi-target for .NET Standard 2.0 and .NET Standard 2.1. The code would look as follows: \r\n\r\n\r\n```C#\r\npublic void SomeMethod()\r\n{\r\n    #if NETSTANDARD2_1\r\n        // Write some code that uses Span<T>\r\n    #else\r\n        // Write fallback logic\r\n    #endif\r\n}\r\n```\r\n\r\nFast forward a year. Now I'd like to add some logic that can light-up on .NET Standard 2.2. So in a different area in my code I'm writing this:\r\n\r\n```C#\r\npublic void SomeOtherMethod()\r\n{\r\n    #if NETSTANDARD2_2\r\n        // Write some code that uses some new feature in .NET Standard 2.2\r\n    #else\r\n        // Write fallback logic\r\n    #endif\r\n}\r\n```\r\n\r\nThe code will compile just fine and everything looks dandy until you realize that your .NET Standard 2.1 binary no longer uses `Span<T>` in `SomeMethod()` but emitted the fallback logic.\r\n\r\nIdeally, we'd want to write code like this:\r\n\r\n```C#\r\npublic void SomeMethod()\r\n{\r\n    #if NETSTANDARD >= 2.1\r\n        // Write some code that uses Span<T>\r\n    #else\r\n        // Write fallback logic\r\n    #endif\r\n}\r\n```\r\n\r\nWhich C# doesn't support (and likely never will). However, we could instead change the SDK to define more symbols, such as:\r\n\r\n```C#\r\npublic void SomeMethod()\r\n{\r\n    #if NETSTANDARD2_1_OR_HIGHER\r\n        // Write some code that uses Span<T>\r\n    #else\r\n        // Write fallback logic\r\n    #endif\r\n}\r\n```\r\n\r\nThe `_OR_HIGHER` symbols would all be defined.\r\n\r\nThoughts?","Url":"https://github.com/dotnet/sdk/issues/3075","RelatedDescription":"Open issue \"Framework defines can easily break code\" (#3075)"},{"Id":"428949719","IsPullRequest":true,"CreatedAt":"2019-04-03T20:02:50","Actor":"swaroop-sridhar","Number":"3074","RawContent":null,"Title":"Add support for Single-file publishing ","State":"open","Body":"This change implements support for publishing apps to a single file.\r\n\r\n* ``dotnet publish /p:PublishSingleFile=true`` causes the contents of the \"original\" publish directory to a single file in the actual publish directory \r\n* Files marked with the meta-data ``<IncludeInSingleFile>false<IncludeInSingleFile>`` are left in the publish directory unbundled. This includes PDB files by default\r\n* PDB files can be bundled into the single file by setting ``/p:IncludePdbInSingleFile=true``\r\n\r\nPublishing to a single file requires publishing wrt a RID using an apphost, because the generated file is the platform-specific AppHost executable with embedded dependencies.\r\n\r\nTest Pass: requires a change to the bundler, which is waiting to be updated in the toolset repo.\r\n","Url":"https://github.com/dotnet/sdk/pull/3074","RelatedDescription":"Open PR \"Add support for Single-file publishing \" (#3074)"},{"Id":"428727550","IsPullRequest":true,"CreatedAt":"2019-04-03T14:07:36","Actor":"dotnet-maestro[bot]","Number":"3073","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190402.13\r\n- **Date Produced**: 4/3/2019 12:44 AM\r\n- **Commit**: 764f362c8e92e41905fe5f6c782ab9980c86c909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19202.13\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3073","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3073)"},{"Id":"428460599","IsPullRequest":true,"CreatedAt":"2019-04-02T21:48:28","Actor":"fadimounir","Number":"3072","RawContent":null,"Title":"Update version in global.json","State":"open","Body":"New version pulls the ILLink.Tasks and Microsoft.NET.Build.Bundle packages.","Url":"https://github.com/dotnet/sdk/pull/3072","RelatedDescription":"Open PR \"Update version in global.json\" (#3072)"},{"Id":"428383802","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:46","Actor":"nugetlurker","Number":"3071","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3071","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into sdk\" (#3071)"},{"Id":"428383786","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:43","Actor":"nugetlurker","Number":"3070","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3070","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into sdk\" (#3070)"},{"Id":"427940639","IsPullRequest":false,"CreatedAt":"2019-04-01T22:32:28","Actor":"nkolev92","Number":"3069","RawContent":null,"Title":"ProduceContentAssets should not \"url decode\" paths provided by NuGet","State":"open","Body":"Create the following project and run `dotnet build`.\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net462</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ContentFilesExample\" Version=\"*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nMake sure that nuget.org is among the sources. \r\n\r\n```\r\n dotnet build\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 530.45 ms for C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: The \"ProduceContentAssets\" task failed unexpectedly. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\globalPackagesFolder\\contentfilesexample\\1.0.2\\contentFiles\\cs\\portable-net45+wpa81+wp8+win8\\ExampleReader.cs.pp'. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.File.OpenRead(String path) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.NugetContentAssetPreprocessor.Process(String originalAssetPath, String relativeOutputPath, String& pathToFinalAsset) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ProduceContentAsset(ITaskItem contentFile) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ExecuteCore() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: The \"ProduceContentAssets\" task failed unexpectedly. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\globalPackagesFolder\\contentfilesexample\\1.0.2\\contentFiles\\cs\\portable-net45+wpa81+wp8+win8\\ExampleReader.cs.pp'. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.File.OpenRead(String path) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.NugetContentAssetPreprocessor.Process(String originalAssetPath, String relativeOutputPath, String& pathToFinalAsset) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ProduceContentAsset(ITaskItem contentFile) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ExecuteCore() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.67\r\n```\r\n\r\nThe issue here is that the selected framework for the contentfiles is a PCL framework and `+` in the name, encoded as `%2B`. \r\n\r\nNuGet extracts the encoded name, and writes that to the assets file, g.props as needed.\r\n\r\nPaths that the targets read from NuGet should be treated as strings and not decoded in any way. \r\n","Url":"https://github.com/dotnet/sdk/issues/3069","RelatedDescription":"Open issue \"ProduceContentAssets should not \"url decode\" paths provided by NuGet\" (#3069)"},{"Id":"427938176","IsPullRequest":false,"CreatedAt":"2019-04-01T22:24:03","Actor":"nguerrera","Number":"3068","RawContent":null,"Title":"Support framework satellite assemblies in self-contained deployment","State":"open","Body":"The runtime packs for Microsoft.WindowsDesktop.App now have satellites assemblies. However, they are not used by self-contained build or publish.\r\n\r\nThey should be deployed exactly as satellites from a NuGet package. That is:\r\n\r\n1. If `$(SatelliteResourceLanguages)` is not specified, then all satellites are deployed.\r\n\r\n2. If `$(SatelliteResourceLanguages)` is specified, then only matching satellites are deployed.\r\n\r\ncc @dsplaisted @leecow @vivmishra\r\n\r\nThis is needed for .NET Core 3.0 Preview 5","Url":"https://github.com/dotnet/sdk/issues/3068","RelatedDescription":"Open issue \"Support framework satellite assemblies in self-contained deployment\" (#3068)"},{"Id":"426276905","IsPullRequest":true,"CreatedAt":"2019-04-01T21:59:02","Actor":"peterhuene","Number":"3058","RawContent":null,"Title":"Fix apphost creation when using a publish profile.","State":"closed","Body":"When publishing an ASP.NET project using a publish profile that sets\r\n`RuntimeIdentifier`, various apphost-related properties are calculated before\r\nthe RID is set when the publish profile is imported.\r\n\r\nThis typically results in the expected file names for the restored assets not\r\nhaving the correct prefixes and suffixes for the target RID.  For example, if a\r\nWindows RID is set in the publish profile, the expected apphost asset is named\r\n`apphost` instead of the correct `apphost.exe`. This causes the apphost\r\ncustomization to be skipped because the expected apphost asset wasn't found.\r\n\r\nThe fix is to delay setting these properties until after the publish profile\r\nhas been imported by the Web SDK.  This is accomplished by moving the\r\nproperties into a target that is invoked based on every place in the SDK\r\nwhere the properties are used.\r\n\r\nFixes dotnet/cli#10647.","Url":"https://github.com/dotnet/sdk/pull/3058","RelatedDescription":"Closed or merged PR \"Fix apphost creation when using a publish profile.\" (#3058)"},{"Id":"427813834","IsPullRequest":false,"CreatedAt":"2019-04-01T16:59:31","Actor":"jzabroski","Number":"3067","RawContent":null,"Title":"Implement CleanFull target","State":"open","Body":"In my .NET Core projects, I define a \"cleanfull\" target in all my .NET Core projects that does the following:\r\n\r\n* Runs MSBuild Clean target\r\n* Runs custom task to remove all nuget packages\r\n* Runs custom task to remove MSTest results directory\r\n* Runs custom task to remove bin and obj directories\r\n\r\nThe normal MSBuild Clean is a pain in the ass to deal with when upgrading .NET framework versions and making sure metapackages resolve consistently between development environment and build server.\r\n\r\nThe only alternative way to solve this problem cleanly is to run your entire build pipeline, from local dev environment to build server, through a isolated process via docker container or similar.","Url":"https://github.com/dotnet/sdk/issues/3067","RelatedDescription":"Open issue \"Implement CleanFull target\" (#3067)"},{"Id":"427491342","IsPullRequest":false,"CreatedAt":"2019-04-01T03:08:33","Actor":"hrumhurum","Number":"3066","RawContent":null,"Title":"Intermittent file access errors to \"obj\\Release\\net45\\xxx.AssemblyInfo.cs\" file","State":"open","Body":"From time to time we get the following error on build agents:\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.1.505\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.GenerateAssemblyInfo.targets(134,5): error MSB3713: The file \"obj\\Release\\net45\\xxx.AssemblyInfo.cs\" could not be created. The process cannot access the file '...\\obj\\Release\\net45\\xxx.AssemblyInfo.cs' because it is being used by another process.\r\n\r\nSometimes it occurs on developer machines as well.\r\n\r\nThe classic MSBuild targets solved problems like that by waiting for access during 10 seconds or so. It would be nice to see a fix for that in .NET SDK as well.","Url":"https://github.com/dotnet/sdk/issues/3066","RelatedDescription":"Open issue \"Intermittent file access errors to \"obj\\Release\\net45\\xxx.AssemblyInfo.cs\" file\" (#3066)"},{"Id":"427411907","IsPullRequest":false,"CreatedAt":"2019-03-31T15:57:19","Actor":"barthamark","Number":"3065","RawContent":null,"Title":"Files generated before build (e.g. by NPM or Gulp) into the wwwroot folder might not be accessible","State":"open","Body":"I have a BeforeTargets=\"BeforeBuild\" script defined in my csproj file that executes a Gulp task which generates a bunch of js files taking more than 4 seconds to finish. These files are not accessible by the web application only after rebuilding the solution. However, if the script finishes quickly (couple milliseconds) then it will be fine after the first build.\r\n\r\n```\r\n<Target Name=\"NpmInstall\" BeforeTargets=\"BeforeBuild\">\r\n  <Exec Command=\"npm install\" />\r\n  <Exec Command=\"gulp\" />\r\n</Target>\r\n```\r\n\r\nThis might be a duplicate by one of the following issues, however, none of the workarounds fixed this scenario where the goal is to access these files locally on my development environment and not after publishing the website.\r\n\r\nhttps://github.com/aspnet/websdk/issues/114\r\nhttps://github.com/dotnet/sdk/issues/1044","Url":"https://github.com/dotnet/sdk/issues/3065","RelatedDescription":"Open issue \"Files generated before build (e.g. by NPM or Gulp) into the wwwroot folder might not be accessible\" (#3065)"},{"Id":"427275532","IsPullRequest":true,"CreatedAt":"2019-03-30T13:39:16","Actor":"dotnet-maestro[bot]","Number":"3063","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19179.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3063","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3063)"},{"Id":"426954314","IsPullRequest":true,"CreatedAt":"2019-03-29T13:34:35","Actor":"dotnet-maestro[bot]","Number":"3061","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19179.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3061","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3061)"},{"Id":"426647712","IsPullRequest":true,"CreatedAt":"2019-03-28T21:51:11","Actor":"wli3","Number":"3060","RawContent":null,"Title":"WIP test ci","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3060","RelatedDescription":"Closed or merged PR \"WIP test ci\" (#3060)"},{"Id":"426391209","IsPullRequest":false,"CreatedAt":"2019-03-28T16:44:48","Actor":"SravanthiDondapati","Number":"3059","RawContent":null,"Title":"NETSDK1064: Package Microsoft.VisualStudio.Web.CodeGeneration, version 2.1.1 was not found","State":"closed","Body":"Hi There,\r\n\r\nI am trying to configure Jenkins for my .Net Core Web API. We are using VS 2017 to build our code. So, when I try to build the project using command line **\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe\" /target:Clean,Build /property:Configuration=Release,VisualStudioVersion=15.0 \"projectName.sln\"** I get the below error: **NETSDK1064: Package Microsoft.VisualStudio.Web.CodeGeneration, version 2.1.1 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.**\r\nCan anyone help me in resolving the issue.","Url":"https://github.com/dotnet/sdk/issues/3059","RelatedDescription":"Closed issue \"NETSDK1064: Package Microsoft.VisualStudio.Web.CodeGeneration, version 2.1.1 was not found\" (#3059)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1113832934580948993","CreatedAt":"2019-04-04T15:57:20+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1111582019157278721","CreatedAt":"2019-03-29T10:53:00+00:00","UserScreenname":"dotnet","Text":"Learn how Azure Monitor can help you debug your production applications in this episode of #OnDotNet\n\n\"Investigatin… https://t.co/vNGlulMfam","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2019-04-06T05:30:29.6363417Z","RunDurationInMilliseconds":9121}