{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11640202229","Type":"PullRequestEvent","CreatedAt":"2020-02-28T22:14:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7856","RelatedDescription":"Merged pull request \"Initialize cookie compliance service during startup\" (#7856) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2980\r\n\r\nThis adds about 23 seconds to start-up time. "},{"Id":"11638426841","Type":"IssuesEvent","CreatedAt":"2020-02-28T18:09:41","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7857","RelatedDescription":"Closed issue \"[ECR] Investigate on-line SQL ECR for services/Jobs\" (#7857) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11638316063","Type":"IssuesEvent","CreatedAt":"2020-02-28T17:55:06","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7857","RelatedDescription":"Opened issue \"[ECR] Investigate on-line SQL ECR for services/Jobs\" (#7857) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11631273407","Type":"PullRequestEvent","CreatedAt":"2020-02-28T00:50:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7856","RelatedDescription":"Opened pull request \"Initialize cookie compliance service during startup\" (#7856) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2980\r\n\r\nThis adds about 23 seconds to start-up time. "},{"Id":"11629988288","Type":"IssuesEvent","CreatedAt":"2020-02-27T21:25:54","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7855","RelatedDescription":"Opened issue \"[A11y]Status.NuGet.Org must not use meta refresh\" (#7855) at NuGet/NuGetGallery","RelatedBody":"@ryuyu commented on [Thu Feb 27 2020](https://github.com/NuGet/Engineering/issues/3018)\n\nCurrently, the status page uses a <meta> tag to cause the page to refresh.\r\n\r\nThis is not a11y compliant.\r\nThe page should be updated to use a javascript refresh instead.\n\n"},{"Id":"11616862107","Type":"IssuesEvent","CreatedAt":"2020-02-26T16:21:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7849","RelatedDescription":"Closed issue \"[2020-02-18] Deployment\" (#7849) at NuGet/NuGetGallery","RelatedBody":"### NuGetGallery\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=578473\r\n\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n### Azure Search Service\r\n\r\nChanges:\r\n- Use managed identity for KeyVault access: https://github.com/NuGet/Engineering/issues/2972\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=579684\r\n\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n### CDNRedirect service\r\n\r\nChanges:\r\n- Use KeyVault integrated certificate: https://github.com/NuGet/Engineering/issues/2995\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=580913\r\n\r\n- [x] DEV\r\n- [x] PROD\r\n\r\n### Licenses service\r\n\r\nChanges:\r\n- Use KeyVault integrated certificate: https://github.com/NuGet/Engineering/issues/2995\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=580910\r\n\r\n- [x] DEV\r\n- [x] PROD"},{"Id":"11610145333","Type":"IssuesEvent","CreatedAt":"2020-02-26T02:05:58","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Closed issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11609736510","Type":"IssuesEvent","CreatedAt":"2020-02-26T00:57:24","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Opened issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11607150819","Type":"IssuesEvent","CreatedAt":"2020-02-25T19:21:31","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7853","RelatedDescription":"Opened issue \"\"Contact owners\" link should not appear on a package details page when there are no owners\" (#7853) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nA package details page for a package without any owners still shows the \"Contact owners\" link on the right. It is unclear what will happen when the message is sent.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Find a package with no owners ([example](https://www.nuget.org/packages/bar/))\r\n2. Look at its package details page\r\n3. See the \"Contact owners\" link on the right\r\n\r\n### Expected behavior\r\nNo \"Contact owners\" link.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/102933/75279548-a1510400-57c0-11ea-8acd-a6d230eb3f83.png)\r\n"},{"Id":"11599455192","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:18:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4973","RelatedDescription":"Closed issue \"Gallery accepts packages containing floating version ranges in dependencies\" (#4973) at NuGet/NuGetGallery","RelatedBody":"The following packages have floating versions in their dependency version ranges:\r\n\r\nID | Version\r\n-- | --\r\nScissorhands.Helpers | 1.0.0-alpha-17\r\nScissorhands.Helpers | 1.0.0-alpha-16\r\nPInvokeCompiler | 1.0.0-rc1\r\nJWT | 2.3.1\r\n\r\nThese should be rejected on upload and V3 registrations should strip the floating-ness, as client does:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/bdd8626c0e5c6ee0b505ea8a1274c5fe941fb6d1/src/NuGet.Core/NuGet.Protocol/DependencyInfo/RegistrationUtility.cs#L26\r\n\r\n/cc @emgarten "},{"Id":"11599448801","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:17:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7836","RelatedDescription":"Closed issue \"Remove the SemVer 2.0.0 warning from nuget.org\" (#7836) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nWhen the SemVer 2.0.0 changes were introduced to the V2 and V3 protocol, they are intended to mitigate the impact of SemVer 2.0.0 packages breaking old clients, e.g. suppose a very popular package released a SemVer 2.0.0 version. In such a case a 2.x customer would fail to restore a package because the version parsing would explode. So we make SemVer 2.0.0 packages \"opt-in\". \r\n\r\nThis protocol change meant that SemVer 2.0.0 packages were hidden in most of our APIs for clients that predate NuGet version 4.3. 4.3 is when the SemVer 2.0.0 protocol was implemented. At that same time we put a warning banner on nuget.org.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73881689-a223f500-4815-11ea-8717-653f6302cc65.png)\r\nhttps://www.nuget.org/packages/NuGet.Versioning/5.5.0-preview.2.6382\r\n\r\nA similar warning is also visible during UI upload and during package push. And during pack (NU5105).\r\n\r\nSince 4.3 was shipped so long ago, most clients now support the SemVer 2.0.0 protocol and this warning is more noisy than helpful.\r\n\r\nRange | Percent | Note\r\n-- | -- | --\r\n≥ 4.3 | ~96.4% | Supports SemVer 2.0.0 protocol\r\n≥ 3.0 && < 4.3 | ~3.6% | Partial SemVer 2.0.0 but not SemVer 2.0.0 protocol `*`\r\n< 3.0 | ~0.0% | Does not support SemVer 2.0.0\r\n\r\n`*` =\r\n- Anything before 4.3 will not see SemVer 2.0.0 in search or in the PM UI.\r\n- 3.5.0 and on supported SemVer 2.0.0 restore in packages.config so people can hand edit to work-around.\r\n- PackageReference always supported SemVer 2.0.0 from what I can tell so people could hard-code a SemVer 2.0.0 package in their .csproj and still restore.\r\n- V3 feeds always return SemVer 2.0.0 packages from flat container so packages can be found prior to SemVer 2.0.0. protocol support\r\n\r\n### Describe the solution you'd like\r\n\r\nRemove these warnings entirely.\r\n\r\n### Additional details\r\n\r\nPrompted by https://twitter.com/SimonCropp/status/1169447145939685376, https://github.com/NuGet/NuGetGallery/pull/7772, and https://github.com/NuGet/Home/issues/5201.\r\n\r\n/cc @nkolev92 @SimonCropp @agr @karann-msft \r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11640831836","Type":"IssuesEvent","CreatedAt":"2020-02-29T00:15:54","Actor":"Nirmal4G","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9234","RelatedDescription":"Opened issue \"OutputPath logic in Pack targets in a customized build doesn't work properly\" (#9234) at NuGet/Home","RelatedBody":"### NuGet.Build.Tasks.Pack project in NuGet.Client repo\r\n\r\n```xml\r\n    <PropertyGroup>\r\n      <PackageOutputPath Condition=\" '$(PackageOutputPath)' == '' \">$(OutputPath)</PackageOutputPath>\r\n      <RestoreOutputPath Condition=\" '$(RestoreOutputPath)' == '' \" >$(MSBuildProjectExtensionsPath)</RestoreOutputPath>\r\n    </PropertyGroup>\r\n```\r\n\r\n#### File: [NuGet.Build.Tasks.Pack.targets(149-152)][ref-lines]\r\n\r\nI don't know why but when I try to customise a build relying on Pack targets, the output path logic hits me with so many issues that it doesn't work out of the box.\r\n\r\nThere are two main issues here,\r\n1. `OutputPath` should be `BaseOutputPath` since, you are generating single package for many targets at once, which is similar to `NuSpecOutputPath` (has `BaseIntermediateOutputPath`).\r\n2. The output paths logic is placed inside a target, which means in a customised build, overriding the target or excluding that particular logic cause path issues.\r\n\r\nRelated issue SDK side: dotnet/sdk#10730\r\n\r\nFix/Solution: Move the logic out of the target and place it where `NuSpecOutputPath` property is.\r\n\r\nBreaks anything: N/A (investigate further by opening a PR)\r\n\r\n[ref-lines]: https://github.com/NuGet/NuGet.Client/blob/64f2febf7d1de8b0228eca5afed97a96c5a30bba/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L149-L152"},{"Id":"11640507872","Type":"IssuesEvent","CreatedAt":"2020-02-28T23:06:43","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9233","RelatedDescription":"Opened issue \"document valid-authentication-types better\" (#9233) at NuGet/Home","RelatedBody":"from PR comment:\r\nhttps://github.com/NuGet/NuGet.Client/pull/3253#discussion_r382891553\r\n\r\nWhat are all the available authentication types? Should we give a quick synopsis on what basic and negotiate means? Are there additional docs on these types that we can link? I would recommend wrapping the example in a code block: basic,negotiate"},{"Id":"11639815860","Type":"IssuesEvent","CreatedAt":"2020-02-28T21:17:12","Actor":"dfederm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9232","RelatedDescription":"Opened issue \"New EnableCentralPackageVersions property breaks Microsoft.Build.CentralPackageVersions\" (#9232) at NuGet/Home","RelatedBody":"This change: https://github.com/NuGet/NuGet.Client/commit/08ded6ff38ec67e25c094d28e77cb23c15ee674b#diff-3b0018f61173d0adf1ba163a23821381 is causing incompatibility with [Microsoft.Build.CentralPackageVersions](https://github.com/microsoft/MSBuildSdks/tree/master/src/CentralPackageVersions). Both use the `$(EnableCentralPackageVersions)` property and so conflict.\r\n\r\nSpecifically, this line in NuGet.targets:\r\n```xml\r\n    <EnableCentralPackageVersions Condition=\"'$(EnableCentralPackageVersions)' == ''\">false</EnableCentralPackageVersions>\r\n```\r\n\r\nThis disables the feature in the `Microsoft.Build.CentralPackageVersions` SDK."},{"Id":"11639284137","Type":"IssuesEvent","CreatedAt":"2020-02-28T20:02:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9231","RelatedDescription":"Opened issue \"The pack targets should have PackageOutputPath default to OutputPath\" (#9231) at NuGet/Home","RelatedBody":"In sdk based projects it's already done in the default framework properties.\r\nIn legacy package reference projects, the customer is required to set PackageOutputPath.\r\n\r\nrelated"},{"Id":"11639053641","Type":"IssuesEvent","CreatedAt":"2020-02-28T19:31:28","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9230","RelatedDescription":"Opened issue \"Review all nuget team packages on nuget.org -  deprecate, etc...\" (#9230) at NuGet/Home","RelatedBody":"Now that we have deprecation feature...could go through all packages and clean them up a bit."},{"Id":"11636157814","Type":"IssuesEvent","CreatedAt":"2020-02-28T13:58:59","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9229","RelatedDescription":"Opened issue \"[Test Failure] Restore should be fail with an error after running “dotnet restore --use-lock-file --locked-mode” with an empty or malformed lock file\" (#9229) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Release-5.5.x\\5.6.0.6473\r\nVS Version: D16.5\\29827.131\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tCreate a Console Application (.NET Core) template in VS and close the solution.\r\n2.\tCreate an empty or malformed packages.lock.json file next to the .csproj file. \r\n3.\tRun “dotnet restore --use-lock-file --locked-mode”.\r\n## Expected\r\nVerify the process should fail with an error saying the lock file is incorrect.\r\n## Actual\r\nThe restore completed without any error as below.\r\n![image](https://user-images.githubusercontent.com/20632625/75553891-3fb8c000-5a74-11ea-9140-2143e6231175.png)\r\n## Note\r\n1. It didn't repro on NuGet Client Release-5.5.x\\5.5.0.6464, so it start from Release-5.5.x\\5.6.0.6473.\r\n2. It didn't repro on Master\\29826.166+NuGet Client Dev\\5.6.0.6478.\r\n3. The bug [8640](https://github.com/NuGet/Home/issues/8640) is fixed on this build.\r\n"},{"Id":"11631609903","Type":"IssuesEvent","CreatedAt":"2020-02-28T01:58:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5320","RelatedDescription":"Closed issue \"Package.config project fails to restore if parent directory has directory.build.props with packageref\" (#5320) at NuGet/Home","RelatedBody":"In VS 2017, I have a solution with SDK style projects and an MVC 4.6 project with `packages.config`. If I add a `directory.build.props` file to the parent directory that contains a packageref, restore is incorrect in the mvc/packages.config project.\r\n\r\nI would not expect `directory.build.props` to apply to non-SDK project types.\r\n\r\nThis happens with 15.2 and 15.3 preview 1"},{"Id":"11631575497","Type":"IssuesEvent","CreatedAt":"2020-02-28T01:51:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7917","RelatedDescription":"Closed issue \"Add extensibility point in NuGet.targets to control if Restore should even run\" (#7917) at NuGet/Home","RelatedBody":"No-op PackageReference-style restore performance is not great today for restores of hundred or thousands of projects, and as @nkolev92 has already investigated, there isn't any low hanging fruit to significantly improve it.\r\n\r\nAs such, repos with many projects may want additional control over if restore even executes, based on their individual setup. For example, consider a large repo that uses traversal projects (dirs.proj), CentralPackageVersions (Packages.props) and uses exact package versions. As long as a restore of the root dirs.proj project has already succeeded, and packages.props does not change, once the entire repo has been restored there is no need to even execute Restore on the projects on the next 'dotnet build'.\r\n\r\nIf NuGet.targets had an extensibility point to run the Restore task conditionally, it would be possible for a build environment to add custom targets to greatly speed up unnecessary restores. e.g. in the above case they could implement a target which used a '.nugetverify' file or similar to compare against packages.props.\r\n\r\nToday, NuGet.targets has no such extensibility, which means that the only solution is to override and reimplement the Restore target entirely, copying the internals of NuGet.targets. This is obviously non-ideal."},{"Id":"11631531043","Type":"IssuesEvent","CreatedAt":"2020-02-28T01:41:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6298","RelatedDescription":"Closed issue \"Should we be enforcing 1 package type per package\" (#6298) at NuGet/Home","RelatedBody":"Motivated by https://github.com/NuGet/Home/wiki/Global-Tools---NuGet-Implementation/\r\n\r\n\r\n@rrelyea  thinks that we should have already been enforcing 1 package type per package, but currently that's allowed by both specification and the implementation of Pack. \r\n\r\nUpdate:\r\n\r\nPack doesn't validate. \r\nInstall through PM UI validates. \r\nAdding in the package reference manually and restoring doesn't validate. \r\n\r\nThis would be a breaking change. "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-29T05:30:44.5505933Z","RunDurationInMilliseconds":1996}