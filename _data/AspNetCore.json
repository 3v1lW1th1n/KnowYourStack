{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core updates in .NET Core 3.0 Preview 5","PublishedOn":"2019-05-06T16:00:58+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"ASP.NET Core updates in .NET Core 3.0 Preview 5\n.NET Core 3.0 Preview 5 is now available. This iteration was brief for the team and primarily includes bug fixes and improvements to the more...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-0-preview-5/","RawContent":null},{"Title":"Azure SignalR Service now supports ASP.NET!","PublishedOn":"2019-04-27T00:30:04+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We’ve just shipped the official version of the SignalR Service SDK with ASP.NET support:\nMicrosoft.Azure.SignalR.AspNet v1.0.0 \nAzure SignalR Service is a fully managed Azure service for real-time...","Href":"https://devblogs.microsoft.com/aspnet/azure-signalr-service-now-supports-asp-net/","RawContent":null},{"Title":"ASP.NET Core updates in .NET Core 3.0 Preview 4","PublishedOn":"2019-04-18T22:10:18+00:00","CommentsCount":23,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 4 is now available and it includes a bunch of new updates to ASP.NET Core.\nHere&#8217;s the list of what&#8217;s new in this preview:\nRazor Components renamed back to server-side...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-0-preview-4/","RawContent":null},{"Title":"Blazor now in official preview!","PublishedOn":"2019-04-18T22:06:21+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"With this newest Blazor release we&#8217;re pleased to announce that Blazor is now in official preview! Blazor is no longer experimental and we are committing to ship it as a supported web UI...","Href":"https://devblogs.microsoft.com/aspnet/blazor-now-in-official-preview/","RawContent":null},{"Title":"Updated Razor support in Visual Studio Code, now with Blazor support","PublishedOn":"2019-04-18T22:02:12+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today we are pleased to announce improved Razor tooling support in Visual Studio Code with the latest C# extension. This latest release includes improved Razor diagnostics and support for tag helpers...","Href":"https://devblogs.microsoft.com/aspnet/updated-razor-support-in-visual-studio-code-now-with-blazor-support/","RawContent":null},{"Title":".NET Core Workers in Azure Container Instances","PublishedOn":"2019-04-15T17:00:41+00:00","CommentsCount":14,"FacebookCount":0,"Summary":".NET Core Workers in Azure Container Instances\nIn .NET Core 3.0 we are introducing a new type of application template called Worker Service. This template is intended to give you a starting point for...","Href":"https://devblogs.microsoft.com/aspnet/dotnet-core-workers-in-azure-container-instances/","RawContent":null},{"Title":"Web and Azure Tool Updates in Visual Studio 2019","PublishedOn":"2019-04-05T17:31:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hopefully by now you’ve seen that Visual Studio 2019 is now generally available. As you would expect, we’ve added improvements for web and Azure development. As a starting point, Visual Studio 2019...","Href":"https://devblogs.microsoft.com/aspnet/web-and-azure-tool-updates-in-visual-studio-2019/","RawContent":null},{"Title":".NET Core Workers as Windows Services","PublishedOn":"2019-03-29T18:39:51+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"In .NET Core 3.0 we are introducing a new type of application template called Worker Service. This template is intended to give you a starting point for writing long running services in .NET Core. In...","Href":"https://devblogs.microsoft.com/aspnet/net-core-workers-as-windows-services/","RawContent":null},{"Title":"Re-reading ASP.Net Core request bodies with EnableBuffering()","PublishedOn":"2019-03-27T20:51:50+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"In some scenarios there&#8217;s a need to read the request body multiple times. Some examples include\nLogging the raw requests to replay in load test environment\nMiddleware that read the request body...","Href":"https://devblogs.microsoft.com/aspnet/re-reading-asp-net-core-request-bodies-with-enablebuffering/","RawContent":null},{"Title":"Blazor 0.9.0 experimental release now available","PublishedOn":"2019-03-08T00:47:04+00:00","CommentsCount":35,"FacebookCount":0,"Summary":"Blazor 0.9.0 is now available! This release updates Blazor with the Razor Components improvements in .NET Core 3.0 Preview 3.\nNew Razor Component improvements now available to Blazor apps:\nImproved...","Href":"https://devblogs.microsoft.com/aspnet/blazor-0-9-0-experimental-release-now-available/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"449601718","IsPullRequest":false,"CreatedAt":"2019-05-29T05:14:05","Actor":"pandiyaraj678","Number":"10602","RawContent":null,"Title":"Blazor - How to read .json file in client side synchronous way or have any callback function for Http.GetJsonAsync method","State":"open","Body":"In blazor client side application, can read and data from json file async way.\r\n\r\n```\r\nprotected override async Task OnInitAsync()\r\n{\r\n        DBModel data = await Http.GetJsonAsync<DBModel>(\"sample-data/data.json\");\r\n}\r\n```\r\n\r\nBut i want to do it in synchronous approach, because i need to do route the page after data fetch completed.  I have tried like this below code\r\n\r\n```\r\nprotected override void OnInit()\r\n{\r\n        DBModel data = Http.GetJsonAsync<DBModel>(\"sample-data/data.json\");\r\n        UriHelper.NavigateTo('Dashboard');\r\n}\r\n```\r\n\r\nGetting below error message\r\n\r\nError CS0029 - Cannot implicitly convert type System.Threading.Tasks.Task<Application1.Models.DBModel>' to 'Application1.Models.DBModel'\r\n\r\nOr advice how to route a page after data fetch got success. Is any callback handler available for achieve my case?\r\n\r\nThanks in advance.","Url":"https://github.com/aspnet/AspNetCore/issues/10602","RelatedDescription":"Open issue \"Blazor - How to read .json file in client side synchronous way or have any callback function for Http.GetJsonAsync method\" (#10602)"},{"Id":"449580228","IsPullRequest":false,"CreatedAt":"2019-05-29T03:27:48","Actor":"InJoins","Number":"10601","RawContent":null,"Title":"Websocket with ssl is 20x times slower(AspNetCore v2.2.3)!!!","State":"open","Body":"**Simple WebSocket with Ssl Echo Benchmark**\r\n[client connent->client send hello->server accept->server echo hello->client close]\r\n\r\nServer side:\r\nOS: CentOS 7(machine one 8 core)\r\nAspNetCore 2.2.3\r\n\r\nClient side:\r\nOS: CentOS 7(machine two 8 core)\r\nNodeJS 10.x + uws\r\n\r\nWebSocket Without SSL(times/s):\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      websocket:16309.7073336279\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      websocket:18035.4160476983\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      websocket:17010.0340489852\r\n\r\nWebSocket With SSL(times/s):\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      websocket:898.336116414732\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      websocket:890.811881959178\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      websocket:899.325662204722\r\n\r\n**SSL version is 20x times slower!**\r\n\r\nBTW: If just do benchmark between HTTP and HTTPS, everything is ok!\r\n\r\n**Simple Http with Ssl Echo Benchmark**\r\n[client request->server reponse hello]\r\n\r\nServer side:\r\nOS: CentOS 7(machine one 8 core)\r\nAspNetCore 2.2.3\r\n\r\nClient side:\r\nOS: CentOS 7(machine two 8 core)\r\n./wrk -t15 -c2000 -d9999s \"http://10.0.0.10:5555\"\r\n./wrk -t15 -c2000 -d9999s \"https://10.0.0.10:6666\"\r\n\r\nHttp Without SSL(times/s):\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      http:283974.449964514\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      http:276753.890770627\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      http:281591.395427413\r\n\r\nHttps With SSL(times/s):\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      http:164822.94140233\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      http:158194.807413641\r\nwarn: WebSocketEcho.EchoMiddleware[0]\r\n      http:156951.622801304\r\n\r\nHttp request with SSL version seems ok","Url":"https://github.com/aspnet/AspNetCore/issues/10601","RelatedDescription":"Open issue \"Websocket with ssl is 20x times slower(AspNetCore v2.2.3)!!!\" (#10601)"},{"Id":"449557190","IsPullRequest":true,"CreatedAt":"2019-05-29T01:34:52","Actor":"natemcmaster","Number":"10600","RawContent":null,"Title":"React to breaking change in dotnet/arcade#2753","State":"open","Body":"cc @davidfowl ","Url":"https://github.com/aspnet/AspNetCore/pull/10600","RelatedDescription":"Open PR \"React to breaking change in dotnet/arcade#2753\" (#10600)"},{"Id":"449549775","IsPullRequest":false,"CreatedAt":"2019-05-29T00:55:45","Actor":"natemcmaster","Number":"10599","RawContent":null,"Title":"Update dotnet-sql-cache to use Microsoft.Data.SqlClient","State":"open","Body":"Follow up to https://github.com/aspnet/AspNetCore/issues/10013\r\n\r\ndotnet-sql-cache uses System.Data.SqlClient. If there is sufficient interest, we could update it to use the new client, Microsoft.Data.SqlClient. The impact of this on consumers should be negligible because this package is a console tool and which version of the client should be hidden from the user.","Url":"https://github.com/aspnet/AspNetCore/issues/10599","RelatedDescription":"Open issue \"Update dotnet-sql-cache to use Microsoft.Data.SqlClient\" (#10599)"},{"Id":"449281324","IsPullRequest":false,"CreatedAt":"2019-05-29T00:54:48","Actor":"mariocatch","Number":"10582","RawContent":null,"Title":"JWT + SignalR on ASP Core 3 Authentication Failing","State":"closed","Body":"\r\nFull source here: https://github.com/mariocatch/ChatApp/tree/26_add_jwt\r\n\r\nIf I use http calls outside of signalr, such as with postman or httpclient, I am able to have my token validated successfully on the server. It's when I try to connect through my signalr hub that the token is not passing authorization.\r\n\r\n>Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: Bearer MyTokenFooBar\r\n\r\nMy service setup is:\r\n\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services.AddRouting();\r\n        services.AddControllers();\r\n        services.AddHealthChecks();\r\n        services.AddDbContext<ApplicationDbContext>(options => options.UseSqlServer(builder => { builder.ConnectionString = _configuration.GetConnectionString(\"DefaultConnection\"); }));\r\n        services.AddIdentity<ApplicationUser, IdentityRole>(setup =>\r\n        {\r\n            // foo\r\n        }).AddEntityFrameworkStores<ApplicationDbContext>().AddDefaultTokenProviders();\r\n\r\n        services.AddAuthentication(options =>\r\n            {\r\n                options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n            })\r\n            .AddJwtBearer(options =>\r\n            {\r\n                options.RequireHttpsMetadata = false;\r\n                options.SaveToken = true;\r\n                options.TokenValidationParameters = new TokenValidationParameters\r\n                {\r\n                    ValidIssuer = _configuration[\"Jwt:Issuer\"],\r\n                    ValidAudience = _configuration[\"Jwt:Audience\"],\r\n                    ValidateIssuer = false,\r\n                    ValidateAudience = false,\r\n                    ValidateIssuerSigningKey = false,\r\n                    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[\"Jwt:Key\"])),\r\n                    ValidateLifetime = false\r\n                };\r\n\r\n                options.Events = new JwtBearerEvents\r\n                {\r\n                    OnMessageReceived = context =>\r\n                    {\r\n                        var path = context.HttpContext.Request.Path;\r\n                        if (!path.StartsWithSegments(\"/chat\")) return Task.CompletedTask;\r\n                        var accessToken = context.Request.Headers[HeaderNames.Authorization];\r\n                        if (!string.IsNullOrWhiteSpace(accessToken) && context.Scheme.Name == JwtBearerDefaults.AuthenticationScheme)\r\n                        {\r\n                            context.Token = accessToken;\r\n                        }\r\n\r\n                        return Task.CompletedTask;\r\n                    }\r\n                };\r\n            });\r\n\r\n        services.AddAuthorization();\r\n\r\n        services.AddSignalR(options => { options.EnableDetailedErrors = true; });\r\n    }\r\n\r\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n    {\r\n        app.UseRouting();\r\n        app.UseAuthentication();\r\n        app.UseAuthorization();\r\n        app.UseEndpoints(options =>\r\n        {\r\n            options.MapHealthChecks(\"/health\");\r\n            options.MapControllerRoute(\"default\", \"{controller=Home}/{action=Index}/{id?}\");\r\n        });\r\n        app.UseSignalR(options => { options.MapHub<ChatHub>(\"/chat\"); });\r\n    }\r\n\r\nI use a basic http auth header for the initial connection, which will sign the user into identity and generate a jwt token as a response for use in future calls.\r\n\r\n    [HttpPost]\r\n    [AllowAnonymous]\r\n    public async Task<IActionResult> Login()\r\n    {\r\n        var (headerUserName, headerPassword) = GetAuthLoginInformation(HttpContext);\r\n    \r\n        var signInResult = await _signInManager.PasswordSignInAsync(headerUserName, headerPassword, false, false);\r\n        if (!signInResult.Succeeded)\r\n        {\r\n            return Unauthorized();\r\n        }\r\n    \r\n        var signingKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\"SuperTopSecretKeyThatYouDoNotGiveOutEver!\"));\r\n        var signingCredentials = new SigningCredentials(signingKey, SecurityAlgorithms.HmacSha256);\r\n        var jwt = new JwtSecurityToken(signingCredentials: signingCredentials);\r\n        var handler = new JwtSecurityTokenHandler();\r\n        var token = handler.WriteToken(jwt);\r\n        return new OkObjectResult(token);\r\n    }\r\n\r\nAnd my client (a console application) is setup to cache this token and use it in future signalr calls as such:\r\n\r\nGet the token:\r\n\r\n    _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(encoding.GetBytes($\"{userName}:{password}\")));\r\n    var response = await _client.SendAsync(request); // this goes to the login action posted above\r\n    _token = await response.Content.ReadAsStringAsync();\r\n\r\n...\r\n\r\n    _hubConnection = new HubConnectionBuilder()\r\n        .WithUrl(new Uri(_baseAddress, \"chat\"),\r\n            options => { options.AccessTokenProvider = () => Task.FromResult(_token); }) // send the cached token back with every request\r\n        .Build();\r\n    \r\n    // here is where the error occurs. 401 unauthorized comes back from this call.\r\n    await _hubConnection.StartAsync();\r\n\r\nThe new `UseEndpoints(...)` lets you map hubs directly inside... but `app.UseSignalR(...)` requires configuration in order to be called. So since the configuration is actually being setup through `UseEndpoints(...)` now, does this mean we need `UseSignalR()` anymore? Should there be an empty overload of `UseSignalR()`? Should it be implicitly called for you if you map a hub through the `IEndpointRouteBuilder`?\r\n\r\nI'm currently on:\r\nC:\\Users\\mario>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23","Url":"https://github.com/aspnet/AspNetCore/issues/10582","RelatedDescription":"Closed issue \"JWT + SignalR on ASP Core 3 Authentication Failing\" (#10582)"},{"Id":"449517441","IsPullRequest":true,"CreatedAt":"2019-05-28T23:13:44","Actor":"alefranz","Number":"10598","RawContent":null,"Title":"HeaderPropagation middleware: small cleanup","State":"open","Body":"- Removed `MessageHandler` DI registration as not needed.\r\n- Fixed two parameters XML descriptions.\r\n- Cleaned up `using`s in the example.\r\n\r\n/cc @rynowak ","Url":"https://github.com/aspnet/AspNetCore/pull/10598","RelatedDescription":"Open PR \"HeaderPropagation middleware: small cleanup\" (#10598)"},{"Id":"449503815","IsPullRequest":false,"CreatedAt":"2019-05-28T22:22:40","Actor":"natemcmaster","Number":"10597","RawContent":null,"Title":"API Review 3.0","State":"open","Body":"Starting a brainstorming thread:\r\n\r\nWe need a better process for reviewing the way we make API changes. A group of managers and devs started reviewing 2.2 -> 3.0 changes today. It became clear that the volume of API changes is too large for a small group to handle, and that there will be many action items as a result of the API changes we made. I think it should be possible to do our API review process in the open on GitHub, but we need some tools and a workflow to do this well. \r\n\r\nHere are some open questions. I'd like to learn what other repos in .NET do before we implement something new.\r\n\r\n* How does an intentional break get \r\n\t* documented? \r\n\t* approved? \r\n\t* reviewed for impact?\r\n* How can we catch unintentional breaking changes in review?\r\n* How should we handle the review process for _new_ API?\r\n\r\ncc @anurse @Pilchie @mkArtakMSFT @davidfowl @rynowak @pranavkm ","Url":"https://github.com/aspnet/AspNetCore/issues/10597","RelatedDescription":"Open issue \"API Review 3.0\" (#10597)"},{"Id":"449502717","IsPullRequest":true,"CreatedAt":"2019-05-28T22:18:55","Actor":"dotnet-maestro[bot]","Number":"10596","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore-Tooling","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/aspnet/AspNetCore-Tooling\r\n- **Build**: 20190527.1\r\n- **Date Produced**: 5/28/2019 8:34 PM\r\n- **Commit**: deafac29c359a812827df766fe2accbb9f5b4f73\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor** -> 3.0.0-preview6.19277.1\r\n  - **Microsoft.CodeAnalysis.Razor** -> 3.0.0-preview6.19277.1\r\n  - **Microsoft.AspNetCore.Razor.Language** -> 3.0.0-preview6.19277.1\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions** -> 3.0.0-preview6.19277.1\r\n\r\n## From https://github.com/aspnet/AspNetCore-Tooling\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 10:26 PM\r\n- **Commit**: f2351c058547f7520ec9feceb86602edf5411394\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor** -> 3.0.0-preview6.19278.1\r\n  - **Microsoft.CodeAnalysis.Razor** -> 3.0.0-preview6.19278.1\r\n  - **Microsoft.AspNetCore.Razor.Language** -> 3.0.0-preview6.19278.1\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions** -> 3.0.0-preview6.19278.1\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.AspNetCore.Analyzer.Testing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.AspNetCore.BenchmarkRunner.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ActivatorUtilities.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.Memory** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.SqlServer** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.StackExchangeRedis** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.CommandLineUtils.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.AzureKeyVault** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Binder** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.CommandLine** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.EnvironmentVariables** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.FileExtensions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Ini** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Json** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.KeyPerFile** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.UserSecrets** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Xml** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DependencyInjection.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DependencyInjection** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DiagnosticAdapter** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Diagnostics.HealthChecks** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Composite** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Embedded** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Physical** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileSystemGlobbing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.HashCodeCombiner.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Hosting.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Hosting** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.HostFactoryResolver.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Http** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Localization.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Localization** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.AzureAppServices** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Configuration** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Console** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Debug** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.EventSource** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.EventLog** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.TraceSource** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Testing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ObjectPool** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Options.ConfigurationExtensions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Options.DataAnnotations** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Options** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ParameterDefaultValue.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Primitives** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.TypeNameHelper.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ValueStopwatch.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.WebEncoders** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Internal.Extensions.Refs** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.JSInterop** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Mono.WebAssembly.Interop** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.CSharp** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.ComponentModel.Annotations** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.IO.Pipelines** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Net.Http.WinHttpHandler** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Net.WebSockets.WebSocketProtocol** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Reflection.Metadata** -> 1.7.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Runtime.CompilerServices.Unsafe** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Cryptography.Pkcs** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.ServiceProcess.ServiceController** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Text.Encodings.Web** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Text.Json** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Threading.Channels** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Internal.AspNetCore.Analyzers** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.AspNetCore.Testing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n\r\n## From https://github.com/aspnet/AspNetCore-Tooling\r\n- **Build**: 20190528.3\r\n- **Date Produced**: 5/29/2019 1:14 AM\r\n- **Commit**: 06b9ae1accc07ddd9cff9a71aceff50bda17a36c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor** -> 3.0.0-preview6.19278.3\r\n  - **Microsoft.CodeAnalysis.Razor** -> 3.0.0-preview6.19278.3\r\n  - **Microsoft.AspNetCore.Razor.Language** -> 3.0.0-preview6.19278.3\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions** -> 3.0.0-preview6.19278.3\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.AspNetCore.Analyzer.Testing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.AspNetCore.BenchmarkRunner.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ActivatorUtilities.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.Memory** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.SqlServer** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Caching.StackExchangeRedis** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.CommandLineUtils.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.AzureKeyVault** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Binder** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.CommandLine** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.EnvironmentVariables** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.FileExtensions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Ini** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Json** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.KeyPerFile** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.UserSecrets** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration.Xml** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Configuration** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DependencyInjection.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DependencyInjection** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DiagnosticAdapter** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Diagnostics.HealthChecks** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Composite** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Embedded** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileProviders.Physical** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.FileSystemGlobbing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.HashCodeCombiner.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Hosting.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Hosting** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.HostFactoryResolver.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Http** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Localization.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Localization** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Abstractions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.AzureAppServices** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Configuration** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Console** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Debug** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.EventSource** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.EventLog** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.TraceSource** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Logging.Testing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ObjectPool** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Options.ConfigurationExtensions** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Options.DataAnnotations** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Options** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ParameterDefaultValue.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.Primitives** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.TypeNameHelper.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.ValueStopwatch.Sources** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.WebEncoders** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Internal.Extensions.Refs** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.JSInterop** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Mono.WebAssembly.Interop** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.CSharp** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.ComponentModel.Annotations** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.IO.Pipelines** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Net.Http.WinHttpHandler** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Net.WebSockets.WebSocketProtocol** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Reflection.Metadata** -> 1.7.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Runtime.CompilerServices.Unsafe** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Cryptography.Pkcs** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.ServiceProcess.ServiceController** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Text.Encodings.Web** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Text.Json** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **System.Threading.Channels** -> 4.6.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19274.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview6-27727-02 (parent: Microsoft.Extensions.Logging)\r\n- **Microsoft.Extensions.Logging** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Internal.AspNetCore.Analyzers** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n- **Microsoft.AspNetCore.Testing** -> 3.0.0-preview6.19278.1 (parent: Microsoft.CodeAnalysis.Razor)\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/10596","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore-Tooling\" (#10596)"},{"Id":"449493460","IsPullRequest":false,"CreatedAt":"2019-05-28T21:49:48","Actor":"anurse","Number":"10595","RawContent":null,"Title":"Make ConventionBasedStartup internal","State":"open","Body":"ConventionBasedStartup was made pubternal because it depends upon a pubternal type. We think this should actually just be made `internal` if possible.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/master/src/Hosting/Hosting/src/Startup/ConventionBasedStartup.cs\r\n\r\ncc @davidfowl @Tratcher ","Url":"https://github.com/aspnet/AspNetCore/issues/10595","RelatedDescription":"Open issue \"Make ConventionBasedStartup internal\" (#10595)"},{"Id":"449485830","IsPullRequest":false,"CreatedAt":"2019-05-28T21:27:45","Actor":"anurse","Number":"10594","RawContent":null,"Title":"Make pipe-related properties on Http abstractions non-abstract","State":"open","Body":"We shouldn't add `abstract` members to `HttpRequest`/`HttpResponse`/etc. unless we really really need it. It breaks creators of derived classes.\r\n\r\nWe should change the following `abstract` members to `virtual` and have them throw `NotImplementedException`:\r\n* `HttpRequest.BodyReader`\r\n* `HttpResponse.BodyWriter`\r\n* `HttpResponse.StartAsync`","Url":"https://github.com/aspnet/AspNetCore/issues/10594","RelatedDescription":"Open issue \"Make pipe-related properties on Http abstractions non-abstract\" (#10594)"},{"Id":"449431407","IsPullRequest":true,"CreatedAt":"2019-05-28T19:11:27","Actor":"natemcmaster","Number":"10593","RawContent":null,"Title":"Remove arch from filename for RPM for targeting pack","State":"open","Body":"Part of https://github.com/aspnet/AspNetCore/issues/8835\r\n\r\nTargeting packs are not CPU- or RID- specific. This updates the RPM to be consistent with .deb/.zip/.tar.gz, etc.","Url":"https://github.com/aspnet/AspNetCore/pull/10593","RelatedDescription":"Open PR \"Remove arch from filename for RPM for targeting pack\" (#10593)"},{"Id":"449429129","IsPullRequest":false,"CreatedAt":"2019-05-28T19:05:33","Actor":"sowsan","Number":"10592","RawContent":null,"Title":"Use ngrok for Blazor apps for testing","State":"open","Body":"Anyone been able to succesfully access a blazor app using ngrok ?\r\n\r\nI have created few helloworld samples , **http://localhost:51586/** \r\n\r\nused ngrok , **ngrok http 51586**\r\n\r\nGetting bad request , I believe there some special consideration needed with blazor?\r\n\r\n![image](https://user-images.githubusercontent.com/11544153/58505026-fab8d380-8159-11e9-8113-d98afbc51e32.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10592","RelatedDescription":"Open issue \"Use ngrok for Blazor apps for testing\" (#10592)"},{"Id":"449422555","IsPullRequest":true,"CreatedAt":"2019-05-28T18:48:57","Actor":"mkArtakMSFT","Number":"10591","RawContent":null,"Title":"Changing `@functions` block to `@code` block","State":"open","Body":"Addresses #10527","Url":"https://github.com/aspnet/AspNetCore/pull/10591","RelatedDescription":"Open PR \"Changing `@functions` block to `@code` block\" (#10591)"},{"Id":"449403636","IsPullRequest":true,"CreatedAt":"2019-05-28T18:02:08","Actor":"DylanDmitri","Number":"10590","RawContent":null,"Title":"Dylan/queue limit","State":"open","Body":" - middleware takes a \"queue limit\"\r\n - any requests over the limit are rejected","Url":"https://github.com/aspnet/AspNetCore/pull/10590","RelatedDescription":"Open PR \"Dylan/queue limit\" (#10590)"},{"Id":"449398152","IsPullRequest":true,"CreatedAt":"2019-05-28T17:48:48","Actor":"dotnet-maestro-bot","Number":"10589","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"open","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @34246760+mkArtakMSFT\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.2\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore HEAD:merge/release/2.2-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore HEAD:merge/release/2.2-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/AspNetCore merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore merge/release/2.2-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/AspNetCore merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore merge/release/2.2-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/10589","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#10589)"},{"Id":"449394623","IsPullRequest":false,"CreatedAt":"2019-05-28T17:39:43","Actor":"Quenty","Number":"10588","RawContent":null,"Title":"Support new contributors to this project by creating a \"Good first issue\" or \"Help wanted\" label.","State":"open","Body":"I'm trying to find out good ways to start contribute to AspNetCore but there are no issues that are marked as \"Good first issue\" or \"Help Wanted\". This makes it very difficult to find tasks to work on, and discourages outside developers from working on the project.\r\n\r\n**User story:** As a programmer, it's difficult to find ways to start contributing to AspNetCore projects.\r\n\r\n### Proposed solution: A new \"Good first issue\" label\r\nCreate a new label as per the [Github Guidelines](https://help.github.com/en/articles/helping-new-contributors-find-your-project-with-labels) to help new contributors find new issues that they can work on. \r\n\r\nThe label should either contain the words\r\n\r\n* Good first issue\r\n* Help wanted\r\n\r\nIn order to have GitHub pick up the label as something to promote. This is not necessary as part of this proposal, but it would be nice. \r\n\r\nAfter a preliminary search it seems no such label exists. If such a label does exist, please rename it. Of course, this also requires you to label good first time issues.\r\n\r\n#### Notes\r\n* You can learn more about this here: https://help.github.com/en/articles/helping-new-contributors-find-your-project-with-labels\r\n* Here's a Microsoft product that does this properly: https://github.com/OfficeDev/office-ui-fabric-react/issues\r\n* Can help with on-boarding new team members and interns too, by making it easy to pick tasks for them\r\n* GitHub will automatically promote the labels if named properly. It will look like this: \r\n\r\n![image](https://user-images.githubusercontent.com/1774409/58497975-eeb91b80-8131-11e9-9b9f-bd9403dc3510.png)\r\n\r\n\r\n\r\n### Alternatives\r\n\r\n#### Updating contributing guidelines\r\nAdditionally, updating the contributing guidelines to be more clear where users can start would be useful. Updating instructions for building would be good.\r\n\r\nI understand it's important that users start a dialog before starting any tasks. However, it's important to also on-board new contributors to the project. This label would be a good step in this direction. \r\n\r\n#### Participate in Google Summer of Code\r\nParticipating in [Google Summer of Code](https://summerofcode.withgoogle.com/) would also be a good idea. Not only would it get students interested in contributing, it would also get you good feedback about how open your project is to outside contributions. \r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10588","RelatedDescription":"Open issue \"Support new contributors to this project by creating a \"Good first issue\" or \"Help wanted\" label.\" (#10588)"},{"Id":"449184966","IsPullRequest":false,"CreatedAt":"2019-05-28T17:34:58","Actor":"kmuthukumar23","Number":"10577","RawContent":null,"Title":"How to read .json file in client-side blazor","State":"closed","Body":"### Describe the bug\r\nThanks in Advance;-). I am using CLDR data .json file for locale support in blazor cliet side. but it does not read the file. Is that any way to read the .json file in blazor client -side?\r\n\r\nCan any one please help on this.\r\n\r\n\r\n### Additional context\r\ni am using VS2019 preview version and .net core 3.0 preview 5.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10577","RelatedDescription":"Closed issue \"How to read .json file in client-side blazor\" (#10577)"},{"Id":"449390812","IsPullRequest":false,"CreatedAt":"2019-05-28T17:30:08","Actor":"chanan","Number":"10587","RawContent":null,"Title":"Blazor: The comments added to the html can ruin the markup with a pre tag","State":"open","Body":"### Describe the bug\r\nBlazor automatically adds markup to the final html in the form of empty comments `<!--!-->` this is usually not a problem. However, in the case of the `<pre />` tag it can be. When creating a component that encapsulates the `<pre />` tag in it, extra lines are added to the rendered output in the html.\r\n\r\n### To Reproduce\r\n1. Create a component that has a pre tag (and in my case which makes it worse a code tag)\r\n2. Render the ChildContent inside the pre (and code)\r\n3. Consider setting the background color of the pre tag to make the issue more visible\r\n4. You can also see this in action at: https://chanan.github.io/BlazorStyled/\r\n5. Editing the html in the browser dev tools, removing the extra `<!--!-->` tags fixes the output\r\n\r\n### Expected behavior\r\nI am not sure if this possible as I assume Blazor uses them for something, but removing those extra tags would be great\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/472554/58498693-cdf5c380-813b-11e9-9abe-df50d91017bc.png)\r\n\r\n### Additional context\r\n3.0.0-preview5\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10587","RelatedDescription":"Open issue \"Blazor: The comments added to the html can ruin the markup with a pre tag\" (#10587)"},{"Id":"449390778","IsPullRequest":true,"CreatedAt":"2019-05-28T17:30:03","Actor":"jkotalik","Number":"10586","RawContent":null,"Title":"Add inproc handler to shared framework","State":"open","Body":"The inproc handler wasn't being included in the shared framework. I _believe_ this will fix it, but will verify for sure.\r\n\r\nReported by CTI. Adding a check to make sure that CI always includes the native assets.","Url":"https://github.com/aspnet/AspNetCore/pull/10586","RelatedDescription":"Open PR \"Add inproc handler to shared framework\" (#10586)"},{"Id":"449201942","IsPullRequest":false,"CreatedAt":"2019-05-28T16:59:39","Actor":"detachmode","Number":"10580","RawContent":null,"Title":"Question - How to turn .razor page into a cs class (with rendertree builder instructions)","State":"closed","Body":"Could not find any hints in the docu, online or while digging through the source code, so I ask it here.\r\nWhich class is responsible for parsing the razor syntax and creating the cs class which ends with razor.g.cs. I would like to create something were it would be nice to trigger it manually without the need to build the whole project.","Url":"https://github.com/aspnet/AspNetCore/issues/10580","RelatedDescription":"Closed issue \"Question - How to turn .razor page into a cs class (with rendertree builder instructions)\" (#10580)"},{"Id":"449334334","IsPullRequest":false,"CreatedAt":"2019-05-28T15:25:05","Actor":"Gander7","Number":"10585","RawContent":null,"Title":"Cannot find bin/obj directory for blazor app.","State":"open","Body":"### Description\r\nCannot find bin directory for Blazor app.\r\nNeither 'C:/Users....BBGrid/bin/debug' nor 'C:/Users...BBGrid/bin/release' exists on disk.\r\n\r\n### To Reproduce\r\n1. Using `3.0.100-preview5-011568`\r\n2. `dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview5-19227-01` as per https://docs.microsoft.com/en-us/aspnet/core/blazor/get-started?view=aspnetcore-3.0&tabs=visual-studio\r\n3. `dotnet new blazor -o BBGrid`\r\n4. `cd BBGrid`\r\n5. `dotnet run`\r\n\r\n### Expected behavior\r\nProject to run\r\n\r\n### Screenshots\r\nbin/obj folders: https://i.gyazo.com/5b97ca49c9f5458e47f4b3a187824c8e.png\r\n`dotnet run` output: https://i.gyazo.com/86578b19107317796a7aaec3fc79c7b0.png\r\n`dotnet --info` output: https://i.gyazo.com/8853b0bf140c35b10e731980a465a447.png\r\nWorkaround folder structure: https://i.gyazo.com/db42ca0b333322ef7df9942fb6eacdf3.png\r\n\r\n### Additional context\r\nThere seems to be a manual workaround. Looking at the bin/obj folders, if I move the debug folder outside the MCD folder so it's direct parent is the bin and obj, it will run successfully.\r\nSee workaround folder structure in screenshots. Unfortunately this isn't feasible if I have to do this every time the project builds :(\r\n\r\n`dotnet build` does not solve issue :(\r\n\r\nPossible Duplicate of https://github.com/aspnet/Blazor/issues/487","Url":"https://github.com/aspnet/AspNetCore/issues/10585","RelatedDescription":"Open issue \"Cannot find bin/obj directory for blazor app.\" (#10585)"},{"Id":"449294028","IsPullRequest":false,"CreatedAt":"2019-05-28T14:12:56","Actor":"iantoalms","Number":"10584","RawContent":null,"Title":"ASP.Net Core 2.1 SPA templates have duplicate items in ClientApp directory in VS for Mac Solution Explorer","State":"open","Body":"### Describe the bug\r\n.Net Core 2.1 Angular, React.js and React.js & Redux SPA templates have duplicated items in the project lists in the Solution Explorer.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using latest version of .Net Core 2.1 e.g. 2.1.700\r\n2. run the dotnet new angular command\r\n3. Open the project with the latest VS4Mac 8.1 preview.\r\n4. Expand the project in the solution explorer to see the contents of the ClientApp folder.\r\n5. Notice that many of the .ts files are duplicated in the view.\r\n\r\n### Expected behavior\r\nThe .ts file entries in the solution explorer are not duplicated.\r\n\r\n### Screenshots\r\n![Screenshot 2019-05-28 at 15 04 20](https://user-images.githubusercontent.com/14179593/58484927-f6d98100-815a-11e9-9e86-a84fb957192b.png)\r\n\r\n### Additional context\r\nThis has already been fixed in the 2.2 and above templates with this change: https://github.com/aspnet/Templating/pull/560/files It seems that it never got back ported to 2.1.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10584","RelatedDescription":"Open issue \"ASP.Net Core 2.1 SPA templates have duplicate items in ClientApp directory in VS for Mac Solution Explorer\" (#10584)"},{"Id":"449288459","IsPullRequest":false,"CreatedAt":"2019-05-28T14:02:55","Actor":"mrjpeterj","Number":"10583","RawContent":null,"Title":"ResponseCaching returns no headers in 304 NotModified response","State":"open","Body":"### Describe the bug\r\nResponseCaching returns no headers in 304 NotModified response\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Setup a server that uses ResponseCaching\r\n2. Make a request that responds with a Last-Modified and Expires header and see that it gets put into the ResponseCache\r\n3. The Response will be a 200 with headers including Last-Modified, Expires, Cache-Control\r\n3. Make the same request again, but add the If-Modified-Since header with a value the same as the previously returned Last-Modified time\r\n4. The Response will be a 304 but it won't have any headers.\r\n\r\n### Expected behavior\r\nThe 304 response should contain a number of headers as specified in RFC 7232\r\n\r\nhttps://tools.ietf.org/html/rfc7232#section-4.1\r\n\r\n```\r\n   The server generating a 304 response MUST generate any of the\r\n   following header fields that would have been sent in a 200 (OK)\r\n   response to the same request: Cache-Control, Content-Location, Date,\r\n   ETag, Expires, and Vary.\r\n```\r\n\r\n### Additional context\r\n\r\nYou can see this quite clearly in https://github.com/aspnet/AspNetCore/blob/master/src/Middleware/ResponseCaching/src/ResponseCachingMiddleware.cs#L156\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10583","RelatedDescription":"Open issue \"ResponseCaching returns no headers in 304 NotModified response\" (#10583)"},{"Id":"449267835","IsPullRequest":false,"CreatedAt":"2019-05-28T13:24:47","Actor":"deepakmhr","Number":"10581","RawContent":null,"Title":"When adding custom identity stores, application is throwing StackOverflowException exception? ","State":"open","Body":"I'm working on a project where I want to separate out DbContext from identity but when registering custom stores then the application is throwing  StackOverflowException.\r\n\r\nHere are my custom stores:\r\n\r\n**UserStore:**\r\n```\r\n\r\npublic class UserStoreProvider : IUserStore<User>, IUserPasswordStore<User>\r\n    {         IUserService _userService; \r\n        public UserStoreProvider(IUserService userService)\r\n       {            _userService = userService;\r\n        }\r\n       public async Task<IdentityResult> CreateAsync(User user, CancellationToken cancellationToken)\r\n       {\r\n            await _userService.CreateAsync(AutoMapper.Mapper.Map(user, new CommonModels.User.User()));\r\n\r\n             return IdentityResult.Success;\r\n        }\r\n \r\n         public Task<IdentityResult> DeleteAsync(User user, CancellationToken cancellationToken)\r\n         {\r\n             throw new NotImplementedException();\r\n         }\r\n        //Some implementation is not pasted here\r\n }\r\n\r\n```\r\n**RoleStore:**\r\n```\r\npublic class RoleStoreProvider : IRoleStore<Role>\r\n    {\r\n        public Task<IdentityResult> CreateAsync(Role role, CancellationToken cancellationToken)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n\r\n        public Task<IdentityResult> DeleteAsync(Role role, CancellationToken cancellationToken)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n\r\n        public void Dispose()\r\n        {\r\n            Dispose();\r\n        }\r\n\r\n        public Task<Role> FindByIdAsync(string roleId, CancellationToken cancellationToken)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n\r\n        public Task<Role> FindByNameAsync(string normalizedRoleName, CancellationToken cancellationToken)\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n     //Some implementation is not pasted here\r\n }\r\n```\r\n\r\nAnd service registration:\r\n```\r\n\r\n public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\r\n            services.Configure<CookiePolicyOptions>(options =>\r\n            {\r\n                // This lambda determines whether user consent for non-essential cookies is needed for a given request.\r\n                options.CheckConsentNeeded = context => true;\r\n                options.MinimumSameSitePolicy = SameSiteMode.None;\r\n            });\r\n\r\n            services.AddIdentity<User, Role>()\r\n              .AddRoles<Role>()\r\n              .AddUserStore<UserStoreProvider>()\r\n              .AddRoleStore<RoleStoreProvider>().AddDefaultUI();\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n        }\r\n```\r\n\r\nAfter running the application, trying to access pages but the app is abruptly shutting down  and throwing StackOverflowException\r\n\r\n![image](https://user-images.githubusercontent.com/6562535/58481394-e84e9200-8179-11e9-9c31-f13f0c79c268.png)\r\n\r\nOther details:\r\nRunning with Dotnet core 2.2\r\nVisual Studio 2019\r\n\r\nAny idea?\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10581","RelatedDescription":"Open issue \"When adding custom identity stores, application is throwing StackOverflowException exception? \" (#10581)"},{"Id":"449191486","IsPullRequest":false,"CreatedAt":"2019-05-28T10:31:34","Actor":"kmuthukumar23","Number":"10579","RawContent":null,"Title":"Why is client-side Blazor using .NET Standard 2.0 and how to use .NET Core 3.0 with Blazor?","State":"open","Body":"### Describe the bug\r\nhow can i use <TargetFramework>netcoreapp3.0</TargetFramework> in client-side blazor. For mine Client side contains the <TargetFramework>netstandard2.0</TargetFramework>. I changed this in to netcoreapp3.0. but it throws the errors.\r\n\r\nCan any one help on this?\r\n\r\n### Additional context\r\nI am using VS2019 preview version and netcore 3.0 preview5\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10579","RelatedDescription":"Open issue \"Why is client-side Blazor using .NET Standard 2.0 and how to use .NET Core 3.0 with Blazor?\" (#10579)"},{"Id":"449187397","IsPullRequest":false,"CreatedAt":"2019-05-28T10:22:07","Actor":"vova-lantsov-dev","Number":"10578","RawContent":null,"Title":"Blazor app doesn't load after upgrade to 3.0-preview4/preview5","State":"open","Body":"I have latest extension installed from [here](https://github.com/aspnet/Blazor/releases/tag/3.0.0-preview4). Also VS 2019 16.2.0 Preview 1.0 installed. Code migrated from 0.7.0 using official migration guide.\r\n\r\nMy app can't load. Only router exists inside `<app>`.\r\n![image](https://user-images.githubusercontent.com/45858087/58470373-39469200-814a-11e9-85dc-d84fa360096b.png)\r\n\r\nNothing useful in console\r\n![image](https://user-images.githubusercontent.com/45858087/58470445-67c46d00-814a-11e9-83c0-5f58c0e66d13.png)\r\n\r\nDebugging gives me no information at all\r\n![image](https://user-images.githubusercontent.com/45858087/58470546-93dfee00-814a-11e9-9a31-aff3a9fe038d.png)\r\n\r\nMy project is available [here](https://github.com/vova-lantsov-dev/bookkeeping-blazor/tree/feature-blazor-3.0.0-preview4) (branch called feature-blazor-3.0.0-preview4)\r\n\r\nPlease help me determine what goes wrong. I added some logging inside OnInit(Async) methods of my pages, but they're never called. I tried to play with Startup file of Server project, but nothing changed.\r\n\r\n**dotnet --info output:**\r\n```\r\nПакет SDK для .NET Core (отражающий любой global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nСреда выполнения:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/10578","RelatedDescription":"Open issue \"Blazor app doesn't load after upgrade to 3.0-preview4/preview5\" (#10578)"},{"Id":"449181030","IsPullRequest":false,"CreatedAt":"2019-05-28T10:08:01","Actor":"stephenlautier","Number":"10576","RawContent":null,"Title":"SignalR Client C# - Custom Auth Scheme","State":"open","Body":"### Is your feature request related to a problem? Please describe.\r\nI'm trying to override the Authorization scheme for C# SignalR Client e.g. not `Bearer`, however its doesn't seems possible as it seems to be hardcoded in https://github.com/aspnet/AspNetCore/blob/master/src/SignalR/clients/csharp/Http.Connections.Client/src/Internal/WebSocketsTransport.cs#L116\r\n\r\n### Describe the solution you'd like\r\nAbility to override the auth shceme, such as \r\n\r\n```cs\r\nnew HubConnectionBuilder()\r\n\t.WithUrl(url, opts =>\r\n\t{\r\n\t\topts.AuthScheme = \"Secret\";\r\n\t\topts.AccessTokenProvider = () => Task.FromResult(\"XXX\");\r\n\t})\r\n```\r\n\r\n### Describe alternatives you've considered\r\nAnother option would be to pass the auth scheme in the `AccessTokenProvider` itself but might be breaking depends on how it's handled\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10576","RelatedDescription":"Open issue \"SignalR Client C# - Custom Auth Scheme\" (#10576)"},{"Id":"449160820","IsPullRequest":false,"CreatedAt":"2019-05-28T09:27:31","Actor":"dimkname","Number":"10575","RawContent":null,"Title":"Java SignalR client clears authorization header after reconnect","State":"open","Body":"Hello. \r\nMy signalr hubs uses authentication based on Authorization header value.\r\nFor some reasons I am not using bearer token authentication scheme, so I cant use HttpHubConnectionBuilder.withAccessTokenProvider() method for authentication. \r\nInstead of this I use something like HubConnectionBuilder.create(\"https...\").withHeader(\"Authorization\", \"somestring\")\r\n\r\nWhen disconnect occurred I am trying to perform reconnect to the server:\r\n\r\n    connection = HubConnectionBuilder.create(\"...\")\r\n        .shouldSkipNegotiate(true)\r\n        .withHeader(\"Authorization\", \"...\")\r\n        .build()\r\n\r\n    connection.onClosed {\r\n        connect()\r\n    }\r\n    ...\r\n    fun connect(){\r\n        connection.start()\r\n    }\r\n\r\nAfter reconnect server cant authenticate this client because of empty Authorization header.\r\nIt looks like issue in [https://github.com/aspnet/AspNetCore/blob/master/src/SignalR/clients/java/signalr/src/main/java/com/microsoft/signalr/HubConnection.java#L496](HubConnection.java#L496)\r\nI think that there should be check about token source and clearing authorization header only if its value was populated via access token provider\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10575","RelatedDescription":"Open issue \"Java SignalR client clears authorization header after reconnect\" (#10575)"},{"Id":"449145732","IsPullRequest":false,"CreatedAt":"2019-05-28T08:56:18","Actor":"weitzhandler","Number":"10574","RawContent":null,"Title":"Request: allow dependency injection in RouteConstraints and IRouter","State":"open","Body":"Hi,\r\n\r\n### Problem\r\nCurrently, the registration of `IRoute` and `IRouteConstraint` implementations is not adapted for dependency injection. In order to add implementations of those, one needs to explicitly initialize them.\r\nMy request is that you allow registering them so that they are resolved by the container when required.\r\n\r\nFor instance, I'm working on a multi-tenant app, and I want to make sure tenant exists before we're routing to controller etc. There is a catalog database containing the tenant info, and I'd want to break the routing if the tenant doesn't exist in the catalog DB.\r\n\r\n### Solution\r\nMy request is that allow 'registering' `IRouteContraint`s implementations so that they are resolved by the DI container, instead of registering their type in the dictionary.\r\nFor example:\r\n\r\n```c#\r\n// Startup.cs\r\npublic void ConfigureServices(IServiceCollection services)\r\n{     \r\n      services.Configure<RouteOptions>(options => {\r\n        // suggested:\r\n        options.ConstraintMap.Register<SubdomainConstraint>();\r\n      });\r\n}\r\n\r\n// SubdomainConstraint.cs\r\n\r\npublic class SubdomainConstraint : IRouteConstraint\r\n  {\r\n    // this provider uses the CatalogDbContext to check if tenant exists\r\n    readonly ITenantProvider _TenantProvider;\r\n\r\n    public SubdomainConstraint(ITenantProvider tenantProvider)\r\n    {\r\n      _TenantProvider = tenantProvider;\r\n    }\r\n\r\n    public bool Match(HttpContext httpContext, IRouter route, string routeKey,\r\n         RouteValueDictionary values, RouteDirection routeDirection)\r\n    {\r\n      return _TenantProvider.Tenant != null;\r\n    }\r\n}\r\n```\r\n\r\nThe same applies to `IRouter`:\r\n\r\n```c#\r\n// Startup.cs\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{     \r\n    app.UseMvc(routes =>\r\n    {\r\n        routes.Routes.Register<SubdomainRouter>();\r\n    });\r\n}\r\n\r\n// SubdomainRouter.cs\r\n\r\npublic class SubdomainRouter : IRouter\r\n{\r\n  readonly IRouter _DefaultRouter;\r\n  readonly ITenantProvider _TenantProvider;\r\n\r\n  public SubdomainRouter(IRouter defaultRouter, ITenantProvider tenantProvider)\r\n  {\r\n    _DefaultRouter = defaultRouter;\r\n    _TenantProvider = tenantProvider;\r\n  }\r\n\r\n  public VirtualPathData GetVirtualPath(VirtualPathContext context) => \r\n      _DefaultRouter.GetVirtualPath(context);\r\n\r\n  public Task RouteAsync(RouteContext context)\r\n  {\r\n    if (_TenantProvider.Tenant == null)\r\n      context.HttpContext.Response.StatusCode = (int)HttpStatusCode.BadRequest;\r\n\r\n    return _DefaultRouter.RouteAsync(context);\r\n  }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10574","RelatedDescription":"Open issue \"Request: allow dependency injection in RouteConstraints and IRouter\" (#10574)"},{"Id":"449142072","IsPullRequest":false,"CreatedAt":"2019-05-28T08:49:02","Actor":"jimmymasaru","Number":"10573","RawContent":null,"Title":"StringHtmlContent omitting characters when encoding","State":"open","Body":"### Describe the bug\r\nWhen a `StringHtmlContent` writes a string containing a surrogate pair, it omits the immediate following single non-supplementary character.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 2.2.5\r\n2. Run this code\r\n```\r\n    var tearsOfJoy2 = new StringHtmlContent(\"😂2\");\r\n    using (var stringWriter = new StringWriter())\r\n    {\r\n        tearsOfJoy2.WriteTo((TextWriter) stringWriter, HtmlEncoder.Default);\r\n        var encoded = stringWriter.ToString();\r\n    }\r\n```\r\n\r\n### Expected behaviour\r\n`encoded == \"&#x1F602;2\"`\r\n\r\n### Actual behaviour\r\n`encoded == \"&#x1F602;\"`\r\n\r\n### Additional context\r\nI have a feeling that the issue is within `System.Text.Encodings.Web.TextEncoder`.\r\nIf the the emoji is followed by 2 characters, like `new StringHtmlContent(\"😂22\")`, it seems to be working correctly.\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/10573","RelatedDescription":"Open issue \"StringHtmlContent omitting characters when encoding\" (#10573)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"Rightio-Limited","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"257171895","IsPullRequest":false,"CreatedAt":"2018-06-25T20:46:49","Actor":"shirhatti","Number":"1057","RawContent":null,"Title":"Support for multi-line string values","State":"closed","Body":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_","Url":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Closed issue \"Support for multi-line string values\" (#1057)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"268293817","IsPullRequest":false,"CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Number":"1060","RawContent":null,"Title":"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. ","State":"closed","Body":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"},{"Id":"273873058","IsPullRequest":true,"CreatedAt":"2017-11-14T17:26:42","Actor":"cartermp","Number":"1061","RawContent":null,"Title":"Create migrate-sql-server.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1061","RelatedDescription":"Closed or merged PR \"Create migrate-sql-server.md\" (#1061)"},{"Id":"258233429","IsPullRequest":false,"CreatedAt":"2017-09-16T14:09:00","Actor":"ctopher31","Number":"1059","RawContent":null,"Title":"Turn off file nesting in Visual Studio 2017","State":"closed","Body":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n","Url":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059)"},{"Id":"257312054","IsPullRequest":false,"CreatedAt":"2017-09-14T00:50:29","Actor":"svallis","Number":"1058","RawContent":null,"Title":"Views in class libraries removed from embedded resources under certain circumstances","State":"closed","Body":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views.","Url":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058)"},{"Id":"254062749","IsPullRequest":false,"CreatedAt":"2017-08-31T04:38:52","Actor":"matthewDDennis","Number":"1056","RawContent":null,"Title":"Docker tools fail if multiple TFMs in project file","State":"closed","Body":"If you modify your projects to have multiple frameworks with the `<TargetFrameworks>` tag, then the Docker tools does not know which framework to use as there is no `<TargetFramework>` tag.\r\n\r\nAdding the `<TargetFramework>`netcoreapp1.1`<...>` fixes the problem in Visual Studio and all the frameworks build and can debug with Docker.\r\n\r\nHowever, if you try and build a framework other than the netcoreapp1.1 with the DotNet CLI, it fails as it, as the documentation states, will ignore the `<TargetFrameworks>` tag if the `<TargetFramework>` tag is present \r\n","Url":"https://github.com/aspnet/Tooling/issues/1056","RelatedDescription":"Closed issue \"Docker tools fail if multiple TFMs in project file\" (#1056)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"448250666","IsPullRequest":false,"CreatedAt":"2019-05-24T16:17:01","Actor":"Tratcher","Number":"360","RawContent":null,"Title":"Kestrel Request trailer headers moved to new collection","State":"open","Body":"In prior versions Kestrel would add HTTP/1.1 chunked trailer headers into the request headers collection when the request body was read to the end. This caused some concerns about ambiguity between headers and trailers so we decided to separate the trailers out to a new collection.\r\n\r\nHTTP/2 request trailers were unavailable in 2.2, but are now also available in this new collection in 3.0.0-preview6.\r\n\r\nNew [request extension methods](https://github.com/aspnet/AspNetCore/blob/3be11f6544485948ba17646ffa7b4242c2c5339a/src/Http/Http.Abstractions/src/Extensions/RequestTrailerExtensions.cs) have been added to access these trailers.\r\n\r\nHTTP/1.1 trailers are available once the entire request body has been read.\r\n\r\nHTTP/2 trailers are available as soon as they’re received from the client, but the client won’t send them until the entire request body has been at least buffered by the server.  You may need to read the request body to free up buffer space. Trailers will always be available if you read the request body to the end, as the trailers mark the end of the body.\r\n\r\nSee https://github.com/aspnet/AspNetCore/pull/10410 for the changes.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10519 for discussion.\r\n","Url":"https://github.com/aspnet/Announcements/issues/360","RelatedDescription":"Open issue \"Kestrel Request trailer headers moved to new collection\" (#360)"},{"Id":"444025246","IsPullRequest":false,"CreatedAt":"2019-05-14T17:00:32","Actor":"blowdart","Number":"359","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/10238\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.SignalR.Protocols.MessagePack | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4<br/>1.1.0 | 1.0.11<br/>1.1.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are also available separately as a NuGet package. If you are not using `Microsoft.AspNetCore.SignalR.Protocols.MessagePack` directly you may still be affected if you are using SignalR and the package is a transitive dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0892](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0982)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_\r\n","Url":"https://github.com/aspnet/Announcements/issues/359","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\" (#359)"},{"Id":"442525964","IsPullRequest":false,"CreatedAt":"2019-05-10T03:49:06","Actor":"anurse","Number":"358","RawContent":null,"Title":"TestServer no longer preserves ExecutionContext and AsyncLocals between client and server","State":"open","Body":"**Note: This change affects test code using [`TestServer`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.testhost.testserver?view=aspnetcore-2.2&viewFallbackFrom=aspnetcore-3.0) only.**\r\n\r\nStarting in ASP.NET Core 3.0 Preview 6, the [`ExecutionContext`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.executioncontext?view=netcore-3.0) will no longer be preserved when making HTTP requests to `TestServer`.\r\n\r\nAs a result of this change, the `ExecutionContext` in the _calling code_ will not be available to the _server code_. This means the following values which use `ExecutionContext` as their underlying storage will not be preserved when performing an HTTP request over `TestServer`:\r\n\r\n* [`Thread.CurrentCulture`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread.currentculture?view=netcore-3.0)\r\n* [`CultureInfo.CurrentCulture`](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.currentculture?view=netcore-3.0)\r\n* [`CultureInfo.CurrentUICulture`](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.currentuiculture?view=netcore-3.0)\r\n* [`Activity.Current`](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.activity.current?view=netcore-3.0)\r\n* [`Thread.CurrentPrincipal`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread.currentprincipal?view=netcore-3.0)\r\n* Other values which use [`AsyncLocal<T>`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.asynclocal-1?view=netframework-4.8) for storage.\r\n\r\nIf the previous behavior is required by your test code, you can restore it by setting the `PreserveExecutionContext` property on `TestServer` to `true`:\r\n\r\n```csharp\r\nvar server = new TestServer(webHostBuilder) \r\n{\r\n\tPreserveExecutionContext = true;\r\n};\r\n```\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10134 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/358","RelatedDescription":"Open issue \"TestServer no longer preserves ExecutionContext and AsyncLocals between client and server\" (#358)"},{"Id":"434918782","IsPullRequest":false,"CreatedAt":"2019-04-18T19:14:43","Actor":"ryanbrandenburg","Number":"357","RawContent":null,"Title":"Default Bootstrap version of IdentityUI changed to 4","State":"open","Body":"Currently the default version of Bootstrap for IdentityUI is `UIFramework.Bootstrap3`, but starting in 3.0.0-preview4 the default will be `UIFramework.Bootstrap4`. We think this better reflects our recomendation that new projects use Bootstrap4.\r\n\r\nYou will be affected by this change if you use IdentityUI but do not explicitly set a UIFramework. There are two ways to resolve this:\r\n\r\n1. [Move your project to Bootstrap4](https://getbootstrap.com/docs/4.0/migration/).\r\n2. Explicitly set your project to Bootstrap3 by calling `services.AddDefaultIdentity<IdentityUser>().AddDefaultUI(UIFramework.Bootstrap3)`.\r\n\r\nUse issue: aspnet/AspNetCore#9516 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/357","RelatedDescription":"Open issue \"Default Bootstrap version of IdentityUI changed to 4\" (#357)"},{"Id":"434911327","IsPullRequest":false,"CreatedAt":"2019-04-18T18:55:59","Actor":"halter73","Number":"356","RawContent":null,"Title":"HeaderNames now contains static readonly fields instead of const fields","State":"open","Body":"The static [Microsoft.Net.Http.Headers.HeaderNames](https://docs.microsoft.com/en-us/dotnet/api/microsoft.net.http.headers.headernames?view=aspnetcore-2.2) class contains string fields representing various common header names (e.g. [HeaderNames.Origin](https://docs.microsoft.com/en-us/dotnet/api/microsoft.net.http.headers.headernames.origin?view=aspnetcore-2.2)). Starting in ASP.NET Core 3.0 Preview 5, these will change from const fields to static readonly fields.\r\n\r\nWhile this is not a binary breaking change, source code that used these fields as an argument attribute, a case in a switch statement, or when defining another constant will no longer be able to do so. To work around this break, developers can switch to using self-defined header name constants or string literals.\r\n\r\nSee aspnet/AspNetCore#9514 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/356","RelatedDescription":"Open issue \"HeaderNames now contains static readonly fields instead of const fields\" (#356)"},{"Id":"434539478","IsPullRequest":false,"CreatedAt":"2019-04-18T00:24:54","Actor":"natemcmaster","Number":"355","RawContent":null,"Title":"Breaking change: DataProtection.AzureStorage 3.0 will be updated to use new Microsoft.Azure.Storage APIs","State":"open","Body":"Microsoft.AspNetCore.DataProtection.AzureStorage depends on the [Azure Storage libraries](https://github.com/Azure/azure-storage-net). Recently, these libraries have renamed their assemblies, packages, and namespaces. Starting in ASP.NET Core 3.0 Preview 5, we have moved our dependency to use the new Microsoft.Azure.Storage.\\* APIs and packages. \r\n\r\nChanges to your code may be necessary to use the new API. In many cases, the upgrade may be as simple as changing the `using` statements to use the new namespaces.\r\n\r\n```diff\r\n- using Microsoft.WindowsAzure.Storage;\r\n- using Microsoft.WindowsAzure.Storage.Blob;\r\n+ using Microsoft.Azure.Storage;\r\n+ using Microsoft.Azure.Storage.Blob;\r\n```\r\n\r\nThere is currently no plan to update 2.1 or 2.2 to use this new dependency as this would be a significant breaking change for the Microsoft.AspNetCore.All shared framework.\r\n\r\nIf you still need to use the older Azure Storage APIs with ASP.NET Core 3.0, add a direct dependency to the [WindowsAzure.Storage](https://www.nuget.org/packages/WindowsAzure.Storage/) package. This can be installed side-by-side with the new Microsoft.Azure.Storage APIs.\r\n\r\nFor questions about the Azure Storage APIs, use https://github.com/Azure/azure-storage-net.\r\nUse https://github.com/aspnet/AspNetCore/issues/8472 for discussion on this issue.","Url":"https://github.com/aspnet/Announcements/issues/355","RelatedDescription":"Open issue \"Breaking change: DataProtection.AzureStorage 3.0 will be updated to use new Microsoft.Azure.Storage APIs\" (#355)"},{"Id":"434009074","IsPullRequest":false,"CreatedAt":"2019-04-16T22:15:29","Actor":"JunTaoLuo","Number":"354","RawContent":null,"Title":"Making \"pubinternal\" types in ResponseCaching internal","State":"open","Body":"In ASP.NET Core, pubinternal types are types that are declared as public but put in an .Internal namespace. While these types are public they have no support policy and are subject to breaking changes. Unfortunately accidental use of these types has been common, resulting in breaking changes to these projects and limiting our ability to maintain the framework.\r\n\r\nIn ASP.NET Core 3.0, we are moving pubinternal types in ResponseCaching to internal. This includes the following types:\r\n\r\n```\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.CachedResponse\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.CachedVaryByRules\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCache\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCacheEntry\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCachingKeyProvider\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCachingPolicyProvider\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.MemoryResponseCache\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.ResponseCachingContext\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.ResponseCachingKeyProvider\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.ResponseCachingPolicyProvider\r\n```\r\n\r\nIn addition, a default implementation for `IResponseCachingPolicyProvider` and `IResponseCachingKeyProvider` will no longer be added to services as part of `AddResponseCaching` method. Also, the constructor for ResponseCachingMiddleware has been changed from:\r\n```C#\r\npublic ResponseCachingMiddleware(RequestDelegate next, IOptions<ResponseCachingOptions> options, ILoggerFactory loggerFactory, IResponseCachingPolicyProvider policyProvider, IResponseCachingKeyProvider keyProvider)\r\n```\r\nto:\r\n```C#\r\npublic ResponseCachingMiddleware(RequestDelegate next, IOptions<ResponseCachingOptions> options, ILoggerFactory loggerFactory, ObjectPoolProvider poolProvider)\r\n```\r\n\r\nIf if any changes to these types are critical to your applications, please file an issue in https://github.com/aspnet/Aspnetcore.\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/9442 for discussion on this topic.","Url":"https://github.com/aspnet/Announcements/issues/354","RelatedDescription":"Open issue \"Making \"pubinternal\" types in ResponseCaching internal\" (#354)"},{"Id":"432739053","IsPullRequest":false,"CreatedAt":"2019-04-12T20:46:40","Actor":"Tratcher","Number":"353","RawContent":null,"Title":"Generic Host restricts Startup constructor injection","State":"open","Body":"TLDR: The only types the generic Host supports for Startup constructor injection are `IHostEnvironment`, `IWebHostEnvironment`, and `IConfiguration`. Applications using WebHost are unaffected.\r\n\r\nIn 3.0 we've re-platformed the web stack onto the generic host library. You can see the change in Program.cs in the templates:\r\n\r\n2.x:\r\nhttps://github.com/aspnet/AspNetCore/blob/5cb615fcbe8559e49042e93394008077e30454c0/src/Templating/src/Microsoft.DotNet.Web.ProjectTemplates/content/EmptyWeb-CSharp/Program.cs#L20-L22\r\n3.0:\r\nhttps://github.com/aspnet/AspNetCore/blob/b1ca2c1155da3920f0df5108b9fedbe82efaa11c/src/ProjectTemplates/Web.ProjectTemplates/content/EmptyWeb-CSharp/Program.cs#L19-L24\r\n\r\nOne key behavior change here is that Host only uses one dependency injection container to build the application, as opposed to WebHost that used one for the host and one for the app. As a result the Startup constructor no longer supports custom service injection, only `IHostEnvironment`, `IWebHostEnvironment`, and `IConfiguration` can be injected. This change was made to avoid DI issues such as duplicate singleton services getting created.\r\n\r\nMitigations:\r\n\r\n Inject services into Startup.Configure:\r\n`public void Configure(IApplicationBuilder app, IOptions<MyOptions> options)`\r\n\r\n[We'll add more based on requests for specific scenarios.]\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/9337 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/353","RelatedDescription":"Open issue \"Generic Host restricts Startup constructor injection\" (#353)"},{"Id":"431074054","IsPullRequest":false,"CreatedAt":"2019-04-09T16:52:55","Actor":"shirhatti","Number":"352","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0815: ASP.NET Core denial of service vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0815: ASP.NET Core denial of service vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 2.2. This advisory also provides guidance on what developers can do to update their applications correctly.\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted on Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service. The security update addresses the vulnerability by ensuring the IIS worker process does not crash in response to specially crafted requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/9205\r\n\r\n\r\n## Affected Software\r\n\r\nThe vulnerability affects any Microsoft ASP.NET Core 2.2 applications if it is hosted on an IIS server running AspNetCoreModuleV2 (ANCM) prior to and including version 12.2.19024.2.\r\n\r\nThe vulnerability affects any Microsoft ASP.NET Core 1.0/1.1/2/1 application if they have explicitly opted into using the newer AspNetCoreModuleV2 (ANCM) prior to and including  version 12.2.19024.2.\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\nYou are affected if **BOTH** criteria below are met.\r\n\r\n1.\tThe AspNetCoreModuleV2 module is used by your application\r\n\r\nThe modules attribute in the handler mapping section of the web.config of your application must exactly match the string `AspNetCoreModuleV2`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <location path=\".\" inheritInChildApplications=\"false\">\r\n    <system.webServer>\r\n      <handlers>\r\n        <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModuleV2\" resourceType=\"Unspecified\" />\r\n      </handlers>\r\n      <aspNetCore processPath=\"dotnet\" arguments=\".\\myapp.dll\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" hostingModel=\"inprocess\" />\r\n    </system.webServer>\r\n  </location>\r\n</configuration>\r\n```\r\n2.\tThe version of AspNetCoreModuleV2 module installed on your machine is less than or equal to 12.2.19024.2\r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```ps1\r\n(Get-Item \"$env:ProgramFiles\\IIS\\Asp.Net Core Module\\V2\\aspnetcorev2.dll\").VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on C:\\Program Files\\IIS\\Asp.Net Core Module\\V2\\aspnetcorev2.dll, where C: is your OS install drive.\r\n\r\nHow do I fix the issue?\r\n\r\nInstall the latest version of the ASP.NET Core Runtime & Hosting Bundle 2.2.\r\n\r\nThen restart IIS by running\r\n\r\n```cmd\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0815](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0815)\r\n\r\n### Revisions\r\n\r\nV1.0 (Apr 9 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2019-04-09_\r\n","Url":"https://github.com/aspnet/Announcements/issues/352","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0815: ASP.NET Core denial of service vulnerability\" (#352)"},{"Id":"428354031","IsPullRequest":false,"CreatedAt":"2019-04-02T17:33:22","Actor":"pranavkm","Number":"351","RawContent":null,"Title":"Async suffix for controller action names will be trimmed by default","State":"open","Body":"As part of addressing https://github.com/aspnet/AspNetCore/issues/4849, ASP.NET Core MVC will trim the suffix `Async` from action names by default. This affects routing and link generation.\r\n\r\nConsider\r\n```C#\r\npublic class ProductController : Controller\r\n{\r\n    public async IActionResult ListAsync()\r\n    {\r\n        var model = await DbContext.Products.ToListAsync();\r\n        return View(model);\r\n    }\r\n}\r\n```\r\n\r\nPrior to 3.0, the action will be routeable via `Product/ListAsync`. Link generation would require specifying the `Async` suffix e.g.\r\n\r\n`<a asp-controller=\"Product\" asp-action=\"ListAsync\">List</a>`\r\n\r\nIn 3.0, the action will be routeable via `Product/List` and link generation would require not specifying the `Async` suffix e.g.\r\n\r\n`<a asp-controller=\"Product\" asp-action=\"List\">List</a>`\r\n\r\nThis change does not affect names specified using the `ActionNameAttribute`. This behavior can be disabled by setting `MvcOptions.SuppressAsyncSuffixInActionNames` to `false` as part of the application startup:\r\n\r\n```C#\r\nservices.AddMvc(options =>\r\n{\r\n   options.SuppressAsyncSuffixInActionNames = false; \r\n});\r\n```\r\n","Url":"https://github.com/aspnet/Announcements/issues/351","RelatedDescription":"Open issue \"Async suffix for controller action names will be trimmed by default\" (#351)"},{"Id":"426009751","IsPullRequest":false,"CreatedAt":"2019-03-27T14:57:05","Actor":"scottaddie","Number":"350","RawContent":null,"Title":"For contributors: moved ASP.NET 4.x docs to new GitHub repo","State":"open","Body":"In an effort to reduce the GitHub repo size and to reduce docset build times, the [ASP.NET 4.x product documentation](https://docs.microsoft.com/aspnet/overview) has migrated from the [aspnet/Docs repo](https://github.com/aspnet/Docs) to the [aspnet/AspNetDocs repo](https://github.com/aspnet/AspNetDocs).\r\n\r\nTo continue making contributions to ASP.NET 4.x documentation, create a local clone of the aspnet/AspNetDocs repo. To continue making contributions to ASP.NET Core documentation, please refresh your local clone.\r\n\r\nIn the near future, the team plans to rewrite the commit history in aspnet/Docs. We realize this is an extreme step, but we feel it's worth doing to reduce the repo size by ~70%. At that point, contributors will need to reclone aspnet/Docs. Look for another announcement when that change occurs. ","Url":"https://github.com/aspnet/Announcements/issues/350","RelatedDescription":"Open issue \"For contributors: moved ASP.NET 4.x docs to new GitHub repo\" (#350)"},{"Id":"421606357","IsPullRequest":false,"CreatedAt":"2019-03-15T16:36:22","Actor":"mikaelm12","Number":"349","RawContent":null,"Title":"ResetSendPing and ResetTimeout APIs Removed from SignalR HubConnection class","State":"open","Body":"The `ResetSendPing` and `ResetTimeout` APIs were removed from the SignalR's `HubConnection` API. These methods were originally intended only for internal use but were made public in 2.2. These API's will no longer be available starting in the 3.0 Preview 4 release.\r\nUse issue: https://github.com/aspnet/AspNetCore/issues/8543 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/349","RelatedDescription":"Open issue \"ResetSendPing and ResetTimeout APIs Removed from SignalR HubConnection class\" (#349)"},{"Id":"417460531","IsPullRequest":false,"CreatedAt":"2019-03-05T19:17:25","Actor":"Tratcher","Number":"348","RawContent":null,"Title":"Some Cookie SameSite defaults changed to None","State":"open","Body":"SameSite is an option for cookies that can help mitigate some XSS attacks. Each component that emits cookies need to decide if SameSite is appropriate for their scenarios. When this option was initially introduced inconsistent defaults were used across various AspNetCore APIs that has lead to confusing results. In 3.0.0-preview4 we've better aligned these defaults and made the feature opt-in on a per-component basis.\r\n\r\nAffected APIs:\r\n- `CookieOptions` used with `HttpResponse.Cookies.Append` has changed its default from `SameSiteMode.Lax` to `SameSiteMode.None`.\r\n- `CookieBuilder` used as a factory for `CookieOptions` has changed its default from `SameSiteMode.Lax` to `SameSiteMode.None`.\r\n- `CookiePolicyOptions.MinimumSameSitePolicy` has changed its default from `SameSiteMode.Lax` to `SameSiteMode.None`.\r\n\r\nNote all AspNetCore components that emit cookies override these defaults with settings appropriate for their scenarios and these values have not changed:\r\n- Session: Lax\r\n- CookieTempDataProvider: Lax\r\n- Antiforgery: Strict\r\n- CookieAuthentication: Lax\r\n- TwitterAuthentication state cookie: Lax\r\n- RemoteAuthentication correlation cookie (OAuth): None\r\n- OpenIdConnect nonce cookie: None\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/8212 for discussion","Url":"https://github.com/aspnet/Announcements/issues/348","RelatedDescription":"Open issue \"Some Cookie SameSite defaults changed to None\" (#348)"},{"Id":"416332368","IsPullRequest":false,"CreatedAt":"2019-03-02T00:38:03","Actor":"pranavkm","Number":"347","RawContent":null,"Title":"Microsoft.Interop.JSRuntime.Current has been removed","State":"open","Body":"In ASP.NET Core 3.0.0-preview3, we are removing the ability to access the `Microsoft.Interop.IJSRuntime` via the static `JSRuntime.Current` property. Application users may continue to access the `IJSRuntime` instance by injecting it in to their components. For example,\r\n\r\nPreviously:\r\n\r\n```C#\r\n// Stock.cshtml\r\n@functions {\r\n    \r\n    public override void OnInit()\r\n    {\r\n        StocksService.OnStockTickerUpdated += stockUpdate =>\r\n        {\r\n            JSRuntime.Current.InvokeAsync<object>(\r\n                \"handleTickerChanged\", stockUpdate.symbol, stockUpdate.price);\r\n        };\r\n    }\r\n}\r\n\r\n```\r\n\r\nAfter 3.0.0-preview3,\r\n\r\n```C#\r\n// Stock.cshtml\r\n@inject IJSRuntime JSRuntime\r\n\r\n@functions {\r\n    \r\n    public override void OnInit()\r\n    {\r\n        StocksService.OnStockTickerUpdated += stockUpdate =>\r\n        {\r\n            JSRuntime.InvokeAsync<object>(\r\n                \"handleTickerChanged\", stockUpdate.symbol, stockUpdate.price);\r\n        };\r\n    }\r\n}\r\n```\r\n\r\nRelated issue: https://github.com/aspnet/AspNetCore/issues/6828\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/8117 for discussions.","Url":"https://github.com/aspnet/Announcements/issues/347","RelatedDescription":"Open issue \"Microsoft.Interop.JSRuntime.Current has been removed\" (#347)"},{"Id":"412597806","IsPullRequest":false,"CreatedAt":"2019-02-20T19:47:08","Actor":"ryanbrandenburg","Number":"346","RawContent":null,"Title":"ResourceManagerWithCultureStringLocalizer class and WithCulture interface member marked Obsolete and will be removed","State":"open","Body":"The [ResourceManagerWithCultureStringLocalizer](https://github.com/aspnet/Localization/blob/43b974482c7b703c92085c6f68b3b23d8fe32720/src/Microsoft.Extensions.Localization/ResourceManagerWithCultureStringLocalizer.cs#L18) class and [WithCulture](https://github.com/aspnet/Localization/blob/master/src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizer.cs#L154-L170) interface member are often sources of confusion for users of Localization, especially if they want to create their own `IStringLocalizer` implementation. These items give the user the impression that we expect an `IStringLocalizer` instance to be \"per-language, per-resource\", when actually they should only be \"per-resource\", with the language searched for determined by the `CultureInfo.CurrentUICulture` at execution time. To remove this source of confusion and to avoid APIs which we don't want users to use we will be obsoleting these in 3.0.0-preview3, and they will be removed in a future release (4.0 or above). \r\n\r\nFor context, see [here](https://github.com/aspnet/AspNetCore/issues/3324).\r\n\r\nSee aspnet/AspNetCore#7756 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/346","RelatedDescription":"Open issue \"ResourceManagerWithCultureStringLocalizer class and WithCulture interface member marked Obsolete and will be removed\" (#346)"},{"Id":"412572457","IsPullRequest":false,"CreatedAt":"2019-02-20T18:43:44","Actor":"natemcmaster","Number":"345","RawContent":null,"Title":"For contributors: using Visual Studio on aspnet repos requires installing or upgrading to 2019","State":"open","Body":"We are updating the master branch of the following repos to require Visual Studio 2019. \r\n\r\n* aspnet/AspNetCore\r\n* aspnet/AspNetCore-Tooling\r\n* aspnet/EntityFrameworkCore\r\n* aspnet/Extensions\r\n\r\nThe .NET Core 3.0 SDK requires MSBuild 16, which is currently only supported by Visual Studio 2019. VS 2019 will be [released on April 2](https://devblogs.microsoft.com/visualstudio/join-us-april-2nd-for-the-launch-of-visual-studio-2019/).  In the meantime, you can get VS 2019 Preview 3 here: https://visualstudio.microsoft.com/vs/preview/. \r\n\r\nIf you are working on the aspnet/AspNetCore repo, you can run [this script](https://github.com/aspnet/AspNetCore/blob/master/eng/scripts/InstallVisualStudio.ps1) to install or modify your current VS2019 installation to add features required by this repo.\r\n\r\n-------\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/7752 for discussion on this announcement.","Url":"https://github.com/aspnet/Announcements/issues/345","RelatedDescription":"Open issue \"For contributors: using Visual Studio on aspnet repos requires installing or upgrading to 2019\" (#345)"},{"Id":"412530214","IsPullRequest":false,"CreatedAt":"2019-02-20T16:58:53","Actor":"Tratcher","Number":"344","RawContent":null,"Title":"IHostingEnvironment's and IApplicationLifetime's marked obsolete and replaced","State":"open","Body":"When Microsoft.Extensions.Hosting was introduced in 2.1 some types like IHostingEnvironment and IApplicationLifetime were copied from Microsoft.AspNetCore.Hosting. Some 3.0 changes cause apps to include both the Microsoft.Extensions.Hosting and Microsoft.AspNetCore.Hosting namespaces. Any use of those duplicate types causes an \"ambiguous reference\" compiler error when both namespaces are referenced.\r\n\r\nThis error has been addressed in 3.0.0-preview3 by marking the following types obsolete and replacing them with new types. There have not been any behavioral changes made for the new types, only naming.\r\n\r\nObsolete types (warning):\r\nMicrosoft.Extensions.Hosting.IHostingEnvironment\r\nMicrosoft.AspNetCore.Hosting.IHostingEnvironment\r\nMicrosoft.Extensions.Hosting.IApplicationLifetime\r\nMicrosoft.AspNetCore.Hosting.IApplicationLifetime\r\nMicrosoft.Extensions.Hosting.EnvironmentName\r\nMicrosoft.AspNetCore.Hosting.EnvironmentName\r\n\r\nNew types:\r\nMicrosoft.Extensions.Hosting.IHostEnvironment\r\nMicrosoft.AspNetCore.Hosting.IWebHostEnvironment : IHostEnvironment\r\nMicrosoft.Extensions.Hosting.IHostApplicationLifetime\r\nMicrosoft.Extensions.Hosting.Environments\r\n\r\nNote the new IHostEnvironment IsDevelopment, IsProduction, etc. extension methods are in the Microsoft.Extensions.Hosting namespace which may need to be added to your app.\r\n\r\nFor 3.0 both the old and new types will be available from HostBulder's and WebHostBuilder's dependency injection containers. The old types will be removed in 4.0.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7749 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/344","RelatedDescription":"Open issue \"IHostingEnvironment's and IApplicationLifetime's marked obsolete and replaced\" (#344)"},{"Id":"411004828","IsPullRequest":false,"CreatedAt":"2019-02-16T00:53:18","Actor":"pranavkm","Number":"343","RawContent":null,"Title":"Breaking changes to runtime compilation for Razor views and Razor Pages","State":"open","Body":"As a consequence of cleaning up the ASP.NET Core shared framework to not depend on Roslyn, support for runtime compilation of Razor views and Razor Pages is being moved to a separate package.\r\nApplications that require runtime compilation or re-compilation of Razor files should \r\n    \r\n* Add a reference to the `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation` package\r\n* Update the application's `ConfigureServices` to include a call to `AddMvcRazorRuntimeCompilation`:\r\n\r\n```C#\r\nservices.AddMvc()\r\n    .AddMvcRazorRuntimeCompilation();\r\n```\r\n\r\nThe following APIs previously available on `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions` to support runtime compilation would now be available via \r\n `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.MvcRazorRuntimeCompilationOptions`:\r\n\r\n* `RazorViewEngineOptions.FileProviders` -> `MvcRazorRuntimeCompilationOptions.FileProviders`\r\n* `RazorViewEngineOptions.AdditionalCompilationReferences` -> `MvcRazorRuntimeCompilationOptions.AdditionalReferencePaths`\r\n\r\nIn addition, `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AllowRecompilingViewsOnFileChange` has been removed. Recompilation on file changes is enabled by default by referencing the `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation` package.\r\n\r\nRelated issues: https://github.com/aspnet/Announcements/issues/312, https://github.com/aspnet/Announcements/issues/325\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/7647 for further discussions or questions.\r\n","Url":"https://github.com/aspnet/Announcements/issues/343","RelatedDescription":"Open issue \"Breaking changes to runtime compilation for Razor views and Razor Pages\" (#343)"},{"Id":"411000034","IsPullRequest":false,"CreatedAt":"2019-02-16T00:23:50","Actor":"Tratcher","Number":"342","RawContent":null,"Title":"AllowSynchronousIO disabled in all servers","State":"open","Body":"AllowSynchronousIO is a option in each server that enables or disables sync IO APIs like HttpReqeuest.Body.Read, HttpResponse.Body.Write, Stream.Flush, etc.. These APIs have long been a source of thread starvation and application hangs. Starting in 3.0.0-preview3 these are disabled by default.\r\n\r\nAffected servers:\r\n- Kestrel\r\n- HttpSys\r\n- IIS in-process\r\n- TestServer\r\n\r\nExpect errors similar to:\r\n- `Synchronous operations are disallowed. Call ReadAsync or set AllowSynchronousIO to true instead.`\r\n- `Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead.`\r\n- `Synchronous operations are disallowed. Call FlushAsync or set AllowSynchronousIO to true instead.`\r\n\r\nEach server has a AllowSynchronousIO option that controls this behavior and the default for all of them is now false.\r\n\r\nThe behavior can also be overridden on a per request basis as a temporary mitigation. \r\n```c#\r\nvar syncIOFeature = HttpContext.Features.Get<IHttpBodyControlFeature>();\r\nif (syncIOFeature != null)\r\n{\r\n    syncIOFeature.AllowSynchronousIO = true;\r\n}\r\n```\r\n\r\nIf you have trouble with TextWriters or other streams calling sync APIs in Dispose, call the new DisposeAsync API instead.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7644 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/342","RelatedDescription":"Open issue \"AllowSynchronousIO disabled in all servers\" (#342)"},{"Id":"407002748","IsPullRequest":false,"CreatedAt":"2019-02-05T22:28:19","Actor":"Tratcher","Number":"341","RawContent":null,"Title":"Newtonsoft.Json types replaced in Microsoft.AspNetCore.Authentication APIs","State":"open","Body":"As part of the ongoing effort to [remove](https://github.com/aspnet/AspNetCore/issues/4260) Newtonsoft.Json from the shared framework these types have now been replaced on the Authentication APIs.\r\n\r\n**Basic usage of these Authentication packages should be unaffected.** Only users who have derived from the OAuth package or that had implemented advanced claim manipulation should be affected. A detailed list of affected APIs is given below.\r\n\r\nAffected packages:\r\n* Microsoft.AspNetCore.Authentication.OAuth\r\n* Microsoft.AspNetCore.Authentication.OpenIdConnect\r\n* Microsoft.AspNetCore.Authentication.Facebook\r\n* Microsoft.AspNetCore.Authentication.Google\r\n* Microsoft.AspNetCore.Authentication.Twitter\r\n* Microsoft.AspNetCore.Authentication.MicrosoftAccount\r\n\r\nAlso, all derived implementations of OAuth such as those from [aspnet-contrib](https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers).\r\n\r\nFor derived OAuth implementations the most common change is to replace JObject.Parse with JsonDocument.Parse in the CreateTicketAsync override as shown [here](https://github.com/aspnet/AspNetCore/pull/7105/files?utf8=%E2%9C%93&diff=unified&w=1#diff-e1c9f9740a6fe8021020a6f249c589b0L40). Note JsonDocument is IDisposable.\r\n\r\nAffected APIs:\r\n* `ClaimAction.Run(JObject userData, ClaimsIdentity identity, string issuer)` becomes `ClaimAction.Run(JsonElement userData, ClaimsIdentity identity, string issuer)`. All derived implementations of ClaimAction are similarly affected.\r\n* `MapCustomJson(this ClaimActionCollection collection, string claimType, Func<JObject, string> resolver)` becomes `MapCustomJson(this ClaimActionCollection collection, string claimType, Func<JsonElement, string> resolver)`\r\n* `MapCustomJson(this ClaimActionCollection collection, string claimType, string valueType, Func<JObject, string> resolver)` becomes `MapCustomJson(this ClaimActionCollection collection, string claimType, string valueType, Func<JsonElement, string> resolver)`\r\n* OAuthCreatingTicketContext has had one old constructor removed and the other replaced JObject with JsonElement. The User property and RunClaimActions method have been updated to match.\r\n* OAuthTokenResponse.Success now takes a JsonDocument instead of JObject. The Response property has been updated to match. OAuthTokenResponse is now disposable and will be disposed by OAuthHandler. Derived OAuth implementations overriding ExchangeCodeAsync do not need to dispose of the JsonDocument or OAuthTokenResponse.\r\n* UserInformationReceivedContext.User changed from JObject to JsonDocument.\r\n* TwitterCreatingTicketContext.User changed from JObject to JsonElement.\r\n* TwitterHandler.CreateTicketAsync changed from taking JObject to JsonElement.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7289 for discussion. See https://github.com/aspnet/AspNetCore/pull/7105 for details of the change.","Url":"https://github.com/aspnet/Announcements/issues/341","RelatedDescription":"Open issue \"Newtonsoft.Json types replaced in Microsoft.AspNetCore.Authentication APIs\" (#341)"},{"Id":"406489587","IsPullRequest":false,"CreatedAt":"2019-02-04T19:47:13","Actor":"JunTaoLuo","Number":"340","RawContent":null,"Title":"MemoryCache: obsolete API removed in 3.0","State":"open","Body":"This is a follow up to https://github.com/aspnet/Caching/issues/221. The 3.0 release will remove the [obsolete `MemoryCacheOptions` APIs](https://github.com/aspnet/Extensions/blob/dc5c593da7b72c82e6fe85abb91d03818f9b700c/src/Caching/Memory/src/MemoryCacheOptions.cs#L17-L18). \r\n\r\nDiscussion: https://github.com/aspnet/Extensions/issues/1062. ","Url":"https://github.com/aspnet/Announcements/issues/340","RelatedDescription":"Open issue \"MemoryCache: obsolete API removed in 3.0\" (#340)"},{"Id":"404438078","IsPullRequest":false,"CreatedAt":"2019-01-29T18:57:12","Actor":"pakrym","Number":"339","RawContent":null,"Title":"AspNetCoreModule V1 removed from Windows Hosting Bundle","State":"open","Body":"Windows Hosting Bundle wouldn't contain AspNetCoreModule V1 in 3.0 release.\r\n\r\nAspNetCoreModuleV2 is backwards compatible with AspNetCoreModule OutOfProcess and is recommended for use with ASP.NET Core 3.0 applications.\r\n\r\nIf AspNetCoreModule V1 is required it can be installed using 2.1/2.2 Windows Hosting Bundle.\r\n\r\nThis would break 3.0 applications that explicitly opted into using AspNetCoreModule V1 using `<AspNetCoreModuleName>AspNetCoreModule</AspNetCoreModuleName>` or ones having custom `web.config` with `<add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />`\r\n\r\nPlease discuss this on  https://github.com/aspnet/AspNetCore/issues/7095","Url":"https://github.com/aspnet/Announcements/issues/339","RelatedDescription":"Open issue \"AspNetCoreModule V1 removed from Windows Hosting Bundle\" (#339)"},{"Id":"397535401","IsPullRequest":false,"CreatedAt":"2019-01-09T19:57:15","Actor":"davidfowl","Number":"338","RawContent":null,"Title":"Removed extensibility for DefaultHttpContext","State":"open","Body":"As part of performance improvements made to ASP.NET Core 3.0 (aspnet/AspNetCore#6504), we've removed the extensibility of DefaultHttpContext (it is now sealed). This extensibility was provided initially to allow pooling of the HttpContext but it introduced more complexity than necessary and precluded other optimizations. As a result, we decided to remove this extensibility.\r\n\r\nIf you're using `Mock<DefaultHttpContext>` in your unit tests, we recommend using `Mock<HttpContext>` instead. \r\n\r\nPlease discuss this on https://github.com/aspnet/AspNetCore/issues/6534\r\n\r\n","Url":"https://github.com/aspnet/Announcements/issues/338","RelatedDescription":"Open issue \"Removed extensibility for DefaultHttpContext\" (#338)"},{"Id":"397531381","IsPullRequest":false,"CreatedAt":"2019-01-09T19:50:45","Actor":"davidfowl","Number":"337","RawContent":null,"Title":"Removed deprecated Authentication property from HttpContext (including all of 1.x auth stack)","State":"open","Body":"As part of https://github.com/aspnet/AspNetCore/pull/6504 we've removed the deprecated Authentication property. The Authentication property has been deprecated since 2.0 and a [migration guide](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/identity-2x?view=aspnetcore-2.2#use-httpcontext-authentication-extensions) was published to migrate code using this deprecated property to the new replacement APIs.\r\n\r\nPlease discussion this on https://github.com/aspnet/AspNetCore/issues/6533\r\n","Url":"https://github.com/aspnet/Announcements/issues/337","RelatedDescription":"Open issue \"Removed deprecated Authentication property from HttpContext (including all of 1.x auth stack)\" (#337)"},{"Id":"397483895","IsPullRequest":false,"CreatedAt":"2019-01-09T17:49:37","Actor":"davidfowl","Number":"336","RawContent":null,"Title":"ObjectPoolProvider removed from the default set of dependencies added in the WebHostBuilder","State":"open","Body":"As part of making ASP.NET Core more pay for play, we moved the `ObjectPoolProvider` out of the main set of dependencies to the specific components that were using them.\r\n\r\nIf you were relying on the `ObjectPoolProvider` being available by default, you should add them to your dependencies via the `IServiceCollection`.\r\n\r\nFor discussion, please use https://github.com/aspnet/AspNetCore/issues/5944","Url":"https://github.com/aspnet/Announcements/issues/336","RelatedDescription":"Open issue \"ObjectPoolProvider removed from the default set of dependencies added in the WebHostBuilder\" (#336)"},{"Id":"397022608","IsPullRequest":false,"CreatedAt":"2019-01-08T18:07:24","Actor":"blowdart","Number":"335","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0548: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0548: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.1. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted on Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/6488\r\n\r\n### Mitigation Factors\r\n\r\nAny site hosted behind a different proxy, such as nginx or an application hosted in Azure, which uses Application Request Routing (ARR) as a proxy is not affected.\r\n\r\n## Affected Software\r\n\r\nThe vulnerability affects any Microsoft ASP.NET 1.0/1.1/2.1 Core applications if it is hosted on an IIS server running AspNetCoreModule (ANCM) prior to 12.1.18340.7 or,\r\nThe vulnerability affects any Microsoft ASP.NET 2.2 Core applications if it is hosted on an IIS server running AspNetCoreModule (ANCM) prior to 12.2.18346.0\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```powershell\r\n(Get-Item $env:SystemDrive\\Windows\\System32\\inetsrv\\aspnetcore.dll).VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on `C:\\Windows\\System32\\inetsrv\\aspnetcore.dll`, where C: is your OS install drive.\r\n\r\nASP.NET Core 1.0/1.1/2.1 applications are affected if the file version is less than 12.1.18340.7.\r\nASP.NET Core 2.2 applications are affected if the file version is less than 12.2.18346.0.\r\n\r\n### How do I fix the issue?\r\n\r\nInstall the latest version of the ASP.NET Core Runtime & Hosting Bundle appropriate to the highest version of .NET Core running on your servers.\r\n\r\n* [Hosting Bundle for ASP.NET Core applications up to v2.2](https://dotnet.microsoft.com/download/dotnet-core/2.2)\r\n* [Hosting Bundle for ASP.NET Core applications up to v2.1](https://dotnet.microsoft.com/download/dotnet-core/2.1)\r\n* [Hosting Bundle for ASP.NET Core applications up to v1.1](https://dotnet.microsoft.com/download/dotnet-core/1.1) \r\n  * Note: The ASP.NET Core Runtime & Hosting Bundle v1.1 had an incorrect download link before 1/10/2019. Please re-download Hosting Bundle if downloaded before this date.\r\n\r\nThen restart IIS by running\r\n\r\n```DOS\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\n\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0548](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0548)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 8 2018): Advisory published.\r\nV1.1 (Jan 9 2018): Update ANCM version for AspNetCore 2.1 and 1.1.\r\nV1.2 (Jan 10 2018): Mention 2.2 is affected and that the 1.1 Hosting Bundle download link was incorrect.\r\n\r\n_Version 1.2_\r\n_Last Updated 2019-01-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/335","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0548: ASP.NET Core Denial Of Service Vulnerability\" (#335)"},{"Id":"397021739","IsPullRequest":false,"CreatedAt":"2019-01-08T18:04:59","Actor":"blowdart","Number":"334","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0564: ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0564: ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/6487\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.WebSockets | 2.2.0<br/>2.1.0, 2.1.1 | 2.2.1<br/>2.1.7\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.1.0, 2.1.1, 2.1.2, 2.1.3 | 2.1.7\r\nSystem.Net.WebSockets.WebSocketProtocol  | 4.5.0, 4.5.1, 4.5.2 | 4.5.3\r\nMicrosoft.NETCore.App | 2.2.0<br/>2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.2.1 <br/> 2.1.7\r\nMicrosoft.AspNetCore.App | 2.2.0<br/>2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.2.1 <br/> 2.1.7\r\nMicrosoft.AspNetCore.All  | 2.2.0<br/>2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.2.1 <br/> 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nThe [vulnerable packages](#affected-software) are distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.AspNetCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.AspNetCore.App` runtime version is less than 2.1.7, or the highest 2.2.x `Microsoft.AspNetCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nSome of the affected assemblies are also available separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.All\r\n\r\nIf your host version is a 2.1.x host, you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x, you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0564](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0564)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n","Url":"https://github.com/aspnet/Announcements/issues/334","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0564: ASP.NET Core Denial of Service Vulnerability\" (#334)"},{"Id":"397021251","IsPullRequest":false,"CreatedAt":"2019-01-08T18:03:31","Actor":"Tratcher","Number":"333","RawContent":null,"Title":"Google+ based auth deprecation and replacement","State":"open","Body":"Google is starting to [shut down](https://developers.google.com/+/api-shutdown) Google+ Signin for applications as early as January 28th 2019. ASP.NET and ASP.NET Core have been using the Google+ Signin APIs to authenticate Google account users in web applications. The affected NuGet packages are [Microsoft.AspNetCore.Authentication.Google](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.Google/) for ASP.NET Core and [Microsoft.Owin.Security.Google](https://www.nuget.org/packages/Microsoft.Owin.Security.Google/) for Microsoft.Owin with ASP.NET Web Forms and MVC. Mitigations and solutions will vary depending on which package and which version of that package you use. \r\n\r\nNote that the replacement APIs Google has provided use a different data source and format. The mitigations and solutions given below account for the structural changes but applications will need to verify the data itself still satisfies their requirements. E.g. names, e-mail addresses, profile links, profile photos, etc. may provide subtly different values than before.\r\n\r\n### Microsoft.Owin with ASP.NET Web Forms and MVC\r\nFor Microsoft.Owin 3.1.0 and later a temporary mitigation is outlined [here](https://github.com/aspnet/AspNetKatana/issues/251#issuecomment-449587635). Applications should do immediate testing with the mitigation to check for changes in the data format. We'll plan to release Microsoft.Owin 4.0.1 with a fix for this as soon as possible. Applications using any prior version will need to update to 4.0.1.\r\n\r\n### ASP.NET Core 1.x\r\nThe mitigation given above for [Microsoft.Owin](https://github.com/aspnet/AspNetKatana/issues/251#issuecomment-449587635) can also be adapted for ASP.NET Core 1.x. As 1.x is nearing [end of life](https://dotnet.microsoft.com/platform/support-policy) and has low usage there are no plans to patch the NuGet packages for this issue.\r\n\r\n### ASP.NET Core 2.x\r\nFor Microsoft.AspNetCore.Authentication.Google 2.x the mitigation is to replace your existing call to `AddGoogle` in `Startup` with:\r\n```c#\r\n            .AddGoogle(o =>\r\n            {\r\n                o.ClientId = Configuration[\"Authentication:Google:ClientId\"];\r\n                o.ClientSecret = Configuration[\"Authentication:Google:ClientSecret\"];\r\n                o.UserInformationEndpoint = \"https://www.googleapis.com/oauth2/v2/userinfo\";\r\n                o.ClaimActions.Clear();\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.NameIdentifier, \"id\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.Name, \"name\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.GivenName, \"given_name\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.Surname, \"family_name\");\r\n                o.ClaimActions.MapJsonKey(\"urn:google:profile\", \"link\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.Email, \"email\");\r\n            });\r\n```\r\nApplications should do immediate testing with the mitigation to check for changes in the data format. Expect a fix for this to be included in the February 2.1 and 2.2 patches that incorperates the above reconfiguration as the new defaults. No patch is planned for 2.0 since it has reached [end of life](https://dotnet.microsoft.com/platform/support-policy).\r\n\r\n### ASP.NET Core 3.0 Preview\r\nThe mitigation given for 2.x can also be used for the current 3.0 preview. In future 3.0 previews we're considering removing the Microsoft.AspNetCore.Authentication.Google package and directing users to Microsoft.AspNetCore.Authentication.OpenIdConnect instead. We'll follow up with the final plan. Here's how to replace `AddGoogle` with `AddOpenIdConnect` in `Startup`. This replacement can be used with ASP.NET Core 2.0 and later and can be adapted for 1.x as needed.\r\n```c#\r\n            .AddOpenIdConnect(\"Google\", o =>\r\n            {\r\n                o.ClientId = Configuration[\"Authentication:Google:ClientId\"];\r\n                o.ClientSecret = Configuration[\"Authentication:Google:ClientSecret\"];\r\n                o.Authority = \"https://accounts.google.com\";\r\n                o.ResponseType = OpenIdConnectResponseType.Code;\r\n                o.CallbackPath = \"/signin-google\"; // Or register the default \"/sigin-oidc\"\r\n                o.Scope.Add(\"email\");\r\n            });\r\n            JwtSecurityTokenHandler.DefaultInboundClaimTypeMap.Clear();\r\n```\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/6486 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/333","RelatedDescription":"Open issue \"Google+ based auth deprecation and replacement\" (#333)"},{"Id":"390815611","IsPullRequest":false,"CreatedAt":"2018-12-13T19:01:52","Actor":"JunTaoLuo","Number":"331","RawContent":null,"Title":"Session: obsolete APIs removed in 3.0","State":"open","Body":"This is a follow up to https://github.com/aspnet/Announcements/issues/257.  The 3.0 release will remove the [obsolete Cookie APIs](https://github.com/aspnet/AspNetCore/blob/9e76bec6e1d150044e1fa0f77a98e9206180903d/src/Middleware/Session/src/SessionOptions.cs#L46-L104) in Session.\r\n\r\nThe recommended changes are:\r\n```c#\r\npublic void ConfigureServices(ServiceCollection services)\r\n{\r\n    services.AddSession(options =>\r\n    {\r\n        // Removed obsolete APIs\r\n        options.CookieName = \"SessionCookie\";\r\n        options.CookieDomain = \"contoso.com\";\r\n        options.CookiePath = \"/\";\r\n        options.CookieHttpOnly = true;\r\n        options.CookieSecure = CookieSecurePolicy.Always;\r\n        // new API\r\n        options.Cookie.Name = \"SessionCookie\";\r\n        options.Cookie.Domain = \"contoso.com\";\r\n        options.Cookie.Path = \"/\";\r\n        options.Cookie.HttpOnly = true;\r\n        options.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n    });\r\n}\r\n```\r\n\r\nSee the linked issue for more details and discussion.","Url":"https://github.com/aspnet/Announcements/issues/331","RelatedDescription":"Open issue \"Session: obsolete APIs removed in 3.0\" (#331)"},{"Id":"390461153","IsPullRequest":false,"CreatedAt":"2018-12-13T00:01:36","Actor":"Eilon","Number":"330","RawContent":null,"Title":"Bulk moving issues to the AspNetCore, Extensions, and EntityFrameworkCore repos","State":"open","Body":"As a follow-up to https://github.com/aspnet/Announcements/issues/320, we will start bulk moving issues from the many 'smaller' repos into the few, new 'mondo' repos. We will continue to use labels to signify various product areas and sub-features to make it reasonably easy to locate issues of interest.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/3598 for discussions.\r\n","Url":"https://github.com/aspnet/Announcements/issues/330","RelatedDescription":"Open issue \"Bulk moving issues to the AspNetCore, Extensions, and EntityFrameworkCore repos\" (#330)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1123267883142864901","CreatedAt":"2019-04-30T16:48:27+00:00","UserScreenname":"aspnet","Text":"Starting soon! Join us at https://t.co/4Ioo9jNSN2 at 10 AM Pacific / 17 UTC. https://t.co/LEFV3VGl3A","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1122954042458591237","CreatedAt":"2019-04-29T20:01:21+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup (Tuesday 10 AM Pacific / 17 UTC): \n\nASPNET Tooling with Taylor… https://t.co/eUEn7nK45f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":15,"RawContent":null},{"Id":"1120814966691565573","CreatedAt":"2019-04-23T22:21:26+00:00","UserScreenname":"aspnet","Text":"Starting soon... join us at 3:45 PM Pacific / 22:45 UTC for this week's #ASPNET Community Standup at… https://t.co/OJTstwZGFw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1120467356944408578","CreatedAt":"2019-04-22T23:20:09+00:00","UserScreenname":"aspnet","Text":"On this week's @aspnet Community Standup, we've got a community request: #ASPNET Architect's View with Ryan Nowak (… https://t.co/9PXu3ZgEKp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":18,"RawContent":null},{"Id":"1119308131790516224","CreatedAt":"2019-04-19T18:33:49+00:00","UserScreenname":"aspnet","Text":"Updated Razor support in Visual Studio Code, now with Blazor support\n\nhttps://t.co/UsKhnypV8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":105,"FavoriteCount":50,"RawContent":null},{"Id":"1118188488396951552","CreatedAt":"2019-04-16T16:24:45+00:00","UserScreenname":"aspnet","Text":"Get ready for today's @aspnet Community Standup, starting at 10 AM Pacific time.\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/VFOSflSE6q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":7,"RawContent":null},{"Id":"1117932205584424960","CreatedAt":"2019-04-15T23:26:22+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup (Tuesday 10 AM Pacific / 17 UTC): #Blazor Updates with Dan Roth (@danroth27)… https://t.co/GQWlr8smNq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":44,"FavoriteCount":35,"RawContent":null},{"Id":"1115740455835029504","CreatedAt":"2019-04-09T22:17:08+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us at https://t.co/4Ioo9jNSN2 or https://t.co/pte0TupL83 https://t.co/ajViYkyvEk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"1111672802585673728","CreatedAt":"2019-03-29T16:53:44+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - March 26th, 2019 - #SignalR with Brady Gaster (@bradygaster) \nhttps://t.co/ZjOP4gWDqD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":8,"RawContent":null},{"Id":"1111291311133544449","CreatedAt":"2019-03-28T15:37:50+00:00","UserScreenname":"aspnet","Text":"Read \"Re-reading https://t.co/scZHJlPtLY Core request bodies with EnableBuffering()\" by Jeremy Meng https://t.co/U3ziYgxqj1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2019-05-29T05:30:16.3327199Z","RunDurationInMilliseconds":2491}