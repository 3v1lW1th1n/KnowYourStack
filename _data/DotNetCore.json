{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":234,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7042899569","Type":"PullRequestEvent","CreatedAt":"2017-12-30T19:51:55","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15673","RelatedDescription":"Opened pull request \"Updating build.cmd to support 'generatelayout' when 'skiptests' is specified.\" (#15673) at dotnet/coreclr","RelatedBody":"This makes it easier to test product changes without performing the up-to-date check on all tests.\r\n\r\nResolves https://github.com/dotnet/coreclr/issues/15670"},{"Id":"7041825180","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:21:12","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15672","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26030-01 (master)\" (#15672) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7042910541","Type":"IssuesEvent","CreatedAt":"2017-12-30T20:01:34","Actor":"tfsjohan","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8307","RelatedDescription":"Opened issue \"dotnet build resx error\" (#8307) at dotnet/cli","RelatedBody":"When building a project from the command line on OSX using the dotnet build tools I get this error:\r\n\r\n`error MSB3103: Invalid Resx file. Length cannot be less than zero.`\r\n\r\nThe resx files are not empty and they do work when building on Visual Studio 2017 on Windows. I can also build on Mac using Mono version of MSBuild without errors, but then the resources doesn't get build.\r\n\r\n## Expected  behavior\r\nSuccessful build and compiled resources.\r\n\r\n## Actual behavior\r\nError MSB3103: Invalid Resx file.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.4\r\n  Build    : 7f262f453d8c8479b9af91d34c013b3aa05bc1ff\r\n\r\n\r\n\r\n\r\n"},{"Id":"7042706061","Type":"IssuesEvent","CreatedAt":"2017-12-30T17:00:26","Actor":"eduherminio","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8304","RelatedDescription":"Closed issue \"Tasks named \"AfterBuild\" & \"AfterPublish\" are apparently ignored\" (#8304) at dotnet/cli","RelatedBody":"Same behaviour observed when compiling with either VS or cli.\r\n\r\n## Steps to reproduce\r\n1. Create directory with these two files:\r\n\r\n- Trial.csproj file\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"AfterBuild\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 1\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterBuilds\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 2\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterPublish\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 3\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterPublishs\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 4\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\r\n- Program.cs file (any)\r\n\r\n```\r\nnamespace Bug\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n2. `dotnet build`\r\n\r\n\r\n## Expected  behavior\r\n\r\nHi World 1\r\nHi World 2\r\nHi World 3\r\nHi World 4\r\n\r\n## Actual behavior\r\n\r\nHi World 2\r\nHi World 4\r\n\r\n## Environment data\r\n```\r\nHerramientas de la línea de comandos .NET (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7041572145","Type":"IssuesEvent","CreatedAt":"2017-12-29T22:10:36","Actor":"kasper3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8306","RelatedDescription":"Opened issue \"dotnet-nuget doesn't support verbosity\" (#8306) at dotnet/cli","RelatedBody":"```\r\ndotnet nuget push --source {uri} path.nupkg -v q\r\n\r\n# error: Unrecognized option '-v'\r\n\r\ndotnet nuget push --source {uri} path.nupkg --verbosity quiet\r\n\r\n# error: Unrecognized option '--verbosity'\r\n```\r\n\r\nHowever, \r\n\r\n```\r\ndotnet nuget --verbosity quiet push --source {uri} path.nupkg\r\n```\r\n\r\ndoesn't throw but doesn't quiet the verbosity either.\r\n\r\nThis breaks what --help quotes:\r\n\r\n```\r\nCommon options:\r\n  -v|--verbosity        Set the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\r\n  -h|--help             Show help.\r\n```\r\n\r\n### `--verbosity` is NOT a common option, only `--help` is"},{"Id":"7041394604","Type":"IssuesEvent","CreatedAt":"2017-12-29T20:39:33","Actor":"grbd","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8305","RelatedDescription":"Opened issue \"issue with running dotnet cli within gentoo sandbox\" (#8305) at dotnet/cli","RelatedBody":"Hi,\r\nI've recently been trying to setup some ebuild scripts for gentoo\r\nfor the purposes of installing dotnet core 2.0 onto gentoo\r\n\r\nNormally the ebuild system within gentoo uses a **sandbox** system while compiling / installing\r\nNormally during the install phase the build is set to install it's content into a directory under /var/tmp/portage/\r\nthen on a follow up stage is copied across to the live system.\r\nhttps://wiki.gentoo.org/wiki/Project:Sandbox\r\n\r\nHowever it looks as if the sandboxing system and dotnet restore (or even running dotnet --version inside it)\r\ncauses the dotnet exe to hang.\r\n\r\n## Steps to reproduce\r\n\r\nunder gentoo\r\n```\r\nwget https://github.com/dotnet/corefx/archive/v2.0.4.tar.gz\r\ntar -xvzf v2.0.4.tar.gz\r\ncd corefx-2.0.4\r\nsandbox\r\n./init-tools.sh\r\n```\r\n\r\n## Expected  behavior\r\n\r\ndotnet should restore the packages based on BuildToolsVersion.txt\r\n\r\n## Actual behavior\r\n\r\n```\r\nInstalling dotnet cli...\r\nRestoring BuildTools version 2.0.0-servicing-02217-01...\r\n```\r\nThe dotnet cli tool hangs and requires a kill -9 to stop inside the sandbox\r\nI also tried upping the DotnetCLIVersion.txt to 2.1.3 but this had the same result\r\nI also tried calling dotnet --version directly within the sandbox using -v detailed but there was no returned output just another hang\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     gentoo\r\n OS Version:\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /root/test1/dotnet-runtime-test/corefx-2.0.4/Tools/dotnetcli/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\nkernel version 4.14.8\r\n\r\n\r\n## workaround\r\n\r\nThere's a way to disable sandbox features per package under portage which I'll have to explore next.\r\nBut considering this affects **dotnet restore** this also impacts any future app creatd via dotnet (not just the install of dotnet core) installed under gentoo\r\n\r\nhttps://wiki.gentoo.org/wiki/Knowledge_Base:Overriding_environment_variables_per_package\r\n\r\n"},{"Id":"7040273168","Type":"IssuesEvent","CreatedAt":"2017-12-29T12:54:26","Actor":"eduherminio","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8304","RelatedDescription":"Opened issue \"Tasks named \"AfterBuild\" & \"AfterPublish\" are apparently ignored\" (#8304) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create directory with these two files:\r\n\r\n- Trial.csproj file\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"AfterBuild\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 1\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterBuilds\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 2\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterPublish\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 3\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterPublishs\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 4\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\r\n- Program.cs file (any)\r\n\r\n```\r\nnamespace Bug\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n2. `dotnet build`\r\n\r\n\r\n## Expected  behavior\r\n\r\nHi World 1\r\nHi World 2\r\nHi World 3\r\nHi World 4\r\n\r\n## Actual behavior\r\n\r\nHi World 2\r\nHi World 4\r\n\r\n## Environment data\r\n```\r\nHerramientas de la línea de comandos .NET (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7039913064","Type":"IssuesEvent","CreatedAt":"2017-12-29T10:16:48","Actor":"HaythemJ","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8296","RelatedDescription":"Closed issue \"node_modules folder is not published\" (#8296) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet core 2.0\r\nVisual Studio 2017 15.5.1\r\nPublish Web Application\r\n\r\n## Expected  behavior\r\nfolder with name node_modules should be published like any other folder\r\n\r\n## Actual behavior\r\nfolder with name node_modules is not published\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Command Line Tools (2.1.3)\r\n\r\nProduct Information:\r\n Version:            2.1.3\r\n Commit SHA-1 hash:  a0ca411ca5\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.3\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.4\r\n  Build    : 7f262f453d8c8479b9af91d34c013b3aa05bc1ff\r\n\r\nI have a Web Application where I put Javascript files under wwwroot/lib/vendors/ like below:\r\n\r\n![image](https://user-images.githubusercontent.com/9905290/34366814-94801e48-eaa1-11e7-9466-b44317333e25.png)\r\n\r\nWhen publishing the folder wwwroot/lib/vendors/node_modules is not published in the output folder which leads to missing libraries.\r\n\r\nIs there a way to force the publish of that folder?\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7039598187","Type":"PullRequestEvent","CreatedAt":"2017-12-29T08:00:39","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8303","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#8303) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20171229-080038\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20171229-080038 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7042271379","Type":"IssuesEvent","CreatedAt":"2017-12-30T09:54:33","Actor":"Sergio0694","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/615","RelatedDescription":"Opened issue \"Missing binary/namespace from NuGet package in .NET Standard 2.0 library\" (#615) at dotnet/standard","RelatedBody":"Hello, I'm writing a .NET Standard 2.0 library and I'm having issues with a NuGet package I'd like to use (https://www.nuget.org/packages/Alea/) which I think is only supported for PCL libraries right now, and was wondering if there was a workaround available.\r\n\r\nI can install the package just fine, but its assemblies aren't visible in the drop-down list of the dependencies, and I don't have any of the namespaces in the project:\r\n\r\n![image](https://user-images.githubusercontent.com/10199417/34453242-1c63ff6e-ed4f-11e7-9bc0-dd75319bff04.png)\r\n\r\nI tried to manually link the net45 binaries by modifying the .csproj file for the library, like this:\r\n\r\n```xml\r\n<ItemGroup>\r\n    <Reference Include=\"Alea\">\r\n        <HintPath>..\\..\\..\\..\\.nugget.packages\\alea\\3.0.4\\lib\\net45\\alea.dll</HintPath>\r\n    </Reference>\r\n    <!-- Same for Alea.Parallel -->\r\n</ItemGroup>```\r\n\r\nAnd this actually **works perfectly fine** - I can use the library both from a .NET Core 2.0 application, and if I use it from a .NET Framework application (where those GPU libraries are originally supposed to work), I can also use the code from that package just fine.\r\n\r\nThe problem is that this workaround is only looking for the net45 binaries, and I'm not even sure they'd get installed in that path automatically regardless of the PC building the solution.\r\n\r\nMy question is:\r\n\r\n> Since the library itself works just fine in a .NET Standard 2.0 library, is there a way to (manually) make it so that these missing binaries are correctly linked/referenced and added to the project, so that their namespaces are available when coding in the project?\r\n\r\nSee the original Stack Overflow question here: https://stackoverflow.com/questions/48030077/alea-gpu-on-net-standard-2-0-will-this-workaround-work\r\n\r\nThank you for your help!\r\n"},{"Id":"7036730892","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:30:41","Actor":"Styxxy","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/614","RelatedDescription":"Closed issue \"DocumentationFile outputs both to project root as in output folder (when only specifying filename)\" (#614) at dotnet/standard","RelatedBody":"When specifying only a filename in the DocumentationFile in the csproj, the generated xml documentation file will be outputted to both the root of the project as well as in the output path.\r\n\r\nGiven following csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;netstandard2.0</TargetFrameworks>\r\n    <DocumentationFile>my_library.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd we have one class in our class libary:\r\n```cs\r\nnamespace my_library\r\n{\r\n    /// <summary>\r\n    /// Test\r\n    /// </summary>\r\n    public class Test\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nThe documentation file is generated in following directories:\r\n\r\n- project-root\r\n- project-root/bin/$(Configuration)/net47\r\n- project-root/bin/$(Configuration)/netstandard2.0\r\n\r\nIn the _old_ csproj format, the documentation file would be only outputted to the output folder."},{"Id":"7036717658","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:26:06","Actor":"Styxxy","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/614","RelatedDescription":"Opened issue \"DocumentationFile outputs both to project root as in output folder (when only specifying filename)\" (#614) at dotnet/standard","RelatedBody":"When specifying only a filename in the DocumentationFile in the csproj, the generated xml documentation file will be outputted to both the root of the project as well as in the output path.\r\n\r\nGiven following csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;netstandard2.0</TargetFrameworks>\r\n    <DocumentationFile>my_library.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd we have one class in our class libary:\r\n```cs\r\nnamespace my_library\r\n{\r\n    /// <summary>\r\n    /// Test\r\n    /// </summary>\r\n    public class Test\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nThe documentation file is generated in following directories:\r\n\r\n- project-root\r\n- project-root/bin/$(Configuration)/net47\r\n- project-root/bin/$(Configuration)/netstandard2.0\r\n\r\nIn the _old_ csproj format, the documentation file would be only outputted to the output folder."},{"Id":"7036709386","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:23:14","Actor":"0xF6","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/612","RelatedDescription":"Closed issue \"Merge Library?\" (#612) at dotnet/standard","RelatedBody":"Now to merge.NET Standard libraries into one library?"},{"Id":"7035640765","Type":"IssuesEvent","CreatedAt":"2017-12-28T01:54:35","Actor":"rexcfnghk","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/613","RelatedDescription":"Opened issue \"Issue with referencing a .NET Standard 2.0 project with an classic ASP.NET project targeting .NET Framework 4.6.1\" (#613) at dotnet/standard","RelatedBody":"I refer to my original issue submitted to Autofac [here](https://github.com/autofac/Autofac.WebApi/issues/32). I originally thought it was an Autofac issue but turns out it is not as I can reproduce it without Autofac.\r\n\r\n# Summary\r\n`MissingMethodException` is thrown when resolving for a component through a delegate that returns a type defined in a .NET Standard 2.0 library, under the context of an classic ASP.NET Web API project.\r\n\r\n# Steps to reproduce\r\n1. Create two projects as follows\r\n    - A .NET Standard 2.0 library\r\n    - A classic ASP.NET Web API project targeting .NET Framework 4.6.1\r\n2. Define an interface and an implementing class pair in the .NET standard library as follows:\r\n```c#\r\npublic interface IFoo { void DoSomething(); }\r\n\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo(HttpClient httpClient) => _httpClient = httpClient;\r\n\r\n    public void DoSomething() { /* No-op */ }\r\n}\r\n```\r\n3. Reference the .NET Standard library from the ASP.NET Web API project\r\n4. Implement a dummy controller that takes `IFoo` as a constructor parameter, like:\r\n```c#\r\npublic class DummyController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public DummyController() => _foo = new Foo(new HttpClient);\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\nNote that I have a parameterless contructor for `DummyController`.\r\n6. Run the ASP.NET Web API application and visit `/api/dummy/test`.\r\n\r\n# Expected behaviour\r\n`\"a\"` is returned.\r\n\r\n# Actual behaviour\r\n`Autofac.Core.DependencyResolutionException` is thrown.\r\n\r\nStack trace:\r\n<pre>\r\nAn error has occurred.An error occurred when trying to create a controller of type 'DummyController'. Make sure that the controller has a parameterless public constructor.System.InvalidOperationException   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n   at System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(HttpRequestMessage request)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.<SendAsync>d__1.MoveNext()An error has occurred.Method not found: 'Void AutofacNetStandara.Library.Foo..ctor(System.Net.Http.HttpClient)'.System.MissingMethodException   at AutofacNetStandard.Web.Controllers.DummyController..ctor()\r\n   at lambda_method(Closure )\r\n   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n</pre>\r\n---------\r\n# Additional things I have tried\r\n1. Reference the same .NET Standard project from a .NET Framework 4.6.1 **Console** project, with the `Main` method initailizing `Foo`:\r\n```c#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var foo = new Foo(new HttpClient());\r\n\r\n        Console.ReadLine();\r\n    }\r\n}\r\n```\r\nNo runtime exceptions are thrown and `foo` variable is initialised correctly.\r\n2. Moving the initialising of `Foo._httpClient` to the default constructor of `Foo` and call the empty constructor from the web project instead, like:\r\n```c#\r\n// In the .NET Standard 2.0 library\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo() => _httpClient = new HttpClient();\r\n\r\n    public void DoSomething() { }\r\n}\r\n\r\n// In the ASP.NET project, targeting .NET 4.6.1\r\npublic class ValuesController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public ValuesController() => _foo = new Foo();\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\n`\"a\"` is returned as expected when visiting the route `/api/values/test`.\r\n"},{"Id":"7035205864","Type":"IssuesEvent","CreatedAt":"2017-12-27T21:53:55","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/608","RelatedDescription":"Closed issue \"Proposal: add GetEnvironmentVariableAsBool to netstandard\" (#608) at dotnet/standard","RelatedBody":"Currently the dotnet cli has a function which is located at: [src/Microsoft.DotNet.Cli.Utils/EnvironmentProvider.cs Line 106](https://github.com/dotnet/cli/blob/fffe3142ad8043743d83885df2166fd2f80dceca/src/Microsoft.DotNet.Cli.Utils/EnvironmentProvider.cs#L106)\r\n\r\nI think it would be useful to consider this functionality for inclusion into the `System.Environment` namespace.\r\n\r\nThis issue is to raise the idea and garner discussion. I do not believe it would conflict with anything already present, though I've not performed a thorough examination to prove it."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7043377104","Type":"PullRequestEvent","CreatedAt":"2017-12-31T04:42:34","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26106","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26031-01, preview1-26031-01, preview1-26030-02, respectively (master)\" (#26106) at dotnet/corefx","RelatedBody":""},{"Id":"7043214580","Type":"PullRequestEvent","CreatedAt":"2017-12-31T01:17:43","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26106","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26031-01, preview1-26030-02, respectively (master)\" (#26106) at dotnet/corefx","RelatedBody":""},{"Id":"7042786529","Type":"IssuesEvent","CreatedAt":"2017-12-30T18:09:47","Actor":"markekraus","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26105","RelatedDescription":"Opened issue \"\"Function not Implemented\" on FileInfo.MoveTo() when source and destination File System are both exFAT\" (#26105) at dotnet/corefx","RelatedBody":"`FileInfo.MoveTo()` produces a `System.IO.IOException` excapetion with the `Function not implemented` method when the source file and destination file are both on an exFAT partition.\r\n\r\nRepro Program.cs code: \r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\n\r\nnamespace ExFATRepro\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            FileInfo file = new FileInfo(args[0]);\r\n            file.MoveTo(args[1]);\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nPrep:\r\n\r\n```bash\r\ndd if=/dev/zero of=~/testfs count=40960\r\nmkfs.exfat ~/testfs\r\nsudo mkdir /mnt/testfs\r\nsudo mount ~/testfs /mnt/testfs\r\necho test > /mnt/testfs/testfile\r\n```\r\n\r\nRepro actions:\r\n\r\n```bash\r\nsduo dotnet run /mnt/testfs/testfile /mnt/testfs/testfile2\r\n```\r\n\r\nResult:\r\n\r\n```none\r\nUnhandled Exception: System.IO.IOException: Function not implemented\r\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\r\n   at System.IO.FileInfo.MoveTo(String destFileName)\r\n   at ExFATRepro.Program.Main(String[] args) in /home/mark/github/ExFATRepro/Program.cs:line 11\r\n```\r\n\r\nAdditional testing shows that if the source or destination is on another FS it works. for example, \r\n\r\n```bash\r\necho test > /tmp/testfile\r\nsudo ~/.dotnet/dotnet run /tmp/testfile /mnt/testfs/testfile2\r\nsudo ~/.dotnet/dotnet run /mnt/testfs/testfile2 /tmp/testfile\r\n```\r\n\r\nThat works without issue."},{"Id":"7042629351","Type":"PullRequestEvent","CreatedAt":"2017-12-30T15:52:57","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26102","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26030-02, preview1-26030-02, preview1-26029-02, respectively (master)\" (#26102) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7043341765","Type":"IssuesEvent","CreatedAt":"2017-12-31T03:55:53","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23983","RelatedDescription":"Opened issue \"Two IDE diagnostic ids use the same value.\" (#23983) at dotnet/roslyn","RelatedBody":"        public const string ValidateFormatStringDiagnosticID = \"IDE0035\";\r\n        public const string RemoveUnreachableCodeDiagnosticId = \"IDE0035\";\r\n"},{"Id":"7043239244","Type":"IssuesEvent","CreatedAt":"2017-12-31T01:48:39","Actor":"paul1956","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23982","RelatedDescription":"Opened issue \"Refactoring VB Member Name can be simplified (IDE0037) refactoring causes error BC30985\" (#23982) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVS 2017 15.5.2\r\n**Steps to Reproduce**:\r\nWith the code below the IDE shows an information message and offers a refactoring (Use Inferred Member Name)\r\n```\r\nDim body As BlockSyntax = SyntaxFactory.Block(node.Statements.SelectMany(Function(s As VBSyntax.StatementSyntax) s.Accept(New MethodBodyVisitor(mSemanticModel, Me, withBlockTempVariableNames) With {.isIterator = isIterator})))\r\n```\r\n2. Accept the refactoring, new code below gets error BC30985\tName of field or property being initialized in an object initializer must start with '.'.\r\n```\r\n Dim body As BlockSyntax = SyntaxFactory.Block(node.Statements.SelectMany(Function(s As VBSyntax.StatementSyntax) s.Accept(New MethodBodyVisitor(mSemanticModel, Me, withBlockTempVariableNames) With {isIterator})))\r\n\r\n```\r\n\r\n**Expected Behavior**:\r\nDon't offer refactoring or don't give the error after accepting it\r\n**Actual Behavior**:\r\nRefactoring offered and when accepted you get an error."},{"Id":"7043060231","Type":"PullRequestEvent","CreatedAt":"2017-12-30T22:22:48","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23981","RelatedDescription":"Opened pull request \"Nullability variance in flow analysis\" (#23981) at dotnet/roslyn","RelatedBody":""},{"Id":"7043013358","Type":"IssuesEvent","CreatedAt":"2017-12-30T21:38:17","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23968","RelatedDescription":"Closed issue \"GoToDefinition on AddAwaitableUsageText override fails\" (#23968) at dotnet/roslyn","RelatedBody":"In Roslyn:\r\n1. find one of the `AddAwaitableUsageText` overrides\r\n2. invoke GTD on the `override` keyword\r\n\r\nThis fails. But I expected to navigate to the abstract `AbstractSymbolDescriptionBuilder.AddAwaitableUsageText`.\r\n\r\nRelates to PR https://github.com/dotnet/roslyn/pull/22963 which added this functionality.\r\n\r\nUpdate:\r\nI'm able to repro in Version 15.6.0 Preview 1.1 (VisualStudio.15.Preview/15.6.0-pre.1.1+27205.2004). But when I deploy dev bits to RoslynDev hive, things work as expected there."},{"Id":"7042937848","Type":"IssuesEvent","CreatedAt":"2017-12-30T20:26:31","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23834","RelatedDescription":"Closed issue \"Default value for Int32 optional parameter is disregarded when Select is used with method group \" (#23834) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\ndotnet 2.0.3\r\n\r\n**Steps to Reproduce**:\r\n```\r\ndotnet new console\r\ncurl https://gist.githubusercontent.com/alextercete/bab183136285122631b430d163c696ec/raw/05c014058c809264d6c44a966fd5d2af64d25198/Program.cs > Program.cs\r\ndotnet run\r\n```\r\nAlternatively, head to the [relevant Gist](https://gist.github.com/alextercete/bab183136285122631b430d163c696ec).\r\n\r\n**Expected Behavior**:\r\nEither of the following:\r\n1. `Program.cs` should fail to compile\r\n1. The build should show a warning\r\n1. The default value for the optional parameter should be used\r\n\r\n**Actual Behavior**:\r\nThe default value for the parameter is disregarded and the element index is used instead. I understand [the overload of `Select`](https://msdn.microsoft.com/en-us/library/bb534869(v=vs.110).aspx) is being used in this case, but I believe this behaviour can be misleading (speaking from experience 😉 )."},{"Id":"7042924980","Type":"PullRequestEvent","CreatedAt":"2017-12-30T20:14:48","Actor":"kzu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23980","RelatedDescription":"Opened pull request \"Remove workaround that's already included in MSBuild 15.5\" (#23980) at dotnet/roslyn","RelatedBody":"See https://github.com/Microsoft/msbuild/commit/052ad30f8f706a87e9fa9431fda1ec9c0b73893b\r\n\r\nI suppose this would need to wait until all CI systems use 15.5+ though? But since it's already RTM, maybe all checks will pass? We'll see ;)"},{"Id":"7042883255","Type":"IssuesEvent","CreatedAt":"2017-12-30T19:36:40","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23979","RelatedDescription":"Opened issue \"Deal with left-over PROTOTYPE comment in ExtractLocalFunctionCallWithCapture\" (#23979) at dotnet/roslyn","RelatedBody":"I'll remove this marker in upcoming PR. This is a follow-up issue.\r\n\r\n```C#\r\n        [Fact]\r\n        [WorkItem(15532, \"https://github.com/dotnet/roslyn/issues/15532\")]\r\n        public async Task ExtractLocalFunctionCallWithCapture()\r\n        {\r\n            // PROTOTYPE: doesn't properly extract local function\r\n            await TestInRegularAndScriptAsync(@\"\r\nclass C\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        bool Local() => args == null;\r\n        [|Local();|]\r\n    }\r\n}\", @\"\r\nclass C\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        bool Local() => args == null;\r\n        {|Rename:NewMethod|}(args);\r\n    }\r\n\r\n    private static void NewMethod(string[] args)\r\n    {\r\n        {|Warning:Local();|}\r\n    }\r\n}\");\r\n        }\r\n```"},{"Id":"7042880989","Type":"PullRequestEvent","CreatedAt":"2017-12-30T19:34:35","Actor":"Suchiman","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23978","RelatedDescription":"Opened pull request \"Call the correct (non boxing) Equals method\" (#23978) at dotnet/roslyn","RelatedBody":"It appears this was using `base.Equals(object)` instead of `Equals(UsedNamespaceOrType)` inadvertently, type checking and unboxing the arg just to box again and call the overridden base method.\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7042857588","Type":"IssuesEvent","CreatedAt":"2017-12-30T19:13:49","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/1545","RelatedDescription":"Closed issue \"DataFlowAnalysis.Captured should be separated into CapturedInside and CapturedOutside\" (#1545) at dotnet/roslyn","RelatedBody":"The type `DataFlowAnalysis`, which results from `SemanticModel.AnalyzeDataFlow`, currently ignores the region and computes the capture set for the entire enclosing method. It should be region-sensitive like the other methods in `DataFlowAnalysis`, and be separated into `CapturedInside` and `CapturedOutside`.\n\n/cc @heejaechang @AnthonyDGreen @tmat @VSadov @AlekseyTs \n\n<!---\n@huboard:{\"order\":79.6875,\"milestone_order\":1545.0,\"custom_state\":\"\"}\n-->\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7043339044","Type":"PullRequestEvent","CreatedAt":"2017-12-31T03:52:18","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5151","RelatedDescription":"Merged pull request \"Implement cpobj opcode for wasm\" (#5151) at dotnet/corert","RelatedBody":"Implements the ILToWebAssembly.ImportCpObj method using an LLVM load and\r\nstore.\r\n\r\nFix #4548"},{"Id":"7043339042","Type":"IssuesEvent","CreatedAt":"2017-12-31T03:52:18","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4548","RelatedDescription":"Closed issue \"Implement cpobj opcode\" (#4548) at dotnet/corert","RelatedBody":"Implement the cpobj opcode, which copies a value type from one address to another. The method to fill in is:\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L914"},{"Id":"7042866054","Type":"PullRequestEvent","CreatedAt":"2017-12-30T19:21:14","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5172","RelatedDescription":"Opened pull request \"Implemented Array instructions for WebAssembly\" (#5172) at dotnet/corert","RelatedBody":"Fix #4547, #4546, #4545, #4544, #4540 \r\nThis depends on #5143 + some modifications on top of that to unify the native callable method name/MethodDesc. I was hoping to get the review started.\r\n\r\nThis is a little bit bigger than I was hoping for, I wanted to make 3 pull requests (Array instructions, managed runtime allocation (not pinvoke), managed runtime boxing) but they all ended up depending on each other.  \r\n\r\nI'm not entirely certain that I'm doing the internal calling convention stuff right, and I ended up having to ensure only one MethodDesc is ever used for pinvoked methods.\r\n"},{"Id":"7042699417","Type":"PullRequestEvent","CreatedAt":"2017-12-30T16:54:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5156","RelatedDescription":"Merged pull request \"Cleanup ifdefs\" (#5156) at dotnet/corert","RelatedBody":""},{"Id":"7042672575","Type":"PullRequestEvent","CreatedAt":"2017-12-30T16:30:47","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5171","RelatedDescription":"Opened pull request \"Add diagnostic messages to the build targets\" (#5171) at dotnet/corert","RelatedBody":"Two things:\r\n* Running ILC takes a while but we don't print any information about it. Print a message.\r\n* Invoking the publish from a clean command promt is something that will happen very often I assume. Make sure the failure message is more prescriptive.\r\n\r\nWe'll want to make these messages localizable at some point..."},{"Id":"7042251456","Type":"PullRequestEvent","CreatedAt":"2017-12-30T09:31:08","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5170","RelatedDescription":"Merged pull request \"Update RyuJIT and System.Globalization.a to latest\" (#5170) at dotnet/corert","RelatedBody":""},{"Id":"7042168949","Type":"PullRequestEvent","CreatedAt":"2017-12-30T07:56:01","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5170","RelatedDescription":"Opened pull request \"Update RyuJIT and System.Globalization.a to latest\" (#5170) at dotnet/corert","RelatedBody":""},{"Id":"7042102129","Type":"IssuesEvent","CreatedAt":"2017-12-30T06:39:21","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4516","RelatedDescription":"Closed issue \"Fix P/Invokes that return void\" (#4516) at dotnet/corert","RelatedBody":"WebAssembly P/Invokes are currently hard-coded to expect the P/Invoke to return a value. The point below in ImportRawPinvoke should be fixed to handle ones that don't return anything.\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L626"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7043001406","Type":"IssuesEvent","CreatedAt":"2017-12-30T21:27:00","Actor":"darrensteadman","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1679","RelatedDescription":"Reopened issue \"Workflow designer fails to load when referencing netstandard 2.0\" (#1679) at dotnet/sdk","RelatedBody":"I previously reported issue #1522 when I was having problems getting workflows to compile when referencing netstandard 2.0. The work around documented solved that problem for me however I've now gone to modify some of the workflows in my project and when I try to load the designer I get the following.\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n   at System.Signature.GetSignature(Void* pCorSig, Int32 cCorSig, RuntimeFieldHandleInternal fieldHandle, IRuntimeMethodInfo methodHandle, RuntimeType declaringType)\r\n   at System.Reflection.RuntimeMethodInfo.FetchNonReturnParameters()\r\n   at System.Reflection.RuntimeMethodInfo.GetParametersNoCopy()\r\n   at System.Reflection.RuntimePropertyInfo.GetIndexParametersNoCopy()\r\n   at System.Reflection.RuntimePropertyInfo.GetIndexParameters()\r\n   at System.Xaml.Schema.TypeReflector.GetNonIndexerProperty(String name)\r\n   at System.Xaml.Schema.TypeReflector.LookupProperty(String name)\r\n   at System.Xaml.XamlType.LookupMember(String name, Boolean skipReadOnlyCheck)\r\n   at System.Xaml.XamlType.GetMember(String name)\r\n   at MS.Internal.Xaml.XamlContext.GetDottedProperty(XamlType tagType, String tagNamespace, XamlPropertyName propName, Boolean tagIsRoot)\r\n   at MS.Internal.Xaml.Parser.XamlScanner.ReadPropertyElement(XamlPropertyName name, XamlType tagType, String tagNamespace, Boolean isEmptyTag)\r\n   at MS.Internal.Xaml.Parser.XamlScanner.ReadElement()\r\n   at MS.Internal.Xaml.Parser.XamlScanner.ProcessCurrentXmlNode()\r\n   at MS.Internal.Xaml.Parser.XamlScanner.DoXmlRead()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_NonemptyPropertyElement>d__11.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyElement>d__9.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementContent>d__12.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyContent>d__13.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_NonemptyPropertyElement>d__11.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyElement>d__9.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementContent>d__12.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyContent>d__13.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_NonemptyPropertyElement>d__11.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyElement>d__9.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementContent>d__12.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyContent>d__13.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_NonemptyPropertyElement>d__11.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyElement>d__9.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementContent>d__12.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyContent>d__13.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_NonemptyPropertyElement>d__11.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_PropertyElement>d__9.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementContent>d__12.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementContent>d__12.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_ElementBody>d__8.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<P_Element>d__5.MoveNext()\r\n   at MS.Internal.Xaml.Parser.XamlPullParser.<Parse>d__4.MoveNext()\r\n   at MS.Internal.Xaml.NodeStreamSorter.MoveNext()\r\n   at System.Xaml.XamlXmlReader.Read()\r\n   at System.Activities.Debugger.XamlDebuggerXmlReader.Read()\r\n   at System.Activities.XamlIntegration.DynamicActivityXamlReader.Read()\r\n   at Microsoft.Activities.Presentation.Xaml.ActivityTemplateFactoryBuilderReader.Read()\r\n   at Microsoft.Activities.Presentation.Xaml.ViewStateXamlHelper.StripViewStateElement(XamlReader inputReader, Dictionary`2& viewStateInfo, Dictionary`2& viewStateSourceLocationMap)\r\n   at Microsoft.Activities.Presentation.Xaml.ViewStateXamlHelper.ConvertViewStateToAttachedProperties(XamlReader inputReader, ViewStateIdManager idManager, Dictionary`2& viewStateSourceLocationMap)\r\n   at Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper.DeserializeString(String text, DeserializationMode mode, IList`1& loadErrors, Dictionary`2& sourceLocations)\r\n   at Microsoft.Activities.Presentation.Xaml.WorkflowDesignerXamlHelper.DeserializeString(String text, IList`1& loadErrors, Dictionary`2& sourceLocations)\r\n   at System.Activities.Presentation.WorkflowDesigner.Load()\r\n\r\nWRN: Assembly binding logging is turned OFF.\r\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\nNote: There is some performance penalty associated with assembly bind failure logging.\r\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n\r\nHas this been fixed with the PRs to fix my original bug? Does anyone have a work around I could use for the moment to get myself going again?"},{"Id":"7042650111","Type":"IssuesEvent","CreatedAt":"2017-12-30T16:11:11","Actor":"orloffm","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1834","RelatedDescription":"Opened issue \"Cannot publish core console app + core app library tests\" (#1834) at dotnet/sdk","RelatedBody":"The solution is here: https://github.com/orloffm/failingpublish\r\n\r\nThe first project is a `netcoreapp2.0` `exe`, the second is a test `netcoreapp2.0` project for it. The solution `dotnet build`s, but when I do\r\n\r\n    dotnet publish -c Release --self-contained -r win-x64\r\n\r\nI get the following:\r\n\r\n    Microsoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n      Restore completed in 43.37 ms for C:\\dev\\failing_build\\a\\a.csproj.\r\n      Restore completed in 75.49 ms for C:\\dev\\failing_build\\a.tests\\a.tests.csproj.\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.3\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.RuntimeIdentifierInference.targets(116,5): error : It is not supported to build or publish a self-contained application without specifying a RuntimeIdentifier.  Please either specify a RuntimeIdentifier or set SelfContained to false. [C:\\dev\\failing_build\\a\\a.csproj]\r\n      a -> C:\\dev\\failing_build\\a\\bin\\Release\\netcoreapp2.0\\win-x64\\a.dll\r\n      a -> C:\\dev\\failing_build\\a\\bin\\Release\\netcoreapp2.0\\win-x64\\publish\\\r\n\r\nIf I remove the test project from the solution, it works fine:\r\n\r\n    Microsoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n      Restore completed in 43.62 ms for C:\\dev\\failing_build\\a\\a.csproj.\r\n      a -> C:\\dev\\failing_build\\a\\bin\\Release\\netcoreapp2.0\\win-x64\\a.dll\r\n      a -> C:\\dev\\failing_build\\a\\bin\\Release\\netcoreapp2.0\\win-x64\\publish\\\r\n\r\nI expect it to work, as this is almost a copy of a https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test, but with the main project switched to `netcoreapp2.0`."},{"Id":"7039445938","Type":"IssuesEvent","CreatedAt":"2017-12-29T06:42:10","Actor":"KirillOsenkov","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1833","RelatedDescription":"Opened issue \"Invalid TrimEnd function usage in Microsoft.NET.TargetFrameworkInference.targets#L51\" (#1833) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/sdk/blob/7fc8f64b89f5a69bb8043bae814b314b6ce6841f/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.TargetFrameworkInference.targets#L51\r\n\r\n`$(TargetFramework.TrimEnd('.0123456789'))`\r\n\r\nMSBuild Expander doesn't like this TrimEnd"},{"Id":"7033942081","Type":"IssuesEvent","CreatedAt":"2017-12-27T13:59:08","Actor":"skarllot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1832","RelatedDescription":"Opened issue \"TargetFramework for Xamarin platforms\" (#1832) at dotnet/sdk","RelatedBody":"I cannot set `TargetFramework` to `monoandroid10`, `xamarinios10` or `uap10.0`.  The following errors are throw:\r\n\r\n```bash\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'xamarinios10' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'monoandroid10' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'uap10.0' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\n```\r\n\r\nThe following configuration is being used:\r\n\r\n```xml\r\n<TargetFrameworks>netstandard1.3;net46;monoandroid10;xamarinios10;uap10.0</TargetFrameworks>\r\n```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608391577600","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/kicrnl8tNJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"943234846079496192","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/Xm2utapspg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null},{"Id":"942039735144452097","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/UjBOoFqFp5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":18,"RawContent":null},{"Id":"941295101212549121","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/qJHWFDaUGf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2017-12-31T05:30:22.4459559Z","RunDurationInMilliseconds":8848}