{"Data":{"Blog":{"FeedItems":[{"Title":"Porting desktop apps to .NET Core","PublishedOn":"2019-05-28T16:00:55+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Since I&#8217;ve been working with the community on porting desktop applications from .NET Framework to .NET Core, I&#8217;ve noticed that there are two camps of folks: some want a very simple and...","Href":"https://devblogs.microsoft.com/dotnet/porting-desktop-apps-to-net-core/","RawContent":null},{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":37,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9776293314","Type":"PullRequestEvent","CreatedAt":"2019-06-07T04:48:01","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25019","RelatedDescription":"Opened pull request \"Populate AppDomain.*Resolve event sender\" (#25019) at dotnet/coreclr","RelatedBody":"This was a regression since .NET Core 2.2 where the sender was populated. Probably removed accidentally during AppDomain refactoring."},{"Id":"9775797532","Type":"PullRequestEvent","CreatedAt":"2019-06-07T01:54:30","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25012","RelatedDescription":"Merged pull request \"Add [NotNull] to syncLock parameter of EnsureInitialized\" (#25012) at dotnet/coreclr","RelatedBody":"cc: @dotnet/nullablefc "},{"Id":"9775744099","Type":"IssuesEvent","CreatedAt":"2019-06-07T01:35:40","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25018","RelatedDescription":"Closed issue \"Internal CLR error when running `dotnet tool --help`\" (#25018) at dotnet/coreclr","RelatedBody":"I get the following error when running `dotnet tool --help`. The `--info` is also below. We can loop in @wli3 about the CLI part on this, but it seems that \"Internal Error\" should not happen regardless: \r\n\r\n```\r\n~/repos/zurich $ dotnet tool --help\r\nUsage: dotnet tool [options] [command]\r\n\r\nOptions:\r\n  -h, --help   Show command line help.\r\n\r\nCommands:\r\n  install <PACKAGE_ID>     Install global or local tool. Local tools are added to manifest and restored.\r\n  uninstall <PACKAGE_ID>   Uninstall a global tool or local tool.\r\n  update <PACKAGE_ID>      Update a global tool.\r\n  list                     List tools installed globally or locally.\r\n  run <COMMAND_NAME>       Run local tool.\r\n  restore                  Restore tools defined in the local tool manifest.\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties.GetGatewayAddresses(Int32)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties..ctor(System.Net.NetworkInformation.BsdNetworkInterface, Int32)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface..ctor(System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetOrCreate(System.Collections.Generic.Dictionary`2<System.String,System.Net.NetworkInformation.BsdNetworkInterface>, System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface+<>c__DisplayClass5_0.<GetBsdNetworkInterfaces>b__2(System.String, LinkLayerAddressInfo*)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n```\r\n\r\n```\r\n~/repos/zurich $ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009812 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009988 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27218-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```"},{"Id":"9775641950","Type":"IssuesEvent","CreatedAt":"2019-06-07T01:00:37","Actor":"KathleenDollard","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25018","RelatedDescription":"Opened issue \"Internal CLR error when running `dotnet tool --help`\" (#25018) at dotnet/coreclr","RelatedBody":"I get the following error when running `dotnet tool --help`. The `--info` is also below. We can loop in @wli3 about the CLI part on this, but it seems that \"Internal Error\" should not happen regardless: \r\n\r\n```\r\n~/repos/zurich $ dotnet tool --help\r\nUsage: dotnet tool [options] [command]\r\n\r\nOptions:\r\n  -h, --help   Show command line help.\r\n\r\nCommands:\r\n  install <PACKAGE_ID>     Install global or local tool. Local tools are added to manifest and restored.\r\n  uninstall <PACKAGE_ID>   Uninstall a global tool or local tool.\r\n  update <PACKAGE_ID>      Update a global tool.\r\n  list                     List tools installed globally or locally.\r\n  run <COMMAND_NAME>       Run local tool.\r\n  restore                  Restore tools defined in the local tool manifest.\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties.GetGatewayAddresses(Int32)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties..ctor(System.Net.NetworkInformation.BsdNetworkInterface, Int32)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface..ctor(System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetOrCreate(System.Collections.Generic.Dictionary`2<System.String,System.Net.NetworkInformation.BsdNetworkInterface>, System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface+<>c__DisplayClass5_0.<GetBsdNetworkInterfaces>b__2(System.String, LinkLayerAddressInfo*)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n```\r\n\r\n```\r\n~/repos/zurich $ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009812 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009988 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27218-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9771317475","Type":"PullRequestEvent","CreatedAt":"2019-06-06T13:17:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1233","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1233) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:50 AM\r\n- **Commit**: 71aec681dd1247979e7956372abae8bbc02c9546\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.1\r\n\r\n"},{"Id":"9771241030","Type":"PullRequestEvent","CreatedAt":"2019-06-06T13:07:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1233","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1233) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:50 AM\r\n- **Commit**: 71aec681dd1247979e7956372abae8bbc02c9546\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.1\r\n\r\n"},{"Id":"9770876400","Type":"PullRequestEvent","CreatedAt":"2019-06-06T12:14:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1232","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1232) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19305.13\r\n\r\n"},{"Id":"9770813441","Type":"PullRequestEvent","CreatedAt":"2019-06-06T12:04:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1232","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1232) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19305.13\r\n\r\n"},{"Id":"9768417006","Type":"PullRequestEvent","CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Merged pull request \"Add HttpResponseMessage.TrailingHeaders\" (#1219) at dotnet/standard","RelatedBody":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz "},{"Id":"9768416990","Type":"IssuesEvent","CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1144","RelatedDescription":"Closed issue \"Add HttpResponseMessage.TrailingHeaders to netstandard\" (#1144) at dotnet/standard","RelatedBody":"https://github.com/dotnet/corefx/blob/4fa6319fb590b046ba4c962088b960a31749f245/src/System.Net.Http/src/System/Net/Http/HttpResponseMessage.cs#L119-L130\r\n\r\nDiscussion: https://github.com/dotnet/corefx/issues/34912#issuecomment-482777355"},{"Id":"9763173564","Type":"PullRequestEvent","CreatedAt":"2019-06-05T13:16:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1231) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n"},{"Id":"9763098158","Type":"PullRequestEvent","CreatedAt":"2019-06-05T13:06:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1231) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9776405154","Type":"PullRequestEvent","CreatedAt":"2019-06-07T05:24:41","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38326","RelatedDescription":"Opened pull request \"Added CopyToAsync(PipeWriter)\" (#38326) at dotnet/corefx","RelatedBody":"- Reuse existing CopyToAsync routine to implement the PipeWriter overload.\r\n- Added tests for PipeWriter overload\r\n\r\nFixes #35513"},{"Id":"9776040167","Type":"PullRequestEvent","CreatedAt":"2019-06-07T03:16:15","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38251","RelatedDescription":"Merged pull request \"ProcessNameMatchesScriptName: add missing Fact attribute\" (#38251) at dotnet/corefx","RelatedBody":"The test is no longer running due to removing the `ConditionalFact` in https://github.com/dotnet/corefx/pull/38175."},{"Id":"9776035956","Type":"PullRequestEvent","CreatedAt":"2019-06-07T03:14:44","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38304","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#38304) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190605.02\r\n- **Date Produced**: 6/6/2019 4:20 AM\r\n- **Commit**: 2e54d1f6a6a9126126d6c9f8d730489892acf730\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27805-02\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview7-27805-02\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview7-27805-02\r\n\r\n"},{"Id":"9776027711","Type":"PullRequestEvent","CreatedAt":"2019-06-07T03:11:52","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38067","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert,coreclr\" (#38067) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo @jkotas @MarcoRossignoli @marek-safar @VSadov @stephentoub"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9776394619","Type":"PullRequestEvent","CreatedAt":"2019-06-07T05:21:18","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36235","RelatedDescription":"Opened pull request \"Merge master to features/param-nullchecking\" (#36235) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9776394466","Type":"PullRequestEvent","CreatedAt":"2019-06-07T05:21:15","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36234","RelatedDescription":"Opened pull request \"Merge master-vs-deps to features/razorSupport2\" (#36234) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9776394208","Type":"PullRequestEvent","CreatedAt":"2019-06-07T05:21:10","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36233","RelatedDescription":"Opened pull request \"Merge master to features/lspSupport\" (#36233) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9776393986","Type":"PullRequestEvent","CreatedAt":"2019-06-07T05:21:07","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36232","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#36232) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9775724449","Type":"PullRequestEvent","CreatedAt":"2019-06-07T01:28:54","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7496","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7496) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9775712440","Type":"PullRequestEvent","CreatedAt":"2019-06-07T01:24:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7494","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7494) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"9775548003","Type":"PullRequestEvent","CreatedAt":"2019-06-07T00:29:01","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7495","RelatedDescription":"Opened pull request \"Port GC changes from coreclr - 13\" (#7495) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7478\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168):**\r\n- https://github.com/dotnet/coreclr/commit/a1404cafbe1cd15a5c0cfbd4995ad97694b708bd (manual port)\r\n- https://github.com/dotnet/coreclr/commit/00ab7387d849da889ebf6aac432ec989091bacec (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00a5ee589b565ebcd068c5851315a997848ed98c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/d82fc2062925ced3fb5c479ff8db7ef61cc4f290 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/35d424404f9930620204f3cc351992c0d9bd3b8a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/cd1f0d9ad32cacd9d2ac2998f368bc196c40754a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73a0bc0d549d1c8e41261891dcc2974fb8024556 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d1bb5271192ddac3d0d31ee6168afdc3c58f55da (manual port)\r\n- https://github.com/dotnet/coreclr/commit/b67d2fa8fc8cf5b8c41f5c34b1abe31e704386c4 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/af0c1f287d31ca3a641151df60baa7371635f508 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/340b5708ce38230f1af66acf832547996aa0b2ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3ff82040ea7be4f8c260b237690f2f0553c7cac6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6fe7effad7fddf8d5dc0b3ac3d5be5ec80e158ff (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2bf55bc5ca8b09dd26e32a9ee259ab22fb69806b (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8d6583e38f4e9b00ec21666225760a0df97afaec (skipped, reverted in next commit)\r\n- https://github.com/dotnet/coreclr/commit/53e0cce55692cd568a1dce218a2089146aa8e4f8 (skipped, reverts prior commit)\r\n- https://github.com/dotnet/coreclr/commit/b3859ce4debbeab0c0a04b8a519eded46bf67517 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/171837ddfef844e0f2952b9ce2df5af6bb65848a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/488d2a70ba59c58b26aa3f4f988a42f6b8927146 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4a6753dcacf44df6a8e91b91029e4b7a4f12d917 (skipped, cgroups changes)\r\n- https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657 (gc only port, omitted changes)"},{"Id":"9775264446","Type":"PullRequestEvent","CreatedAt":"2019-06-06T23:08:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7494","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7494) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9774416108","Type":"PullRequestEvent","CreatedAt":"2019-06-06T20:24:42","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7493","RelatedDescription":"Opened pull request \"Preparatory change for constrained call changes pt.1: MethodEntrypoint\" (#7493) at dotnet/corert","RelatedBody":"This is one of the problems I uncovered during the constrained call\r\nwork and I believe it merits separate treatment. Historically\r\nthe implementation of MethodEntrypoint was naturally one of the\r\noldest CPAOT bits and we had to iterate on its exact functionality.\r\n\r\nThe pre-existing version prior to this change had one strange aspect -\r\nsomewhat ambiguous blurring of functionality between MethodEntrypoint\r\nand ImportedMethodNode. This led to various weird situations including\r\nunintended direct method calls, infinite recursion when conditions\r\nin two methods didn't exactly match and similar fun.\r\n\r\nI have cleaned this mess up by basically moving the pre-existing\r\nfunctionality of ImportedMethodNode to MethodEntrypoint that has become\r\nthe only API dealing with creation of import cells used for calling\r\nmethods. The two flavors of import cells being created are\r\nExternalMethodImport and LocalMethodImport where the only difference\r\nbetween them is that LocalMethodImport brings in the dependency to the\r\nMethodWithGCInfo for the method and triggers its JIT compilation\r\n(which may fail when the method requires runtime JIT).\r\n\r\nI have added graceful handling for indeterminate signatures to\r\nArgIterator because the code graph changes triggered this in one\r\nof the ASP.NET assemblies and it's nice to have in general.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9774160839","Type":"PullRequestEvent","CreatedAt":"2019-06-06T19:44:06","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7488","RelatedDescription":"Merged pull request \"Diagnostic improvements in CPAOT section builder\" (#7488) at dotnet/corert","RelatedBody":"I've been debugging CPAOT for almost a year. One recurring hard\r\nproblem has always been diagnosing missing items in the symbol\r\nmap that manifest as \"key not found\" exceptions during the\r\nrelocation phase.\r\n\r\nI have hit this again while debugging the constrained calls and\r\nI have realized I can mitigate the situation by slightly\r\nrearranging things - instead of the straight array of relocations\r\nthere is mostly no harm in storing directly the ObjectData refs\r\n(except for the presumably small perf penalty of one extra\r\nindirection in accessing the array of relocations). ObjectData\r\nis usually much easier to analyze in the debugger as it typically\r\ncontains a symbol definition.\r\n\r\nI have applied minor mechanical renames to put the naming in sync\r\nwith the new semantics; please let me know if you spot an omission\r\non my part.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9773216838","Type":"PullRequestEvent","CreatedAt":"2019-06-06T17:19:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7492","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7492) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"9773162106","Type":"PullRequestEvent","CreatedAt":"2019-06-06T17:10:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7492","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7492) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9772762709","Type":"PullRequestEvent","CreatedAt":"2019-06-06T16:11:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7490","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7490) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern"},{"Id":"9771842995","Type":"IssuesEvent","CreatedAt":"2019-06-06T14:21:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7487","RelatedDescription":"Closed issue \"Process crashes on Linux when catching a null pointer exception from managed code\" (#7487) at dotnet/corert","RelatedBody":"I have a program that does something like this:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            // this loads a corert native library\r\n            var blah= NativeMethods.DoSomething(IntPtr.Zero, IntPtr.Zero, 10_000);\r\n            try\r\n            {\r\n                string x = null;\r\n                Console.WriteLine($\"{x.Length}\");\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n            }\r\n            Console.WriteLine(\"done\");\r\n        }\r\n```\r\n\r\nwhen the null pointer exception is thrown, the corert sigsegv handler is invoked. https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/Native/Runtime/unix/HardwareExceptions.cpp#L582\r\n\r\nAround L582, the processess crashes with sigabort:\r\n\r\n```\r\ndotnet TestConsoleApp.dll\r\n*** stack smashing detected ***: dotnet terminated\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7fe006ea4bfb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7fe006f2d437]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x0)[0x7fe006f2d400]\r\n/root/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.2.4/runtimes/linux-x64/native/libcoreclr.so(+0x4e15c7)[0x7fe00656b5c7]\r\n```\r\n"},{"Id":"9771839275","Type":"PullRequestEvent","CreatedAt":"2019-06-06T14:21:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7491","RelatedDescription":"Merged pull request \"Handle signals on alternate stack if previous handler required that\" (#7491) at dotnet/corert","RelatedBody":"There is a problem with using CoreRT in CoreCLR process. CoreCLR sets\r\nsigsegv handler to use alternate stack, but CoreRT does not. That means\r\nthat when CoreRT registers its sigsegv handler after CoreCLR, it becomes\r\nthe handler that kernel calls and the previously registered CoreCLR\r\nhandler is called as a regular function call from this handler. And\r\nthat happens on the original stack. However the CoreCLR cannot run the\r\nhandler on the original stack and the handler crashes.\r\n\r\nThe fix is to copy the SA_ONSTACK flag of the previous handler when\r\nregistering the signal handler in CoreRT. In addition to that, this\r\nchange also copies the signal mask in this case. CoreCLR sigsegv handler\r\nmasks the activation injection signal (SIGRT_MIN) so that it doesn't\r\nhappen until the sigsegv handler switches to the original stack. This\r\nbehavior needs to be preserved."},{"Id":"9770853290","Type":"PullRequestEvent","CreatedAt":"2019-06-06T12:10:58","Actor":"janvorli","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7491","RelatedDescription":"Opened pull request \"Handle signals on alternate stack if previous handler required that\" (#7491) at dotnet/corert","RelatedBody":"There is a problem with using CoreRT in CoreCLR process. CoreCLR sets\r\nsigsegv handler to use alternate stack, but CoreRT does not. That means\r\nthat when CoreRT registers its sigsegv handler after CoreCLR, it becomes\r\nthe handler that kernel calls and the previously registered CoreCLR\r\nhandler is called as a regular function call from this handler. And\r\nthat happens on the original stack. However the CoreCLR cannot run the\r\nhandler on the original stack and the handler crashes.\r\n\r\nThe fix is to copy the SA_ONSTACK flag of the previous handler when\r\nregistering the signal handler in CoreRT. In addition to that, this\r\nchange also copies the signal mask in this case. CoreCLR sigsegv handler\r\nmasks the activation injection signal (SIGRT_MIN) so that it doesn't\r\nhappen until the sigsegv handler switches to the original stack. This\r\nbehavior needs to be preserved."},{"Id":"9769380695","Type":"PullRequestEvent","CreatedAt":"2019-06-06T08:25:35","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7488","RelatedDescription":null,"RelatedBody":"I've been debugging CPAOT for almost a year. One recurring hard\r\nproblem has always been diagnosing missing items in the symbol\r\nmap that manifest as \"key not found\" exceptions during the\r\nrelocation phase.\r\n\r\nI have hit this again while debugging the constrained calls and\r\nI have realized I can mitigate the situation by slightly\r\nrearranging things - instead of the straight array of relocations\r\nthere is mostly no harm in storing directly the ObjectData refs\r\n(except for the presumably small perf penalty of one extra\r\nindirection in accessing the array of relocations). ObjectData\r\nis usually much easier to analyze in the debugger as it typically\r\ncontains a symbol definition.\r\n\r\nI have applied minor mechanical renames to put the naming in sync\r\nwith the new semantics; please let me know if you spot an omission\r\non my part.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9769380447","Type":"PullRequestEvent","CreatedAt":"2019-06-06T08:25:33","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7488","RelatedDescription":"Closed pull request \"Diagnostic improvements in CPAOT section builder\" (#7488) at dotnet/corert","RelatedBody":"I've been debugging CPAOT for almost a year. One recurring hard\r\nproblem has always been diagnosing missing items in the symbol\r\nmap that manifest as \"key not found\" exceptions during the\r\nrelocation phase.\r\n\r\nI have hit this again while debugging the constrained calls and\r\nI have realized I can mitigate the situation by slightly\r\nrearranging things - instead of the straight array of relocations\r\nthere is mostly no harm in storing directly the ObjectData refs\r\n(except for the presumably small perf penalty of one extra\r\nindirection in accessing the array of relocations). ObjectData\r\nis usually much easier to analyze in the debugger as it typically\r\ncontains a symbol definition.\r\n\r\nI have applied minor mechanical renames to put the naming in sync\r\nwith the new semantics; please let me know if you spot an omission\r\non my part.\r\n\r\nThanks\r\n\r\nTomas"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"453336312","IsPullRequest":true,"CreatedAt":"2019-06-07T04:48:00","Actor":"sdmaclea","Number":"25019","RawContent":null,"Title":"Populate AppDomain.*Resolve event sender","State":"open","Body":"This was a regression since .NET Core 2.2 where the sender was populated. Probably removed accidentally during AppDomain refactoring.","Url":"https://github.com/dotnet/coreclr/pull/25019","RelatedDescription":"Open PR \"Populate AppDomain.*Resolve event sender\" (#25019)"},{"Id":"453236637","IsPullRequest":true,"CreatedAt":"2019-06-07T01:54:30","Actor":"stephentoub","Number":"25012","RawContent":null,"Title":"Add [NotNull] to syncLock parameter of EnsureInitialized","State":"closed","Body":"cc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/coreclr/pull/25012","RelatedDescription":"Closed or merged PR \"Add [NotNull] to syncLock parameter of EnsureInitialized\" (#25012)"},{"Id":"453298257","IsPullRequest":false,"CreatedAt":"2019-06-07T01:35:39","Actor":"KathleenDollard","Number":"25018","RawContent":null,"Title":"Internal CLR error when running `dotnet tool --help`","State":"closed","Body":"I get the following error when running `dotnet tool --help`. The `--info` is also below. We can loop in @wli3 about the CLI part on this, but it seems that \"Internal Error\" should not happen regardless: \r\n\r\n```\r\n~/repos/zurich $ dotnet tool --help\r\nUsage: dotnet tool [options] [command]\r\n\r\nOptions:\r\n  -h, --help   Show command line help.\r\n\r\nCommands:\r\n  install <PACKAGE_ID>     Install global or local tool. Local tools are added to manifest and restored.\r\n  uninstall <PACKAGE_ID>   Uninstall a global tool or local tool.\r\n  update <PACKAGE_ID>      Update a global tool.\r\n  list                     List tools installed globally or locally.\r\n  run <COMMAND_NAME>       Run local tool.\r\n  restore                  Restore tools defined in the local tool manifest.\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties.GetGatewayAddresses(Int32)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties..ctor(System.Net.NetworkInformation.BsdNetworkInterface, Int32)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface..ctor(System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetOrCreate(System.Collections.Generic.Dictionary`2<System.String,System.Net.NetworkInformation.BsdNetworkInterface>, System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface+<>c__DisplayClass5_0.<GetBsdNetworkInterfaces>b__2(System.String, LinkLayerAddressInfo*)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n```\r\n\r\n```\r\n~/repos/zurich $ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009812 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009988 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27218-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25018","RelatedDescription":"Closed issue \"Internal CLR error when running `dotnet tool --help`\" (#25018)"},{"Id":"453293428","IsPullRequest":true,"CreatedAt":"2019-06-07T00:32:20","Actor":"safern","Number":"25017","RawContent":null,"Title":"Address nullable feedback for System.Runtime and System.Runtime.Extensions","State":"open","Body":"I added the changes to TextWriter taking a null buffer to follow pattern and start discussion in the PR. If not agreed, I can always revert. Said that, I expect corefx tests to fail, will disable them and update them.\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/25017","RelatedDescription":"Open PR \"Address nullable feedback for System.Runtime and System.Runtime.Extensions\" (#25017)"},{"Id":"453288914","IsPullRequest":false,"CreatedAt":"2019-06-07T00:09:59","Actor":"andy-ms","Number":"25016","RawContent":null,"Title":"Segfault for project built with `-r linux-x64` running with corerun","State":"open","Body":"To reproduce:\r\n\r\n* Create a checkout of coreclr and run `./build.sh && ./build-test.sh -generatelayoutonly`.\r\n* Create a sample .net project:\r\n\r\n**cs.csproj**:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n**Program.cs**:\r\n\r\n```cs\r\nusing System;\r\n\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        Console.WriteLine(\"Hello\");\r\n    }\r\n}\r\n```\r\n\r\n* Build with `dotnet publish -r linux-x64`\r\n* Run with:\r\n    CORE_ROOT=\"/path/to/coreclr/bin/tests/Linux.x64.Debug/Tests/Core_Root\"\r\n    /path/to/coreclr/bin/tests/Linux.x64.Debug/Tests/Core_Root/corerun bin/Debug/netcoreapp3.0/linux-x64/cs.dll\r\n\r\nThere will be a segmentation fault.\r\nThere is no segmentation fault when publishing without `-r linux-x64`, and no corresponding problem on windows.\r\n(Also no problem without the `Console.WriteLine` call.)\r\n\r\nDebugging into it with lldb, `target modules list` shows that there are two versions of libcoreclr.so in existence -- one from core_root, and one from the local directory. It looks like one of these has initialized `palEnvironment`, but the other has not.","Url":"https://github.com/dotnet/coreclr/issues/25016","RelatedDescription":"Open issue \"Segfault for project built with `-r linux-x64` running with corerun\" (#25016)"},{"Id":"453279311","IsPullRequest":false,"CreatedAt":"2019-06-06T23:25:38","Actor":"kouvel","Number":"25015","RawContent":null,"Title":"[dotnet-trace] Getting very few managed stacks","State":"open","Body":"I’m not seeing the CPUStacks item but I see AnyStacks. However, I’m seeing very few samples in the stack view and not seeing some managed functions. This is on a trace taken for ~40 seconds:\r\n\r\nName | Inc % | Inc | Exc % | Exc | Fold | When | First | Last\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\ntest![QuickJitted]PerfViewTierEventsTest+<>c.<Main>b__0_0() | 13.4 | 9 | 0.0 | 0 | 0 | _______________3________________ | 931.118 | 932.351\r\n+   test![QuickJitted]PerfViewTierEventsTest.Run(bool) | 11.9 | 8 | 0.0 | 0 | 0 | _______________2________________ | 931.872 | 932.351\r\n+ Event   Microsoft-Windows-DotNETRuntime/Method/JittingStarted | 1.5 | 1 | 1.5 | 1 | 0 | _______________0________________ | 931.118 | 931.118\r\n\r\nThere should be two of the Run(bool) methods under the top frame, one that is QuickJitted and one that is OptimizedTier1, and in total only 9 samples.\r\n\r\nIn the events view I’m seeing a lot more samples under SampleProfiler/Thread/Sample:\r\n\r\nEvent Name | Time MSec | Process Name | Rest\r\n-- | -- | -- | --\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 2.988 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"External\"\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 5.044 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"External\"\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 6.909 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"External\"\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 8.808 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"External\"\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 10.875 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"External\"\r\n\r\n...\r\n\r\nEvent Name | Time MSec | Process Name | Rest\r\n-- | -- | -- | --\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 39,330.038 | Process(6692) (6692) | ThreadID=\"6,444\" ProcessorNumber=\"0\"   Type=\"External\"\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 39,330.053 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"External\"\r\n\r\nMost of them are with Type=”External”, only two are with Type=”Managed” (not sure what the type means):\r\n\r\nEvent Name | Time MSec | Process Name | Rest\r\n-- | -- | -- | --\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 932.069 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"Managed\"\r\nMicrosoft-DotNETCore-SampleProfiler/Thread/Sample | 1,976.172 | Process(6692) (6692) | ThreadID=\"6,444\"   ProcessorNumber=\"0\" Type=\"Managed\"\r\n\r\nBased on the first/last times of the frames in the stack view above, all of the ones that showed up in the stack view appear to be close to the first Type=”Managed“ sample event above, not sure if there is a relation. And since the Run(bool) method had not been tiered-up by that time, that’s probably why it didn’t show up in the stack view. Wondering why there are so few samples with managed stacks in a 40 s trace.","Url":"https://github.com/dotnet/coreclr/issues/25015","RelatedDescription":"Open issue \"[dotnet-trace] Getting very few managed stacks\" (#25015)"},{"Id":"453278042","IsPullRequest":false,"CreatedAt":"2019-06-06T23:20:42","Actor":"kouvel","Number":"25014","RawContent":null,"Title":"[dotnet-trace] Some rundown events are missing","State":"open","Body":"Examples:\r\n- `Method/DCStopVerbose`\r\n- `Method/ILToNativeMapDCStop`\r\n\r\nThat may be why when attaching to a process that has completed all of its jitting, the stack view does not show up. I believe `DCStopVerbose` is used by PerfView to associate a sample's code address with a method name and other info about the method, when the method was already jitted before attach, and `ILToNativeMapDCStop` when paired with `DCStopVerbose` is used to associate samples to source code lines.\r\n\r\nSome more discussion in https://github.com/dotnet/coreclr/pull/24993","Url":"https://github.com/dotnet/coreclr/issues/25014","RelatedDescription":"Open issue \"[dotnet-trace] Some rundown events are missing\" (#25014)"},{"Id":"452787784","IsPullRequest":true,"CreatedAt":"2019-06-06T23:06:22","Actor":"tannergooding","Number":"24991","RawContent":null,"Title":"Marking Vector128<T>.Count and Vector256<T>.Count as [Intrinsic]","State":"closed","Body":"CC. @CarolEidt.\r\n\r\nThe `Vector128<T>.Count` and `Vector256<T>.Count` methods weren't marked as intrinsic so they:\r\n1. Don't get inlined in some complex methods\r\n2. Don't always get handled efficiently by the JIT\r\n\r\nThis PR marks them as `[Intrinsic]` and hooks it up to the same handling as `Vector<T>.Count`.","Url":"https://github.com/dotnet/coreclr/pull/24991","RelatedDescription":"Closed or merged PR \"Marking Vector128<T>.Count and Vector256<T>.Count as [Intrinsic]\" (#24991)"},{"Id":"452785298","IsPullRequest":true,"CreatedAt":"2019-06-06T21:39:43","Actor":"jkoritzinsky","Number":"24990","RawContent":null,"Title":"Move COM object lifetime control tests to CoreCLR.","State":"closed","Body":"Move the tests for COM object lifetime control tests that are non threadsafe to CoreCLR. The parallel nature of CoreFX test runs makes testing these methods there unstable and prone to spurious failures (see dotnet/corefx#38252)","Url":"https://github.com/dotnet/coreclr/pull/24990","RelatedDescription":"Closed or merged PR \"Move COM object lifetime control tests to CoreCLR.\" (#24990)"},{"Id":"453243534","IsPullRequest":false,"CreatedAt":"2019-06-06T21:29:38","Actor":"msedi","Number":"25013","RawContent":null,"Title":"Let the runtime optimize type switches ","State":"closed","Body":"I'm using a lot of generic structures for number crunching and I have to do a lot of type comparisons like the example below:\r\n\r\n```\r\nnamespace Test {\r\n  public readonly struct Vector<T> where T : struct {\r\n    public readonly T[] Data;\r\n\r\n    public Vector (T[] data) {\r\n      Data = (T[]) data.Clone ();\r\n    }\r\n\r\n    public Vector<Tout> Add<Tout> (Vector<Tout> v1, Vector<Tout> v2) where Tout : struct {\r\n      Tout[] newdata = new Tout[v1.Data.Length];\r\n\r\n      if (typeof (T) == typeof (int)) {\r\n        for (int i = 0; i < v1.Data.Length; i++) {\r\n          newdata[i] = (Tout) (object) ((int) (object) v1.Data[i] + (int) (object) v2.Data[i]);\r\n        }\r\n      } else if (typeof (T) == typeof (float)) {\r\n        for (int i = 0; i < v1.Data.Length; i++) {\r\n          newdata[i] = (Tout) (object) ((float) (object) v1.Data[i] + (float) (object) v2.Data[i]);\r\n        }\r\n      }\r\n\r\n      return new Vector<Tout> (newdata);\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWhat happens is that the code has many `if...then`s that have to be evaluated on every call. So it would be nice if the runtime could optimize this by simply eliminating the pathes that won't run due to the restriction of the type. So if `Vector<int>` is used, the float path and all the other pathes not shown in this short example are dropped and no `if..then` is available in the code.","Url":"https://github.com/dotnet/coreclr/issues/25013","RelatedDescription":"Closed issue \"Let the runtime optimize type switches \" (#25013)"},{"Id":"452868082","IsPullRequest":true,"CreatedAt":"2019-06-06T21:03:21","Actor":"elinor-fung","Number":"24998","RawContent":null,"Title":"Fix initializing BuildTools when the Platform environment variable is set","State":"closed","Body":"- Clear `Platform` variable before initializing BuildTools\r\n- Make `build-test.cmd` exit if `init-tools.cmd` fails\r\n\r\nSome BuildTools initialization steps fail if `Platform` is set to a value with which they are not compatible. We were relying on `dotnet.cmd` to clear the `Platform` environment variable before `init-tools.cmd` was called. `build-test.cmd` was always calling `init-tools.cmd` in such a way that the `Platform` variable was not cleared, but generally the tools would previously have been initialized through `dotnet.cmd`, so they would not be initialized again. With #24841, we stopped initializing BuildTools in `dotnet.cmd`, so the call in `build-test.cmd` was actually doing the initialization (and failing depending on how `Platform is set).\r\n\r\nFixes #24943","Url":"https://github.com/dotnet/coreclr/pull/24998","RelatedDescription":"Closed or merged PR \"Fix initializing BuildTools when the Platform environment variable is set\" (#24998)"},{"Id":"453233098","IsPullRequest":true,"CreatedAt":"2019-06-06T20:52:49","Actor":"sandreenko","Number":"25011","RawContent":null,"Title":"Revert \"Reenable StackTracePreserveTests.\"","State":"closed","Body":"Reverts dotnet/coreclr#24987\r\n\r\nThe test did not fail locally, did not fail in the PR, but failed in the ci after (https://dev.azure.com/dnceng/public/_build/results?buildId=214955&view=ms.vss-test-web.build-test-results-tab&runId=5270564&paneView=attachments&resultId=109522),\r\nReopen #20322 and assume that it is an unstable issue.\r\nWhat is interesting is that the output in successful and failed runs is the same (except Passed/Failed).","Url":"https://github.com/dotnet/coreclr/pull/25011","RelatedDescription":"Closed or merged PR \"Revert \"Reenable StackTracePreserveTests.\"\" (#25011)"},{"Id":"452791633","IsPullRequest":true,"CreatedAt":"2019-06-06T19:12:56","Actor":"VSadov","Number":"24992","RawContent":null,"Title":"Clear syncblock early when `VERIFY_HEAP && DEBUG` to prevent verification asserts.","State":"closed","Body":"Fixes:#24879","Url":"https://github.com/dotnet/coreclr/pull/24992","RelatedDescription":"Closed or merged PR \"Clear syncblock early when `VERIFY_HEAP && DEBUG` to prevent verification asserts.\" (#24992)"},{"Id":"453186575","IsPullRequest":false,"CreatedAt":"2019-06-06T18:53:11","Actor":"cpboyd","Number":"25010","RawContent":null,"Title":"InvalidCastException: Default parameter value for Nullable Enum?","State":"open","Body":"In a web API, I've tried the following:\r\n```c#\r\npublic IResponse Retrieve(int id = 0, Enums.Status? status = Enums.Status.Pending)\r\n```\r\n\r\nThis causes the following error unless `status` is specified:\r\n```c#\r\nInvalidCastException: Unable to cast object of type 'System.Int32' to type 'System.Nullable`1[Api.Models.Enums+Status]'\r\n```\r\n\r\nHowever, this seems to be valid:\r\n```c#\r\npublic IResponse Retrieve(int id = 0, Enums.Status? status = null)\r\n```\r\n\r\nIn addition, I can make it not nullable and avoid this issue.","Url":"https://github.com/dotnet/coreclr/issues/25010","RelatedDescription":"Open issue \"InvalidCastException: Default parameter value for Nullable Enum?\" (#25010)"},{"Id":"452832013","IsPullRequest":true,"CreatedAt":"2019-06-06T17:22:48","Actor":"sandreenko","Number":"24995","RawContent":null,"Title":"Exclude tests that do not work without tail calls on arm32 Unix.","State":"closed","Body":"Reenable them when we get any tailcalls on arm32 Linux.","Url":"https://github.com/dotnet/coreclr/pull/24995","RelatedDescription":"Closed or merged PR \"Exclude tests that do not work without tail calls on arm32 Unix.\" (#24995)"},{"Id":"453036053","IsPullRequest":true,"CreatedAt":"2019-06-06T17:09:06","Actor":"jkotas","Number":"25007","RawContent":null,"Title":"Delete unnecessary security transparency attributes","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25007","RelatedDescription":"Closed or merged PR \"Delete unnecessary security transparency attributes\" (#25007)"},{"Id":"453143116","IsPullRequest":false,"CreatedAt":"2019-06-06T17:06:10","Actor":"fadimounir","Number":"25009","RawContent":null,"Title":"Assembly.Load(byte[]) on R2R images fail with BadImageFormatException","State":"open","Body":"Repro:\r\n``` c#\r\nusing System;\r\nusing System.IO;\r\nusing System.Reflection;\r\n\r\npublic class Test\r\n{\r\n    public static void Main()\r\n    {\r\n        Assembly assembly = typeof(Test).Assembly;\r\n        byte[] array = File.ReadAllBytes(assembly.Location);\r\n        Assembly assembly2 = Assembly.Load(array);\r\n        Console.WriteLine(assembly.FullName);\r\n        Console.WriteLine(assembly2.FullName);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25009","RelatedDescription":"Open issue \"Assembly.Load(byte[]) on R2R images fail with BadImageFormatException\" (#25009)"},{"Id":"452898125","IsPullRequest":false,"CreatedAt":"2019-06-06T15:27:44","Actor":"VincentBu","Number":"25001","RawContent":null,"Title":"Assert failure:  IsCrstInitialized()","State":"closed","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-ci/pr~2Fdotnet~2Fcoreclr~2Frefs~2Fpull~2F24896~2Fmerge/test~2Ffunctional~2Fcli~2F/20190605.10/workItem/PayloadGroup0/analysis/xunit/ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_~2F_Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_cmd\r\n\r\n**Failed tests:**\r\nilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_cmd()\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 1484 [0x000005cc], Thread: 2412 [0x096c]): IsCrstInitialized()\r\n\r\nCORECLR! GetCLRRuntimeHost + 0x4906E (0x00007ffb`f592c5fe)\r\nCORECLR! GetCLRRuntimeHost + 0x6B9198 (0x00007ffb`f5f9c728)\r\nCORECLR! GetCLRRuntimeHost + 0x93152F (0x00007ffb`f6214abf)\r\nCORECLR! GetCLRRuntimeHost + 0x930E45 (0x00007ffb`f62143d5)\r\nCORECLR! GetCLRRuntimeHost + 0x930F4A (0x00007ffb`f62144da)\r\nCORECLR! GetCLRRuntimeHost + 0x931711 (0x00007ffb`f6214ca1)\r\nCORECLR! GetCLRRuntimeHost + 0x92FA11 (0x00007ffb`f6212fa1)\r\nCORECLR! GetCLRRuntimeHost + 0x92F78D (0x00007ffb`f6212d1d)\r\nCORECLR! GetCLRRuntimeHost + 0x92F7EA (0x00007ffb`f6212d7a)\r\nCORECLR! GetCLRRuntimeHost + 0x92FBC4 (0x00007ffb`f6213154)\r\n    File: f:\\\\workspace\\\\_work\\\\1\\\\s\\\\src\\\\vm\\\\crst.cpp Line: 270\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\1e607542-7e8d-41cd-a805-d745d2cf5efe\\\\Payload\\\\ilasm.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\1e607542-7e8d-41cd-a805-d745d2cf5efe\\\\Work\\\\55192d23-83df-4330-94d6-04f62041fb86\\\\Exec\\\\ilasm\\\\System\\\\Reports\\\\ilasm.System\\\\Runtime\\\\CompilerServices\\\\MethodImplOptionsTests\\\\MethodImplOptionsTests.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\1e607542-7e8d-41cd-a805-d745d2cf5efe\\\\Payload\\\\corerun.exe\\\" MethodImplOptionsTests.exe \r\nAggressiveOptimizationTest\r\n\r\nAssembling 'MiAggressiveOptimization.il'  to DLL --> 'MiAggressiveOptimization.dll'\r\nSource file is ANSI\r\n\r\nAssembled method Program::Main\r\nCreating PE file\r\n\r\nEmitting classes:\r\nClass 1:\\tProgram\r\n\r\nEmitting fields and methods:\r\nGlobal \\t\r\nClass 1\\tMethods: 1;\\t\r\n\r\nEmitting events and properties:\r\nGlobal \\t\r\nClass 1\\t\r\nWriting PE file\r\nOperation completed successfully\r\nilasm failed with exit code: -1073740286\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25001","RelatedDescription":"Closed issue \"Assert failure:  IsCrstInitialized()\" (#25001)"},{"Id":"453015176","IsPullRequest":true,"CreatedAt":"2019-06-06T15:23:11","Actor":"dotnet-maestro[bot]","Number":"25006","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:59 AM\r\n- **Commit**: 98eede1955ebc271bfeb4d4ebab4068fa25ead2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190606.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190606.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25006","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25006)"},{"Id":"453076949","IsPullRequest":false,"CreatedAt":"2019-06-06T14:53:21","Actor":"tannergooding","Number":"25008","RawContent":null,"Title":"Inefficient loads for certain hwintrinsic code patterns","State":"open","Body":"For the relatively simple methods below, it looks like we don't currently generate \"optimal\" codegen for the constructed address.\r\n\r\n```cs\r\n    public unsafe Vector256<int> M(byte* pBase, int i)\r\n    {\r\n        return Avx2.ConvertToVector256Int32(pBase + i * 8);\r\n    }\r\n\r\n    public unsafe Vector256<int> M2(byte* pBase, int i)\r\n    {\r\n        return Avx2.ConvertToVector256Int32(Sse2.LoadVector128(pBase + i * 8));\r\n    }\r\n```\r\n\r\n`M` generates:\r\n```asm\r\nG_M27028_IG01:\r\n       C5F877               vzeroupper \r\n       6690                 nop      \r\n\r\nG_M27028_IG02:\r\n       41C1E103             shl      r9d, 3\r\n       4963C1               movsxd   rax, r9d\r\n       4903C0               add      rax, r8\r\n       C4E27D3100           vpmovzxbd ymm0, ymmword ptr[rax]\r\n       C5FD1102             vmovupd  ymmword ptr[rdx], ymm0\r\n       488BC2               mov      rax, rdx\r\n\r\nG_M27028_IG03:\r\n       C5F877               vzeroupper \r\n       C3                   ret      \r\n```\r\n\r\n`M2` generates:\r\n```asm\r\nG_M44710_IG01:\r\n       C5F877               vzeroupper \r\n       6690                 nop      \r\n\r\nG_M44710_IG02:\r\n       41C1E103             shl      r9d, 3\r\n       4963C1               movsxd   rax, r9d\r\n       C4C17A6F0400         vmovdqu  xmm0, xmmword ptr [r8+rax]\r\n       C4E27D31C0           vpmovzxbd ymm0, ymm0\r\n       C5FD1102             vmovupd  ymmword ptr[rdx], ymm0\r\n       488BC2               mov      rax, rdx\r\n\r\nG_M44710_IG03:\r\n       C5F877               vzeroupper \r\n       C3                   ret      \r\n```","Url":"https://github.com/dotnet/coreclr/issues/25008","RelatedDescription":"Open issue \"Inefficient loads for certain hwintrinsic code patterns\" (#25008)"},{"Id":"453005885","IsPullRequest":true,"CreatedAt":"2019-06-06T14:46:42","Actor":"dotnet-maestro[bot]","Number":"25004","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:50 AM\r\n- **Commit**: 71aec681dd1247979e7956372abae8bbc02c9546\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces** -> 1.0.0-preview7.19306.1\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19306.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview7.19306.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25004","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25004)"},{"Id":"452950683","IsPullRequest":true,"CreatedAt":"2019-06-06T13:47:54","Actor":"janvorli","Number":"25003","RawContent":null,"Title":"Fix tmp dir in configure.cmake","State":"closed","Body":"The ONE_SHARED_MAPPING_PER_FILEREGION_PER_PROCESS check was using a temp\r\npath that had some non-existent components. While this works fine on Linux,\r\nit fails to create the temp file on OSX.\r\nThe fix is to use temp dir in the CMake's output dir.\r\n\r\nClose #25000","Url":"https://github.com/dotnet/coreclr/pull/25003","RelatedDescription":"Closed or merged PR \"Fix tmp dir in configure.cmake\" (#25003)"},{"Id":"452896447","IsPullRequest":false,"CreatedAt":"2019-06-06T13:47:53","Actor":"Therzok","Number":"25000","RawContent":null,"Title":"CMake mmap config uses non-existing directory","State":"closed","Body":"See this conditional:\r\nhttps://github.com/dotnet/coreclr/blob/5d4ff2f11a87d7d434d05e72744946f48e017b11/src/pal/src/configure.cmake#L535-L588\r\n\r\nIt tries to use `mkstemp` on a directory which does not exist as part of its template.\r\n\r\nFrom the man pages:\r\n```\r\nERRORS\r\n     The mkstemp(), mkostemp(), mkstemps(), mkostemps(), and mkdtemp() functions may set errno to one of the\r\n     following values:\r\n\r\n     [ENOTDIR]          The pathname portion of the template is not an existing directory.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25000","RelatedDescription":"Closed issue \"CMake mmap config uses non-existing directory\" (#25000)"},{"Id":"453007879","IsPullRequest":true,"CreatedAt":"2019-06-06T12:40:20","Actor":"dotnet-maestro[bot]","Number":"25005","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190605.02\r\n- **Date Produced**: 6/6/2019 4:20 AM\r\n- **Commit**: 2e54d1f6a6a9126126d6c9f8d730489892acf730\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27805-02\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25005","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#25005)"},{"Id":"452923999","IsPullRequest":false,"CreatedAt":"2019-06-06T09:23:59","Actor":"albahari","Number":"25002","RawContent":null,"Title":"Add AssemblyLoadContext.LoadFromStream overload to populate Location and CodeBase","State":"open","Body":"Currently, assemblies loaded via AssemblyLoadContext.LoadFromStream end up with a blank Location and a CodeBase of System.Private.CoreLib.dll.\r\n\r\nThis causes trouble when you load an assembly that includes code such as this:\r\n\r\n`GetExecutingAssembly().Location`\r\n\r\nIf you don't own the library that you're loading, you can't factor out this code, so the library breaks and LoadFromStream is effectively useless.\r\n\r\nCan we have a new overload which loads an assembly from a stream while populating these properties:\r\n\r\n`public Assembly LoadFromStream(Stream assembly, Stream assemblySymbols, string location, string codeBase)`\r\n\r\nMy own scenario for using LoadFromStream is to load an assembly without locking it so that it can be updated. The alternative is to copy the assemblies to a temporary location (and re-copy it each time it's updated) which is clumsy and inefficient. The temporary location causes two other problems. First, the assembly in question may rely on non-binary resources in the same folder as itself (or subfolders) which are now gone. Second, it makes it hard to diagnose issues related to loading the right DLL from the right place, because the original load location is obfuscated.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25002","RelatedDescription":"Open issue \"Add AssemblyLoadContext.LoadFromStream overload to populate Location and CodeBase\" (#25002)"},{"Id":"452858496","IsPullRequest":false,"CreatedAt":"2019-06-06T07:49:30","Actor":"VincentBu","Number":"24997","RawContent":null,"Title":"System.IO.FileNotFoundException: Could not load file or assembly 'IjwNativeVarargs, Culture=neutral, PublicKeyToken=null'","State":"closed","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-ci/pr~2Fdotnet~2Fcoreclr~2Frefs~2Fpull~2F24983~2Fmerge/test~2Ffunctional~2Fcli~2F/20190605.42/workItem/Interop/analysis/xunit/Interop_IJW._NativeVarargs_NativeVarargsTest_NativeVarargsTest_~2F_NativeVarargs_NativeVarargsTest_NativeVarargsTest_cmd\r\n\r\n**Failed tests:**\r\nInterop_IJW._NativeVarargs_NativeVarargsTest_NativeVarargsTest_._NativeVarargs_NativeVarargsTest_NativeVarargsTest_cmd()\r\n\r\n**Log:**\r\n```\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'IjwNativeVarargs, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.\r\nFile name: 'IjwNativeVarargs, Culture=neutral, PublicKeyToken=null'\r\n   at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, RuntimeAssembly assemblyContext, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, AssemblyLoadContext assemblyLoadContext)\r\n   at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, StackCrawlMark& stackMark, AssemblyLoadContext assemblyLoadContext)\r\n   at System.Reflection.Assembly.Load(String assemblyString)\r\n   at IjwHelper.LoadIjwAssembly(String name) in F:\\\\workspace\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Interop\\\\IJW\\\\IjwHelper.cs:line 20\r\n   at NativeVarargsTest.NativeVarargsTest.Main(String[] args) in F:\\\\workspace\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Interop\\\\IJW\\\\NativeVarargs\\\\NativeVarargsTest.cs:line 30\r\n\r\n\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\a86368f6-3054-4455-b748-8898077d857f\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\a86368f6-3054-4455-b748-8898077d857f\\\\Work\\\\dc8c0eab-0ebf-4200-9089-4350009e9e3d\\\\Exec\\\\Interop\\\\IJW\\\\NativeVarargs\\\\NativeVarargsTest\\\\NativeVarargsTest.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24997","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException: Could not load file or assembly 'IjwNativeVarargs, Culture=neutral, PublicKeyToken=null'\" (#24997)"},{"Id":"452869706","IsPullRequest":false,"CreatedAt":"2019-06-06T07:19:50","Actor":"VincentBu","Number":"24999","RawContent":null,"Title":"[arm64] Exceptions_ForeignThread._ForeignThreadExceptions_ForeignThreadExceptions_._ForeignThreadExceptions_ForeignThreadExceptions_sh()","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190605.35/workItem/PayloadGroup0/analysis/xunit/Exceptions_ForeignThread._ForeignThreadExceptions_ForeignThreadExceptions_~2F_ForeignThreadExceptions_ForeignThreadExceptions_sh\r\n\r\n**Failed tasks:**\r\nExceptions_ForeignThread._ForeignThreadExceptions_ForeignThreadExceptions_._ForeignThreadExceptions_ForeignThreadExceptions_sh()\r\n\r\n**Log:**\r\n```\r\n/root/helix/work/workitem/Exceptions/ForeignThread/ForeignThreadExceptions/ForeignThreadExceptions.sh: line 252:  9361 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/Exceptions/ForeignThread/Reports/Exceptions.ForeignThread/ForeignThreadExceptions/ForeignThreadExceptions.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun ForeignThreadExceptions.exe ''\r\nCaught exception thrown in a function called by a delegate called through Reverse PInvoke.\r\nCaught exception thrown in a delegate called through Reverse PInvoke on a foreign thread.\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24999","RelatedDescription":"Open issue \"[arm64] Exceptions_ForeignThread._ForeignThreadExceptions_ForeignThreadExceptions_._ForeignThreadExceptions_ForeignThreadExceptions_sh()\" (#24999)"},{"Id":"452796636","IsPullRequest":false,"CreatedAt":"2019-06-06T06:32:20","Actor":"VincentBu","Number":"24994","RawContent":null,"Title":"[arm] Assert failure: currentProcessCpuCount == g_processAffinitySet.Count()","State":"closed","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-all-testing/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190528.79/workItem/JIT/analysis/xunit/JIT_Performance._CodeQuality_V8_Crypto_Crypto_Crypto_~2F_CodeQuality_V8_Crypto_Crypto_Crypto_sh\r\n\r\n**Failed tests:**\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 5981 [0x0000175d], Thread: 5981 [0x175d]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n    File: /__w/4/s/src/vm/gcenv.os.cpp Line: 113\r\n    Image: /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload/corerun\r\n\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh: line 252:  5981 Aborted                 $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/Reports/JIT.Performance/CodeQuality/V8/Crypto/Crypto/Crypto.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload/corerun Crypto.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload\r\n> /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24994","RelatedDescription":"Closed issue \"[arm] Assert failure: currentProcessCpuCount == g_processAffinitySet.Count()\" (#24994)"},{"Id":"452840042","IsPullRequest":false,"CreatedAt":"2019-06-06T05:36:33","Actor":"VincentBu","Number":"24996","RawContent":null,"Title":"Failed to run xunit-reporter.py","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-ci/pr~2Fdotnet~2Fcoreclr~2Frefs~2Fpull~2F24823~2Fmerge/test~2Ffunctional~2Fcli~2F/20190605.40/workItem/baseservices.threading/wilogs\r\n\r\n**Log:**\r\n```\r\n+ python /root/helix/work/correlation/xunit-reporter.py\r\nTraceback (most recent call last):\r\n  File \"/root/helix/work/correlation/xunit-reporter.py\", line 5, in <module>\r\n    import helix.azure_storage\r\n  File \"/root/helix/scripts/helix/__init__.py\", line 1, in <module>\r\n    import helix.depcheck\r\n  File \"/root/helix/scripts/helix/depcheck.py\", line 66\r\n    def _is_legal_module(module_name: str) -> bool:\r\n                                    ^\r\nSyntaxError: invalid syntax\r\n+ exit 139\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24996","RelatedDescription":"Open issue \"Failed to run xunit-reporter.py\" (#24996)"},{"Id":"452795854","IsPullRequest":true,"CreatedAt":"2019-06-06T02:04:19","Actor":"kouvel","Number":"24993","RawContent":null,"Title":"Send tiered compilation settings rundown event on EventPipe detach","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24993","RelatedDescription":"Open PR \"Send tiered compilation settings rundown event on EventPipe detach\" (#24993)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"452847724","IsPullRequest":true,"CreatedAt":"2019-06-06T21:06:13","Actor":"jayaranigarg","Number":"11497","RawContent":null,"Title":"TestPlatform insertion 16.1.1 to be inserted in 16.1 servicing branch","State":"closed","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.1.1\r\n","Url":"https://github.com/dotnet/cli/pull/11497","RelatedDescription":"Closed or merged PR \"TestPlatform insertion 16.1.1 to be inserted in 16.1 servicing branch\" (#11497)"},{"Id":"452850293","IsPullRequest":true,"CreatedAt":"2019-06-06T19:14:24","Actor":"jayaranigarg","Number":"11498","RawContent":null,"Title":"Tp insertion 16.1.1 to 16.1 servicing branch","State":"closed","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.1.1\r\n","Url":"https://github.com/dotnet/cli/pull/11498","RelatedDescription":"Closed or merged PR \"Tp insertion 16.1.1 to 16.1 servicing branch\" (#11498)"},{"Id":"453026676","IsPullRequest":false,"CreatedAt":"2019-06-06T13:19:45","Actor":"seesharper","Number":"11504","RawContent":null,"Title":"dotnet restore using RID causes \"empty\" project.assets.json file (netcoreapp3.0)","State":"open","Body":"First a little bit of background. \r\nI am one of the collaborators over at the [dotnet-script](https://github.com/filipw/dotnet-script) repo.\r\n\r\nWe use `dotnet restore` as a way of getting a list of dependencies we need to execute a script. \r\n\r\nSo we basically generate a csproj file behind the scenes that looks like this.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThen we do a runtime specific restore \r\n\r\n```\r\ndotnet restore -r osx-x64\r\n```\r\n\r\nThis generates the `project.assets.json` file we need to read out the dependencies.\r\n\r\nCompilation deps are listed in the file as \r\n\r\n```\r\n \"ref/netcoreapp2.1/Microsoft.CSharp.dll\": {},\r\n  \"ref/netcoreapp2.1/Microsoft.VisualBasic.dll\": {},\r\n  \"ref/netcoreapp2.1/Microsoft.Win32.Primitives.dll\": {},\r\n  \"ref/netcoreapp2.1/System.AppContext.dll\": {},\r\n  and so on \r\n```\r\n\r\nSame for runtime deps\r\n\r\n```\r\n \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.CSharp.dll\": {},\r\n \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.VisualBasic.dll\": {},\r\n  \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.Win32.Primitives.dll\": {},\r\n  \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.Win32.Registry.dll\": {},\r\n```\r\n\r\nBasically all the deps coming from `Microsoft.NetCore.App`\r\n\r\n> Note: We use the `LockFile` class from `NuGet.ProjectModel` to read the file. \r\n\r\nOkay so here is the problem we are facing.\r\nif we change the target framework to `netcoreapp3.0`, the `project.assets.json` file no longer gets populated with these dependencies. \r\n\r\nSo given the following project file\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n```\r\n\r\nand then `dotnet restore -r osx-x64`\r\n\r\nWhat we see here is that all the compile deps and runtime deps are \"missing\" from the `project.assets.json` file.\r\n\r\n```\r\n{\r\n  \"version\": 3,\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v3.0\": {},\r\n    \".NETCoreApp,Version=v3.0/osx-x64\": {}\r\n  },\r\n  \"libraries\": {},\r\n  \"projectFileDependencyGroups\": {\r\n    \".NETCoreApp,Version=v3.0\": []\r\n  },\r\n  \"packageFolders\": {\r\n    \"/Users/bernhardrichter/.nuget/packages/\": {},\r\n    \"/usr/local/share/dotnet/sdk/NuGetFallbackFolder\": {}\r\n  },\r\n  \"project\": {\r\n    \"version\": \"1.0.0\",\r\n    \"restore\": {\r\n      \"projectUniqueName\": \"/Users/bernhardrichter/GitHub/Console30/Console30.csproj\",\r\n      \"projectName\": \"Console30\",\r\n      \"projectPath\": \"/Users/bernhardrichter/GitHub/Console30/Console30.csproj\",\r\n      \"packagesPath\": \"/Users/bernhardrichter/.nuget/packages/\",\r\n      \"outputPath\": \"/Users/bernhardrichter/GitHub/Console30/obj/\",\r\n      \"projectStyle\": \"PackageReference\",\r\n      \"fallbackFolders\": [\r\n        \"/usr/local/share/dotnet/sdk/NuGetFallbackFolder\"\r\n      ],\r\n      \"configFilePaths\": [\r\n        \"/Users/bernhardrichter/.nuget/NuGet/NuGet.Config\"\r\n      ],\r\n      \"originalTargetFrameworks\": [\r\n        \"netcoreapp3.0\"\r\n      ],\r\n      \"sources\": {\r\n        \"https://api.nuget.org/v3/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-extensions/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/dotnet-windowsdesktop/index.json\": {}\r\n      },\r\n      \"frameworks\": {\r\n        \"netcoreapp3.0\": {\r\n          \"projectReferences\": {}\r\n        }\r\n      },\r\n      \"warningProperties\": {\r\n        \"warnAsError\": [\r\n          \"NU1605\"\r\n        ]\r\n      }\r\n    },\r\n    \"frameworks\": {\r\n      \"netcoreapp3.0\": {\r\n        \"imports\": [\r\n          \"net461\"\r\n        ],\r\n        \"assetTargetFallback\": true,\r\n        \"warn\": true,\r\n        \"downloadDependencies\": [\r\n          {\r\n            \"name\": \"Microsoft.AspNetCore.App.Runtime.osx-x64\",\r\n            \"version\": \"[3.0.0-preview5-19227-01, 3.0.0-preview5-19227-01]\"\r\n          },\r\n          {\r\n            \"name\": \"Microsoft.WindowsDesktop.App.Ref\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          },\r\n          {\r\n            \"name\": \"runtime.osx-x64.Microsoft.NETCore.App\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          },\r\n          {\r\n            \"name\": \"runtime.osx-x64.Microsoft.NETCore.DotNetHostPolicy\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          },\r\n          {\r\n            \"name\": \"runtime.osx-x64.Microsoft.NETCore.DotNetHostResolver\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          }\r\n        ],\r\n        \"frameworkReferences\": [\r\n          \"Microsoft.NETCore.App\"\r\n        ]\r\n      }\r\n    },\r\n    \"runtimes\": {\r\n      \"osx-x64\": {\r\n        \"#import\": []\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWith target framework set to `netcoreapp2.1` the `project.assets.json`file gets populated with all the resolved deps as \"expected\".\r\n\r\nIs there any way to achieve the same behaviour with target framework set to `netcoreapp3.0`?\r\n\r\nWe have discovered though, that if we explicitly add a package reference to `Microsoft.NetCore.App [3.0.0-preview5-27626-15]`, things are back to \"normal\".\r\n\r\nWe would very much like to avoid to adding this reference explicitly as we then need to know the .Net Core runtime version.\r\n\r\nAny input/workaround on this would be greatly appreciated.\r\n\r\n\r\n\r\n\r\n## Steps to reproduce \r\n\r\nCreate a new console app (netcoreapp3.0)\r\n\r\n```\r\ndotnet new console\r\ndotnet restore -r osx-x64\r\n```\r\n\r\n## Expected  behavior\r\n\r\n`project.assets.json` file to be populated with resolved runtime and compilation deps\r\n\r\n## Actual behavior\r\n\r\n`project.assets.json` files contains no runtime and compilation deps.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.301 [/usr/local/share/dotnet/sdk]\r\n  2.1.402 [/usr/local/share/dotnet/sdk]\r\n  2.1.505 [/usr/local/share/dotnet/sdk]\r\n  2.2.100 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview3-010431 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11504","RelatedDescription":"Open issue \"dotnet restore using RID causes \"empty\" project.assets.json file (netcoreapp3.0)\" (#11504)"},{"Id":"452995907","IsPullRequest":true,"CreatedAt":"2019-06-06T12:53:26","Actor":"dotnet-maestro[bot]","Number":"11503","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 12:50 PM\r\n- **Commit**: b79e48cf431a036c82006bdef28a516beb87d03d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19305.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11503","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11503)"},{"Id":"452993353","IsPullRequest":true,"CreatedAt":"2019-06-06T12:42:22","Actor":"dotnet-maestro[bot]","Number":"11502","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190605.5\r\n- **Date Produced**: 6/6/2019 1:52 AM\r\n- **Commit**: ec0d2190853afd6c6a8a410d7dc386a9f1ca391b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19305.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11502","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11502)"},{"Id":"452993142","IsPullRequest":true,"CreatedAt":"2019-06-06T12:06:27","Actor":"dotnet-maestro[bot]","Number":"11501","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11501","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#11501)"},{"Id":"452954384","IsPullRequest":true,"CreatedAt":"2019-06-06T10:29:37","Actor":"v-zbsail","Number":"11500","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli master | 20190606","State":"open","Body":"- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11500","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/cli master | 20190606\" (#11500)"},{"Id":"452858504","IsPullRequest":false,"CreatedAt":"2019-06-06T06:45:25","Actor":"forki","Number":"11499","RawContent":null,"Title":"Allow dotnet commands to bypass the global.json version check","State":"open","Body":"Sometimes users or more importantly CI servers don't have the correct dotnet SDK installed.\r\nWe wrote FAKE install scripts that would take care of installing the correct SDK version during the build. Unfortunately even `dotnet tool` requires to have exactly the specified version available. So we have chicken and egg situation. We can't download the tool that would fix the SDK version conflict since the downloader already requires the correct SDK. What I'd like to see is:\r\n\r\n1) `dotnet tool install --any-sdk-version --tool-path tools fake-cli`\r\n2) `tools\\fake.exe build --target Build`\r\n3) --> FAKE runs and installs the correct SDK with it's own functionality\r\n\r\nAs written above 1) is already failing since dotnet tool requires the SDK version from `global.json`\r\n\r\n## Workaround\r\n\r\n1) Install `fake-cli` package with Paket or NuGet\r\n2) `dotnet \"packages\\build\\Fake-Cli\\tools\\netcoreapp2.1\\any\\fake-cli.dll\" build --target Build`\r\n\r\nNote how this dotnet command does not requirer the correct SDK version.\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11499","RelatedDescription":"Open issue \"Allow dotnet commands to bypass the global.json version check\" (#11499)"},{"Id":"452773345","IsPullRequest":true,"CreatedAt":"2019-06-06T05:11:58","Actor":"livarcocc","Number":"11496","RawContent":null,"Title":"Update SDK to 2.2.400-preview-64205-02","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11496","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.400-preview-64205-02\" (#11496)"},{"Id":"452773026","IsPullRequest":true,"CreatedAt":"2019-06-06T05:11:46","Actor":"livarcocc","Number":"11495","RawContent":null,"Title":"Updating SDK to 2.1.800-preview-64205-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11495","RelatedDescription":"Closed or merged PR \"Updating SDK to 2.1.800-preview-64205-01\" (#11495)"},{"Id":"452467345","IsPullRequest":true,"CreatedAt":"2019-06-06T04:30:38","Actor":"dotnet-maestro[bot]","Number":"11488","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 12:51 PM\r\n- **Commit**: 778af19c2c7f99320fe33d38b18003483ebed559\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19304.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11488","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11488)"},{"Id":"452465223","IsPullRequest":true,"CreatedAt":"2019-06-06T04:30:21","Actor":"dotnet-maestro[bot]","Number":"11487","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 10:24 AM\r\n- **Commit**: f9a338d041118637890869bba587b82557947f8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11487","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11487)"},{"Id":"452770195","IsPullRequest":false,"CreatedAt":"2019-06-06T00:03:14","Actor":"wli3","Number":"11494","RawContent":null,"Title":"A new option to allow dotnet tool install should return exit code 0 if tool is already installed","State":"open","Body":"Continue of https://github.com/dotnet/cli/issues/11259 to make the topic more specific. Even thought \"dotnet update\" with \"--version\" could solve the similar issue, but it is hard to discover.","Url":"https://github.com/dotnet/cli/issues/11494","RelatedDescription":"Open issue \"A new option to allow dotnet tool install should return exit code 0 if tool is already installed\" (#11494)"},{"Id":"452626424","IsPullRequest":true,"CreatedAt":"2019-06-05T22:29:47","Actor":"livarcocc","Number":"11492","RawContent":null,"Title":"Updating MSBuild and Roslyn in release/2.2.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11492","RelatedDescription":"Closed or merged PR \"Updating MSBuild and Roslyn in release/2.2.4xx\" (#11492)"},{"Id":"452625162","IsPullRequest":true,"CreatedAt":"2019-06-05T22:29:30","Actor":"livarcocc","Number":"11491","RawContent":null,"Title":"Updating MSBuild and Roslyn in release/2.1.8xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11491","RelatedDescription":"Closed or merged PR \"Updating MSBuild and Roslyn in release/2.1.8xx\" (#11491)"},{"Id":"452662861","IsPullRequest":true,"CreatedAt":"2019-06-05T18:55:02","Actor":"peterhuene","Number":"11493","RawContent":null,"Title":"Remove unused variables from BundledVersions.props.","State":"open","Body":"This commit removes the unused (2.1 SDK) patch level variables from\r\n`Microsoft.NETCoreSdk.BundledVersions.props`.\r\n\r\nThese variables were superseded by the `ImplicitPackageVariable` item group in\r\nthe 2.2 SDK.\r\n\r\nTheir presence is unnecessary and the values are out of date.\r\n\r\nFixes #10908.","Url":"https://github.com/dotnet/cli/pull/11493","RelatedDescription":"Open PR \"Remove unused variables from BundledVersions.props.\" (#11493)"},{"Id":"452465050","IsPullRequest":true,"CreatedAt":"2019-06-05T18:45:09","Actor":"dotnet-maestro[bot]","Number":"11486","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11486","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11486)"},{"Id":"452613032","IsPullRequest":false,"CreatedAt":"2019-06-05T16:59:12","Actor":"Thraka","Number":"11490","RawContent":null,"Title":"the -d parameter doesn't provide me with diagnostic information","State":"open","Body":"Any time I use the -d parameter I get a message about telemetry is turned on, but I get no error/warning/trace output in the console. I can't figure out why my nuget template package will not install with `dotnet -d new -i c:\\path\\to\\nupkg`\r\n\r\n## Steps to reproduce\r\n\r\nRun a command with `dotnet -d` and no extra information is displayed.\r\n\r\n## Expected  behavior\r\n\r\nI get more debug output to understand what the command is doing.\r\n\r\n## Actual behavior\r\n\r\nOnly `Telemetry is: Enabled` is displayed.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   c:\\program files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [c:\\program files\\dotnet\\sdk]\r\n  2.1.502 [c:\\program files\\dotnet\\sdk]\r\n  2.1.504 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600 [c:\\program files\\dotnet\\sdk]\r\n  2.1.602 [c:\\program files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [c:\\program files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [c:\\program files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [c:\\program files\\dotnet\\sdk]\r\n  2.2.101 [c:\\program files\\dotnet\\sdk]\r\n  2.2.300-preview-010046 [c:\\program files\\dotnet\\sdk]\r\n  2.2.300-preview-010067 [c:\\program files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [c:\\program files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [c:\\program files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [c:\\program files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/dotnet/cli/issues/11490","RelatedDescription":"Open issue \"the -d parameter doesn't provide me with diagnostic information\" (#11490)"},{"Id":"452473022","IsPullRequest":true,"CreatedAt":"2019-06-05T12:26:53","Actor":"dotnet-maestro[bot]","Number":"11489","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11489","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11489)"},{"Id":"452382871","IsPullRequest":false,"CreatedAt":"2019-06-05T08:47:30","Actor":"LightVolk","Number":"11485","RawContent":null,"Title":"Add solution folder argument to dotnet-sln show-folders  (show solution folders)","State":"open","Body":"Feature request:\r\n\r\nIf possible, can this fucntionality be added: list of solution folders?\r\nUse case:\r\n\r\n1. List of solution folders (dotnet sln show folders)\r\n2. Add new project under on of this solution folder.  (dotnet sln add project)\r\n\r\nIt must be related to PR: [https://github.com/dotnet/cli/pull/11000](url)\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11485","RelatedDescription":"Open issue \"Add solution folder argument to dotnet-sln show-folders  (show solution folders)\" (#11485)"},{"Id":"452255633","IsPullRequest":false,"CreatedAt":"2019-06-04T23:48:49","Actor":"wli3","Number":"11482","RawContent":null,"Title":"ToolManifestEditor should catch FormatException ","State":"open","Body":"https://github.com/dotnet/cli/blob/8ab442a668e63d902d03715b84f0764a92ee13eb/src/dotnet/ToolManifest/ToolManifestEditor.cs#L218-L223\r\n\r\nThe TryGetInt32Value API could throw FormatException if the JSON payload had \"version\" property with a non-int32 value (like double - e.g. 1.23 or (u)int64 - e.g. 4294967296).\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11482","RelatedDescription":"Open issue \"ToolManifestEditor should catch FormatException \" (#11482)"},{"Id":"452226944","IsPullRequest":true,"CreatedAt":"2019-06-04T23:12:22","Actor":"nguerrera","Number":"11481","RawContent":null,"Title":"Remove dotnet migrate","State":"closed","Body":"`dotnet migrate` will not be supported in .NET Core SDK 3.0.100+\r\n\r\nThis removes it.\r\n\r\nFix https://github.com/dotnet/cli/issues/11458","Url":"https://github.com/dotnet/cli/pull/11481","RelatedDescription":"Closed or merged PR \"Remove dotnet migrate\" (#11481)"},{"Id":"451958308","IsPullRequest":true,"CreatedAt":"2019-06-04T22:45:27","Actor":"dotnet-maestro[bot]","Number":"11476","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190603.5\r\n- **Date Produced**: 6/4/2019 4:11 AM\r\n- **Commit**: 69d51538bdbdb03c758b924f887a6f596e590c7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19303.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11476)"},{"Id":"452139304","IsPullRequest":false,"CreatedAt":"2019-06-04T18:19:23","Actor":"spartanroger","Number":"11480","RawContent":null,"Title":"Support custom scripts","State":"open","Body":"My project has some micro-services written with DotNet Core C# and we have some scripts that we use very often and are very long to remind, so we put them in a README.MD file and copy every time, which isn't very productive.\r\n\r\nExample: \r\n\r\n```\r\ndotnet test --no-build /p:CollectCoverage=true /p:Exclude=\\\"[Crosscutting.*]*,[xunit.*]*\\\" /p:CoverletOutputFormat=cobertura /p:CoverletOutput='../'\r\n```\r\n\r\nAnd would be very nice if we could just have a JSON file in the project root folder and add some shortcuts. Just like npm-scripts (but without installing anything other than the dotnet cli).\r\n\r\n```\r\n{\r\ntests: dotnet test --no-build /p:CollectCoverage=true /p:Exclude=\\\"[Crosscutting.*]*,[xunit.*]*,[*]*.Models*,[*]*.DTO*\\\" /\r\n}\r\n```","Url":"https://github.com/dotnet/cli/issues/11480","RelatedDescription":"Open issue \"Support custom scripts\" (#11480)"},{"Id":"451654883","IsPullRequest":true,"CreatedAt":"2019-06-04T17:11:08","Actor":"dotnet-maestro[bot]","Number":"11474","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 7:39 PM\r\n- **Commit**: 9a92095d8ad0112291573385dc8f67adfdfe9322\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19303.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11474","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11474)"},{"Id":"452107950","IsPullRequest":false,"CreatedAt":"2019-06-04T17:03:34","Actor":"ardove","Number":"11479","RawContent":null,"Title":"dotnet global tool exe product version should match product version of dll","State":"open","Body":"## Steps to reproduce\r\n* Create a dotnet global tool\r\n* In the assembly properties of the csproj specify the version to be 0.0.1\r\n* Install the global tool on a windows host\r\n* Inspect the executable generated by installation in C:\\Users\\<userName>\\.dotnet\\tools\r\n\r\n## Expected  behavior\r\nProduct version should be 0.0.1 and file version should be 0.0.1.0\r\n\r\n## Actual behavior\r\nProduct version and file version are blank\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11479","RelatedDescription":"Open issue \"dotnet global tool exe product version should match product version of dll\" (#11479)"},{"Id":"452087196","IsPullRequest":false,"CreatedAt":"2019-06-04T16:14:42","Actor":"ardove","Number":"11478","RawContent":null,"Title":"dotnet tool install/uninstall should support post-install/uninstall action","State":"open","Body":"In dotnet templates, you can run a set of specific, standardized actions or even a custom script after a template is executed. It'd be great if the dotnet tool install supported something similar as part of the distributed nuget package. \r\n\r\nA good use case for this is that we have a dotnet global tool which uses a specific set of templates. It supports a command to install/update the templates, but it means that any user of the CLI needs to either have already installed the template via the dotnet cli or installed the global tool and run the update/install command. \r\n\r\nFurthermore, when troubleshooting our global tool, I think a user would be confused if they ran a dotnet tool uninstall and there were still leftover artifacts (even if those artifacts are just dependencies). \r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                       etCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                       etCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shar                                                                       ed\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared                                                                       \\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore                                                                       .App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\                                                                       Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\                                                                       shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11478","RelatedDescription":"Open issue \"dotnet tool install/uninstall should support post-install/uninstall action\" (#11478)"},{"Id":"451961368","IsPullRequest":true,"CreatedAt":"2019-06-04T12:49:48","Actor":"dotnet-maestro[bot]","Number":"11477","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 1:06 PM\r\n- **Commit**: a59c4747634fcbfa08493b7348ad9ba07b5599dc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19303.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11477)"},{"Id":"451958119","IsPullRequest":true,"CreatedAt":"2019-06-04T12:42:09","Actor":"dotnet-maestro[bot]","Number":"11475","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11475","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11475)"},{"Id":"451619975","IsPullRequest":true,"CreatedAt":"2019-06-03T18:50:56","Actor":"dotnet-maestro[bot]","Number":"11473","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190603.2\r\n- **Date Produced**: 6/3/2019 6:06 PM\r\n- **Commit**: 3f2e65dd99395dfb5741d943158243bc77c4ac80\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19303.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11473","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#11473)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"453020508","IsPullRequest":true,"CreatedAt":"2019-06-06T13:17:28","Actor":"dotnet-maestro[bot]","Number":"1233","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:50 AM\r\n- **Commit**: 71aec681dd1247979e7956372abae8bbc02c9546\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1233","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1233)"},{"Id":"452992389","IsPullRequest":true,"CreatedAt":"2019-06-06T12:14:38","Actor":"dotnet-maestro[bot]","Number":"1232","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19305.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1232","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1232)"},{"Id":"450570292","IsPullRequest":true,"CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Number":"1219","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders","State":"closed","Body":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz ","Url":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Closed or merged PR \"Add HttpResponseMessage.TrailingHeaders\" (#1219)"},{"Id":"452490563","IsPullRequest":true,"CreatedAt":"2019-06-05T13:16:16","Actor":"dotnet-maestro[bot]","Number":"1231","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1231)"},{"Id":"452464354","IsPullRequest":true,"CreatedAt":"2019-06-05T12:14:49","Actor":"dotnet-maestro[bot]","Number":"1230","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1230","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1230)"},{"Id":"451078421","IsPullRequest":true,"CreatedAt":"2019-06-05T00:46:32","Actor":"dotnet-maestro[bot]","Number":"1224","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1224)"},{"Id":"451983344","IsPullRequest":true,"CreatedAt":"2019-06-04T13:12:14","Actor":"dotnet-maestro[bot]","Number":"1229","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 8:34 AM\r\n- **Commit**: 6d5959cbc7d489406f8f85dba0a42f06d4a0ea9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1229","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1229)"},{"Id":"451725417","IsPullRequest":false,"CreatedAt":"2019-06-03T23:00:31","Actor":"wpatter6","Number":"1228","RawContent":null,"Title":"Hosting environment or server.mappath in .net framework","State":"open","Body":"Hi, I'm building a nuget package that will be used in both .NET Framework 4.6.2+ and dotnet core MVC type applications.\r\n\r\nThere is some functionality I'm providing that requires knowing the web root path.  Within the dotnet core world, I'm able to access the hosting environment and get the web root from there. \r\n\r\nBut how can this be done for framework 4.6.2+ applications, without the hosting environment, Server.MapPath or some equivalent?  Is it possible?  \r\n\r\nI'm currently using `Directory.GetCurrentDirectory() + @\"..\\..\\\";` but this is obviously quite hacky and only supports the default hosting configuration.\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1228","RelatedDescription":"Open issue \"Hosting environment or server.mappath in .net framework\" (#1228)"},{"Id":"449369049","IsPullRequest":false,"CreatedAt":"2019-06-03T13:58:00","Actor":"llolic","Number":"1214","RawContent":null,"Title":"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.","State":"closed","Body":"I am getting \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.'\"\r\nI have made an application in vs 2019 that currently just has a textbox, a textblock, and a button. When I run it, the error is shown for the following line: \"rootFrame.Navigate(typeof(MainPage), e.Arguments);\"\r\n\r\nDoes anyone know how to fix this error?","Url":"https://github.com/dotnet/standard/issues/1214","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\" (#1214)"},{"Id":"451464633","IsPullRequest":true,"CreatedAt":"2019-06-03T12:58:57","Actor":"dotnet-maestro[bot]","Number":"1227","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 10:38 AM\r\n- **Commit**: 0eed4042f056b4d9f6f4d1bf2918e234d67a6f88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1227","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1227)"},{"Id":"451188035","IsPullRequest":true,"CreatedAt":"2019-06-02T12:49:02","Actor":"dotnet-maestro[bot]","Number":"1226","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1226)"},{"Id":"451082070","IsPullRequest":true,"CreatedAt":"2019-06-01T12:54:30","Actor":"dotnet-maestro[bot]","Number":"1225","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1225)"},{"Id":"450941804","IsPullRequest":true,"CreatedAt":"2019-05-31T22:52:40","Actor":"dotnet-maestro-bot","Number":"1221","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @wtgodbe\n* @dotnet-maestro[bot]\n* @ericstj\n* @terrajobst\n* @ViktorHofer\n* @JohnTortugo\n* @joperezr\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1221","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1221)"},{"Id":"450951486","IsPullRequest":true,"CreatedAt":"2019-05-31T19:59:28","Actor":"safern","Number":"1222","RawContent":null,"Title":"Revert \"Add bulk operations to Collection<T>\"","State":"closed","Body":"Due to: https://github.com/dotnet/corefx/issues/38085\r\n\r\ncc: @terrajobst @wtgodbe @karelz ","Url":"https://github.com/dotnet/standard/pull/1222","RelatedDescription":"Closed or merged PR \"Revert \"Add bulk operations to Collection<T>\"\" (#1222)"},{"Id":"450955142","IsPullRequest":true,"CreatedAt":"2019-05-31T19:49:00","Actor":"wtgodbe","Number":"1223","RawContent":null,"Title":"Update branding to preview7 in master","State":"closed","Body":"CC @terrajobst @mmitche ","Url":"https://github.com/dotnet/standard/pull/1223","RelatedDescription":"Closed or merged PR \"Update branding to preview7 in master\" (#1223)"},{"Id":"449798213","IsPullRequest":true,"CreatedAt":"2019-05-31T17:00:11","Actor":"dotnet-maestro[bot]","Number":"1216","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190528.7\r\n- **Date Produced**: 5/29/2019 4:03 AM\r\n- **Commit**: c7d48ca7732b7717e84d8375588d83866104ef58\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19278.7\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190529.8\r\n- **Date Produced**: 5/30/2019 8:05 AM\r\n- **Commit**: e23119d577e644d2c2a25419c88c1181681358e0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19279.8\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 9:51 AM\r\n- **Commit**: 82408cd90f4d4573d502e8df2ca437b35e6a37f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19281.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1216","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1216)"},{"Id":"450765638","IsPullRequest":true,"CreatedAt":"2019-05-31T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1220","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1220","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1220)"},{"Id":"450273832","IsPullRequest":true,"CreatedAt":"2019-05-30T12:36:19","Actor":"dotnet-maestro[bot]","Number":"1218","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1218)"},{"Id":"450026795","IsPullRequest":true,"CreatedAt":"2019-05-29T22:45:51","Actor":"ericstj","Number":"1217","RawContent":null,"Title":"Source build fixes","State":"closed","Body":"Use GenFacades instead of GenAPI and remove GenAPI and APICompat from source build.","Url":"https://github.com/dotnet/standard/pull/1217","RelatedDescription":"Closed or merged PR \"Source build fixes\" (#1217)"},{"Id":"449768348","IsPullRequest":true,"CreatedAt":"2019-05-29T12:16:21","Actor":"dotnet-maestro[bot]","Number":"1215","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1215","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1215)"},{"Id":"449247865","IsPullRequest":true,"CreatedAt":"2019-05-28T12:54:12","Actor":"dotnet-maestro[bot]","Number":"1213","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190527.2\r\n- **Date Produced**: 5/27/2019 11:45 PM\r\n- **Commit**: d58a8ade31b4731759c92df00d0f6398c52f3d83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19277.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1213","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1213)"},{"Id":"448751215","IsPullRequest":false,"CreatedAt":"2019-05-27T09:16:48","Actor":"KexyBiscuit","Number":"1212","RawContent":null,"Title":"NETSDK1073 occurs on netcoreapp3.0 projects","State":"open","Body":"```\r\n>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012085\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(194,5): error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\r\n```\r\n\r\n```\r\n<TargetFramework>netcoreapp3.0</TargetFramework>\r\n\r\n<ItemGroup>\r\n  <PackageReference Include=\"System.Text.Encoding.CodePages\" Version=\"4.6.0-preview5.19224.8\" /> <!--It doesn't matter what's referenced-->\r\n</ItemGroup>\r\n```","Url":"https://github.com/dotnet/standard/issues/1212","RelatedDescription":"Open issue \"NETSDK1073 occurs on netcoreapp3.0 projects\" (#1212)"},{"Id":"448462812","IsPullRequest":true,"CreatedAt":"2019-05-25T13:11:36","Actor":"dotnet-maestro[bot]","Number":"1211","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19274.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1211","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1211)"},{"Id":"448458458","IsPullRequest":true,"CreatedAt":"2019-05-25T12:20:56","Actor":"dotnet-maestro[bot]","Number":"1210","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1210","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1210)"},{"Id":"448225868","IsPullRequest":false,"CreatedAt":"2019-05-24T15:20:02","Actor":"dagood","Number":"1209","RawContent":null,"Title":"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup","State":"open","Body":"(See https://github.com/dotnet/standard/issues/1106)\r\n\r\nThe netstandard targeting pack may not version completely in sync with .NET Core Runtime, so producing it in Core-Setup via a transport package is not ideal. These artifacts should be produced in dotnet/standard itself.\r\n\r\nI don't think it makes sense to work on this until targeting pack infra is shared. (https://github.com/dotnet/core-setup/issues/4773)","Url":"https://github.com/dotnet/standard/issues/1209","RelatedDescription":"Open issue \"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup\" (#1209)"},{"Id":"448158285","IsPullRequest":true,"CreatedAt":"2019-05-24T13:09:47","Actor":"dotnet-maestro[bot]","Number":"1208","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19273.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1208","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1208)"},{"Id":"448135323","IsPullRequest":true,"CreatedAt":"2019-05-24T12:21:08","Actor":"dotnet-maestro[bot]","Number":"1207","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1207","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1207)"},{"Id":"447649294","IsPullRequest":true,"CreatedAt":"2019-05-23T13:11:12","Actor":"dotnet-maestro[bot]","Number":"1206","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1206)"},{"Id":"447620634","IsPullRequest":true,"CreatedAt":"2019-05-23T12:15:47","Actor":"dotnet-maestro[bot]","Number":"1205","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1205)"},{"Id":"447122667","IsPullRequest":true,"CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Number":"1204","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1204)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"453343234","IsPullRequest":true,"CreatedAt":"2019-06-07T05:24:40","Actor":"davidfowl","Number":"38326","RawContent":null,"Title":"Added CopyToAsync(PipeWriter)","State":"open","Body":"- Reuse existing CopyToAsync routine to implement the PipeWriter overload.\r\n- Added tests for PipeWriter overload\r\n\r\nFixes #35513","Url":"https://github.com/dotnet/corefx/pull/38326","RelatedDescription":"Open PR \"Added CopyToAsync(PipeWriter)\" (#38326)"},{"Id":"453001876","IsPullRequest":true,"CreatedAt":"2019-06-07T03:14:44","Actor":"dotnet-maestro[bot]","Number":"38304","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190605.02\r\n- **Date Produced**: 6/6/2019 4:20 AM\r\n- **Commit**: 2e54d1f6a6a9126126d6c9f8d730489892acf730\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27805-02\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview7-27805-02\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview7-27805-02\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38304","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#38304)"},{"Id":"452894357","IsPullRequest":true,"CreatedAt":"2019-06-07T02:56:57","Actor":"timandy","Number":"38300","RawContent":null,"Title":"Simplify loop add with UnionWith method.","State":"closed","Body":"Set.UnionWith do the same thing.  This PR call this method like :\r\n\r\n\r\nhttps://github.com/dotnet/corefx/blob/4e0c8ec7b124e2a1c5294bee24e61ef42bbd79ec/src/System.Linq/src/System/Linq/Distinct.SpeedOpt.cs#L16\r\n\r\nhttps://github.com/dotnet/corefx/blob/4e0c8ec7b124e2a1c5294bee24e61ef42bbd79ec/src/System.Linq/src/System/Linq/Union.SpeedOpt.cs#L24","Url":"https://github.com/dotnet/corefx/pull/38300","RelatedDescription":"Closed or merged PR \"Simplify loop add with UnionWith method.\" (#38300)"},{"Id":"453279627","IsPullRequest":true,"CreatedAt":"2019-06-07T02:51:39","Actor":"wcontayon","Number":"38325","RawContent":null,"Title":"Remove Redundant counter","State":"closed","Body":"Remove redundant counter in System.Collections.Immutable.ImmutableHashSet_1.SetEquals","Url":"https://github.com/dotnet/corefx/pull/38325","RelatedDescription":"Closed or merged PR \"Remove Redundant counter\" (#38325)"},{"Id":"453094486","IsPullRequest":true,"CreatedAt":"2019-06-07T01:54:12","Actor":"stephentoub","Number":"38309","RawContent":null,"Title":"Add nullable attributes to partial facade implementations","State":"closed","Body":"cc: @dotnet/nullablefc \r\nBlocked on https://github.com/dotnet/corefx/pull/38170","Url":"https://github.com/dotnet/corefx/pull/38309","RelatedDescription":"Closed or merged PR \"Add nullable attributes to partial facade implementations\" (#38309)"},{"Id":"453273520","IsPullRequest":true,"CreatedAt":"2019-06-06T23:01:32","Actor":"scalablecory","Number":"38324","RawContent":null,"Title":"HPACK fixes and tests","State":"open","Body":"Resolves #31316 \r\n\r\nFixes:\r\n- Fix check allowing out-of-bounds write in IntegerEncoder when an integer requires more than one byte and there is not enough buffer space.\r\n- Encode Content-Type with a \"Literal Header Without Indexing -- Indexed Name\" rather than with a literal name.\r\n\r\nUpdates: (ported from ASP.NET)\r\n- Dynamic table size update must be the first instruction in the header block. Throw an exception when not the case.\r\n- Throw an exception when we've reached the end of header data and we are still mid-parse.\r\n\r\nNew:\r\n- Asserts, documentation, and tests for IntegerEncoder and IntegerDecoder.\r\n- Tests to verify HttpClient is choosing the best encoding for headers.\r\n- HPackDecoder tests (ported from ASP.NET)","Url":"https://github.com/dotnet/corefx/pull/38324","RelatedDescription":"Open PR \"HPACK fixes and tests\" (#38324)"},{"Id":"453269845","IsPullRequest":true,"CreatedAt":"2019-06-06T22:46:02","Actor":"Anipik","Number":"38323","RawContent":null,"Title":"Correcting some invalid array json inputs","State":"open","Body":"Related to https://github.com/dotnet/corefx/issues/37188\r\n\r\ncorrects exceptions for \r\n\r\n```csharp\r\n[Theory]\r\n[InlineData(typeof(int[]), @\"1\")]\r\n[InlineData(typeof(int[]), @\"{}\")]\r\n[InlineData(typeof(Dictionary<string, int[]>), @\"{\"\"test\"\": {}}\")]\r\n[InlineData(typeof(Dictionary<string, int[]>), @\"{\"\"test\"\": 1}\")]\r\npublic static void InvalidJsonForArrayShouldFail(Type type, string json)\r\n{\r\n       Assert.Throws<JsonException>(() => JsonSerializer.Parse(json, type));\r\n}\r\n```\r\n\r\nThe remaing two will be fixed by steve harter TypeConverterChange\r\n","Url":"https://github.com/dotnet/corefx/pull/38323","RelatedDescription":"Open PR \"Correcting some invalid array json inputs\" (#38323)"},{"Id":"453187059","IsPullRequest":true,"CreatedAt":"2019-06-06T22:13:54","Actor":"DustinCampbell","Number":"38317","RawContent":null,"Title":"Allow ReflectPropertyDescriptor to reflect over non-public members","State":"closed","Body":"Fixes #38311\r\n\r\nOn .NET Framework, ReflectPropertyDescriptor can access non-public members, but has been disabled on .NET Core since ReflectPropertyDescriptor was ported. Most PropertyDescriptor runtime scenarios don't require this behavior, but design-time scenarios do. Component/Control designers can (and do) create new PropertyDescriptors that expose non-public properties from runtime components for design-time (e.g. for display in the Property Browser). In addition, designers often create \"shadow\" properties which are used at design-time in place of the actual properties on the runtime components. A shadowed property is normally declared as private, but ReflectPropertyDescriptor still needs to be able to find it.","Url":"https://github.com/dotnet/corefx/pull/38317","RelatedDescription":"Closed or merged PR \"Allow ReflectPropertyDescriptor to reflect over non-public members\" (#38317)"},{"Id":"453132024","IsPullRequest":false,"CreatedAt":"2019-06-06T22:13:54","Actor":"DustinCampbell","Number":"38311","RawContent":null,"Title":"ReflectPropertyDescriptor no longer works for non-public properties","State":"closed","Body":"On .NET Framework, ReflectPropertyDescriptor will find property accessors, and \"Reset\" and \"ShouldSerialize\" methods, even if they're not declared publicly. Component and control designers in the WinForms designer typically take advantage of this by declaring design-time properties as private. In addition, the WinForms designer also exposes existing non-public properties as public for the purpose of being able to display them in the Property Browser (e.g. Control.DoubleBuffer).\r\n\r\nThis is currently blocking WinForms Designer. I'll prepare a fix and submit a PR.","Url":"https://github.com/dotnet/corefx/issues/38311","RelatedDescription":"Closed issue \"ReflectPropertyDescriptor no longer works for non-public properties\" (#38311)"},{"Id":"453252079","IsPullRequest":true,"CreatedAt":"2019-06-06T21:46:07","Actor":"tannergooding","Number":"38322","RawContent":null,"Title":"Fixing up the System.Text.Json to handle floats/doubles according to the underlying framework","State":"open","Body":"This should resolve https://github.com/dotnet/corefx/issues/33997.\r\n\r\nCC. @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/38322","RelatedDescription":"Open PR \"Fixing up the System.Text.Json to handle floats/doubles according to the underlying framework\" (#38322)"},{"Id":"453237601","IsPullRequest":true,"CreatedAt":"2019-06-06T21:04:20","Actor":"maryamariyan","Number":"38321","RawContent":null,"Title":"[Code Coverage] Test for Utf8JsonReader.TryGetGuid","State":"open","Body":"- For value sequence","Url":"https://github.com/dotnet/corefx/pull/38321","RelatedDescription":"Open PR \"[Code Coverage] Test for Utf8JsonReader.TryGetGuid\" (#38321)"},{"Id":"453195169","IsPullRequest":true,"CreatedAt":"2019-06-06T21:02:39","Actor":"dotnet-maestro-bot","Number":"38318","RawContent":null,"Title":"Update ProjectNTfs to beta-27806-00 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/38318","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs to beta-27806-00 (master)\" (#38318)"},{"Id":"453235448","IsPullRequest":true,"CreatedAt":"2019-06-06T20:58:22","Actor":"YohDeadfall","Number":"38320","RawContent":null,"Title":"Removed lost and unused file","State":"open","Body":"/cc @steveharter @ahsonkhan","Url":"https://github.com/dotnet/corefx/pull/38320","RelatedDescription":"Open PR \"Removed lost and unused file\" (#38320)"},{"Id":"452906175","IsPullRequest":false,"CreatedAt":"2019-06-06T20:24:32","Actor":"VGib","Number":"38302","RawContent":null,"Title":"use a foreach with for if input foreach enumerable is an array","State":"closed","Body":"Hello,\r\n\r\ni don't know if it has been done, since I use the .net Framework 4.5.\r\n\r\nBut i get big performance increase when dealing with calculating code with lot of arrays, which such a method (I just check  that the IEnumerable is IList, since this has been lot done in your Linq code)\r\n\r\n```csharp\r\n public static void ForEach<T>(this IEnumerable<T> values, Action<T> doOnValue)\r\n        {\r\n            var valuesAsList = values as IList<T>;\r\n            if (valuesAsList is null)\r\n            {\r\n                foreach (var value in values)\r\n                {\r\n                    doOnValue?.Invoke(value);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for (int position = 0; position < valuesAsList.Count; position++)\r\n                {\r\n                    doOnValue?.Invoke(valuesAsList[position]);\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nthe foreach is a good way for code lisibility. And I have the advantage of for boost , with foreach lisibility.\r\n\r\nIs it possible to do the same for:\r\n```csharp\r\nforeach (var value in myArray)\r\n{\r\n // do some code\r\n}\r\n```\r\n\r\nWhy do you think ? \r\n\r\nRegards,\r\n\r\nVGib","Url":"https://github.com/dotnet/corefx/issues/38302","RelatedDescription":"Closed issue \"use a foreach with for if input foreach enumerable is an array\" (#38302)"},{"Id":"453177857","IsPullRequest":false,"CreatedAt":"2019-06-06T20:17:39","Actor":"Dargazo","Number":"38316","RawContent":null,"Title":".NET Core 2.2.5 Release notes and download links result in 404","State":"closed","Body":"For .NET Core release 2.2.5 (https://github.com/dotnet/core/releases/tag/v2.2.5 ) the \"Release Notes\" link points to:\r\nhttps://github.com/dotnet/core/blob/master/release-notes/1.1/2.2.5/2.2.5.md (which 404s)\r\nthis should be (I'm assuming):\r\nhttps://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md\r\n\r\nSimilarly, the \"Download and Install\" link points to:\r\nhttps://github.com/dotnet/core/blob/master/release-notes/1.1/2.2.5/2.2.5-download.md (which also 404s)\r\nthis should be (I'm assuming):\r\nhttps://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5-download.md","Url":"https://github.com/dotnet/corefx/issues/38316","RelatedDescription":"Closed issue \".NET Core 2.2.5 Release notes and download links result in 404\" (#38316)"},{"Id":"453204149","IsPullRequest":true,"CreatedAt":"2019-06-06T19:38:41","Actor":"layomia","Number":"38319","RawContent":null,"Title":"Add support for non-generic IDictionary","State":"open","Body":"Partially addresses https://github.com/dotnet/corefx/issues/36643.\r\nBuilds on top of https://github.com/dotnet/corefx/pull/38307 which should be reviewed first.\r\nWill follow up with perf notes.","Url":"https://github.com/dotnet/corefx/pull/38319","RelatedDescription":"Open PR \"Add support for non-generic IDictionary\" (#38319)"},{"Id":"453151024","IsPullRequest":true,"CreatedAt":"2019-06-06T18:06:00","Actor":"dotnet-maestro-bot","Number":"38313","RawContent":null,"Title":"Update ProjectNTfs to beta-27806-00 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/38313","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs to beta-27806-00 (master)\" (#38313)"},{"Id":"453165697","IsPullRequest":false,"CreatedAt":"2019-06-06T18:02:16","Actor":"corranrogue9","Number":"38315","RawContent":null,"Title":"Image.FromStream can throw undocumented exceptions","State":"open","Body":"The [documentation](https://docs.microsoft.com/en-us/dotnet/api/system.drawing.image.fromstream?view=netcore-2.2) for ```Image.FromStream``` indicates that an ArgumentException can be thrown if the provided image is not of a supported format. However, on Windows, it can also throw InvalidOperationException, ExternalException, FileNotFoundException, etc. as per the [StatusException](https://github.com/dotnet/corefx/blob/master/src/System.Drawing.Common/src/System/Drawing/Gdiplus.cs) method. The callers of this method do not catch and wrap these exceptions into ArgumentExceptions.\r\n\r\nIt should also be noted that an ExternalException *can* be thrown in the event that the stream does not contain a valid image. Further, in this case, the actual HResult is clobbered by E_FAIL, so the caller of Image.FromStream cannot even handle the case themselves by catching the ExternalException and checking for the appropriate HResult. \r\n\r\nYou can reproduce the above issue with the image generated by:\r\n\r\n```\r\n            // this is a magic number length which, when containing the right bits, the GDI+ library that the Image \r\n            // class leverages is unable to handle\r\n            var photo = new byte[15633];\r\n            // this is a jpeg header\r\n            var header = Convert.FromBase64String(\"/9j/4AAQSkZJRgABAQEAAA==\");\r\n            // this is a sequence of bytes which, when at the end of a jpeg of the given length, is not a valid jpeg\r\n            // format and GDI+ does not handle gracefully\r\n            var footer = Convert.FromBase64String(\r\n                \"/8AAEQgEOAeAAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQE\" +\r\n                \"CAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZG\" +\r\n                \"VmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6\" +\r\n                \"Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUh\" +\r\n                \"MQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWp\" +\r\n                \"zdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9P\" +\r\n                \"X29/j5+v/aAAwDAQACEQM=\");\r\n            Buffer.BlockCopy(header, 0, photo, 0, header.Length);\r\n            Buffer.BlockCopy(footer, 0, photo, photo.Length - footer.Length, footer.Length);\r\n```","Url":"https://github.com/dotnet/corefx/issues/38315","RelatedDescription":"Open issue \"Image.FromStream can throw undocumented exceptions\" (#38315)"},{"Id":"453154893","IsPullRequest":true,"CreatedAt":"2019-06-06T17:35:49","Actor":"buyaa-n","Number":"38314","RawContent":null,"Title":"Check uncompressed size before decompressing a zip file. Fixes 33058","State":"open","Body":"Fixes #33058\r\nThere is 2 things done in this PR to account uncompressed size for opening/reading zip file\r\n1. Compare compressed uncompressed sizes written in local file header and central directory record. If they don't match throw `InvalidDataException`\r\n- as we were just skipping local file header before added code for reading local file header as needed (account data descriptor in which case the sizes written at the end of compressed file stream)\r\n- and then check data validity.\r\n 2. Truncate inflated stream read up to uncompressed size, throw if it was over uncompressed size","Url":"https://github.com/dotnet/corefx/pull/38314","RelatedDescription":"Open PR \"Check uncompressed size before decompressing a zip file. Fixes 33058\" (#38314)"},{"Id":"453096929","IsPullRequest":true,"CreatedAt":"2019-06-06T17:05:51","Actor":"dotnet-maestro-bot","Number":"38310","RawContent":null,"Title":"Update ProjectNTfs to beta-27806-00 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/38310","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs to beta-27806-00 (master)\" (#38310)"},{"Id":"453135156","IsPullRequest":true,"CreatedAt":"2019-06-06T17:00:02","Actor":"MattGal","Number":"38312","RawContent":null,"Title":"Fix Debian 10 image","State":"closed","Body":"Older image had missing home/helixbot folder which broke reporting;  tested and fixed in run e395a455-344e-411b-9ac2-1b3b89671ca3\r\n\r\n@safern , @wfurt FYI","Url":"https://github.com/dotnet/corefx/pull/38312","RelatedDescription":"Closed or merged PR \"Fix Debian 10 image\" (#38312)"},{"Id":"453088470","IsPullRequest":true,"CreatedAt":"2019-06-06T15:13:05","Actor":"MarcoRossignoli","Number":"38308","RawContent":null,"Title":"[3.0 Bug fix]Fix JsonSerializer.WriteAsync","State":"open","Body":"fixes https://github.com/dotnet/corefx/issues/38294\r\n\r\nProblem found, `continueWriting` is evaluated after `flush data` check.\r\nI don't know if it's ok add `Outerloop` test @davidfowl will test data always available?\r\nThe bug depends on data format flushThreshold and bytes pending.\r\n\r\ncc @rynowak @steveharter @ahsonkhan @JeremyKuhne","Url":"https://github.com/dotnet/corefx/pull/38308","RelatedDescription":"Open PR \"[3.0 Bug fix]Fix JsonSerializer.WriteAsync\" (#38308)"},{"Id":"453003846","IsPullRequest":true,"CreatedAt":"2019-06-06T14:17:15","Actor":"dotnet-maestro[bot]","Number":"38305","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:50 AM\r\n- **Commit**: 71aec681dd1247979e7956372abae8bbc02c9546\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview7.19306.1\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19306.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38305","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#38305)"},{"Id":"453056816","IsPullRequest":true,"CreatedAt":"2019-06-06T14:16:44","Actor":"layomia","Number":"38307","RawContent":null,"Title":"Add support for non-generic IEnumerable, IList, ICollection","State":"open","Body":"Partly addresses https://github.com/dotnet/corefx/issues/36643.\r\n\r\nBenchmarks: https://github.com/dotnet/performance/pull/547.\r\n\r\n|                           Method | ElementCount |        Mean |        Error |       StdDev |      Median |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\r\n|--------------------------------- |------------- |------------:|-------------:|-------------:|------------:|-------:|-------:|------:|----------:|\r\n|           **DeserializeGenericList** |            **2** |    **550.7 ns** |    **10.684 ns** |    **10.493 ns** |    **555.2 ns** | **0.0515** |      **-** |     **-** |     **216 B** |\r\n|           DeserializeIEnumerable |            2 |  1,586.2 ns |    31.569 ns |    73.791 ns |  1,595.6 ns | 0.1583 |      - |     - |     664 B |\r\n|                 DeserializeIList |            2 |  1,565.6 ns |    30.513 ns |    44.725 ns |  1,558.8 ns | 0.1583 |      - |     - |     664 B |\r\n|           DeserializeICollection |            2 |  1,543.3 ns |    28.938 ns |    45.899 ns |  1,540.2 ns | 0.1583 |      - |     - |     664 B |\r\n| SerializeGenericList_ToUtf8Bytes |            2 |    523.0 ns |    10.527 ns |    21.265 ns |    525.8 ns | 0.0553 |      - |     - |     232 B |\r\n|       SerializeIList_ToUtf8Bytes |            2 |    590.0 ns |    11.848 ns |    28.157 ns |    584.1 ns | 0.0553 |      - |     - |     232 B |\r\n| SerializeIEnumerable_ToUtf8Bytes |            2 |    546.1 ns |     6.353 ns |     5.943 ns |    545.2 ns | 0.0553 |      - |     - |     232 B |\r\n| SerializeICollection_ToUtf8Bytes |            2 |    575.6 ns |     4.637 ns |     4.111 ns |    574.8 ns | 0.0553 |      - |     - |     232 B |\r\n|           **DeserializeGenericList** |           **50** |  **6,577.9 ns** |   **130.163 ns** |   **121.755 ns** |  **6,625.2 ns** | **0.8698** |      **-** |     **-** |    **3664 B** |\r\n|           DeserializeIEnumerable |           50 | 30,287.2 ns |   591.428 ns |   580.862 ns | 30,383.1 ns | 3.6011 | 0.0610 |     - |   15184 B |\r\n|                 DeserializeIList |           50 | 30,452.5 ns |   287.717 ns |   269.131 ns | 30,520.1 ns | 3.6011 | 0.0610 |     - |   15184 B |\r\n|           DeserializeICollection |           50 | 30,592.4 ns |   522.230 ns |   488.495 ns | 30,795.8 ns | 3.6011 | 0.0610 |     - |   15184 B |\r\n| SerializeGenericList_ToUtf8Bytes |           50 |  5,861.5 ns |   101.192 ns |    89.704 ns |  5,876.9 ns | 0.1678 |      - |     - |     704 B |\r\n|       SerializeIList_ToUtf8Bytes |           50 |  8,357.5 ns |   190.401 ns |   561.400 ns |  8,366.6 ns | 0.1678 |      - |     - |     704 B |\r\n| SerializeIEnumerable_ToUtf8Bytes |           50 |  7,646.3 ns |    46.657 ns |    41.361 ns |  7,626.8 ns | 0.1678 |      - |     - |     704 B |\r\n| SerializeICollection_ToUtf8Bytes |           50 |  8,039.4 ns |   153.934 ns |   171.097 ns |  7,984.7 ns | 0.1678 |      - |     - |     704 B |\r\n|           **DeserializeGenericList** |          **100** | **13,310.7 ns** |   **275.124 ns** |   **643.093 ns** | **13,063.2 ns** | **1.7090** |      **-** |     **-** |    **7208 B** |\r\n|           DeserializeIEnumerable |          100 | 65,976.2 ns | 1,314.053 ns | 3,248.014 ns | 64,810.4 ns | 7.2021 |      - |     - |   30328 B |\r\n|                 DeserializeIList |          100 | 61,431.8 ns | 1,201.307 ns | 1,123.703 ns | 61,911.3 ns | 7.2021 | 0.1221 |     - |   30328 B |\r\n|           DeserializeICollection |          100 | 61,920.1 ns | 1,473.649 ns | 1,513.329 ns | 62,189.8 ns | 7.2021 | 0.0610 |     - |   30328 B |\r\n| SerializeGenericList_ToUtf8Bytes |          100 | 11,497.6 ns |   227.366 ns |   295.640 ns | 11,507.6 ns | 0.2747 |      - |     - |    1200 B |\r\n|       SerializeIList_ToUtf8Bytes |          100 | 15,675.2 ns |   216.392 ns |   191.826 ns | 15,707.4 ns | 0.2747 |      - |     - |    1200 B |\r\n| SerializeIEnumerable_ToUtf8Bytes |          100 | 15,078.5 ns |   249.513 ns |   233.394 ns | 15,182.4 ns | 0.2747 |      - |     - |    1200 B |\r\n| SerializeICollection_ToUtf8Bytes |          100 | 15,126.9 ns |   145.512 ns |   136.112 ns | 15,150.1 ns | 0.2747 |      - |     - |    1200 B |\r\n\r\n#### Json.NET\r\nNo deserialization support for `IEnumerable` and `ICollection`\r\n\r\n|                        Method | ElementCount |        Mean |        Error |        StdDev |      Median |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------------------ |------------- |------------:|-------------:|--------------:|------------:|-------:|------:|------:|----------:|\r\n|        **DeserializeGenericList** |            **2** | **21,603.1 ns** | **5,364.263 ns** | **15,647.808 ns** | **12,900.0 ns** |      **-** |     **-** |     **-** |   **2.69 KB** |\r\n|              DeserializeIList |            2 |    847.2 ns |    15.718 ns |     14.702 ns |    848.0 ns | 0.6571 |     - |     - |   2.69 KB |\r\n| SerializeGenericList_ToString |            2 |    567.1 ns |     9.628 ns |      9.006 ns |    569.1 ns | 0.3328 |     - |     - |   1.36 KB |\r\n|       SerializeIList_ToString |            2 |    556.7 ns |    10.366 ns |      9.189 ns |    557.7 ns | 0.3328 |     - |     - |   1.36 KB |\r\n| SerializeIEnumerable_ToString |            2 |    558.2 ns |     8.070 ns |      7.549 ns |    561.1 ns | 0.3328 |     - |     - |   1.36 KB |\r\n| SerializeICollection_ToString |            2 |    544.3 ns |    10.343 ns |     11.496 ns |    545.5 ns | 0.3328 |     - |     - |   1.36 KB |\r\n|        **DeserializeGenericList** |           **50** |  **6,503.7 ns** |   **129.334 ns** |    **181.308 ns** |  **6,448.2 ns** | **1.3657** |     **-** |     **-** |   **5.59 KB** |\r\n|              DeserializeIList |           50 |  6,978.5 ns |    73.368 ns |     65.038 ns |  6,979.7 ns | 1.3657 |     - |     - |   5.59 KB |\r\n| SerializeGenericList_ToString |           50 |  4,470.0 ns |    69.800 ns |     65.291 ns |  4,461.9 ns | 0.6943 |     - |     - |   2.85 KB |\r\n|       SerializeIList_ToString |           50 |  4,570.4 ns |    69.667 ns |     58.175 ns |  4,592.5 ns | 0.6943 |     - |     - |   2.85 KB |\r\n| SerializeIEnumerable_ToString |           50 |  4,626.5 ns |   119.268 ns |    254.169 ns |  4,540.5 ns | 0.6943 |     - |     - |   2.85 KB |\r\n| SerializeICollection_ToString |           50 |  4,462.8 ns |    80.141 ns |     74.964 ns |  4,453.0 ns | 0.6943 |     - |     - |   2.85 KB |\r\n|        **DeserializeGenericList** |          **100** | **12,231.8 ns** |   **241.116 ns** |    **475.939 ns** | **12,086.9 ns** | **2.0905** |     **-** |     **-** |   **8.57 KB** |\r\n|              DeserializeIList |          100 | 15,465.8 ns |   407.606 ns |  1,149.660 ns | 15,303.9 ns | 2.0905 |     - |     - |   8.57 KB |\r\n| SerializeGenericList_ToString |          100 | 49,678.3 ns | 5,560.972 ns | 15,684.820 ns | 49,750.0 ns |      - |     - |     - |    4.9 KB |\r\n|       SerializeIList_ToString |          100 |  8,977.2 ns |   191.709 ns |    537.573 ns |  8,891.2 ns | 1.1902 |     - |     - |    4.9 KB |\r\n| SerializeIEnumerable_ToString |          100 |  8,925.4 ns |   226.102 ns |    622.750 ns |  8,636.3 ns | 1.1902 |     - |     - |    4.9 KB |\r\n| SerializeICollection_ToString |          100 |  8,508.9 ns |    73.005 ns |     64.717 ns |  8,517.8 ns | 1.1902 |     - |     - |    4.9 KB |\r\n\r\n#### Hot-path perf diff\r\nThere seems to be an dependency update lag between the perf and corefx repos, so I'll run a hot-path (de)serialization perf diff later. I don't suspect there are any regressions.","Url":"https://github.com/dotnet/corefx/pull/38307","RelatedDescription":"Open PR \"Add support for non-generic IEnumerable, IList, ICollection\" (#38307)"},{"Id":"453027939","IsPullRequest":true,"CreatedAt":"2019-06-06T13:22:22","Actor":"MarcoRossignoli","Number":"38306","RawContent":null,"Title":"[3.0 System.Text.Json]JsonExtensionData should allow non-JsonElement types during serialization","State":"open","Body":"fixes https://github.com/dotnet/corefx/issues/38238\r\n\r\n~~If we have `Dictionary<string,JsonElement>` we'll emit json properties~~ it's my understanding that isn't needed, I thought that we wanted to have `JsonElement` as property.\r\n~~If we have `Dictionary<string,object>` we'll emit standard dictionary~~\r\nWe serialize all like normal dictionary.\r\nDeserialization produce always `Dictionary<string,JsonElement>`\r\n\r\ncc: @steveharter @ahsonkhan @pakrym \r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38306","RelatedDescription":"Open PR \"[3.0 System.Text.Json]JsonExtensionData should allow non-JsonElement types during serialization\" (#38306)"},{"Id":"452925927","IsPullRequest":false,"CreatedAt":"2019-06-06T09:28:04","Actor":"AriNuer","Number":"38303","RawContent":null,"Title":"Test failure: System.Net.NetworkInformation.Tests.PingTest/SendPingWithIPAddressAndTimeout ","State":"open","Body":"Test `System.Net.NetworkInformation.Tests.PingTest/SendPingWithIPAddressAndTimeout ` has failed.\r\n\r\nMessage :\r\n```\r\nSystem.Net.NetworkInformation.PingException : An exception occurred during a Ping request.\r\n---- System.Net.NetworkInformation.PingException : An exception occurred during a Ping request.\r\n```\r\n\r\nStack Trace :\r\n```\r\n at System.Net.NetworkInformation.Ping.Send(IPAddress address, Int32 timeout, Byte[] buffer, PingOptions options) in /_/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.cs:line 237\r\n   at System.Net.NetworkInformation.Ping.Send(IPAddress address, Int32 timeout, Byte[] buffer) in /_/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.cs:line 202\r\n   at System.Net.NetworkInformation.Ping.Send(IPAddress address, Int32 timeout) in /_/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.cs:line 192\r\n   at System.Net.NetworkInformation.Tests.PingTest.<>c__DisplayClass10_0.<SendPingWithIPAddressAndTimeout>b__0(Ping ping) in /_/src/System.Net.Ping/tests/FunctionalTests/PingTest.cs:line 205\r\n   at System.Net.NetworkInformation.Tests.PingTest.SendPing(Func`2 sendPing, Action`1 pingResultValidator) in /_/src/System.Net.Ping/tests/FunctionalTests/PingTest.cs:line 769\r\n   at System.Net.NetworkInformation.Tests.PingTest.SendBatchPing(Func`2 sendPing, Action`1 pingResultValidator) in /_/src/System.Net.Ping/tests/FunctionalTests/PingTest.cs:line 750\r\n   at System.Net.NetworkInformation.Tests.PingTest.SendPingWithIPAddressAndTimeout() in /_/src/System.Net.Ping/tests/FunctionalTests/PingTest.cs:line 210\r\n----- Inner Stack Trace -----\r\n   at System.Net.NetworkInformation.Ping.SendWithPingUtility(IPAddress address, Byte[] buffer, Int32 timeout, PingOptions options) in /_/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.Unix.cs:line 297\r\n   at System.Net.NetworkInformation.Ping.SendPingCore(IPAddress address, Byte[] buffer, Int32 timeout, PingOptions options) in /_/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.Unix.cs:line 26\r\n   at System.Net.NetworkInformation.Ping.Send(IPAddress address, Int32 timeout, Byte[] buffer, PingOptions options) in /_/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.cs:line 233\r\n```\r\n\r\nBuild : -2[0190605.78](https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190605.78)(Master)\r\n\r\nFailing configurations:\r\n\r\n- OSX.1012.Amd64.Open-x64-Release\r\n\r\nDetails:\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190605.78/workItem/System.Net.Ping.Functional.Tests/analysis/xunit/System.Net.NetworkInformation.Tests.PingTest~2FSendPingWithIPAddressAndTimeout","Url":"https://github.com/dotnet/corefx/issues/38303","RelatedDescription":"Open issue \"Test failure: System.Net.NetworkInformation.Tests.PingTest/SendPingWithIPAddressAndTimeout \" (#38303)"},{"Id":"452902881","IsPullRequest":false,"CreatedAt":"2019-06-06T08:39:42","Actor":"iwhp","Number":"38301","RawContent":null,"Title":"MEF2 - Breaking Change in MEF2 (compared to MEF1) - Cycling Reference","State":"open","Body":"Please also see: https://github.com/iwhp/Mef1-vs-Mef2-CycleComposition\r\n\r\n**MEF1**\r\nIm MEF1 it is possible to have a cycling reference between two components (see ClassA and ClassB), even if the components are non-shared (`[PartCreationPolicy(CreationPolicy.NonShared)]`).\r\n\r\nThis is possible by using `Lazy`\r\n\r\n` public Lazy<ClassB> ClassB { get; set; }`\r\n\r\n**MEF2**\r\nIm MEF2 this is not working.\r\nIs there a work-around?","Url":"https://github.com/dotnet/corefx/issues/38301","RelatedDescription":"Open issue \"MEF2 - Breaking Change in MEF2 (compared to MEF1) - Cycling Reference\" (#38301)"},{"Id":"452868461","IsPullRequest":true,"CreatedAt":"2019-06-06T07:16:22","Actor":"safern","Number":"38299","RawContent":null,"Title":"Add nullable annotations to System.Memory ref assembly","State":"open","Body":"Yet to be reviewed in API Review.\r\n\r\ncc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/corefx/pull/38299","RelatedDescription":"Open PR \"Add nullable annotations to System.Memory ref assembly\" (#38299)"},{"Id":"452857976","IsPullRequest":true,"CreatedAt":"2019-06-06T06:43:40","Actor":"safern","Number":"38298","RawContent":null,"Title":"Add nullable annotations to System.Threading.Overlapped ref","State":"open","Body":"Yet to be reviewed on API Review.\r\n\r\ncc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/corefx/pull/38298","RelatedDescription":"Open PR \"Add nullable annotations to System.Threading.Overlapped ref\" (#38298)"},{"Id":"452857701","IsPullRequest":false,"CreatedAt":"2019-06-06T06:42:47","Actor":"stevenruizhang","Number":"38297","RawContent":null,"Title":"can not target .Net Core 3.0 in VS 2019 16.1.2","State":"open","Body":"1) install the latest VS 2019 \r\n![image](https://user-images.githubusercontent.com/13114985/59012041-0185cb80-8869-11e9-91ac-475b0ef367d9.png)\r\n2) create console App , can not target to .net core 3.0 even sdk install \r\n![image](https://user-images.githubusercontent.com/13114985/59012083-25491180-8869-11e9-883c-e4ffcdd59062.png)\r\n![image](https://user-images.githubusercontent.com/13114985/59012092-32fe9700-8869-11e9-8455-d4c85d831aad.png)\r\n3) can not find the preview option in VS 2019\r\n![image](https://user-images.githubusercontent.com/13114985/59012117-46a9fd80-8869-11e9-95af-dc9ef62fcfd5.png)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38297","RelatedDescription":"Open issue \"can not target .Net Core 3.0 in VS 2019 16.1.2\" (#38297)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"453342597","IsPullRequest":true,"CreatedAt":"2019-06-07T05:21:17","Actor":"dotnet-bot","Number":"36235","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"open","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36235","RelatedDescription":"Open PR \"Merge master to features/param-nullchecking\" (#36235)"},{"Id":"453342585","IsPullRequest":true,"CreatedAt":"2019-06-07T05:21:13","Actor":"dotnet-bot","Number":"36234","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36234","RelatedDescription":"Open PR \"Merge master-vs-deps to features/razorSupport2\" (#36234)"},{"Id":"453342575","IsPullRequest":true,"CreatedAt":"2019-06-07T05:21:10","Actor":"dotnet-bot","Number":"36233","RawContent":null,"Title":"Merge master to features/lspSupport","State":"open","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36233","RelatedDescription":"Open PR \"Merge master to features/lspSupport\" (#36233)"},{"Id":"453342568","IsPullRequest":true,"CreatedAt":"2019-06-07T05:21:07","Actor":"dotnet-bot","Number":"36232","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36232","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36232)"},{"Id":"453273771","IsPullRequest":true,"CreatedAt":"2019-06-07T05:13:56","Actor":"sharwell","Number":"36221","RawContent":null,"Title":"Enable preview SDKs for CI builds","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36221","RelatedDescription":"Closed or merged PR \"Enable preview SDKs for CI builds\" (#36221)"},{"Id":"453317310","IsPullRequest":true,"CreatedAt":"2019-06-07T04:18:27","Actor":"dotnet-bot","Number":"36228","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36228","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36228)"},{"Id":"453317320","IsPullRequest":true,"CreatedAt":"2019-06-07T04:18:22","Actor":"dotnet-bot","Number":"36229","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36229","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36229)"},{"Id":"453317360","IsPullRequest":true,"CreatedAt":"2019-06-07T04:18:16","Actor":"dotnet-bot","Number":"36231","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36231","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36231)"},{"Id":"453317336","IsPullRequest":true,"CreatedAt":"2019-06-07T02:52:41","Actor":"dotnet-bot","Number":"36230","RawContent":null,"Title":"Merge master to features/NullableDogfood","State":"open","Body":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36230","RelatedDescription":"Open PR \"Merge master to features/NullableDogfood\" (#36230)"},{"Id":"453300062","IsPullRequest":true,"CreatedAt":"2019-06-07T02:49:51","Actor":"tmat","Number":"36224","RawContent":null,"Title":"Remove assert","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36224","RelatedDescription":"Closed or merged PR \"Remove assert\" (#36224)"},{"Id":"453308932","IsPullRequest":false,"CreatedAt":"2019-06-07T02:04:44","Actor":"davidwengier","Number":"36227","RawContent":null,"Title":"Find All References on a method parameters from an interface is inconsistent to methods from an interface","State":"open","Body":"Given the following code:\r\n\r\n```\r\n    public interface I\r\n    {\r\n        void M(string param);\r\n    }\r\n\r\n    public class C : I\r\n    {\r\n        public void M(string param)\r\n        {\r\n        }\r\n\r\n        public void M1()\r\n        {\r\n            M(param: \"zz\");\r\n        }\r\n    }\r\n\r\n    public class D\r\n    {\r\n        public void M2()\r\n        {\r\n            new C().M(param: \"zz\");\r\n        }\r\n\r\n        public void M3(I i)\r\n        {\r\n            i.M(param: \"zz\");\r\n        }\r\n    }\r\n```\r\n\r\nIf I invoke Find All References on any `M`, be it call, definition, or concrete implementation, I get the same 3 results covering C.M and I.M. \r\n\r\nInvoking FAR on `param` is inconsistent with this: Invoking it on the implementation (ie, in C.M) returns the 2 calls to the concrete implementation only (ie, calls in M1 and M2) and invoking it on the definition or the interface call, returns only 1 reference to the interface call in M3.","Url":"https://github.com/dotnet/roslyn/issues/36227","RelatedDescription":"Open issue \"Find All References on a method parameters from an interface is inconsistent to methods from an interface\" (#36227)"},{"Id":"453303858","IsPullRequest":true,"CreatedAt":"2019-06-07T01:33:53","Actor":"tmat","Number":"36226","RawContent":null,"Title":"Get SVsSolution service instead of IVsSolution","State":"open","Body":"Follow up on previous [PR feedback](https://github.com/dotnet/roslyn/pull/35746).","Url":"https://github.com/dotnet/roslyn/pull/36226","RelatedDescription":"Open PR \"Get SVsSolution service instead of IVsSolution\" (#36226)"},{"Id":"453286933","IsPullRequest":true,"CreatedAt":"2019-06-07T01:30:05","Actor":"dotnet-bot","Number":"36222","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36222","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36222)"},{"Id":"453301484","IsPullRequest":true,"CreatedAt":"2019-06-07T01:19:19","Actor":"tmat","Number":"36225","RawContent":null,"Title":"Make VSWorkspace.GetProjectGuid accessible to XAML","State":"open","Body":"Enables proper fix for https://github.com/dotnet/roslyn/issues/36223.\r\n\r\nDevDiv change: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/185383?_a=overview","Url":"https://github.com/dotnet/roslyn/pull/36225","RelatedDescription":"Open PR \"Make VSWorkspace.GetProjectGuid accessible to XAML\" (#36225)"},{"Id":"453299781","IsPullRequest":false,"CreatedAt":"2019-06-07T01:09:53","Actor":"tmat","Number":"36223","RawContent":null,"Title":"Reenable GetHierarchy assertion","State":"open","Body":"Once XAML designer is fixed to not use this API on background thread","Url":"https://github.com/dotnet/roslyn/issues/36223","RelatedDescription":"Open issue \"Reenable GetHierarchy assertion\" (#36223)"},{"Id":"453205145","IsPullRequest":true,"CreatedAt":"2019-06-06T22:58:08","Actor":"nguerrera","Number":"36216","RawContent":null,"Title":"Fix build with RTM VS image","State":"closed","Body":"Specify a preview version in sdk/version so that VS can use preview SDK without having to check the \"Use Previews\" box.\r\n\r\nDo not put an exact version there because it would be preferred when trying to dogfood a newer version. Also, it would duplicate arcade's tools/dotnet field, which is unnecessary.","Url":"https://github.com/dotnet/roslyn/pull/36216","RelatedDescription":"Closed or merged PR \"Fix build with RTM VS image\" (#36216)"},{"Id":"453267762","IsPullRequest":true,"CreatedAt":"2019-06-06T22:37:33","Actor":"chborl","Number":"36220","RawContent":null,"Title":"Remove parameter prefix/suffix before creating field/property name in Initialize Member from Parameter refactorings","State":"open","Body":"Fix for #35776","Url":"https://github.com/dotnet/roslyn/pull/36220","RelatedDescription":"Open PR \"Remove parameter prefix/suffix before creating field/property name in Initialize Member from Parameter refactorings\" (#36220)"},{"Id":"453266371","IsPullRequest":true,"CreatedAt":"2019-06-06T22:32:16","Actor":"gafter","Number":"36219","RawContent":null,"Title":"Use pattern-matching in MetadataWriter for readability and possibly performance.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36219","RelatedDescription":"Open PR \"Use pattern-matching in MetadataWriter for readability and possibly performance.\" (#36219)"},{"Id":"453228513","IsPullRequest":false,"CreatedAt":"2019-06-06T20:40:05","Actor":"RikkiGibson","Number":"36218","RawContent":null,"Title":"Definite assignment not detected in conditional access","State":"open","Body":"The following sample program produces an error, even though we might expect that within the \"then\" block an assignment is known to have occurred.\r\n\r\n```cs\r\npublic class C\r\n{\r\n    static void M1(C c)\r\n    {\r\n        string s1;\r\n        if (c?.M(out s1) == true)\r\n        {\r\n            Console.WriteLine(s1); // error CS0165: Use of unassigned local variable 's1'\r\n        }\r\n    }\r\n    \r\n    bool M(out string s) { s = \"\"; return true; }\r\n}\r\n```\r\n\r\nCompare to this similar program which does detect a definite assignment.\r\n```cs\r\npublic class C\r\n{\r\n    static void M2(C c)\r\n    {\r\n        string s2;\r\n        if (c != null && c.M(out s2))\r\n        {\r\n            Console.WriteLine(s2); // OK\r\n        }\r\n    }\r\n    \r\n    bool M(out string s) { s = \"\"; return true; }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36218","RelatedDescription":"Open issue \"Definite assignment not detected in conditional access\" (#36218)"},{"Id":"453215180","IsPullRequest":false,"CreatedAt":"2019-06-06T20:06:15","Actor":"tmat","Number":"36217","RawContent":null,"Title":"Apply Venus location mapping when creating the TODO item","State":"open","Body":"Tracking todo in VisualStudioBaseTodoListTable.cs","Url":"https://github.com/dotnet/roslyn/issues/36217","RelatedDescription":"Open issue \"Apply Venus location mapping when creating the TODO item\" (#36217)"},{"Id":"453199040","IsPullRequest":false,"CreatedAt":"2019-06-06T19:24:52","Actor":"mavasani","Number":"36215","RawContent":null,"Title":"Fix diagnostic suppressor feature for compiler warnings in presence of /warnaserror","State":"open","Body":"Tracks the work reverted from https://github.com/dotnet/roslyn/pull/36067 as par of https://github.com/dotnet/roslyn/pull/36067#discussion_r291283127.\r\n\r\nFollowing unit tests should be unskipped as part of this work:\r\n1. C#:  `TestSuppression_CompilerParserWarningAsError`\r\n2. VB: `TestSuppression_CompilerWarningAsError`","Url":"https://github.com/dotnet/roslyn/issues/36215","RelatedDescription":"Open issue \"Fix diagnostic suppressor feature for compiler warnings in presence of /warnaserror\" (#36215)"},{"Id":"453187172","IsPullRequest":false,"CreatedAt":"2019-06-06T18:54:36","Actor":"vsfeedback","Number":"36214","RawContent":null,"Title":"New class templates should have using directives inside the namespace","State":"open","Body":"VSF_TYPE_MARKDOWNMany people use ReSharper or StyleCop. Those have a rule enabled by default that the using directives should be inside the namespace declaration. It has been widely debated why that rule is recommended so it should be default for new classes in Visual Studio.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/593327/new-class-templates-should-have-using-directives-i.html\nVSTS ticketId: 904651_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 6/4/2019, 03:39 AM (2 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36214","RelatedDescription":"Open issue \"New class templates should have using directives inside the namespace\" (#36214)"},{"Id":"453176126","IsPullRequest":false,"CreatedAt":"2019-06-06T18:27:44","Actor":"vsfeedback","Number":"36213","RawContent":null,"Title":"Drag/Drop Using statement","State":"open","Body":"<p>Allow dragging a project reference to the using block of a C# file and have it automatically create the correct using statement for that reference.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/589391/dragdrop-using-statement.html\nVSTS ticketId: 902201_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 5/31/2019, 01:54 AM (6 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36213","RelatedDescription":"Open issue \"Drag/Drop Using statement\" (#36213)"},{"Id":"453167144","IsPullRequest":false,"CreatedAt":"2019-06-06T18:05:38","Actor":"vsfeedback","Number":"36212","RawContent":null,"Title":"Add keyword to obviate declaration of property backing store variables","State":"open","Body":"VSF_TYPE_MARKDOWNIf this is not the correct forum for syntax suggestions, please tell me the proper way to submit my suggestion rather than simply closing and ignoring it.\n\nBasic property accessors are great--when you can use them.\n\n```\nclass MyClass {\n\npublic string MyProperty { get; set; }\n  \n}\n```\n\nBut sometimes you need to define a backing store in order to exercise a little control over what goes into the property.\n\n```\nclass MyClass {\n\nprivate string m_myProperty = string. Empty;\n\npublic string MyProperty {\n    get =&gt; m_myProperty;\n    set =&gt; m_myProperty = value?. Trim() ?? string. Empty;\n  }\n\n}\n```\n\nThis pattern is very common, and now there are a number of IDE hints and messages that can annoy the programmer who is currently stuck with declaring those backing stores and cluttering up the local namespace with names that shouldn't really have to exist. \n\nIf only we had a new keyword, &quot;store,&quot; which is available only inside property declarations. The code below does the same thing as above, but more cleanly, without unnecessary typing, without cluttering up the namespace, and without triggering any worthless compiler hints.\n\n```\nclass MyClass {\n\npublic string MyProperty {\n    get =&gt; store;\n    set =&gt; store = value?. Trim() ?? string. Empty;\n  } = string. Empty;\n\n}\n```\n\nAdding that keyword will drastically reduce the number of times someone must actually declare backing store variables. You'd only have to have a separate declaration if the backings store's type is different than the property's type.\n\nI hope this suggestion is implemented. If so, System.Reflection will need an enhancement providing an inconvenient way to directly access the backing store of a given property.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/582518/add-keyword-to-obviate-declaration-of-property-bac.html\nVSTS ticketId: 899269_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 5/27/2019, 01:07 AM (10 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36212","RelatedDescription":"Open issue \"Add keyword to obviate declaration of property backing store variables\" (#36212)"},{"Id":"453161595","IsPullRequest":false,"CreatedAt":"2019-06-06T17:52:31","Actor":"vsfeedback","Number":"36211","RawContent":null,"Title":"Tuple Declaration Hiding","State":"open","Body":"VSF_TYPE_MARKDOWNNew code editor suggestion. I love Tuples but they elongate the method declaration. The suggestion is to allow a toggle to collapse them. For example...\n\n```\nprivate static (bool showHelp, bool deleteExistingFiles, string inputFolder, string outputFolder, bool pauseCommandWindow, List&lt;string&gt; Files) ProcessCommandLineArguments(string[] args)\n```\n... to something like this:\n\n```\nprivate static (tuple... ») ProcessCommandLineArguments(string[] args)\n```\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/582406/tuple-declaration-hiding.html\nVSTS ticketId: 899239_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 5/27/2019, 01:08 AM (10 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36211","RelatedDescription":"Open issue \"Tuple Declaration Hiding\" (#36211)"},{"Id":"453157489","IsPullRequest":false,"CreatedAt":"2019-06-06T17:42:28","Actor":"vsfeedback","Number":"36210","RawContent":null,"Title":"Query code for occurance of X (Roslyn)","State":"open","Body":"VSF_TYPE_MARKDOWNIn our company (like so many others) we have issues with DateTime.. \n\nWhat i'd like to do, is to find EVERY occurance where DateTime is converted to or from string. \n\neg: \n- Every Implicit Cast\n- Every Explicit Cast\n- Every Parse\n\nI imagine that Roslyn could locate all of these occurances for me ?\n\nI'm not sure how the query language or function should be made, but it would be of great help.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/580464/query-code-for-occurance-of-x-roslyn.html\nVSTS ticketId: 897603_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 5/24/2019, 03:43 AM (13 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36210","RelatedDescription":"Open issue \"Query code for occurance of X (Roslyn)\" (#36210)"},{"Id":"453117748","IsPullRequest":false,"CreatedAt":"2019-06-06T16:08:00","Actor":"saltukkos","Number":"36209","RawContent":null,"Title":"Information about referenced symbols is not complete even when RegisterCompilationAction","State":"open","Body":"**Version Used**: 2.6.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create assembly Assembly1, declare an interface \r\n```csharp\r\npublic interface IFoo\r\n{ \r\n    void Foo([SomeAttribute] string str); \r\n}\r\n``` \r\n2. Create assembly Assembly2, reference Assembly1 and create an implementation of interface \r\n```csharp\r\n public class Program : IFoo\r\n {\r\n    public void Foo(string str)\r\n    {\r\n        Console.Out.WriteLine(s); \r\n    }\r\n}\r\n```\r\n3. Now create minimal analyzer, that should check this code:\r\n```csharp\r\n        public override void Initialize(AnalysisContext context)\r\n        {\r\n            context.RegisterCodeBlockAction(CodeBlockAction);\r\n        }\r\n\r\n        private static void CodeBlockAction(CodeBlockAnalysisContext codeBlockContext)\r\n        {\r\n            if (codeBlockContext.OwningSymbol?.Kind != SymbolKind.Method)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if (!(codeBlockContext.OwningSymbol is IMethodSymbol methodSymbol) || methodSymbol.IsAbstract)\r\n            {\r\n                return;\r\n            }\r\n\r\n            var allAttributes = methodSymbol.ContainingType.Interfaces\r\n                .SelectMany(i => i.GetMembers(methodSymbol.Name).OfType<IMethodSymbol>())\r\n                .SelectMany(d => d.Parameters)\r\n                .SelectMany(p => p.GetAttributes())\r\n                .Select(a => a.AttributeClass)\r\n                .ToArray();\r\n\r\n            if (allAttributes.Length > 0)\r\n            {\r\n                var diagnostic = Diagnostic.Create(_someDescription, codeBlockContext.CodeBlock.GetLocation());\r\n                codeBlockContext.ReportDiagnostic(diagnostic);\r\n            }\r\n      }\r\n```\r\n**Expected Behavior**:\r\nBuilding produces warning.\r\n**Actual Behavior**:\r\nNo warning shown in build log\r\n**More information**:\r\nActualy visual studio will show the warning when you open document, because analyzer will be triggered one more time, and at this moment all correct information is provided.\r\nAlso I got the same result with RegisterSemanticModelAction and RegisterCompilationAction. I think that's incorect behavior, when it's imposible to get information about referenced symbols even with RegisterCompilationAction.\r\nA bit more information [here](https://stackoverflow.com/questions/56473004/iparametersymbol-getattributes-does-not-return-actual-symbols)","Url":"https://github.com/dotnet/roslyn/issues/36209","RelatedDescription":"Open issue \"Information about referenced symbols is not complete even when RegisterCompilationAction\" (#36209)"},{"Id":"453107034","IsPullRequest":false,"CreatedAt":"2019-06-06T15:46:50","Actor":"Felcat","Number":"36208","RawContent":null,"Title":"Visual Studio/Visual Basic debugger won't show the values of members of a structure on mouse hover when they're inside \"with / end with\" statements","State":"open","Body":"**Version Used**: Visual Studio 2017 / Visual Basic\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a structure. For example:\r\n```\r\nPublic Structure Test\r\n  Public SubVar_A As Byte\r\n  Public SubVar_B As Byte          \r\nEnd Structure\r\n```\r\n\r\n2. Create an object with that structure. For example:\r\n`Public TestObject As Test`\r\n\r\n3. Use a \"with / end with\" statement to access the members of TestObject. For example:\r\n```\r\nwith TestObject\r\n  .SubVar_A=10\r\n  .SubVar_B=20\r\nend with\r\n```\r\n\r\n4. Place a debug breakpoint at .SubVar_B=20, run the program, and once execution stops at the breakpoint hover the mouse over .SubVar_A or .SubVar_B to see their values. Nothing will show. Even if you add them to the Watch list, their values won't show. If, however, you don't use \"with / end with\" statements, and instead use \"TestObject.SubVar_A=10\", hovering the mouse over it will show the value when debugging.\r\n\r\n**Expected Behavior**: It was expected that hovering the mouse over .SubVar_A or .SubVar_B would show their values when debugging.\r\n\r\n**Actual Behavior**: The values won't show.\r\n","Url":"https://github.com/dotnet/roslyn/issues/36208","RelatedDescription":"Open issue \"Visual Studio/Visual Basic debugger won't show the values of members of a structure on mouse hover when they're inside \"with / end with\" statements\" (#36208)"},{"Id":"452990983","IsPullRequest":true,"CreatedAt":"2019-06-06T13:30:15","Actor":"dotnet-bot","Number":"36206","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36206","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36206)"},{"Id":"452991022","IsPullRequest":true,"CreatedAt":"2019-06-06T13:30:09","Actor":"dotnet-bot","Number":"36207","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36207","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36207)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"453303038","IsPullRequest":true,"CreatedAt":"2019-06-07T01:28:54","Actor":"Dotnet-GitSync-Bot","Number":"7496","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7496","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7496)"},{"Id":"453275181","IsPullRequest":true,"CreatedAt":"2019-06-07T01:24:31","Actor":"Dotnet-GitSync-Bot","Number":"7494","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7494","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7494)"},{"Id":"453292828","IsPullRequest":true,"CreatedAt":"2019-06-07T00:28:59","Actor":"Suchiman","Number":"7495","RawContent":null,"Title":"Port GC changes from coreclr - 13","State":"open","Body":"This port continues https://github.com/dotnet/corert/pull/7478\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168):**\r\n- https://github.com/dotnet/coreclr/commit/a1404cafbe1cd15a5c0cfbd4995ad97694b708bd (manual port)\r\n- https://github.com/dotnet/coreclr/commit/00ab7387d849da889ebf6aac432ec989091bacec (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00a5ee589b565ebcd068c5851315a997848ed98c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/d82fc2062925ced3fb5c479ff8db7ef61cc4f290 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/35d424404f9930620204f3cc351992c0d9bd3b8a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/cd1f0d9ad32cacd9d2ac2998f368bc196c40754a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73a0bc0d549d1c8e41261891dcc2974fb8024556 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d1bb5271192ddac3d0d31ee6168afdc3c58f55da (manual port)\r\n- https://github.com/dotnet/coreclr/commit/b67d2fa8fc8cf5b8c41f5c34b1abe31e704386c4 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/af0c1f287d31ca3a641151df60baa7371635f508 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/340b5708ce38230f1af66acf832547996aa0b2ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3ff82040ea7be4f8c260b237690f2f0553c7cac6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6fe7effad7fddf8d5dc0b3ac3d5be5ec80e158ff (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2bf55bc5ca8b09dd26e32a9ee259ab22fb69806b (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8d6583e38f4e9b00ec21666225760a0df97afaec (skipped, reverted in next commit)\r\n- https://github.com/dotnet/coreclr/commit/53e0cce55692cd568a1dce218a2089146aa8e4f8 (skipped, reverts prior commit)\r\n- https://github.com/dotnet/coreclr/commit/b3859ce4debbeab0c0a04b8a519eded46bf67517 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/171837ddfef844e0f2952b9ce2df5af6bb65848a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/488d2a70ba59c58b26aa3f4f988a42f6b8927146 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4a6753dcacf44df6a8e91b91029e4b7a4f12d917 (skipped, cgroups changes)\r\n- https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657 (gc only port, omitted changes)","Url":"https://github.com/dotnet/corert/pull/7495","RelatedDescription":"Open PR \"Port GC changes from coreclr - 13\" (#7495)"},{"Id":"453222388","IsPullRequest":true,"CreatedAt":"2019-06-06T20:24:42","Actor":"trylek","Number":"7493","RawContent":null,"Title":"Preparatory change for constrained call changes pt.1: MethodEntrypoint","State":"open","Body":"This is one of the problems I uncovered during the constrained call\r\nwork and I believe it merits separate treatment. Historically\r\nthe implementation of MethodEntrypoint was naturally one of the\r\noldest CPAOT bits and we had to iterate on its exact functionality.\r\n\r\nThe pre-existing version prior to this change had one strange aspect -\r\nsomewhat ambiguous blurring of functionality between MethodEntrypoint\r\nand ImportedMethodNode. This led to various weird situations including\r\nunintended direct method calls, infinite recursion when conditions\r\nin two methods didn't exactly match and similar fun.\r\n\r\nI have cleaned this mess up by basically moving the pre-existing\r\nfunctionality of ImportedMethodNode to MethodEntrypoint that has become\r\nthe only API dealing with creation of import cells used for calling\r\nmethods. The two flavors of import cells being created are\r\nExternalMethodImport and LocalMethodImport where the only difference\r\nbetween them is that LocalMethodImport brings in the dependency to the\r\nMethodWithGCInfo for the method and triggers its JIT compilation\r\n(which may fail when the method requires runtime JIT).\r\n\r\nI have added graceful handling for indeterminate signatures to\r\nArgIterator because the code graph changes triggered this in one\r\nof the ASP.NET assemblies and it's nice to have in general.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7493","RelatedDescription":"Open PR \"Preparatory change for constrained call changes pt.1: MethodEntrypoint\" (#7493)"},{"Id":"452691082","IsPullRequest":true,"CreatedAt":"2019-06-06T19:44:05","Actor":"trylek","Number":"7488","RawContent":null,"Title":"Diagnostic improvements in CPAOT section builder","State":"closed","Body":"I've been debugging CPAOT for almost a year. One recurring hard\r\nproblem has always been diagnosing missing items in the symbol\r\nmap that manifest as \"key not found\" exceptions during the\r\nrelocation phase.\r\n\r\nI have hit this again while debugging the constrained calls and\r\nI have realized I can mitigate the situation by slightly\r\nrearranging things - instead of the straight array of relocations\r\nthere is mostly no harm in storing directly the ObjectData refs\r\n(except for the presumably small perf penalty of one extra\r\nindirection in accessing the array of relocations). ObjectData\r\nis usually much easier to analyze in the debugger as it typically\r\ncontains a symbol definition.\r\n\r\nI have applied minor mechanical renames to put the naming in sync\r\nwith the new semantics; please let me know if you spot an omission\r\non my part.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7488","RelatedDescription":"Closed or merged PR \"Diagnostic improvements in CPAOT section builder\" (#7488)"},{"Id":"453144813","IsPullRequest":true,"CreatedAt":"2019-06-06T17:19:02","Actor":"Dotnet-GitSync-Bot","Number":"7492","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7492","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7492)"},{"Id":"452778010","IsPullRequest":true,"CreatedAt":"2019-06-06T16:11:52","Actor":"Dotnet-GitSync-Bot","Number":"7490","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7490","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7490)"},{"Id":"452221551","IsPullRequest":false,"CreatedAt":"2019-06-06T14:21:44","Actor":"timmydo","Number":"7487","RawContent":null,"Title":"Process crashes on Linux when catching a null pointer exception from managed code","State":"closed","Body":"I have a program that does something like this:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            // this loads a corert native library\r\n            var blah= NativeMethods.DoSomething(IntPtr.Zero, IntPtr.Zero, 10_000);\r\n            try\r\n            {\r\n                string x = null;\r\n                Console.WriteLine($\"{x.Length}\");\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n            }\r\n            Console.WriteLine(\"done\");\r\n        }\r\n```\r\n\r\nwhen the null pointer exception is thrown, the corert sigsegv handler is invoked. https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/Native/Runtime/unix/HardwareExceptions.cpp#L582\r\n\r\nAround L582, the processess crashes with sigabort:\r\n\r\n```\r\ndotnet TestConsoleApp.dll\r\n*** stack smashing detected ***: dotnet terminated\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7fe006ea4bfb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7fe006f2d437]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x0)[0x7fe006f2d400]\r\n/root/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.2.4/runtimes/linux-x64/native/libcoreclr.so(+0x4e15c7)[0x7fe00656b5c7]\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7487","RelatedDescription":"Closed issue \"Process crashes on Linux when catching a null pointer exception from managed code\" (#7487)"},{"Id":"452995033","IsPullRequest":true,"CreatedAt":"2019-06-06T14:21:18","Actor":"janvorli","Number":"7491","RawContent":null,"Title":"Handle signals on alternate stack if previous handler required that","State":"closed","Body":"There is a problem with using CoreRT in CoreCLR process. CoreCLR sets\r\nsigsegv handler to use alternate stack, but CoreRT does not. That means\r\nthat when CoreRT registers its sigsegv handler after CoreCLR, it becomes\r\nthe handler that kernel calls and the previously registered CoreCLR\r\nhandler is called as a regular function call from this handler. And\r\nthat happens on the original stack. However the CoreCLR cannot run the\r\nhandler on the original stack and the handler crashes.\r\n\r\nThe fix is to copy the SA_ONSTACK flag of the previous handler when\r\nregistering the signal handler in CoreRT. In addition to that, this\r\nchange also copies the signal mask in this case. CoreCLR sigsegv handler\r\nmasks the activation injection signal (SIGRT_MIN) so that it doesn't\r\nhappen until the sigsegv handler switches to the original stack. This\r\nbehavior needs to be preserved.","Url":"https://github.com/dotnet/corert/pull/7491","RelatedDescription":"Closed or merged PR \"Handle signals on alternate stack if previous handler required that\" (#7491)"},{"Id":"452732949","IsPullRequest":true,"CreatedAt":"2019-06-06T00:35:58","Actor":"Dotnet-GitSync-Bot","Number":"7489","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7489","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7489)"},{"Id":"452208062","IsPullRequest":true,"CreatedAt":"2019-06-04T23:26:43","Actor":"tannergooding","Number":"7486","RawContent":null,"Title":"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07","State":"closed","Body":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257","Url":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Closed or merged PR \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486)"},{"Id":"452085003","IsPullRequest":true,"CreatedAt":"2019-06-04T18:54:04","Actor":"MichalStrehovsky","Number":"7484","RawContent":null,"Title":"Avoid custom attributes when resolving lazy pinvokes","State":"closed","Body":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled.","Url":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Closed or merged PR \"Avoid custom attributes when resolving lazy pinvokes\" (#7484)"},{"Id":"452108239","IsPullRequest":true,"CreatedAt":"2019-06-04T18:53:48","Actor":"Dotnet-GitSync-Bot","Number":"7485","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @adamsitnik @Youssef1313","Url":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7485)"},{"Id":"451695299","IsPullRequest":true,"CreatedAt":"2019-06-04T13:26:04","Actor":"Dotnet-GitSync-Bot","Number":"7483","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7483","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7483)"},{"Id":"450157595","IsPullRequest":false,"CreatedAt":"2019-06-04T12:01:14","Actor":"lukaszorg","Number":"7468","RawContent":null,"Title":"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error ","State":"closed","Body":"Creating an App Package for publication in the store results in the following errors:\r\n\r\nError: NUTC300F:Internal Compiler Error: Native compilation failed due to out of memory error <our>.App\r\nError ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\1.7.6\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\myself\\<path>\\<to>\\<our>.App\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\<our>.App.rsp\"' returned exit code 1 <our>.App\r\n\r\nWe are targeting Surface Hub (Creators Update 1703) so we cannot use newer version of microsoft.net.native.compiler.  \r\nWe have found not documented parameter for nutc_driver (/d2threads1) that helps building the solution on local machines. \r\nIs there any way to pass this flag on build agents? \r\nAre there any other workarounds?\r\n","Url":"https://github.com/dotnet/corert/issues/7468","RelatedDescription":"Closed issue \"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error \" (#7468)"},{"Id":"451675402","IsPullRequest":true,"CreatedAt":"2019-06-04T06:28:15","Actor":"trylek","Number":"7482","RawContent":null,"Title":"CPAOT: token context cleanup in JIT interface","State":"closed","Body":"One of the remaining debts in CPAOT I noticed during my recent\r\ninvestigations was the notion of input module token context. This\r\nis just wrong in the presence of inlining as we may never presume\r\nthat a token originated in the input module. This simple change\r\nchanges token resolution to resolve token context modules based on\r\nthe token scope instead.\r\n\r\nWith this change we no longer need to create a dictionary of\r\nper-module CorInfoImpl instances so that we can get by with just\r\na singleton; this is the gist of the additional cleanup in\r\nReadyToRunCodegenCompilation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7482","RelatedDescription":"Closed or merged PR \"CPAOT: token context cleanup in JIT interface\" (#7482)"},{"Id":"451647153","IsPullRequest":true,"CreatedAt":"2019-06-03T21:16:27","Actor":"Dotnet-GitSync-Bot","Number":"7481","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7481","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7481)"},{"Id":"451615942","IsPullRequest":true,"CreatedAt":"2019-06-03T19:46:23","Actor":"MichalStrehovsky","Number":"7480","RawContent":null,"Title":"Merge nmirror to master","State":"closed","Body":"I guess we could also do a cherry pick. I mostly want to get ebc91d6 into master.","Url":"https://github.com/dotnet/corert/pull/7480","RelatedDescription":"Closed or merged PR \"Merge nmirror to master\" (#7480)"},{"Id":"451194717","IsPullRequest":true,"CreatedAt":"2019-06-02T19:30:13","Actor":"Dotnet-GitSync-Bot","Number":"7479","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft","Url":"https://github.com/dotnet/corert/pull/7479","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7479)"},{"Id":"451144350","IsPullRequest":true,"CreatedAt":"2019-06-02T05:00:00","Actor":"Suchiman","Number":"7478","RawContent":null,"Title":"Port GC changes from coreclr - 12","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)","Url":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 12\" (#7478)"},{"Id":"451016904","IsPullRequest":true,"CreatedAt":"2019-06-02T00:51:41","Actor":"Dotnet-GitSync-Bot","Number":"7476","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7476","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7476)"},{"Id":"451020527","IsPullRequest":true,"CreatedAt":"2019-06-02T00:50:41","Actor":"Suchiman","Number":"7477","RawContent":null,"Title":"Port GC changes from coreclr - 11","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7473\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c):**\r\n- https://github.com/dotnet/coreclr/commit/571d469cef5d41dcb460e650bb04b738675abdd8 ([already merged](https://github.com/dotnet/corert/commit/f9bf1fc506347c30357a0d708bf69459f142eee4))\r\n- https://github.com/dotnet/coreclr/commit/7f9230129f047bfa6a5fd9e4be734b9e9fe2c93e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c755e3b7f5d597c8d192675dbaaa337268d93f1c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/a37369ab73d49d9957034d8accbdfba4e7f59367 (skipped due to getting reverted)\r\n- https://github.com/dotnet/coreclr/commit/c2331126c1963a81c70943a9530e0a8f823b21ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3a295a078701f72edc18a4404cab7b7e1bc104c7 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/8df01f50ca980ab8840124c74037782f75702032 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/bc5a76d93f21392acbdfb8ec820fa287b31f09e4 (skipped revert of revert)\r\n- https://github.com/dotnet/coreclr/commit/8b8b3b95adada2a9cb2b00876c6d11ef3e4438f7 (skipped due to lacking cgroup)\r\n- https://github.com/dotnet/coreclr/commit/59714b683f40fac869050ca08acc5503e84dc776 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/facdc8b97f73973fb416ed13e4b9dd9a255864bf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/f3f12666c822d8b4db8a9ca051618b6dc2420c68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/145cfe19f9e4f3e8a84b75a3048fe98fffb59a68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/951222555cbc4155f171180bee78da7631f03b20 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb73944d6d159bd02adc29f0588b97f0f76da1a1 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/338b9fa5c5216bdaa4f6c66fc36aea7bb19276b7 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da (manual port)","Url":"https://github.com/dotnet/corert/pull/7477","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 11\" (#7477)"},{"Id":"450927985","IsPullRequest":false,"CreatedAt":"2019-05-31T18:31:30","Actor":"VSadov","Number":"7475","RawContent":null,"Title":"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert","State":"open","Body":"\r\nOne result of this is a significant behavior differences between Release and Debug in UWP apps.\r\n\r\nI think coreclr version is more intuitive. We should make corert version to match that.\r\n\r\n=== coreclr:\r\n\r\n```C#\r\nSTDMETHODIMP CLRServicesImpl::GarbageCollect(DWORD dwFlags)\r\n{\r\n    CONTRACTL\r\n    {\r\n        NOTHROW;\r\n        GC_TRIGGERS;\r\n        MODE_PREEMPTIVE;\r\n    }\r\n    CONTRACTL_END;\r\n\r\n    HRESULT hr = S_OK;\r\n    BEGIN_EXTERNAL_ENTRYPOINT(&hr)\r\n    {\r\n        GCX_COOP_THREAD_EXISTS(GET_THREAD());\r\n        if (dwFlags & GC_FOR_APPX_SUSPEND) {\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect(2, true, collection_blocking | collection_optimized);\r\n        }\r\n        else\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect();      unconditional collect\r\n    }\r\n    END_EXTERNAL_ENTRYPOINT;\r\n    return hr;\r\n}\r\n```\r\n\r\n=== corert:\r\n\r\n```C#\r\n        [NativeCallable]\r\n        static int GarbageCollect__STUB(System.IntPtr pComThis, int flags)\r\n        {\r\n            try\r\n            {\r\n                GC.Collect(2, GCCollectionMode.Optimized, /* blocking = */ true);    optimized collect\r\n\r\n                if (InteropEventProvider.IsEnabled())\r\n                    InteropEventProvider.Log.TaskJupiterGarbageCollect();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // If we set IErrorInfo/IRestrictedErrorInfo, Jupiter might leak\r\n                return ex.HResult;\r\n            }\r\n\r\n            return Interop.COM.S_OK;\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7475","RelatedDescription":"Open issue \"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert\" (#7475)"},{"Id":"450547580","IsPullRequest":true,"CreatedAt":"2019-05-31T18:24:33","Actor":"Suchiman","Number":"7473","RawContent":null,"Title":"Port GC changes from coreclr - 10","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7434\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882):**\r\n- https://github.com/dotnet/coreclr/commit/6a1c28f05642ac0420b78f35ad32a00b6aef0488 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73ef3c13c9b710cb04b67a904b098fb196c224c7 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00e7aa00a42debda47a7dbe2b54e924670eaefdd ([already merged](https://github.com/dotnet/corert/pull/4627))\r\n- https://github.com/dotnet/coreclr/commit/5b10f0eb85d8e8ccdcf9b5e38e5dd372e241e24e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7d801aa30e40c6e01536dd0355199842ee5e4c8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/165ffa6a0bb2d8b57e83aa95a395a798ad5f5f4f (manual port)\r\n- https://github.com/dotnet/coreclr/commit/bd3424913138d10f9c4fdb6176fb471e8d1ba1d7 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5b02b0104f3ceba491b7b25fcb4d997e477d2840 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/558f8e99680ab5b6ea9d4796236e12439363657f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0b86feb1d2830cc1de5db16ee86c0998c01ca30a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c (manual port)","Url":"https://github.com/dotnet/corert/pull/7473","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 10\" (#7473)"},{"Id":"450701509","IsPullRequest":true,"CreatedAt":"2019-05-31T13:00:36","Actor":"MichalStrehovsky","Number":"7474","RawContent":null,"Title":"Emit all symbols as global on Windows","State":"closed","Body":"Symbols don't end up in the PDB otherwise and the only things with symbols are methods with debug information and things that have a non-null `_nodeFactory.GetSymbolAlternateName`.\r\n\r\nThis regressed in #7249.","Url":"https://github.com/dotnet/corert/pull/7474","RelatedDescription":"Closed or merged PR \"Emit all symbols as global on Windows\" (#7474)"},{"Id":"450408735","IsPullRequest":true,"CreatedAt":"2019-05-31T04:21:41","Actor":"Dotnet-GitSync-Bot","Number":"7471","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7471","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7471)"},{"Id":"450411333","IsPullRequest":true,"CreatedAt":"2019-05-30T17:09:07","Actor":"MichalStrehovsky","Number":"7472","RawContent":null,"Title":"Selective integration to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7472","RelatedDescription":"Closed or merged PR \"Selective integration to nmirror\" (#7472)"},{"Id":"450353364","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:27","Actor":"MichalStrehovsky","Number":"7469","RawContent":null,"Title":"Enable devirtualization/stackalloc optimization with RyuJIT","State":"closed","Body":"(Implementation for both CPAOT and full AOT, since the non-shared parts are just a couple lines)\r\n\r\nWe've had a TODO for a while that disabled devirtualization on valuetype methods because we didn't have a representation of unboxing thunks in the type system (the result of a devirtualization that lands on a valuetype method is an unboxing thunk).\r\n\r\nWith this, I'm adding an unboxing thunk `MethodDesc` _within the JitInterface only_. Unboxing thunks are weird enough that we don't want them to roam around the whole system, but if they're just something we hand to RyuJIT when needed and convert them back to the real thing when we're done, it's less of a trouble. I'm fully expecting that we're going to see these escaping into the dependency system from time to time, causing bugs. But that's life.\r\n\r\n* Most of the commit is a general purpose `MethodDelegator` class that delegates calls to a different `MethodDesc`.\r\n* We use the `MethodDelegator` within the JitInterface to create a wrapper for non-unboxing methods to represent an unboxing thunk.\r\n* We make it so that the unboxing wrapper is returned from `resolveVirtualMethod` when the result of resolution is a valuetype method.\r\n* We then make it possible for RyuJIT to unwrap it with `getUnboxedEntry`\r\n* We also unwrap it in `getCallInfo` so that it doesn't get into the dependency system.\r\n\r\nFixes #7463.","Url":"https://github.com/dotnet/corert/pull/7469","RelatedDescription":"Closed or merged PR \"Enable devirtualization/stackalloc optimization with RyuJIT\" (#7469)"},{"Id":"450358407","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:17","Actor":"stephentoub","Number":"7470","RawContent":null,"Title":"Expose Environment.TickCount64","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/35499","Url":"https://github.com/dotnet/corert/pull/7470","RelatedDescription":"Closed or merged PR \"Expose Environment.TickCount64\" (#7470)"},{"Id":"449918770","IsPullRequest":true,"CreatedAt":"2019-05-30T12:32:49","Actor":"Dotnet-GitSync-Bot","Number":"7467","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7467","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7467)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"453311134","IsPullRequest":true,"CreatedAt":"2019-06-07T02:17:27","Actor":"dsplaisted","Number":"3311","RawContent":null,"Title":"Exclude Publish=\"false\" package assets from build output, don't infer Publish=\"false\" from PrivateAssets=\"all\"","State":"open","Body":"See https://github.com/dotnet/designs/pull/78","Url":"https://github.com/dotnet/sdk/pull/3311","RelatedDescription":"Open PR \"Exclude Publish=\"false\" package assets from build output, don't infer Publish=\"false\" from PrivateAssets=\"all\"\" (#3311)"},{"Id":"453186764","IsPullRequest":true,"CreatedAt":"2019-06-07T01:17:19","Actor":"peterhuene","Number":"3310","RawContent":null,"Title":"Fix P/Invoke signatures for the resource updater.","State":"closed","Body":"The resource updater was not specifying a CharSet for the Windows API\r\nP/Invoke signatures and therefore the ANSI versions of the APIs were\r\nbeing used.\r\n\r\nThis caused an unhandled exception when customizing the apphost on\r\nWindows when the intermediate apphost path contained Unicode characters\r\nbecause the ANSI resource updating API couldn't find the file.\r\n\r\nFixes [AB#900429](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/900429).","Url":"https://github.com/dotnet/sdk/pull/3310","RelatedDescription":"Closed or merged PR \"Fix P/Invoke signatures for the resource updater.\" (#3310)"},{"Id":"452776840","IsPullRequest":true,"CreatedAt":"2019-06-06T20:36:55","Actor":"cdmihai","Number":"3306","RawContent":null,"Title":"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3306","RelatedDescription":"Closed or merged PR \"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject\" (#3306)"},{"Id":"452976611","IsPullRequest":false,"CreatedAt":"2019-06-06T11:25:02","Actor":"vadi2","Number":"3309","RawContent":null,"Title":"\"Application host will not be customised\" - meaning?","State":"open","Body":"I've built an application[1] on .NET Core that runs on Windows, macOS, and Linux and I'd like to reduce the friction involved in getting it running - that is, having to install the runtime separately. I've read the [single-publish](https://github.com/dotnet/designs/blob/master/accepted/single-file/design.md) and [tried out the command](https://travis-ci.com/vadi2/Hammer/builds/114541271#L323) - but I get this warning:\r\n\r\n> The application host executable will not be customized because adding resources requires that the build be performed on Windows (excluding Nano Server).\r\n\r\nWhat does it actually mean? I'm new to the .NET world so I'm not sure what customisations is it actually talking about.\r\n\r\n[1] https://github.com/vadi2/Hammer","Url":"https://github.com/dotnet/sdk/issues/3309","RelatedDescription":"Open issue \"\"Application host will not be customised\" - meaning?\" (#3309)"},{"Id":"452957325","IsPullRequest":true,"CreatedAt":"2019-06-06T10:36:29","Actor":"v-zbsail","Number":"3308","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk master | 20190606","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3308","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/sdk master | 20190606\" (#3308)"},{"Id":"452816272","IsPullRequest":false,"CreatedAt":"2019-06-06T03:38:50","Actor":"kkwpsv","Number":"3307","RawContent":null,"Title":"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype","State":"open","Body":"I have two projects. One is a ConsoleApp, the other is WebApplication. And the WebApplication has a `ProjectReference` to reference the ConsoleApp.\r\n\r\nWhen I publish the WebApplication with `--runtime`, it has an error like below:\r\n\r\n> /home/lsj/test/ConsoleApp2/ConsoleApp2.csproj : error : NETSDK1061: The project was restored using Microsoft.NETCore.App version 2.1.9, but with current settings, version 2.1.0 would be used instead. To resolve this issue, make sure the same settings are used for restore and for subsequent operations such as build or publish. Typically this issue can occur if the RuntimeIdentifier property is set during build or publish but not during restore. For more information, see https://aka.ms/dotnet-runtime-patch-selection.\r\n\r\nBut when I remove the `<OutputType>Exe</OutputType>` line from the csproj of ConsoleApp, it succeeds.\r\n\r\n\r\nI have done many tests:\r\n\r\n- If I only publish the ConsoleApp with `--runtime` and `<OutputType>Exe</OutputType>`, it will success.\r\n\r\n- If I publish the WebApplication with `--runtime` and `<OutputType>Exe</OutputType>`, it will fail, no matter on Linux or Windows, no matter with .net core 2.1 or 2.2. But it will succeed with .net core 3.0. (I think it's because that there's no any .net core 3.0.x)\r\n\r\n- If I publish the WebApplication with `--runtime` and without `<OutputType>Exe</OutputType>`, it will always succeed.\r\n\r\n- If I publish the WebApplication without `--runtime` and with `<OutputType>Exe</OutputType>`, it will always succeed.\r\n","Url":"https://github.com/dotnet/sdk/issues/3307","RelatedDescription":"Open issue \"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype\" (#3307)"},{"Id":"452773212","IsPullRequest":true,"CreatedAt":"2019-06-06T00:16:07","Actor":"elinor-fung","Number":"3305","RawContent":null,"Title":"Add property for building a library as a component","State":"open","Body":"SDK support for the hosting scenario of loading a managed component and calling into it from a native application: https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/native-hosting.md#scenarios. This hosting scenario requires a `runtimeconfig.json` file and our recommendation for components is to have a less restrictive `rollForward` setting.\r\n\r\nSetting `IsComponent=true` should result in:\r\n- `.runtimeconfig.json` being generated\r\n- `rollForward` being set to `LatestMinor` by default","Url":"https://github.com/dotnet/sdk/pull/3305","RelatedDescription":"Open PR \"Add property for building a library as a component\" (#3305)"},{"Id":"452682263","IsPullRequest":true,"CreatedAt":"2019-06-06T00:12:31","Actor":"dsplaisted","Number":"3304","RawContent":null,"Title":"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding","State":"closed","Body":"- Update stage 0, and remove code that added information that wasn't yet in bundled versions .props file.\r\n- Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\r\n","Url":"https://github.com/dotnet/sdk/pull/3304","RelatedDescription":"Closed or merged PR \"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\" (#3304)"},{"Id":"452651511","IsPullRequest":true,"CreatedAt":"2019-06-05T23:07:11","Actor":"peterhuene","Number":"3303","RawContent":null,"Title":"Resolve runtime target assets without copying for non-netcoreapp targets.","State":"closed","Body":"A [previous change](https://github.com/peterhuene/sdk/commit/545410772bb7c41d26b22dd9f3ba0cd3e8acd63e) disabled the resolution of runtime target assets when not\r\ntargeting netcoreapp by default. However, some users may want to be able to\r\ninspect the runtime target assets from their package dependencies without\r\nhaving them copied locally by default when not targeting netcoreapp.\r\n\r\nThis commit changes the previous fix by resolving the runtime target assets to\r\npopulate the `RuntimeTargetsCopyLocalItems` group, but sets the `CopyLocal`\r\nmetadata to false which prevents the items from ultimately being included in\r\nthe copy local files.  The property `CopyLocalRuntimeTargetAssets` now controls\r\nthis behavior, which defaults to `true` only when netcoreapp is the target TFM.\r\n\r\nFixes #3261.","Url":"https://github.com/dotnet/sdk/pull/3303","RelatedDescription":"Closed or merged PR \"Resolve runtime target assets without copying for non-netcoreapp targets.\" (#3303)"},{"Id":"452583102","IsPullRequest":false,"CreatedAt":"2019-06-05T15:56:25","Actor":"sbomer","Number":"3302","RawContent":null,"Title":"Mark assets from nuget packages as trimmable","State":"open","Body":"https://github.com/dotnet/sdk/pull/3231 flows `IsTrimmable` metadata from `FrameworkRefrence`s to the resolved assets. We could consider doing the same for `PackageReference`s to enable users to easily opt in to trimming assets that come from packages. Since the metadata was not originally intended as a customer-facing option, we may want to revisit this to see if it's the right way to expose such an option.\r\n\r\nFrom https://github.com/mono/linker/issues/595#issuecomment-498951483:\r\n\r\n> one of the assemblies I really would like to see reduced MahApps.Metro.IconPacks.dll is not. This DLL is 14MB but I probably use around 500KB... any way to see what happened and influence this?\r\n\r\nThis would come with the usual caveats: packages with logic that is activated by reflection, or that themselves use reflection, will likely be incompatible with trimming.","Url":"https://github.com/dotnet/sdk/issues/3302","RelatedDescription":"Open issue \"Mark assets from nuget packages as trimmable\" (#3302)"},{"Id":"451422781","IsPullRequest":true,"CreatedAt":"2019-06-05T08:52:38","Actor":"vitek-karas","Number":"3296","RawContent":null,"Title":"Add support for RollForward property","State":"closed","Body":"The `GenerateRuntimeConfigurationFiles` task now recognizes `RollForward` parameter (and it's passed from the `RollForward` property). It writes its value into the .runtimeconfig.json as the `rollForward` setting.\r\n\r\nThis implements the SDK side of the roll forward feature as described in the [runtime binding](https://github.com/dotnet/designs/blob/master/accepted/runtime-binding.md#rollforward).","Url":"https://github.com/dotnet/sdk/pull/3296","RelatedDescription":"Closed or merged PR \"Add support for RollForward property\" (#3296)"},{"Id":"451028964","IsPullRequest":true,"CreatedAt":"2019-06-04T21:18:26","Actor":"MSLukeWest","Number":"3289","RawContent":null,"Title":"Adding ResolveReferences target to PublishItemsOutputGroup dependencies","State":"closed","Body":"This is needed in order for this output group to contain output from referenced projects.","Url":"https://github.com/dotnet/sdk/pull/3289","RelatedDescription":"Closed or merged PR \"Adding ResolveReferences target to PublishItemsOutputGroup dependencies\" (#3289)"},{"Id":"451739279","IsPullRequest":true,"CreatedAt":"2019-06-04T02:30:22","Actor":"dotnet-bot","Number":"3298","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3298","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3298)"},{"Id":"451268345","IsPullRequest":true,"CreatedAt":"2019-06-03T18:15:49","Actor":"wli3","Number":"3294","RawContent":null,"Title":"Update branding to preview 7","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3294","RelatedDescription":"Closed or merged PR \"Update branding to preview 7\" (#3294)"},{"Id":"451262824","IsPullRequest":true,"CreatedAt":"2019-06-03T18:14:34","Actor":"wli3","Number":"3293","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview6","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3293","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview6\" (#3293)"},{"Id":"451585629","IsPullRequest":true,"CreatedAt":"2019-06-03T16:49:19","Actor":"sbomer","Number":"3297","RawContent":null,"Title":"Update link (aka.ms/illink -> aka.ms/dotnet-illink)","State":"open","Body":"Received feedback from @richlander that we usually use links of the form dotnet-*.\r\n\r\n@nguerrera PTAL","Url":"https://github.com/dotnet/sdk/pull/3297","RelatedDescription":"Open PR \"Update link (aka.ms/illink -> aka.ms/dotnet-illink)\" (#3297)"},{"Id":"451127590","IsPullRequest":false,"CreatedAt":"2019-06-03T15:30:58","Actor":"AntonPlotnikov","Number":"3291","RawContent":null,"Title":"DotNetAppHost's version info and icon","State":"closed","Body":"Hello. I need to add a version info and custom icon for DotNetAppHost? We use potable mode (Framework-dependent deployment), and there are some branding and security requirements. Unfortunately, I can add version info only to application's main assembly file (dll), not to exe file (we use RID win7-x64) during building in Visual Studio 2019. Is it any way to do this during MSBuild process?\r\n![2019-06-01_23-57-09](https://user-images.githubusercontent.com/18666703/58753548-558b5b80-84c9-11e9-9deb-c51f6890484b.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3291","RelatedDescription":"Closed issue \"DotNetAppHost's version info and icon\" (#3291)"},{"Id":"451374216","IsPullRequest":false,"CreatedAt":"2019-06-03T09:14:09","Actor":"ViktorHofer","Number":"3295","RawContent":null,"Title":"TargetExt conflicts with UseAppHost","State":"open","Body":"`TargetExt` defaults to \".dll\" on .NETCore and .NETStandard even if the `OutputType` is \".exe\": https://github.com/dotnet/sdk/blob/90e8a529be026d06fc8965d460927193aca5b005/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.BeforeCommon.targets#L74-L75\r\n\r\nStarting with \".NETCoreApp, Version=3.0\", `UseAppHost` defaults to true: https://github.com/dotnet/sdk/blob/372e67d51167792db2fdaeebf48b6d8fb962e713/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L110\r\n\r\nThe `_NativeExecutableExtension` defaults to true as the `DefaultAppHostRuntimeIdentifier` on Windows is \"win-x64\":\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L67\r\n\r\nThe `_GetAppHostPaths` target sets the `AppHostIntermediatePath` property (based on `_NativeExecutableExtension` which defaults to \".exe\" because auf `UseAppHost` is true) which then is added to the `None` ItemGroup determined to be copied to the output directory:\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L491-L497\r\n\r\n![image](https://user-images.githubusercontent.com/7412651/58790220-35a28780-85f0-11e9-9e2c-7e55d80d66e6.png)\r\n\r\nThe issue is that such a file is never produced as the TargetExt defaults to \".dll\". If I got this right this means that every app \".NETCoreApp, Version=3.0\" with `OutputType` \"Exe\" fails to copy its content to the output directory. This would be big break and I'm sure this would have already been caught. I assume I'm missing something here. \r\n\r\ncc @nguerrera @dsplaisted @ericstj ","Url":"https://github.com/dotnet/sdk/issues/3295","RelatedDescription":"Open issue \"TargetExt conflicts with UseAppHost\" (#3295)"},{"Id":"451078446","IsPullRequest":true,"CreatedAt":"2019-06-01T12:04:11","Actor":"dotnet-maestro[bot]","Number":"3290","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19304.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19304.23\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19305.13\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3290","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3290)"},{"Id":"450799201","IsPullRequest":false,"CreatedAt":"2019-05-31T18:06:56","Actor":"DustinCampbell","Number":"3287","RawContent":null,"Title":"Getting package assets cache messages on build with the latest master bits","State":"closed","Body":"@nguerrera, @dsplaisted: I started getting loads of messages during build in the winforms-designer repo after updating to the most recent SDK:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012135\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5):\r\nmessage NETSDK1062: Unable to use package assets cache due to I/O error . This can occur when the\r\nsame project is built more than once in parallel. Performance may be degraded,  but the build result will \r\nnot be impacted. [D:\\Projects\\winforms-designer\\src\\WinFormsSurface\\WinFormsS urface.csproj]\r\n```\r\n\r\nAre these messages possibly related to https://github.com/dotnet/sdk/pull/3268? It looks like this error comes from ResolvePackageAssets.cs and those are the most recent changes around the code that triggers this message. Setting `<DisablePackageAssetsCache>true</DisablePackageAssetsCache>` makes the messages go away, but it doesn't seem like the right fix.","Url":"https://github.com/dotnet/sdk/issues/3287","RelatedDescription":"Closed issue \"Getting package assets cache messages on build with the latest master bits\" (#3287)"},{"Id":"450641573","IsPullRequest":true,"CreatedAt":"2019-05-31T18:06:56","Actor":"dsplaisted","Number":"3284","RawContent":null,"Title":"Fix failure to read assets cache file the first time it's written","State":"closed","Body":"Fixes issue reported by @nguerrera, introduced in #3268:\r\n\r\n> Seeing message NETSDK1062: Unable to use package assets cache due to I/O error. This can occur when the same project is built more than once in parallel. Performance may be degraded, but the build result will not be impacted. [D:\\Temp\\demo\\demo.csproj]\r\n>\r\n> Looks like the change you made has the file still open for write when we try to read it back on first build.\r\n>\r\n> Can you take a look, this will be a significant perf regression in preview 6\r\n\r\nFix #3287","Url":"https://github.com/dotnet/sdk/pull/3284","RelatedDescription":"Closed or merged PR \"Fix failure to read assets cache file the first time it's written\" (#3284)"},{"Id":"450472482","IsPullRequest":true,"CreatedAt":"2019-05-31T17:54:26","Actor":"fadimounir","Number":"3281","RawContent":null,"Title":"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects","State":"closed","Body":"Packaging projects depend on ComputeFilesToPublish only instead of ComputeAndCopyFilesToPublishDirectory, so this refactoring will enable R2R and ILLinker to execute.","Url":"https://github.com/dotnet/sdk/pull/3281","RelatedDescription":"Closed or merged PR \"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects\" (#3281)"},{"Id":"450829429","IsPullRequest":false,"CreatedAt":"2019-05-31T14:33:34","Actor":"atanasa","Number":"3288","RawContent":null,"Title":"dotnet publish does not warn on version conflicts with packages in the store manifest","State":"open","Body":"I have a project that depends on the `Newtonsoft.Json` package version **10.0.1**.\r\nI have a store manifest file that includes `Newtonsoft.Json` package version **10.0.3**.\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n### Steps to reproduce:\r\n1. Create a store manifest file:\r\n```xml\r\n<StoreArtifacts>\r\n   <Package Id=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n</StoreArtifacts>\r\n```\r\n1. Create an executable project that specifies that manifest:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.1\" />\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <TargetManifestFiles>manifest.xml</TargetManifestFiles>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n1. Run `dotnet publish` and observe the output of the publish\r\n\r\n### Expected:\r\nWhen I run `dotnet publish` the output should not contain Newtonsoft.Json.dll (as the version in the \"store\" is higher).\r\n\r\n**Edit by nguerrera** Above is by design as there is no unification to higher version when a package is resolved from the store at runtime. But we should have a warning when this case is triggered since it can be surprising. Changed title of bug appropriate.\r\n\r\n### Actual:\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n**Edit by nguerrera** And there is no diagnostic that a different version is in the manifest.\r\n\r\nI've created a simple repro solution:\r\n[ReproResolvePublishedAssemblies.zip](https://github.com/dotnet/sdk/files/3241624/ReproResolvePublishedAssemblies.zip)\r\n\r\n`dotnet --info`:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3288","RelatedDescription":"Open issue \"dotnet publish does not warn on version conflicts with packages in the store manifest\" (#3288)"},{"Id":"450787725","IsPullRequest":false,"CreatedAt":"2019-05-31T13:00:19","Actor":"davkean","Number":"3286","RawContent":null,"Title":"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds","State":"open","Body":"Create a project with the following:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>foobar</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nExpected: Friendly error similar to command-line:\r\n\r\n```\r\n  C:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(96,\r\n5): error NETSDK1013: The TargetFramework value 'foobar' was not recognized. It may be misspelled. If not, then the Tar\r\ngetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly. [C:\\Users\\davkean\\Source\\\r\nRepos\\ConsoleApp424\\ConsoleApp424\\ConsoleApp424.csproj]\r\n```\r\n\r\nActual:\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4018\tThe \"ResolvePackageAssets\" task failed unexpectedly.\r\nNuGet.Frameworks.FrameworkException: Invalid framework identifier ''.\r\n   at NuGet.Frameworks.NuGetFramework.GetShortFolderName(IFrameworkNameProvider mappings)\r\n   at Microsoft.NET.Build.Tasks.LockFileExtensions.GetTargetAndThrowIfNotFound(LockFile lockFile, NuGetFramework framework, String runtime)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task, Stream stream)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tConsoleApp424\tC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t208\t\r\n```\r\n\r\nWhat's worse is that you have lots of TFMs you have no idea which is the broken one as the error doesn't include it.","Url":"https://github.com/dotnet/sdk/issues/3286","RelatedDescription":"Open issue \"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds\" (#3286)"},{"Id":"450765833","IsPullRequest":true,"CreatedAt":"2019-05-31T12:04:31","Actor":"dotnet-maestro[bot]","Number":"3285","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3285","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3285)"},{"Id":"450571724","IsPullRequest":true,"CreatedAt":"2019-05-31T06:07:03","Actor":"peterhuene","Number":"3283","RawContent":null,"Title":"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.","State":"closed","Body":"This PR fixes filtering of satellite assemblies when publishing an\r\napplication targeting netcoreapp3.0.\r\n\r\nAn incorrect property name in the `_FilterSatelliteResourcesForPublish` target\r\nwas causing the satellite filtering done for publish to have no effect.\r\n\r\nThis was only a problem when not reusing the build output for publish;\r\nunfortunately this is currently the case for netcoreapp3.0 targeted\r\napplications due to references that are marked as `PrivateAssets=\"all\"`.\r\n\r\nThis PR fixes the property name and adds test coverage for publishing\r\nwhen targeting netcoreapp3.0 with filtered satellite assemblies.\r\n\r\nFixes #3277.","Url":"https://github.com/dotnet/sdk/pull/3283","RelatedDescription":"Closed or merged PR \"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.\" (#3283)"},{"Id":"450525123","IsPullRequest":true,"CreatedAt":"2019-05-31T04:37:01","Actor":"dsplaisted","Number":"3282","RawContent":null,"Title":"Better test logging","State":"closed","Body":"This PR removes all direct uses of the CLI Utils `Command` class, and instead routes them through the SDK's `TestCommand`.  This will log the start info, STDOUT, and STDERR.\r\n\r\nThis will, for example, make it a lot easier to see what the problem is from the test logs when a test fails because the right shared framework isn't installed.  The error information in that case goes to STDERR, which a lot of the tests which used `Command.Create` weren't capturing.\r\n\r\nFYI @dotnet/dotnet-cli, we should continue to follow the new pattern of using `DotnetCommand` and `RunExeCommand` instead of `Command.Create` in future tests.","Url":"https://github.com/dotnet/sdk/pull/3282","RelatedDescription":"Closed or merged PR \"Better test logging\" (#3282)"},{"Id":"452362994","IsPullRequest":false,"CreatedAt":"2019-03-22T10:08:51","Actor":"tommy86r","Number":"3300","RawContent":null,"Title":"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”","State":"open","Body":"# Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\r\n\r\nWhen I publish my asp.net core application as self-contained I succesfully get the myproject.exe. This exe file doesn't work if I double click on it and doesn't work if I try to run it from the cmd console. The project has been update from .net core 2.0 to 2.2\r\nThe exception is:\r\n\r\n> This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\n> A fatal error was encountered. This executable was not bound to load a managed DLL.\r\n\r\nI tried to publish throught Visual Studio (using Method: File System - Target Framework: netcoreapp2.2 - Deployment Mode: self-contained - Target Runtime: win-x64) and also throught cmd console \"dotnet publish -r win-x64\". But I get the same error.\r\n\r\nI added a repo to replicate the issue (I removed almost everythings from the project, it contains only the skeleton, but it seems sufficient to replicate the issue) https://github.com/tommy86r/TempProject\r\n\r\nAl last, this is my .net core configuration:\r\n![dot-net-info](https://user-images.githubusercontent.com/12224568/54815641-c1b03e80-4c92-11e9-805d-639ce9162e64.PNG)\r\n","Url":"https://github.com/dotnet/sdk/issues/3300","RelatedDescription":"Open issue \"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\" (#3300)"},{"Id":"452364411","IsPullRequest":false,"CreatedAt":"2019-03-13T07:55:02","Actor":"pavlexander","Number":"3301","RawContent":null,"Title":"Wrong assembly is being referenced in solution","State":"open","Body":"# Wrong assembly is being referenced in solution\r\n\r\nWhen trying to reference 1.0.4. version of an assembly - 1.0.1 version of file is being used.. Despite the fact, that project settings are pointing to the correct DLL. As the result - the solution is still compiled with 1.0.1 version.\r\n\r\n# General\r\n## Specs\r\n\r\nOS:\r\n\r\n* OS Name\tMicrosoft Windows 10 Enterprise\r\n* Version 10.0.16299 Build 16299\r\n\r\nVS:\r\n\r\n* Microsoft Visual Studio Professional 2017 \r\n* Version 15.9.7\r\n* VisualStudio.15.Release/15.9.7+28307.423\r\n* Microsoft .NET Framework\r\n* Version 4.7.02556\r\n\r\ndotnet --version\r\n\r\n* 2.2.104\r\n\r\n## Prerequisites\r\n\r\nCheckout the solution from my repo: \r\n\r\nhttps://github.com/pavlexander/dotnetbugs/tree/master/Bugs/12032019_WrongAssemblyLoaded\r\n\r\n## Steps to reproduce\r\n\r\n1. Open the solution in VisualStudio\r\n2. Right click on project, \"Add -> Reference\".\r\n3. Browse for file in directory: \"..12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll\"\r\nProceed with adding of a reference.\r\n**Note that file from 1.0.4 is selected.** \r\n4. Right click on project, click \"Edit WrongAssemblyLoaded.csproj\"\r\n5. Verify that correct assembly is specified:\r\n\r\n```\r\n  <ItemGroup>\r\n    <Reference Include=\"DebugTests.Common.NugetWithPdb\">\r\n      <HintPath>DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n```\r\n\r\n6. Now, in VisualStudio, expand the tree of the project -> Dependencies -> Assemblies, find the assembly that you referenced and check the path.\r\n\r\n**Expected result:**\r\n\r\nAssembly from 1.0.4 folder is used\r\n\r\n**Actual result:**\r\n\r\n..\\dotnetbugs\\Bugs\\12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.1\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb.dll\r\n\r\nAnd this is the issue. Assembly of version \"1.0.1\" is used in project, despite even the fact that in project settings \"1.0.4\" version is specified. If you try and build the solution now, in the output folder you will also see the \"1.0.1\" version. I don't think this is related to Visual Studio in any way. Because, even if you try to use the `dotnet build` command directly - it will also put the same wrong dll into an output directory. \r\n","Url":"https://github.com/dotnet/sdk/issues/3301","RelatedDescription":"Open issue \"Wrong assembly is being referenced in solution\" (#3301)"},{"Id":"451752075","IsPullRequest":false,"CreatedAt":"2018-06-29T10:44:56","Actor":"petroemil","Number":"3299","RawContent":null,"Title":"Define InternalsVisibleTo \"attributes\" in the csproj file","State":"open","Body":"Many of the AssemblyInfo.cs file's content are already generated from the project file, meaning in many (or more like most) cases we don't need to have an AssemblyInfo.cs file in our projects. \r\n\r\nThere is one quite frequently used assembly level attribute though that still has to be defined as a traditional attribute - the `InternalsVisibleToAttribute`.\r\n\r\nIt would be nice if this could also be defined from the project file, which would also mean we could easily define it in a solution level props file, enabling all projects implicitly to see their `internal`s from the test project(s).","Url":"https://github.com/dotnet/sdk/issues/3299","RelatedDescription":"Open issue \"Define InternalsVisibleTo \"attributes\" in the csproj file\" (#3299)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1136678589007519744","CreatedAt":"2019-06-06T16:57:48+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1136485660875878400","CreatedAt":"2019-06-06T04:11:11+00:00","UserScreenname":"dotnet","Text":"Are you a Visual Basic developer? Are you interested in compilers? Make sure to watch @DualBrain's live stream wher… https://t.co/kcXhvWp7yZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1136040221730934785","CreatedAt":"2019-06-04T22:41:10+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1135955901439971328","CreatedAt":"2019-06-04T17:06:06+00:00","UserScreenname":"dotnet","Text":"A Microsoft Build 2019, @LadyNaggaga showed us a new way to learn .NET using Try .NET\n\nhttps://t.co/KnbAuDyRzr #dotnet #dotnetcore","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":9,"RawContent":null},{"Id":"1134142130094346245","CreatedAt":"2019-05-30T16:58:49+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":5,"FavoriteCount":1,"RawContent":null},{"Id":"1133749843564740608","CreatedAt":"2019-05-29T15:00:01+00:00","UserScreenname":"dotnet","Text":"ML .NET Model Lifecycle with Azure DevOps CI/CD pipelines\nhttps://t.co/zlCqa4I8vn https://t.co/K17nKopaZn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":25,"RawContent":null},{"Id":"1133746063792205826","CreatedAt":"2019-05-29T14:45:00+00:00","UserScreenname":"dotnet","Text":"In 15 minutes, watch @terrajobst adding return statements and control flow analysis to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1133416391522918401","CreatedAt":"2019-05-28T16:55:00+00:00","UserScreenname":"dotnet","Text":"Porting desktop apps to .NET Core by @oliagavrysh. https://t.co/XV5Ed3Nku8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":44,"RawContent":null},{"Id":"1131606214717116418","CreatedAt":"2019-05-23T17:02:00+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/mHsIdILy7f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-06-07T05:30:34.2271542Z","RunDurationInMilliseconds":12735}