{"Data":{"Blog":{"FeedItems":[{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8760079004","Type":"IssuesEvent","CreatedAt":"2018-12-15T23:45:28","Actor":"generik0","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2460","RelatedDescription":"Closed issue \"xamarin nuget with  symbols do not debug work unless source is in same location as original  build source path\" (#2460) at xamarin/xamarin-android","RelatedBody":"Hi\r\n\r\nWhen I create our own nuget packages I have GeneratePackageOnBuild and include symbols (portable) and include source for the .net stanadr projects creating the nugets.\r\n\r\nThe symbols and debugging works with \"normal\" .net apps., however, they are not debuggable in Xamavin project. With that said the symbols will work if I replicate the build path (on the service running the agent pool and MSBuild) to be on the same location on my local machine and add the source.\r\n\r\nIt does not matter what I enter in  VS2017 15.9.2 Options->Debugger->Symbols\r\nThe absolute path from where the package was built, is required locally and the source code should be in this location locally also.\r\n\r\n\r\nAgain. we need to have the source code in the same location/path as it is on the build server. (this is difficult as each build has its own id) and it will work.\r\nIt does not matter if i index and do a seperate pack on the build server. Or whatever i do. \r\n\r\nIt just appears that the paths must be equal.\r\n\r\nAny ideas?\r\n\r\n\r\n\r\n"},{"Id":"8758270579","Type":"IssuesEvent","CreatedAt":"2018-12-15T01:54:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1924","RelatedDescription":"Closed issue \"AndroidClientHandler doesn't clear Authorization header on redirect\" (#1924) at xamarin/xamarin-android","RelatedBody":"We have discovered that the AndroidClientHandler transmits all headers when following redirects with AllowAutoRedirect=true. I could not find any authoritative info how this should be handled, however the HttpClientHandler seems to clear the Authorization header when redirecting (see https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/RedirectHandler.cs).\r\nFrom my testing, it appears the NSUrlSessionHandler does so too.\r\n\r\nShould we change the AndroidClientHandler to be more consistent with the other platforms on this issue?\n\n> VS bug [#737231](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/737231)"},{"Id":"8758266748","Type":"IssuesEvent","CreatedAt":"2018-12-15T01:51:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2466","RelatedDescription":"Closed issue \"[mono-runtimes] System.Threading.Tasks.Extensions.dll facade assembly is not yet present on the `d15-9` branch\" (#2466) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download one of the latest candidate builds for the `d15-9` branch from https://jenkins.xamarin.com/view/Xamarin.Android/job/xamarin-android-builds-d15-9/33/PublishUrls/. Either the .vsix or the .pkg will work.\r\n2. Examine the package contents.\r\n\r\n### Expected Behavior\r\n\r\nNow that https://github.com/xamarin/xamarin-android/commit/0ea0725c2e9ca86b665ed49dfef0e0146251f7f9 has been committed to the `d15-9` branch to complete the implementation of the types forwarded by the *System.Threading.Tasks.Extensions.dll* facade assembly, it would be best to have the *System.Threading.Tasks.Extensions.dll* facade assembly itself also included in the installer package.\r\n\r\n### Actual Behavior\r\n\r\nThe installer packages (*Xamarin.Android.Sdk.9.1.3.0.vsix* and *xamarin.android-9.1.3-0.pkg*) do not yet contain the *System.Threading.Tasks.Extensions.dll* facade assembly.\r\n\r\nI believe that the particular part of https://github.com/xamarin/xamarin-android/pull/2450 that adds the *System.Threading.Tasks.Extensions.dll* facade assembly should be backported to the `d15-9` branch at this time to complete https://github.com/xamarin/xamarin-android/commit/0ea0725c2e9ca86b665ed49dfef0e0146251f7f9."},{"Id":"8758255498","Type":"IssuesEvent","CreatedAt":"2018-12-15T01:44:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1163","RelatedDescription":"Closed issue \"Setting Target Version to \"Use Compile\" Does not set targetSdkVersion in Manifest\" (#1163) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In VS or VS for Mac set Target SDK Version to \"Use Compile\" this is the default\r\n2. Look at current manifest (does not contain: targetSdkVersion)\r\n3. Compile application\r\n4. Look at output of AndroidManifest.xml that is generated in obj/android, still does not contain targetSdkVersion\r\n\r\n### Expected Behavior\r\n\r\nThe Value should be set correct for the targetSdkVersion in the AndroidManifest.xml. So if I compile against 25, it should show android:targetSdkVersion=\"25\".\r\n\r\nFailure to do this has some not so great side effects. Material design doesn't display correct, permissions don't work correctly, and a lot more.\r\n\r\n### Actual Behavior\r\n\r\nNothing is set in the AndroidManifest.xml\r\n"},{"Id":"8758062171","Type":"PullRequestEvent","CreatedAt":"2018-12-15T00:10:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2541","RelatedDescription":"Opened pull request \"[tests] Run tests in parallel\" (#2541) at xamarin/xamarin-android","RelatedBody":"Context: TODO!\r\n\r\nCommit 91a39725 updated `make run-all-tests` so that certain MSBuild\r\nunit test targets would be run in parallel, but had two flaws:\r\n\r\n 1. It only worked on non-Windows platforms.\r\n 2. It ignored many errors.\r\n\r\nCommit 91a39725 only worked on non-Windows platforms because it worked\r\nby generating a **bash**(1)-compatible shell script which\r\n*backgrounded* the target invocations.  Errors were ignored because\r\nthe generated script always exited with an error code of 0:\r\n\r\n\tmsbuild RunTests.targets /t:RunNUnitTests &\r\n\tmsbuild RunTests.targets /t:RunApkTests &\r\n\t# ...\r\n\texit 0\r\n\r\nSuch a script won't easily run on Windows, and the `msbuild` exit\r\ncodes were ignored because I couldn't think of a good and \"reasonable\"\r\nway to capture them.  (To be fair, Google/StackOverflow/etc. did show\r\nvarious ways to capture the exit codes for backgrounded pipelines.\r\nI considered them all to be largely *unreadable*.)\r\n\r\nAdditionally, I didn't think that this would necessarily be a problem:\r\nif a unit test failed, it should report the failure in one of the\r\nNUnit `.xml` files -- largely so that we wouldn't need to read the\r\nJenkins Console Output to see what the *actual* error was! -- and thus\r\nignoring the exit status shouldn't be a problem.\r\n\r\nTurns Out...that's wrong.  We have observed builds which are \"green\"\r\n-- no errors! -- but in which there *were* failures, and the failures\r\nweren't reported *because* the `parallel-targets.sh` script didn't\r\nreport that anything was wrong!\r\n\r\nTODO: Insert description of the crash/failure/whatever which was\r\nactually ignored.  Requires finding a suitable build log. Film at 11.\r\n\r\nDoh!\r\n\r\nFix both issues: since sanely capturing background process exit codes\r\nis not \"reasonably easy\" to do in **bash**(1), *Don't Use Bash*.\r\nInstead, introduce a new `<RunParallelTargets/>` task which uses\r\n`System.Diagnostics.Process` to run the targets in the background,\r\nthen (sanely) wait for them to complete and perform any necessary\r\nerror checking.\r\n\r\nThis has the added benefit that it *also* now works on Windows."},{"Id":"8757935686","Type":"PullRequestEvent","CreatedAt":"2018-12-14T23:25:19","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2540","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] ResolveLibraryProjectImports temp files\" (#2540) at xamarin/xamarin-android","RelatedBody":"When reviewing `ResolveLibraryProjectImports`, I noticed a few things\r\nwe could improve:\r\n\r\n1. We are using `GetResourceData` to get the entire contents of a file\r\n  as a `byte[]` and then writing to disk.\r\n2. We are writing temporary zip files to disk, reading them to extract,\r\n  then deleting them.\r\n\r\nThe first thing I did was take advantage of the `GetResourceStream`\r\nmethod, so we could just do `stream.CopyTo(file)`. This prevents us\r\nfrom allocating big `byte[]` the size of each file.\r\n\r\nNext, I took advantage of `ZipArchive.Open (stream)` and\r\n`GetResourceStream` to avoid the need for creating temporary zip\r\nfiles. We can unzip directly from the `Stream` in memory.\r\n\r\n## Results ##\r\n\r\nWhen timing these changes, I used the Xamarin.Forms integration\r\nproject in this repo:\r\n\r\n    Before\r\n    1. 1793 ms  ResolveLibraryProjectImports               1 calls\r\n    2. 1780 ms  ResolveLibraryProjectImports               1 calls\r\n    3. 1770 ms  ResolveLibraryProjectImports               1 calls\r\n    After\r\n    1. 1750 ms  ResolveLibraryProjectImports               1 calls\r\n    2. 1740 ms  ResolveLibraryProjectImports               1 calls\r\n    3. 1702 ms  ResolveLibraryProjectImports               1 calls\r\n\r\nI would say the improvements here are around 50ms."},{"Id":"8755882183","Type":"PullRequestEvent","CreatedAt":"2018-12-14T16:03:57","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2539","RelatedDescription":"Opened pull request \"[build] fix r8 license build failure\" (#2539) at xamarin/xamarin-android","RelatedBody":"We are seeing this on non-Windows platforms:\r\n\r\n    make: *** No rule to make target 'external//r8/LICENSE', needed by 'ThirdPartyNotices.txt'.  Stop.\r\n\r\nIt turns out that if you put a `LICENSE` file in `src`, things don't\r\nquite work right.\r\n\r\nThis license should just be specified with `<LicenseText>` item\r\nmetadata instead of using a file."},{"Id":"8755078875","Type":"IssuesEvent","CreatedAt":"2018-12-14T13:49:58","Actor":"arvindrajachourasiya","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2538","RelatedDescription":"Opened issue \"Visual studio hangs when changing Target Framework\" (#2538) at xamarin/xamarin-android","RelatedBody":"I have Xamarin.Android project in visual studio 2017. When even I change in Target framework (_Go to Properties-- Application-- Compile using Android version: (Target Framework)_)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Android project \r\n2. Go to Properties-- Application-- Compile using Android version: (Target Framework) change it to 8.1 to 9.0 \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nTarget Framework should change without hanging visual studio\r\n\r\n### Actual Behavior\r\nVisual studio getting hanged\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Enterprise 2017\r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nC# Tools 2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nNuGet Package Manager 4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension 1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension 1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension 1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\nVisualStudio.Mac 1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin 4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer 4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates 1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK 9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK 12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8754966316","Type":"PullRequestEvent","CreatedAt":"2018-12-14T13:29:05","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2537","RelatedDescription":"Opened pull request \"[build-status] Archive the tests logcat output\" (#2537) at xamarin/xamarin-android","RelatedBody":"It is useful to have the logcat output in case one wants to analyze\r\ntests run, even when the test didn't fail"},{"Id":"8753983796","Type":"PullRequestEvent","CreatedAt":"2018-12-14T10:12:30","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2536","RelatedDescription":"Opened pull request \"Lets PreCompile the \"Runtime\" rather than do it on the users machine [WIP]\" (#2536) at xamarin/xamarin-android","RelatedBody":"This is a work in progress. The idea is we build a `runtime.jar` file which we just include in the app. This is so we don't need to compile all the code on the users machine. It also means we can provide a custom `runtime_fastdev.jar` which is specific for fast deployment. \r\n\r\nA couple of things to note. We use a internal private class `MonoPackageManager_Resources` to provide data to the runtime. Now the interesting thing is we can hot swap the class file. So we build `MonoPackageManager.java` with a template version of `MonoPackageManager_Resources`. Then we build on the user machine a custom one and just use that `.class` file. Java seems to be fine with this.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8760319344","Type":"IssuesEvent","CreatedAt":"2018-12-16T03:35:54","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4758","RelatedDescription":"Opened issue \"[Shell] Tabs came back like a bad rash\" (#4758) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have hidden tabs all the pages, and when I push a new page the tabs are coming back on Android. On iOS they do not.\r\n\r\nFor example, page `ThreeThreePage.xaml`  has this to hide the tab bar:\r\n\r\n```\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n             x:Class=\"TheLittleThingsPlayground.Views.ThreeThreePage\"\r\n             Shell.TabBarIsVisible=\"False\"\r\n             Title=\"3.3.0\"\r\n             BackgroundColor=\"{OnPlatform Android=White}\">\r\n```\r\n\r\nAnd it looks like this:\r\n\r\n<img width=\"584\" alt=\"screenshot 2018-12-15 21 32 54\" src=\"https://user-images.githubusercontent.com/41873/50049711-01262800-00b1-11e9-8c24-432531772655.png\">\r\n\r\nTapping the upper right toolbar item pushes a new page using the \"old\" navigation service, and the result is this:\r\n\r\n<img width=\"928\" alt=\"screenshot 2018-12-15 21 29 52\" src=\"https://user-images.githubusercontent.com/41873/50049716-1d29c980-00b1-11e9-8cf3-4b13ac8dc583.png\">\r\n\r\n### Expected Behavior\r\n\r\nTabs should not be visible when I've hidden it.\r\n\r\n### Actual Behavior\r\n\r\nTabs. So many tabs!\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/2683239/Archive.zip)\r\n\r\n"},{"Id":"8760268606","Type":"PullRequestEvent","CreatedAt":"2018-12-16T02:46:32","Actor":"artemutin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4757","RelatedDescription":"Opened pull request \"Added case in GTK listviewrender for change of SelectedItem property\" (#4757) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded case in GTK listviewrender for change of SelectedItem property.\r\n\r\n### Issues Resolved ### \r\nhttps://github.com/xamarin/Xamarin.Forms/issues/4748\r\n\r\n\r\n### API Changes ###\r\nnone\r\n\r\n### Platforms Affected ### \r\nGTK\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nI've added Issue4748.cs with basic example. Without fix, clicking button does not update selected item highlight in list. With fix, last item in list become highlighted, as it should.\r\nI didn't understand, how to run UI tests locally, so I didn't made one.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8760116748","Type":"IssuesEvent","CreatedAt":"2018-12-16T00:19:50","Actor":"Ali-YousefiTelori","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4756","RelatedDescription":"Opened issue \"[UWP] SetNativeControl 'Value does not fall within the expected range'\" (#4756) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\nWhen I want to SetNativeControl in uwp renderer i get error 'Value does not fall within the expected range' I don't know what is wrong here.\r\n\r\nthis is a border with thickness radius and after i custom my native border in renderer i want to set child of xamarin contentview renderer to my native border renderer\r\n\r\nExample:\r\n\r\nportable class:\r\n\r\n```csharp\r\nusing Xamarin.Forms;\r\n\r\nnamespace AsNum.XFControls {\r\n\r\n    /// <summary>\r\n    /// 边框\r\n    /// </summary>\r\n    public class Border : ContentView {\r\n\r\n        /// <summary>\r\n        /// 圆角大小\r\n        /// </summary>\r\n        public static readonly BindableProperty CornerRadiusProperty =\r\n            BindableProperty.Create(\"CornerRadius\",\r\n                typeof(CornerRadius),\r\n                typeof(Border),\r\n                default(CornerRadius)\r\n                );\r\n\r\n\r\n        /// <summary>\r\n        /// 边框颜色\r\n        /// </summary>\r\n        public static readonly BindableProperty StrokeProperty =\r\n            BindableProperty.Create(\"Stroke\",\r\n                typeof(Color),\r\n                typeof(Border),\r\n                Color.Default);\r\n\r\n\r\n\r\n        /// <summary>\r\n        /// 边框厚度\r\n        /// </summary>\r\n        public static readonly BindableProperty StrokeThicknessProperty =\r\n            BindableProperty.Create(\"StrokeThickness\",\r\n                typeof(Thickness),\r\n                typeof(Border),\r\n                default(Thickness)\r\n                );\r\n\r\n\r\n        /// <summary>\r\n        /// 是否裁剪超出部分\r\n        /// </summary>\r\n        public static readonly BindableProperty IsClippedToBorderProperty =\r\n            BindableProperty.Create(\"IsClippedToBorder\",\r\n                typeof(bool),\r\n                typeof(bool),\r\n                true);\r\n\r\n\r\n        /// <summary>\r\n        /// 圆角大小\r\n        /// </summary>\r\n        public CornerRadius CornerRadius {\r\n            get {\r\n                return (CornerRadius)base.GetValue(CornerRadiusProperty);\r\n            }\r\n            set {\r\n                base.SetValue(CornerRadiusProperty, value);\r\n            }\r\n        }\r\n\r\n\r\n        /// <summary>\r\n        /// 边框颜色\r\n        /// </summary>\r\n        public Color Stroke {\r\n            get {\r\n                return (Color)GetValue(StrokeProperty);\r\n            }\r\n            set {\r\n                SetValue(StrokeProperty, value);\r\n            }\r\n        }\r\n\r\n        /// <summary>\r\n        /// 边框宽度\r\n        /// </summary>\r\n        public Thickness StrokeThickness {\r\n            get {\r\n                return (Thickness)GetValue(StrokeThicknessProperty);\r\n            }\r\n            set {\r\n                SetValue(StrokeThicknessProperty, value);\r\n            }\r\n        }\r\n\r\n        /// <summary>\r\n        /// 是否裁剪超出部分\r\n        /// </summary>\r\n        public bool IsClippedToBorder {\r\n            get {\r\n                return (bool)GetValue(IsClippedToBorderProperty);\r\n            }\r\n            set {\r\n                SetValue(IsClippedToBorderProperty, value);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n\r\nuwp renderer class:\r\n```csharp\r\nusing AsNum.XFControls;\r\nusing AsNum.XFControls.UWP;\r\nusing Xamarin.Forms.Platform.UWP;\r\n\r\n[assembly: ExportRenderer(typeof(Border), typeof(BorderRender))]\r\nnamespace AsNum.XFControls.UWP\r\n{\r\n    public class BorderRender : ViewRenderer<Border, Windows.UI.Xaml.Controls.Border>\r\n    {\r\n\r\n        public BorderRender() : base()\r\n        {\r\n            Loaded += BorderRender_Loaded;\r\n        }\r\n\r\n        private void BorderRender_Loaded(object sender, Windows.UI.Xaml.RoutedEventArgs e)\r\n        {\r\n            if (Control != null)\r\n            {\r\n                SetPadding();\r\n                SetBorderBrush();\r\n                SetThickness();\r\n                SetCornerRadius();\r\n            }\r\n        }\r\n\r\n        protected override void OnElementChanged(ElementChangedEventArgs<Border> e)\r\n        {\r\n            base.OnElementChanged(e);\r\n            if (e.NewElement != null)\r\n            {\r\n                var render = Platform.GetRenderer(e.NewElement.Content).GetNativeElement();\r\n                //this line show me error 'Value does not fall within the expected range'\r\n                SetNativeControl(new Windows.UI.Xaml.Controls.Border() { Child = render });\r\n            }\r\n        }\r\n        \r\n        protected override void UpdateBackgroundColor()\r\n        {\r\n            if (Control != null)\r\n            {\r\n                Control.Background = (Element.BackgroundColor != Xamarin.Forms.Color.Default ?\r\n                                                Element.BackgroundColor.ToBrush() :\r\n                                                base.Background);\r\n            }\r\n        }\r\n        \r\n        private void SetCornerRadius()\r\n        {\r\n            CornerRadius c = Element.CornerRadius;\r\n            Control.CornerRadius = new Windows.UI.Xaml.CornerRadius(c.TopLeft, c.TopRight, c.BottomRight, c.BottomLeft);\r\n        }\r\n\r\n        private void SetBorderBrush()\r\n        {\r\n            Control.BorderBrush = Element.Stroke.ToBrush();\r\n        }\r\n\r\n        private void SetThickness()\r\n        {\r\n            Control.BorderThickness = Element.StrokeThickness.ToWinPhone();\r\n        }\r\n\r\n        private void SetPadding()\r\n        {\r\n            Control.Padding = Element.Padding.ToWinPhone();\r\n        }\r\n\r\n\r\n        protected override void UpdateNativeControl()\r\n        {\r\n            base.UpdateNativeControl();\r\n        }\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            base.Dispose(disposing);\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n```xaml\r\n <controls:Border Margin=\"0,10,0,10\" CornerRadius=\"0,10,10,0\" BackgroundColor=\"#5e98d3\"  HorizontalOptions=\"StartAndExpand\">\r\n                <Label Text=\"custom text\" TextColor=\"White\"/>\r\n</controls:Border>\r\n```"},{"Id":"8760027364","Type":"IssuesEvent","CreatedAt":"2018-12-15T23:00:46","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4755","RelatedDescription":"Opened issue \"[Shell] Control loses focus after appearing\" (#4755) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have a page that sets focus to an `Entry` and then pre-selects text. This works fine in a TabbedPage, but within Shell it's losing focus.\r\n\r\nhttps://www.screencast.com/t/Daq7XY40\r\n\r\n```\r\nprotected override void OnAppearing()\r\n        {\r\n            base.OnAppearing();\r\n            MakeSelection();\r\n        }\r\n\r\n        private void MakeSelection()\r\n        {\r\n            FirstEntry.Focus();\r\n            FirstEntry.CursorPosition = 4;\r\n            FirstEntry.SelectionLength = 11;\r\n        }\r\n```\r\n\r\nIf I set the `ShellContent` to be `ShellSections` (bottom  tabs) and yet also displayed in the flyout, this is not a problem. It seems navigation from `ShellItem` to `ShellItem` introduces an animation that is causing this issue.\r\n\r\nThis is fine:\r\n\r\n```\r\n<Shell ...>\r\n<ShellItem FlyoutDisplayOptions=\"AsMultipleItems\" Title=\"Releases\">\r\n        <ShellContent Title=\"3.1.0\" ContentTemplate=\"{DataTemplate views:ThreeOnePage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.2.0\" ContentTemplate=\"{DataTemplate views:ThreeTwoPage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.3.0\" ContentTemplate=\"{DataTemplate views:ThreeThreePage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.4.0\" ContentTemplate=\"{DataTemplate views:ThreeFourPage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.5.0-pre\" ContentTemplate=\"{DataTemplate views:ThreeFivePage}\" Icon=\"iconXamagon\"/>\r\n    </ShellItem>\r\n</Shell>\r\n```\r\n\r\nThis is not:\r\n\r\n```\r\n<Shell ...>\r\n        <ShellContent Title=\"3.1.0\" ContentTemplate=\"{DataTemplate views:ThreeOnePage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.2.0\" ContentTemplate=\"{DataTemplate views:ThreeTwoPage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.3.0\" ContentTemplate=\"{DataTemplate views:ThreeThreePage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.4.0\" ContentTemplate=\"{DataTemplate views:ThreeFourPage}\" Icon=\"iconXamagon\"/>\r\n        <ShellContent Title=\"3.5.0-pre\" ContentTemplate=\"{DataTemplate views:ThreeFivePage}\" Icon=\"iconXamagon\"/>\r\n</Shell>\r\n```\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Navigate to the 3.2.0 page from the flyout\r\n\r\n### Expected Behavior\r\n\r\nFocus set in OnAppearing is not lost until the user changes focus..\r\n\r\n### Actual Behavior\r\n\r\nFocus is lost a split second after appearing.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\n\r\n### Screenshots\r\n\r\nhttps://www.screencast.com/t/Daq7XY40\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/2683121/Archive.zip)\r\n\r\n"},{"Id":"8759958663","Type":"IssuesEvent","CreatedAt":"2018-12-15T22:06:27","Actor":"maxim-saplin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4754","RelatedDescription":"Opened issue \"Button.IsEnabled is ignored if Command is set, event if the command doesn't have canExecute Func<>\" (#4754) at xamarin/Xamarin.Forms","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Declare a button in XAML and set it's Command and IsEnabled bindings like that:\r\n`<Button Text=\"[D]atabase\" Command=\"{Binding ShowDb}\" IsEnabled=\"{Binding Source={x:Static vm:ViewModelContainer.ResultsDbViewModel}, Path=Enabled}\"/>\r\n`\r\n2. Create command without canExecute delegate being defined:\r\n\r\n```\r\n        private ICommand showDb = new Command(() => { ViewModelContainer.ResultsDbViewModel.IsVisible = true; });\r\n\r\n        public ICommand ShowDb\r\n        {\r\n            get\r\n            {\r\n                return showDb;\r\n            }\r\n        }\r\n\r\n```\r\n3. Set the Enabled value in ViewModel to false\r\n\r\n### Expected Behavior\r\n\r\nIf Command doesn't specify canExecute, the IsEnabled value from binding is used and the button is disabled.\r\n\r\n### Actual Behavior\r\n\r\nIsEnabled value is ignored, the button is enabled\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.2\r\n- IDE: Visual Studio for Mac 7.7.1\r\n- Platform Target Frameworks: macOS\r\n"},{"Id":"8759940757","Type":"PullRequestEvent","CreatedAt":"2018-12-15T21:53:19","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4598","RelatedDescription":"Closed pull request \"[WIP] Updating the Material Visual\" (#4598) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe PR to show the changes for the Material controls.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n \r\n| Forms | Android | iOS |\r\n| ------ | -------- | --- |\r\n| Frame | MaterialCardView | Card |\r\n| Button | MaterialButton | Button |\r\n| ProgressBar | tweaked native | ProgressView | \r\n| Slider | n/a | Slider |\r\n| Entry | TextInputLayout | TextField |\r\n\r\n - `Frame` is done on both, but due to a bug/limitation on iOS, the contents are only clipped on v70+ of material components\r\n - `Button` is done on both\r\n - `ProgressBar` is done on iOS, Android is just a tweaked version of the native renderer (new control is pending Google code)\r\n - `Slider` is done on iOS, Android uses native control\r\n - `Entry` is almost done, @PureWeen is looking into some issues and will update accordingly :)\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n - New Material renderers\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8759870496","Type":"IssuesEvent","CreatedAt":"2018-12-15T21:01:51","Actor":"maxim-saplin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4753","RelatedDescription":"Opened issue \"WebView on Mac not firing \"Navigated\" event with status \"Failure\" in case there's no internet connection\" (#4753) at xamarin/Xamarin.Forms","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Instantiate Xamarin.Forms.WebView control\r\n2. Subscribe to Navigating and Navigated events\r\n3. Set Source to a valid https url which is working\r\n4. Run the app with internet turned off\r\n\r\n### Expected Behavior\r\n1. At first Navigating event is called, then Navigated is called with status Failure\r\n\r\n### Actual Behavior\r\n2. Navigating is called, Navigated is not\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2\r\n- IDE: Visual Studio for Mac 7.7.1\r\n- Platform Target Frameworks: macOS\r\n\r\nIn macOS platform renderer there's internal class: \r\n\r\n`internal class FormsWebFrameDelegate : WebKit.WebFrameLoadDelegate`\r\n\r\nIt has 2 overides, which call for Navigated:\r\n\r\n`public override void FinishedLoad(WebKit.WebView sender, WebFrame forFrame)`\r\nand\r\n`public override void FailedLoadWithError(WebKit.WebView sender, NSError error, WebFrame forFrame)`\r\n\r\nI suggest to add another override to deal with no internet connection situation and let the webview know about failure in Navigated event.\r\n\r\n`            public override void FailedProvisionalLoad(WebKit.WebView sender, NSError error, WebFrame forFrame)\r\n            {\r\n                FailedLoadWithError(sender, error, forFrame);\r\n            }`"},{"Id":"8759794866","Type":"IssuesEvent","CreatedAt":"2018-12-15T20:08:34","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4752","RelatedDescription":"Opened issue \"[Shell] ContentPage appears under navigation bar\" (#4752) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nA `ContentPage` with a `Grid` root element appears under the navigation bar instead of starting below it. If I put the `Grid` inside a `ScrollView` it will layout as desired. I can see a situation where I may wish to have my content appearing at `0,0` however then how should I express when I want a page like this to start just below the navigation bar?\r\n\r\n```<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n             x:Class=\"TheLittleThingsPlayground.Views.AboutPage\" \r\n             xmlns:vm=\"clr-namespace:TheLittleThingsPlayground.ViewModels\" \r\n             Title=\"{Binding Title}\">\r\n    \r\n    <ContentPage.BindingContext>\r\n        <vm:AboutViewModel />\r\n    </ContentPage.BindingContext>\r\n    \r\n    <ContentPage.Resources>\r\n        <ResourceDictionary>\r\n            <Color x:Key=\"Primary\">#2196F3</Color>\r\n            <Color x:Key=\"Accent\">#96d1ff</Color>\r\n            <Color x:Key=\"LightTextColor\">#999999</Color>\r\n        </ResourceDictionary>\r\n    </ContentPage.Resources>\r\n    \r\n     <Grid>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height=\"Auto\" />\r\n            <RowDefinition Height=\"*\" />\r\n        </Grid.RowDefinitions>\r\n        <StackLayout BackgroundColor=\"{StaticResource Accent}\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\">\r\n            <StackLayout Orientation=\"Horizontal\" HorizontalOptions=\"Center\" VerticalOptions=\"Center\">\r\n                <ContentView Padding=\"0,40,0,40\" VerticalOptions=\"FillAndExpand\">\r\n                    <Image Source=\"xamarin_logo.png\" VerticalOptions=\"Center\" HeightRequest=\"64\" />\r\n                </ContentView>\r\n            </StackLayout>\r\n        </StackLayout>\r\n        <ScrollView Grid.Row=\"1\">\r\n            <StackLayout Orientation=\"Vertical\" Padding=\"16,40,16,40\" Spacing=\"10\">\r\n                <Label FontSize=\"22\">\r\n                    <Label.FormattedText>\r\n                        <FormattedString>\r\n                            <FormattedString.Spans>\r\n                                <Span Text=\"The Little Things Playground\" FontAttributes=\"Bold\" FontSize=\"22\" />\r\n                                <Span Text=\" \" />\r\n                                <Span Text=\"1.0\" ForegroundColor=\"{StaticResource LightTextColor}\" />\r\n                            </FormattedString.Spans>\r\n                        </FormattedString>\r\n                    </Label.FormattedText>\r\n                </Label>\r\n                <Label>\r\n                    <Label.FormattedText>\r\n                        <FormattedString>\r\n                            <FormattedString.Spans>\r\n                                <Span Text=\"This app is written in C#, XAML, and native APIs using the\" />\r\n                                <Span Text=\" \" />\r\n                                <Span Text=\"Xamarin Platform\" FontAttributes=\"Bold\" TextColor=\"Blue\" TextDecorations=\"Underline\">\r\n                                    <Span.GestureRecognizers>\r\n                                       <TapGestureRecognizer \r\n                                            Command=\"{Binding TapCommand, Mode=OneWay}\"\r\n                                            CommandParameter=\"https://docs.microsoft.com/en-us/xamarin/xamarin-forms/\"/>\r\n                                     </Span.GestureRecognizers>\r\n                                </Span>\r\n                                <Span Text=\".\" />\r\n                            </FormattedString.Spans>\r\n                        </FormattedString>\r\n                    </Label.FormattedText>\r\n                </Label>\r\n                <Label>\r\n                    <Label.FormattedText>\r\n                        <FormattedString>\r\n                            <FormattedString.Spans>\r\n                                <Span Text=\"It shares code with its\" />\r\n                                <Span Text=\" \" />\r\n                                <Span Text=\"iOS, Android, and Windows\" FontAttributes=\"Bold\" />\r\n                                <Span Text=\" \" />\r\n                                <Span Text=\"versions.\" />\r\n                            </FormattedString.Spans>\r\n                        </FormattedString>\r\n                    </Label.FormattedText>\r\n                </Label>\r\n                <Button Margin=\"0,10,0,0\" Text=\"Learn more\" Command=\"{Binding OpenWebCommand}\" BackgroundColor=\"{StaticResource Primary}\" TextColor=\"White\" />\r\n            </StackLayout>\r\n        </ScrollView>\r\n    </Grid>\r\n</ContentPage>```\r\n\r\n### Expected Behavior\r\n\r\nContent starts below the navigation bar by default, or I have a clear way to position it relative to the  navigation bar.\r\n\r\n### Actual Behavior\r\n\r\nControl is out of my hands and I'm now looking for margin/padding hacks and guessing at the height of the navigation bar, or nesting unnecessarily within a `ScrollView`.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\n### Screenshots\r\n\r\n`Grid`:\r\n<img width=\"584\" alt=\"screenshot 2018-12-15 14 07 41\" src=\"https://user-images.githubusercontent.com/41873/50046998-d74e1080-0072-11e9-93f9-aede0de797cf.png\">\r\n\r\n`ScrollView`:\r\n<img width=\"584\" alt=\"screenshot 2018-12-15 14 07 06\" src=\"https://user-images.githubusercontent.com/41873/50047001-de751e80-0072-11e9-9ab8-9559d1be660d.png\">\r\n\r\n\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/2683033/Archive.zip)\r\n"},{"Id":"8759680127","Type":"IssuesEvent","CreatedAt":"2018-12-15T18:49:25","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4751","RelatedDescription":"Opened issue \"XAML Error message too vague:  Error: The given key 'Xamarin.Forms.Xaml.ElementNode' was not present in the dictionary. \" (#4751) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI'm getting this error trying to run a new XAML page that ran previously. I made several updates, but this message doesn't tell me which one is a problem.\r\n\r\n```\r\n/work/TheLittleThingsPlayground/TheLittleThingsPlayground/Views/ThreeFivePage.xaml: Error: The given key 'Xamarin.Forms.Xaml.ElementNode' was not present in the dictionary. (TheLittleThingsPlayground)\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached project\r\n\r\n### Expected Behavior\r\n\r\nDisplay an error that provides direction on where the issue is in the file, or steps to identify where it is.\r\n\r\n### Actual Behavior\r\n\r\nThe above error only tells me the file. I'm left to retrace my changes one by one, building and rebuilding, until I figure it out. \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\n### Screenshots\r\n\r\n<img width=\"2030\" alt=\"screenshot 2018-12-15 12 42 46\" src=\"https://user-images.githubusercontent.com/41873/50046363-c0ee8780-0067-11e9-98e7-0bb088376e62.png\">\r\n\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/2682972/Archive.zip)\r\n\r\n"},{"Id":"8759653750","Type":"IssuesEvent","CreatedAt":"2018-12-15T18:31:19","Actor":"brminnick","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4750","RelatedDescription":"Opened issue \"Make `Xamarin.Forms.WeakEventManager` Public\" (#4750) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\n`Xamarin.Forms.WeakEventManager` is an excellent example of how to leverage the Weak Event pattern to avoid memory leaks.\r\n\r\nI'd love to leverage it in my Xamarin.Forms apps, but the class is currently `internal`.\r\n\r\n## API Changes\r\n\r\n### Current API\r\n\r\n```csharp\r\nnamespace Xamarin.Forms\r\n{\r\n    internal class WeakEventManager`\r\n```\r\n\r\n### Requested API\r\n\r\n```csharp\r\nnamespace Xamarin.Forms\r\n{\r\n    public class WeakEventManager\r\n```\r\n\r\n## Intended Use Case\r\nThis will allow Xamarin.Forms devs to to implement the Weak Event pattern without needing to [implement a custom version](http://paulstovell.com/blog/weakevents) or rely on [3rd party dependancy](https://www.nuget.org/packages/WeakEvent/)."},{"Id":"8759327398","Type":"IssuesEvent","CreatedAt":"2018-12-15T15:03:04","Actor":"gabry90","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4749","RelatedDescription":"Opened issue \"Unhandled Exception:  System.InvalidOperationException\" (#4749) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nDuring some animation; suchase fadeto, translateto etc my app crashed with this follow exception:\r\n\r\nUnhandled Exception:\r\n\r\nSystem.InvalidOperationException: Collection was modified; enumeration operation may not execute.\r\n\r\n12-15 15:56:47.113 I/MonoDroid(13943): UNHANDLED EXCEPTION:\r\n12-15 15:56:47.122 I/MonoDroid(13943): System.InvalidOperationException: Collection was modified; enumeration operation may not execute.\r\n12-15 15:56:47.122 I/MonoDroid(13943):   at (wrapper dynamic-method) System.Object.45(intptr,intptr,bool,int,int,int,int)\r\n12-15 15:56:47.122 I/MonoDroid(13943):   at (wrapper native-to-managed) System.Object.45(intptr,intptr,int,int,int,int,int)\r\n12-15 15:56:47.122 I/MonoDroid(13943):   at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_nonvirtual_void_method_a(intptr,intptr&,intptr,intptr,intptr,Java.Interop.JniArgumentValue*)\r\n12-15 15:56:47.122 I/MonoDroid(13943):   at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualVoidMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00073] in <42dc777b518744fdae9988e94489a4a0>:0 \r\n12-15 15:56:47.122 I/MonoDroid(13943):   at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x0005d] in <42dc777b518744fdae9988e94489a4a0>:0 \r\n12-15 15:56:47.122 I/MonoDroid(13943):   at Xamarin.Forms.Platform.Android.FormsViewGroup.MeasureAndLayout (System.Int32 p0, System.Int32 p1, System.Int32 p2, System.Int32 p3, System.Int32 p4, System.Int32 p5) [0x00086] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android.FormsViewGroup\\obj\\Release\\generated\\src\\Xamarin.Forms.Platform.Android.FormsViewGroup.cs:181 \r\n12-15 15:56:47.122 I/MonoDroid(13943):   at Xamarin.Forms.Platform.Android.VisualElementTracker.UpdateLayout () [0x00149] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementTracker.cs:102 \r\n12-15 15:56:47.122 I/MonoDroid(13943):   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].UpdateLayout () [0x00012] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:133 \r\n12-15 15:56:47.123 I/MonoDroid(13943):   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].UpdateLayout (System.Collections.Generic.IEnumerable`1[T] children) [0x00034] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:350 \r\n12-15 15:56:47.123 I/MonoDroid(13943):   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].OnLayout (System.Boolean changed, System.Int32 l, System.Int32 t, System.Int32 r, System.Int32 b) [0x0000e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:336 \r\n12-15 15:56:47.123 I/MonoDroid(13943):   at Xamarin.Forms.Platform.Android.FormsViewGroup.n_OnLayout_ZIIII (System.IntPtr jnienv, System.IntPtr native__this, System.Boolean p0, System.Int32 p1, System.Int32 p2, System.Int32 p3, System.Int32 p4) [0x00008] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android.FormsViewGroup\\obj\\Release\\generated\\src\\Xamarin.Forms.Platform.Android.FormsViewGroup.cs:198 \r\n12-15 15:56:47.123 I/MonoDroid(13943):   at (wrapper dynamic-method) System.Object.45(intptr,intptr,bool,int,int,int,int)\r\n12-15 15:56:47.287 W/google-breakpad(13943): ### ### ### ### ### ### ### ### ### ### ### ### ###\r\n12-15 15:56:47.287 W/google-breakpad(13943): Chrome build fingerprint:\r\n12-15 15:56:47.287 W/google-breakpad(13943): 71.0.3578.98\r\n12-15 15:56:47.287 W/google-breakpad(13943): 357809852\r\n12-15 15:56:47.287 W/google-breakpad(13943): ### ### ### ### ### ### ### ### ### ### ### ### ###\r\n12-15 15:56:47.287 E/mono-rt (13943): Stacktrace:\r\n12-15 15:56:47.287 E/mono-rt (13943): \r\n12-15 15:56:47.288 E/mono-rt (13943):   at <unknown> <0xffffffff>\r\n12-15 15:56:47.288 E/mono-rt (13943):   at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_new_string (intptr,intptr&,char*,int) <0x00007>\r\n12-15 15:56:47.288 E/mono-rt (13943):   at Java.Interop.JniEnvironment/Strings.NewString (char*,int) [0x00009] in <42dc777b518744fdae9988e94489a4a0>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at Java.Interop.JniEnvironment/Strings.NewString (string) [0x00024] in <42dc777b518744fdae9988e94489a4a0>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at Android.Runtime.JNIEnv.NewString (string) [0x0000a] in <1219ce5aae934ab095dc0e05b2110050>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at Java.Lang.Error..ctor (string) [0x00020] in <1219ce5aae934ab095dc0e05b2110050>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at Android.Runtime.JavaProxyThrowable..ctor (System.Exception) [0x00007] in <1219ce5aae934ab095dc0e05b2110050>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at Java.Lang.Throwable.FromException (System.Exception) [0x0001e] in <1219ce5aae934ab095dc0e05b2110050>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at Android.Runtime.AndroidEnvironment.UnhandledException (System.Exception) [0x0006a] in <1219ce5aae934ab095dc0e05b2110050>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at (wrapper dynamic-method) object.45 (intptr,intptr,bool,int,int,int,int) [0x00047] in <d4a23bbd2f544c30a48c44dd622ce09f>:0\r\n12-15 15:56:47.288 E/mono-rt (13943):   at (wrapper native-to-managed) object.45 (intptr,intptr,int,int,int,int,int) [0x00033] in <d4a23bbd2f544c30a48c44dd622ce09f>:0\r\n12-15 15:56:47.289 E/mono-rt (13943):   at <unknown> <0xffffffff>\r\n12-15 15:56:47.289 E/mono-rt (13943):   at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_nonvirtual_void_method_a (intptr,intptr&,intptr,intptr,intptr,Java.Interop.JniArgumentValue*) <0x00007>\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Java.Interop.JniEnvironment/InstanceMethods.CallNonvirtualVoidMethod (Java.Interop.JniObjectReference,Java.Interop.JniObjectReference,Java.Interop.JniMethodInfo,Java.Interop.JniArgumentValue*) [0x00074] in <42dc777b518744fdae9988e94489a4a0>:0\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Java.Interop.JniPeerMembers/JniInstanceMethods.InvokeVirtualVoidMethod (string,Java.Interop.IJavaPeerable,Java.Interop.JniArgumentValue*) [0x0005f] in <42dc777b518744fdae9988e94489a4a0>:0\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.FormsViewGroup.MeasureAndLayout (int,int,int,int,int,int) [0x00086] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android.FormsViewGroup\\obj\\Release\\generated\\src\\Xamarin.Forms.Platform.Android.FormsViewGroup.cs:181\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.VisualElementTracker.UpdateLayout () [0x00149] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementTracker.cs:102\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1<TElement_REF>.UpdateLayout () [0x00012] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:133\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1<TElement_REF>.UpdateLayout (System.Collections.Generic.IEnumerable`1<Xamarin.Forms.Element>) [0x00034] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:350\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1<TElement_REF>.OnLayout (bool,int,int,int,int) [0x0000e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:336\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.AppCompat.NavigationPageRenderer.OnLayout (bool,int,int,int,int) [0x0000d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\AppCompat\\NavigationPageRenderer.cs:365\r\n12-15 15:56:47.289 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.FormsViewGroup.n_OnLayout_ZIIII (intptr,intptr,bool,int,int,int,int) [0x00008] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android.FormsViewGroup\\obj\\Release\\generated\\src\\Xamarin.Forms.Platform.Android.FormsViewGroup.cs:198\r\n12-15 15:56:47.289 E/mono-rt (13943):   at (wrapper dynamic-method) object.45 (intptr,intptr,bool,int,int,int,int) [0x0002f] in <d4a23bbd2f544c30a48c44dd622ce09f>:0\r\n12-15 15:56:47.289 E/mono-rt (13943):   at (wrapper native-to-managed) object.45 (intptr,intptr,int,int,int,int,int) [0x00033] in <d4a23bbd2f544c30a48c44dd622ce09f>:0\r\n12-15 15:56:47.289 E/mono-rt (13943):   at <unknown> <0xffffffff>\r\n12-15 15:56:47.290 E/mono-rt (13943):   at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_nonvirtual_void_method_a (intptr,intptr&,intptr,intptr,intptr,Java.Interop.JniArgumentValue*) <0x00007>\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Java.Interop.JniEnvironment/InstanceMethods.CallNonvirtualVoidMethod (Java.Interop.JniObjectReference,Java.Interop.JniObjectReference,Java.Interop.JniMethodInfo,Java.Interop.JniArgumentValue*) [0x00074] in <42dc777b518744fdae9988e94489a4a0>:0\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Java.Interop.JniPeerMembers/JniInstanceMethods.InvokeVirtualVoidMethod (string,Java.Interop.IJavaPeerable,Java.Interop.JniArgumentValue*) [0x0005f] in <42dc777b518744fdae9988e94489a4a0>:0\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.FormsViewGroup.MeasureAndLayout (int,int,int,int,int,int) [0x00086] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android.FormsViewGroup\\obj\\Release\\generated\\src\\Xamarin.Forms.Platform.Android.FormsViewGroup.cs:181\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.VisualElementTracker.UpdateLayout () [0x00149] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementTracker.cs:102\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1<TElement_REF>.UpdateLayout () [0x00012] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\VisualElementRenderer.cs:133\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.AppCompat.Platform.Xamarin.Forms.Platform.Android.IPlatformLayout.OnLayout (bool,int,int,int,int) [0x00020] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\AppCompat\\Platform.cs:218\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Xamarin.Forms.Platform.Android.PlatformRenderer.OnLayout (bool,int,int,int,int) [0x0000e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\PlatformRenderer.cs:73\r\n12-15 15:56:47.290 E/mono-rt (13943):   at Android.Views.ViewGroup.n_OnLayout_ZIIII (intptr,intptr,bool,int,int,int,int) [0x00012] in <1219ce5aae934ab095dc0e05b2110050>:0\r\n12-15 15:56:47.290 E/mono-rt (13943):   at (wrapper dynamic-method) object.40 (intptr,intptr,bool,int,int,int,int) [0x0002f] in <d4a23bbd2f544c30a48c44dd622ce09f>:0\r\n12-15 15:56:47.290 E/mono-rt (13943):   at (wrapper native-to-managed) object.40 (intptr,intptr,int,int,int,int,int) [0x00033] in <d4a23bbd2f544c30a48c44dd622ce09f>:0\r\n\r\n### Steps to Reproduce\r\n\r\nCan't reproduce case\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: latest Xamarin.Forms stable version\r\n- Last known good version:\r\n- IDE: Visa Studio 2017 15.9.4\r\n- Platform Target Frameworks:\r\n  - Android: Android SDK version 8.0\r\n- Android Support Library Version: ?\r\n- Nuget Packages:\r\n- Affected Devices: Xiaiomi Mi6\r\n\r\n### Screenshots\r\n\r\nNo screenshoots\r\n\r\n### Reproduction Link\r\n\r\nNo link\r\n"},{"Id":"8759130748","Type":"IssuesEvent","CreatedAt":"2018-12-15T12:52:43","Actor":"artemutin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4748","RelatedDescription":"Opened issue \"Setting SelectedItem property of GTK ListView does not reflected in UI\" (#4748) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSetting SelectedItem for GTK ListView programmaticaly does not work. \r\n\r\n### Expected Behavior\r\nWhen you programmaticaly set SelectedItem to actual item from list, it should become highlighted, like it does when you click item.\r\n### Actual Behavior\r\nIt does not highlighted.\r\n### Basic Information\r\nLooks like OnElementPropertyChanged of is missing a case for change of SelectedItem property https://github.com/xamarin/Xamarin.Forms/blob/f2948f1f0cf9829fe6ddafc60df2ac06a6a59ed0/Xamarin.Forms.Platform.GTK/Renderers/ListViewRenderer.cs#L76-L98 .\r\n\r\n- Version with issue:\r\nBuilded this commit (latest master commit at this time) https://github.com/xamarin/Xamarin.Forms/commit/f2948f1f0cf9829fe6ddafc60df2ac06a6a59ed0\r\n- Last known good version:\r\n- IDE: Visual Studio\r\n- Platform Target Frameworks: GTK\r\n- Affected Devices:\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8757144780","Type":"IssuesEvent","CreatedAt":"2018-12-14T20:09:16","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4620","RelatedDescription":"Closed issue \"Interface Builder - Switching back to VS4M causes the project to be unloaded in Xcode\" (#4620) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new Xamarin iOS Application\r\n2. Right Click Storyboard\r\n3. Open in Interface Builder\r\n4. Edit the ViewController\r\n5. Switch focus back to VS4M\r\n6. Switch focus to Xcode\r\n\r\n### Expected Behavior\r\n\r\nState of Interface Builder should be intact and editing of the Storyboard should be possible.\r\n\r\n### Actual Behavior\r\n\r\nXcode project is unloaded and no longer able to edit\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 3)\r\nInstallation UUID: 59e8a0c2-a674-42a6-b852-843de896e0eb\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.1.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Version: 2.1.301\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/blounty/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Enterprise)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040003\r\nGit revision: 6ae731889c896d6733efb8ff5117f5bf5b17b509\r\nBuild date: 2018-07-19 13:07:45-04\r\nXamarin addins: 417fed09624e1e1f76ab0a11e8b97ffd8bbf91e1\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n<img width=\"1667\" alt=\"screen shot 2018-08-14 at 11 06 52 am\" src=\"https://user-images.githubusercontent.com/30159621/44109555-30399fb0-9fb2-11e8-958d-c32891a826f4.png\">\n\n> VS bug [#665000](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/665000), VS bug [#752186](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/752186)"},{"Id":"8755927233","Type":"IssuesEvent","CreatedAt":"2018-12-14T16:11:14","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5276","RelatedDescription":"Closed issue \"NSProxy can not found \" (#5276) at xamarin/xamarin-macios","RelatedBody":" I am working on an FLAnimatedImage binding for iOS and I have come across a binding issue I have not seen before, from [FLAnimatedImage.h](https://github.com/Flipboard/FLAnimatedImage/blob/master/FLAnimatedImage/FLAnimatedImage.h):\r\n```\r\n@interface FLWeakProxy : NSProxy\r\n\r\n+ (instancetype)weakProxyForObject:(id)targetObject;\r\n\r\n@end\r\n```\r\nApparently Xamarin.iOS does not have NSProxy.\r\n\r\nCan anyone out there help me to figure out the best way to implement NSProxy, or maybe someone have experience to do that?"},{"Id":"8755347278","Type":"PullRequestEvent","CreatedAt":"2018-12-14T14:37:59","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5274","RelatedDescription":"Merged pull request \"[tests] Remove NoBindingEmbedding rebuild tests\" (#5274) at xamarin/xamarin-macios","RelatedBody":"- These tests failed randomly, especially on older macOS without APFS\r\n- They also were rather slow\r\n- https://github.com/xamarin/maccore/issues/1263"},{"Id":"8754277116","Type":"IssuesEvent","CreatedAt":"2018-12-14T11:07:13","Actor":"Wenfengcheng","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5276","RelatedDescription":"Opened issue \"NSProxy can not found \" (#5276) at xamarin/xamarin-macios","RelatedBody":" I am working on an FLAnimatedImage binding for iOS and I have come across a binding issue I have not seen before, from [FLAnimatedImage.h](https://github.com/Flipboard/FLAnimatedImage/blob/master/FLAnimatedImage/FLAnimatedImage.h):\r\n```\r\n@interface FLWeakProxy : NSProxy\r\n\r\n+ (instancetype)weakProxyForObject:(id)targetObject;\r\n\r\n@end\r\n```\r\nApparently Xamarin.iOS does not have NSProxy.\r\n\r\nCan anyone out there help me to figure out the best way to implement NSProxy, or maybe someone have experience to do that?"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":148,"FavoriteCount":67,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":140,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":30,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":39,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":112,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":56,"RawContent":null}]}},"RunOn":"2018-12-16T05:31:20.3883489Z","RunDurationInMilliseconds":4263}