{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.7","PublishedOn":"2018-05-08T18:22:06+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We’re excited to share updates about changes to F# and F# tools which shipped with the Visual Studio 2017 version 15.7 release. Let’s dive in! Type Providers now support .NET Standard For those who...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/f-language-and-tools-update-for-visual-studio-2017-version-15-7/","RawContent":null},{"Title":"Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework","PublishedOn":"2018-05-08T00:41:28+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"Today at //Build 2018, we are excited to announce the preview of ML.NET, a cross-platform, open source machine learning framework. ML.NET will allow .NET developers to develop their own models and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 RC 1","PublishedOn":"2018-05-07T18:00:05+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are excited to announce that the first release candidate of EF Core 2.1 is available, alongside .NET Core 2.1 RC 1 and ASP.NET Core 2.1 RC 1, for broad testing, and now also for production...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-entity-framework-core-2-1-rc-1/","RawContent":null},{"Title":".NET Core 3 and Support for Windows Desktop Applications","PublishedOn":"2018-05-07T15:40:04+00:00","CommentsCount":279,"FacebookCount":0,"Summary":"At Microsoft Build Live today, we are sharing a first look at our plans for .NET Core 3. The highlight of .NET Core 3 is support for Windows desktop applications, specifically Windows Forms, Windows...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/","RawContent":null},{"Title":"Announcing .NET Core 2.1 RC 1","PublishedOn":"2018-05-07T15:39:20+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 2.1 Release Candidate 1 (RC 1). The .NET Core 2.1 RC 1 is now ready for broad testing and for production use. Our quality, reliability, and performance testing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/","RawContent":null},{"Title":"Announcing the .NET Framework 4.7.2","PublishedOn":"2018-04-30T20:56:19+00:00","CommentsCount":54,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of the .NET Framework 4.7.2. It’s included in the Windows 10 April 2018 Update. .NET Framework 4.7.2 is also available on Windows 7+ and Windows Server 2008...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/","RawContent":null},{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":75,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":49,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7640755266","Type":"PullRequestEvent","CreatedAt":"2018-05-08T00:32:51","Actor":"shauheen","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Opened pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7640750127","Type":"PullRequestEvent","CreatedAt":"2018-05-08T00:31:03","Actor":"shauheen","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Opened pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""},{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7660843516","Type":"IssuesEvent","CreatedAt":"2018-05-11T12:12:46","Actor":"Longvimol","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/69","RelatedDescription":"Opened issue \"Dotnet / announcement \" (#69) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\n"},{"Id":"7644965785","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:03:40","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to ASP.NET Core 2.0.8.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to 2.0.8 to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_"},{"Id":"7619224203","Type":"IssuesEvent","CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Opened issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65) at dotnet/announcements","RelatedBody":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n"},{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7674021414","Type":"PullRequestEvent","CreatedAt":"2018-05-15T01:23:11","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17995","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26515-01 (master)\" (#17995) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7673922216","Type":"PullRequestEvent","CreatedAt":"2018-05-15T00:45:56","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17970","RelatedDescription":"Merged pull request \"Better wildcards for COMPLUS_JIT variables\" (#17970) at dotnet/coreclr","RelatedBody":"With this change we can use a prefix and wildcard match\r\nThis allows us to match classes and methods that start with a prefix.\r\nExample:\r\n1. My*:Method would match a method named \"Method\" inside any class that starts with \"My\"\r\n2. \\*:get_* or simply get_* both will match any method that starts with \"get_\"\r\n\r\nThis allows us to match some Managed C++ methods that we could not otherwise match:\r\n\r\nBy using COMPLUS_JitDump=std._Find_if*\r\nwe can match this managed C++ method:\r\n\r\n <Module>:std._Find_if<class std::_Tree_unchecked_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<struct TIP_MAP_KEY const ,struct TIP_MAP_VALUE> > > >,struct TIP_FIND_ALG>(long,struct,struct,struct)\r\n"},{"Id":"7673898196","Type":"PullRequestEvent","CreatedAt":"2018-05-15T00:36:37","Actor":"acmyu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17994","RelatedDescription":"Opened pull request \"R2RDump - Runtime function RVAs and sizes\" (#17994) at dotnet/coreclr","RelatedBody":""},{"Id":"7673896109","Type":"IssuesEvent","CreatedAt":"2018-05-15T00:35:47","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/9019","RelatedDescription":"Closed issue \"RyuJIT: Eliminate unnecessary struct copies that materialize after in-lining a method\" (#9019) at dotnet/coreclr","RelatedBody":"This issue surfaced while analyzing knucleotide benchmark on Windows.\r\n\r\nOne of its hot methods `KFrequency() `calls into `Dictionary<Struct, ref>.TryGetValue(struct)` passing it a struct `key` as param.  `TryGetValue()` is a simple wrapper method that passes its struct param to `Dictionary.FindEntry(Struct, ref, bool)`.\r\n\r\n`Call Chain: KFrequency() --> TryGetValue() --> FindEntry()`\r\n\r\nBefore in-lining `TryGetValue()`, in-liner  makes a copy of actual param 'key' and uses the copy within in-linee method body. \r\n\r\n```\r\nv1 = copy of key\r\nuse v1 in the place of key while in-lining TryGetValue().\r\n```\r\n\r\nNow v1 in turn is getting passed to FindEntry() by value. Hence JIT will make another copy during argument morphing. The resulting IR would be\r\n\r\n```\r\nv1 = copy of  key\r\nv2 = copy of v1\r\nFindEntry(addr of v2)\r\n\r\n```\r\n\r\nIn this particular case there are no more uses of v1, other than passing it as an arg to FindEntry().  Though method got in-lined, additional struct copies created in that process remain behind.  In this particular case copy v1 can be eliminated.\r\n\r\nThe above case occurs twice in Knucleotide hot method KFrequency() i.e. two unnecessary struct copies in a hot loop.  Eliminating such unnecessary copies would benefit real world code as well.\r\n\r\n"},{"Id":"7673704371","Type":"PullRequestEvent","CreatedAt":"2018-05-14T23:29:51","Actor":"davidwrighton","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17993","RelatedDescription":"Opened pull request \"Arm64 debugging work\" (#17993) at dotnet/coreclr","RelatedBody":"- Implement missing logic on arm64 debugging stack\r\n - FuncEvalFrame::UpdateRegDisplay\r\n - ARM64 breakpoints leave Pc at instruction after breakpoint\r\n- Enable Interop debugging for arm64 on Windows\r\n  - Fill in missing implementation details\r\n  - Tweaks to allow 4 byte breakpoint instruction instead of 1 byte instruction\r\n  - Slight refactoring to make architecture specific logic be more usefully arranged\r\n- Enable Just My Code on arm64\r\n  - Remove old change which was put in place years ago before function calls were implemented that simply skipped JMC enter hooks in the jit"},{"Id":"7673675326","Type":"PullRequestEvent","CreatedAt":"2018-05-14T23:20:13","Actor":"davidwrighton","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17990","RelatedDescription":"Merged pull request \"Fix multicast delegate step from delegate\" (#17990) at dotnet/coreclr","RelatedBody":"- Replace incorrect FEATURE_STUBS_AS_IL define check with FEATURE_MULTICASTSTUB_AS_IL\r\n  - Allows step from one delegate to the next and step out from multicast delegate to function correctly.\r\n- Add null check as the active frame's methoddesc isn't always non-null\r\n  - In scenarios such as FuncEval, we also run through this code, and the md may be null.\r\n- Fix unwind from StubHelpers::MulticastDebuggerTraceHelper function on amd64"},{"Id":"7673638076","Type":"IssuesEvent","CreatedAt":"2018-05-14T23:08:15","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17992","RelatedDescription":"Opened issue \"[Linux/arm] baseservices/compilerservices/FixedAddressValueType failure\" (#17992) at dotnet/coreclr","RelatedBody":"*baseservices/compilerservices/FixedAddressValueType/FixedAddressValueType/FixedAddressValueType.sh* failed in the following test runs\r\n[Ubuntu arm Cross Checked r2r_jitminopts Build and Test](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm_cross_checked_ubuntu_r2r_jitminopts_tst_prtest/4/consoleText) and [Ubuntu arm Cross Checked r2r_jitstressregs4 Build and Test](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm_cross_checked_ubuntu_r2r_jitstressregs4_tst_prtest/4/consoleText) \r\n\r\n```\r\nFAILED   - baseservices/compilerservices/FixedAddressValueType/FixedAddressValueType/FixedAddressValueType.sh\r\n               BEGIN EXECUTION\r\n               in takeLock\r\n               /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_r2r_jitminopts_tst_prtest/bin/tests/Linux.arm.Checked/Tests/Core_Root/crossgen /Platform_Assemblies_Paths /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_r2r_jitminopts_tst_prtest/bin/tests/Linux.arm.Checked/Tests/Core_Root:/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_r2r_jitminopts_tst_prtest/bin/tests/Linux.arm.Checked/baseservices/compilerservices/FixedAddressValueType/FixedAddressValueType/IL:/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_r2r_jitminopts_tst_prtest/bin/tests/Linux.arm.Checked/baseservices/compilerservices/FixedAddressValueType/FixedAddressValueType /in FixedAddressValueType.org /out FixedAddressValueType.exe\r\n               Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n               Copyright (c) Microsoft Corporation.  All rights reserved.\r\n               \r\n               Native image FixedAddressValueType.exe generated successfully.\r\n               in ReleaseLock\r\n               in takeLock\r\n               /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_r2r_jitminopts_tst_prtest/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun FixedAddressValueType.exe\r\n               in ReleaseLock\r\n               Expected: 100\r\n               Actual: 255\r\n               END EXECUTION - FAILED\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7674507384","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:27:21","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9277","RelatedDescription":"Closed issue \"SourceCode build failures in 'prodcon/cli/release/2.1.3xx/' - '20180514.03'\" (#9277) at dotnet/cli","RelatedBody":"There were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685845\r\n  - **Agent:** DDVSOLINUXAGE004\r\n  - **Error log:** \u001b[39;49m\u001b[36m     1>\u001b[39;49m\u001b[39;49m\u001b[31m/opt/code/bin/2/linux-x64/dotnet/sdk/2.1.300/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatfor...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685848\r\n  - **Agent:** DDVSOMACAGE006\r\n  - **Error log:** 1>/Users/buildagent/agent/_work/0/s/bin/2/osx-x64/dotnet/sdk/2.1.300/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatform dependency. Eit...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685850\r\n  - **Agent:** DDVSOLINUXAGE010\r\n  - **Error log:** \u001b[39;49m\u001b[36m     1>\u001b[39;49m\u001b[39;49m\u001b[31m/opt/code/bin/2/linux-musl-x64/dotnet/sdk/2.1.300/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a prepl...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685851\r\n  - **Agent:** DDVSOWINAGE021\r\n  - **Error log:** 1>E:\\A\\_work\\0\\s\\bin\\2\\win-x86\\dotnet\\sdk\\2.1.300\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatform dependency. Either m...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685844\r\n  - **Agent:** DDVSOLINUXAGE002\r\n  - **Error log:** The previous error was converted to a warning because the task was called with ContinueOnError=true....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685852\r\n  - **Agent:** DDVSOWINAGE022\r\n  - **Error log:** 1>E:\\A\\_work\\0\\s\\bin\\2\\win-x64\\dotnet\\sdk\\2.1.300\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatform dependency. Either m...\r\n\r\n@mmitche, @livarcocc\r\n"},{"Id":"7674505835","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:26:42","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9271","RelatedDescription":"Closed issue \"Compiler build failures in 'prodcon/cli/release/2.1.3xx/' - '20180512.02'\" (#9271) at dotnet/cli","RelatedBody":"There were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1682246\r\n  - **Agent:** DDVSOLINUXAGE031\r\n  - **Error log:** dotnet_install: Error: Could not download .NET Core SDK version 2.2.0-preview1-007799...\r\n\r\n@mmitche, @livarcocc\r\n"},{"Id":"7674504312","Type":"PullRequestEvent","CreatedAt":"2018-05-15T04:26:04","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9251","RelatedDescription":"Merged pull request \"Merge release/2.1.2xx to release/2.1.3xx\" (#9251) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.2xx-to-release/2.1.3xx\ngit reset --hard upstream/release/2.1.3xx\ngit merge upstream/release/2.1.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.2xx-to-release/2.1.3xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7674503703","Type":"PullRequestEvent","CreatedAt":"2018-05-15T04:25:47","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9276","RelatedDescription":"Merged pull request \"Update clicommandlineparser, climigrate, coresetup, coresetup, coresetup, fsharp, roslyn, sdk, templating, templating, templating, websdk to rtm-62914-01, rtm-62914-02, rtm-26514-02, rtm-26514-02, rtm-26514-02, rtm-180513-0, beta6-62911-06, rtm-62914-01, beta3-20180513-1683966, beta3-20180513-1683966, beta3-20180513-1683966, rtm-20180513-1683962, respectively (release/2.1.3xx)\" (#9276) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7674363943","Type":"PullRequestEvent","CreatedAt":"2018-05-15T03:30:08","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9279","RelatedDescription":"Opened pull request \"WIP MSBuild 15.8.61\" (#9279) at dotnet/cli","RelatedBody":"This change removes our NuGet resolver in favor of an xml file manifest (in `Microsoft.Build.Runtime`) pointing to `Microsoft.Build.NuGetSdkResolver.dll` (next to `MSBuild.dll`) which is included with NuGet now. Removes the only direct compile-time dependency MSBuild had on NuGet."},{"Id":"7673569086","Type":"PullRequestEvent","CreatedAt":"2018-05-14T22:47:29","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9278","RelatedDescription":"Merged pull request \"Accept DropSuffix as a boolean\" (#9278) at dotnet/cli","RelatedBody":"Rather than simply treating DropSuffix as empty vs. nonempty, accept != true.  This allows it to work in prodcon, where false is normally passed."},{"Id":"7673051692","Type":"PullRequestEvent","CreatedAt":"2018-05-14T20:47:14","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9278","RelatedDescription":"Opened pull request \"Accept DropSuffix as a boolean\" (#9278) at dotnet/cli","RelatedBody":"Rather than simply treating DropSuffix as empty vs. nonempty, accept != true.  This allows it to work in prodcon, where false is normally passed."},{"Id":"7672862788","Type":"IssuesEvent","CreatedAt":"2018-05-14T20:10:08","Actor":"dotnet-mc-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9277","RelatedDescription":"Opened issue \"SourceCode build failures in 'prodcon/cli/release/2.1.3xx/' - '20180514.03'\" (#9277) at dotnet/cli","RelatedBody":"There were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685845\r\n  - **Agent:** DDVSOLINUXAGE004\r\n  - **Error log:** \u001b[39;49m\u001b[36m     1>\u001b[39;49m\u001b[39;49m\u001b[31m/opt/code/bin/2/linux-x64/dotnet/sdk/2.1.300/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatfor...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685848\r\n  - **Agent:** DDVSOMACAGE006\r\n  - **Error log:** 1>/Users/buildagent/agent/_work/0/s/bin/2/osx-x64/dotnet/sdk/2.1.300/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatform dependency. Eit...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685850\r\n  - **Agent:** DDVSOLINUXAGE010\r\n  - **Error log:** \u001b[39;49m\u001b[36m     1>\u001b[39;49m\u001b[39;49m\u001b[31m/opt/code/bin/2/linux-musl-x64/dotnet/sdk/2.1.300/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a prepl...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685851\r\n  - **Agent:** DDVSOWINAGE021\r\n  - **Error log:** 1>E:\\A\\_work\\0\\s\\bin\\2\\win-x86\\dotnet\\sdk\\2.1.300\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatform dependency. Either m...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685844\r\n  - **Agent:** DDVSOLINUXAGE002\r\n  - **Error log:** The previous error was converted to a warning because the task was called with ContinueOnError=true....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1685852\r\n  - **Agent:** DDVSOWINAGE022\r\n  - **Error log:** 1>E:\\A\\_work\\0\\s\\bin\\2\\win-x64\\dotnet\\sdk\\2.1.300\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(0,0): error NU5104: A stable platform of a package should not have a preplatform dependency. Either m...\r\n\r\n@mmitche, @livarcocc\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7673564353","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:46:07","Actor":"dev4fams","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/731","RelatedDescription":"Opened issue \".NET Standard 2.0 with .NET Framework 4.7.1 and System.ValueTuples\" (#731) at dotnet/standard","RelatedBody":"Keep getting CS8137 / CS8179 Errors regardless if System.ValueTuples is included or not.\r\n\r\nBase Project is 4.7.1 with an object model project in .Net Standard 2.0.  I do have NuGet System.ValueTuples 4.4.0 included in .Net Standard project.\r\n\r\nSolution builds just fine in Visual Studio and when built in VSTS VS2017 Host.  However, on our private host agent I get CS8137 and CS8179 errors.  I've compared the msbuild command and it appears the \"/reference\" all use .Net Standard 2.0 but on our private build server it uses older versions.\r\n\r\nThe VS2017 Host also appears to resolve conflicts and upgrades the system dependencies.\r\n\r\nPart of the builds process, I install .Net Core 2.1.4 SDK and use NuGet 4.7.0\r\n\r\nI can't figure out what component I'm missing since I would think the solution should build the same, regardless of host.\r\n\r\nThanks\r\n\r\n\r\n**Errors**\r\n\r\n2018-05-14T21:59:09.7446843Z ##[error]Shared\\EManager.cs(33,78): Error CS8137: Cannot define a class or member that utilizes tuples because the compiler required type 'System.Runtime.CompilerServices.TupleElementNamesAttribute' cannot be found. Are you missing a reference?\r\n\r\n2018-05-14T21:59:09.7446843Z ##[error]Shared\\EManager.cs(33,78): Error CS8179: Predefined type 'System.ValueTuple`2' is not defined or imported\r\n\r\n**Conflict Resolution**\r\nEncountered conflict between 'Reference:C:\\Users\\VssAdministrator\\.nuget\\packages\\netstandard.library\\2.0.0\\build\\netstandard2.0\\ref\\System.Collections.Concurrent.dll' and 'Reference:C:\\Users\\VssAdministrator\\.nuget\\packages\\system.collections.concurrent\\4.0.12\\ref\\netstandard1.3\\System.Collections.Concurrent.dll'.  Choosing 'Reference:C:\\Users\\VssAdministrator\\.nuget\\packages\\netstandard.library\\2.0.0\\build\\netstandard2.0\\ref\\System.Collections.Concurrent.dll' because AssemblyVersion '4.0.11.0' is greater than '4.0.10.0'.\r\n"},{"Id":"7673545823","Type":"PullRequestEvent","CreatedAt":"2018-05-14T22:40:43","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/730","RelatedDescription":"Opened pull request \"Install msbuild in pipebuild for master\" (#730) at dotnet/standard","RelatedBody":"CC @weshaggard "},{"Id":"7673541526","Type":"PullRequestEvent","CreatedAt":"2018-05-14T22:39:30","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/729","RelatedDescription":"Opened pull request \"Install msbuild in pipebuild for 2.0.0\" (#729) at dotnet/standard","RelatedBody":"This is needed to build publish.msbuild in the pipebuild\r\n\r\nCC @weshaggard "},{"Id":"7673456610","Type":"PullRequestEvent","CreatedAt":"2018-05-14T22:15:54","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/727","RelatedDescription":"Merged pull request \" Microbuild Sign Packages in Standard 2.0.0\" (#727) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/core-eng/issues/3393\r\n\r\n@weshaggard PTAL"},{"Id":"7673208445","Type":"PullRequestEvent","CreatedAt":"2018-05-14T21:18:47","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/728","RelatedDescription":"Merged pull request \"Port 'Enable publish to azure blob feed' to 2.0.0\" (#728) at dotnet/standard","RelatedBody":"Port of https://github.com/dotnet/standard/pull/548\r\n\r\n@chcosta @weshaggard PTAL"},{"Id":"7672605459","Type":"PullRequestEvent","CreatedAt":"2018-05-14T19:18:05","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/728","RelatedDescription":"Opened pull request \"Port 'Enable publish to azure blob feed' to 2.0.0\" (#728) at dotnet/standard","RelatedBody":"Port of https://github.com/dotnet/standard/pull/548\r\n\r\n@chcosta @weshaggard PTAL"},{"Id":"7672483809","Type":"PullRequestEvent","CreatedAt":"2018-05-14T18:53:19","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/727","RelatedDescription":"Opened pull request \" Microbuild Sign Packages in Standard 2.0.0\" (#727) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/core-eng/issues/3393\r\n\r\n@weshaggard PTAL"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7674612433","Type":"PullRequestEvent","CreatedAt":"2018-05-15T05:11:25","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29705","RelatedDescription":"Opened pull request \"Fix SignedCms handling of negative certificate serial numbers.\" (#29705) at dotnet/corefx","RelatedBody":"The AsnSerializer normalized ReadOnlyMemory versions of Integer values to\r\nunsigned interpretations on Serialize, but Deserialize read values as-is.  So\r\nsigning a SignedCms with a negative-valued certificate serial, or creating an\r\nEnvelopedCms with a negative-valued recipient serial changed the\r\nrepresentation of the serial number in the encoded file.\r\n\r\nThis change fixes the serializer to do a pass-through by adding the missing\r\n\"just use these bytes\" method to AsnWriter.  Then fixes the one place counting\r\non this behavior, and adds a number of tests to prevent regressions.\r\n\r\nFixes #29691."},{"Id":"7674477314","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:14:32","Actor":"Thaina","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29704","RelatedDescription":"Opened issue \"Linq.Except with Func parameter (aka Where not)\" (#29704) at dotnet/corefx","RelatedBody":"When we have write complex logic in Linq and want it to inverse selection easily\r\n\r\n```C#\r\nvar filter = array.Where((item) => {\r\n    switch(enumValue)\r\n    {\r\n        case 1: return !item.Condition1;\r\n        case 2: return !item.Condition2;\r\n        case 3: return !item.Condition3;\r\n    }\r\n\r\n    if(anotherCondition)\r\n        return !(item.Condition1 || item.Condition2 || item.Condition3);\r\n\r\n    // more complex logic for other conditions and etc\r\n});\r\n```\r\n\r\nSometimes most of the logic need to be false. So it more clean to have inverse `Where` clause\r\n\r\nI think `Except` would do. While currently it accept another enumerable as parameter. If it overload to accept func it would be useful\r\n\r\n```C#\r\nvar filter = array.Except((item) => {\r\n    switch(enumValue)\r\n    {\r\n        case 1: return item.Condition1;\r\n        case 2: return item.Condition2;\r\n        case 3: return item.Condition3;\r\n    }\r\n\r\n    if(anotherCondition)\r\n        return item.Condition1 || item.Condition2 || item.Condition3;\r\n\r\n    // more complex logic for other conditions and etc\r\n});\r\n```\r\n\r\nEven a short logic could be optimized\r\n\r\n```C#\r\nFunc<object,bool> filter;\r\n\r\nvar filtered = array.Where((item) => !filter(item));\r\n// became\r\nvar filtered = array.Except(filter);\r\n```"},{"Id":"7674441620","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:00:16","Actor":"abk-x","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29703","RelatedDescription":"Opened issue \"[HttpClient] SSL Idn decode failure\" (#29703) at dotnet/corefx","RelatedBody":"The following produces an exception:\r\n\r\n```\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace test\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            HttpClient client = new HttpClient();\r\n            var _ = client.GetAsync(\"https://r6---sn-uxanug5-hxay.gvt1.com/test/\").Result;\r\n\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nStacktrace:\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. (The SSL connection could not be established, see inner exception.) ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception. ---> System.Security.Authentication.AuthenticationException: Authentication failed, see inner exception. ---> System.ArgumentException: Decoded string is not a valid IDN name.\r\nParameter name: unicode\r\n   at System.Globalization.IdnMapping.GetAsciiCore(String unicodeString, Char* unicode, Int32 count)\r\n   at System.Globalization.IdnMapping.GetAscii(String unicode, Int32 index, Int32 count)\r\n   at Interop.OpenSsl.AllocateSslContext(SslProtocols protocols, SafeX509Handle certHandle, SafeEvpPKeyHandle certKeyHandle, EncryptionPolicy policy, SslAuthenticationOptions sslAuthenticationOptions)\r\n   at System.Net.Security.SafeDeleteSslContext..ctor(SafeFreeSslCredentials credential, SslAuthenticationOptions sslAuthenticationOptions)\r\n   at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsClient(SslClientAuthenticationOptions sslClientAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__47_0(SslClientAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsClientAsync(SslClientAuthenticationOptions sslClientAuthenticationOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at test.Program.Main(String[] args) in /tmp/test/Program.cs:line 18\r\n```\r\n## Additional Info\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-rc1-008673\r\n Commit:    f5e3ddbe73\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         debian-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.300-rc1-008673/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1\r\n  Commit:  eb9bc92051\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300-rc1-008673 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n"},{"Id":"7674014193","Type":"PullRequestEvent","CreatedAt":"2018-05-15T01:20:30","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29702","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26515-01, preview1-26514-05, respectively (master)\" (#29702) at dotnet/corefx","RelatedBody":""},{"Id":"7673839213","Type":"PullRequestEvent","CreatedAt":"2018-05-15T00:15:26","Actor":"maryamariyan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29643","RelatedDescription":null,"RelatedBody":"coreclr PR: https://github.com/dotnet/coreclr/pull/17956\r\n\r\nFixes coreclr issue: dotnet/coreclr#17751\r\n\r\nRelated to this [comment](https://github.com/dotnet/coreclr/pull/17800#issuecomment-385092192) made by @stephentoub:\r\n> That just leaves ConcurrentQueue, which is used by ThreadPool. I agree that one is reasonable to move down.\r\n\r\n\r\ncc: @stephentoub @safern @jkotas @danmosemsft "},{"Id":"7673839135","Type":"PullRequestEvent","CreatedAt":"2018-05-15T00:15:24","Actor":"maryamariyan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/29643","RelatedDescription":"Closed pull request \"Moving ConcurrentQueue to shared folder\" (#29643) at dotnet/corefx","RelatedBody":"coreclr PR: https://github.com/dotnet/coreclr/pull/17956\r\n\r\nFixes coreclr issue: dotnet/coreclr#17751\r\n\r\nRelated to this [comment](https://github.com/dotnet/coreclr/pull/17800#issuecomment-385092192) made by @stephentoub:\r\n> That just leaves ConcurrentQueue, which is used by ThreadPool. I agree that one is reasonable to move down.\r\n\r\n\r\ncc: @stephentoub @safern @jkotas @danmosemsft "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7674585510","Type":"PullRequestEvent","CreatedAt":"2018-05-15T05:00:37","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26853","RelatedDescription":"Opened pull request \"Add installer to roslyn build\" (#26853) at dotnet/roslyn","RelatedBody":"Ensures that we build a preview installer as part of the build.  Replaces https://github.com/dotnet/roslyn-tools/pull/250"},{"Id":"7674515816","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:30:52","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26791","RelatedDescription":"Closed issue \"Nullable Reference Types Preview installation failed.\" (#26791) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nThe [latest 05/07/18] version.\r\n**Steps to Reproduce**:\r\n\r\n1. Run install.bat.\r\n\r\n**Expected Behavior**:\r\nOutput installed successful.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nCould not find a part of the path 'C:\\Users\\yelpliu\\AppData\\Local\\Microsoft\\MSBuild\\15.0\\Imports\\Microsoft.Common.props\\ImportBefore\\Roslyn.Compilers.Extension.VisualStudio.15.0_9e4224ea.props'.\r\nSystem.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\yelpliu\\AppData\\Local\\Microsoft\\MSBuild\\15.0\\Imports\\Microsoft.Common.props\\ImportBefore\\Roslyn.Compilers.Extension.VisualStudio.15.0_9e4224ea.props'.\r\n    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n    at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n    at Microsoft.PowerShell.Commands.FileSystemContentReaderWriter.CreateStreams(String filePath, String streamName, FileMode fileMode, FileAccess fileAccess, FileShare fileShare, Encoding fileEncoding)\r\n    at Microsoft.PowerShell.Commands.FileSystemProvider.GetContentWriter(String path)\r\n    at Write-CompilerPropsFileXml, F:\\Roslyn_Nullable_References_Preview_05072018.2\\tools\\utils.ps1: line 229\r\n    at Copy-CompilerVsix, F:\\Roslyn_Nullable_References_Preview_05072018.2\\tools\\utils.ps1: line 187\r\n    at <ScriptBlock>, F:\\Roslyn_Nullable_References_Preview_05072018.2\\tools\\install.ps1: line 52\r\n```"},{"Id":"7674502638","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:25:18","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26852","RelatedDescription":"Opened issue \"[Regression] Syntax no longer shows up in Find All References \" (#26852) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 15.8.0 Preview 1.1 (Works)\r\nVersion 15.8.0 Preview 2.0 [27713.0.d15.8] (Does Not Work)\r\n\r\nSimilar to https://github.com/dotnet/roslyn/issues/25716, except this occurs for every symbol.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Right-click on Main and Find All References\r\n\r\n``` C#\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n        }\r\n\r\n        static void Main2()\r\n        {\r\n            Main(null);\r\n        }\r\n    }\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/40036574-90e71850-584b-11e8-9d70-ba014c22f18d.png)\r\n\r\n"},{"Id":"7674481123","Type":"PullRequestEvent","CreatedAt":"2018-05-15T04:16:10","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26851","RelatedDescription":"Opened pull request \"Groovy cleanup\" (#26851) at dotnet/roslyn","RelatedBody":"This is cleaning up some code needed to bootstrap groovy changes in an\r\nearlier PR:\r\n\r\nhttps://github.com/dotnet/roslyn/pull/26762\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7673295508","Type":"IssuesEvent","CreatedAt":"2018-05-14T21:37:35","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5808","RelatedDescription":"Opened issue \"Casting throws out-of-bounds exception in optimized WASM builds\" (#5808) at dotnet/corert","RelatedBody":"The WebAssembly casting test throws an out-of-bounds exception when compiled with LLVM optimizations enabled (```-O2``` and ```--llvm-lto=2```) and in WASM mode. Using the same bitcode, but building asm.js, with ```-O0``` or without ```--emrun``` does not fail. It's not clear when this failure was introduced.\r\n\r\nOutput from the test looks like:\r\n```\r\nInt to String Test: Ok if next line says 42.\r\n42\r\nexception thrown: RuntimeError: index out of bounds,wasm-function[135]@http://localhost:6931/HelloWasm.js:38620:1\r\nwasm-function[179]@http://localhost:6931/HelloWasm.js:63457:1\r\nwasm-function[174]@http://localhost:6931/HelloWasm.js:57569:1\r\nwasm-function[7516]@http://localhost:6931/HelloWasm.js:4629529:1\r\nwasm-function[7889]@http://localhost:6931/HelloWasm.js:4871540:1\r\nModule._main@http://localhost:6931/HelloWasm.js:1:126607\r\ncallMain@http://localhost:6931/HelloWasm.js:1:130981\r\ndoRun@http://localhost:6931/HelloWasm.js:1:131666\r\nrun/<@http://localhost:6931/HelloWasm.js:1:131834\r\n```"},{"Id":"7673261177","Type":"PullRequestEvent","CreatedAt":"2018-05-14T21:29:56","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5794","RelatedDescription":"Merged pull request \"improved llvm generated variable names for WASM\" (#5794) at dotnet/corert","RelatedBody":"@morganbr \r\nThis is to follow up on the work done in #5784, it tries to pipe through as much info as possible when generating the names for llvm variables. Its not perfect, but I think it dramatically improves the readability of most common cases."},{"Id":"7673252286","Type":"PullRequestEvent","CreatedAt":"2018-05-14T21:27:58","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5807","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5807) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7673045566","Type":"PullRequestEvent","CreatedAt":"2018-05-14T20:46:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5805","RelatedDescription":"Merged pull request \"Start building System.Private.TypeLoader.Native\" (#5805) at dotnet/corert","RelatedBody":"And remove workaround that was trying to avoid dependency on `ConstrainedCallSupport_GetStubs`."},{"Id":"7672184837","Type":"PullRequestEvent","CreatedAt":"2018-05-14T17:54:31","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5807","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5807) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7670376470","Type":"PullRequestEvent","CreatedAt":"2018-05-14T12:50:58","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5806","RelatedDescription":"Merged pull request \"Fix case sensitive gss for osx linker\" (#5806) at dotnet/corert","RelatedBody":"if filesystem is case sensitive gss must be GSS."},{"Id":"7670288605","Type":"IssuesEvent","CreatedAt":"2018-05-14T12:34:46","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5804","RelatedDescription":"Closed issue \"StackOverflowException using Configuration Builder with .net framework\" (#5804) at dotnet/corert","RelatedBody":"Hello,\r\n\r\nThis is what I get when a try to build a simple console application with a ConfigurationBuilder : \r\n```\r\n>dotnet publish -c release -r win-x64 /flp:v=diag;logfile=log.txt\r\nMicrosoft (R) Build Engine version 15.7.11.29948 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\...\\Whatever.csproj...\r\n  Restore completed in 748.25 ms for C:\\..\\Whatever.csproj.\r\n  Whatever -> C:\\...\\Whatever\\bin\\release\\net471\\win-x64\\Whatever.exe\r\n  Generating native code\r\n\r\n  Process is terminating due to StackOverflowException.\r\n```\r\nHere is the log : [log.txt](https://github.com/dotnet/corert/files/1997939/log.txt)\r\nHere is the minimal code to reproduce : \r\n```csharp\r\nusing Microsoft.Extensions.Configuration;\r\n\r\nnamespace Whatever\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var configuration = new ConfigurationBuilder()\r\n                .AddJsonFile(\"appsettings.json\")\r\n                .Build();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\nWith those two package in the csproj: \r\n```xml\r\n...\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.0.2\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n...\r\n```\r\nThis only happen targeting .net framework (net472). It seems to be ok with  netcoreapp2.0"},{"Id":"7667753538","Type":"PullRequestEvent","CreatedAt":"2018-05-14T00:15:37","Actor":"Tigger2014","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5806","RelatedDescription":"Opened pull request \"Fix case sensitive gss for osx linker\" (#5806) at dotnet/corert","RelatedBody":"if filesystem is case sensitive gss must be GSS."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7674017004","Type":"PullRequestEvent","CreatedAt":"2018-05-15T01:21:31","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2215","RelatedDescription":"Merged pull request \"Package SDK Tests as global tools\" (#2215) at dotnet/sdk","RelatedBody":"This creates global tools packages for the SDK tests.  This should enable:\r\n\r\n- Running tests against an installed version of the .NET Core SDK.  This should help protect against bugs such as #2128 (where we were trying to write to a location that is write-protected if the SDK is installed normally, but not in the setup we have to run tests in the repo).\r\n- Automating our perf tests to run against the dotnet/cli repo and/or ProdCon builds"},{"Id":"7673848603","Type":"IssuesEvent","CreatedAt":"2018-05-15T00:18:46","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2228","RelatedDescription":"Closed issue \"Unable to compile NET Core project with localized stream resources\" (#2228) at dotnet/sdk","RelatedBody":"* Platform: Windows\r\n* TargetFramework: netcore2.0\r\n* dotnet version: 2.1.300-preview2-008533\r\n\r\nI'm not able to get a vanilla NET Core app to with localized stream resources to compile. The app is targeting net core  2.0. I've created a repo with a simple project to repro the error: https://github.com/amrmahdi/dotnetcore-localized-resources\r\n\r\nThe error that I get is\r\n```\r\nE:\\repro\\Resources\\AudioFiles.en-US.resx(123,5): error MSB3103: Invalid Resx file. Could not load file or assembly 'System.Runtime.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencie s. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context. (Exception from HRESULT: 0x80131058) Line 123, position 5. [E:\\repro\\repro.csproj]\r\n  E:\\repro\\Resources\\AudioFiles.es-ES.resx(123,5): error MSB3103: Invalid Resx file. Could not load file or assembly 'file:///C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.0.0\\ref\\netcoreapp2.0\\System.Runtime.Ex tensions.dll' or one of its dependencies. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context. (Exception from HRESULT: 0x80131058) Line 123, position 5. [E:\\repro\\repro .csproj]\r\n```\r\n\r\nThe resource files are added using the Visual studio experience."},{"Id":"7673787224","Type":"IssuesEvent","CreatedAt":"2018-05-14T23:57:52","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2231","RelatedDescription":"Closed issue \"Dotnet core stream resources does not work when built using dotnet, but works using msbuild \" (#2231) at dotnet/sdk","RelatedBody":"A project with embedded stream resources works fine when built using msbuild. But if build using dotnet build, it produces the following exception \r\n\r\n```console\r\nUnhandled Exception: System.InvalidOperationException: Resource 'Silence' was not a Stream - call GetObject instead.\r\n   at System.Resources.ResourceManager.GetStream(String name, CultureInfo culture)\r\n   at dotnetcore.resources.Program.Main(String[] args) in E:\\dotnetcore.resources\\Program.cs:line 13\r\n```\r\n\r\n## Repro steps using the attached project:\r\n\r\n### MSBuild (works)\r\n1. msbuild\r\n2. dotnet run\r\n\r\n### dotnet (does not work)\r\n1. dotnet run\r\n\r\n### dotnet version\r\n2.1.300-preview2-00853\r\n\r\nI've noticed that when using MSBuild, **Al.exe** is used to generate the satellite assemblies, which maybe why it works when building using MSBuild.\r\n\r\n[dotnet.resources.zip](https://github.com/dotnet/sdk/files/1990751/dotnet.resources.zip)\r\n"},{"Id":"7673532324","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:36:51","Actor":"guylando","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2243","RelatedDescription":"Opened issue \"dotnet publish does not copy refs folder\" (#2243) at dotnet/sdk","RelatedBody":"I run dotnet publish -f net461 -c Release -r win7-x64 -o bin\\Release\\PublishOutput\r\nI have .NET Command Line Tools (2.1.300-rc1-008673)\r\nThe Release build has refs folder.\r\nThe PublishOutput doesnt get the refs folder copied in it.\r\nPublishing without refs folder to the server resulting in runtime error of missing assemblies such as:\r\nSystem.InvalidOperationException: Cannot find reference assembly 'Microsoft.Win32.Primitives.dll' file for package Microsoft.Win32.Primitives.Reference\r\n\r\nOther projects in same solution publish with refs folder using same command.\r\nFew days ago doing last publish DID publish with refs folder.\r\n\r\nAny idea what is prevents refs folder from being copied to PublishOutput during publish?"},{"Id":"7673456153","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:15:47","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2077","RelatedDescription":"Closed issue \"\"Build.cmd run\" succeed, but display many errors in the process.\" (#2077) at dotnet/sdk","RelatedBody":"## **Environment info:**\r\nVS: D15.7/27520.00 (15.7 Preview 2) \r\nNode.js: V8.10.0 LTS\r\nYarn --version:1.5.1\r\nVS .NET Core SDK - 2.1.200: 2.1.200-preview-007474 ( runtime - 2.0.6)\r\n## **Repro steps:**\r\nMaster branch of [SAFE Bookstore](https://github.com/SAFE-Stack/SAFE-BookStore)\r\n- Install the needed deps for SAFE-Bookstore \r\n- In the root directory, run `build.cmd`\r\n- Then run `build.cmd run`\r\nOutput:\r\n```\r\nPerformance:\r\n - Runtime: 876 milliseconds\r\nBuilding project with version: LocalBuild\r\nShortened DependencyGraph for Target Run:\r\n<== Run\r\n   <== InstallClient\r\n      <== InstallDotNetCore\r\n         <== Clean\r\n\r\nThe running order is:\r\n  - Clean\r\n  - InstallDotNetCore\r\n  - InstallClient\r\n  - Run\r\nRunning build with 1 worker\r\nStarting Target: Clean\r\nDeleting contents of C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Client\\bin\r\nDeleting contents of C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Server\\bin\r\nDeleting contents of C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\bin\r\nDeleting contents of C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\UITests\\bin\r\nDeleting contents of bin\r\nDeleting contents of temp\r\nDeleting contents of docs/output\r\nDeleting contents of ./deploy\r\nDeleting contents of C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Client\\public/bundle\r\nFinished Target: Clean\r\nStarting Target: InstallDotNetCore (==> Clean)\r\ndotnet --info\r\nC:\\Users\\vseqa1\\AppData\\Local\\dotnetcore\\dotnet.exe --info\r\ncmd 2.1.4 already installed in LocalApplicationData\r\nFinished Target: InstallDotNetCore\r\nStarting Target: InstallClient (==> InstallDotNetCore)\r\nNode version:\r\nC:\\Program Files\\nodejs\\node.exe --version\r\nv8.10.0\r\nYarn version:\r\nC:\\Program Files (x86)\\Yarn\\bin\\yarn.cmd --version\r\n1.5.1\r\nC:\\Program Files (x86)\\Yarn\\bin\\yarn.cmd install --frozen-lockfile\r\nyarn install v1.5.1\r\n[1/4] Resolving packages...\r\nsuccess Already up-to-date.\r\nDone in 1.20s.\r\nFinished Target: InstallClient\r\nStarting Target: Run (==> InstallClient)\r\nC:\\Users\\vseqa1\\AppData\\Local\\dotnetcore\\dotnet.exe restore\r\n  Restore completed in 47.51 ms for C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Client\\Client.fsproj.\r\n  Restore completed in 30.96 ms for C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Client\\Client.fsproj.\r\nC:\\Users\\vseqa1\\AppData\\Local\\dotnetcore\\dotnet.exe restore\r\n  Restore completed in 84.58 ms for C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj.\r\n  Restore completed in 9.21 ms for C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Server\\Server.fsproj.\r\n  Restore completed in 105.85 ms for C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Server\\Server.fsproj.\r\nC:\\Users\\vseqa1\\AppData\\Local\\dotnetcore\\dotnet.exe watch msbuild /t:TestAndRun /p:DotNetHost=C:\\Users\\vseqa1\\AppData\\Local\\dotnetcore\\dotnet.exe\r\nC:\\Users\\vseqa1\\AppData\\Local\\dotnetcore\\dotnet.exe fable webpack-dev-server --port free -- --mode development\r\nFable (1.3.9) daemon started on port 50895\r\nCWD: C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\src\\Client\r\ncmd /C node \"C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\node_modules\\webpack-dev-server\\bin\\webpack-dev-server.js\" --mode development\r\nwatch : Started\r\nMicrosoft (R) Build Engine version 15.6.82.30579 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBundling for development...\r\n(node:6024) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead\r\ni ｢wds｣: Project is running at http://localhost:8080/\r\ni ｢wds｣: webpack output is served from /public\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: The \"ReportAssetsLogMessages\" task failed unexpectedly. [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: System.IO.FileLoadException: Could not load file or assembly 'NuGet.ProjectModel, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621) [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: File name: 'NuGet.ProjectModel, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: at Microsoft.NET.Build.Tasks.ReportAssetsLogMessages.ExecuteCore() [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in E:\\A\\_work\\17\\s\\src\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs:line 631 [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__25.MoveNext() in E:\\A\\_work\\17\\s\\src\\Build\\BackEnd\\Components\\RequestBuilder\\TaskBuilder.cs:line 787 [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(327,5): error MSB4018: [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: The \"CheckForTargetInAssetsFile\" task failed unexpectedly. [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: System.IO.FileLoadException: Could not load file or assembly 'NuGet.Frameworks, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621) [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: File name: 'NuGet.Frameworks, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: at Microsoft.NET.Build.Tasks.CheckForTargetInAssetsFile.ExecuteCore() [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in E:\\A\\_work\\17\\s\\src\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs:line 631 [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__25.MoveNext() in E:\\A\\_work\\17\\s\\src\\Build\\BackEnd\\Components\\RequestBuilder\\TaskBuilder.cs:line 787 [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(167,5): error MSB4018: [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj] [C:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj]\r\n\r\n  The build failed. Please fix the build errors and run again.\r\nC:\\Users\\vseqa1\\Documents\\cli\\SAFE-BookStore-master\\test\\ServerTests\\ServerTests.fsproj(15,5): error MSB3073: The command \"C:\\Users\\vseqa1\\AppData\\Local\\dotnetcore\\dotnet.exe run\" exited with code 1.\r\nwatch : Exited with error code 1\r\nwatch : Waiting for a file to change before restarting dotnet...\r\nParsing ./Client.fsproj...\r\ni ｢wdm｣: wait until bundle finished: /public/bundle.js\r\nfable: Compiled Client.fsproj\r\nfable: Compiled App.fs\r\nfable: Compiled Pages.fs\r\nfable: Compiled Style.fs\r\nfable: Compiled pages\\Home.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish\\1.0.1\\fable\\cmd.fs\r\nfable: Compiled views\\Menu.fs\r\nfable: Compiled ..\\Server\\Shared\\Domain.fs\r\nfable: Compiled pages\\Login.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.browser\\1.0.0\\fable\\parser.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.debugger\\1.0.1\\fable\\debugger.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.browser\\1.0.0\\fable\\navigation.fs\r\nfable: Compiled pages\\WishList.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.hmr\\1.0.0\\fable\\hmr.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.react\\1.0.1\\fable\\react.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish\\1.0.1\\fable\\program.fs\r\nfable: Compiled ReleaseNotes.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.react\\2.1.0\\fable\\Fable.Helpers.React.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.react\\1.0.1\\fable\\common.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.debugger\\1.0.1\\fable\\Fable.Import.RemoteDev.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.elmish.browser\\1.0.0\\fable\\prelude.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.powerpack\\1.3.5\\fable\\src\\Promise.fs\r\nfable: Compiled ..\\..\\..\\..\\..\\.nuget\\packages\\fable.powerpack\\1.3.5\\fable\\src\\Fetch.fs\r\ni ｢wdm｣: Hash: 9ddc9ff8e8b190726eeb\r\nVersion: webpack 4.1.0\r\nTime: 40844ms\r\nBuilt at: 2018-3-21 04:09:12\r\n        Asset      Size  Chunks                    Chunk Names\r\n    bundle.js  2.39 MiB    main  [emitted]  [big]  main\r\nbundle.js.map  2.11 MiB    main  [emitted]         main\r\nEntrypoint main [big] = bundle.js bundle.js.map\r\n[../../node_modules/ansi-regex/index.js] C:/Users/vseqa1/Documents/cli/SAFE-BookStore-master/node_modules/ansi-regex/index.js 105 bytes {main} [built]\r\n[../../node_modules/loglevel/lib/loglevel.js] C:/Users/vseqa1/Documents/cli/SAFE-BookStore-master/node_modules/loglevel/lib/loglevel.js 7.68 KiB {main} [built]\r\n[../../node_modules/strip-ansi/index.js] C:/Users/vseqa1/Documents/cli/SAFE-BookStore-master/node_modules/strip-ansi/index.js 161 bytes {main} [built]\r\n[../../node_modules/url/url.js] C:/Users/vseqa1/Documents/cli/SAFE-BookStore-master/node_modules/url/url.js 22.8 KiB {main} [built]\r\n[../../node_modules/webpack-dev-server/client/index.js?http://localhost:8080] (webpack)-dev-server/client?http://localhost:8080 7.75 KiB {main} [built]\r\n[../../node_modules/webpack-dev-server/client/overlay.js] (webpack)-dev-server/client/overlay.js 3.58 KiB {main} [built]\r\n[../../node_modules/webpack-dev-server/client/socket.js] (webpack)-dev-server/client/socket.js 1.05 KiB {main} [built]\r\n[../../node_modules/webpack/hot sync ^\\.\\/log$] (webpack)/hot sync nonrecursive ^\\.\\/log$ 170 bytes {main} [built]\r\n[../../node_modules/webpack/hot/dev-server.js] (webpack)/hot/dev-server.js 1.66 KiB {main} [built]\r\n[../../node_modules/webpack/hot/emitter.js] (webpack)/hot/emitter.js 77 bytes {main} [built]\r\n[../../node_modules/webpack/hot/log-apply-result.js] (webpack)/hot/log-apply-result.js 1.31 KiB {main} [built]\r\n[../../node_modules/webpack/hot/log.js] (webpack)/hot/log.js 1.03 KiB {main} [built]\r\n[./App.fs] 11.7 KiB {main} [built]\r\n   [0] multi (webpack)-dev-server/client?http://localhost:8080 webpack/hot/dev-server ./Client.fsproj 52 bytes {main} [built]\r\n[./Client.fsproj] 25 bytes {main} [built]\r\n    + 604 hidden modules\r\ni ｢wdm｣: Compiled successfully.\r\n```\r\n"},{"Id":"7672785762","Type":"PullRequestEvent","CreatedAt":"2018-05-14T19:54:57","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2241","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to release/2.1.4xx\" (#2241) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-release/2.1.4xx\ngit reset --hard upstream/release/2.1.4xx\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-release/2.1.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"994438149693620225","CreatedAt":"2018-05-10T04:45:05+00:00","UserScreenname":"dotnet","Text":"Bye bye! See you next year for #MSBuild 👋 https://t.co/IwcXQwKarV","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":105,"FavoriteCount":10,"RawContent":null},{"Id":"993982168476012544","CreatedAt":"2018-05-08T22:33:10+00:00","UserScreenname":"dotnet","Text":".NET Core May 2018 Update https://t.co/OZkHLwpebZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":34,"RawContent":null},{"Id":"993982051735879680","CreatedAt":"2018-05-08T22:32:43+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Security and Quality Rollup https://t.co/jmOfJy1TEn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-05-15T05:30:23.9418424Z","RunDurationInMilliseconds":8242}