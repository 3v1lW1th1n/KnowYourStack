{"Data":{"Blog":{"FeedItems":[{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10514022511","Type":"IssuesEvent","CreatedAt":"2019-09-27T22:29:54","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7589","RelatedDescription":"Opened issue \"Stats.CollectAzureChinaCDNLogs fails if blob is already in archive\" (#7589) at NuGet/NuGetGallery","RelatedBody":"Stats.CollectAzureChinaCDNLogs fails if it tries to copy the blob into the archive folder, but the blob is already in the archive folder. This causes the job to eternally get stuck on that blob, because it always fails to process it.\n\nConsider the following:\n1. Job begins processing blob\n2. Job copies blob into folder monitored by ImportCdnStatistics\n3. Job copies blob into archive folder\n4. Job crashes (reason unknown...likely intermittent)\n5. Job restarts and begins processing blob again\n6. Job copies blob into folder monitored by ImportCdnStatistics\n7. Job fails because blob is already in archive folder\n8. Go back to step 5.\n\nThe job only processes 4 blobs at once, and processes the oldest blobs first. After this bug occurs, the capacity of the job is essentially reduced from 4 blobs per run to 3 blobs per run. Eventually, after the bug occurs 4 times, the job gets stuck on the same blobs eternally and stops processing new blobs."},{"Id":"10513995824","Type":"PullRequestEvent","CreatedAt":"2019-09-27T22:23:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7587","RelatedDescription":"Merged pull request \"[SDL] Validate HTTPS certificates in functional tests\" (#7587) at NuGet/NuGetGallery","RelatedBody":"Test: [NuGetBuild#62604](https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=62604) ([Build](https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=3088470), [Release](https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460628))\r\n\r\nPart of https://github.com/nuget/engineering/issues/2686"},{"Id":"10512332929","Type":"IssuesEvent","CreatedAt":"2019-09-27T17:38:18","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7588","RelatedDescription":"Opened issue \"[Gravatar Proxy] Add functional test\" (#7588) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10512195297","Type":"IssuesEvent","CreatedAt":"2019-09-27T17:16:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6622","RelatedDescription":"Reopened issue \"Preview of new nuget package. Incorrect display of multiline description and release note\" (#6622) at NuGet/NuGetGallery","RelatedBody":"Preview page displays a multiline text (description and release note of new package) in single line.\r\n\r\nThe page of published package displays a multiline text without problems.\r\n\r\nIt is creates some inconvenience.\r\n\r\nSee screenshots.\r\n![2018_11_04--nuget-01-preview_page](https://user-images.githubusercontent.com/4594554/47965093-92869100-e053-11e8-8756-72e9c2b750ce.PNG)\r\n![2018_11_04--nuget-02-package_page](https://user-images.githubusercontent.com/4594554/47965094-92869100-e053-11e8-8d56-674c19f5b190.PNG)\r\n"},{"Id":"10512187388","Type":"IssuesEvent","CreatedAt":"2019-09-27T17:15:29","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6622","RelatedDescription":"Closed issue \"Preview of new nuget package. Incorrect display of multiline description and release note\" (#6622) at NuGet/NuGetGallery","RelatedBody":"Preview page displays a multiline text (description and release note of new package) in single line.\r\n\r\nThe page of published package displays a multiline text without problems.\r\n\r\nIt is creates some inconvenience.\r\n\r\nSee screenshots.\r\n![2018_11_04--nuget-01-preview_page](https://user-images.githubusercontent.com/4594554/47965093-92869100-e053-11e8-8756-72e9c2b750ce.PNG)\r\n![2018_11_04--nuget-02-package_page](https://user-images.githubusercontent.com/4594554/47965094-92869100-e053-11e8-8d56-674c19f5b190.PNG)\r\n"},{"Id":"10512187216","Type":"PullRequestEvent","CreatedAt":"2019-09-27T17:15:27","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7584","RelatedDescription":"Merged pull request \"[ReleasePrep][2019.09.26]RI of dev into master\" (#7584) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10506489830","Type":"PullRequestEvent","CreatedAt":"2019-09-27T01:17:57","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7572","RelatedDescription":"Merged pull request \"[SDL] Proxy gravatar images\" (#7572) at NuGet/NuGetGallery","RelatedBody":"Adds a proxy for Gravatar profile images. This proxy can be enabled/disabled using the `NuGetGallery.GravatarProxy` feature flag.\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/2734\r\n\r\n# Performance test\r\n\r\nThe aim is to sustain ~700 requests per second, which is the highest expected traffic using data from the last 90 days (assuming clients do not cache at all). See this [OneNote](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Report.one%7C590EC95A-7669-4858-9F5A-63A20158B7DD%2FGravatar%20Proxy%7C62E68FC2-3F50-4D89-872A-875317B3B893%2F%29onenote:https://microsoft.sharepoint.com/teams/NuGet/Team/NugetServer/NugetServerTeamNote/Report.one#Gravatar%20Proxy&section-id={590EC95A-7669-4858-9F5A-63A20158B7DD}&page-id={62E68FC2-3F50-4D89-872A-875317B3B893}&end) for more information.\r\n\r\nTest build: [3075856](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3075856)\r\nTest release: [455812](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=455812)\r\n\r\nTest build 2: [3083414](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3083414)\r\nTest release 2: [458377](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=458377)\r\n\r\n### Proxy only Load Test\r\n\r\nThis test targets only the new `/profiles/username/avatar` route. This is a stress test but does not reflect real traffic on our PROD environment. This was run using 5 Gallery instances on [DEV PERF](https://www-perf.dev.nugettest.org/) environment\r\n\r\nResults | Request per second (RPS) | Request duration P95 | Request duration P99 | Request duration average\r\n-- | -- | -- | -- | --\r\n[Results](https://dev.azure.com/devdiv/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&name=nuget-search-service-forever.jmx&definitionId=3a721ab3-d426-43f2-9e42-c38cdb6c6b50&definitionType=jMeter&runId=2296223d-993f-4908-b7a2-991b33cf15c5) | 1.0K | 290.187ms | 821.545ms | 99.898ms\r\n\r\n### Simulated Traffic Load Test\r\n\r\nThis load test tries to simulate real PROD traffic. Note that the failed requests on the baseline are due to 404s from the avatar route. \r\n\r\nResults | Request per second (RPS) | Avatar Request duration P95 | Avatar Request duration P99 | Avatar Request duration average\r\n-- | -- | -- | -- | --\r\n[Results (Baseline)](https://dev.azure.com/devdiv/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?runId=8eff7cc3-b92b-43be-ac96-6f2941ede17f&name=nuget-search-service-forever.jmx&definitionId=3a721ab3-d426-43f2-9e42-c38cdb6c6b50&definitionType=jMeter&_a=summary) | 98.5 | .. | .. | ..\r\n[Results (Experiment)](https://dev.azure.com/devdiv/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&name=nuget-search-service-forever.jmx&definitionId=8cf26ba7-e731-4c65-a7e5-1f1a0da9d590&definitionType=jMeter&runId=23c1e5f6-9b4f-463e-8de5-14455b566624) | 98.7 | 933ms | 1658.8 | 354ms\r\n\r\n### PROD request data (in last 90 days):\r\n* **Peak gallery requests**: 1.8K RPS\r\n* **Peak display package requests**: 448 RPS\r\n* **Peak profile/organization requests**: 132 RPS\r\n* **Peak authenticated requests**: 118 RPS\r\n* **Greatest % of requests to display package in a day**: 29.268% (3M requests)\r\n\r\n# Scenario Test\r\n\r\n* DEV (flag off)\r\n    * [x] Route directly (should 404)\r\n    * [x] Logged in profile picture\r\n    * [x] Display package page\r\n    * [x] Profile page (account)\r\n    * [x] Profile page (organization)\r\n    * [x] Account settings\r\n    * [x] Transform to organization page\r\n    * [x] Manage organization\r\n    * [x] Add package owner\r\n    * [x] Accept package ownership\r\n    * [x] Send organization membership invitation\r\n    * [x] Accept organization membership invitation\r\n    * [x] Delete organization\r\n    * [X] Telemetry is properly obfuscated\r\n* DEV (flag on)\r\n    * [x] Route directly\r\n    * [x] Route directly with nonexistent account\r\n    * [x] Logged in profile picture\r\n    * [x] Display package page\r\n    * [x] Profile page (account)\r\n    * [x] Profile page (organization)\r\n    * [x] Account settings\r\n    * [x] Transform to organization page\r\n    * [x] Manage organization ⚠️ Fixed by https://github.com/NuGet/NuGetGallery/pull/7572/commits/3d221a308f82513b35845d266ea437a1f0be30f2\r\n    * [x] Add package owner\r\n    * [x] Accept package ownership\r\n    * [x] Send organization membership invitation\r\n    * [x] Accept organization membership invitation\r\n    * [x] Delete organization\r\n    * [x] Telemetry is properly obfuscated\r\n"},{"Id":"10506104767","Type":"PullRequestEvent","CreatedAt":"2019-09-26T23:34:41","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7587","RelatedDescription":"Opened pull request \"[SDL] Validate HTTPS certificates in functional tests\" (#7587) at NuGet/NuGetGallery","RelatedBody":"Build:\r\nTest:\r\n\r\nPart of https://github.com/nuget/engineering/issues/2686"},{"Id":"10505927582","Type":"PullRequestEvent","CreatedAt":"2019-09-26T22:50:29","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7577","RelatedDescription":"Merged pull request \"Feature flag to enable icons from flat container only\" (#7577) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/7065.\r\n\r\nFeature flag so we could flip it at required moment without aligning deployments."},{"Id":"10505732538","Type":"IssuesEvent","CreatedAt":"2019-09-26T22:07:52","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7400","RelatedDescription":"Closed issue \"[Azure Search] Split traffic for hijack by percentage\" (#7400) at NuGet/NuGetGallery","RelatedBody":"### Updates\r\n\r\n9/24/2019 @ 1:10 PM PST - Raised to 100%\r\n9/24/2019 @ 1:05 PM PST - Updated autoscale configs to scale up if CPU% > 30, down if CPU% < 15, to a maximum of 15 instances\r\n9/23/2019 @ 1:55 PM PST - Raised to 75%\r\n9/23/2019 @ 10:21 PM PST - Raised to 40%\r\n9/20/2019 @ 11:40 PM - Updated autoscale configs to scale up if CPU% > 15, and down if CPU% < 5\r\n9/19/2019 @ 1:10 PM PST - Raised to 20%\r\n9/18/2019 @ 8:45 AM PST - Raised to 5%\r\n9/18/2019 @ 3:48 PM PST - Enabled OData hijack feature flag\r\n9/18/2019 @ 2:00 PM PST - Enabled OData hijack to Azure Search at 1%\r\n\r\n### Application Insights query \r\n\r\nUse [this query](https://ms.portal.azure.com#@33e01921-4d64-4f8c-a055-5bdaffd5e33d/blade/Microsoft_Azure_Monitoring_Logs/LogsBlade/resourceId/%2Fsubscriptions%2F685c4662-53d8-40f9-ac51-926097ede041%2FresourceGroups%2Fnuget-prod-0-v2gallery%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2Fnuget-prod-v2gallery/source/LogsBlade.AnalyticsShareLinkToQuery/q/H4sIAAAAAAAAA6WUT0sDMRDF7wW%252Fw7Ag7EJh1ZtoPYoHQQv1JCJpdmpjd5M4maCVfngnXVu7%252BIctHvaSmffLm5dka2QIqEjPr8yz0gsYQYUebYVWGwwHgxW8zpEQeOkRRiPIriaT2wy%252BClY1baFsOeVLRFq2HfjGggJWC3wcC9orCvgYqc4rxaq4z8apF24VCYSRQvZwn6Xu7GFHvgb21790xCZcR40Wx%252FtBOrIOMETvHTFWl6n%252F1dGiP%252FW7toP25J5R80Si7s%252FcEXVg2kXLN7beY%252BitpAW155t%252Fnt75BZwcgfo6Tlk4PirA0beMpZJlqfBjVttqd9zt8q7xdvXsYFCW6YM7q13ToGVgBzOzGRPc7PMWA6Fcl8BhCNPlZk3i8M5YTojOZV%252BJw6ZRZN6xBeVFkk2Nzdk0glGNH8LxvBjK0PQkb2UlG8jjIJgmjCKGP7ydnh5CFUmxcbanxTUOfjXpkSRoNjWGfEMeyj69bad66%252Fsv44fJ7UzJNtW%252Fc2VXuTitMV8HbGZ5iFpjCOmfwRSxKKDcN%252FztFIMPhpWnzcAEAAA%253D/timespan/P1D) to verify the hijack traffic split:\r\n\r\n```\r\nlet searchHijack = dependencies\r\n| where type == \"HTTP\" \r\n| where name == \"/search/query\" \r\n| extend take_Q = parse_url(data)[\"Query Parameters\"][\"take\"]\r\n| extend query_Q = parse_url(data)[\"Query Parameters\"][\"q\"]\r\n| extend isLuceneQuery_Q = parse_url(data)[\"Query Parameters\"][\"isLuceneQuery\"]\r\n| extend supportedFramework_Q = parse_url(data)[\"Query Parameters\"][\"supportedFramework\"]\r\n| extend projectType_Q = parse_url(data)[\"Query Parameters\"][\"projectType\"]\r\n| extend countOnly_Q = parse_url(data)[\"Query Parameters\"][\"countOnly\"]\r\n| where (take_Q <> 20 and take_Q <> 10) or isLuceneQuery_Q <> \"\" or supportedFramework_Q <> \"\" or projectType_Q <> \"\" or countOnly_Q  <> \"\";\r\n//\r\n// Uncomment to find count of search requests, by search endpoint\r\n//searchHijack | summarize count() by bin(timestamp, 1h), target | render barchart \r\n//\r\n// Uncomment to find 99% duration of search requests, by search endpoint \r\n// searchHijack | summarize percentiles(duration, 99) by bin(timestamp, 1h), target | render timechart  \r\n//\r\n// Uncomment to find % of failed search requests, by search endpoint\r\n//searchHijack | summarize todouble(countif(success == true)) / count() by bin(timestamp, 1h), target | render timechart\r\n```\r\n\r\n### Background \r\nWe need a knob to increase/decrease hijack percentage\r\n\r\n* [x] Update AB test config\r\n  * [x] DEV\r\n  * [x] INT\r\n  * [x] PROD\r\n* [x] Add feature flag\r\n  * [x] DEV\r\n  * [x] INT\r\n  * [x] PROD\r\n* [x] Enable flag and run functional test\r\n  * [X] DEV: Skipped\r\n  * [x] INT: https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=60856\r\n* Increase preview hijack to 100% and run functional test\r\n  * [X] DEV\r\n  * [x] INT: https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=60871\r\n* Disable flag and reduce preview hijack to 100%\r\n  * [x] INT\r\n* [x] AI query to verify the % of search requests that are in the test\r\n\r\n# Reference\r\n\r\nTo bucket, use client IP address and hash with SHA 256. Do chi-square test to ensure distribution. Test this on DEV Gallery, this needs to work on Gallery's Azure Web Role behind APIM.\r\n\r\n* `X-Forwarded-For` header - this should have client IP address\r\n    * See: https://stackoverflow.com/questions/38288378/how-do-i-extract-an-ip-address-in-the-azure-api-management-policy\r\n    * Enabling the header? https://docs.microsoft.com/en-us/azure/api-management/policies/set-header-to-enable-backend-to-construct-urls\r\n    * Some more info: https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-2.2#forwarded-headers\r\n* Get IP address like [AuditActor](https://github.com/NuGet/NuGetGallery/blob/673503eaf6261f64f40ef2ec38bfc364b61137b4/src/NuGetGallery.Core/Auditing/AuditActor.cs#L66)\r\n  * One note: `context.Request.UserHostAddress` is same as `context.Request.ServerVariables[\"REMOTE_ADDR\"];`, no need to check both\r\n* Hijack forking\r\n    * https://github.com/NuGet/NuGetGallery/pull/6947/files\r\n    * https://github.com/NuGet/NuGetGallery/pull/7145/files\r\n* Binning\r\n    * https://crypto.stackexchange.com/questions/17990/sha256-output-to-0-99-number-range\r\n    * mod100(SHA256(x))\r\n* IP distribution: https://jarvis-west.dc.ad.msft.net/73167EF0"},{"Id":"10505691958","Type":"IssuesEvent","CreatedAt":"2019-09-26T22:00:20","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7586","RelatedDescription":"Opened issue \"[Azure Search] Update gallery configs to make azure search the baseline\" (#7586) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10514160664","Type":"IssuesEvent","CreatedAt":"2019-09-27T23:06:56","Actor":"bergbria","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8639","RelatedDescription":"Opened issue \"Lock file validation fails for projects with <RuntimeIdentifiers> set in SDK 3.0.100\" (#8639) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: dotnet.exe\r\n\r\ndotnet.exe --version: 3.0.100\r\n\r\nWorked before?: Yes, with sdk version 2.2.402\r\n\r\n## Automated Repro\r\n1. Download [netSdk3_rid_lockFile_repro.zip](https://github.com/NuGet/Home/files/3664781/netSdk3_rid_lockFile_repro.zip)\r\n2. Extract\r\n3. Run repro.bat\r\n\r\n## Manual repro steps\r\n\r\n1. Create a .csproj resembling this:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <RuntimeIdentifiers>win-x64;osx-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n2. `dotnet restore --use-lock-file`\r\n    - This will succeed and write a lock file\r\n3. `dotnet restore --use-lock-file --locked-mode`\r\n    - This will fail with `error NU1004: The packages lock file is inconsistent with the project dependencies` despite the fact  that the file was just generated and nothing has changed.\r\n\r\nTagging @nkolev92 and @rrelyea as FYI."},{"Id":"10513232480","Type":"IssuesEvent","CreatedAt":"2019-09-27T20:00:58","Actor":"daniel-white","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8638","RelatedDescription":"Opened issue \"Argument exception thrown with .net core 3.0 sdk\" (#8638) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnetcli\r\n\r\nNuGet version (x.x.x.xxx): whatever .net is using.\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100\r\n\r\nVS version (if appropriate): n/a\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): macOS and linux container\r\n\r\nWorked before? If so, with which NuGet version: the 2.1.802 sdk and preview9\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Trying to restore fails with an argument exception\r\n\r\n```\r\n     1>Done executing task \"MsBuild\".\r\n     1>Done building target \"_GenerateRestoreGraph\" in project \"CoreLibraries.sln\".\r\n     1>Target \"Restore\" in file \"/usr/local/share/dotnet/sdk/3.0.100/NuGet.targets\" from project \"/Users/daniel.white/Builds/platform-services/CoreLibraries/CoreLibraries.sln\" (entry point):\r\n       Task \"RemoveDuplicates\"\r\n       Done executing task \"RemoveDuplicates\".\r\n       Using \"RestoreTask\" task from assembly \"/usr/local/share/dotnet/sdk/3.0.100/NuGet.Build.Tasks.dll\".\r\n       Task \"RestoreTask\"\r\n         (in) RestoreGraphItems Count '535'\r\n         (in) RestoreDisableParallel 'False'\r\n         (in) RestoreNoCache 'False'\r\n         (in) RestoreIgnoreFailedSources 'False'\r\n         (in) RestoreRecursive 'True'\r\n         (in) RestoreForce 'False'\r\n         (in) HideWarningsAndErrors 'False'\r\n         (in) RestoreForceEvaluate 'False'\r\n     1>/usr/local/share/dotnet/sdk/3.0.100/NuGet.targets(123,5): error : Value cannot be null. (Parameter 'folderName') [/Users/daniel.white/Builds/platform-services/CoreLibraries/CoreLibraries.sln]\r\n         System.ArgumentNullException: Value cannot be null. (Parameter 'folderName')\r\n            at NuGet.Frameworks.NuGetFramework.Parse(String folderName, IFrameworkNameProvider mappings)\r\n            at NuGet.Frameworks.NuGetFramework.Parse(String folderName)\r\n            at NuGet.Commands.MSBuildRestoreUtility.AddTargetFrameworkSpecificProperties(PackageSpec spec, IEnumerable`1 items)\r\n            at NuGet.Commands.MSBuildRestoreUtility.GetPackageSpec(IEnumerable`1 items)\r\n            at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n            at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n            at NuGet.Commands.MSBuildRestoreUtility.GetDependencySpec(IEnumerable`1 items)\r\n            at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\n       Done executing task \"RestoreTask\" -- FAILED.\r\n     1>Done building target \"Restore\" in project \"CoreLibraries.sln\" -- FAILED.\r\n     1>Done Building Project \"/Users/daniel.white/Builds/platform-services/CoreLibraries/CoreLibraries.sln\" (Restore target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"/Users/daniel.white/Builds/platform-services/CoreLibraries/CoreLibraries.sln\" (Restore target) (1) ->\r\n       (Restore target) -> \r\n         /usr/local/share/dotnet/sdk/3.0.100/NuGet.targets(123,5): error : Value cannot be null. (Parameter 'folderName') [/Users/daniel.white/Builds/platform-services/CoreLibraries/CoreLibraries.sln]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nI'm not sure where I'm going wrong with this. Any hints?"},{"Id":"10512542534","Type":"IssuesEvent","CreatedAt":"2019-09-27T18:10:52","Actor":"dagood","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8637","RelatedDescription":"Opened issue \"PackTask doesn't include files with nuspec extension in nupkg\" (#8637) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used:\r\n\r\n```\r\n#> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n[...]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nNuGet version: `5.3.0-rtm.6251+b75150f2f4127a77a166c9552845e86fb24a3282.b75150f2f4127a77a166c9552845e86fb24a3282`\r\n\r\nWorked before: Unknown.\r\n\r\n## Detailed repro steps\r\n\r\n1. Extract minimal repro project based on `dotnet new classlib`: \r\n[PackNuspecContent.zip](https://github.com/NuGet/Home/files/3664004/PackNuspecContent.zip).\r\n\r\n1. `dotnet pack`\r\n\r\n1. Open `obj\\Debug\\PackNuspecContent.1.0.0.nuspec`, see the File items including a `.nuspec`:\r\n\r\n    ```xml\r\n    <file src=\"D:\\temp\\PackNuspecContent\\targets\\foo.nuspec\" target=\"targets\\foo.nuspec\" />\r\n    <file src=\"D:\\temp\\PackNuspecContent\\targets\\foo.nuspec.txt\" target=\"targets\\foo.nuspec.txt\" />\r\n    <file src=\"D:\\temp\\PackNuspecContent\\targets\\foo.txt\" target=\"targets\\foo.txt\" />\r\n    ```\r\n\r\n1. Open `bin\\Debug\\PackNuspecContent.1.0.0.nupkg`, open `targets/`, see that the `.nuspec` isn't included:\r\n\r\n    ```\r\n    ├───targets\r\n    │       foo.nuspec.txt\r\n    │       foo.txt\r\n    ```\r\n\r\n## Other\r\n\r\nMy goal was to include a `nuspec` file in an MSBuild SDK tool package that the consuming project will use with `nuget.exe pack`. I don't think I'm blocked by this issue, but it's pretty surprising and took a bit to spot what was happening. 😄"},{"Id":"10511928768","Type":"IssuesEvent","CreatedAt":"2019-09-27T16:35:03","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8636","RelatedDescription":"Closed issue \"msbuild restore for packages.config\" (#8636) at NuGet/Home","RelatedBody":"msbuild is currently unable (or rather, unwilling) to restore projects using pckages.config.\r\n\r\nSpec: [Backporting PC to msbuild restore](https://github.com/NuGet/Home/wiki/Backporting-PC-to-msbuild--restore)\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): msbuild.exe\r\n\r\nNuGet version (x.x.x.xxx): any\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Set up a packages.config project\r\n\r\n2. add a dependency through VS\r\n\r\n3. Try to restore the project on the command line using `msbuild /restore`\r\n"},{"Id":"10511746588","Type":"IssuesEvent","CreatedAt":"2019-09-27T16:07:48","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8636","RelatedDescription":"Opened issue \"msbuild restore for packages.config\" (#8636) at NuGet/Home","RelatedBody":"msbuild is currently unable (or rather, unwilling) to restore projects using pckages.config.\r\n\r\nSpec: [Backporting PC to msbuild restore](https://github.com/NuGet/Home/wiki/Backporting-PC-to-msbuild--restore)\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): msbuild.exe\r\n\r\nNuGet version (x.x.x.xxx): any\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Set up a packages.config project\r\n\r\n2. add a dependency through VS\r\n\r\n3. Try to restore the project on the command line using `msbuild /restore`\r\n"},{"Id":"10508487455","Type":"IssuesEvent","CreatedAt":"2019-09-27T08:46:16","Actor":"miaoyukai","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8635","RelatedDescription":"Opened issue \"The NuGet package didn't resolve \" (#8635) at NuGet/Home","RelatedBody":"![image](https://user-images.githubusercontent.com/38027640/65755707-36829a80-e146-11e9-9b40-4c7a561c0a16.png)\r\nI created a grpc project on vs that was not available."},{"Id":"10503483485","Type":"IssuesEvent","CreatedAt":"2019-09-26T16:39:21","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8619","RelatedDescription":"Closed issue \"Insertion of NuGet 5.4.0-preview.2.6259\" (#8619) at NuGet/Home","RelatedBody":"VS Insertion\r\n\r\n* [x] PR: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/203783"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-09-29T05:30:47.9917341Z","RunDurationInMilliseconds":2604}