{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null},{"Title":"Welcoming SymbolSource to the .NET Foundation","PublishedOn":"2018-05-01T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to welcome SymbolSource.org to the .NET Foundation! SymbolSource has been providing a valuable service to the .NET Community for years with the ability to host Symbols for public NuGet...","Href":"https://devblogs.microsoft.com/nuget/welcoming-symbolsource-to-dot-net-foundation/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"9909377117","Type":"PullRequestEvent","CreatedAt":"2019-06-27T20:47:16","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7268","RelatedDescription":"Merged pull request \"[DB Migration] Fix the package dependency issue and some updates\" (#7268) at NuGet/NuGetGallery","RelatedBody":"Mainly contain the following updates:\r\n1. Fix the package dependency issue due to the conflict among NuGet.Jobs/Server Common/Gallery and recent package version upgrade.  \r\n2. Depend on the new job to return ExitCode to make it clean;\r\n3. Improve test coverage and telemetry messages.\r\n\r\nNo code logic is changed. "},{"Id":"9899767243","Type":"IssuesEvent","CreatedAt":"2019-06-26T17:25:30","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7083","RelatedDescription":"Closed issue \"Remove setting \"RejectPackagesWithLicense\" from web.config\" (#7083) at NuGet/NuGetGallery","RelatedBody":"We don't need this anymore."},{"Id":"9899405530","Type":"PullRequestEvent","CreatedAt":"2019-06-26T16:31:50","Actor":"cristinamanum","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7299","RelatedDescription":"Merged pull request \"Clean orphan package registration on user delete\" (#7299) at NuGet/NuGetGallery","RelatedBody":"Remove orphan registrations on user delete. \r\n\r\nAddresses [Deleting a user does not remove their ownership from package registrations without packages](https://github.com/NuGet/NuGetGallery/issues/7197)"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"9911070018","Type":"IssuesEvent","CreatedAt":"2019-06-28T04:07:25","Actor":"cbries","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8273","RelatedDescription":"Opened issue \"\"%23\" is transformed into \"#\" for physical path, nuget or msbuild?\" (#8273) at NuGet/Home","RelatedBody":"In case I got a VisualStudio-solution with several projects (by email or from somewhere else) and within the solution one or more projects are in physical directories which include \"%23\" in there path, e.g. \r\n> C:\\users\\someuser\\source\\repos\\_1.12\\%231986\\A-Serie-XYZ\r\n\r\n\r\nDuring Solution-load the following error raise up in VisualStudio's error pane:\r\n\r\n![image](https://user-images.githubusercontent.com/5418062/60316448-c871e000-996a-11e9-8070-5346a0a94354.png)\r\n\r\nBecause \"%23\" is transformed to \"#\" which is physically not available.\r\n"},{"Id":"9910744791","Type":"IssuesEvent","CreatedAt":"2019-06-28T02:29:45","Actor":"aolszowka","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8272","RelatedDescription":"Opened issue \"msbuild /t:Restore and Visual Studio produce different assets files\" (#8272) at NuGet/Home","RelatedBody":"### Environment(s)\r\n* Visual Studio 2019 16.1.4\r\n* Visual Studio 2017 15.9.13\r\n\r\n### Issue\r\nSee attached project for a small repo of this.\r\n\r\nIt appears that when you perform an msbuild /restore the project.assets.json that gets generated uses the AssemblyName of the referenced class Library. However if you open up Visual Studio it will perform a restore setting this to the name of the referenced PROJECT file. This change forces a Visual Studio rebuild. It is especially painful depending on the size of the solution.\r\n\r\n### Repo Project\r\n[NuGetProjectAssetsJsonDiffs.zip](https://github.com/NuGet/Home/files/3337320/NuGetProjectAssetsJsonDiffs.zip)\r\n\r\n1. Starting with a clean project perform a msbuild /restore *.sln\r\n2. Save off the project.asset.json\r\n3. Open the project in Visual Studio, Notice that it will feel the need to restore the project packages again even though in theory it should have already been restored.\r\n4. Compare the \"new\" project.asset.json to see that it is using the name of the project file as opposed to the assembly name.\r\n\r\n![image](https://user-images.githubusercontent.com/2592881/60312861-3346fb00-991a-11e9-8a33-71795c66cfb7.png)"},{"Id":"9909517216","Type":"IssuesEvent","CreatedAt":"2019-06-27T21:10:07","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8271","RelatedDescription":"Opened issue \"Plugins:  improve diagnosability of plugin launch failure\" (#8271) at NuGet/Home","RelatedBody":"If a plugin fails on launch --- say, because of an unhandled exception --- or if a plugin times out during handshake, the error message (\"A task was canceled.\") [here](https://github.com/NuGet/NuGet.Client/blob/7fee43eeb1b5dbe0de3cb93ad0cb80b3a321e4a9/src/NuGet.Core/NuGet.Protocol/Plugins/PluginFactory.cs#L242) is unhelpful."},{"Id":"9908991644","Type":"IssuesEvent","CreatedAt":"2019-06-27T19:45:17","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8270","RelatedDescription":"Opened issue \"Determine NuGet requirements when working with VS in cloud environments\" (#8270) at NuGet/Home","RelatedBody":"Per this blog post from May 2019, https://aka.ms/vsfutures --> https://devblogs.microsoft.com/visualstudio/intelligent-productivity-and-collaboration-from-anywhere/\n"},{"Id":"9908635500","Type":"IssuesEvent","CreatedAt":"2019-06-27T18:47:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8262","RelatedDescription":"Closed issue \"Locked-mode restore doesn't detect removed packages\" (#8262) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\ndotnet.exe --version (if appropriate): 2.2.204 and 3.0.100-preview5-011568\r\n\r\n### Automated repro\r\nI've created a self-contained repro. Download [repro_extraStuffInLockFile.zip](https://github.com/NuGet/Home/files/3323115/repro_extraStuffInLockFile.zip) and run repro.bat.\r\n\r\n### General details\r\n\r\n1. Create a .csproj with a PackageReference\r\n2. `dotnet restore --use-lock-file`\r\n3. Remove the PackageReference\r\n4. `dotnet restore --use-lock-file --locked-mode`\r\n\r\n### Expected\r\nThe final restore should fail since packages.lock.json references packages that are no longer used.\r\n\r\n### Actual\r\nThe restore completes without error"},{"Id":"9908533956","Type":"IssuesEvent","CreatedAt":"2019-06-27T18:31:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8269","RelatedDescription":"Opened issue \"Issue with nuget.exe discovery of built in plugins\" (#8269) at NuGet/Home","RelatedBody":"There's an issue in the discovery of plugins with nuget.exe. \r\n\r\nThe problem is that the path provided is directory, but the utility assumes it's the path to msbuild.exe"},{"Id":"9908012803","Type":"IssuesEvent","CreatedAt":"2019-06-27T17:11:34","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8268","RelatedDescription":"Opened issue \"Insert NuGet into VS\" (#8268) at NuGet/Home","RelatedBody":""},{"Id":"9906981289","Type":"IssuesEvent","CreatedAt":"2019-06-27T14:54:36","Actor":"MisinformedDNA","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8267","RelatedDescription":"Closed issue \"NU1603 is incorrectly raised with inconsistent versioning style\" (#8267) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n \r\nNuGet version (x.x.x.xxx): 5.1.0\r\n\r\nVS version (if appropriate): VS 2019 v16.1\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 1803 (17134.829)\r\n\r\nWorked before? No?\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a .NET Standard library\r\n\r\n2. Add a NuGet reference to `FluentNHibernate`\r\n\r\nEXPECTED: No warnings\r\n\r\nACTUAL: Two NU1603 warnings\r\n\r\n> Warning\tNU1603\tNHibernate 4.0.0.4000 depends on Iesi.Collections (>= 4.0.0 && < 5.0.0) but Iesi.Collections 4.0.0 was not found. An approximate best match of Iesi.Collections 4.0.0.4000 was resolved.\tNU1603\tC:\\Users\\XXXX\\Source\\Repos\\ClassLibrary1\\NU1603\\NU1603.csproj\t1\t\r\n> Warning\tNU1603\tFluentNHibernate 2.0.1 depends on NHibernate (>= 4.0.0) but NHibernate 4.0.0 was not found. An approximate best match of NHibernate 4.0.0.4000 was resolved.\tNU1603\tC:\\Users\\XXXX\\Source\\Repos\\ClassLibrary1\\NU1603\\NU1603.csproj\t1\t\r\n\r\nIn both cases, it complains that version `4.0.0` was not found and resorted to `4.0.0.4000`. But the requirement is `>= 4.0.0` and `4.0.0.4000` sure seems to match that requirement.\r\n\r\n### Sample Project\r\n\r\n[NU1603issue.zip](https://github.com/NuGet/Home/files/3335287/NU1603issue.zip)\r\n\r\n"},{"Id":"9906922721","Type":"IssuesEvent","CreatedAt":"2019-06-27T14:47:59","Actor":"MisinformedDNA","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8267","RelatedDescription":"Opened issue \"NU1603 is incorrectly raised with inconsistent versioning style\" (#8267) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n \r\nNuGet version (x.x.x.xxx): 5.1.0\r\n\r\nVS version (if appropriate): VS 2019 v16.1\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 1803 (17134.829)\r\n\r\nWorked before? No?\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a .NET Standard library\r\n\r\n2. Add a NuGet reference to `FluentNHibernate`\r\n\r\nEXPECTED: No warnings\r\n\r\nACTUAL: Two NU1603 warnings\r\n\r\n> Warning\tNU1603\tNHibernate 4.0.0.4000 depends on Iesi.Collections (>= 4.0.0 && < 5.0.0) but Iesi.Collections 4.0.0 was not found. An approximate best match of Iesi.Collections 4.0.0.4000 was resolved.\tNU1603\tC:\\Users\\XXXX\\Source\\Repos\\ClassLibrary1\\NU1603\\NU1603.csproj\t1\t\r\n> Warning\tNU1603\tFluentNHibernate 2.0.1 depends on NHibernate (>= 4.0.0) but NHibernate 4.0.0 was not found. An approximate best match of NHibernate 4.0.0.4000 was resolved.\tNU1603\tC:\\Users\\XXXX\\Source\\Repos\\ClassLibrary1\\NU1603\\NU1603.csproj\t1\t\r\n\r\nIn both cases, it complains that version `4.0.0` was not found and resorted to `4.0.0.4000`. But the requirement is `>= 4.0.0` and `4.0.0.4000` sure seems to match that requirement.\r\n\r\n### Sample Project\r\n\r\n[NU1603issue.zip](https://github.com/NuGet/Home/files/3335287/NU1603issue.zip)\r\n\r\n"},{"Id":"9905976241","Type":"IssuesEvent","CreatedAt":"2019-06-27T12:55:09","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8231","RelatedDescription":"Closed issue \"Open VS without any project creation, there is no nuget.org feed.\" (#8231) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVSTS Bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/917743\r\nThe latest daily build of VS doesn’t initialize a source pointing to nuget.org\r\n\r\nFigure out all the paths when we add nuget.org to the config files and when this is broken.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nINSTALL STEPS\r\n(copied from linked VSTS  Bug)\r\n\r\n1. Clean machine: Win 7 x64 ENU\r\n2. Install Dev16.2 (pre-release-build) VSC(.NET Core + Desktop workload)\r\nInstall  Dev16.2 Preview3 (pre-release-build)(d16.2-29012.301)VSC:https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/VS/512656d7244eb30e91babe6b04d6eb4978d77082/27d6e958-99c1-df12-6393-187eae69b5a8%3bchannels/internal/Preview/bootstrappers/fixed/Community/vs_Community.exe\r\nSelect . Net Core + Desktop  workload \r\nCheck 1.x Development tools under IC\r\n2.2 development tools checked\r\n\r\nREPRO STEPS\r\n\r\n1. Open VS \r\n\r\n2. Continue without code.\r\n3. Then click Tools> Nuget Package Manager> Package Manager Setting. click Package Sources. There are no package sources there.\r\n\r\nNote: After create a new project, the package source pops up.\r\nACTUAL\r\n![image.png](https://images.zenhubusercontent.com/5cbdfd8a4b83d30843e9e841/417ef594-6d2a-4213-872e-1a43e713434a)\r\nEXPECTED:\r\n![image.png](https://images.zenhubusercontent.com/5cbdfd8a4b83d30843e9e841/21c784f8-5978-49a4-a095-4979a5d2947e)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9355935007","Type":"IssuesEvent","CreatedAt":"2019-04-01T18:05:43","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/34","RelatedDescription":"Opened issue \"nuget list & add commands are being deprecated in 5.0\" (#34) at NuGet/Announcements","RelatedBody":"Tracking Issue(s):\r\n* Deprecate ambiguous nuget.exe commands in 5.0 [#7753](https://github.com/NuGet/Home/issues/7753)\r\n  * Deprecate nuget.exe add command [#7923](https://github.com/NuGet/Home/issues/7923)\r\n  * Rename nuget.exe list to nuget.exe search [#7912](https://github.com/NuGet/Home/issues/7912)\r\n\r\nThe following commands are being deprecated because these are cause of confusion due to their nomenclature and/or other related commands that already exist:\r\n* [`nuget list`](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-list): Currently displays a list of packages from a given source\r\n  * This will be replaced by an equivalent command **`nuget search`** which will be later enhanced with more capabilities as we make progress with or [search improvements](nvmd got it: https://github.com/NuGet/NuGetGallery/issues/6371​​​​​​​).\r\n* [`nuget add`](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-add): Currently adds a specified package to a non-HTTP package source (a folder or UNC path) in a hierarchical layout, wherein folders are created for the package ID and version number. \r\n  * This will be replaced by overloading **`nuget push`** command.\r\n\r\n> These commands will be deprecated i.e. there will be a warning on usage of these commands in 5.0 so that in future releases these commands can be discontinued."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null},{"Id":"1108063773363826688","CreatedAt":"2019-03-19T17:52:45+00:00","UserScreenname":"nuget","Text":"NuGet talk at the MVP Summit by @karann9 \n#MVPBuzz #MvpSummit https://t.co/P43G7wRRkX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-06-28T05:30:43.6922082Z","RunDurationInMilliseconds":2419}