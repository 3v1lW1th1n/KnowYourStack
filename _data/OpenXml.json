{"Data":{"Sdk":{"Events":[{"Id":"6629348131","Type":"IssuesEvent","CreatedAt":"2017-09-24T08:37:32","Actor":"AlirezaAhmadiRad","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/247","RelatedDescription":"Opened issue \"Excel file: Specified part does not exist in the package.\" (#247) at OfficeDev/Open-XML-SDK","RelatedBody":"Hello\r\nI have an Excel file directly created by Microsoft Excel. When I try to open it with SpreadsheetDocument.Open(), I get exception of Specified part does not exist in the package.\r\nCould you please help?\r\n\r\n[DB84080A-8AB9-49AB-A607-0367D6A7F73ABook1.xlsx](https://github.com/OfficeDev/Open-XML-SDK/files/1327144/DB84080A-8AB9-49AB-A607-0367D6A7F73ABook1.xlsx)\r\n"},{"Id":"6624898740","Type":"IssuesEvent","CreatedAt":"2017-09-22T13:36:51","Actor":"brightworks","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/246","RelatedDescription":"Opened issue \"Docx into SQL Server table\" (#246) at OfficeDev/Open-XML-SDK","RelatedBody":"Would it be possible with this tool to parse an existing Docx document and grab its data to send to a SQL Server database? "},{"Id":"6620933390","Type":"IssuesEvent","CreatedAt":"2017-09-21T17:14:07","Actor":"arun-newgen","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/245","RelatedDescription":"Opened issue \"How to generate unique paraid in word openxml?\" (#245) at OfficeDev/Open-XML-SDK","RelatedBody":" <w:p w14:paraId=\"09868DD9\" w14:textId=\"434C9D2D\" w:rsidR=\"00A65BB5\" w:rsidRPr=\"003D4286\" w:rsidRDefault=\"00DD267D\" w:rsidP=\"00DD267D\">\r\n            <w:pPr>\r\n                <w:pStyle w:val=\"prelimhead\"/>\r\n            </w:pPr>\r\n            <w:bookmarkStart w:id=\"0\" w:name=\"_Toc4\"/>\r\n            <w:r w:rsidRPr=\"003D4286\">\r\n                <w:t>Authorâ€™s Note</w:t>\r\n            </w:r>\r\n            <w:bookmarkStart w:id=\"1\" w:name=\"_GoBack\"/>\r\n            <w:bookmarkEnd w:id=\"0\"/>\r\n            <w:bookmarkEnd w:id=\"1\"/>\r\n        </w:p>"},{"Id":"6601078550","Type":"IssuesEvent","CreatedAt":"2017-09-17T19:59:40","Actor":"AntonPlotnikov","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/244","RelatedDescription":"Opened issue \"System.IO.IOException: Stream was too long error on .NET Core 2.0 application\" (#244) at OfficeDev/Open-XML-SDK","RelatedBody":"In .NET Code 2 console application ([ConsoleApp1.zip](https://github.com/OfficeDev/Open-XML-SDK/files/1309342/ConsoleApp1.zip)) writing a large Excel file stops with following error:\r\nUnhandled Exception: System.IO.IOException: Stream was too long.\r\n   at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.IO.Compression.WrappedStream.Write(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.Xml.XmlUtf8RawTextWriter.FlushBuffer()\r\n   at System.Xml.XmlUtf8RawTextWriter.WriteAttributeTextBlock(Char* pSrc, Char* pSrcEnd)\r\n   at System.Xml.XmlUtf8RawTextWriter.WriteString(String text)\r\n   at System.Xml.XmlWellFormedWriter.WriteString(String text)\r\n   at DocumentFormat.OpenXml.OpenXmlElement.WriteAttributesTo(XmlWriter xmlWriter)\r\n   at DocumentFormat.OpenXml.OpenXmlElement.WriteTo(XmlWriter xmlWriter)\r\n   at DocumentFormat.OpenXml.OpenXmlPartWriter.WriteElement(OpenXmlElement elementObject)\r\n   at ConsoleApp1.Program.WriteRandomValuesSAX(String fileName, String sheetName) in C:\\Users\\anton\\Documents\\Visual Studio 2017\\Projects\\ConsoleApplication2\\ConsoleApp1\\Program.cs:line 80\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\Users\\anton\\Documents\\Visual Studio 2017\\Projects\\ConsoleApplication2\\ConsoleApp1\\Program.cs:line 105\r\n\r\nAnd application workset size was growed up to 4 GiB. But it is x64 application, so process memory is not limited by 4GiB\r\n\r\nMeanwhile in .NET FW4.7 same application ([ConsoleApp2.zip](https://github.com/OfficeDev/Open-XML-SDK/files/1309348/ConsoleApp2.zip)) works perfectly with 10 MB workset size"},{"Id":"6585332791","Type":"PullRequestEvent","CreatedAt":"2017-09-13T13:41:53","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/243","RelatedDescription":"Opened pull request \"Merge Office2016 into vNext\" (#243) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"6644112338","Type":"IssuesEvent","CreatedAt":"2017-09-27T13:47:58","Actor":"kaviyarasanaspire","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/186","RelatedDescription":"Opened issue \"While applying background color in the html theme is applied in the wml file\" (#186) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"While applying background color for the text before the image with different font the theme is applied in the wml file and assigning different font.\r\n <w:rFonts w:asciiTheme=\"minorHAnsi\" w:eastAsiaTheme=\"minorHAnsi\" w:hAnsiTheme=\"minorHAnsi\" w:cstheme=\"minorBidi\" />\r\n\r\nCan anyone please give me the solution for this.\r\n"},{"Id":"6638589438","Type":"IssuesEvent","CreatedAt":"2017-09-26T14:07:27","Actor":"ben-demotic","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/185","RelatedDescription":"Opened issue \"DocumentAssembler - vNext line 558 - p.Elements().Count()\" (#185) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi Eric\r\n\r\nThanks for the great library.  I just discovered OpenXmlPowerTools recently and am using it to replace my old RTF based token replacement with DOCX to really save on those storage costs!\r\n\r\nAnyway, while working with some multi-line address data, delimited by '\\n', I had a problem whereby not all of the <br/> elements were being inserted.\r\n\r\nFor example, say I have this text:\r\n\r\n17 Shire Oak Road\\nSaxlingham\\nNR15 5TR\r\n\r\nI have 2 documents where I am attempting to insert this data formatted with new lines as an address.  The first document, the token is replaced by the following which correctly contains a <br/> inserted before the 2nd and 3rd elements:\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n   <p xmlns=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n      <pPr>\r\n         <pStyle xmlns:p3=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" \r\n              p3:val=\"NoSpacing\"/>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n      </pPr>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <t>17 Shire Oak Road</t>\r\n      </r>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <br/>\r\n         <t>Saxlingham</t>\r\n      </r>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <br/>\r\n         <t>NR15 5TR</t>\r\n      </r>\r\n   </p>\r\n```\r\nThe second document does not have the extra <rPr><bCs/><rPr> of the first and if you look you can see that it has not put the <br/> before the second element.\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n   <p xmlns=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n      <r>\r\n         <t>17 Shire Oak Road</t>\r\n      </r>\r\n      <r>\r\n         <t>Saxlingham</t>\r\n      </r>\r\n      <r>\r\n         <br/>\r\n         <t>NR15 5TR</t>\r\n      </r>\r\n   </p>\r\n```\r\n\r\nAm I right in saying that their is a bug here in that the test for p.Elements().Count() on line 558 should test for > 0 not > 1 ??  And that the only reason why it works in the first case is because of the extra guff which is present artificially increasing p.Elements().Count()?  And that it should test only for a count of the <W:r> element?  Should it in fact show:\r\n\r\n(p.Elements(W.r).Count() > 0)\r\n\r\nThis seems to work in my use case.\r\n\r\nCheers\r\n\r\nBen\r\n"},{"Id":"6619868836","Type":"IssuesEvent","CreatedAt":"2017-09-21T13:48:37","Actor":"mesteves","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/184","RelatedDescription":"Opened issue \"binding directives in tables\" (#184) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\n\r\nI'm trying to use DocumentAssembler to generate documents based on xml files, and using repeat directive associated with table directive, i'm not being able to:\r\n\r\n1. Use two expressions in one cell of the prototype row (like ./Price ./CurrencySymbol )\r\n2. Use select content expression on table header. (like **Price** `<# <Content Select=\"./SaleItems/SaleItem[1]/@Currency\"/> #>` ) - produces invalid document\r\n\r\nAny help on this would be appreciated,\r\n\r\nBest regards,\r\nManuel"},{"Id":"6605978130","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:35:41","Actor":"kimsey0","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/183","RelatedDescription":"Opened pull request \"Merge styles with same name in DocumentBuilder\" (#183) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Solves #181.\r\n\r\nCurrently implemented with a compile-time feature flag, but this could easily be changed to an optional parameter passed to DocumentBuilder at run-time.\r\n\r\nIt is likely possible to clean up the section that maps style IDs in references and numberings so that it doesn't have to go through as many elements."},{"Id":"6605910896","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:18:46","Actor":"EricWhiteDev","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/180","RelatedDescription":"Merged pull request \"Reinstall NuGet packages in OpenXmlPowerToolsExamples projects\" (#180) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"This commit completely removes all references to DocumentFormat.OpenXml\r\nand System.IO.Packaging, some of which pointed to a local development\r\nfolder. This commit then reinstalls the DocumentFormat.OpenXml NuGet\r\npackage v2.7.2 from nuget.org.\r\n\r\nFor .NET Framework 4.5 and earlier, DocumentFormat.OpenXml no longer\r\nuses System.IO.Packaging. For .NET Framework 4.6.1 and later,\r\nDocumentFormat.OpenXml has a dependency on System.IO.Packaging, which\r\nwill get pulled from NuGet as required."}],"ResultType":"GitHubEvent"}},"RunOn":"2017-09-29T05:30:25.7081113Z","RunDurationInMilliseconds":1586}