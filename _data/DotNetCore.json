{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.1 Runtime and Compiler Features","PublishedOn":"2017-09-28T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post describes the new Runtime, Compiler and Base Class Library (BCL) improvements in the .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post.  BCL &#8211; .NET Standard 2.0 Support .NET Framework 4.7.1 has built-in support for .NET Standard 2.0. .NET Framework 4.7.1... <a aria-label=\"read more about .NET Framework 4.7.1 Runtime and Compiler Features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/","RawContent":null},{"Title":"Build a web service with F# and .NET Core 2.0","PublishedOn":"2017-09-26T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Earlier this year, I wrote about an update to the roadmap for F# and .NET Core. I had mentioned that there were a number of things you could build with F# and .NET Core today, such as web services. In this post, I&#8217;ll walk through building a web service with F# and .NET Core 2.0... <a aria-label=\"read more about Build a web service with F# and .NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/","RawContent":null},{"Title":".NET Framework September 2017 Preview of Quality Rollup","PublishedOn":"2017-09-25T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Preview of Quality Rollup. This type of rollup is intended for businesses that want to the preview or use quality improvements as soon as they are available. This update applies to Windows 10 Update 1607 (Anniversary Update) and to Windows Server 2016. FYI: The KBs for Windows Server 2016... <a aria-label=\"read more about .NET Framework September 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T00:00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":16,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":24,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":50,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6650451504","Type":"IssuesEvent","CreatedAt":"2017-09-28T16:22:10","Actor":"hughbe","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/87","RelatedDescription":"Opened issue \"PRs to repos outside of dotnet/* pattern should not always thank for signing the CLA\" (#87) at dotnet/home","RelatedBody":"For example: https://github.com/mono/libgdiplus/pull/109\r\n\r\nI have already signed the CLI. On the dotnet/corefx etc. projects, I don't get the extra message:\r\n\r\n```\r\n@hughbe,\r\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by .NET Foundation. We will now review your pull request.\r\nThanks,\r\n.NET Foundation Pull Request Bot\r\n```\r\n\r\nJust a small gripe, as I get an email each time I do this. I've seen this in Mono and Xunit.\r\n\r\n/cc @karelz I know this is unrelated to corefx but maybe you know the right person/repo to route this to :D\r\n"},{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6645912196","Type":"IssuesEvent","CreatedAt":"2017-09-27T19:47:08","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/32","RelatedDescription":"Opened issue \".NET Framework 4.7.1 provides built-in support for .NET Standard 2.0\" (#32) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\n.NET Framework 4.7.1 will have built-in support for .NET Standard 2.0. This means that you don't have to deploy any additional files or use binding redirects to use .NET Standard 2.0 libraries.\r\n\r\nFor a demo, check out [this video][video].\r\n\r\n## Details\r\n\r\nWhile libraries targeting [.NET Standard 2.0][ns20post] are can be consumed by applications and libraries [targeting .NET Framework 4.6.1][nstable] and higher, not all files that are required for .NET Standard libraries were part of .NET Framework 4.6.1. In fact, .NET Framework 4.6.1 was shipped before .NET Standard 2.0 was even designed. That's why building an application targeting .NET Framework 4.6.1 (as well as 4.6.2 and 4.7) will have to deploy additional files.\r\n\r\n* If you use **Visual Studio 2017 15.3** or higher, these files are automatically copied to the application's output folder.\r\n\r\n* If you use **Visual Studio 2015 and [use NuGet 3.6][nuget36]**, we'll prompt you to install a [support package][vs2015support] which will handle copying the files to the output directory.\r\n\r\nStarting with .NET Framework 4.7.1 these files no longer have to be deployed with the application -- they are built right into the .NET Framework itself.\r\n\r\n.NET Framework 4.7.1 also adds[about 200 missing APIs][missingapis] that were part of .NET Standard 2.0 but not actually implemented by .NET Framework 4.6.1, 4.6.2 or 4.7.\r\n\r\nThis also removes the need for [binding redirects][netfx-issues] when using .NET Standard libraries on .NET Framework because the CLR automatically unifies version numbers of assemblies that are part of the platform.\r\n\r\nLearn more [by reading the .NET Standard FAQ](http://aka.ms/netstandardfaq).\r\n\r\n## Discussion\r\n\r\nDiscussion\r\n\r\nFor a discussion, please go to dotnet/standard#514.\r\n\r\n[ns20post]: https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\r\n[nstable]: https://docs.microsoft.com/en-us/dotnet/standard/net-standard\r\n[nuget36]: https://dist.nuget.org/visualstudio-2015-vsix/v3.6.0/NuGet.Tools.vsix\r\n[vs2015support]: https://aka.ms/netstandard-build-support-netfx\r\n[missingapis]: https://github.com/dotnet/standard/blob/master/netstandard/src/ApiCompatBaseline.net461.txt\r\n[netfx-issues]: https://github.com/dotnet/standard/issues/481\r\n[video]: https://www.youtube.com/watch?v=u67Eu_IgEMs\r\n\r\nhttps://github.com/dotnet/standard/issues/514"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6657190837","Type":"PullRequestEvent","CreatedAt":"2017-09-30T01:56:44","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14272","RelatedDescription":"Merged pull request \"Adding a patch to fix coreclr build for VS 15.5 (using older SDKs).\" (#14272) at dotnet/coreclr","RelatedBody":"cc @jkotas, @AndyAyersMS \r\n\r\nFrom Andy:\r\n> If you are building with 15.5 you may need this patch. C++ folks elevated 4768  to on by default (apparently a windows ask) but older SDKs have the bad pattern."},{"Id":"6657190675","Type":"IssuesEvent","CreatedAt":"2017-09-30T01:56:36","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14276","RelatedDescription":"Opened issue \"Move disable warning options from compileoptions.cmake to warningcontrol.h\" (#14276) at dotnet/coreclr","RelatedBody":"From https://github.com/dotnet/coreclr/pull/14272#discussion_r141993057\r\n> I have just realized we have the warning disabling at two places. One is here and the other is in the compileoptions.cmake:\r\nhttps://github.com/dotnet/coreclr/blob/master/compileoptions.cmake#L94\r\nIt seems it would be better to have them at one place only.\r\n\r\nRemove from compileoptions.cmake:\r\n`add_compile_options(/wd4960 /wd4961 /wd4603 /wd4627 /wd4838 /wd4456 /wd4457 /wd4458 /wd4459 /wd4091 /we4640)`\r\n\r\nand Add to src/inc/warningcontrol.h:\r\n```cpp\r\n#pragma warning(disable :4960)\r\n#pragma warning(disable :4961)\r\n...\r\n```"},{"Id":"6657148596","Type":"IssuesEvent","CreatedAt":"2017-09-30T01:24:55","Actor":"dotnet-mc-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14275","RelatedDescription":"Opened issue \"Test failure: JIT_HardwareIntrinsics._IsSupported_r_IsSupported_r_/_IsSupported_r_IsSupported_r_cmd\" (#14275) at dotnet/coreclr","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `JIT_HardwareIntrinsics._IsSupported_r_IsSupported_r_/_IsSupported_r_IsSupported_r_cmd` has failed.\n\n\n    Unhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime.Intrinsics.X86, Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\n    \n    /home/helixbot/dotnetbuild/work/327b6a71-dd54-4a1f-9867-205859547ede/Work/861e3281-4853-4c55-abb2-e068451ec833/Unzip/IsSupported_r/IsSupported_r.sh: line 243:  3468 Aborted                 (core dumped) $_DebuggerFullPath \"$CORE_ROOT/corerun\" $ExePath $CLRTestExecutionArguments\n    \n    \n    Return code:      1\n    Raw output file:      /home/helixbot/dotnetbuild/work/327b6a71-dd54-4a1f-9867-205859547ede/Work/861e3281-4853-4c55-abb2-e068451ec833/Unzip/Reports\\JIT.HardwareIntrinsics\\IsSupported_r\\IsSupported_r.output.txt\n    Raw output:\n    BEGIN EXECUTION\n    /home/helixbot/dotnetbuild/work/327b6a71-dd54-4a1f-9867-205859547ede/Payload/corerun IsSupported_r.exe\n    Expected: 100\n    Actual: 134\n    END EXECUTION - FAILED\n    Test Harness Exitcode is : 1\n    \n    To run the test:\n    > set CORE_ROOT=/home/helixbot/dotnetbuild/work/327b6a71-dd54-4a1f-9867-205859547ede/Payload\n    > /home/helixbot/dotnetbuild/work/327b6a71-dd54-4a1f-9867-205859547ede/Work/861e3281-4853-4c55-abb2-e068451ec833/Unzip/IsSupported_r/IsSupported_r.sh\n    \n    Expected: True\n    Actual:   False\n\n        Stack Trace:\n\n        \nBuild : Master - 20170930.01 (Core Tests)\nFailing configurations:\n- redhat.69.amd64\n  - x64\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcoreclr~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20170930.01/workItem/JIT.HardwareIntrinsics.XUnitWrapper/analysis/xunit/JIT_HardwareIntrinsics._IsSupported_r_IsSupported_r_~2F_IsSupported_r_IsSupported_r_cmd"},{"Id":"6657134128","Type":"PullRequestEvent","CreatedAt":"2017-09-30T01:14:14","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14261","RelatedDescription":"Closed pull request \"Add implicit x flag when morphing copy block\" (#14261) at dotnet/coreclr","RelatedBody":"Fixes #13882 \r\n\r\n/cc @sandreenko "},{"Id":"6657132626","Type":"PullRequestEvent","CreatedAt":"2017-09-30T01:13:04","Actor":"fiigii","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14274","RelatedDescription":"Opened pull request \"[RyuJIT] Fix VEX.vvvv for cvtss2sd and cvtsd2ss\" (#14274) at dotnet/coreclr","RelatedBody":"Instruction `cvtss2sd` and `cvtsd2ss` has similar issue to #14225, which `vcvtsd2ss xmm0, xmm1, xmm1` has less register dependency than  `vcvtsd2ss xmm0, xmm0, xmm1`."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6657281957","Type":"IssuesEvent","CreatedAt":"2017-09-30T03:05:45","Actor":"netroby","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7737","RelatedDescription":"Opened issue \"Feature request, compile dotnet to one self contained executable file\" (#7737) at dotnet/cli","RelatedBody":"This is a feature request. The current dotnet build result (even self contained build) will output a executable file and much more dll.\r\nCan we built them all in one single executable file?\r\n\r\ngolang/rust can build into one executable file(which good for redistribute). hope dotnet have the same ability "},{"Id":"6657072591","Type":"IssuesEvent","CreatedAt":"2017-09-30T00:33:08","Actor":"cdmihai","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7736","RelatedDescription":"Opened issue \"dotnet new mvc fails to restore\" (#7736) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet new mvc\r\ndotnet restore\r\n\r\n## Expected  behavior\r\nRestore succeeds.\r\n\r\n## Actual behavior\r\n```\r\nE:\\delete\\test>dotnet restore\r\n  Restoring packages for E:\\delete\\test\\test.csproj...\r\n  Restoring packages for E:\\delete\\test\\test.csproj...\r\nE:\\delete\\test\\test.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.All with version (>= 2.1.0-preview1-26751)\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 4 version(s) in nuget.org [ Nearest version: 2.0.0 ]\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 0 version(s) in Package source\r\nE:\\delete\\test\\test.csproj : error NU1102: Unable to find package Microsoft.VisualStudio.Web.CodeGeneration.Tools with version (>= 2.1.0-preview1-26751)\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 15 version(s) in nuget.org [ Nearest version: 2.0.0 ]\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 4 version(s) in Microsoft Visual Studio Offline Packages [ Nearest version: 1.1.0-preview4-final ]\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 0 version(s) in Package source\r\nC:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\NuGet.targets(102,5): error : Value cannot be null. [E:\\delete\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\NuGet.targets(102,5): error : Parameter name: path [E:\\delete\\test\\test.csproj]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.0-preview1-007228)\r\n\r\nProduct Information:\r\n Version:            2.1.0-preview1-007228\r\n Commit SHA-1 hash:  28a1f7e9d6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-25719-04\r\n  Build    : b5c917c0b24171ae27c7cfcfd2617b1088d41c11\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"6657037272","Type":"PullRequestEvent","CreatedAt":"2017-09-30T00:11:10","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7730","RelatedDescription":"Merged pull request \"Fixing a publish break in master: \"UploadToLinuxPackageRepository\"\" (#7730) at dotnet/cli","RelatedBody":"Error in the last 3 builds of: Dotnet CLI CI [AllLinuxDistrosNativeInstallers][x64][master]\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1025637\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1022838\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1022013\r\n\r\nerror MSB4018: The \"UploadToLinuxPackageRepository\" task failed unexpectedly. [/home/DDITAdministrator/myagent/_work/878/s/build.proj]\r\nerror MSB4018: System.IO.FileLoadException: Could not load file or assembly 'NuGet.Protocol, Version=4.4.0.3, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621) [/home/DDITAdministrator/myagent/_work/878/s/build.proj]\r\nerror MSB4018: File name: 'NuGet.Protocol, Version=4.4.0.3, Culture=neutral, PublicKeyToken=31bf3856ad364e35' [/home/DDITAdministrator/myagent/_work/878/s/build.proj]\r\n\r\n\r\nNuGet.Protocol needs to load the 'CLI_NuGet_Version' [binary ver = 4.4.0.3] not the prior version.\r\n"},{"Id":"6656964593","Type":"PullRequestEvent","CreatedAt":"2017-09-29T23:33:01","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/7734","RelatedDescription":"Closed pull request \"Update Roslyn's version to 2.6.0-beta1-62126-01\" (#7734) at dotnet/cli","RelatedBody":"@dotnet/dotnet-cli "},{"Id":"6656894358","Type":"PullRequestEvent","CreatedAt":"2017-09-29T23:00:58","Actor":"brettfo","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7735","RelatedDescription":"Opened pull request \"Update FSharp compiler\" (#7735) at dotnet/cli","RelatedBody":""},{"Id":"6656884950","Type":"PullRequestEvent","CreatedAt":"2017-09-29T22:57:07","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7733","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-25729-02 (master)\" (#7733) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6656883915","Type":"PullRequestEvent","CreatedAt":"2017-09-29T22:56:41","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7734","RelatedDescription":"Opened pull request \"Update Roslyn's version to 2.6.0-beta1-62126-01\" (#7734) at dotnet/cli","RelatedBody":"@dotnet/dotnet-cli "},{"Id":"6656830710","Type":"PullRequestEvent","CreatedAt":"2017-09-29T22:35:32","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7729","RelatedDescription":"Merged pull request \"Update the string that is displayed when there's a typo in the profile name or it's not a valid JSON object\" (#7729) at dotnet/cli","RelatedBody":""},{"Id":"6656701257","Type":"PullRequestEvent","CreatedAt":"2017-09-29T21:49:50","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7733","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-25729-02 (master)\" (#7733) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6656552117","Type":"PullRequestEvent","CreatedAt":"2017-09-29T21:06:08","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7732","RelatedDescription":"Opened pull request \"The publish logic needs to change with the addition of RedHat 6.\" (#7732) at dotnet/cli","RelatedBody":"\"IsLinuxDistroSpecific\" was used only to decide whether to publish zip/tar files - changes to \"PublishArchives\" & includes RedHat 6 per 'DerivedHostMachineInfo.props'\r\n\r\n\"IslinuxPortable\" was used to decide, among other things, whether to publish the installer packages - changes to \"PublishNativeInstallers\" & excludes RedHat 6 per 'DerivedHostMachineInfo.props'\r\n\r\nPart of the work to enable RedHat 6\r\n\r\n@dotnet/dotnet-cli\r\n"},{"Id":"6656509459","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:55:01","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7721","RelatedDescription":"Merged pull request \"Port infrastructure improvements from master to dev/release/2.0.0\" (#7721) at dotnet/cli","RelatedBody":"Porting the following to the new 2.0.x infrastructure branch from master:\r\n\r\n#7352 Update solution to reflect current state\r\n#7530 Eliminate warnings (just that subset, not the part of the PR that updated core-setup)\r\n#7460 Use REST API to upload to feed\r\n#7571 Logging for feed upload\r\n#7522 Rearrange output folders to fix incremental build\r\n#7594 Fix signing after output folders moved\r\n"},{"Id":"6656432252","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:34:36","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7731","RelatedDescription":"Opened pull request \"MSBuild 15.5.110\" (#7731) at dotnet/cli","RelatedBody":"Will likely need another when https://github.com/Microsoft/msbuild/pull/2567 is in, but at least this is going into rel/d15rel so I wanted to get this out."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6657075642","Type":"PullRequestEvent","CreatedAt":"2017-09-30T00:35:13","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/516","RelatedDescription":"Merged pull request \"Add developer metaphor for .NET Standard\" (#516) at dotnet/standard","RelatedBody":"Based on @davidfowl's [gist](https://gist.github.com/davidfowl/8939f305567e1755412d6dc0b8baf1b7)"},{"Id":"6656669297","Type":"PullRequestEvent","CreatedAt":"2017-09-29T21:39:50","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/517","RelatedDescription":"Merged pull request \"Update prerelease label to 'servicing'\" (#517) at dotnet/standard","RelatedBody":"@weshaggard @Petermarcu "},{"Id":"6656492672","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:50:34","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/517","RelatedDescription":"Opened pull request \"Update prerelease label to 'servicing'\" (#517) at dotnet/standard","RelatedBody":"@weshaggard @Petermarcu "},{"Id":"6656052612","Type":"PullRequestEvent","CreatedAt":"2017-09-29T18:57:50","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/516","RelatedDescription":"Opened pull request \"Add developer metaphor for .NET Standard\" (#516) at dotnet/standard","RelatedBody":""},{"Id":"6650233493","Type":"IssuesEvent","CreatedAt":"2017-09-28T15:39:18","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/standard/issues/378","RelatedDescription":"Reopened issue \"Trimming fails if a conflict hits it\" (#378) at dotnet/standard","RelatedBody":"If conflict resolution doesn't resolve a conflict trimming will fail with an error like:\r\n```\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.0.0-preview2-25401-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: The \"TrimFiles\" task failed unexpectedly.\\r [F:\\testNetfx\\sdkProj\\sdkProj.csproj]\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.0.0-preview2-25401-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: System.ArgumentException: An item with the same key has already been added. Key: System.Security.Cryptography.Encoding.dll\\r [F:\\testNetfx\\sdkProj\\sdkProj.csproj]\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.0.0-preview2-25401-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at System.ThrowHelper.ThrowAddingDuplicateWithKeyArgumentException(Object key)\\r [F:\\testNetfx\\sdkProj\\sdkProj.csproj]\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.0.0-preview2-25401-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\\r [F:\\testNetfx\\sdkProj\\sdkProj.csproj]\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.0.0-preview2-25401-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)\\r [F:\\testNetfx\\sdkProj\\sdkProj.csproj]\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.0.0-preview2-25401-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.DotNet.Build.Tasks.TrimFiles.GetFiles(IDictionary`2 packages)\\r [F:\\testNetfx\\sdkProj\\sdkProj.csproj]\r\n```\r\n\r\nWe shouldn't fail here, instead we should just tolerate the duplicate and use one of them.\r\nhttps://github.com/dotnet/standard/blob/eacea174a2ea58c0dc8576cbec321e0cd44640a5/Microsoft.Packaging.Tools.Trimming/tasks/TrimFiles.cs#L310\r\n\r\n"},{"Id":"6650232780","Type":"PullRequestEvent","CreatedAt":"2017-09-28T15:39:11","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/461","RelatedDescription":"Merged pull request \"Handle file duplicates in trimming\" (#461) at dotnet/standard","RelatedBody":"Use last-in-wins (similar to what will happen with overwrite during\r\ncopy to output) when building the file graph.\r\n\r\nWe could instead merge the dependencies of the additional file but\r\nthat's not necessarily correct.\r\n\r\nFixes #378 \r\n\r\n/cc @weshaggard "}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6657398732","Type":"IssuesEvent","CreatedAt":"2017-09-30T04:53:18","Actor":"SteveL-MSFT","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24357","RelatedDescription":"Opened issue \"[System.Diagnostics.Process]::GetProcesses(computer) returns local processes\" (#24357) at dotnet/corefx","RelatedBody":"Repro in PowerShell Core 6\r\n\r\n```powershell\r\n[System.Diagnostics.Process]::GetProcesses(\"not existing computer\")\r\n```\r\n\r\nExpected\r\n```none\r\nerror not able to connect to computer\r\n```\r\n\r\nActual\r\n```none\r\nlocal processes returned\r\n```\r\n"},{"Id":"6657375881","Type":"PullRequestEvent","CreatedAt":"2017-09-30T04:28:44","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24351","RelatedDescription":"Merged pull request \"Update CoreClr to servicing-25730-01 (release/1.1.0)\" (#24351) at dotnet/corefx","RelatedBody":""},{"Id":"6657353608","Type":"PullRequestEvent","CreatedAt":"2017-09-30T04:06:04","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24348","RelatedDescription":"Merged pull request \"Avoid deadlock on NamedPipeTest.Specific on UWP\" (#24348) at dotnet/corefx","RelatedBody":"For now this test is not running in UWP but this change prevents the\r\ntest from deadlocking if some of the blocking steps fail."},{"Id":"6657276876","Type":"IssuesEvent","CreatedAt":"2017-09-30T03:01:49","Actor":"Jiayili1","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24356","RelatedDescription":"Opened issue \"Tests under: System.Net.Security.Tests.ServerAsyncAuthenticateTest failed with \"System.ComponentModel.Win32Exception\"\" (#24356) at dotnet/corefx","RelatedBody":"Failed tests:\r\nSystem.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_AllClientVsIndividualServerSupportedProtocols_Success\r\nSystem.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_EachSupportedProtocol_Success\r\nSystem.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_MismatchProtocols_Fails\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/outerloop_netcoreapp_win7_release/272/testReport/System.Net.Security.Tests/ServerAsyncAuthenticateTest/ServerAsyncAuthenticate_AllClientVsIndividualServerSupportedProtocols_Success_serverProtocol__Tls_/\r\n\r\nConfiguration: outerloop_netcoreapp_win7_release\r\n\r\nMESSAGE:\r\n~~~\r\nSystem.ComponentModel.Win32Exception : The client and server cannot communicate, because they do not possess a common algorithm\r\n~~~\r\nSTACK TRACE:\r\n~~~\r\nat System.Net.SSPIWrapper.AcquireCredentialsHandle(SSPIInterface secModule, String package, CredentialUse intent, SCHANNEL_CRED scc) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\Common\\src\\Interop\\Windows\\sspicli\\SSPIWrapper.cs:line 167 \r\nat System.Net.Security.SslStreamPal.AcquireCredentialsHandle(CredentialUse credUsage, SCHANNEL_CRED secureCredential) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStreamPal.Windows.cs:line 408 \r\nat System.Net.Security.SslStreamPal.AcquireCredentialsHandle(X509Certificate certificate, SslProtocols protocols, EncryptionPolicy policy, Boolean isServer) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStreamPal.Windows.cs:line 131 \r\nat System.Net.Security.SecureChannel.AcquireServerCredentials(Byte[]& thumbPrint) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SecureChannel.cs:line 677 \r\nat System.Net.Security.SecureChannel.GenerateToken(Byte[] input, Int32 offset, Int32 count, Byte[]& output) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SecureChannel.cs:line 784 \r\nat System.Net.Security.SecureChannel.NextMessage(Byte[] incoming, Int32 offset, Int32 count) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SecureChannel.cs:line 707 \r\nat System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslState.cs:line 749 \r\nat System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslState.cs:line 965 \r\nat System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslState.cs:line 868 \r\nat System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslState.cs:line 681 \r\nat System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslState.cs:line 598 \r\nat System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate serverCertificate, Boolean clientCertificateRequired, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation, AsyncCallback asyncCallback, Object asyncState) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStream.cs:line 161 \r\nat System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__35_1(X509Certificate arg1, Boolean arg2, SslProtocols arg3, AsyncCallback callback, Object state) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStream.cs:line 273 \r\nat System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2,TArg3](Func`6 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, TArg3 arg3, Object state, TaskCreationOptions creationOptions) at System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate serverCertificate, Boolean clientCertificateRequired, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation) in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStream.cs:line 274 \r\nat System.Net.Security.Tests.ServerAsyncAuthenticateTest.<ServerAsyncSslHelper>d__11.MoveNext() in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\tests\\FunctionalTests\\ServerAsyncAuthenticateTest.cs:line 154 \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\nat System.Net.Security.Tests.ServerAsyncAuthenticateTest.<ServerAsyncAuthenticate_AllClientVsIndividualServerSupportedProtocols_Success>d__9.MoveNext() in D:\\j\\workspace\\outerloop_net---15cfbbd5\\src\\System.Net.Security\\tests\\FunctionalTests\\ServerAsyncAuthenticateTest.cs:line 95 \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n~~~\r\n"},{"Id":"6657213167","Type":"IssuesEvent","CreatedAt":"2017-09-30T02:13:23","Actor":"dotnet-mc-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24355","RelatedDescription":"Opened issue \"Tests under: System.Net.NameResolution.Functional.Tests failed with \"System.Net.Internals.SocketExceptionFactory+ExtendedSocketException : Device not configured\"\" (#24355) at dotnet/corefx","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `System.Net.NameResolution.Tests.GetHostByNameTest/DnsObsoleteBeginEndGetHostByName_EmptyString_ReturnsHostName` has failed.\n\nSystem.Net.Internals.SocketExceptionFactory+ExtendedSocketException : Device not configured\n\n        Stack Trace:\n\n           at System.Net.Dns.InternalGetHostByName(String hostName, Boolean includeIPv6) in /Users/buildagent/agent/_work/46/s/corefx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 46\n       at System.Net.Dns.ResolveCallback(Object context) in /Users/buildagent/agent/_work/46/s/corefx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 290\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n       at System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult) in /Users/buildagent/agent/_work/46/s/corefx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 420\n       at System.Net.Dns.EndGetHostByName(IAsyncResult asyncResult) in /Users/buildagent/agent/_work/46/s/corefx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 445\n       at System.Net.NameResolution.Tests.GetHostByNameTest.DnsObsoleteBeginEndGetHostByName_EmptyString_ReturnsHostName() in /Users/buildagent/agent/_work/46/s/corefx/src/System.Net.NameResolution/tests/FunctionalTests/GetHostByNameTest.cs:line 117\nBuild : Master - 20170930.01 (Core Tests)\nFailing configurations:\n- OSX.1012.Amd64-x64\n  - Release\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20170930.01/workItem/System.Net.NameResolution.Functional.Tests/analysis/xunit/System.Net.NameResolution.Tests.GetHostByNameTest~2FDnsObsoleteBeginEndGetHostByName_EmptyString_ReturnsHostName"},{"Id":"6657197759","Type":"IssuesEvent","CreatedAt":"2017-09-30T02:01:46","Actor":"dotnet-mc-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24354","RelatedDescription":"Opened issue \"Tests under: MonoTests.System.Drawing.Imaging.PngCodecTest failed with \"System.ArgumentException\"\" (#24354) at dotnet/corefx","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `MonoTests.System.Drawing.Imaging.PngCodecTest/Bitmap2bitData` has failed.\n\nSystem.ArgumentException : Parameter is not valid.\n\n        Stack Trace:\n\n           at System.Drawing.SafeNativeMethods.Gdip.CheckStatus(Int32 status) in /root/corefx-1027731/src/System.Drawing.Common/src/System/Drawing/Gdiplus.cs:line 269\n       at System.Drawing.Bitmap..ctor(String filename, Boolean useIcm) in /root/corefx-1027731/src/System.Drawing.Common/src/System/Drawing/Bitmap.Unix.cs:line 128\n       at System.Drawing.Bitmap..ctor(String filename) in /root/corefx-1027731/src/System.Drawing.Common/src/System/Drawing/Bitmap.Unix.cs:line 105\n       at MonoTests.System.Drawing.Imaging.PngCodecTest.Bitmap2bitData() in /root/corefx-1027731/src/System.Drawing.Common/tests/mono/System.Drawing.Imaging/PngCodecTesst.cs:line 343\nBuild : Master - 20170930.01 (Core Tests)\nFailing configurations:\n- SLES.12.Amd64-x64\n  - Debug\n  - Release\n- Ubuntu.1704.Amd64-x64\n  - Debug\n  - Release\n- Debian.90.Amd64-x64\n  - Debug\n  - Release\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20170930.01/workItem/System.Drawing.Common.Tests/analysis/xunit/MonoTests.System.Drawing.Imaging.PngCodecTest~2FBitmap2bitData"},{"Id":"6657194919","Type":"IssuesEvent","CreatedAt":"2017-09-30T01:59:53","Actor":"dotnet-mc-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24353","RelatedDescription":"Opened issue \"Tests under: MonoTests.System.Drawing.Imaging.PngCodecTest failed with \"Xunit.Sdk.EqualException\"\" (#24353) at dotnet/corefx","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `MonoTests.System.Drawing.Imaging.PngCodecTest/Bitmap1bitFeatures` has failed.\n\nAssert.Equal() Failure\n    Expected: 0\n    Actual:   1\n\n        Stack Trace:\n\n           at MonoTests.System.Drawing.Imaging.PngCodecTest.Bitmap1bitFeatures() in /root/corefx-1027731/src/System.Drawing.Common/tests/mono/System.Drawing.Imaging/PngCodecTesst.cs:line 78\nBuild : Master - 20170930.01 (Core Tests)\nFailing configurations:\n- SLES.12.Amd64-x64\n  - Debug\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20170930.01/workItem/System.Drawing.Common.Tests/analysis/xunit/MonoTests.System.Drawing.Imaging.PngCodecTest~2FBitmap1bitFeatures"},{"Id":"6657151896","Type":"PullRequestEvent","CreatedAt":"2017-09-30T01:27:19","Actor":"Drawaes","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24352","RelatedDescription":"Opened pull request \"SSLStream : Removed sync lock method\" (#24352) at dotnet/corefx","RelatedBody":"Looking at the code, because this method is basically never actually blocked on (only if a renegotiation takes place during a write) there is no need for a second \"sync\" method.\r\n\r\nInstead we can block on the Async method as it is controlled via a TCS anyway and doesn't go down to a \"real blocking method\" at the OS level so no extra threads should be generated from the original. This again simplifies the code maintenance going forward and refactoring SslState"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6657325162","Type":"IssuesEvent","CreatedAt":"2017-09-30T03:41:14","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21627","RelatedDescription":"Closed issue \"ASP.NET + Roslyn Compiler Exit Issue (VBCSCompiler.exe fails to release file locks during Rebuild)\" (#21627) at dotnet/roslyn","RelatedBody":"First noticed in Visual Studio 2017, 15.3.0, Preview 7.0 (also exists in VS 2017, 15.3.1 Preview 1.0)\r\n( @CyrusNajmabadi : This issue is being filed as per our email thread on this issue)\r\n \r\n**Repro:**\r\n\r\n1. Open VS\r\n2. Create a new Web Application Project -- I used WebForms (classic). Target .NET Framework 4.7\r\n3. Check that web.config has entry for system.codedom > compilers\r\n4. Right-click any asp.net file that can be viewed or navigated to (say /Index or /default.aspx) and do a \"View in browser\". Browser can be anything, I have used both Google Chrome as well as MS Edge. You don't have to do anything there, just leave the browser open as you would during  a develop with live changes kind of thing.\r\n5. Back to VS, right-click on the web app project, and do a \"Rebuild\" -- not a Build.. a Rebuild. \r\n\r\n \r\n**You will hit this error with the following attributes:**\r\n \r\n**6 messages about failure to DELETE Roslyn assemblies:**\r\n \r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(4909,5): warning MSB3061: Unable to delete file \"...\\bin\\roslyn\\FILENAME\". Access to the path '...\\bin\\roslyn\\FILENAME' is denied.\r\n \r\nThe following files are mentioned:\r\n\r\n- Microsoft.CodeAnalysis.CSharp.dll\r\n- Microsoft.CodeAnalysis.dll\r\n- Microsoft.CodeAnalysis.VisualBasic.dll\r\n- Microsoft.DiaSymReader.Native.amd64.dll\r\n- System.IO.Compression.dll\r\n- VBCSCompiler.exe\r\n\r\n \r\n**7 messages about failure to COPY Roslyn assemblies:**\r\n \r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(4405,5): error MSB3021: Unable to copy file \"...\\packages\\Microsoft.Net.Compilers.2.3.1\\tools\\FILENAME\" to \"bin\\roslyn\\FILENAME\". Access to the path 'bin\\roslyn\\FILENAME' is denied.\r\n \r\nThe following files are mentioned:\r\n \r\n\r\n- System.Collections.Immutable.dll\r\n- System.IO.FileSystem.dll\r\n- System.IO.FileSystem.Primitives.dll\r\n- System.Reflection.Metadata.dll \r\n- System.Security.Cryptography.Algorithms.dll\r\n- System.Security.Cryptography.Primitives.dll\r\n- System.ValueTuple.dll\r\n\r\n \r\nAfter this problem is hit, every build after that FAILS. \r\n \r\nThey seem to be held in lock by the \"VBCSCompiler.exe\" process. If I \"end task\" this from Task Manager, then I can build again. "},{"Id":"6657305390","Type":"IssuesEvent","CreatedAt":"2017-09-30T03:24:51","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22322","RelatedDescription":"Closed issue \"Allow modifiers on types in any order (partial, ref, readonly)\" (#22322) at dotnet/roslyn","RelatedBody":"From LDM discussion today, this is something we could do after 7.2.\r\n\r\nFYI @gafter @VSadov @OmarTawfik "},{"Id":"6657269155","Type":"IssuesEvent","CreatedAt":"2017-09-30T02:55:52","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22433","RelatedDescription":"Closed issue \"\"Upgrade C# Language Version\" code fix adds conditional property groups to csproj\" (#22433) at dotnet/roslyn","RelatedBody":"**Version Used**: Visual Studio 15.4 Preview 3.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. In a C# project with no `<LangVersion>` property attempt to use a language feature not available in the latest major version. For example, a `default` expression.\r\n2. Use the code fix to \"Upgrade this project to C# language version 'latest'\" (or '7.1', either should do the same thing)\r\n\r\n**Expected Behavior**: A single `<LangVersion>` node was added to my unconditional `<PropertyGroup>` at the top:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n**Actual Behavior**: Two new conditional `<PropertyGroup>` nodes (one for Release, one for Debug) were added, each setting `<LangVersion>` to the same value:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThis seems odd to me as a user. As someone vaguely familiar with the internals of the project system, I do mostly understand what happened, but it's not what I'd expect as a user."},{"Id":"6657266166","Type":"IssuesEvent","CreatedAt":"2017-09-30T02:53:28","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22438","RelatedDescription":"Closed issue \"\"out var _\" crashes the compiler\" (#22438) at dotnet/roslyn","RelatedBody":"**Version Used**:\r\nMicrosoft Visual Studio Enterprise 2017\r\nVersion 15.0.26228.9 D15RTWSVC\r\nMicrosoft .NET Framework\r\nVersion 4.7.02046\r\n\r\n**Steps to Reproduce**:\r\n1. Create C# project\r\n2. Add [Moq](https://www.nuget.org/packages/Moq) package\r\n3. Compile this program and observe \"error MSB6006: \"csc.exe\" exited with code -2146232797.\"\r\n\r\n```\r\nnamespace CSharpCompilerCrash\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var foo = new Moq.Mock<Foo>();\r\n            foo.Setup(x => x.F(out var _));\r\n        }\r\n    }\r\n\r\n    abstract class Foo\r\n    {\r\n        public abstract void F(out int bar);\r\n    }\r\n}\r\n```\r\n**Expected Behavior**: Program successfully compiles\r\n\r\n**Actual Behavior**: C# compiler crashes\r\n"},{"Id":"6657173444","Type":"PullRequestEvent","CreatedAt":"2017-09-30T01:43:35","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22436","RelatedDescription":"Merged pull request \"Clean up code from previous ref-readonly PRs\" (#22436) at dotnet/roslyn","RelatedBody":"Fixes #21981 - Remove specialcasing for Span and ReadOnlySpan before shipping\r\nResponds to one comment on #22424 \r\n\r\ncc @dotnet/roslyn-compiler @VSadov "},{"Id":"6657173417","Type":"IssuesEvent","CreatedAt":"2017-09-30T01:43:34","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21981","RelatedDescription":"Closed issue \"Remove specialcasing for Span and ReadOnlySpan before shipping\" (#21981) at dotnet/roslyn","RelatedBody":"We currently assume, regardless of attributes, that Span and ReadOnlySpan are\r\n- ref-like structs\r\n- readonly structs\r\n\r\nThis is done as a bootstrapping measure to mitigate the situation where some repos have old compilers and some implementations of span types do not have expected annotation.\r\n\r\nWe should remove the special-casing when before shipping to not set a compat precedent where annotations are unnecessary on span types."},{"Id":"6657057230","Type":"PullRequestEvent","CreatedAt":"2017-09-30T00:23:22","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22405","RelatedDescription":"Merged pull request \"Allow \"in\" at call sites as a way to request strict \"in\" parameter passing.\" (#22405) at dotnet/roslyn","RelatedBody":"Allow \"in\" at call sites as a way to request strict \"in\" parameter passing.\r\n\r\n- \"in\" argument matches only \"in\" parameters (as opposed to unmodified case that can also match byval parameters)\r\n- \"in\" requires that the argument is an lvalue\r\n- \"in\" does not allow conversions at the call-site other than identity conversions\r\n- \"in\" sets an exact bound in generic method type inference\r\n- \"in\" cannot be stack-spilled by value\r\n\r\n**Bugs this fixes:**\r\n\r\nFixes:#22387\r\nFixes https://github.com/dotnet/roslyn/issues/22442 (`DeconstructionAssignmentWithRefReadonlyExtension` breaking CI)\r\n\r\n**Workarounds, if any**\r\n\r\nAdjustment to the feature discussed and vetted by the LDM\r\n\r\n\r\n\r\n"},{"Id":"6657057228","Type":"IssuesEvent","CreatedAt":"2017-09-30T00:23:22","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22387","RelatedDescription":"Closed issue \"Use `in` for arguments\" (#22387) at dotnet/roslyn","RelatedBody":"From LDM discussion today:\r\n1) parameters should be declared with `in` instead of `ref readonly`\r\n\r\n2) **plain method call with consider both byval and `in` candidates, and continue producing an error if ambiguity**\r\n3) **`in` at call site guarantees the `in` candidate is picked and no copy is made**\r\n4) **async spilling should never make a copy if `in` (an error should be produced in this case)**\r\n\r\nThis bug is about parts 2, 3, 4.\r\n\r\nOther parts are tracked in https://github.com/dotnet/roslyn/issues/22381\r\n"},{"Id":"6657024720","Type":"IssuesEvent","CreatedAt":"2017-09-30T00:04:00","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22447","RelatedDescription":"Opened issue \"Obsolete attribute that we put on ref-like types should be \"error = true\"\" (#22447) at dotnet/roslyn","RelatedBody":"\r\nIt looks like we are setting `error = false`, which might be a good idea for a preview, but it should be `error = true` in release.\r\n\r\nWe meant this to cause an error, not just a warning.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6657342354","Type":"PullRequestEvent","CreatedAt":"2017-09-30T03:55:55","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4620","RelatedDescription":"Merged pull request \"Add placeholder build option for WebAssembly\" (#4620) at dotnet/corert","RelatedBody":"This commit adds a placeholder build target for WebAssembly to the bash and batch build scripts (#4504).\r\n\r\nAt present, an error is displayed advising that the wasm build is not yet implemented before exiting.\r\n\r\nI was hoping to try and take a look at the cmake scripts for #4505, and this seemed like a sensible first step. "},{"Id":"6656625845","Type":"PullRequestEvent","CreatedAt":"2017-09-29T21:27:02","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4639","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#4639) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6656429635","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:33:53","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4638","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#4638) at dotnet/corert","RelatedBody":""},{"Id":"6656429216","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:33:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4638","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#4638) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"912821941706268673","CreatedAt":"2017-09-26T23:31:24+00:00","UserScreenname":"dotnet","Text":"Build a web service with F# and .NET Core 2.0 https://t.co/2jSgo1gbty","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":112,"FavoriteCount":64,"RawContent":null},{"Id":"912406212238442498","CreatedAt":"2017-09-25T19:59:27+00:00","UserScreenname":"dotnet","Text":".NET Framework September 2017 Preview of Quality Rollup https://t.co/tkuoBxjYHC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":19,"RawContent":null},{"Id":"911357565769936896","CreatedAt":"2017-09-22T22:32:30+00:00","UserScreenname":"dotnet","Text":".NET Core September 2017 Update — macOS High Sierra Support https://t.co/k9gJ5jFIN8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":24,"RawContent":null},{"Id":"911015945291919360","CreatedAt":"2017-09-21T23:55:01+00:00","UserScreenname":"dotnet","Text":"Last one! Happening now on .NET Fundamentals Track @ #dotNETConf: Learn how to use #FSharp to write front-end &amp; bac… https://t.co/OH8cMAcq4I","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":26,"FavoriteCount":16,"RawContent":null},{"Id":"911005750410960896","CreatedAt":"2017-09-21T23:14:31+00:00","UserScreenname":"dotnet","Text":"PSA: .NET Framework September Update - known issues published https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"911000845860458498","CreatedAt":"2017-09-21T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Get started w/ #FSharp, .NET Core &amp; #VSCode. Watch… https://t.co/VRkwBvSNPU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"910988157197344768","CreatedAt":"2017-09-21T22:04:36+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 Accessibility and WPF Improvements https://t.co/eZLFQxhlLj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":52,"RawContent":null}]}},"RunOn":"2017-09-30T05:30:17.278034Z","RunDurationInMilliseconds":6370}