{"Data":{"Vue":{"Events":[{"Id":"6761880819","Type":"PullRequestEvent","CreatedAt":"2017-10-25T04:48:16","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue/pull/6833","RelatedDescription":"Merged pull request \"tweak: The value of this is always undefined\" (#6833) at vuejs/vue","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"},{"Id":"6761874625","Type":"PullRequestEvent","CreatedAt":"2017-10-25T04:45:19","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue/pull/6886","RelatedDescription":"Merged pull request \"fix(types): improve typing for better completion\" (#6886) at vuejs/vue","RelatedBody":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Other, please describe:\r\n Tweak definition file. Prefer user custom types over Vue builtin types for better completion item order. \r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\n**Other information:**\r\n"},{"Id":"6761873845","Type":"PullRequestEvent","CreatedAt":"2017-10-25T04:44:58","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue/pull/6905","RelatedDescription":"Merged pull request \"fix(keep-alive): higher priority for exclude than include\" (#6905) at vuejs/vue","RelatedBody":"Here's my problem in some cases : \r\n\r\nmy routes list:  redIndex yellowIndex blueIndex   indexBottom  page1 page2 page3...\r\njust want to cache all the index page except indexBottom page , but include  & exclude can not work together .\r\n\r\n i change the match order , so i can write component like this \r\n<keepalive include ='/index/ ' exclude='indexBottom >...</keep-alive>\r\n\r\n i think it would be more convenient in most scnario"},{"Id":"6761630776","Type":"PullRequestEvent","CreatedAt":"2017-10-25T03:01:30","Actor":"cuteyumiko","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/pull/6905","RelatedDescription":"Opened pull request \"fix(keep-alive): higher priority for exclude than include\" (#6905) at vuejs/vue","RelatedBody":"Here's my problem in some cases : \r\n\r\nmy routes list:  redIndex yellowIndex blueIndex   indexBottom  page1 page2 page3...\r\njust want to cache all the index page except indexBottom page , but include  & exclude can not work together .\r\n\r\n i change the match order , so i can write component like this \r\n<keepalive include ='/index/ ' exclude='indexBottom >...</keep-alive>\r\n\r\n i think it would be more convenient in this scnario"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6761569946","Type":"IssuesEvent","CreatedAt":"2017-10-25T02:37:56","Actor":"lichnow","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1843","RelatedDescription":"Opened issue \"addRoutes method not work in vue-ssr service-entry\" (#1843) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n### Steps to reproduce\r\nssr `server-entry.js`\r\n```\r\nexport default context => {\r\n    return new Promise((resolve, reject) => {\r\n        const { app, router } = create()\r\n        router.push(context.url)\r\n        router.onReady(() => {\r\n            const matchedComponents = router.getMatchedComponents()\r\n            if (!matchedComponents.length) {\r\n                return reject({ code: 404 })\r\n            }\r\n            resolve(app)\r\n        }, reject)\r\n    })\r\n}\r\n```\r\n\r\nthe first `client-entry`\r\n```\r\nimport Vue from 'vue'\r\nimport App from './App.vue'\r\nimport { createRouter } from './router'\r\nglobal.create = () => {\r\n    const router = createRouter()\r\n    const app = new Vue({\r\n        router,\r\n        render: h => h(App)\r\n    })\r\n    router.onReady(() => {\r\n        app.$mount('#app')\r\n    })\r\n    return { app, router }\r\n}\r\n\r\n```\r\n\r\nthe second `client-entry`\r\n```\r\nconst { app, router } = create()\r\ncreate = () => {\r\n    router.addRoutes([\r\n        { path: '/core/ppp', name: 'core', component: () => import('./Core.vue') }\r\n    ])\r\n    return {app, router}\r\n}\r\n```\r\n\r\nthe client render is work,but the server render can not found 'core' route,it's a bug,all i do something wrong?\r\n\r\n### What is expected?\r\nwork both of client and server render\r\n\r\n### What is actually happening?\r\nthe server render not work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6759194475","Type":"PullRequestEvent","CreatedAt":"2017-10-24T16:18:26","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1841","RelatedDescription":"Merged pull request \"[Doc EN]: Official Vue way to speak about a version and greater version.\" (#1841) at vuejs/vue-router","RelatedBody":"Hi @posva, we have seen with @chrisvfritz a way to harmonize speaking about a version and greater version has following:\r\n\r\n`product version` => only this version\r\n`product version+` => this version and greater (this one replace the old `product >= version` way)\r\n"},{"Id":"6757743002","Type":"PullRequestEvent","CreatedAt":"2017-10-24T12:00:05","Actor":"yyx990803","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1842","RelatedDescription":"Merged pull request \"chore: define the components using PascalCase\" (#1842) at vuejs/vue-router","RelatedBody":"- According to the [vue guide - Component Naming Conventions](https://vuejs.org/v2/guide/components.html#Component-Naming-Conventions):\r\n  > This means that the PascalCase is the most universal declaration convention and kebab-case is the most universal usage convention.\r\n- According to the [style guide - Component name casing in templates](https://vuejs.org/v2/style-guide/#Component-name-casing-in-templates-strongly-recommended):\r\n  > In most projects, component names should always be PascalCase in single-file components and string templates - but kebab-case in DOM templates."},{"Id":"6757741924","Type":"IssuesEvent","CreatedAt":"2017-10-24T11:59:49","Actor":"yyx990803","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1834","RelatedDescription":"Closed issue \"scroll.js: replaceState() is not supported in IE9\" (#1834) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### What is actually happening?\r\nIE9 throw the following error: `Object doesn't support this property or method \"replaceState\"`.\r\nThis was introduced here:\r\ncommit: https://github.com/vuejs/vue-router/commit/c166822cdc6cadd9f3c01085b877c86d74362b95\r\nrelated issue: https://github.com/vuejs/vue-router/issues/1585\r\n\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6757741710","Type":"PullRequestEvent","CreatedAt":"2017-10-24T11:59:46","Actor":"yyx990803","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1835","RelatedDescription":"Merged pull request \"fix #1834\" (#1835) at vuejs/vue-router","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nfix issue on browsers which do not support history API"},{"Id":"6757551423","Type":"PullRequestEvent","CreatedAt":"2017-10-24T11:14:54","Actor":"meteorlxy","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1842","RelatedDescription":"Opened pull request \"chore: define the components using PascalCase\" (#1842) at vuejs/vue-router","RelatedBody":"- According to the [vue guide - Component Naming Conventions](https://vuejs.org/v2/guide/components.html#Component-Naming-Conventions):\r\n  > This means that the PascalCase is the most universal declaration convention and kebab-case is the most universal usage convention.\r\n- According to the [style guide - Component name casing in templates](https://vuejs.org/v2/style-guide/#Component-name-casing-in-templates-strongly-recommended):\r\n  > In most projects, component names should always be PascalCase in single-file components and string templates - but kebab-case in DOM templates."}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6760522914","Type":"PullRequestEvent","CreatedAt":"2017-10-24T20:56:15","Actor":"RaneClowd","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1015","RelatedDescription":"Opened pull request \"Grammar fixes in core-concepts.md\" (#1015) at vuejs/vuex","RelatedBody":"Changing 'this chapters' to 'these chapters'  and 'in Vuex' to 'of Vuex'."},{"Id":"6759623859","Type":"PullRequestEvent","CreatedAt":"2017-10-24T17:45:19","Actor":"dominiquevilain","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1014","RelatedDescription":"Opened pull request \"Fixed missing word in getters.md\" (#1014) at vuejs/vuex","RelatedBody":"« Il ne sera évalué _que_ quand… » and maybe better « Il ne sera évalué _que lorsque_… »"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-25T05:30:32.2213815Z","RunDurationInMilliseconds":2127}