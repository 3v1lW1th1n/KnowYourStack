{"Data":{"GitHubIssues":{"Issues":[{"Id":"384595081","IsPullRequest":false,"CreatedAt":"2018-11-27T02:40:58","Actor":"DeanRoddey","Number":"1729","RawContent":null,"Title":"How does one do nested child content in the compnent derivation chain?","State":"open","Body":"So, how do you go about dealing with multiple levels of child content? Lets say you have this sequence of components deriving from each other:\r\n\r\nModal -> DialogBox -> MyPersonalDialogBox\r\n\r\nSo DialogBox wants to put the child content of MyPersonalDialogBox inside a DIV, with a title bar on top and buttons on the bottom. Modal wants to put DialogBox's content inside himself so that he can present that content modally.\r\n\r\nObviously we can use containment instead of derivation, and have that working fine, so DialogBox USES a modal component, and my dialog box USES a DialogBox component. But ultimately that's not how OO should work. My dialog box 'is a' dialog box which 'is a' modal component, and we want to have virtual methods that can be called from baser classes up to more derived classes, and helper methods that can accept any modal component or any dialog box and so forth.\r\n\r\nBut I can't figure out how to deal with the layered child content when doing it this way. No matter what I do, the content ends up not rendered within the parent class' embrace but outside of it, or I end up with one ChildContent hiding the other and so forth. It's probably something so utterly obvious I can't see it. \r\n","Url":"https://github.com/aspnet/Blazor/issues/1729","RelatedDescription":"Open issue \"How does one do nested child content in the compnent derivation chain?\" (#1729)"},{"Id":"384502989","IsPullRequest":false,"CreatedAt":"2018-11-26T21:48:36","Actor":"Knudel","Number":"1728","RawContent":null,"Title":"Strange behavior with select","State":"closed","Body":"I have the next code in a server side blazor page:\r\n\r\n```\r\n@page \"/\"\r\n\r\n<select id=\"test\" bind=\"@selectedval\">\r\n    <option value='1'>1</option>\r\n    <option value='2'>2</option>\r\n    <option value='3'>3</option>\r\n    <option value='4'>4</option>\r\n</select>\r\n\r\n@functions\r\n{\r\n    [Parameter]\r\n    protected string selectedval { get; set; } = \"2\";\r\n}\r\n```\r\n\r\n\r\nWhy is the second value not selected at startup, the selected value is 1?\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1728","RelatedDescription":"Closed issue \"Strange behavior with select\" (#1728)"},{"Id":"384486539","IsPullRequest":true,"CreatedAt":"2018-11-26T21:47:46","Actor":"SteveSandersonMS","Number":"1727","RawContent":null,"Title":"Attempt to fix build flakiness using \"npm ci\"","State":"closed","Body":"The main complexity is that we need NPM 5.7.0+, hence having to ensure all the CI systems are using a recent-enough version of Node.","Url":"https://github.com/aspnet/Blazor/pull/1727","RelatedDescription":"Closed or merged PR \"Attempt to fix build flakiness using \"npm ci\"\" (#1727)"},{"Id":"384485397","IsPullRequest":false,"CreatedAt":"2018-11-26T19:59:22","Actor":"cyberjaws","Number":"1726","RawContent":null,"Title":"Server Side Blazor First Client Receiving Second Client's Requests","State":"closed","Body":"Server Side Blazor:\r\nCreate a data service that connects to RabbitMQ and register the data service as a singleton.\r\nConnect a client and register for a callback event from the data service.\r\nMake a request to the data service. Request gets sent over MQ. Method returns.\r\n...wait for x ms...\r\nResponse come back over RabbitMQ and fires an event in the data service.\r\nEvent fires in client 1, check the results against a clientId created at startup, fire a JSInterop method on the client to update an image if the clientId matches the Id in the result.\r\nWith one client connected, the image comes through no problems. \r\nWith a second client connected the image gets returned to the first client and the correct clientId / image combo doesn't make it to the second client.\r\nThoughts?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1726","RelatedDescription":"Closed issue \"Server Side Blazor First Client Receiving Second Client's Requests\" (#1726)"},{"Id":"384294149","IsPullRequest":true,"CreatedAt":"2018-11-26T18:52:10","Actor":"SteveSandersonMS","Number":"1725","RawContent":null,"Title":"Decouple migrating code from non-migrating code","State":"closed","Body":"This PR changes the code that will migrate into the mondorepo so that it only consumes the nonmigrating code (`Microsoft.AspNetCore.Blazor.Mono`, `Microsoft.AspNetCore.Blazor.BuildTools`, JSInterop) via package references and no longer assumes the presence of their source files.\r\n\r\nThe nonmigrating code will continue to be built and shipped from the Blazor repo.","Url":"https://github.com/aspnet/Blazor/pull/1725","RelatedDescription":"Closed or merged PR \"Decouple migrating code from non-migrating code\" (#1725)"},{"Id":"383663783","IsPullRequest":false,"CreatedAt":"2018-11-26T15:19:24","Actor":"grahamehorner","Number":"1717","RawContent":null,"Title":".cshtml losing format layout","State":"closed","Body":"when using the current solution Components.sln the .cshtml files lose the layout/structure @functions code and intellisence","Url":"https://github.com/aspnet/Blazor/issues/1717","RelatedDescription":"Closed issue \".cshtml losing format layout\" (#1717)"},{"Id":"384096825","IsPullRequest":false,"CreatedAt":"2018-11-26T15:19:12","Actor":"mynkow","Number":"1724","RawContent":null,"Title":"VisualStudio command Edit.FormatDocument breaks the indention","State":"closed","Body":"When I am in VS and execute the command Edit.FormatDocument (CTRL+E,D) this happens= >\r\n\r\nhttps://gyazo.com/209c7bc8d065dcd7eef421f780e2682f","Url":"https://github.com/aspnet/Blazor/issues/1724","RelatedDescription":"Closed issue \"VisualStudio command Edit.FormatDocument breaks the indention\" (#1724)"},{"Id":"382250797","IsPullRequest":false,"CreatedAt":"2018-11-26T15:11:25","Actor":"grahamehorner","Number":"1701","RawContent":null,"Title":"Parameter attribute with data annotations","State":"closed","Body":"IMHO it would be great to allow the blazor components to enforce parameter contracts using the existing data annotations; eg. \r\n\r\n```\r\n[Required,Parameter,StringLength(80)]\r\nstring Name { get; set; }\r\n```\r\n\r\nthis would avoid a lot of boilerplate code with the components and/or replication of feature that exist in data annotation libraries today.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1701","RelatedDescription":"Closed issue \"Parameter attribute with data annotations\" (#1701)"},{"Id":"383616854","IsPullRequest":false,"CreatedAt":"2018-11-26T15:07:43","Actor":"JulienM28","Number":"1714","RawContent":null,"Title":"Events between two components","State":"closed","Body":"I have two components:\r\n\r\none selectlist and one \"View\"\r\n\r\nThe view is populated from datas depending on which element is selected in the select list.\r\n\r\nI seen It's possible to raise events from parents to children and inverse, but How to raise events between two components who are not parented ?\r\n\r\nThanks.","Url":"https://github.com/aspnet/Blazor/issues/1714","RelatedDescription":"Closed issue \"Events between two components\" (#1714)"},{"Id":"382645929","IsPullRequest":false,"CreatedAt":"2018-11-26T15:07:19","Actor":"BickelLukas","Number":"1704","RawContent":null,"Title":"Live reloading for Server Side Blazor","State":"closed","Body":"Is live reloading supported in server side blazor yet? \r\n\r\nIt should work just like it does with regular razor views in AspNetCore. ","Url":"https://github.com/aspnet/Blazor/issues/1704","RelatedDescription":"Closed issue \"Live reloading for Server Side Blazor\" (#1704)"},{"Id":"382999705","IsPullRequest":false,"CreatedAt":"2018-11-26T15:06:25","Actor":"clemenslinders","Number":"1705","RawContent":null,"Title":"Debugging blazor 0.7 Chrome keeps saying: Unable to find debuggable browser tab","State":"closed","Body":"LS,\r\n\r\nI am using Blazor 0.7, VS 15.9.2, Windows 10 (up to date), Chrome (up to date).\r\n\r\n- I set a breakpoint in my Blazor app. \r\n- I run it using Chrome. \r\n- I press Shift-Alt-D and I get the error \"Unable to find debugable browser tab\".\r\n- I close Chrome, \r\n- I press Windowsflag-R. \r\n- I enter: \"%programfiles(x86)%\\Google\\Chrome\\Application\\chrome.exe\" --remote-debugging-port=9222 http://localhost:52183/\r\n- Chrome reopens with my app\r\n- Again I press Shift-Alt-D\r\n- And again I get the error: \"Unable to find debugable browser tab\".\r\n\r\nI can do this many times and I keep getting that error.\r\n\r\nWhat can I do so that I can have at least some basic debugging capabilities??\r\n\r\nI assume it has nothing to do with my problem, but than again you never know:\r\n- At our compagny we are using a VPN connection to connect to the internet and many sites and ports are blocked by our mother compagny.\r\n\r\nCould it be a blocked port???\r\n\r\n\r\n\r\nKind regards,\r\n\r\n\r\n\r\nClemens Linders","Url":"https://github.com/aspnet/Blazor/issues/1705","RelatedDescription":"Closed issue \"Debugging blazor 0.7 Chrome keeps saying: Unable to find debuggable browser tab\" (#1705)"},{"Id":"383425127","IsPullRequest":false,"CreatedAt":"2018-11-26T15:05:01","Actor":"ivanchev","Number":"1711","RawContent":null,"Title":"Using Templated components and Cascading components together throws compile time errors","State":"closed","Body":"Using the [TabStrip sample](https://gist.github.com/SteveSandersonMS/f10a552e1761ff759b1631d81a4428c3), if you add a RenderFragment TabTemplate property, you cannot set both <Tab> and <TabTemplate> inside the TabSet:\r\n`\r\n<TabSet>\r\n    <TabTemplate>Template</TabTemplate>\r\n    <Tab Title=\"First tab\">\r\n        <h4>First tab</h4>\r\n        This is the first tab.\r\n    </Tab>\r\n    ...\r\n`\r\nSetting either one by itself works fine. Is this an intended limitation?","Url":"https://github.com/aspnet/Blazor/issues/1711","RelatedDescription":"Closed issue \"Using Templated components and Cascading components together throws compile time errors\" (#1711)"},{"Id":"383623129","IsPullRequest":false,"CreatedAt":"2018-11-26T15:04:37","Actor":"grahamehorner","Number":"1715","RawContent":null,"Title":"Update of build instructions","State":"closed","Body":"Please update instruction with regards to the pre-requisites for build/testing\r\n\r\n\r\n---- System.InvalidOperationException : Failed to connect to the web driver. Please see the readme and follow the instructions to install selenium.Remember to start the web driver with `selenium-standalone start` before running the end-to-end tests.\r\n-------- OpenQA.Selenium.WebDriverException : unknown error: cannot find Chrome binary\r\n  (Driver info: chromedriver=2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a),platform=Windows NT 10.0.17763 x86_64) (WARNING: The server did not provide any stacktrace information)\r\nCommand duration or timeout: 575 milliseconds\r\nBuild info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:22:52'\r\nSystem info: host: 'DESKTOP-I3STUNL', ip: '192.168.1.107', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_191'\r\nDriver info: driver.version: unknown\r\n---- The following constructor parameters did not have matching ","Url":"https://github.com/aspnet/Blazor/issues/1715","RelatedDescription":"Closed issue \"Update of build instructions\" (#1715)"},{"Id":"383954480","IsPullRequest":false,"CreatedAt":"2018-11-26T15:03:50","Actor":"TheColonel2688","Number":"1720","RawContent":null,"Title":"Question: Is in Visual Studio debugging planned for Client Side Blazor? ","State":"closed","Body":"Is in Visual Studio debugging planned for Client side Blazor? In other words: the ability to have visual studios attach to the blazor app process in the browser rather than using the Chrome debug UI. ","Url":"https://github.com/aspnet/Blazor/issues/1720","RelatedDescription":"Closed issue \"Question: Is in Visual Studio debugging planned for Client Side Blazor? \" (#1720)"},{"Id":"384004522","IsPullRequest":false,"CreatedAt":"2018-11-26T15:01:58","Actor":"yself","Number":"1721","RawContent":null,"Title":"Blazor server-side and static fields","State":"closed","Body":"I am wondering about behavior of static fields in server-side blazor. Since the server is a single process, static field values are shared between all sessions. There are no app-domains in .net core to isolate values between sessions. This behavior is inconsistent with client-side blazor, where static fields behave like one might assume, one value per client application/session.\r\n\r\nLot of simple cases where static fields might be used can be solved with DI, but there are a lot of world cases, and a lot of existing code/libraries, where shared value between sessions might be a problem.\r\n\r\nI mainly worry about the inconsistency between client and server side blazor. Since a lot of articles I read tend to say, that if a code is designed \"correctly\", it should work on both, client and server side blazor almost transparently. Such inconsistency of a core language feature as are static fields might be a problem for some.\r\n\r\nHas there been any thought about this issue?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1721","RelatedDescription":"Closed issue \"Blazor server-side and static fields\" (#1721)"},{"Id":"384074251","IsPullRequest":false,"CreatedAt":"2018-11-26T14:49:48","Actor":"AndreasTruetschel","Number":"1722","RawContent":null,"Title":"Return the created component from BrowserRenderer.AddComponent","State":"closed","Body":"I have a sceanrio that I need to render a `RenderFragment` into a given `<div>` element, provided by javascript. For this, I create a component to wrap my `RenderFragment` and render it via an instance of the `BrowserRenderer`. The problem is that I cannot pass the concrete `RenderFragment` to the component rendered by the `BrowserRenderer`. The easiest solution is to return the created component from the `AddComponent` method of the `BrowserRenderer`.\r\n\r\nThe concrete scenario is to draw arbitrary content into a leaflet div-icon.\r\n\r\nThis could also be used to pass the entry assembly into the router component without the workaround of the `App` component. \r\n\r\n```\r\nvar router = app.AddComponent<Router>(\"app\");\r\nrouter.EntryAssembly = Assembly.GetEntryAssembly();\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1722","RelatedDescription":"Closed issue \"Return the created component from BrowserRenderer.AddComponent\" (#1722)"},{"Id":"383156887","IsPullRequest":false,"CreatedAt":"2018-11-26T07:39:14","Actor":"clemenslinders","Number":"1707","RawContent":null,"Title":"Using Blazor serverside and HttpWebRequest I get service not available","State":"closed","Body":"LS,\r\n\r\nAs I understand using the serverside Blazor there is a lot more possible.\r\nI want to transfere a MVC solution into Blazor.\r\n\r\nThis MVC solution uses HttpWebRequest to get data from a server.\r\nBut when I use this in my Blazor server side solution I get the error 503: Service not available.\r\n\r\nOf course the service is available and up and running.\r\n\r\nIs there something I can do so that I do not get this error??\r\n\r\n\r\n\r\nKind regards,\r\n\r\n\r\n\r\nClemens Linders","Url":"https://github.com/aspnet/Blazor/issues/1707","RelatedDescription":"Closed issue \"Using Blazor serverside and HttpWebRequest I get service not available\" (#1707)"},{"Id":"384088776","IsPullRequest":false,"CreatedAt":"2018-11-25T15:21:57","Actor":"mwinkler","Number":"1723","RawContent":null,"Title":"'bind' does not accept values of type System.DateTimeOffset","State":"open","Body":"If I try to bind the type `System.DateTimeOffset` I get a\r\n\r\n> System.ArgumentException: 'bind' does not accept values of type System.DateTimeOffset. To read and write this value type, wrap it in a property of type string with suitable getters and setters.\r\n\r\nExample:\r\n\r\n`<input type=\"date\" class=\"form-control\" bind=@Timestamp />`","Url":"https://github.com/aspnet/Blazor/issues/1723","RelatedDescription":"Open issue \"'bind' does not accept values of type System.DateTimeOffset\" (#1723)"},{"Id":"383887100","IsPullRequest":false,"CreatedAt":"2018-11-23T16:56:04","Actor":"xclud","Number":"1719","RawContent":null,"Title":"Question about future on ASP.NET Core 3.0 & Components","State":"open","Body":"Currently we use an static html file with an <app /> tag and a script which does the magic. I am making a PWA for my nextgen product and i am wondering how it will be to integrate Components (Blazor) into Razor pages (Or MVC pages).\r\n\r\nTalking about Server-side Rendering specifically, Ideally i am thinking of putting some components tags (e.g using tag helpers?!) directly into the razor pages and i will get those parts of my pages updated in-place.\r\n\r\nIs there any overview as we are currently in version 0.8 ? I appreciate any enlightenment.","Url":"https://github.com/aspnet/Blazor/issues/1719","RelatedDescription":"Open issue \"Question about future on ASP.NET Core 3.0 & Components\" (#1719)"},{"Id":"383785598","IsPullRequest":true,"CreatedAt":"2018-11-23T13:31:44","Actor":"SteveSandersonMS","Number":"1718","RawContent":null,"Title":"Code migration phase 3 - Move Mono binaries to their own package","State":"closed","Body":"Continuation of #1706 and #1708\r\n\r\n### Migration steps\r\n\r\n1. ~~Reorganise all the files~~ Done in #1706\r\n2. ~~Rename projects/packages/namespaces~~ Done in #1708 \r\n3. **Obtain Mono binaries from some new external package instead of hosting them here <-- this PR**\r\n4. Actually move the code into the mondo-repo\r\n5. All ongoing refactoring, e.g., to take dependencies on 3.0 packages/tooling, to separate out WASM-specific aspects (e.g., in build system and middleware), etc. This is an open-ended task.\r\n","Url":"https://github.com/aspnet/Blazor/pull/1718","RelatedDescription":"Closed or merged PR \"Code migration phase 3 - Move Mono binaries to their own package\" (#1718)"},{"Id":"383406235","IsPullRequest":false,"CreatedAt":"2018-11-23T06:51:49","Actor":"auc31","Number":"1710","RawContent":null,"Title":"blazor update 0.6 to 0.7","State":"closed","Body":"hi\r\n\r\nwe have upgrated all project in our 0.6 blazor solution but when we execute (F5) the page stay on \"LOADING....\" text, not load the blazor site\r\n\r\nhave you got a idea ?","Url":"https://github.com/aspnet/Blazor/issues/1710","RelatedDescription":"Closed issue \"blazor update 0.6 to 0.7\" (#1710)"},{"Id":"383648613","IsPullRequest":true,"CreatedAt":"2018-11-22T20:17:18","Actor":"grahamehorner","Number":"1716","RawContent":null,"Title":"OnBeforeRender","State":"open","Body":"Added OnBeforeRender event to component ref: https://github.com/aspnet/Blazor/issues/1709\r\n","Url":"https://github.com/aspnet/Blazor/pull/1716","RelatedDescription":"Open PR \"OnBeforeRender\" (#1716)"},{"Id":"383579049","IsPullRequest":true,"CreatedAt":"2018-11-22T15:42:44","Actor":"SteveSandersonMS","Number":"1713","RawContent":null,"Title":"Re-add templates to .sln","State":"closed","Body":"They had to be removed temporarily during the renames. Now they're back.","Url":"https://github.com/aspnet/Blazor/pull/1713","RelatedDescription":"Closed or merged PR \"Re-add templates to .sln\" (#1713)"},{"Id":"383180115","IsPullRequest":true,"CreatedAt":"2018-11-22T12:19:12","Actor":"SteveSandersonMS","Number":"1708","RawContent":null,"Title":"Code migration part 2: Renames","State":"closed","Body":"Continuation of #1706 \r\n\r\n### Migration steps\r\n\r\n1. ~~Reorganise all the files~~ Done in #1706\r\n2. **Rename projects/packages/namespaces <-- this PR**\r\n3. Obtain Mono binaries from some new external package instead of hosting them here\r\n4. Actually move the code into the mondo-repo\r\n5. All ongoing refactoring, e.g., to take dependencies on 3.0 packages/tooling, to separate out WASM-specific aspects (e.g., in build system and middleware), etc. This is an open-ended task.\r\n\r\n### Review notes\r\n\r\nAgain, there are no (intended) functional changes here, besides public API name changes. The PR is just a vast amount of renaming things. It also affects every single compiler baseline so the number of files updated is so large.\r\n\r\nI know nobody can realistically \"review\" this PR, which is partly why I'm doing all these non-functional updates together and keeping the functional change (step 3 above) separate so it actually can be reviewed. So, when it's finished and the build looks good, I'm going to proceed to merge. @rynowak @javiercn If you do want to check any part of this please feel free - I'm happy to make further changes later.","Url":"https://github.com/aspnet/Blazor/pull/1708","RelatedDescription":"Closed or merged PR \"Code migration part 2: Renames\" (#1708)"},{"Id":"383427098","IsPullRequest":true,"CreatedAt":"2018-11-22T08:29:54","Actor":"aghanem","Number":"1712","RawContent":null,"Title":"linking to some existing docs","State":"open","Body":"This is to add links to the existing Blazor docs site. In addition, we may need to convert this item\"Live reloading in the browser during development\" to a link to the debugging page but I first the debugging docs need some enhancements like adding IDE debugging and details about live reloading (maybe using dotnet command line tool ?)\r\n","Url":"https://github.com/aspnet/Blazor/pull/1712","RelatedDescription":"Open PR \"linking to some existing docs\" (#1712)"},{"Id":"383253032","IsPullRequest":false,"CreatedAt":"2018-11-21T18:54:23","Actor":"grahamehorner","Number":"1709","RawContent":null,"Title":"BeforeRender event","State":"open","Body":"Please consider adding a IHandleBeforeRender interface with the method void OnBeforeRender(); to allow components to perform some action prior to rendering; i.e. changing parameters as a result of validation errors or fetching/triggering data cache expiry/refresh\r\n","Url":"https://github.com/aspnet/Blazor/issues/1709","RelatedDescription":"Open issue \"BeforeRender event\" (#1709)"},{"Id":"383014887","IsPullRequest":true,"CreatedAt":"2018-11-21T15:17:33","Actor":"SteveSandersonMS","Number":"1706","RawContent":null,"Title":"Code migration, step 1","State":"closed","Body":"We're in the process of migrating code from the Blazor repo into the [central ASP.NET Core repo](https://github.com/aspnet/aspnetcore). This is because (1) we're moving most of our repos into the central one, and (2) we've committed to ship the Razor Components programming model in ASP.NET Core 3.0.\r\n\r\nFor more info about what we've announced will ship in 3.0, see [this blog post](https://blogs.msdn.microsoft.com/webdev/2018/10/02/blazor-0-6-0-experimental-release-now-available/#razor-components-to-ship-with-asp-net-core-in-net-core-3-0). TLDR: server-side Blazor ships in 3.0 and gets the name \"Razor Components\", while client-side (WebAssembly) Blazor remains experimental to give more time to make the underlying runtime truly production grade.\r\n\r\n### Migration steps\r\n\r\n1. **Reorganise all the files <-- this PR**\r\n2. Rename projects/packages/namespaces\r\n3. Obtain Mono binaries from some new external package instead of hosting them here\r\n4. Actually move the code into the mondo-repo\r\n5. All ongoing refactoring, e.g., to take dependencies on 3.0 packages/tooling, to separate out WASM-specific aspects (e.g., in build system and middleware), etc. This is an open-ended task.\r\n\r\n### Review notes\r\n\r\nThere's nothing interesting in this PR. It's just a vast amount of moving files, tracking down all their references to each other, and updating all those references. The output from the build system should be unchanged.\r\n\r\nThe reason I separated the \"reorganise files\" step from \"rename content\" (e.g., namespaces) is because it's the \"reorganise\" step that causes all the unreadable noise in the Git diffs. Also, the \"reorganise\" step is nearly impossible to reconcile with unrelated changes, so until this is merged, we can't make any other changes in the repo.\r\n\r\nSo, @rynowak @javiercn @pranavkm @danroth27 @mkArtakMSFT: **please don't commit any other changes to the Blazor repo until this PR is merged**. I don't think I could realistically rebase this PR onto any new work!","Url":"https://github.com/aspnet/Blazor/pull/1706","RelatedDescription":"Closed or merged PR \"Code migration, step 1\" (#1706)"},{"Id":"382383193","IsPullRequest":false,"CreatedAt":"2018-11-20T20:41:08","Actor":"rodolfograve","Number":"1703","RawContent":null,"Title":"await inside OnInitAsync causes the browser to hang","State":"closed","Body":"Similar to #1242 but I can consistently reproduce and it happens on the simplest Component. No Layout involved. Happened on 0.6.0 and kept happening after I upgraded to 0.7.0.\r\n\r\nIt is a very strange behavior which points to some mishandling of asynchronous actions inside OnInitAsync.\r\n\r\n### Version that behaves as expected\r\n\r\nThe code below **fails** as expected. A System.NullReferenceException is shown in the browser console.\r\n\r\n```\r\n@page \"/\"\r\n<div>\r\n    @foreach (var item in Items)\r\n    {\r\n        <div>@item</div>\r\n    }\r\n</div>\r\n\r\n@functions {\r\n    protected IEnumerable<string> Items { get; set; }\r\n}\r\n```\r\n\r\n**Result:** `Uncaught (in promise) Error: System.NullReferenceException: Object reference not set to an instance of an object.`\r\n\r\n### Version that **works** as expected\r\n```\r\n@page \"/\"\r\n<div>\r\n    @foreach (var item in Items)\r\n    {\r\n        <div>@item</div>\r\n    }\r\n</div>\r\n\r\n@functions {\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        await Task.CompletedTask;\r\n        Items = new[] { \"item1\" };\r\n    }\r\n\r\n    protected IEnumerable<string> Items { get; set; }\r\n}\r\n```\r\n\r\n**Result:** item1 is shown on the screen.\r\n\r\n### Version that unexpectedly hangs up\r\n```\r\n@page \"/\"\r\n<div>\r\n    @foreach (var item in Items)\r\n    {\r\n        <div>@item</div>\r\n    }\r\n</div>\r\n\r\n@functions {\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        await Task.Delay(1); // This line is the only difference\r\n        Items = new[] { \"item1\" };\r\n    }\r\n\r\n    protected IEnumerable<string> Items { get; set; }\r\n}\r\n```\r\n**Result:** An exception is shown in the console (which I wasn't expecting), and from that point on the browser becomes unresponsive and I need to close the tab and re-run the Blazor application.\r\n\r\n`Uncaught (in promise) Error: System.NullReferenceException: Object reference not set to an instance of an object.`","Url":"https://github.com/aspnet/Blazor/issues/1703","RelatedDescription":"Closed issue \"await inside OnInitAsync causes the browser to hang\" (#1703)"},{"Id":"382314625","IsPullRequest":true,"CreatedAt":"2018-11-19T17:15:46","Actor":"kswoll","Number":"1702","RawContent":null,"Title":"Ignore non-public setters in analyzer","State":"open","Body":"Currently if you have a property like:\r\n\r\n```\r\n[Parameter] public string Foo { get; private set; }\r\n```\r\n\r\nThe analzyer emits a warning about public properties with a `[Parameter]` attribute specified.  Since the reason for this warning is about calling the setter (and mutating state at improper points in the rendering cycle) explicit non-public setters should be ignored.\r\n\r\nSee https://github.com/aspnet/Blazor/issues/1388#issuecomment-439650736 for more elaboration","Url":"https://github.com/aspnet/Blazor/pull/1702","RelatedDescription":"Open PR \"Ignore non-public setters in analyzer\" (#1702)"},{"Id":"382116952","IsPullRequest":false,"CreatedAt":"2018-11-19T09:06:26","Actor":"fs86","Number":"1700","RawContent":null,"Title":"Js initialization in OnAfterRender stopped working with 0.7.0","State":"open","Body":"After I upgraded to Blazor 0.7.0 I noticed that initialization scripts of 3rd party JavaScript libraries which I usually call in OnAfterRender stopped working.\r\nE.g. I use select2 (https://github.com/select2/select2) to apply a custom style for my select fields. But it seems like something has changed with Blazor 0.7.0, because the following code (which used to work in 0.6.0) dosn't work anymore:\r\n\r\n```\r\nprotected override void OnAfterRender()\r\n{\r\n  base.OnAfterRender();\r\n  JsInterop.InitializeSelect2();\r\n}\r\n```\r\n\r\nMy JavaScript function:\r\n```\r\nwindow.JsFunctions = {\r\n  initializeSelect2: function() {\r\n    $('select').select2();\r\n  }\r\n}\r\n```\r\nThe control style will get applied when I call StateHasChanged() after JsInterop.InitializeSelect2(), but this will end up in an endless loop. Is there a better place to call InitializeSelect2() than OnAfterRender?\r\n\r\n**Edit:**\r\nI found the following statement about lifecycle methods in the official documentation:\r\n\r\n> OnAfterRenderAsync and OnAfterRender are called each time after a component has finished rendering. Element and component references are populated at this point. **Use this stage to perform additional initialization steps using the rendered content, such as activating third-party JavaScript libraries that operate on the rendered DOM elements.**\r\n\r\nAfter doing a bit of research I can say that the corresponding field is not accessible in OnAfterRender.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1700","RelatedDescription":"Open issue \"Js initialization in OnAfterRender stopped working with 0.7.0\" (#1700)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-11-27T05:30:03.0799948Z","RunDurationInMilliseconds":1667}