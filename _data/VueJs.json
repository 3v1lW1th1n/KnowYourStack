{"Data":{"Vue-Issues":{"Issues":[{"Id":"462996327","IsPullRequest":false,"CreatedAt":"2019-07-02T03:08:12","Actor":"jeeinn","Number":"10218","RawContent":null,"Title":"vue ui: ERROR  Failed fetching remote preset","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/youzan/vant-demo](https://github.com/youzan/vant-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpening E:\\Project\\nodejs\\hello-world...\r\n-  Fetching remote preset git@github.com:youzan/vant-demo.git...\r\n✔  Fetching remote preset git@github.com:youzan/vant-demo.git...\r\n ERROR  Failed fetching remote preset git@github.com:youzan/vant-demo.git:\r\nError: 'git clone' failed with status 128\r\n    at ChildProcess.<anonymous> (C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli\\node_modules\\git-clone\\index.js:33:22)\r\n    at ChildProcess.emit (events.js:198:13)\r\n    at ChildProcess.EventEmitter.emit (domain.js:448:20)\r\n    at maybeClose (internal/child_process.js:982:16)\r\n    at Socket.stream.socket.on (internal/child_process.js:389:11)\r\n    at Socket.emit (events.js:198:13)\r\n    at Socket.EventEmitter.emit (domain.js:448:20)\r\n    at Pipe._handle.close (net.js:606:12)\r\nTypeError: Cannot read property 'indexOf' of undefined\r\n    at progress.wrap (C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli\\node_modules\\@vue\\cli-ui\\apollo-server\\connectors\\projects.js:274:35)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n\r\n\r\n### What is expected?\r\n弹出无预置方案，提示错误\r\n\r\n### What is actually happening?\r\nui 直接 hang 住了\r\n\r\n---\r\n出错后 ui 直接 hang 住了，能不能友好捕捉并弹出提示错误\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10218","RelatedDescription":"Closed issue \"vue ui: ERROR  Failed fetching remote preset\" (#10218)"},{"Id":"462986058","IsPullRequest":true,"CreatedAt":"2019-07-02T02:13:31","Actor":"Kermit-Xuan","Number":"10217","RawContent":null,"Title":"fix(warn): regular slot and scoped slot with same name shouldn't be allowed(fix #10149)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10217","RelatedDescription":"Open PR \"fix(warn): regular slot and scoped slot with same name shouldn't be allowed(fix #10149)\" (#10217)"},{"Id":"462717390","IsPullRequest":false,"CreatedAt":"2019-07-01T14:30:48","Actor":"Mighty683","Number":"10216","RawContent":null,"Title":"Handling loading in local registered components is not working.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-sejok](https://codesandbox.io/s/vue-template-sejok)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry to lazy load local registered component the way described here:\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\nMinimal repro:\r\nhttps://codesandbox.io/s/vue-template-sejok\r\n\r\n### What is expected?\r\nDisplaying loader component before rendering target component like described in:\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\n\r\n### What is actually happening?\r\nComponent is displayed after promise resolving without displaying loader before.\r\n\r\n---\r\nI don't know if this is a bug if not I think this should be feature request because for creating PWA displaying loaders during preparing app to work is crucial.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10216","RelatedDescription":"Closed issue \"Handling loading in local registered components is not working.\" (#10216)"},{"Id":"462693630","IsPullRequest":false,"CreatedAt":"2019-07-01T12:47:27","Actor":"tcastelly","Number":"10215","RawContent":null,"Title":"Error from watchers not captured","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/shenron/kbuymoz0/](https://jsfiddle.net/shenron/kbuymoz0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a watcher, and reject a promise inside.\r\n\r\n### What is expected?\r\nVue should capture the reject with `errorCaptured`\r\n\r\n### What is actually happening?\r\nThe reject has not been captured\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10215","RelatedDescription":"Closed issue \"Error from watchers not captured\" (#10215)"},{"Id":"462647068","IsPullRequest":false,"CreatedAt":"2019-07-01T10:59:14","Actor":"clopezcapo","Number":"10214","RawContent":null,"Title":"Memory leak in PROD version","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/issues/10004](https://github.com/vuejs/vue/issues/10004)\r\n\r\n\r\n### Steps to reproduce\r\nPlease follow the steps here: https://github.com/vuejs/vue/issues/10004\r\n\r\n- go to the about page\r\n- type in the input\r\n- leave the page\r\n- collect garbage and take a snapshot with devtools\r\n\r\n### What is expected?\r\nVueComponent count should be stable\r\n\r\n### What is actually happening?\r\nVueComponent count keeps increasing.\r\n\r\n---\r\nIMPORTANT:\r\n\r\nAlso happens in the PROD version. It looks like a crucial fix to do.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10214","RelatedDescription":"Closed issue \"Memory leak in PROD version\" (#10214)"},{"Id":"462641032","IsPullRequest":false,"CreatedAt":"2019-07-01T10:40:16","Actor":"clopezcapo","Number":"10213","RawContent":null,"Title":"IMPORTANT! Memory leak in PROD version","State":"closed","Body":"I've just found out that this issue is present in the PROD version as well. This is a potential killer for production environments. Does anybody know if the community is aware? \r\n\r\nhttps://github.com/vuejs/vue/issues/10004","Url":"https://github.com/vuejs/vue/issues/10213","RelatedDescription":"Closed issue \"IMPORTANT! Memory leak in PROD version\" (#10213)"},{"Id":"462525139","IsPullRequest":false,"CreatedAt":"2019-07-01T06:41:39","Actor":"ronggang","Number":"10212","RawContent":null,"Title":"关于 v-if 指令的疑问","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/ronggang/pen/PrQXVM](https://codepen.io/ronggang/pen/PrQXVM)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- 不停的点击 `type1` 和 `type2`；\r\n- 在  `<input id=\"input1\"/>` 后面会添加很多个 `div`；而不是预期的只会添加一个 `div`；\r\n- 这样好像没有体现出 `v-if` 的作用？还是我对 `v-if` 的理解有误？或者 vue 缓存了一些东西？\r\n\r\n### What is expected?\r\n在使用 `v-if` 进行不同 `DOM` 切换时，希望可以删除所有后期动态添加的 `DOM`；\r\n\r\n比如像这个\r\nhttps://codepen.io/ronggang/pen/PrQXVM\r\n给一个 `div` 添加 id，就可以删除动态添加的子 DOM；但如何给两个 `div` 都添加 id，就又不能清除由 renderUI 创建 `div` 子 DOM。\r\n\r\n### What is actually happening?\r\n未能正常清除动态创建子 DOM。\r\n\r\n---\r\n由于老项目中使用了一些 jQuery 组件，由于这些组件会动态渲染DOM，但最近在加入 vue 库时遇到一些问题；上面的问题是对实际项目的简化，但大概过程类似；由于 vue 初学，对于有些概念可能理解的不是很到位，请各位帮忙解答一下，谢谢！\r\n由这些 jQuery 组件暂时无法全部转为 Vue 组件，所以只能混合使用。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10212","RelatedDescription":"Closed issue \"关于 v-if 指令的疑问\" (#10212)"},{"Id":"462416915","IsPullRequest":false,"CreatedAt":"2019-06-30T15:27:08","Actor":"18959263172","Number":"10211","RawContent":null,"Title":"this.$route.path incorrect when url have params","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10211","RelatedDescription":"Closed issue \"this.$route.path incorrect when url have params\" (#10211)"},{"Id":"462415074","IsPullRequest":false,"CreatedAt":"2019-06-30T15:16:46","Actor":"18959263172","Number":"10210","RawContent":null,"Title":"this.$route.path incorrect when url have params","State":"closed","Body":"### Version\r\n2.6.9\r\n\r\n### Reproduction link\r\n[https://codepen.io/18959263172/pen/GbQOQy](https://codepen.io/18959263172/pen/GbQOQy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen I visit with url '/article' \r\nthis.$route.path is right and the value is '/article'\r\nwhen I visit with url '/article/1'\r\nbut  the value of this.$route.path that console put out is '/'\r\n\r\n### What is expected?\r\n'/article/1'\r\nthis.$route.path is like '/article/1'\r\n\r\n### What is actually happening?\r\nthis.$route.path is  '/'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10210","RelatedDescription":"Closed issue \"this.$route.path incorrect when url have params\" (#10210)"},{"Id":"462350925","IsPullRequest":false,"CreatedAt":"2019-06-30T03:51:04","Actor":"delta1186","Number":"10209","RawContent":null,"Title":"V-bind error on ignored elements","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/delta1186/2eLknsbc/12/](https://jsfiddle.net/delta1186/2eLknsbc/12/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have given additional information in the fiddle, but in the fiddle if you remove the html comment tag and run the fiddle the app with break with the [Vue warn]: Error compiling template:The value for a v-bind expression cannot be empty. Found in \"v-bind:\" error.\r\n\r\n\r\n\r\n### What is expected?\r\nThe app should render since the tag is set to be ignored.\r\n\r\n### What is actually happening?\r\nIgnored tags via still throw v-bind errors in special cases.  Described in fiddle.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10209","RelatedDescription":"Closed issue \"V-bind error on ignored elements\" (#10209)"},{"Id":"462319468","IsPullRequest":true,"CreatedAt":"2019-06-29T16:47:52","Actor":"BabyManisha","Number":"10208","RawContent":null,"Title":"fix(warning): Add context to warn message (close #10153)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfils these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nFixes #10153","Url":"https://github.com/vuejs/vue/pull/10208","RelatedDescription":"Open PR \"fix(warning): Add context to warn message (close #10153)\" (#10208)"},{"Id":"462283621","IsPullRequest":false,"CreatedAt":"2019-06-29T09:11:46","Actor":"Tengjungui","Number":"10207","RawContent":null,"Title":"Hello, thank you for taking time filling this issue!","State":"closed","Body":"Hello, thank you for taking time filling this issue! \r\n\r\nHowever, we kindly ask you to use our [Issue Helper](https://new-issue.vuejs.org/?repo=vuejs/vue) when creating new issues, in order to ensure every issue provides the necessary information for us to investigate. This explains why your issue has been automatically closed by me (your robot friend!). \r\n\r\nI hope to see your helper-created issue very soon!\r\n\r\n---\r\n你好，你的 issue 不符合我们所要求的格式，因此已被自动关闭。为了确保每个 issue 都提供必需的相关信息，请务必使用我们的 [Issue 向导](https://new-issue.vuejs.org/?repo=vuejs/vue) 来创建新 issue，谢谢！\r\n\r\n_Originally posted by @vue-bot in https://github.com/vuejs/vue/issues/10206#issuecomment-506941687_","Url":"https://github.com/vuejs/vue/issues/10207","RelatedDescription":"Closed issue \"Hello, thank you for taking time filling this issue!\" (#10207)"},{"Id":"462283057","IsPullRequest":false,"CreatedAt":"2019-06-29T09:03:41","Actor":"Tengjungui","Number":"10206","RawContent":null,"Title":"作用域插槽问题","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/10206","RelatedDescription":"Closed issue \"作用域插槽问题\" (#10206)"},{"Id":"462141684","IsPullRequest":false,"CreatedAt":"2019-06-28T18:20:29","Actor":"vaartis","Number":"10205","RawContent":null,"Title":"A way to render a template with whitelisted directives","State":"closed","Body":"### What problem does this feature solve?\r\nIt would be good to have a way to render a template that includes user-provided content, while only interpreting a whitelist of directives/components and rendering only those, while ignoring all others. In my particular case, i was trying to build a comment section that allows people to put a spoiler/collapse at any point in the comment and tried to use Bootstrap-Vue's collapse ( https://bootstrap-vue.js.org/docs/components/collapse/#collapse ), however, that would require vue actually interpreting the comment that might have other directive input by the user, thus it would be good to have a way to only interpret certain whitelisted directives and components in the template.\r\n\r\n### What does the proposed API look like?\r\nNot sure about how the API'd look like, but maybe something like a `whitelist` in the component  would make it only interpret these directives, like this:\r\n\r\n```\r\n{\r\n    template: \"<Post /> <!-- works --> <v-directive>test</v-directive> <!-- does not expand and if left as is, not in whitelist -->\"\r\n    whitelist: [\"Post\"]\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10205","RelatedDescription":"Closed issue \"A way to render a template with whitelisted directives\" (#10205)"},{"Id":"461273231","IsPullRequest":false,"CreatedAt":"2019-06-27T09:51:06","Actor":"cliffordh","Number":"10203","RawContent":null,"Title":"IE11 - Promise is undefined","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[http://jspellsite2018-1.us-east-1.elasticbeanstalk.com](http://jspellsite2018-1.us-east-1.elasticbeanstalk.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have specified in babel.config.js:\r\n\r\n// babel.config.js\r\nmodule.exports = {\r\n  presets: [\r\n    ['@vue/app', {\r\n      polyfills: [\r\n        'es6.promise',\r\n        'es6.symbol',\r\n        'es6.object.assign'\r\n      ]\r\n    }]\r\n  ]\r\n}\r\n\r\nI have NOT imported anything in main.js.\r\n\r\nI am using vue-cli-service build\r\n\r\nHowever, when executing in IE11 I get the immediate error Promise is undefined.\r\n\r\nIf I try to import @babel/polyfill then I get an error saying I should use useBuiltIns: 'entry'. But that will include too many polyfills.\r\n\r\nIt appears that vue-cli-service build is not including the polyfills I've specfied above.\r\n\r\nAny ideas?\r\n\r\n### What is expected?\r\nPolyfills are loaded\r\n\r\n### What is actually happening?\r\nNot loaded\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10203","RelatedDescription":"Closed issue \"IE11 - Promise is undefined\" (#10203)"},{"Id":"461362439","IsPullRequest":false,"CreatedAt":"2019-06-27T09:46:31","Actor":"meyt","Number":"10204","RawContent":null,"Title":"Checkbox state stuck","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/meytighg/5etmnsuv/16/](http://jsfiddle.net/meytighg/5etmnsuv/16/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere is a simple ToDo http://jsfiddle.net/meytighg/5etmnsuv/16/\r\nwith two list, `Tasks` and `Finished Tasks`.\r\n\r\n\r\nBased on reproduction link:\r\n\r\n- Click on item 1 checkbox from `Finished Tasks`\r\n\r\n\r\n### What is expected?\r\nItem 1 removed from `Finished Tasks`\r\n\r\n\r\n### What is actually happening?\r\nItem 1 removed from `Finished Tasks`, but item 2 is unchecked on `Finished List`.\r\n\r\n---\r\nThis unexpected behavior is exist on Vue >= 2.6.0.\r\n\r\nFor example Vue 2.5.9 is fine. http://jsfiddle.net/meytighg/5etmnsuv/18/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10204","RelatedDescription":"Closed issue \"Checkbox state stuck\" (#10204)"},{"Id":"461251744","IsPullRequest":true,"CreatedAt":"2019-06-27T01:17:41","Actor":"Vontus","Number":"10202","RawContent":null,"Title":"feat(events): add .emit event modifier (fix #9325)","State":"open","Body":"fix #9325\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10202","RelatedDescription":"Open PR \"feat(events): add .emit event modifier (fix #9325)\" (#10202)"},{"Id":"460504347","IsPullRequest":true,"CreatedAt":"2019-06-26T16:37:14","Actor":"grandsong","Number":"10193","RawContent":null,"Title":"fix #10184: Recognize assigment in v-if and do not throw warning","State":"closed","Body":"The [original issue #10184](https://github.com/vuejs/vue/issues/10184) is too long, and I've made some mistakes when writing it.\r\n\r\nHere, I will rephrase the issue, and explain my solution.\r\n\r\n## What problem?\r\n\r\n### Demos\r\n\r\nHere are two demo for comparison.\r\n\r\n1. [Vanilla vue.js warns when assigment in v-if happens](https://codepen.io/grandsong/pen/xoLxvM)\r\n2. [My modified vue.js doesn't warn when assigment in v-if happens](https://codepen.io/grandsong/pen/PrKwQj)\r\n\r\nRemember to open Dev Tools and check the Console.\r\n\r\nThe code in question is `<span v-if=\"pet = person.pet\">`.\r\n\r\n### What happens in vanilla vue.js?\r\n\r\nvue.js doesn't check the content of the expression of a `v-if`.\r\n\r\nTo it, `pet = person.pet` is just an arbitrary expression.\r\n\r\nIt desn't care whether assigment happens in a `v-if`.\r\n\r\nAll if conditions will be compiled as ternary statements.\r\n\r\nIn the example, the compiled codes will be like:\r\n\r\n  \t((pet = person.pet) ? `${person.name}'s pet's name is ${pet.name}.` : `${person.name} has no pet.`)\r\n\r\nAs a result, while the template is being rendered, at the beginning when the renderer meets this identifier `pet`, the **proxy** of vue instane (let's name it as `vm`) will automatically try to get `pet` as a property of the instance.\r\n\r\nOf course it will fail. `vm.pet` has not been defined yet.\r\nSo, a **warning** will be thrown.\r\n\r\n    [Vue warn]: Property or method \"pet\" is not defined on the instance but referenced during render.\r\n\r\nThen, the renderer meets `= person.pet`, so it assigns the `pet` as a property of the vue instance, namely, `vm.pet = person.pet`.\r\n\r\nAfter that, when it meets `pet` again in `pet.name`, it gets `pet` (namely, `vm.pet`) successfully.\r\n\r\nIf we would manually do the rendering in place of vue (without the help of the magical proxy and its get-handler), we will deal with codes like this:\r\n\r\n    ((vm.pet = person.pet) ? `${person.name}'s pet's name is ${vm.pet.name}.` : `${person.name} has no pet.`)\r\n\r\nA spoiler: `person` is different. It doesn't bother the proxy.\r\n\r\n## Why do we need assigment in v-if?\r\n\r\nWhy do we need any shorthand (like `:` for `v-bind:`), or sugar syntax (`for in` instead of `for(var ..;..<..length;..++)`), etc?\r\n\r\nMaking life easier!\r\n\r\nWe can live with inconvenience. But we still ask for better life when we have chance.\r\n\r\n#### The above demos\r\n\r\nWithout the assigment, the codes would become\r\n\r\n    <span v-if=\"person.pet\">{{person.name}}'s pet's name is {{person.pet.name}}.</span>\r\n\r\nWell, looks completely tolerable...\r\n\r\nBut, what if the design is more complex?\r\n\r\n    <span v-if=\"person.pet\">\r\n    \t<span v-if=\"person.pet.hunger > 0\">\r\n    \t\t{{person.name}}'s pet's {{person.pet.name}} needs to eat\r\n    \t\t<span> {{foodDict[person.pet.favFoodId]}}</span>\r\n    \t\t, which\r\n    \t\t<span v-if=\"foodQtyInStore[person.pet.favFoodId]\"> you have {{foodQtyInStore[person.pet.favFoodId]}}.</span>\r\n    \t\t<span v-else class=\"color-warning\"> is out of stock!<span>\r\n    \t</span>\r\n    </span>\r\n\r\nCompare it with\r\n\r\n    <span v-if=\"pet = person.pet\">\r\n    \t<span v-if=\"pet.hunger > 0\">\r\n    \t\t{{person.name}}'s pet's {{pet.name}} needs to eat\r\n    \t\t<span> {{foodDict[pet.favFoodId].name}}</span>\r\n    \t\t, which\r\n    \t\t<span v-if=\"foodQty = foodQtyInStore[pet.favFoodId]\"> you have {{foodQty}}.</span>\r\n    \t\t<span v-else class=\"color-warning\"> is out of stock!<span>\r\n    \t</span>\r\n    </span>\r\n\r\n\r\n#### `slotScope`\r\n\r\nAnd let's take another example - an example in the source of **vue.js itself**:\r\n\r\n\t\tfunction processSlotContent (el) {\r\n\t\t  let slotScope\r\n\t\t  if (el.tag === 'template') {\r\n\t\t    ...\r\n\t\t  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\r\n\t\t    ...\r\n\t\t    el.slotScope = slotScope\r\n\t\t  }\r\n\t\t  ...\r\n\t\t}\r\n\r\n(It purposely uses double brackets to fool lint-flow-types, which forbids assigment in if.)\r\n\r\nWithout the assigment, it would become\r\n\r\n\t\tfunction processSlotContent (el) {\r\n\t\t  let slotScope\r\n\t\t  if (el.tag === 'template') {\r\n\t\t    ...\r\n\t\t  } else if (getAndRemoveAttr(el, 'slot-scope')) {\r\n\t\t    ...\r\n\t\t    el.slotScope = getAndRemoveAttr(el, 'slot-scope')\r\n\t\t  }\r\n\t\t  ...\r\n\t\t}\r\n\r\nI don't know if it is OK for `getAndRemoveAttr(el, 'slot-scope')` to be called twice.\r\nProbably not.\r\n\r\nMaybe we still have to use assigment, just not in if-condition.\r\n\r\n\t\tfunction processSlotContent (el) {\r\n\t\t  let slotScope\r\n\t\t  if (el.tag === 'template') {\r\n\t\t    ...\r\n\t\t  } else {\r\n\t\t\t  slotScope = getAndRemoveAttr(el, 'slot-scope')\r\n\t\t\t\tif (slotScope) {\r\n\t\t\t    ...\r\n\t\t\t    el.slotScope = slotScope\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  ...\r\n\t\t}\r\n\r\n#### `if let`\r\n\r\nAnother thing we can analogize to is the `if let` in Swift.\r\n\r\nSee [Optional Binding](https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html#ID333) if you haven't learnt it or don't quite recall.\r\n\r\nBefore I learnt this feature of Swift, I was very reluctant to assigment in if-condition.\r\n\r\nBecause it would remind me of my several stupid mistakes of `=` for `==` as well as my old time as a JS newbie.\r\n\r\nI would rather write more codes (like the `slotScope` one) to avoid assigment in if-condition.\r\n\r\nBut Swift gave me a good lesson.\r\nSmart people should embrace useful features when opportunity allows (designing a new language).\r\n\r\n#### What about danger?\r\n\r\nIn pure JS, thanks to js linters, assigment in if-condition is not as dangerous as it used to be. Mistakes of `=` for `==` can be easily detected.\r\n\r\n(That's why [#7631 warn when assignment in v-if in development mode](https://github.com/vuejs/vue/issues/7631) was closed by @posva.)\r\n\r\n## Then, what's wrong with vue?\r\n\r\nIn vue, it is another story.\r\n\r\nThere is no way to easily create local variables yet.\r\n\r\nSo, even if I just want assignment outside v-if, I cannot assign at all.\r\n\r\n(There is [a solution](https://github.com/posva/vue-local-scope) for `slot-scope`. But I seldom use slots.)\r\n\r\nWhether we deserve such freedom is beyond this issue. Let's leave it and focus on assignment in `v-if`.\r\n\r\nPlease remember these fact:\r\n\r\n- assignment in `v-if` **already** works\r\n\r\n- the warning thrown is not very helpful\r\n\r\nThe warning is thrown, not because vue has a rule which forbids assignment in `v-if`, but because vue fails to recognize the identifier as a new one, which of course is not defined.\r\n\r\n### And, bug?\r\n\r\nAnd there can be possible conflict (I don't know if it can be called a bug/loophole):\r\n\r\nIf somehow the developer writes\r\n\r\n\t\tdata() {\r\n      return {\r\n        b: false,\r\n        pet: {\r\n        \t// some other pet\r\n        \tname: 'Tom'\r\n      \t},\r\n        persons: [...]\r\n      }\r\n    }\r\n\r\nNow, there is `vm.pet` (Tom) before the template is rendered.\r\n\r\nSo, when the renderer meets `v-if=\"pet = perons.pet\"`, it will happily get it!\r\nAnd then, `vm.pet` will be overwritten and Tom will no longer exist!\r\n\r\n\r\n### Compare `v-for`\r\n\r\n`v-for` naturally contains assignment.\r\n\r\nAlthough not mentioned in the doc, vue actually even \"[support destructuring assignment](https://github.com/vuejs/vue/issues/8780)\". It is a little secret.\r\n\r\nSo, what goes on with `v-for`? Why identifiers in it doesn't lead to warnings?\r\n\r\nThe answer is simple: compiled codes for `v-for` are functions, so that the identifiers are local varibles within the functions.\r\n\r\nThat's why you dont' see `vm.person.name` in the \"If we would manually do the rendering\" code:\r\n\r\n    ((vm.pet = person.pet) ? `${person.name}'s pet's name is ${vm.pet.name}.` : `${person.name} has no pet.`)\r\n\r\nThis inspired me when I was trying to make a solution.\r\n\r\n## What solution?\r\n\r\nSimple.\r\n\r\nYou can see that I added/modified only very few lines below.\r\n\r\nQuick explanation:\r\n\r\n1. In \"parser/index.js\", `assignmentInIfRE` is define.\r\n\r\n2. In `function addIfCondition`, `assignmentInIfRE` is used to find the identifier, and store it as `condition.alias`.\r\n\r\n3. In \"codegen/index.js\", save the original compiled result to `ternaryExp`.\r\n\r\n4. If `condition.alias` exists, add a declaration of the identifier. Then, wrap the codes as an IIFE (Immediately Invoked Function Expression).\r\n\r\nWith IIFE, it works in a way very similar to the optional binding (`if let`) in Swift.\r\n\r\n### BTW, Why `alias`?\r\n\r\nThe parser for `v-for` stores identifiers (i.e. `person`) as `alias` of the node.\r\n\r\nI don't know what uses are of these aliases, but I like the choice of name.\r\n\r\n## Hey, no test yet? How dare you!\r\n\r\nSorry.\r\nI tried to follow the instruction but I failed to do the test.\r\nTwice.\r\n\r\nI run `yarn`, then I got stuck. It shows several \"waiting...\" **forever**.\r\n\r\nI had to stop it manually, and a rerun was no luck either.\r\n\r\nAnyway, I've already made a **working** modified vue.js, in **my Demo 2**.\r\n\r\nSo I guess it is highly likely for my simple solution to run well with this pull request, too.\r\n\r\nBesides, there might be problems that I cannot anticipate.\r\nToday it was the first time I've delved into the source of vue.\r\n\r\nReal experts may be needed for polishing this feature.\r\n\r\n---\r\n\r\n## PULL REQUEST TEMPLATE\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10193","RelatedDescription":"Closed or merged PR \"fix #10184: Recognize assigment in v-if and do not throw warning\" (#10193)"},{"Id":"460895810","IsPullRequest":false,"CreatedAt":"2019-06-26T12:20:37","Actor":"mavajee","Number":"10201","RawContent":null,"Title":"New slot syntax not working with \"is\"","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-7x6nl](https://codesandbox.io/s/vue-template-7x6nl)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse `v-slot` directive with \"is\" attribute\r\n\r\n### What is expected?\r\nsimilar behavior with the old syntax of slots\r\n\r\n\r\n### What is actually happening?\r\nscoped slot not working with dynamic component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10201","RelatedDescription":"Closed issue \"New slot syntax not working with \"is\"\" (#10201)"},{"Id":"460890537","IsPullRequest":false,"CreatedAt":"2019-06-26T10:31:25","Actor":"Azhanging","Number":"10200","RawContent":null,"Title":"router path match error in keep-alive","State":"closed","Body":"\r\n**Vue Version 2.6.10**\r\n**Vue-Router Version 3.0.2**\r\n\r\n**Steps to reproduce**\r\n\r\n1. `<keep-alive><router-view/></keep-alive>`\r\n2. router path  `/` -> `/classify/:id/detail/:id` -> router.back -> `/classify/:id`\r\n\r\n**What is expected?**\r\n\r\nrouter jump`/classify/:id` path\r\n\r\n**What is actually happening?**\r\n\r\nrouter keep jump `/classify/:id/detail/:id` path\r\n\r\n-------------------------------------------------\r\n\r\nin vue devtools，i see last `<router-view>` path is `__vue_devtool_undefined__`\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/10200","RelatedDescription":"Closed issue \"router path match error in keep-alive\" (#10200)"},{"Id":"460714431","IsPullRequest":false,"CreatedAt":"2019-06-26T08:10:36","Actor":"FelixVicis","Number":"10196","RawContent":null,"Title":"Document watch immediate behavior","State":"closed","Body":"### What problem does this feature solve?\r\nThere is some confusion in the timing involved for `vm.$watch.immediate`\r\n\r\nThe first call to the provided callback happens before the teardown is created and therefore cannot be unwatched at the first call.\r\nhttps://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/instance/state.js#L346-L348\r\n\r\nSeveral people have logged this thinking it's an undesired behavior.\r\nhttps://github.com/vuejs/vue/issues/2276\r\nhttps://github.com/vuejs/vue/issues/9134\r\nhttps://github.com/vuejs/vue/issues/9501\r\n\r\nIt would help greatly to have this behavior documented so that future users don't encounter this error.\r\n\r\n\r\n### What does the proposed API look like?\r\nhttps://vuejs.org/v2/api/#vm-watch\r\n\r\n```js\r\n// Will cause an error, Undefined is not a function\r\n// teardown is only available after first call.\r\nconst teardown = this.$watch('value', () => { teardown() }, { immediate: true });\r\n```\r\n\r\nUse a checking pattern instead.\r\n```js\r\nif (this.value)\r\n   doTheThing();\r\nelse {\r\n   const teardown = this.$watch('value', () => {\r\n      doTheThing();\r\n      teardown();\r\n   });\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10196","RelatedDescription":"Closed issue \"Document watch immediate behavior\" (#10196)"},{"Id":"460769509","IsPullRequest":false,"CreatedAt":"2019-06-26T06:06:21","Actor":"Jokcy","Number":"10198","RawContent":null,"Title":"vue3 function api使用中存在的问题，请问如何解决","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-zlflg?fontsize=14](https://codesandbox.io/s/vue-template-zlflg?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n这个问题是在使用 https://github.com/vuejs/vue-function-api 的时候发现的，个人认为这个问题非常严重，不确定是否是在计划中的还是预计在更新来vue3之后会自然而然解决的，所以在这里提出。\r\n\r\n社区应该是接受中文issue的，自己英语没有那么给力，就直接中文提问来。\r\n\r\n这个问题很简单，考虑有如下组件：\r\n\r\n```js\r\nexport default {\r\n  setup(props) {\r\n    const data = props.data\r\n    const x = computed(() => data.num   1)\r\n\r\n    return { x }\r\n  }\r\n}\r\n```\r\n\r\n这里的 `data` 是一个对象，在这种情况下，如果 `props.data` 改变成一个新的对象，那么 `x` 这个 `computed` 变量，是无法响应新的 `data` 变化的。以我对 vue 的理解，这是因为 `computed` 的属性是根据调用过程中触发来依赖的 `get` 来绑定依赖的。而这种情况下恰恰我们无法绑定依赖到 `props.data`，仅仅是绑定到了 `data.num`。\r\n\r\n这是 `computed` 绑定依赖的问题，所以跟 reactive 实现的方式应该无关，也就是说即便改成来 `proxy` 的方式，这个问题可能依然存在。\r\n\r\n不知道该问题应该如何解决？\r\n\r\n\r\n### What is expected?\r\n即便在写`setup`的时候先从 `props` 中读取来属性，依然应该能检测到 `props.xxx` 的变化\r\n\r\n### What is actually happening?\r\n在读取了`data`之后再依赖`data`，无法检测到 `props.data` 的变化\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10198","RelatedDescription":"Closed issue \"vue3 function api使用中存在的问题，请问如何解决\" (#10198)"},{"Id":"460773741","IsPullRequest":true,"CreatedAt":"2019-06-26T05:52:30","Actor":"afontcu","Number":"10199","RawContent":null,"Title":"Warn on colon shorthand usage on directive (fix #10191)","State":"open","Body":"fix #10191\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n\r\n**Other information:**\r\n\r\n```html\r\n<template>\r\n  <div v-if=\"something\">foo</div>  <!-- does not throw a warning -->\r\n  <div :v-if=\"something\">foo</div> <!-- throws a warning -->\r\n</template>\r\n```\r\n\r\nThere are several things I _decided_ that could be improved, so any advice or suggestion is greatly appreciated :)\r\n\r\n- PR shows a warning for every bound attribute starting with `v-`. The reasoning is that \"The v- prefix serves as a visual cue for identifying Vue-specific attributes in your templates.\" ([source](https://vuejs.org/v2/guide/syntax.html#Shorthands))\r\n- Do we need more test cases?\r\n- Is the warning message clear enough? If the attribute is not a valid Vue directive, should the message change?\r\n\r\nThanks!","Url":"https://github.com/vuejs/vue/pull/10199","RelatedDescription":"Open PR \"Warn on colon shorthand usage on directive (fix #10191)\" (#10199)"},{"Id":"460768005","IsPullRequest":false,"CreatedAt":"2019-06-26T05:30:49","Actor":"Jokcy","Number":"10197","RawContent":null,"Title":"关于vue function api的提案，这个问题如何解决？","State":"closed","Body":"这个问题是在使用 https://github.com/vuejs/vue-function-api 的时候发现的，个人认为这个问题非常严重，不确定是否是在计划中的还是预计在更新来vue3之后会自然而然解决的，所以在这里提出。\r\n\r\n社区应该是接受中文issue的，自己英语没有那么给力，就直接中文提问来。\r\n\r\n这个问题很简单，考虑有如下组件：\r\n\r\n```js\r\nexport default {\r\n  setup(props) {\r\n    const data = props.data\r\n    const x = computed(() => data.num + 1)\r\n\r\n    return { x }\r\n  }\r\n}\r\n```\r\n\r\n这里的 `data` 是一个对象，在这种情况下，如果 `props.data` 改变成一个新的对象，那么 `x` 这个 `computed` 变量，是无法响应新的 `data` 变化的。以我对 vue 的理解，这是因为 `computed` 的属性是根据调用过程中触发来依赖的 `get` 来绑定依赖的。而这种情况下恰恰我们无法绑定依赖到 `props.data`，仅仅是绑定到了 `data.num`。\r\n\r\n这是 `computed` 绑定依赖的问题，所以跟 reactive 实现的方式应该无关，也就是说即便改成来 `proxy` 的方式，这个问题可能依然存在。\r\n\r\n不知道该问题应该如何解决？\r\n","Url":"https://github.com/vuejs/vue/issues/10197","RelatedDescription":"Closed issue \"关于vue function api的提案，这个问题如何解决？\" (#10197)"},{"Id":"460588796","IsPullRequest":false,"CreatedAt":"2019-06-25T19:40:31","Actor":"ing200086","Number":"10194","RawContent":null,"Title":"Add $forceCompute with ability to select components to compute.","State":"closed","Body":"### What problem does this feature solve?\r\nThere are times when data is updated but the computed properties are cached not allowing an update. The overhead added with watched variables (both to front end items to make data, watch setup, etc. and use end resources) does not always make sense. This makes users need to add their own way of doing it and hooking in computed items.\r\n\r\n### What does the proposed API look like?\r\n``` javascript\r\nthis.$forceCompute() // recompute all computed variables\r\nthis.$forceCompute(['computed1', 'computed2']) // recompute only computed1 and computed2 variables\r\nthis.$forceCompute(['computed1', 'computed2'], false) // recompute everything but computed1 and computed2 variables\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10194","RelatedDescription":"Closed issue \"Add $forceCompute with ability to select components to compute.\" (#10194)"},{"Id":"460600938","IsPullRequest":false,"CreatedAt":"2019-06-25T19:31:20","Actor":"ansonfoong","Number":"10195","RawContent":null,"Title":"Assets not being loaded?","State":"closed","Body":"I have three assets, all .png files, two of them are loaded properly but one of them isn't being rendered, it shows the broken image instead. I noticed that  the one not being loaded  is being built  as an asset. And in the console it says it can't find that asset. I've looked everywhere and tried various work-arounds and nothing was fixed. Also, I should mention that my CSS was broken too when I built the app and the background color wasn't showing.","Url":"https://github.com/vuejs/vue/issues/10195","RelatedDescription":"Closed issue \"Assets not being loaded?\" (#10195)"},{"Id":"460438616","IsPullRequest":false,"CreatedAt":"2019-06-25T14:13:59","Actor":"veah","Number":"10192","RawContent":null,"Title":"Unexpected behavior of v-if","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/veah07/Ls7cv8ph/12/](https://jsfiddle.net/veah07/Ls7cv8ph/12/)\r\n\r\n### Steps to reproduce\r\nJust run the JSFiddle and you'll see\r\n\r\n### What is expected?\r\nWhat is expected to be left is:\r\n```html\r\n<div class=\"second\">\r\n    2\r\n    <div class=\"test-div\">test</div>\r\n</div>\r\n```\r\n\r\n### What is actually happening?\r\nwhat is actually left is:\r\n```html\r\n<div class=\"second\">\r\n    2\r\n</div>\r\n```\r\n\r\n---\r\nwhen div.second has a childNode or a key, or removing the div.first or div.third,  the code works fine\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n","Url":"https://github.com/vuejs/vue/issues/10192","RelatedDescription":"Closed issue \"Unexpected behavior of v-if\" (#10192)"},{"Id":"460262073","IsPullRequest":false,"CreatedAt":"2019-06-25T12:07:30","Actor":"suozq1","Number":"10189","RawContent":null,"Title":"Vue mutiple checkboxes can't  reset value to array","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/suozq1/learning/tree/master/vue](https://github.com/suozq1/learning/tree/master/vue)\r\n\r\n### Steps to reproduce\r\n``` \r\n<div id=\"app\">\r\n        <input type=\"checkbox\" v-model=\"gain\" value=\"1\" >A\r\n\t<input type=\"checkbox\" v-model=\"gain\" value=\"0\" >B\r\n\t<input type=\"checkbox\" v-model=\"gain\" value=\"-1\" >C\r\n\t<input type=\"text\" v-model=\"gain\">\r\n\t<hr>\r\n\t<select v-model=\"gain\" multiple>\r\n\t\t<option value=\"1\">A</option>\r\n\t\t<option value=\"0\">B</option>\r\n\t\t<option value=\"-1\">C</option>\r\n\t</select>\r\n</div>\r\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>\r\n<script type=\"text/javascript\">\r\n    var app = new Vue({\r\n             el:\"#app\",\r\n             data:{\r\n                gain:[1]\r\n            }\r\n     });\r\n</script>\r\n```\r\n\r\n\r\n---------------------------------\r\nIn console ,When I set app.gain=1,all checkboxes  will be checked, the select will throw error;  Then I click checkbox , app.gain toggle between true and false; I click select ,app.gain will be reset to array;  I feel so weird ; Why do they behave so differently?\r\nI don't know whether this is a bug or not ,I just expect when I click checkbox ,it can reset app.gain  to array like select\r\n\r\n\r\n### What is expected?\r\nI don't know whether this is a bug or not ,I just expect when I click checkbox ,it can reset app.gain  to array like select\r\n\r\n\r\n### What is actually happening?\r\nVue mutiple checkboxes can't  reset value to array\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10189","RelatedDescription":"Closed issue \"Vue mutiple checkboxes can't  reset value to array\" (#10189)"},{"Id":"460302215","IsPullRequest":false,"CreatedAt":"2019-06-25T11:44:53","Actor":"gewoonwoutje","Number":"10190","RawContent":null,"Title":"This reference is undefined in template's v-for loops","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/caxzegtw/](https://jsfiddle.net/caxzegtw/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Look at the two this pointers; only one is working\r\n\r\n### What is expected?\r\nThis pointer should refer to the Vue instance.\r\n\r\n### What is actually happening?\r\nIn the fiddle; the this.message is not showing inside the v-for.\r\nIn our project; this is undefined and throws an error in the console.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10190","RelatedDescription":"Closed issue \"This reference is undefined in template's v-for loops\" (#10190)"},{"Id":"460335705","IsPullRequest":false,"CreatedAt":"2019-06-25T10:15:50","Actor":"simonhermann","Number":"10191","RawContent":null,"Title":"Warn if colon shorthand is used on v-if/v-html/etc.","State":"open","Body":"### What problem does this feature solve?\r\nI just spent way too long debugging something really weird until I realized I accidentally wrote `:v-if` instead of `v-if`. \r\n\r\nA warning when wrongly using shorthands like `:` on \"native\" vue attributes could prevent this bad experience easily. \r\n\r\n### What does the proposed API look like?\r\n`:v-if=\"foo\"`\r\n\r\n--> console.warn(\"You specified v-bind:/ v-on: or a corresponding shorthand on a Vue attribute like v-if or similar. Usually this does not make sense.)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10191","RelatedDescription":"Open issue \"Warn if colon shorthand is used on v-if/v-html/etc.\" (#10191)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"462388128","IsPullRequest":true,"CreatedAt":"2019-06-30T09:57:04","Actor":"Alexeykhr","Number":"2838","RawContent":null,"Title":"Handle Promise rejection in guards (fix #2833)","State":"open","Body":"#2833","Url":"https://github.com/vuejs/vue-router/pull/2838","RelatedDescription":"Open PR \"Handle Promise rejection in guards (fix #2833)\" (#2838)"},{"Id":"461054597","IsPullRequest":false,"CreatedAt":"2019-06-30T09:44:07","Actor":"kahirokunn","Number":"2827","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31](https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMaybe this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n\r\n### What is expected?\r\nI expected correct `getMatchedComponents` type\r\n\r\n### What is actually happening?\r\nI try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2827","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2827)"},{"Id":"461058663","IsPullRequest":true,"CreatedAt":"2019-06-30T09:43:54","Actor":"kahirokunn","Number":"2828","RawContent":null,"Title":"maybe getMatchedComponents type is missed #2827","State":"closed","Body":"This pull request for solved this issue.\r\nhttps://github.com/vuejs/vue-router/issues/2827","Url":"https://github.com/vuejs/vue-router/pull/2828","RelatedDescription":"Closed or merged PR \"maybe getMatchedComponents type is missed #2827\" (#2828)"},{"Id":"461944569","IsPullRequest":false,"CreatedAt":"2019-06-28T09:32:51","Actor":"liho00","Number":"2837","RawContent":null,"Title":"External JavaScript working when changing route","State":"closed","Body":"### What problem does this feature solve?\r\nI am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nthis feature should allow the javascript works when changing routes. \r\n\r\n### What does the proposed API look like?\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works in different paths.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2837","RelatedDescription":"Closed issue \"External JavaScript working when changing route\" (#2837)"},{"Id":"461942087","IsPullRequest":false,"CreatedAt":"2019-06-28T09:23:21","Actor":"liho00","Number":"2836","RawContent":null,"Title":"External JavaScript stop working when changing route","State":"closed","Body":"I am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works with different paths.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2836","RelatedDescription":"Closed issue \"External JavaScript stop working when changing route\" (#2836)"},{"Id":"461913917","IsPullRequest":false,"CreatedAt":"2019-06-28T08:20:25","Actor":"liubin595338764","Number":"2835","RawContent":null,"Title":"base是否能当成params参数来配置？","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://www](https://www)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n### What is expected?\r\n希望在history模式的时候可以把`base`当成`params`来处理，\r\n\r\n对于多公司访问通一个应用的时候，这样的链接比较好看，\r\n\r\n比如：\r\n```js\r\nexport default new Router({\r\n    mode: 'history',\r\n    base: '/:company',\r\n    routes: routes\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n---\r\n希望能尽快支持哦\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2835","RelatedDescription":"Closed issue \"base是否能当成params参数来配置？\" (#2835)"},{"Id":"461897204","IsPullRequest":false,"CreatedAt":"2019-06-28T07:41:09","Actor":"Mighty683","Number":"2834","RawContent":null,"Title":"Add beforeUpdate to route config","State":"closed","Body":"### What problem does this feature solve?\r\nSince for now we can't handle lazy loading components without losing access to navigation hooks build in components we should give equal API on router config level.\r\nFor now we can only add `beforeEnter` route guard. It would be usefull if we had `beforeUpdate` guard too.\r\n\r\nProblem with lazy loading components described here: \r\nhttps://github.com/vuejs/vue-router/issues/2830\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/foo',\r\n      component: Foo,\r\n      beforeUpdate: (to, from, next) => {\r\n        // ...\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2834","RelatedDescription":"Closed issue \"Add beforeUpdate to route config\" (#2834)"},{"Id":"461529830","IsPullRequest":false,"CreatedAt":"2019-06-27T13:28:28","Actor":"posva","Number":"2833","RawContent":null,"Title":"Handle Promise rejection in guards","State":"open","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/orzwg537/](https://jsfiddle.net/orzwg537/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle and look in console\r\n\r\n### What is expected?\r\na message saying error caught\r\n\r\n### What is actually happening?\r\nThere is an Unhandled Promise rejection instead\r\n\r\n---\r\nCurrently, errors thrown in guards are caught by router.onError but Promises rejections (or error thrown in an `async` function) are not caught. This should be handled in all the other guards as well\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2833","RelatedDescription":"Open issue \"Handle Promise rejection in guards\" (#2833)"},{"Id":"461488156","IsPullRequest":false,"CreatedAt":"2019-06-27T12:06:14","Actor":"stavid","Number":"2832","RawContent":null,"Title":" use history mode,history.length is wrong","State":"closed","Body":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/2831](https://github.com/vuejs/vue-router/issues/2831)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nexport default new Router({\r\nmode: 'history',\r\nroutes: [\r\n\r\n\t{\r\n\t\tpath: '/A',\r\n\t\tname: 'A',\r\n                   component: resolve => require(['../components/files/\r\n\r\nA.vue'], resolve),\r\nmeta: {\r\ntitle: 'A'\r\n}\r\n},\r\nopen A page ,print history.length in beforeEach method , the message is：\r\n\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n### What is expected?\r\nhistory.length add 1\r\n\r\n### What is actually happening?\r\nhistory.length add 2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2832","RelatedDescription":"Closed issue \" use history mode,history.length is wrong\" (#2832)"},{"Id":"461486225","IsPullRequest":false,"CreatedAt":"2019-06-27T11:56:25","Actor":"stavid","Number":"2831","RawContent":null,"Title":"use history mode,history.length is wrong","State":"closed","Body":"export default new Router({\r\n\tmode: 'history',\r\n\troutes: [\r\n\r\n\t\t{\r\n\t\t\tpath: '/A',\r\n\t\t\tname: 'A',\r\n                       component: resolve => require(['../components/files/\r\nA.vue'], resolve),\r\n\t\t\tmeta: {\r\n\t\t\t\ttitle: 'A'\r\n\t\t\t}\r\n\t\t},\r\n-------------------------------\r\nopen A page ,print history.length  in beforeEach method , the message is：\r\n---------------------------------\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2831","RelatedDescription":"Closed issue \"use history mode,history.length is wrong\" (#2831)"},{"Id":"460770103","IsPullRequest":false,"CreatedAt":"2019-06-27T11:50:51","Actor":"maroon1","Number":"2825","RawContent":null,"Title":"errorHandler can't catch the error thrown in navigation guards","State":"closed","Body":"### What problem does this feature solve?\r\n目前 Navigation Guards 中的异常直接被 vue-router 内部处理掉，无法被 errorHandler 处理，导致需要在 Navigation Guards 单独处理，或者转换为 Promise 异常再通过 unhandledrejection 事件处理\r\n\r\n### What does the proposed API look like?\r\n希望可以提供与 Vue 统一的异常传播行为\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2825","RelatedDescription":"Closed issue \"errorHandler can't catch the error thrown in navigation guards\" (#2825)"},{"Id":"461397478","IsPullRequest":false,"CreatedAt":"2019-06-27T11:48:13","Actor":"Mighty683","Number":"2830","RawContent":null,"Title":"Enable component async loading","State":"closed","Body":"### What problem does this feature solve?\r\nFor now there is no full support for `vue` `async components` described here:\r\n\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\nSolution presented in: \r\nhttps://github.com/vuejs/vue-router/pull/2140\r\nhttps://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/router/routes.js\r\nis solving problem only partially because of such construction `beforeRouteEnter` etc guards are not launched due to fact that component is resolved inside another component after route update\r\n\r\nThis problem is also mentioned here:\r\nhttps://forum.vuejs.org/t/vue-router-async-component-loading-error-components-never-shown/40618/2\r\n\r\n### What does the proposed API look like?\r\nUpdate doc with information that this syntax is not working with `vue-router`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2830","RelatedDescription":"Closed issue \"Enable component async loading\" (#2830)"},{"Id":"461074294","IsPullRequest":false,"CreatedAt":"2019-06-26T17:13:08","Actor":"Etheryte","Number":"2829","RawContent":null,"Title":"Make route name map part of public API","State":"closed","Body":"### What problem does this feature solve?\r\nWorking with large-scale applications, a fairly common problem when using vue-router is trying to avoid inline string constants for link definitions and programmatic navigation. For example:\r\n\r\n```html\r\n<router-link to=\"/documents\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(\"/documents\");\r\n```\r\n\r\nInline constants like these are subject to rot over time, human error when refactoring multiple documents and other similar errors. As an application grows in size, these issues become more prominent.\r\n\r\n### What does the proposed API look like?\r\nAs a solution, our shop often uses a mapping from route name to a route definition. Sample implementation:\r\n\r\n```ts\r\ninterface IRouteMap {\r\n  [key: string]: ReturnType<Router['resolve']> & { name: string };\r\n}\r\n\r\nfunction mapRoutes(routeMap: IRouteMap, routes: RouteConfig[] = []) {\r\n  return routes.reduce((map, route) => {\r\n    const name = route.name;\r\n    if (name) {\r\n      map[name] = Object.assign({\r\n        name,\r\n      }, router.resolve(name));\r\n    }\r\n    if (route.children) {\r\n      mapRoutes(map, route.children);\r\n    }\r\n    return map;\r\n  }, routeMap);\r\n}\r\n\r\nexport const routeMap = mapRoutes({}, routes);\r\n```\r\n\r\nLinks and navigation can then simply use the resulting mapping:\r\n\r\n```html\r\n<router-link v-bind:to=\"routeMap.documents.location\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(routeMap.documents.location);\r\n```\r\nor\r\n```ts\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.name !== routeMap.login.name && !store.state.user) ...\r\n});\r\n```\r\n\r\nThis means that changing a route's path requires a single change in the route definition itself and no further refactoring is necessary. Route names are internal and aren't subject to change over time as route paths often can be.\r\n\r\nAdding a similar mapping (or exposing existing internals) to vue-router's public API would provide a standardized solution to the given problem and allow all vue-router consumers to reap the benefits.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2829","RelatedDescription":"Closed issue \"Make route name map part of public API\" (#2829)"},{"Id":"461052290","IsPullRequest":false,"CreatedAt":"2019-06-26T15:51:32","Actor":"kahirokunn","Number":"2826","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"I try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n","Url":"https://github.com/vuejs/vue-router/issues/2826","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2826)"},{"Id":"460284206","IsPullRequest":false,"CreatedAt":"2019-06-25T11:52:42","Actor":"ahochel","Number":"2824","RawContent":null,"Title":"Vue-router points to wrong component when using browser navigation and two routes have same path","State":"closed","Body":"### Version\r\n3.0.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-6fm9z](https://codesandbox.io/s/vue-template-6fm9z)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. You start at the homepage.\r\n2. Click \"B\" link. It shows that B component is mounted and slug is \"test-b\".\r\n2. Click \"A\" link. It shows that A component is mounted and slug is \"test-a\".\r\n3. Click back button in an iframe. It shows that A component is mounted and slug is \"test-b\".\r\n\r\n### What is expected?\r\nOn last step, it should mount component \"B\", because when you have been on that route before it pointed to route \"b\".\r\n\r\n### What is actually happening?\r\nURL changes correctly, slug (which is route param) also changes correctly, but the wrong component is mounted.\r\n\r\n---\r\nThis happens when you have two (or more) routes with different names and different components, but with the same path and when you navigate through \"go back\" / \"go forward\" buttons in your browser.\r\n\r\n```\r\n{ name: \"a\", path: \"/:slug.html\", component: A },\r\n{ name: \"b\", path: \"/:slug.html\", component: B }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2824","RelatedDescription":"Closed issue \"Vue-router points to wrong component when using browser navigation and two routes have same path\" (#2824)"},{"Id":"460182336","IsPullRequest":false,"CreatedAt":"2019-06-25T11:49:44","Actor":"0415wangyibo","Number":"2823","RawContent":null,"Title":"Can't route to the path \"/element53\" , and so on","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/0415wangyibo/webLearning/tree/master/vueweb](https://github.com/0415wangyibo/webLearning/tree/master/vueweb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install\r\nnpm run dev\r\nOpen a browser and enter the URL \"http://localhost:8080/#/element53\"\r\n\r\n### What is expected?\r\nIt can route to the component which named \"element53\"\r\n\r\n### What is actually happening?\r\n\"vue-router\" can't route to the path \"/element53\", and it routes to the default path.\r\n\r\n---\r\nIt can't route to the path \"/element53\",\"/element54\",\"/element55\",and so on. But it can route to the path \"/element52\",\"element51\",\"element50\",and so on.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2823","RelatedDescription":"Closed issue \"Can't route to the path \"/element53\" , and so on\" (#2823)"},{"Id":"460177005","IsPullRequest":false,"CreatedAt":"2019-06-25T02:28:09","Actor":"0415wangyibo","Number":"2822","RawContent":null,"Title":"Can't route to the component which named element53","State":"closed","Body":"\"vue-router\" can't route to the path \"/element53\" and \"/element54\", and so on, but the others are routed well, when I am learning the element-ui,there is my project: https://github.com/0415wangyibo/webLearning/tree/master/vueweb\r\n","Url":"https://github.com/vuejs/vue-router/issues/2822","RelatedDescription":"Closed issue \"Can't route to the component which named element53\" (#2822)"},{"Id":"458903046","IsPullRequest":false,"CreatedAt":"2019-06-24T20:59:35","Actor":"juanescarraga","Number":"2819","RawContent":null,"Title":"Color active state on link does not return to original color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the project in the browser.\r\n2. The link with the name Say Hello appears in the browser.\r\n3. The default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\n4. The gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\n5. In tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2819","RelatedDescription":"Closed issue \"Color active state on link does not return to original color\" (#2819)"},{"Id":"460082755","IsPullRequest":false,"CreatedAt":"2019-06-24T20:40:24","Actor":"kfedorov91","Number":"2821","RawContent":null,"Title":"calling next(false); unexpectedly clears forward history","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7l33b](https://codesandbox.io/s/7l33b)\r\n\r\n### Steps to reproduce\r\n- Click through the router-links on the page to get some history (a prompt will pop up on every navigation, click \"OK\")\r\n- Go back a few times (using either the browser back button or the HTML \"go back\" button)\r\n- After you are somewhere in the middle of your history/navigation stack, go forward or back (again using either the browser or HTML buttons) but this time when the prompt pops up asking you if you want to proceed, click \"Cancel\"\r\n- All of your forward history is gone\r\n\r\n### What is expected?\r\nI don't expect all of the forward history to disappear just because a component cancelled navigation, i.e. next(false);\r\n\r\n### What is actually happening?\r\nAll of the forward history is disappearing after a component cancels navigation, i.e. next(false);\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2821","RelatedDescription":"Closed issue \"calling next(false); unexpectedly clears forward history\" (#2821)"},{"Id":"459579755","IsPullRequest":false,"CreatedAt":"2019-06-23T15:05:26","Actor":"matej-svejda","Number":"2820","RawContent":null,"Title":"Autofilled params for named route cause warning with keep-alive","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fp3et456/5/](https://jsfiddle.net/fp3et456/5/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGoing to \"withProps1\" and then back to \"withoutProps\"\r\n\r\n### What is expected?\r\nThat no warning should appear.\r\n\r\n### What is actually happening?\r\nCauses a vue warning to appear for missing params, even though the params for all routes on the current route are set.\r\n\r\n---\r\nIm using auto filled params in named routes that the current route also has. An example would be that all project-related routes have the project id in them, but i dont want to set it every time when construct a route while being in a project-related route. Vue router does this automatically. I didnt find the functionallity documented, but you can see it being implemented in the function match(...) in create-matcher.js.\r\nThis works well in all cases, it only causes warning when Im navigating away from a route that has such a \"shared param\" to a route that doesnt have it. It seems like while leaving the route, something triggers a re-render of the links and the path is reconstructed. However, in this case the parameter can't be autofilled anymore because it isn't present in the current route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2820","RelatedDescription":"Closed issue \"Autofilled params for named route cause warning with keep-alive\" (#2820)"},{"Id":"458533741","IsPullRequest":false,"CreatedAt":"2019-06-20T09:20:36","Actor":"Bigdragon13th","Number":"2818","RawContent":null,"Title":"Allow props for every attribute in to on router-link (like name, params, query)","State":"open","Body":"### What problem does this feature solve?\r\nIn my projects, I always link to the routes using route name (and also set it as a standard of my team). e.g.\r\n\r\n```vue\r\n<router-link :to=\"{ name: 'productList' }\">Product List</router-link>\r\n<router-link :to=\"{ name: 'productItem', params: { id: 1 }}\">Product Detail</router-link>\r\n```\r\n\r\nI found this pattern is unnecessary too long and not convenient to use compare to a much shorter syntax of using route link\r\n\r\n```vue\r\n<router-link to=\"/products-list\">Product List</router-link>\r\n<router-link to=\"/products/1\">Product Detail</router-link>\r\n```\r\n\r\nAnyway, I still want to use named route everywhere (for the sake of maintainability & scalability) and feel like link to named route can be improved.\r\n\r\n### What does the proposed API look like?\r\nI want the `:to` to be able to link to named route as-is (so when we created a route object somewhere else, we can bind it easily). But maybe you can make another prop for named route, such as:\r\n```vue\r\n<router-link toName=\"productList\">Product List</router-link>\r\n<router-link toName=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\nOr (I don't know if it possible) custom modifiers?:\r\n```vue\r\n<router-link to.name=\"productList\">Product List</router-link>\r\n<router-link to.name=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2818","RelatedDescription":"Open issue \"Allow props for every attribute in to on router-link (like name, params, query)\" (#2818)"},{"Id":"458311922","IsPullRequest":false,"CreatedAt":"2019-06-20T03:05:52","Actor":"sym134","Number":"2817","RawContent":null,"Title":"vue-cli3  路由重定向可以使用，但是别名无效","State":"closed","Body":"vue-cli3  路由重定向可以使用，但是别名alias无效","Url":"https://github.com/vuejs/vue-router/issues/2817","RelatedDescription":"Closed issue \"vue-cli3  路由重定向可以使用，但是别名无效\" (#2817)"},{"Id":"457661522","IsPullRequest":false,"CreatedAt":"2019-06-18T19:42:05","Actor":"lastlink","Number":"2816","RawContent":null,"Title":"prevent automatic hash add or allow hashes in history mode","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to use vuerouter in a chrome extension. I want to use hashes to add some changes to a pages content. However, just importing vue router adds #/ by default, I only want it added when it's being used. When I use history mode I can use `#/` no matter what I do. Is there a way to disable vue-router automatic hash add or use hashes in the route matching?","Url":"https://github.com/vuejs/vue-router/issues/2816","RelatedDescription":"Closed issue \"prevent automatic hash add or allow hashes in history mode\" (#2816)"},{"Id":"456869615","IsPullRequest":false,"CreatedAt":"2019-06-17T11:29:59","Actor":"kamituel","Number":"2815","RawContent":null,"Title":"Allow for custom element anchors","State":"closed","Body":"### What problem does this feature solve?\r\n`<router-link>` will set a `href` attribute on its child only if this child has an `<a>` tag name (see [`findAnchor()`](https://github.com/vuejs/vue-router/blob/dev/src/components/link.js#L124)). However, this won't work in case an anchor is wrapped in a custom element.\r\n\r\n### What does the proposed API look like?\r\nMaybe something like this?\r\n\r\n```\r\n<router-link to=\"...\" anchorTag=\"custom-anchor\">\r\n   <custom-anchor>Click Me!</custom-anchor>\r\n</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2815","RelatedDescription":"Closed issue \"Allow for custom element anchors\" (#2815)"},{"Id":"456840197","IsPullRequest":false,"CreatedAt":"2019-06-17T09:44:36","Actor":"eyalhakim","Number":"2814","RawContent":null,"Title":"next(false) in beforeEach pushes state when using the browser forward button","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-mjmxd](https://codesandbox.io/s/vue-routing-example-mjmxd)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on \"goodbye\"\r\nClick back in browser\r\nClick forward in browser\r\n\r\nlast url is pushed into history\r\n\r\n### What is expected?\r\nIn ensureUrl, we need to pass false instead of true to make sure current (out-of-sync) url is replaced and not pushed to history\r\n\r\n### What is actually happening?\r\nThe next function passes true to the ensureUrl function thus making it push the out-of-sync url to history\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2814","RelatedDescription":"Open issue \"next(false) in beforeEach pushes state when using the browser forward button\" (#2814)"},{"Id":"456519510","IsPullRequest":false,"CreatedAt":"2019-06-15T11:41:44","Actor":"mittalyashu","Number":"2813","RawContent":null,"Title":"Pass props to router view","State":"closed","Body":"### What problem does this feature solve?\r\nPassing the props to `<router-view data=\"fetchData\" />` should pass the props to it's all child components or views depending upon the way we have defined the configuration in `router.js`\r\n\r\n```html\r\n<router-view :data=\"[4, 5]\" />\r\n```\r\n\r\n\r\nI have tried using parms & query, but it doesn't fulfill the use-case.\r\n\r\n### What does the proposed API look like?\r\n_Not sure_\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2813","RelatedDescription":"Closed issue \"Pass props to router view\" (#2813)"},{"Id":"456489048","IsPullRequest":false,"CreatedAt":"2019-06-15T02:24:47","Actor":"William-WFC","Number":"2812","RawContent":null,"Title":"router.go(-1) 无法返回上一个页面，扔停留在当前页面（tag v3.0.6）","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[http://wenti.com](http://wenti.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n偶现\r\n\r\n### What is expected?\r\n正常返回上一个页面\r\n\r\n### What is actually happening?\r\n停留在当前页面\r\n\r\n---\r\nvue-router(v3.0.6)构建成生产代码后，偶尔出现\r\nvue-router(v3.0.5)开发时，必现\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2812","RelatedDescription":"Closed issue \"router.go(-1) 无法返回上一个页面，扔停留在当前页面（tag v3.0.6）\" (#2812)"},{"Id":"456488715","IsPullRequest":false,"CreatedAt":"2019-06-15T01:57:54","Actor":"William-WFC","Number":"2811","RawContent":null,"Title":"router.go(-1) 偶现无法正常返回上一个页面，扔停留在当前页面（tag v3.0.6）","State":"closed","Body":"router.go(-1) 偶现无法正常返回上一个页面，扔停留在当前页面（tag v3.0.6）","Url":"https://github.com/vuejs/vue-router/issues/2811","RelatedDescription":"Closed issue \"router.go(-1) 偶现无法正常返回上一个页面，扔停留在当前页面（tag v3.0.6）\" (#2811)"},{"Id":"455530260","IsPullRequest":false,"CreatedAt":"2019-06-13T04:41:18","Actor":"y-nk","Number":"2810","RawContent":null,"Title":"$route properties not reactive","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/y_nk/d07bxk86/](https://jsfiddle.net/y_nk/d07bxk86/)\r\n\r\n### Steps to reproduce\r\n1. try to v-model into an object of `$route`\r\n\r\n### What is expected?\r\nobjects of route to be reactive\r\n\r\n### What is actually happening?\r\nthey are not\r\n\r\n---\r\nexample based on @posva 's codebase https://jsfiddle.net/posva/chyLjpv0/\r\ni'm mixed feeling either this is a bug or a feature request, but it's surely something saving a lot of code in many projects.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2810","RelatedDescription":"Closed issue \"$route properties not reactive\" (#2810)"},{"Id":"455194361","IsPullRequest":false,"CreatedAt":"2019-06-12T15:12:33","Actor":"captainhusaynpinguin","Number":"2809","RawContent":null,"Title":"Make up your mind: Suffix OR Trailing Slash","State":"closed","Body":"### What problem does this feature solve?\r\nIn my understanding, the general perception of browser is that it is being displayed either a \"file\" or a \"directory\" and as, generally speaking, VueJS apps return an HTML file, hence, Vue-Router should by default add `.html` at the end of the routes it creates. I have seen this feature-request be dismissed a while ago, but back then the default behavior was to add a ​trailing slash, now that this has been pushed to an additional option: `pathToRegexpOptions: { strict: true } `, it is finally time to adopt the suffix feature.\r\n\r\n### What does the proposed API look like?\r\nBrowser displaying: `https://myapp.com/log/post-n.html`\r\n\r\nso, when the log post number n contains multiple images, videos, or audios, the plain text of the post n does not need to take into account from which URL structure the page is being accessed.\r\n\r\nFor example, the author can simply write: `<img src=\"my-image.jpg\">` and the image will be displayed properly regardless of the URL structure. However, when the trailing slash and the suffix are neither available by default, the image will be loaded from the previous component of the path, in this example: the current default behavior looks like this: `https://myapp.com/log/post-n` and the web browser will request the image like this: `https://myapp.com/log/my-image.jpg` which is actually a bug!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2809","RelatedDescription":"Closed issue \"Make up your mind: Suffix OR Trailing Slash\" (#2809)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"461385089","IsPullRequest":false,"CreatedAt":"2019-06-27T08:18:24","Actor":"StijnVandermeulen1","Number":"1572","RawContent":null,"Title":"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.","State":"open","Body":"### What problem does this feature solve?\r\nIf you subscribe to an action an return a promise or use an await statement, the code does not wait for the request to be complete. This is a problem when you implement a component as a plugin. Communication between components can be handled by the subscribeAction. But retrieving data and pushing it into the state using the afore mentioned methods will not result in any data since the service does not wait for it to be completed.\r\n\r\nThis feature would be very usefull for components as plugins that can be fully compartmentalized and plugged into different applications. Configuration retrieval can then be defined in the subscribeAction allowing different implementations over multiple applications.\r\n\r\n### What does the proposed API look like?\r\nExample for before action:\r\n\r\nCurrent code in src/store.js line 132:\r\n\r\n   try {\r\n\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    }\r\n\r\nShould be:\r\n\r\n  try {\r\n\r\n          async function asyncForEach(array, callback) {\r\n             for (let index = 0; index < array.length; index  ) {\r\n                await callback(array[index], index, array);\r\n           }\r\n         }\r\n\r\n         await asyncForEach(this._actionSubscribers\r\n           .filter(function (sub) { return sub.before; }), async function (sub) {\r\n                return await sub.before(action, this$1.state); \r\n           });\r\n        }\r\n\r\ndispatch function should be async as wel.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1572","RelatedDescription":"Open issue \"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.\" (#1572)"},{"Id":"460917840","IsPullRequest":false,"CreatedAt":"2019-06-26T11:34:51","Actor":"markrian","Number":"1571","RawContent":null,"Title":"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/markrian/pen/vqeGZZ?editors=0010](https://codepen.io/markrian/pen/vqeGZZ?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codepen.io/markrian/pen/vqeGZZ?editors=0010\r\n1. Open the browser's console\r\n1. Observe the differing logged arguments passed to `store.dispatch` depending on whether it's a root-mapped action or a namespace-mapped action (`[ \"foo\" ]` and `[ \"childModule/foo\", undefined ]` respectively - note the extra `undefined` argument in the second case; the different action name is of course expected)\r\n\r\nNote that this only really applies in a testing scenario, where the test spies on `store.dispatch` to ensure the component dispatches the expected actions.\r\n\r\n### What is expected?\r\n`store.dispatch` receives exactly the same arguments regardless of whether the actions are namespace-mapped or not.\r\n\r\n### What is actually happening?\r\n`store.dispatch` receives a payload argument of `undefined` for namespace-mapped actions.\r\n\r\n---\r\nI encountered this when refactoring a store into a namespaced module, and found that my expectations needed to change: that `store.dispatch` received an extra `undefined` argument.\r\n\r\nI'm not sure if this should be considered a bug in Vuex, or in my testing approach of spying on `store.dispatch` :man_shrugging: \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1571","RelatedDescription":"Open issue \"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`\" (#1571)"},{"Id":"456973589","IsPullRequest":false,"CreatedAt":"2019-06-17T14:39:06","Actor":"mojodev","Number":"1570","RawContent":null,"Title":"Creating a new module via registerModule firing unrelated module watchers","State":"closed","Body":" i have loaded a module dynamically using registerModule on a page. one of my parent component is watching other module state variable. so while registering module watcher on other module state is firing. same thing happening for unRegisterModule. \r\ni found same issue which is closed only difference is that i am getting this issue in new version of Vuex3.1.1\r\n\r\nAny help will be appreciated :)\r\n","Url":"https://github.com/vuejs/vuex/issues/1570","RelatedDescription":"Closed issue \"Creating a new module via registerModule firing unrelated module watchers\" (#1570)"},{"Id":"456838883","IsPullRequest":false,"CreatedAt":"2019-06-17T09:41:41","Actor":"lemongranule","Number":"1569","RawContent":null,"Title":"This file maybe has a mistake. ","State":"closed","Body":"examples/server.js\r\nOne more \"de\" in the first line","Url":"https://github.com/vuejs/vuex/issues/1569","RelatedDescription":"Closed issue \"This file maybe has a mistake. \" (#1569)"},{"Id":"456589519","IsPullRequest":false,"CreatedAt":"2019-06-17T08:54:29","Actor":"orblazer","Number":"1568","RawContent":null,"Title":"Use interface for Store type definition","State":"closed","Body":"### What problem does this feature solve?\r\nThis could allow extends Store like in Nuxt.JS.\r\nWithout that we don't have clean way for use `this.app` of `this.$router` in vuex actions and mutations.\r\n\r\nWith that we can extends like :\r\n```ts\r\ndeclare module 'vuex/types/index' {\r\n  interface Store<S> {\r\n    app: Vue;\r\n    $route: Route;\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/types/index.d.ts#L10 Change type of that from `class` to `interface`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1568","RelatedDescription":"Closed issue \"Use interface for Store type definition\" (#1568)"},{"Id":"454069279","IsPullRequest":false,"CreatedAt":"2019-06-10T09:04:41","Actor":"guanweiwang","Number":"1567","RawContent":null,"Title":"使用registerModule注册嵌套，出现错误","State":"closed","Body":"```js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\nstore.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n})\r\nexport default store\r\n```\r\n在浏览器上会给出警告\r\n```\r\nvuex.esm.js?2f62:199 Uncaught TypeError: Cannot read property 'addChild' of undefined\r\n    at ModuleCollection.register (vuex.esm.js?2f62:199)\r\n    at Store.registerModule (vuex.esm.js?2f62:464)\r\n    at Store.t.registerModule.t.registerModule (<anonymous>:1:1182)\r\n    at eval (store.js?c0d6:11)\r\n    at Module../src/store.js (app.js:2393)\r\n    at __webpack_require__ (app.js:767)\r\n    at fn (app.js:130)\r\n    at eval (main.js:13)\r\n    at Module../src/main.js (app.js:2369)\r\n    at __webpack_require__ (app.js:767)\r\n```","Url":"https://github.com/vuejs/vuex/issues/1567","RelatedDescription":"Closed issue \"使用registerModule注册嵌套，出现错误\" (#1567)"},{"Id":"453666442","IsPullRequest":false,"CreatedAt":"2019-06-07T19:43:58","Actor":"winniehell","Number":"1566","RawContent":null,"Title":"registerModule does not warn if existing state is overwritten","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n\r\n[https://jsfiddle.net/winniehell/enjkob2w/](https://jsfiddle.net/winniehell/enjkob2w/)\r\n\r\n### Steps to reproduce\r\n- create store module with some state\r\n- dynamically register module with same name but different state\r\n\r\n### What is expected?\r\na warning or error is shown\r\n\r\n### What is actually happening?\r\nstate is silently overwritten\r\n\r\n---\r\nThis issue is similar to https://github.com/vuejs/vuex/issues/1363.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1566","RelatedDescription":"Open issue \"registerModule does not warn if existing state is overwritten\" (#1566)"},{"Id":"453610451","IsPullRequest":true,"CreatedAt":"2019-06-07T17:05:35","Actor":"Douten","Number":"1565","RawContent":null,"Title":"minor typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1565","RelatedDescription":"Open PR \"minor typo\" (#1565)"},{"Id":"451134309","IsPullRequest":true,"CreatedAt":"2019-06-01T23:19:18","Actor":"YongzeYao","Number":"1564","RawContent":null,"Title":"修改病句","State":"open","Body":"加入一个“的”。","Url":"https://github.com/vuejs/vuex/pull/1564","RelatedDescription":"Open PR \"修改病句\" (#1564)"},{"Id":"451113147","IsPullRequest":true,"CreatedAt":"2019-06-01T18:38:55","Actor":"WIStudent","Number":"1563","RawContent":null,"Title":"Typescript: Use generics for payload/result in commit/dispatch","State":"open","Body":"I am using Typescript to write my store, like this for example:\r\n```typescript\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\ninterface AddToCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ninterface SubstractFromCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ntype SubstractFromCounterResult = number\r\n\r\nconst store = new Store<State>({\r\n    mutations: {\r\n        addToCounter: (state, payload: AddToCounterPayload): void => {\r\n            state.counter += payload.amount;\r\n        }\r\n    },\r\n    actions: {\r\n        substractFromCounter: async (context, payload: SubstractFromCounterPayload): Promise<SubstractFromCounterResult> => {\r\n            const addToCounterPayload: AddToCounterPayload =  {amount: -1 * payload.amount};\r\n            context.commit('addToCounter', addToCounterPayload)\r\n            return context.state.counter;\r\n        }\r\n    },\r\n    state: {\r\n        counter: 0\r\n    }\r\n})\r\n```\r\n\r\nTriggering a mutation like this will currently not check if the payload has the correct type\r\n```typescript\r\n// correct payload type\r\nstore.commit('addToCounter', {amount: 1});\r\n// incorrect payload type\r\nstore.commit('addToCounter', {amount: '1'});\r\n// Current solution to ensure correct type\r\nconst payload: AddToCounterPayload = {\r\n  amount: 1\r\n}\r\nstore.commit('addToCounter', payload);\r\n```\r\nBut there are cases where I would prefer to build the payload inline, that's why I would like to propose using generics to set the payload type:\r\n```typescript\r\nstore.commit<AddToCounterPayload>('addToCounter', {amount: 1});\r\n```\r\n\r\nTriggering actions would work similary but additionaly the type of the returned value can be set using the second generic parameter\r\n```typescript\r\nconst result = store.dispatch<SubstractFromCounterPayload, SubstractFromCounterResult>('substractFromCounter', {amount: 1}); \r\n// type of result will be Promise<SubstractFromCounterResult>\r\n```\r\nBy setting the default values of the generics to `any` the behavior of `commit` and `dispatch` won't change if called without generics.","Url":"https://github.com/vuejs/vuex/pull/1563","RelatedDescription":"Open PR \"Typescript: Use generics for payload/result in commit/dispatch\" (#1563)"},{"Id":"451011749","IsPullRequest":false,"CreatedAt":"2019-05-31T23:13:08","Actor":"winniehell","Number":"1562","RawContent":null,"Title":"Deprecate testAction helper in favor of vuex-mock-store","State":"open","Body":"### What problem does this feature solve?\r\nThe officially documented way to [test actions](https://vuex.vuejs.org/guide/testing.html#testing-actions)\r\n\r\n- has a complex interface (5 positional, required arguments)\r\n- is always asynchronous—even if the action under test is not\r\n- requires copying a helper function from the documentation into a project's code base\r\n- involves manually patching that helper because of some shortcomings (see for example https://github.com/vuejs/vuex/issues/939)\r\n- offers no way to automatically update the copied helper once it changes in the documentation\r\n\r\n### What does the proposed API look like?\r\nRecommend to use https://github.com/posva/vuex-mock-store instead.\r\n\r\n```javascript\r\n// actions.js\r\n\r\nimport shop from '../api/shop'\r\n\r\nexport const getAllProducts = ({ commit }) => {\r\n  commit('REQUEST_PRODUCTS')\r\n  return shop.getProducts().then(products => {\r\n    commit('RECEIVE_PRODUCTS', products)\r\n  })\r\n}\r\n```\r\n\r\n```javascript\r\n// actions.spec.js\r\n\r\nimport { Store } from 'vuex-mock-store'\r\n\r\nconst store = new Store()\r\n\r\nafterEach(() => store.reset())\r\n\r\ndescribe('actions', () => {\r\n  it('getAllProducts', done => {\r\n    actions.getAllProducts(store)\r\n      .then(() => {\r\n        expect(store.commit).toHaveBeenCalledTimes(2)\r\n        expect(store.commit).toHaveBeenCalledWith('REQUEST_PRODUCTS')\r\n        expect(store.commit).toHaveBeenCalledWith('RECEIVE_PRODUCTS',  /* mocked response */)\r\n      })\r\n      .then(done)\r\n      .catch(done.fail)\r\n})\r\n```\r\n\r\nsee also https://github.com/vuejs/vue-test-utils/issues/1060\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1562","RelatedDescription":"Open issue \"Deprecate testAction helper in favor of vuex-mock-store\" (#1562)"},{"Id":"450569242","IsPullRequest":false,"CreatedAt":"2019-05-31T01:03:40","Actor":"mspiderv","Number":"1561","RawContent":null,"Title":"Retrieve module context from store instance","State":"open","Body":"### What problem does this feature solve?\r\nThis feature adds the ability to retrieve the store module context directly from root store instance.\r\n\r\n### What does the proposed API look like?\r\nLet's suppose, that `store` variable is my Vuex (root) store instance.\r\n\r\nI solve this problem with the following code:\r\n\r\n```\r\nlet subModuleContext = store._modulesNamespaceMap['subModuleName/'].context\r\n```\r\n\r\nIt would be nice to write\r\n\r\n```\r\nlet subModuleContext = store.getContext('subModuleName')\r\n```\r\n\r\nThen, I can write `subModuleContext.dispatch('someAction')` instead of `store.dispatch('subModuleName/someAction')`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1561","RelatedDescription":"Open issue \"Retrieve module context from store instance\" (#1561)"},{"Id":"448157757","IsPullRequest":false,"CreatedAt":"2019-05-30T07:01:45","Actor":"xianshenglu","Number":"1556","RawContent":null,"Title":"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode","State":"closed","Body":"### What problem does this feature solve?\r\nAs [doc](https://vuex.vuejs.org/guide/strict.html) said, \r\n\r\n> In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. \r\n\r\nHowever, **state will still be mutated** though an error would be thrown. \r\n\r\nIn my opinion, this behavior is weird and misleading. Normally,  operation would fail if an error showed. But in this case, it didn't. \r\n\r\nAlso, if a developer doesn't see this error and only see the result which is actually worked, he might do this behavior all the time until one day he find the error.\r\n\r\n So, my propose is\r\n\r\n>  Why Not Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode?\r\n\r\nThere should be a way to absolutely disable direct state mutation outside of mutation handlers. \r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst store = new Vuex.Store({\r\n  // ...\r\n  strict: true\r\n})\r\n```\r\nDirect state mutation outside of mutation handlers would be disabled when `strict` is true.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1556","RelatedDescription":"Closed issue \"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode\" (#1556)"},{"Id":"450157740","IsPullRequest":false,"CreatedAt":"2019-05-30T06:56:44","Actor":"savoygu","Number":"1560","RawContent":null,"Title":"the parent state's key is covered by the same key of the child module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust look at the content displayed on the page.\r\n\r\n### What is expected?\r\nNot covered\r\n\r\n### What is actually happening?\r\nCovered\r\n\r\n---\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1560","RelatedDescription":"Closed issue \"the parent state's key is covered by the same key of the child module\" (#1560)"},{"Id":"450155081","IsPullRequest":false,"CreatedAt":"2019-05-30T06:38:52","Actor":"savoygu","Number":"1559","RawContent":null,"Title":"[BUG] the parent state's key is covered by the same key of the child module","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n  }\r\n```","Url":"https://github.com/vuejs/vuex/issues/1559","RelatedDescription":"Closed issue \"[BUG] the parent state's key is covered by the same key of the child module\" (#1559)"},{"Id":"449676032","IsPullRequest":false,"CreatedAt":"2019-05-29T08:46:50","Actor":"de-don","Number":"1558","RawContent":null,"Title":"Add handler \"subscribeAction.onError\"","State":"open","Body":"### What problem does this feature solve?\r\nThe \"subscribeAction.after\" is not run if an action throws an error.\r\n\r\n### What does the proposed API look like?\r\nI propose to add one more property for catching errors in actions:\r\n```\r\nconst waitPlugin = (store) => {\r\n  store.subscribeAction({\r\n    before: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    after: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    onError: (action, error) => {\r\n      console.log(action.type);\r\n    }\r\n  });\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1558","RelatedDescription":"Open issue \"Add handler \"subscribeAction.onError\"\" (#1558)"},{"Id":"448881052","IsPullRequest":false,"CreatedAt":"2019-05-28T06:31:34","Actor":"chulman444","Number":"1557","RawContent":null,"Title":"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2tb9frcj/1/](https://jsfiddle.net/2tb9frcj/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the reproduction, open the developer console panel, click on the \"click\", Look at the result and please click on the `Object > val`.\r\n\r\n### What is expected?\r\n0 is printed out when clicking on the output of:\r\n\r\n```\r\nconsole.log(\"Printed as undefined\", store.state.tests[0])\r\n```\r\n\r\n### What is actually happening?\r\nPrinted as undefined but behaves like zero\r\n\r\n---\r\nI know that `mutations` are not asynchronous, so the `setTimeout` or `$nextTick` won't fix it; try clicking the button multiple times to add more entries but the old values still 'display' as undefined but behaves like zero.\r\n\r\nBehaves like zero, so I'm fine with it. Printing out the value directly prints zero, so I'm fine with it. But this was HUGELY misleading in my case when it printed out `undefined`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1557","RelatedDescription":"Closed issue \"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly\" (#1557)"},{"Id":"445811290","IsPullRequest":true,"CreatedAt":"2019-05-22T02:28:11","Actor":"liyangworld","Number":"1554","RawContent":null,"Title":"add warnings when the different namespaced modules has the same names…","State":"closed","Body":"Add warnings when the different namespaced modules has the same namespace.\r\nThere is a situation that different namespaced modules could have the same namespace, so when in the method of installModule, generate store._modulesNamespaceMap, the follow module will override the before module.\r\nFor example:\r\n```\r\nnew Store({\r\n  modules: {\r\n    m1: {\r\n      namespaced: true,\r\n      state: {\r\n        a: \"a1\"\r\n      }\r\n    },\r\n    m2: {\r\n      modules: {\r\n        m1: {\r\n          namespaced: true,\r\n          state: {\r\n            a: \"a2\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\nthe module m1 has the namespace 'm1',\r\nthe module m2/m1 has the same namespace 'm1'\r\nso in the store._modulesNamespaceMap the module m2/m1 will override the module m1","Url":"https://github.com/vuejs/vuex/pull/1554","RelatedDescription":"Closed or merged PR \"add warnings when the different namespaced modules has the same names…\" (#1554)"},{"Id":"437594509","IsPullRequest":false,"CreatedAt":"2019-05-21T11:01:53","Actor":"LaoCheng-cjs","Number":"1543","RawContent":null,"Title":"【回家种田】从入门到失败","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://木有.com](https://木有.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n## 我就修改 state 都没有成功过。\r\n\r\n> 我新建项目到开始写state赋值，就注定一辈子不是这快料吧。\r\n\r\n```\r\nvue.esm.js?efeb:628 [Vue warn]: Error in created hook: \"RangeError: Maximum call stack size exceeded\"\r\n\r\nfound in\r\n\r\n---> <App> at src/App.vue\r\n       <Root>\r\n```\r\n\r\n```\r\nvue.esm.js?efeb:1897 RangeError: Maximum call stack size exceeded\r\n    at Function.keys (<anonymous>)\r\n    at _traverse (vue.esm.js?efeb:2153)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\nlogError @ vue.esm.js?efeb:1897\r\nglobalHandleError @ vue.esm.js?efeb:1888\r\nhandleError @ vue.esm.js?efeb:1848\r\ninvokeWithErrorHandling @ vue.esm.js?efeb:1871\r\ncallHook @ vue.esm.js?efeb:4222\r\nVue._init @ vue.esm.js?efeb:5011\r\nVueComponent @ vue.esm.js?efeb:5157\r\ncreateComponentInstanceForVnode @ vue.esm.js?efeb:3292\r\ninit @ vue.esm.js?efeb:3123\r\ncreateComponent @ vue.esm.js?efeb:5983\r\ncreateElm @ vue.esm.js?efeb:5930\r\npatch @ vue.esm.js?efeb:6521\r\nVue._update @ vue.esm.js?efeb:3948\r\nupdateComponent @ vue.esm.js?efeb:4069\r\nget @ vue.esm.js?efeb:4482\r\nWatcher @ vue.esm.js?efeb:4471\r\nmountComponent @ vue.esm.js?efeb:4076\r\nVue.$mount @ vue.esm.js?efeb:9057\r\nVue.$mount @ vue.esm.js?efeb:11953\r\nVue._init @ vue.esm.js?efeb:5021\r\nVue @ vue.esm.js?efeb:5088\r\n(anonymous) @ main.js?1c90:38\r\n(anonymous) @ main.js:55\r\n./src/main.js @ app.js:1135\r\n__webpack_require__ @ app.js:708\r\nfn @ app.js:113\r\n0 @ app.js:1184\r\n__webpack_require__ @ app.js:708\r\n(anonymous) @ app.js:806\r\n(anonymous) @ app.js:809\r\nShow 7 more frames\r\n```\r\n\r\n### 啥鬼，不管了复制粘贴 ===>  翻译一下\r\n\r\n```\r\nvue.esm.js吗?创建钩子中的错误:“RangeError:最大调用堆栈大小超出”\r\n中发现的\r\n[Vue warn]:创建钩子中的错误:\"RangeError:最大调用堆栈大小超出\"\r\n```\r\n\r\n##### that?\r\n\r\n> 不对吧，咱也是老实人，从来不干出格事情来，不就是 页面中：\r\n\r\n```\r\nthis.$store.commit('xxx')\r\n```\r\n\r\n> 在看下面的vuex\r\n\r\n```js\r\n// vuex\r\nstate:{\r\n  ff:''\r\n},\r\nmutations:{\r\n   xxx(state){\r\n     state.ff = 23;\r\n  }\r\n}\r\n```\r\n\r\n> 最后吐槽下，真难学，（苦）咽下去，\r\n\r\n### What is expected?\r\n能帮我解答下，谢谢\r\n\r\n### What is actually happening?\r\n帮帮大哥大姐，大佬\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1543","RelatedDescription":"Closed issue \"【回家种田】从入门到失败\" (#1543)"},{"Id":"441134733","IsPullRequest":false,"CreatedAt":"2019-05-21T11:00:22","Actor":"GoodLuckIce","Number":"1549","RawContent":null,"Title":"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[http://没有](http://没有)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n当registerModule 动态注册.   preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\r\n\r\n### What is expected?\r\n期望 第一次动态注册 保留新注册的state ,之后的注册 采用 preserveState: true 方案\r\n\r\n### What is actually happening?\r\n state undefined 导致 actions 多所有方法无法调用\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1549","RelatedDescription":"Closed issue \"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\" (#1549)"},{"Id":"445160547","IsPullRequest":false,"CreatedAt":"2019-05-21T10:59:33","Actor":"Xambey","Number":"1553","RawContent":null,"Title":"MapGetters not working for modules with namespaced=true in vuex ","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://gitlab.com/Xambey/large](https://gitlab.com/Xambey/large)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Run the application.\r\n2) Open console in web browser (or vue extensions)\r\n3) Catch the error in the log (ChildA.vue: 14 )\r\n\r\n\"Property or method \"score\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property\"\r\n\r\nfound in\r\n\r\n---> <ChildA> at src/components/ChildA.vue\r\n       <Parent> at src/components/Parent.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n\r\n### What is expected?\r\nThe getter 'score'  is created in my component. (this.$store.getters['scoreBoard/score'] -> this.score)\r\n\r\n\r\n\r\n### What is actually happening?\r\nGetter no mapped, vue google chrome extension show what state existed https://i.imgur.com/QKB7Wqm.png\r\n\r\n---\r\n```\r\ncomputed: {\r\n    ...mapGetters([\r\n      'scoreBoard/score' // Not found when /scoreBoard/score is existed. \r\n    ])\r\n  }\r\n```\r\nif you do this, then everything works (or namespaced = false): \r\n```\r\ncomputed: {\r\n    ...mapGetters({\r\n      score: 'scoreBoard/score'\r\n    })\r\n  }\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1553","RelatedDescription":"Closed issue \"MapGetters not working for modules with namespaced=true in vuex \" (#1553)"},{"Id":"446184900","IsPullRequest":true,"CreatedAt":"2019-05-21T10:49:47","Actor":"57u","Number":"1555","RawContent":null,"Title":"Typo correction in docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1555","RelatedDescription":"Closed or merged PR \"Typo correction in docs\" (#1555)"},{"Id":"444327664","IsPullRequest":true,"CreatedAt":"2019-05-15T09:21:08","Actor":"wolfgangwalther","Number":"1552","RawContent":null,"Title":"fix memory leak #1507","State":"open","Body":"The fix in PR #1508 was not complete, the anonymous function for the getter `() => store._vm[key]` was preserving the previous context and therefore `oldVm` as well.","Url":"https://github.com/vuejs/vuex/pull/1552","RelatedDescription":"Open PR \"fix memory leak #1507\" (#1552)"},{"Id":"444213353","IsPullRequest":true,"CreatedAt":"2019-05-15T03:00:41","Actor":"dajiaoyisheng","Number":"1551","RawContent":null,"Title":"对象展开运算符","State":"open","Body":"It is a Stage 4 proposal for ECMAScript.","Url":"https://github.com/vuejs/vuex/pull/1551","RelatedDescription":"Open PR \"对象展开运算符\" (#1551)"},{"Id":"441795075","IsPullRequest":true,"CreatedAt":"2019-05-08T15:28:02","Actor":"sairoutine","Number":"1550","RawContent":null,"Title":"chore(typo): fix typo in comments","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1550","RelatedDescription":"Open PR \"chore(typo): fix typo in comments\" (#1550)"},{"Id":"441132371","IsPullRequest":false,"CreatedAt":"2019-05-07T09:28:52","Actor":"GoodLuckIce","Number":"1548","RawContent":null,"Title":"preserveState: true 时嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","State":"closed","Body":"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","Url":"https://github.com/vuejs/vuex/issues/1548","RelatedDescription":"Closed issue \"preserveState: true 时嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\" (#1548)"},{"Id":"440616043","IsPullRequest":false,"CreatedAt":"2019-05-06T09:35:18","Actor":"AlexSHoffman","Number":"1547","RawContent":null,"Title":"[Feature Request] Add mapFields","State":"open","Body":"### What problem does this feature solve?\r\nRight now, you cannot use nested properties in `v-model` without writing a ton of unnecessary computed objects for each property:\r\n\r\n## Current way:\r\n```HTML\r\n<input v-model=\"searchQuery\">\r\n<v-switch v-model=\"searchOptionsIncludeFiles\"></v-switch>\r\n<v-switch v-model=\"searchOptionsIgnoreCase\"></v-switch>\r\n```\r\n\r\n```JS\r\ncomputed: {\r\n  searchQuery: {\r\n    get () {\r\n      return this.$store.state.search.query\r\n    },\r\n    set (value) {\r\n      this.$store.commit('setSearchQuery', value)\r\n    }\r\n  },\r\n  searchOptionsIncludeFiles: {\r\n    get () {\r\n      return this.$store.state.search.options.includeFiles\r\n    },\r\n    set (value) {\r\n      this.$store.commit('setSearchOptionsIncludeFiles', value)\r\n    }\r\n  },\r\n  searchOptionsIgnoreCase: {\r\n    get () {\r\n      return this.$store.state.search.options.ignoreCase\r\n    },\r\n    set (value) {\r\n      this.$store.commit('setSearchOptionsIgnoreCase', value)\r\n    }\r\n  },\r\n}\r\n```\r\n\r\nBut it would be much better to just do it like this:\r\n\r\n## A better way:\r\n```HTML\r\n<input v-model=\"query\">\r\n<v-switch v-model=\"includeFiles\"></v-switch>\r\n<v-switch v-model=\"ignoreCase\"></v-switch>\r\n```\r\n``` JS\r\ncomputed: {\r\n  ...mapFields([\r\n    'search.query',\r\n    'search.options.includeFiles',\r\n    'search.options.ignoreCase',\r\n  ])\r\n}\r\n\r\n```\r\n\r\n### What does the proposed API look like?\r\nThere's a module called `vuex-map-fields`, perhaps it would make sense to add something like this to Vuex?:\r\n\r\n```\r\n...mapFields([\r\n    'search.query',\r\n    'search.options.includeFiles',\r\n    'search.options.ignoreCase',\r\n])\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1547","RelatedDescription":"Open issue \"[Feature Request] Add mapFields\" (#1547)"},{"Id":"440081424","IsPullRequest":true,"CreatedAt":"2019-05-03T14:49:35","Actor":"frankcs","Number":"1546","RawContent":null,"Title":"Implementing a cache for the gettersProxy object creation","State":"open","Body":"Fixes #1539","Url":"https://github.com/vuejs/vuex/pull/1546","RelatedDescription":"Open PR \"Implementing a cache for the gettersProxy object creation\" (#1546)"},{"Id":"439465889","IsPullRequest":false,"CreatedAt":"2019-05-02T07:57:37","Actor":"ThomasKientz","Number":"1545","RawContent":null,"Title":"Dynamic namespaces in binding helpers (mapState, …)","State":"closed","Body":"### What problem does this feature solve?\r\nWith this feature we can use a prop for setting a namespace :\r\n\r\n`...mapState(this.namespace, ['filter'])`\r\n\r\nActually we got the error :\r\n\r\n> Cannot read property 'namespace' of undefined\r\n\r\nIn my app I am dynamically registering store modules with generated on the fly namespaces. And I am passing the namespace as component properties.\r\n\r\nRight now I have to do :\r\n\r\n```\r\nfilter() { // more verbose but working\r\n      return this.$store.state[this.namespace].filter\r\n}\r\n```\r\n\r\nwhich is more verbose.\r\n\r\n\r\nrelated stackoverflow issue : https://stackoverflow.com/questions/55927452/vuex-dynamic-namespaces-in-binding-helpers-mapstate\r\n\r\n\r\n### What does the proposed API look like?\r\n...mapState(this.namespace, ['filter'])\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1545","RelatedDescription":"Closed issue \"Dynamic namespaces in binding helpers (mapState, …)\" (#1545)"},{"Id":"438020036","IsPullRequest":false,"CreatedAt":"2019-04-28T09:04:06","Actor":"syedsimanta03","Number":"1544","RawContent":null,"Title":"VUEX for flutter","State":"closed","Body":"### What problem does this feature solve?\r\nHi.I like vuex,but I'm currently using flutter to develop apps, and I don't have a state management library that I like to use.Will you develop a vuex for the flutter?\r\n\r\n### What does the proposed API look like?\r\n343dsgds32324\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1544","RelatedDescription":"Closed issue \"VUEX for flutter\" (#1544)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-02T05:30:49.0730785Z","RunDurationInMilliseconds":2700}