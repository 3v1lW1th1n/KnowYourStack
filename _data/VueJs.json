{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7116487426","Type":"IssuesEvent","CreatedAt":"2018-01-18T11:11:23","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2009","RelatedDescription":"Closed issue \"The KeepAlive of A/B pages are true, scrollTop is error when B back to A.\" (#2009) at vuejs/vue-router","RelatedBody":"1. Vue + Vue-router + Vuex\r\n2. The A/B pages's KeepAlive all are true.\r\n3. When A link to B, i save dom's scrollTop into store in the beforeRouteLeave.\r\n4. When B back to A, update dom's scrollTop from store, but dom's scrollTop always is 0.\r\n5. If C page is not keepalive and C back to A, dom's scrollTop will get value from store's value.\r\nso i have not solution for the question, i need you help. \r\nthanks.\r\n"},{"Id":"7116213368","Type":"IssuesEvent","CreatedAt":"2018-01-18T10:12:24","Actor":"aweiu","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2008","RelatedDescription":"Closed issue \"As long as the query changes, the parseQuery will be called\" (#2008) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nFor example:\r\nI want to change all the CamelCase Query to KebabCase Query\r\n\r\n### What does the proposed API look like?\r\nAs long as the query changes, the parseQuery will be called\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7116081991","Type":"PullRequestEvent","CreatedAt":"2018-01-18T09:45:19","Actor":"aweiu","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2010","RelatedDescription":"Opened pull request \"Update router.d.ts\" (#2010) at vuejs/vue-router","RelatedBody":"fix type for string[] value of query\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n"},{"Id":"7116075785","Type":"IssuesEvent","CreatedAt":"2018-01-18T09:44:04","Actor":"raybest","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2009","RelatedDescription":"Opened issue \"The KeepAlive of A/B pages are true, scrollTop won't error when B back to A.\" (#2009) at vuejs/vue-router","RelatedBody":"1. Vue + Vue-router + Vuex\r\n2. The A/B pages's KeepAlive all are true.\r\n3. When A link to B, i save dom's scrollTop into store in the beforeRouteLeave.\r\n4. When B back to A, update dom's scrollTop from store, but dom's scrollTop always is 0.\r\n5. If C page is not keepalive and C back to A, dom's scrollTop will get value from store's value.\r\nso i have not solution for the question, i need you help. \r\nthanks.\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7120671935","Type":"IssuesEvent","CreatedAt":"2018-01-19T02:35:54","Actor":"1209823208","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1138","RelatedDescription":"Opened issue \"$store对象中带下划线的函数为什么不能直接调用\" (#1138) at vuejs/vuex","RelatedBody":" #<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nthis.$store._actions.getAllProducts;无效\r\nthis.$store.dispatch('getAllProducts')  有用\r\n"},{"Id":"7119283786","Type":"PullRequestEvent","CreatedAt":"2018-01-18T20:19:45","Actor":"hootlex","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1137","RelatedDescription":"Opened pull request \"Shopping cart example update\" (#1137) at vuejs/vuex","RelatedBody":"- remove mutation type\r\n- rename `addToCart` action to `addProductToCart`\r\n- rename products module’s `addToCart` mutation to `decrementProductInventory`\r\n- rename cart module’s `addToCart` mutation to `pushProductToCart`\r\n- make mutations responsible for updating one piece of the state\r\n\r\n\r\nNow instead of having two mutations of the same type, the `addProductToCart` action commits `pushProductToCart` and `decrementProductInventory`.\r\n\r\ncc @ktsn https://github.com/vuejs/vuex/issues/1109"},{"Id":"7117410259","Type":"IssuesEvent","CreatedAt":"2018-01-18T14:29:41","Actor":"MartinMuzatko","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1136","RelatedDescription":"Opened issue \"Document why mapGetters that return functions belong into computed\" (#1136) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nIt is not clear from the documentation, why `mapGetters` belong into `computed` and not `methods`.\r\nAFAIK there is computed in contrast to methods, because computed is executed when the component is mounted. However, when you return functions from the store in getters, (e.g. filters like `getUsersByRole`) why do they belong into `computed` then and not methods? Is there a semantic difference?\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-01-19T05:30:32.8267254Z","RunDurationInMilliseconds":1948}