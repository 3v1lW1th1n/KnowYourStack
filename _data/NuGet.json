{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11866043046","Type":"IssuesEvent","CreatedAt":"2020-03-26T02:24:31","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7917","RelatedDescription":"Opened issue \"Integrate package versioning playground tool into NuGet.org\" (#7917) at NuGet/NuGetGallery","RelatedBody":"**Problem:** Figuring out which versions of a package a version range or floating version will resolve to can be confusing at times. Currently, there is not a publicly available tool to help customers figure this out.\r\n\r\n**Solution:** @joelverhagen has a neat web app that does exactly this, but may need some work regarding scalability and UI before being featured on NuGet.org. \r\n\r\n[Web App](https://nugettoolsdev.azurewebsites.net/5.5.0-floating.7611/find-best-version-match?versionRange=1.*-*&versions=1.0.0%0D%0A2.0.0-test%0D%0A%0D%0A)"},{"Id":"11865982171","Type":"IssuesEvent","CreatedAt":"2020-03-26T02:12:59","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7916","RelatedDescription":"Opened issue \"Automatically download and embed icon from iconUrl\" (#7916) at NuGet/NuGetGallery","RelatedBody":"**Problem:** At some point nuget.org will stop accepting packages with iconUrls in favor of migrating package authors to embedded icons. This will require package authors to modify their current metadata practices.\r\n\r\n**Solution:** Automatically download the image from and iconUrl and embed it into the nupkg as pack time. This will achieve the same benefits of embedded icons (because the icon will be embedded), while making the transition a seamless experience to the package author."},{"Id":"11858542104","Type":"IssuesEvent","CreatedAt":"2020-03-25T11:39:17","Actor":"SamuelvVelzen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7915","RelatedDescription":"Closed issue \"Login first time unknown error\" (#7915) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWhen I try to create an account it let me logs into my microsoft account and is asking for permission. After I accept the permission, I get an email from microsoft that nuget is allowed to read different information of my account. However when redirecting back to the nuget login page it shows a unknown error and doesn't let me login.\r\n\r\n### To Reproduce\r\n1) go to [login page of nuget](https://www.nuget.org/users/account/LogOn)\r\n2) Use the \"Sign in with Microsoft\" button\r\n3) Enter login info\r\n4) Accept the information that nuget wants to access.\r\n5) Return to the login page of nuget with the unknown error \r\n\r\n### Expected behavior\r\nTo login and use the nuget website to retrieve an api key so I can upload my nuget package\r\n\r\n### Additional context\r\nI have tried multiple emails, personal, company and school. All of them gave the same error."},{"Id":"11858534638","Type":"IssuesEvent","CreatedAt":"2020-03-25T11:38:20","Actor":"SamuelvVelzen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7915","RelatedDescription":"Opened issue \"Login first time unknown error\" (#7915) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWhen I try to create an account it let me logs into my microsoft account and is asking for permission. After I accept the permission, I get an email from microsoft that nuget is allowed to read different information of my account. However when redirecting back to the nuget login page it shows a unknown error and doesn't let me login.\r\n\r\n### To Reproduce\r\n1) go to [login page of nuget](https://www.nuget.org/users/account/LogOn)\r\n2) Use the \"Sign in with Microsoft\" button\r\n3) Enter login info\r\n4) Accept the information that nuget wants to access.\r\n5) Return to the login page of nuget with the unknown error \r\n\r\n### Expected behavior\r\nTo login and use the nuget website to retrieve an api key so I can upload my nuget package\r\n\r\n### Additional context\r\nI have tried multiple emails, personal, company and school. All of them gave the same error."},{"Id":"11853568690","Type":"IssuesEvent","CreatedAt":"2020-03-24T22:17:41","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7914","RelatedDescription":"Opened issue \"[Usabilla] Package feedback provided via usabilla\" (#7914) at NuGet/NuGetGallery","RelatedBody":"Package: https://www.nuget.org/packages/Microsoft.ApplicationInsights/\r\nInquiry:   Hi, Could you please let us know till when Microsoft \"Application Insights\" 2.9 version will be supported\r\n\r\n"},{"Id":"11853543767","Type":"IssuesEvent","CreatedAt":"2020-03-24T22:14:12","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7913","RelatedDescription":"Opened issue \"[Usabilla] Search feedback.\" (#7913) at NuGet/NuGetGallery","RelatedBody":"https://app.usabilla.com/feedback/item/c162f4e300072aae79bc89a2b8c29f1c6ade33eb"},{"Id":"11850523562","Type":"IssuesEvent","CreatedAt":"2020-03-24T16:45:31","Actor":"clairernovotny","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7912","RelatedDescription":"Opened issue \"API / endpoint for snupkg's\" (#7912) at NuGet/NuGetGallery","RelatedBody":"We need an API / metadata on the package that points to a snupkg, if the package has one.\r\n\r\nThe scenario is that tooling may need to download all symbols for a NuGet package as part of validation steps, such as ensuring the Source Link information is properly embedded.\r\n\r\nCurrently the only option is to use the CDN endpoint, and check with a HEAD:  `https://globalcdn.nuget.org/symbol-packages/{lowercase ID}.{lowercase normalized version}.snupkg`\r\n\r\nThere's no guarantees around this endpoint, however.\r\n\r\nDownloading each PDB via the symbol server API is less efficient as each pdb needs to be calculated and downloaded, if published, individually. For validation scenarios, all pdb's would be required anyway.\r\n\r\n--\r\n\r\nThere's another scenario where people find it generally useful to see what's in the snupkg package, downloading and opening with a tool like NuGet Package Explorer.\r\n\r\n--\r\n\r\nNuGet Package Explorer intends on helping people know if packages are properly Source Linked and thus needs to perform all these steps: https://github.com/NuGetPackageExplorer/NuGetPackageExplorer/issues/904"},{"Id":"11842140533","Type":"IssuesEvent","CreatedAt":"2020-03-23T22:19:27","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7911","RelatedDescription":"Opened issue \"[Package Renames] Reduce propagation time\" (#7911) at NuGet/NuGetGallery","RelatedBody":"Popularity transfers depend on the following things to propagate to search:\r\n\r\n* auxiliary2azuresearch job - This recalculates the packages' popularity scores and saves the popularity transfers to an auxiliary file. This runs once every 30 minutes.\r\n* [ ] Search auxiliary files reload - This reloads the popularity transfers information, which is what the Gallery uses to detect whether a popularity transfer has propagated to search. This runs once every hour.\r\n\r\nAs a result, it may take up to 1.5 hours for popularity transfers to fully take effect. We increase the job and reload cadences to speed up popularity transfers."},{"Id":"11841914829","Type":"PullRequestEvent","CreatedAt":"2020-03-23T21:47:40","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7899","RelatedDescription":"Merged pull request \"Updated MaxSupportedMinClientVersion\" (#7899) at NuGet/NuGetGallery","RelatedBody":"Bringing parity with https://github.com/NuGet/NuGet.Services.Index/pull/161"},{"Id":"11841434969","Type":"PullRequestEvent","CreatedAt":"2020-03-23T20:47:16","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7887","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.03.19]RI dev to master\" (#7887) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11840179764","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:23:58","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7910","RelatedDescription":"Opened issue \"[Package Renames] Add message for pending popularity transfers on \"Manage Package\" page\" (#7910) at NuGet/NuGetGallery","RelatedBody":"Popularity transfer may take over an hour to propagate to search. The customers should see an alert on the \"Manage Package\" page that the popularity transfers are pending.\r\n\r\nDepends on:\r\n* [NuGetGallery#7908](https://github.com/NuGet/NuGetGallery/issues/7908) - Add Package Renames form to \"Manage Package\" page\r\n* [NuGetGallery#7903](https://github.com/nuget/nugetgallery/issues/7903) - Expose popularity transfers in search\r\n"},{"Id":"11840009316","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:05:45","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7909","RelatedDescription":"Opened issue \"[Package Renames] Add Gallery API for end-to-end testing\" (#7909) at NuGet/NuGetGallery","RelatedBody":"The end-to-end tests should be able to use the Gallery API to rename a package."},{"Id":"11839982562","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:02:53","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7908","RelatedDescription":"Opened issue \"[Package Renames] Add Package Renames form to \"Manage Package\" page\" (#7908) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839958952","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:00:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7907","RelatedDescription":"Opened issue \"[Package Renames] Show replacement packages on \"Display Package\" page\" (#7907) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839880894","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:52:35","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7906","RelatedDescription":"Opened issue \"[Package Renames] A/B test the popularity transfer\" (#7906) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839860029","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:50:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7905","RelatedDescription":"Opened issue \"[Package Renames] Monitor the popularity transfer freshness\" (#7905) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839841089","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:48:35","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7904","RelatedDescription":"Opened issue \"[Package Renames] Add end-to-end test\" (#7904) at NuGet/NuGetGallery","RelatedBody":"Test that:\r\n\r\n1. Upload a package\r\n1. Rename it using the Gallery API\r\n1. Check that search API lists its renames"},{"Id":"11839811993","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:45:44","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7903","RelatedDescription":"Opened issue \"[Package Renames] Expose popularity transfers in search\" (#7903) at NuGet/NuGetGallery","RelatedBody":"Expose popularity transfers on the `/search/query` endpoint.\r\n\r\nExpose the popularity transfer auxiliary file metadata on the `/search/diag` endpoint."},{"Id":"11839772634","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:41:49","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7902","RelatedDescription":"Opened issue \"[Package Renames] Post-MVP: Refine the transfer popularity algorithm\" (#7902) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839754285","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:39:56","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7901","RelatedDescription":"Opened issue \"[Package Renames] Post-MVP: Consider letting new packages match on old packages' ID \" (#7901) at NuGet/NuGetGallery","RelatedBody":"Today a renamed package may not match the same token as the original package. Examples:\r\n\r\n* `Azure.Storage.Blobs` was originally `Microsoft.Azure.Storage.Blob`. New package name does not match on `blob` queries\r\n* `Azure.Storage.Queues` was originally `Microsoft.Azure.Storage.Queue`. New package name does not match on `queue` queries.\r\n\r\nToday's work-around is to add a tag for missing tokens. We could add a new field to search documents that contains the names of the original packages. This may have the following benefits:\r\n\r\n1. The work-around requires work from package author. Many are unaware of the work-around \r\n1. We may be able to boost this new field better since we control it\r\n\r\nThis requires further experimentation and should be done after the minimum viable product is complete!"},{"Id":"11839673062","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:31:52","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7900","RelatedDescription":"Opened issue \"[Package Renames] Add new schema\" (#7900) at NuGet/NuGetGallery","RelatedBody":"Add the `PackageRenames` table to the database:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nKey | Int | Primary key   (autogenerated by DB)\r\nFromPackageRegistrationKey | int | The package that   was renamed. There is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nToPackageRegistrationKey | int | The replacement   package. here is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nTransferPopularity | bool | True if the   \"from\" package's popularity should be transferred to the   replacement package.     This column is indexed.\r\n\r\nWe will also add the following column to `PackageRegistrations` table:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nRenamedMessage | String,   nvarchar(max), nullable | The custom message   for renamed packages\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11866090575","Type":"IssuesEvent","CreatedAt":"2020-03-26T02:33:58","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9345","RelatedDescription":"Opened issue \"Consider a new UI for PackageReference\" (#9345) at NuGet/Home","RelatedBody":"We document many features around PackageReference and how they're used with NuGet.exe and dotnet:\r\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#project-type-support\r\n\r\nWhat about Visual Studio? Is the existing workflow working for all of our customers? Would a UI reduce barrier-to-entry for those unfamiliar with NuGet/.NET and guide users through features such as:\r\n\r\n- Floating Version Ranges\r\n\r\n- PackageReferenc condition (TFM)\r\n\r\n- Lock File modes\r\n\r\n- Coming Soon: CPVM\r\n\r\nIssue here is for tracking discussion/future work in this area."},{"Id":"11866018235","Type":"IssuesEvent","CreatedAt":"2020-03-26T02:19:50","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9297","RelatedDescription":"Closed issue \"ContentFiles to output directory in project which refers a nuget which refers another nuget package\" (#9297) at NuGet/Home","RelatedBody":"I'm building multiple nuget packages which include content files and can refer each other. These content files should always be copied to output directory.\r\n\r\nThe problem i'm having is that content files from a nuget package are correctly outputted to the output directory if the project references the nuget directly. But if a nuget package refers another nuget package with contentfiles, these content files will not copy to the output directory and are located in the wrong path.\r\n\r\nDoes anyone know a solution to this problem?\r\n\r\nI've added an example to the repo here: https://github.com/Bramvanelderen10/nugetdemoi\r\n\r\n## For context:\r\n\r\nSo lets say i have the following 2 packages\r\n\r\n- Base package\r\n    - resource/contentFileBase.json\r\n- Utilities package\r\n    - resource/contentFileUtilities.json\r\n    - references the base package\r\n\r\nIn both projects csproj files i have defined the following entries for the content files  \r\n\r\nIn base:\r\n```\r\n<Content Include=\"resource/contentFileBase.json\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n      <PackageCopyToOutput>true</PackageCopyToOutput>\r\n</Content>\r\n```  \r\n\r\nIn utilities:\r\n```\r\n<Content Include=\"resource/contentFileUtilities.json\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n      <PackageCopyToOutput>true</PackageCopyToOutput>\r\n</Content>\r\n```  \r\n\r\n\r\nNow i package both the base package and the utilities package using `dotnet pack`. The resulting nuspec for the Utilities package will be generated:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>Utilities</id>\r\n    <version>0.0.1</version>\r\n    <dependencies>\r\n      <group targetFramework=\".NETCoreApp2.2\">\r\n        <dependency id=\"base\" version=\"0.0.1\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n    <contentFiles>\r\n      <files include=\"any/netcoreapp2.2/resources/contentFileUtilities.json\" buildAction=\"Content\" copyToOutput=\"true\" />\r\n      <files include=\"any/netcoreapp2.2/contentFileBase.json\" buildAction=\"Content\" />\r\n    </contentFiles>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\nAs you can immidiatly see in the nuspec the <files> element for contentFileBase.json is invalid. It is missing both the `resources/` path and the `copyToOuput=\"true\"` attribute\r\n\r\nHere a screenshot of the setup and the problem:\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/jFmAn.png\r\n\r\n\r\nUsed dotnet cli dotnet pack command. With dotnet core 2.2.4\r\n"},{"Id":"11866001486","Type":"IssuesEvent","CreatedAt":"2020-03-26T02:16:38","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9344","RelatedDescription":"Opened issue \"Automatically download and embed icon from iconUrl\" (#9344) at NuGet/Home","RelatedBody":"**Problem:** At some point nuget.org will stop accepting packages with iconUrls in favor of migrating package authors to embedded icons. This will require package authors to modify their current metadata practices.\r\n\r\n**Solution:** Automatically download the image from the iconUrl and embed it into the nupkg at pack time. This will achieve the same benefits of embedded icons (because the icon will be embedded), while making the transition a seamless experience to the package author."},{"Id":"11865745459","Type":"IssuesEvent","CreatedAt":"2020-03-26T01:25:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9343","RelatedDescription":"Opened issue \"NuGet in VS should be more resilient to project system misbehavior.\" (#9343) at NuGet/Home","RelatedBody":"Specifically we have a scenario where this like threw and halted the whole restore process. \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/1c2681b16a0bb9be9271abe043a1cbf892761ef8/src/NuGet.Clients/NuGet.PackageManagement.VisualStudio/ProjectServices/VsCoreProjectSystemReferenceReader.cs#L136\r\n\r\nIdeally we are more resilient and don't stop running a restore."},{"Id":"11864596816","Type":"IssuesEvent","CreatedAt":"2020-03-25T22:01:46","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9342","RelatedDescription":"Opened issue \"`dotnet nuget list source` should be able to show which config a source was defined in.\" (#9342) at NuGet/Home","RelatedBody":"design? perhaps this would be tied to verbosity detailed?"},{"Id":"11864287798","Type":"IssuesEvent","CreatedAt":"2020-03-25T21:21:56","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8752","RelatedDescription":"Closed issue \"[Centrally managing NuGet packages and versions] Implement the CPS IVS interfaces.\" (#8752) at NuGet/Home","RelatedBody":""},{"Id":"11864237021","Type":"IssuesEvent","CreatedAt":"2020-03-25T21:15:46","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9337","RelatedDescription":"Closed issue \"Missing format default on sources list\" (#9337) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.5.0\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1909, windows-2019 (on Azure Pipelines)\r\n\r\nWorked before? If so, with which NuGet version: 5.4.0\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Run \"nuget sources list\"\r\n\r\nWith 5.4.0 (and earlier) this produces the detailed output of the sources list. With 5.5.0 it now produces this error:\r\n\r\n```\r\ninvalid value for --format: None. Allowed values: 'detailed' or 'short'\r\n```\r\n\r\nThe default format of 'detailed' is missing, and this is affecting downstream projects like PowerShellGet's Register-PSRepository cmdlet.\r\n"},{"Id":"11863417848","Type":"IssuesEvent","CreatedAt":"2020-03-25T19:41:08","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9341","RelatedDescription":"Opened issue \"Warning when a Project has CPVM enabled but there are not any PackageVersion items defined?\" (#9341) at NuGet/Home","RelatedBody":"## Details about Problem\r\nThis is a new feature request.\r\n\r\nA project can be opted-in but it may not have any PackageVersion elements loaded. This issue is to track the decision if a new warning needs in this case. "},{"Id":"11863050949","Type":"IssuesEvent","CreatedAt":"2020-03-25T19:00:04","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9340","RelatedDescription":"Opened issue \"Add an information message on restore to inform the CPVM users that the feature is in preview. \" (#9340) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nThis is a new feature request. \r\nAdd an information message on restore to inform the CPVM users that the feature is in preview. "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-03-26T05:30:42.4558368Z","RunDurationInMilliseconds":1497}