{"Data":{"Blog":{"FeedItems":[{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8370633616","Type":"PullRequestEvent","CreatedAt":"2018-10-04T21:00:53","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2267","RelatedDescription":"Opened pull request \"[monodroid] Refactor: AndroidSystem placed in separate files\" (#2267) at xamarin/xamarin-android","RelatedBody":"The `AndroidSystem` class now lives in separate source files. No functional\r\nchanges made."},{"Id":"8370109895","Type":"IssuesEvent","CreatedAt":"2018-10-04T19:21:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2266","RelatedDescription":"Opened issue \"Duplicate Java Callable Wrapper names are allowed when they shouldn't be.\" (#2266) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a solution consisting of three projects: `App.csproj`, `Lib1.csproj`, `Lib2.csproj`, in which `App.csproj` references *both* `Lib1.csproj` and `Lib2.csproj`.\r\n2. Add the following file to both `Lib1.csproj` and `Lib2.csproj`:\r\n\r\n    ```csharp\r\n    using System;\r\n    using Android.Runtime;\r\n    \r\n    namespace Lib1\r\n    {\r\n      [Register(\"examplelib.EmptyClass\")]\r\n      public class EmptyClass : Java.Lang.Object\r\n      {\r\n      }\r\n    }\r\n    ```\r\n3. Create an `.apk`: `msbuild /t:SignAndroidPackage App.csproj`\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nIt should error out, as we have two assemblies which will each generate an `example lib.EmptyClass` Java type.\r\n\r\n### Actual Behavior\r\n\r\nWarnings:\r\n\r\n```\r\nwarning : Duplicate managed type found! Mappings between managed types and Java types must be unique. First Type: 'Lib1.EmptyClass, Lib1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'; Second Type: 'Lib1.EmptyClass, Lib2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\nwarning : References to the type 'Lib1.EmptyClass' will refer to 'Lib1.EmptyClass, Lib1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n```\r\n\r\n### Discussion:\r\n\r\nThe warning is correct, in that it should be emitted.  However, *because* we emit that warning, we don't check for duplicate Java Callable Wrapper names.  The problem is here: \r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/5c80b4b260981cf16d74cdcbc8dfc4215c01ec83/src/Xamarin.Android.Build.Tasks/Tasks/GenerateJavaStubs.cs#L188\r\n"},{"Id":"8369655397","Type":"PullRequestEvent","CreatedAt":"2018-10-04T17:59:17","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2265","RelatedDescription":"Opened pull request \"[mono-2018-06] [mono-sdks] Package BCL from dedicated SDKs target.\" (#2265) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8369443479","Type":"PullRequestEvent","CreatedAt":"2018-10-04T17:22:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2264","RelatedDescription":"Closed pull request \"Bump mono for dev15.9 XA P4\" (#2264) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8369369244","Type":"PullRequestEvent","CreatedAt":"2018-10-04T17:08:48","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2264","RelatedDescription":"Opened pull request \"Bump mono for dev15.9 XA P4\" (#2264) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8369244318","Type":"PullRequestEvent","CreatedAt":"2018-10-04T16:46:20","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2263","RelatedDescription":"Opened pull request \"Updated reference to mono/mono@1fd01f4\" (#2263) at xamarin/xamarin-android","RelatedBody":"Updated reference to mono/mono@1fd01f4"},{"Id":"8369102396","Type":"IssuesEvent","CreatedAt":"2018-10-04T16:21:41","Actor":"SuperCorks","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2262","RelatedDescription":"Opened issue \"Labels don't wrap and adjust height on android anymore\" (#2262) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Xamarin Forms cross platform project\r\n2. Update Xamarin.Forms to version 3.3.0.84.0541-pre1\r\n3. Go to MainPage.xaml and change the label's text to a very long string (long enough for it to have to wrap.\r\n4. Build and run the project on an Android device (mine has Android 8.0)\r\n5. Notice that the label doesn't wrap (or doesn't grow in height to show wrapped text)\r\n\r\nThe label does wrap and show text on iOS and with XF v3.2.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe label should show all the text (wrapped to new lines) and grow in height (as it does on iOS).\r\n\r\n### Actual Behavior\r\nIt don't\r\n\r\n### Version Information\r\nIt doesn't work with v3.3.0.84.0541-pre1\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8371728028","Type":"IssuesEvent","CreatedAt":"2018-10-05T02:27:39","Actor":"jotprabh1","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4004","RelatedDescription":"Opened issue \"Editor Placeholder's Font and FontSize on iOS are not set \" (#4004) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSetting the Editor's FontFamily and FontSize doesn't change the Placeholder's Font and FontSize.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use Editor Control in StackLayout\r\n2. Set FontFamily and FontSize properties on Editor\r\n3. Check on an iOS device\r\n\r\n### Expected Behavior\r\nThe FontFamily and FontSize properties set on the control should be used by the Placeholder.\r\n \r\n### Actual Behavior\r\nThe placeholder uses the default FontFamilty and FontSize and it doesn't change as per the properties set on the control on an iOS device. It works fine on an android device.\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.839982\r\n- Last known good version: Unclear\r\n- IDE: Visual Studio for Mac\r\n- Platform Target Frameworks: iOS\r\n  - iOS:  12"},{"Id":"8371610003","Type":"PullRequestEvent","CreatedAt":"2018-10-05T01:44:05","Actor":"Viridovics","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4003","RelatedDescription":"Opened pull request \"Implement fixed mode for Bottom Navigation Bar Android\" (#4003) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd platform specific api:\r\n```\r\nOn<Android>().SetBottomToolbarShiftMode(ToolbarShiftMode.Fixed, ToolbarShiftMode.Fixed);\r\n```\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3083\r\n\r\n### API Changes ###\r\nAdded:\r\n - ToolbarShiftMode GetToolbarShiftMode(BindableObject element)\r\n - ToolbarShiftMode GetToolbarShiftMode(this IPlatformElementConfiguration<Android, FormsElement> config)\r\n - ToolbarShiftMode GetToolbarItemShiftMode(BindableObject element)\r\n - ToolbarShiftMode GetToolbarItemShiftMode(this IPlatformElementConfiguration<Android, FormsElement> config)\r\n - void SetBottomToolbarShiftMode(BindableObject element, ToolbarShiftMode shiftMode, ToolbarShiftMode itemShiftMode)\r\n - IPlatformElementConfiguration<Android, FormsElement> SetBottomToolbarShiftMode(this IPlatformElementConfiguration<Android, FormsElement> config, ToolbarShiftMode toolbarShiftMode, ToolbarShiftMode toolbarItemShiftMode)\r\n \r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n![3083](https://user-images.githubusercontent.com/6348792/46511772-30bae780-c859-11e8-8648-6703b2f26592.gif)\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nUi test `BottomNavigationShiftModes`\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8371558389","Type":"PullRequestEvent","CreatedAt":"2018-10-05T01:24:23","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3744","RelatedDescription":"Merged pull request \"Gtk fix transparencies\" (#3744) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis change fixes using Transparent color as BakcgroundColor in BoxView and ButtonView elements and adds a new TransparentEventBox to be used as base class for all elements using currenyl EventBox as the base element to draw.\r\n\r\n### Issues Resolved ### \r\n\r\n### API Changes ###\r\n\r\nNo API changes\r\n\r\n### Platforms Affected ### \r\n- GTK \r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nBefore\r\n<img width=\"807\" alt=\"screen shot 2018-09-07 at 13 28 50\" src=\"https://user-images.githubusercontent.com/111134/45236793-2f8bae80-b2dd-11e8-89d8-208a07246643.png\">\r\n\r\nAfter\r\n<img width=\"804\" alt=\"screen shot 2018-09-07 at 13 36 59\" src=\"https://user-images.githubusercontent.com/111134/45236797-34506280-b2dd-11e8-9814-1a14c11260b7.png\">\r\n\r\n### Testing Procedure ###\r\nUse the following XAML view to check that elements with Transparent BackgroundColor now draw themselves correctly.\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" x:Class=\"Samples.Views.TransparencyBug\">\r\n    <ContentPage.Content>\r\n        <StackLayout BackgroundColor=\"Blue\" Spacing=\"10\" Padding=\"10,10,10,10\">\r\n            <BoxView HeightRequest=\"50\" BackgroundColor=\"Transparent\"/>\r\n            <BoxView HeightRequest=\"50\" BackgroundColor=\"Aqua\"/>\r\n            <Label HeightRequest=\"50\" Text=\"This is a label\" BackgroundColor=\"Transparent\"/>\r\n            <Label HeightRequest=\"50\" Text=\"This is a label\" BackgroundColor=\"Aqua\"/>\r\n            <Button Padding=\"5,5,5,5\" Margin=\"5,5,5,5\" HeightRequest=\"50\" Text=\"This is a button\" BackgroundColor=\"Transparent\"/>\r\n              <Button Padding=\"5,5,5,5\" Margin=\"5,5,5,5\" HeightRequest=\"50\" Text=\"This is a button\" BackgroundColor=\"Aqua\"/>\r\n            <ListView HeightRequest=\"50\" BackgroundColor=\"Transparent\"/>\r\n        </StackLayout>\r\n    </ContentPage.Content>\r\n</ContentPage>\r\n```\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8371183993","Type":"PullRequestEvent","CreatedAt":"2018-10-04T23:12:01","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4002","RelatedDescription":"Opened pull request \"fix https://github.com/xamarin/Xamarin.Forms/issues/3450\" (#4002) at xamarin/Xamarin.Forms","RelatedBody":"Hi\r\nI believe it's acceptable fix for https://github.com/xamarin/Xamarin.Forms/issues/3450\r\nIf developer wants to change BackgroudColor he will be able to set color of View in his ViewCell\r\nDon't see any reasons to force set white/gray background as default. Maybe I missed something?\r\n\r\nSample\r\n```csharp\r\n\tpublic partial class App : Application\r\n\t{\r\n\t\tpublic App ()\r\n\t\t{\r\n\t\t\tInitializeComponent ();\r\n\r\n\t\t\tMainPage = new ContentPage\r\n\t\t\t{\r\n\t\t\t\tBackgroundColor = Color.Black,\r\n\t\t\t\tContent = new ListView\r\n\t\t\t\t{\r\n\t\t\t\t\tBackgroundColor = Color.Transparent,\r\n\t\t\t\t\tSeparatorVisibility = SeparatorVisibility.None,\r\n\t\t\t\t\tIsGroupingEnabled = true,\r\n\t\t\t\t\tGroupHeaderTemplate = new DataTemplate(() => {\r\n\t\t\t\t\t\treturn new ViewCell\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tHeight = 60,\r\n\t\t\t\t\t\t\tView = new ContentView\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tContent = new Label\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tTextColor = Color.White,\r\n\t\t\t\t\t\t\t\t\tText = \"TEST LABEL\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tHeightRequest = 60,\r\n\t\t\t\t\t\t\t\tBackgroundColor = Color.Transparent\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tItemTemplate = new DataTemplate(() => {\r\n\t\t\t\t\t\treturn new ViewCell\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tHeight = 80,\r\n\t\t\t\t\t\t\tView = new ContentView\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tBackgroundColor = Color.Yellow\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tItemsSource = new List<List<string>>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnew List<string>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"Test\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n```"},{"Id":"8371121680","Type":"IssuesEvent","CreatedAt":"2018-10-04T22:53:58","Actor":"slakul","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4001","RelatedDescription":"Opened issue \"[Mac] NRE in WebViewRenderer\" (#4001) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nRemoving WebView from a Page causes NullReferenceException.\r\nStack trace:\r\n\r\n\tObject reference not set to an instance of an object\r\n\t  at Xamarin.Forms.Platform.MacOS.WebViewRenderer+FormsWebFrameDelegate.FinishedLoad (WebKit.WebView sender, WebKit.WebFrame forFrame) [0x00017] in <51ba4bc9dbf845159a2acda030a83ce4>:0 \r\n\t  at (wrapper managed-to-native) AppKit.NSApplication.NSApplicationMain(int,string[])\r\n\t  at AppKit.NSApplication.Main (System.String[] args) [0x00040] in /Library/Frameworks/Xamarin.Mac.framework/Versions/4.8.0.22/src/Xamarin.Mac/AppKit/NSApplication.cs:100 \r\n\t  at LogotecAppStudio.macOS.MainClass.Main (System.String[] args) [0x00017] in /Users/kulikow/Desktop/Projects/AppStudio2018/LogotecAppStudio/LogotecAppStudio.macOS/Main.cs:11\r\n\r\nThere is a bug in method **FinishedLoad**. It assumes that **_renderer.Control** is never null, but it is not true. Below is my workaround.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create WebView on a Page\r\n2. Navigate to any page\r\n3. Remove the WebView from the page during navigation\r\n\r\n### Expected Behavior\r\n\r\nThere should not be any exception.\r\n\r\n### Actual Behavior\r\n\r\nIt throws NRE and kills the application.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0.871608-pre2\r\n- Last known good version:\r\n- IDE: Visual Studio for Mac\r\n- Platform Target Frameworks: Mac\r\n\r\n### Workaround\r\n\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing Foundation;\r\n\tusing WebKit;\r\n\tusing Xamarin.Forms;\r\n\tusing Xamarin.Forms.Platform.MacOS;\r\n\tusing WebView = Xamarin.Forms.WebView;\r\n\r\n\t[assembly: ExportRenderer(typeof(WebView), typeof(LogotecAppStudio.macOS.Renderers.LasWebViewRenderer))]\r\n\tnamespace LogotecAppStudio.macOS.Renderers\r\n\t{\r\n\t\tpublic class LasWebViewRenderer : WebViewRenderer\r\n\t\t{\r\n\t\t\tprotected override void OnElementChanged(ElementChangedEventArgs<Xamarin.Forms.WebView> e)\r\n\t\t\t{\r\n\t\t\t\tbase.OnElementChanged(e);\r\n\r\n\t\t\t\tif (Control != null &&\r\n\t\t\t\t\tControl.FrameLoadDelegate is FormsWebFrameDelegate == false &&\r\n\t\t\t\t\tControl.FrameLoadDelegate is WebKit.WebFrameLoadDelegate wfd)\r\n\t\t\t\t{\r\n\t\t\t\t\tControl.FrameLoadDelegate = new FormsWebFrameDelegate(this, wfd);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinternal class FormsWebFrameDelegate : WebKit.WebFrameLoadDelegate\r\n\t\t\t{\r\n\t\t\t\tWebViewRenderer _renderer;\r\n\t\t\t\tWebKit.WebFrameLoadDelegate _wfd;\r\n\r\n\t\t\t\tinternal FormsWebFrameDelegate(WebViewRenderer renderer, WebKit.WebFrameLoadDelegate wfd)\r\n\t\t\t\t{\r\n\t\t\t\t\t_renderer = renderer;\r\n\t\t\t\t\t_wfd = wfd;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpublic override void FinishedLoad(WebKit.WebView sender, WebFrame forFrame)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (_renderer.Control == null) return;\r\n\t\t\t\t\t\t_wfd.FinishedLoad(sender, forFrame);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpublic override void FailedLoadWithError(WebKit.WebView sender, NSError error, WebFrame forFrame)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (_renderer.Control == null) return;\r\n\t\t\t\t\t\t_wfd.FailedLoadWithError(sender, error, forFrame);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n"},{"Id":"8371046239","Type":"PullRequestEvent","CreatedAt":"2018-10-04T22:32:26","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4000","RelatedDescription":"Opened pull request \"[Android] Amended ScrollViewRenderer with smooth scrolling\" (#4000) at xamarin/Xamarin.Forms","RelatedBody":"Hi\r\nNow Android scroll view has default 1 second animation. This looks a little bit ugly, when we need scroll only a few points (It moves like a turtle)\r\n\r\nPerhaps, it would be OK idea to change 1 sec animation to SmoothScrollTo method (like iOS has)\r\n\r\nHere is code for testing\r\n```csharps\r\npublic partial class App : Application\r\n\t{\r\n\t\tpublic App ()\r\n\t\t{\r\n\t\t\tInitializeComponent ();\r\n\r\n\t\t\tvar scroll = new ScrollView();\r\n\r\n\t\t\tvar st = new StackLayout\r\n\t\t\t{\r\n\t\t\t\tBackgroundColor = Color.Red,\r\n\t\t\t\tHeightRequest = 5000,\r\n\t\t\t\tChildren = {\r\n\t\t\t\t\tnew Button\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tText = \"Near\",\r\n\t\t\t\t\t\tBackgroundColor = Color.DarkBlue,\r\n\t\t\t\t\t\tCommand = new Command(() => {\r\n\t\t\t\t\t\t\tscroll.ScrollToAsync(0, 10, true);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnew Button\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tText = \"Far\",\r\n\t\t\t\t\t\tBackgroundColor = Color.DarkBlue,\r\n\t\t\t\t\t\tCommand = new Command(() => {\r\n\t\t\t\t\t\t\tscroll.ScrollToAsync(0, 100, true);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnew Button\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tText = \"Very far\",\r\n\t\t\t\t\t\tBackgroundColor = Color.DarkBlue,\r\n\t\t\t\t\t\tCommand = new Command(() => {\r\n\t\t\t\t\t\t\tscroll.ScrollToAsync(0, 300, true);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnew Button\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tText = \"Start\",\r\n\t\t\t\t\t\tBackgroundColor = Color.DarkBlue,\r\n\t\t\t\t\t\tCommand = new Command(() => {\r\n\t\t\t\t\t\t\tscroll.ScrollToAsync(0, 0, true);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnew Button\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tText = \"Start\",\r\n\t\t\t\t\t\tBackgroundColor = Color.DarkBlue,\r\n\t\t\t\t\t\tCommand = new Command(() => {\r\n\t\t\t\t\t\t\tscroll.ScrollToAsync(0, 0, true);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnew Button\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tText = \"Start\",\r\n\t\t\t\t\t\tBackgroundColor = Color.DarkBlue,\r\n\t\t\t\t\t\tCommand = new Command(() => {\r\n\t\t\t\t\t\t\tscroll.ScrollToAsync(0, 0, true);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tscroll.Content = st;\r\n\r\n\t\t\tMainPage = new ContentPage\r\n\t\t\t{\r\n\t\t\t\tContent = scroll\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n```"},{"Id":"8370953614","Type":"PullRequestEvent","CreatedAt":"2018-10-04T22:08:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3962","RelatedDescription":"Merged pull request \"Fixed NotImplementedException refreshing items in WPF ListView\" (#3962) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixed NotImplementedException refreshing items (addin, clear) in WPF ListView.\r\n\r\n### Issues Resolved ### \r\n- fixes #3309 \r\n- fixes #3737 \r\n- fixes #3648 \r\n\r\n### Platforms Affected ### \r\n- WPF\r\n\r\n### Behavioral/Visual Changes ###\r\nNow, can clear or change items in WPF ListView.\r\n\r\n### Before/After Screenshots ### \r\n\r\nBefore\r\n![wrong-3309](https://user-images.githubusercontent.com/6755973/46307347-f16d6c00-c5b6-11e8-85cb-e9b0942d667f.gif)\r\n\r\nAfter\r\n![3309](https://user-images.githubusercontent.com/6755973/46307274-c551eb00-c5b6-11e8-80eb-a904b55fad9f.gif)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8370953589","Type":"IssuesEvent","CreatedAt":"2018-10-04T22:08:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3648","RelatedDescription":"Closed issue \"Xamarin.Forms for WPF: cannot clear ListView selection\" (#3648) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nCannot unselect items in a ListView under Xamarin.Forms.Platform.WPF. This results in a NotImplementedException being thrown here; \r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Core/TemplatedItemsList.cs#L276\r\n\r\nwhen you try to change the collection (either observable or straight changing ItemsSource). \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a ListView with ItemsSource as ObservableCollection<string>\r\n2. Add some items in the collection; works fine\r\n3. Click on one of the items\r\n4. listView.SelectedItem = null; \r\n(5. Clear the ObservableCollection<string>) \r\n\r\n### Expected Behavior\r\n\r\nItem is no longer selected and the list is cleared. \r\n\r\n### Actual Behavior\r\n\r\nItem is still selected, and when doing anything with the ObservableCollection that affects the selected item, the NotImplementedException pops up. \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.697729 Xamarin.Forms WPF\r\n- Last known good version: never saw it work\r\n- IDE: Visual Studio 15.6.0\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n WPF: 3.1.0.697729\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\nXamarin.Forms\r\nXamarin.Forms.Platform.WPF\r\n- Affected Devices:\r\nWindows 10 \r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8370953585","Type":"IssuesEvent","CreatedAt":"2018-10-04T22:08:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3737","RelatedDescription":"Closed issue \"[Feedback] System.NotImplementedException in Xamarin WPF\" (#3737) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>When clearing a observablecollection or removing an item from it, we get a \n\nSystem.NotImplementedException: 'The method or operation is not implemented.'\n\nerror in the WPF implementation of Xamarin. In Android and UWP, the error does not occur.</p><p><br></p><p><span style=\"display:inline !important;float:none;background-color:rgba(255, 255, 255, 1);color:rgb(33, 33, 33);font-size:14px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-decoration:none;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;\">We attach a mini solution with which you can reproduce the problem. We have noticed that if we enclose the Clear() method in a try / catch structure, the Exception is ignored and the program continues correctly (list clears and rebuilds).This exception only happens in WPF, UWP and Android work correctly.</span><b></b><i></i><u></u><sub></sub><sup></sup><strike></strike><br></p><p><b></b><i></i><u></u><sub></sub><sup></sup><strike></strike><br></p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/272352/systemnotimplementedexception-in-xamarin-wpf.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/632874\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678647](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678647)"},{"Id":"8370953580","Type":"IssuesEvent","CreatedAt":"2018-10-04T22:08:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3309","RelatedDescription":"Closed issue \"[WPF] NotImplementedException When executing Clear and Remove methods on ObservableCollection \" (#3309) at xamarin/Xamarin.Forms","RelatedBody":"When executing Clear and Remove methods on ObservableCollection the exception is thrown: 'System.NotImplementedException' in Xamarin.Forms.Core.dll.\r\nBut if I cover it with try catch the result of the operation is correct.\r\n\r\nTested on\r\nXamarin latest 3.1 version\r\nPlatform WPF"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8371115702","Type":"IssuesEvent","CreatedAt":"2018-10-04T22:52:13","Actor":"Therzok","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4935","RelatedDescription":"Opened issue \"NSProcess\" (#4935) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Try to monitor for Thermal state notifications \r\n2. See https://developer.apple.com/documentation/foundation/nsprocessinfo/1417480-thermalstate?language=objc and https://developer.apple.com/documentation/foundation/nsprocessinfothermalstatedidchangenotification?language=objc\r\n3. The thermal state and thermal state notification are not bound\r\n\r\n### Expected Behavior\r\nBindings done, I see the enum isbound.\r\n\r\n### Actual Behavior\r\nHave to manually write notification and querying handling.\r\n\r\n### Environment\r\n\r\nVisual Studio Community 2017 for Mac (Preview)\r\nVersion 7.8 Preview (7.8 build 560)\r\nInstallation UUID: 010a6a17-65d7-44f0-9e3d-48e5afe82e81\r\nRuntime:\r\n\tMono 5.14.0.188 (pull-request-10354/7f326cca7d6) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 514000188\r\n```\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8370934488","Type":"IssuesEvent","CreatedAt":"2018-10-04T22:03:57","Actor":"viniciusjarina","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4934","RelatedDescription":"Closed issue \"Named Colors Content.json wrong format.\" (#4934) at xamarin/xamarin-macios","RelatedBody":"Hey we've implemented the named color support for iOS designer.\r\n\r\nBut I noticed the `Content.json` for named colors on Asset catalog is being created with the wrong format.\r\n\r\nWhen you use the Xcode asset editor the JSON generated has double quotes, and can be a decimal or integer or an hexadecimal.\r\n```\r\n        \"components\" : {\r\n          \"red\" : \"0x1A\",\r\n          \"alpha\" : \"1.000\",\r\n          \"blue\" : \"26\",\r\n          \"green\" : \"156\"\r\n        }\r\n```\r\n\r\nThe `Content.json` created by VS4M is missing the double quotes, which makes the Json parser return `1` for the `1.0` value.\r\n\r\n```\r\n        \"components\": {\r\n          \"red\": 0.8497139,\r\n          \"green\": 0.607187,\r\n          \"blue\": 0.296620131,\r\n          \"alpha\": 1.0\r\n        }\r\n```\n\n> VS bug [#697947](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/697947)"},{"Id":"8370843799","Type":"IssuesEvent","CreatedAt":"2018-10-04T21:43:17","Actor":"viniciusjarina","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4934","RelatedDescription":"Opened issue \"Named Colors Content.json wrong format.\" (#4934) at xamarin/xamarin-macios","RelatedBody":"Hey we've implemented the named color support for iOS designer.\r\n\r\nBut I noticed the `Content.json` for named colors on Asset catalog is being created with the wrong format.\r\n\r\nWhen you use the Xcode asset editor the JSON generated has double quotes, and can be a decimal or integer or an hexadecimal.\r\n```\r\n        \"components\" : {\r\n          \"red\" : \"0x1A\",\r\n          \"alpha\" : \"1.000\",\r\n          \"blue\" : \"26\",\r\n          \"green\" : \"156\"\r\n        }\r\n```\r\n\r\nThe `Content.json` created by VS4M is missing the double quotes, which makes the Json parser return `1` for the `1.0` value.\r\n\r\n```\r\n        \"components\": {\r\n          \"red\": 0.8497139,\r\n          \"green\": 0.607187,\r\n          \"blue\": 0.296620131,\r\n          \"alpha\": 1.0\r\n        }\r\n```"},{"Id":"8370688804","Type":"PullRequestEvent","CreatedAt":"2018-10-04T21:11:23","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4933","RelatedDescription":"Opened pull request \"Bind 2 high visibility PrintCore APIs\" (#4933) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/4713"},{"Id":"8370512915","Type":"PullRequestEvent","CreatedAt":"2018-10-04T20:38:10","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4931","RelatedDescription":"Merged pull request \"[d15-9] Try to make version numbers clearer, and establish some ground rules.\" (#4931) at xamarin/xamarin-macios","RelatedBody":"Backport of https://github.com/xamarin/xamarin-macios/pull/4927\nwith 15.9 numbers"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":80,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":181,"FavoriteCount":89,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":59,"RawContent":null}]}},"RunOn":"2018-10-05T05:30:56.1965911Z","RunDurationInMilliseconds":3890}