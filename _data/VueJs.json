{"Data":{"Vue-Issues":{"Issues":[{"Id":"478227569","IsPullRequest":false,"CreatedAt":"2019-08-08T03:07:56","Actor":"MutelyMilo","Number":"10367","RawContent":null,"Title":" Error in v-on handler: \"RangeError: Maximum call stack size exceeded\"","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://gitee.com/PhoenixMilo/study-vue.git](https://gitee.com/PhoenixMilo/study-vue.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n通过递归组件添加一个节点之后再渲染echarts就会报错。相反如果你没有操作过这个需要被渲染的数据是没有什么问题的，个人觉得被vue加工过的数据再去渲染就会出问题。\r\n\r\n\r\n### What is expected?\r\n可以正常操作和渲染\r\n\r\n### What is actually happening?\r\n现在依旧报错，报错内容就是 title\r\n\r\n---\r\n如果你不增加新的item，一切都没问题，新加之后就会有问题。我对比过 E charts给的官方数据 我打印出来的递归vue数组和js原生数组不太一样。所以，问题是不是 vue 生层的数组 不能提供给echarts渲染呢？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10367","RelatedDescription":"Open issue \" Error in v-on handler: \"RangeError: Maximum call stack size exceeded\"\" (#10367)"},{"Id":"478179397","IsPullRequest":false,"CreatedAt":"2019-08-07T23:17:14","Actor":"ericdrobinson","Number":"10366","RawContent":null,"Title":"Click Event Triggers on Complex Buttons are ignored in some environments","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/1d8nbv7h/2/](https://jsfiddle.net/1d8nbv7h/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Configure one of the Adobe CEP [Sample Panels](https://github.com/Adobe-CEP/Samples). The [PProPanel](https://github.com/Adobe-CEP/Samples/tree/master/PProPanel) is a good starting point as it has very clear documentation on how to [set up the environment](https://github.com/Adobe-CEP/Samples/tree/master/PProPanel#2-enable-loading-of-unsigned-panels) for testing.\r\n1. Replace the HTML/JavaScript/CSS contents of the panel project with the contents of the [linked JSFiddle](https://jsfiddle.net/1d8nbv7h/2/).\r\n1. Open the panel.\r\n1. Attach a debugger (with the default PProPanel setup this would mean browsing to `localhost:7777` in Chrome).\r\n1. Set the \"_Mouse > `click`_\" **Event Listener Breakpoint** in the \"Sources\" tab of the Chrome Debugger.\r\n1. Click the Vue icon in the center of the silver `div`.\r\n\r\n### What is expected?\r\nMethod bound to the `@click` handler is triggered when the image embedded in the parent div is clicked. \r\n\r\n### What is actually happening?\r\nThe method bound to the `@click` handler is _only_ triggered when clicking outside of the parent div.\r\n\r\n---\r\nThis is a non-trivial bug to reproduce as the only place I've experienced it is in [Adobe CEP](https://github.com/Adobe-CEP/CEP-Resources/blob/master/CEP_9.x/Documentation/CEP%209.0%20HTML%20Extension%20Cookbook.md) extensions (which run NW.js under the hood). That said, it does reproduce 100% of the time there.\r\n\r\nThe debugger (CEP context) seems to show several funny things at around [this line](https://github.com/vuejs/vue/blob/d40b7ddb8177944d1dd50f4f780e6fd92c9455c2/src/platforms/web/runtime/modules/events.js#L69) in the Vue events.js file. Specifically:\r\n\r\n1. The `e.timeStamp` value **does not change** between callbacks for _different buttons/elements_.\r\n1. The `attachedTimestamp` is **_significantly_ larger** than the `e.timeStamp` value.\r\n1. The `attachedTimestamp` value _does_ change when the component is updated (the `e.timeStamp` remains identical).\r\n\r\nI should note that this affects at least [CEP 8.0 and CEP 9.0](https://github.com/Adobe-CEP/CEP-Resources/blob/master/CEP_9.x/Documentation/CEP%209.0%20HTML%20Extension%20Cookbook.md#chromium-embedded-framework-cef) (tested in Premiere Pro).\r\n\r\n**Vue Versions Note:** This broke somewhere between versions 2.5.17 and 2.6.x. If we run a version of 2.5 (2.5.17 and some earlier versions verified), then this issue does not occur. In testing 2.6.x, we've found that this same issue occurs from 2.6.5 to 2.6.10 (latest). Versions of 2.6 prior to 2.6.5 are actually _worse_ in that the buttons basically don't work at all.\r\n\r\n**Important Note:** I should _further_ note that apparently right-clicking to open the basic CEF [not CEP] context menu will cause the `e.timeStamp` values to begin reporting as expected. Once this occurs, the buttons will _also_ work as expected. That said, we shouldn't have to instruct users to right-click prior to interfacing with the extension.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10366","RelatedDescription":"Open issue \"Click Event Triggers on Complex Buttons are ignored in some environments\" (#10366)"},{"Id":"478096927","IsPullRequest":false,"CreatedAt":"2019-08-07T19:19:12","Actor":"janKroll","Number":"10365","RawContent":null,"Title":"Computed output doesn´t change but DOM gets re-rendered","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/z1orgphL/1/](https://jsfiddle.net/z1orgphL/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Start VueDevtools Performance Benchmark -> Component render\r\n2. Wait for the interval\r\n\r\n### What is expected?\r\nIf the output of the computed doesn´t change the DOM shouldn´t be re-rendered.\r\n\r\n### What is actually happening?\r\nDOM gets re-rendered\r\n\r\n---\r\nThe DOM will not be updated if a primitive data type in applied in `changeData`.\r\n\r\nThis bug appeared in our Main Wrapper because we manipulate some styles based on the current route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10365","RelatedDescription":"Open issue \"Computed output doesn´t change but DOM gets re-rendered\" (#10365)"},{"Id":"478042851","IsPullRequest":false,"CreatedAt":"2019-08-07T17:19:45","Actor":"TheInvoker","Number":"10364","RawContent":null,"Title":"[Feature Rquest] Create Async lifecycle events","State":"closed","Body":"### What problem does this feature solve?\r\nAbility for app to trigger events when conditions are met async style.\r\n\r\n### What does the proposed API look like?\r\nIn addition to mounted:\r\n\r\n```\r\nmounted : function() {\r\n    // synchronous\r\n    var table = this.$refs.myTable;  // will be undefined if it was loaded like        components : {  'my-tabe' : () => import(\".../my-table.js\") }\r\n}\r\n```\r\n\r\nwe should also have mounted.async:\r\n\r\n```\r\n\"mounted.async\" : async function() {\r\n    // asynchronous\r\n    var table = this.$refs.myTable;  // will be the actual table reference if it was loaded like         components : {  'my-tabe' : () => import(\".../my-table.js\") }\r\n}\r\n```\r\n\r\nEssentially, whatever lifecycle hooks are applicable, should have an async version of it too, which only runs when all it's precondition resolves its promises. So the async mounted should only run when all it's child components have downloaded it's component and mounted it too.\r\n\r\nThe other benefit here is that the time between the regular mounted running and the async mounted running, you can also display a loading bar. \r\n\r\nOr an alternative is to make $refs async style\r\n\r\n```\r\nmounted : async function() {\r\n    // asynchronous\r\n    var table = await this.$refs.myTable;   // will be the actual table reference if it was loaded like         components : {  'my-tabe' : () => import(\".../my-table.js\") }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10364","RelatedDescription":"Closed issue \"[Feature Rquest] Create Async lifecycle events\" (#10364)"},{"Id":"477835143","IsPullRequest":false,"CreatedAt":"2019-08-07T10:13:50","Actor":"githubwubicheng","Number":"10363","RawContent":null,"Title":"transition组件无法正确变更样式","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[http://git.1squan.com/taomaofan/taomaofan-frontend.git](http://git.1squan.com/taomaofan/taomaofan-frontend.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n同一个页面定义两个transition\r\n<transition :name=\"transitionName\" >\r\n\t\t\t  <keep-alive>\r\n\t\t\t  \t\t<router-view v-if=\"$route.meta.keepAlive\" ></router-view>\r\n\t\t\t  </keep-alive>\r\n    </transition>\r\n\t\t\t<transition :name=\"transitionName\" >\r\n\t\t\t  <router-view v-if=\"!$route.meta.keepAlive\"></router-view>\r\n\t\t\t</transition>\r\n初始值是slide-right，页面进入的样式slide-right-enter-active，和离开为slide-right-leave-active，当变更transitionName的值为slide-left,页面进入的样式是slide-left-enter-active，离开的样式为slide-right-leave-active，没有正确变更为slide-left-leave-active\r\n\r\n### What is expected?\r\n希望能根据:name属性变更页面离开进入样式\r\n\r\n### What is actually happening?\r\n初始值是slide-right，页面进入的样式slide-right-enter-active，和离开为slide-right-leave-active，当变更transitionName的值为slide-left,页面进入的样式是slide-left-enter-active，离开的样式为slide-right-leave-active，没有正确变更为slide-left-leave-active\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10363","RelatedDescription":"Closed issue \"transition组件无法正确变更样式\" (#10363)"},{"Id":"477829426","IsPullRequest":false,"CreatedAt":"2019-08-07T10:03:19","Actor":"MutelyMilo","Number":"10362","RawContent":null,"Title":"Error in v-on handler: \"TypeError: Converting circular structure to JSON\"","State":"closed","Body":"### Version\r\n2.5.9\r\n\r\n### Reproduction link\r\n[https://github.com/lzmkony/x-one.git](https://github.com/lzmkony/x-one.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、递归组件最后的list导出的时候是[__ob__observer]\r\n2、该数组不能被 echarts G6树形图渲染 亲测\r\n3、我认为可能数组不是一个 js数组 所以导致无法渲染\r\n4、当我使用JSON.stringify([$PARAM$])处理的时候 一层数组还可以，如果数组内有多元素就会报错（title的错误） \r\n\r\n### What is expected?\r\n我如何才能获得 可视化工具可以渲染的js数据呢？\r\n\r\n### What is actually happening?\r\n如题的报错。可视化工具无法正常渲染vue data\r\n\r\n---\r\n无\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10362","RelatedDescription":"Closed issue \"Error in v-on handler: \"TypeError: Converting circular structure to JSON\"\" (#10362)"},{"Id":"477822866","IsPullRequest":true,"CreatedAt":"2019-08-07T09:48:52","Actor":"posva","Number":"10361","RawContent":null,"Title":"fix(compiler): allow inline async functions in event handlers","State":"open","Body":"This allows using `async` inline functions in v-on event handlers https://github.com/vuejs/vue/issues/10338\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10361","RelatedDescription":"Open PR \"fix(compiler): allow inline async functions in event handlers\" (#10361)"},{"Id":"477804759","IsPullRequest":false,"CreatedAt":"2019-08-07T09:27:57","Actor":"petr001","Number":"10360","RawContent":null,"Title":"First class web components support","State":"closed","Body":"### What problem does this feature solve?\r\nIn Vue, we can bind any property with complex data type with v-bind directive:\r\n```\r\n<vue-component :prop-with-object=\"{ some: 'object' }\" />\r\n```\r\n\r\nBut for web components, we have to use `.prop` otherwise it's converted to string (=it's bound as attribute which supports only string)\r\n```\r\n<web-component :prop-with-object.prop=\"{ some: 'object' }\" />\r\n```\r\n\r\nIt would be nice if there is no difference between web components and vue components.\r\n\r\n### What does the proposed API look like?\r\n```\r\n<web-component :prop-with-object=\"{ some: 'object' }\" />\r\n```\r\n\r\nshould set web component propWithObject property by default (no need for .prop)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10360","RelatedDescription":"Closed issue \"First class web components support\" (#10360)"},{"Id":"477745974","IsPullRequest":false,"CreatedAt":"2019-08-07T07:24:02","Actor":"wxkcoder","Number":"10359","RawContent":null,"Title":"自定义组件的bug，slot的内容无法触发 外层touchstart事件 click事件可以","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/wxkcoder/bugs_demo](https://github.com/wxkcoder/bugs_demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n声明！！：这是vue的bug，不是代码实现问题  请@posva 不要直接关闭\r\n\r\n问题描述：\r\n页面A引用的一个自定义组件c ，c 允许通过slot标签插入节点内容 slot标签外层盒子绑定了touchstart事件和click事件\r\n\r\n出现的问题：\r\n在ios10.3.3版本下  通过 'this.$router.push({name:A})' 的方式跳转到页面A后，点击组件c通过slot标签插入的内容 无法触发touchstart事件 但是 可以触发click事件。\r\n直接访问页面A 两个事件都可以触发\r\n\r\n在ios12版本上没有发现这个bug。\r\n\r\n将vue版本改为2.5.22后 所有ios版本都没发现这个bug\r\n\r\n\r\n如果你觉得我没有描述清楚的话 请运行下面的demo在 ios10版本上 谢谢！请不要直接close！！\r\ndemo：https://github.com/wxkcoder/bugs_demo\r\n\r\n\r\n\r\n### What is expected?\r\npush跳转后 slot的内容不触发外层盒子的touchstart事件\r\n\r\n### What is actually happening?\r\npush跳转后 slot的内容触发外层盒子的touchstart事件\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10359","RelatedDescription":"Closed issue \"自定义组件的bug，slot的内容无法触发 外层touchstart事件 click事件可以\" (#10359)"},{"Id":"477659568","IsPullRequest":true,"CreatedAt":"2019-08-07T07:09:01","Actor":"git-nkliyc","Number":"10358","RawContent":null,"Title":"a spelling mistake","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: spelling mistake\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10358","RelatedDescription":"Closed or merged PR \"a spelling mistake\" (#10358)"},{"Id":"477299293","IsPullRequest":false,"CreatedAt":"2019-08-06T10:33:32","Actor":"ddyh0826","Number":"10357","RawContent":null,"Title":"关于：v-html渲染router-link的问题","State":"closed","Body":"### What problem does this feature solve?\r\n可以渲染`<a>`，但是无法解析`<router-link>`\r\n\r\n### What does the proposed API look like?\r\n如果正常解析会发生什么呢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10357","RelatedDescription":"Closed issue \"关于：v-html渲染router-link的问题\" (#10357)"},{"Id":"477137913","IsPullRequest":false,"CreatedAt":"2019-08-06T06:34:38","Actor":"wxkcoder","Number":"10356","RawContent":null,"Title":"Custom Components slot content no trigger parent‘s touchstart event","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/wxkcoder/bugs_demo](https://github.com/wxkcoder/bugs_demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvue version：2.6.10\r\nios version：10.3.3 or 11.4\r\nuse safiri mobile browser\r\n\r\npage A use 'this.$router.push({name:B})' Jump to Page B\r\nPage B import component C\r\nComponent C bind a touchstart event\r\nthe problem is Component C use slot label Input content，click that content is dose not trigger C's touchstart event\r\n\r\nDirect access to page B can trigger C‘s touchstart event\r\nchange ios version to 12.3.1 can trigger C‘s touchstart event\r\nchange vue version to 2.5.22 can trigger C‘s touchstart event\r\n\r\npleace try to run this demo https://github.com/wxkcoder/bugs_demo on ios 10.3.3\r\n\r\n### What is expected?\r\nno trigger\r\n\r\n### What is actually happening?\r\ntrigger\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10356","RelatedDescription":"Closed issue \"Custom Components slot content no trigger parent‘s touchstart event\" (#10356)"},{"Id":"476945743","IsPullRequest":true,"CreatedAt":"2019-08-05T16:15:22","Actor":"vue-bot","Number":"10355","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10355","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10355)"},{"Id":"476889835","IsPullRequest":true,"CreatedAt":"2019-08-05T14:26:39","Actor":"vue-bot","Number":"10354","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10354","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10354)"},{"Id":"476889743","IsPullRequest":true,"CreatedAt":"2019-08-05T14:26:29","Actor":"vue-bot","Number":"10353","RawContent":null,"Title":"[automated] Patreon backers update (Aug 2019","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10353","RelatedDescription":"Closed or merged PR \"[automated] Patreon backers update (Aug 2019\" (#10353)"},{"Id":"476881162","IsPullRequest":false,"CreatedAt":"2019-08-05T14:09:16","Actor":"zhaopengd","Number":"10352","RawContent":null,"Title":"加油","State":"closed","Body":"加油","Url":"https://github.com/vuejs/vue/issues/10352","RelatedDescription":"Closed issue \"加油\" (#10352)"},{"Id":"476444916","IsPullRequest":true,"CreatedAt":"2019-08-05T11:33:59","Actor":"dejour","Number":"10339","RawContent":null,"Title":"fix(ssr): change throw error  to warn to fix hot reload","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nrelated issue: https://github.com/webpack/webpack/issues/9514, when used with koa-webapck.\r\nHot reload stopped working with error ``Server-side bundle should have one single entry file.Avoid using CommonsChunkPlugin in the server config.``. It caused by hmr plugin dynamically adding hot update js file to entrypoint.","Url":"https://github.com/vuejs/vue/pull/10339","RelatedDescription":"Closed or merged PR \"fix(ssr): change throw error  to warn to fix hot reload\" (#10339)"},{"Id":"476797807","IsPullRequest":false,"CreatedAt":"2019-08-05T11:08:29","Actor":"njed","Number":"10351","RawContent":null,"Title":"The use of v-for in v-else results in undefined","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/njed_ann/xLfzsjte/4/](https://jsfiddle.net/njed_ann/xLfzsjte/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the link.\r\n\r\n### What is expected?\r\n1 2 1 2 3\r\n\r\n### What is actually happening?\r\n1 2 undefined\r\n\r\n---\r\nThe children of the component's vnode instance is [vnode, vnode, [vnode, vnode, vnode]], that's right.but the update operation does not judge the array.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10351","RelatedDescription":"Closed issue \"The use of v-for in v-else results in undefined\" (#10351)"},{"Id":"476752582","IsPullRequest":false,"CreatedAt":"2019-08-05T09:29:53","Actor":"rubencool","Number":"10350","RawContent":null,"Title":"Name parameter Route issue","State":"closed","Body":"I'm encountering an issue with vue-router name parameter. I got a list of posts in the homepage. When I click on one of them, it redirects to the post page.\r\n`<router-link :to=\"{ name: 'user', params: { userId: 123 }}\">User</router-link>`\r\n\r\nEverything is working perfectly, I can retrieve the data of the correct article using this.$route.params. userId in a getter.\r\n\r\n**My issue** : When I reload on an article page, and try to access my data using **this.$route.params.id**  then it gives error undefined. In my opinion data is not passed. so in previous problem i used to used props to pass data but now situation is different i had to pass entrie object so i had used route name parameter.\r\n\r\nHow can I save the router.params despite a page reload ?","Url":"https://github.com/vuejs/vue/issues/10350","RelatedDescription":"Closed issue \"Name parameter Route issue\" (#10350)"},{"Id":"476747372","IsPullRequest":false,"CreatedAt":"2019-08-05T09:21:36","Actor":"UtkarshGupta-CS","Number":"10349","RawContent":null,"Title":"[DISCUSSION] Is it possible to change prop programmatically using refs or something else available for the same? ","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n\r\n### Steps to reproduce\r\nI have created vue instance programmatically using `new Vue`. Wanted to change the props of it. One way is to use vuex store and update the store accordingly. Wanted to know if other ways are possible to change the props?\r\n\r\n### What is expected?\r\nWant to update props programmatically using refs or something else available.\r\n\r\n### What is actually happening?\r\nOnly way is to use vuex store and update the store accordingly.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10349","RelatedDescription":"Closed issue \"[DISCUSSION] Is it possible to change prop programmatically using refs or something else available for the same? \" (#10349)"},{"Id":"476697170","IsPullRequest":false,"CreatedAt":"2019-08-05T07:27:22","Actor":"wxkcoder","Number":"10348","RawContent":null,"Title":"Custom Components slot content dose not trigger parent‘s touchstart event","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/wxkcoder/bugs_demo](https://github.com/wxkcoder/bugs_demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvue version：2.6.10\r\nios version：10.3.3 or 11.4\r\nuse safiri mobile browser\r\n\r\npage A use 'this.$router.push({name:B})' Jump to Page B\r\nPage B import component C\r\nComponent C bind a touchstart event\r\nthe problem is Component C use slot label Input content，click that content is dose not trigger C's touchstart event\r\n\r\nDirect access to page B  can trigger C‘s touchstart event\r\nchange ios version to 12.3.1 can trigger C‘s touchstart event\r\nchange vue version to 2.5.22 can trigger C‘s touchstart event\r\n\r\npleace try to run this demo https://github.com/wxkcoder/bugs_demo on ios 10.3.3\r\n\r\n### What is expected?\r\ntrigger C's touchstart event\r\n\r\n### What is actually happening?\r\n no trigger C's touchstart event\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10348","RelatedDescription":"Closed issue \"Custom Components slot content dose not trigger parent‘s touchstart event\" (#10348)"},{"Id":"476585805","IsPullRequest":false,"CreatedAt":"2019-08-04T19:51:27","Actor":"asiffarabi0000","Number":"10347","RawContent":null,"Title":"Clickjaking vulnrability","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://vuejs.org](https://vuejs.org)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncode :\r\n\r\n```html\r\n<html>\r\n   <head>\r\n     <title>Clickjack test page</title>\r\n   </head>\r\n   <body>\r\n     <p>Website is vulnerable to clickjacking!</p>\r\n     <iframe src=\"https://vuejs.org\" width=\"500\" height=\"500\"></iframe>\r\n   </body>\r\n</html>\r\n```\r\n\r\nsave it with html extension and open it with chrome. you can see website load with fram.\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nfix this bug\r\n\r\n### What is actually happening?\r\nclickjaking can be dengerious.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10347","RelatedDescription":"Closed issue \"Clickjaking vulnrability\" (#10347)"},{"Id":"476504016","IsPullRequest":false,"CreatedAt":"2019-08-04T11:01:42","Actor":"indirectlylit","Number":"10344","RawContent":null,"Title":"do not call render function when a computed value did not actually change","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nCurrently, views are re-rendered if any value updates in the dependency tree, even if the actual value passed to the view did not change.\r\n\r\nThis was originally reported in #7767 and #8540. A fix was attempted in 653aac2c57d15f0e93a2c1cc7e6fad156658df19 (2.5.17-beta.0) but it was reverted due to regressions.\r\n\r\nThe current behavior causes performance issues in some situations, such as listening to scroll events and waiting for a certain threshold to be crossed. As described in #8540, work-arounds must be used to avoid excessive re-renders.\r\n\r\n### What does the proposed API look like?\r\n\r\nThere would be no change in API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10344","RelatedDescription":"Closed issue \"do not call render function when a computed value did not actually change\" (#10344)"},{"Id":"476499399","IsPullRequest":false,"CreatedAt":"2019-08-04T10:59:58","Actor":"igreulich","Number":"10343","RawContent":null,"Title":"Vue is homophone of view.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/igreulich/pen/EqwGKY](https://codepen.io/igreulich/pen/EqwGKY)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nn/a\r\n\r\n### What is expected?\r\nI expect to be able to talk to people about your framework without confusion about whether am I referring to Vuejs or a view.\r\n\r\n### What is actually happening?\r\nI am unable to talk about your framework without confusion about whether I am referring to Vuejs or a view.\r\n\r\n---\r\nDid any one try and talk about Vue with someone unfamiliar with it? I have, and I spend more time clarifying that I mean Vue (or a view) than I do actually explaining Vue!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10343","RelatedDescription":"Closed issue \"Vue is homophone of view.\" (#10343)"},{"Id":"476512067","IsPullRequest":false,"CreatedAt":"2019-08-04T10:59:13","Actor":"karmiy","Number":"10345","RawContent":null,"Title":"$attrs引发的严重渲染性能问题？","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/karmiy/pen/pMWVOX](https://codepen.io/karmiy/pen/pMWVOX)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n例如：\r\n父组件app，它有data如text，在template的随便一个地方&lt;input type='text' v-model='text'&gt;{{text}}\r\n\r\n子组件logger是:\r\nVue.component('logger', {\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: 'default',\r\n    }\r\n  },\r\n  render(createElement) {\r\n    console.log(9);\r\n    return createElement('h1', '1');\r\n  }\r\n});\r\n这时我们在app这个组件里，使用这个组件<logger type='primary'></logger>，在项目中会在控制台看到打印了9，没什么问题。\r\n\r\n当尝试去改变input的值来驱动text这个data改变时，控制台也没有任何输出，没有重新去渲染render，很好。\r\n\r\n但是接下来一个改变问题就来了：\r\n\r\n将logger组件改为:\r\nVue.component('logger', {\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: 'default',\r\n    }\r\n  },\r\n  render(createElement) {\r\n    console.log(9);\r\n    const {$attrs} = this; // there!!!!!!!!!!!!!!!\r\n    return createElement('h1', '1');\r\n  }\r\n});\r\n\r\n再次重新去改成text的值，会发现控制台随着text的改变，一直在输出9,\r\n\r\n可是text的改变与$attrs没什么关系，怎么会导致logger组件重新渲染呢？？\r\n\r\n这样再与之无关的text高频率改变时，会知道logger组件高频率的render，造成性能问题\r\n\r\n### What is expected?\r\n$attrs不应该造成毫不相关的render\r\n\r\n### What is actually happening?\r\n$attrs造成毫不相关的render\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10345","RelatedDescription":"Closed issue \"$attrs引发的严重渲染性能问题？\" (#10345)"},{"Id":"476518243","IsPullRequest":false,"CreatedAt":"2019-08-04T10:58:38","Actor":"karmiy","Number":"10346","RawContent":null,"Title":"Vue插槽slot引发的严重性能问题 - 续？","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/karmiy/pen/pMWVOX](https://codepen.io/karmiy/pen/pMWVOX)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n接着https://github.com/vuejs/vue/issues/10342\r\n\r\nv-slot可以解决一些场景\r\n\r\n但是，在一些情况不行\r\n\r\n如这种\r\n\r\n依旧会造成logger组件一直重新render\r\n\r\n\r\n\r\n### What is expected?\r\n一个组件应该数据没有任何变化时，不应该有任何重新render的现象\r\n\r\n### What is actually happening?\r\n放入的是<slot></slot>依旧会render\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10346","RelatedDescription":"Closed issue \"Vue插槽slot引发的严重性能问题 - 续？\" (#10346)"},{"Id":"476464242","IsPullRequest":false,"CreatedAt":"2019-08-03T16:00:09","Actor":"karmiy","Number":"10342","RawContent":null,"Title":"Vue插槽slot引发的严重性能问题？","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/karmiy/pen/pMWVOX](https://codepen.io/karmiy/pen/pMWVOX)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n例如：\r\n父组件app，它有data如text，在template的随便一个地方&lt;input type='text' v-model='text'&gt;{{text}}\r\n\r\n子组件test是:\r\nVue.component('logger', {\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  render(createElement) {\r\n    console.log(9);\r\n    return createElement('h1', '1');\r\n  }\r\n});\r\n\r\n这时我们在app这个组件里，使用<logger></logger>这个组件，在项目中会在控制台看到打印了9，没什么问题。\r\n\r\n当尝试去改变input的值来驱动text这个data改变时，控制台也没有任何输出，<logger></logger>没有重新去渲染render，很好。\r\n\r\n但是接下来一个改变问题就来了：\r\n\r\n将<logger></logger>改成<logger>333</logger>\r\n\r\n再尝试去改变input的值来驱动text这个data，奇怪的事情发生了，控制台随着text改变，也一直输出9，意味着<logger>不断在重新渲染！！(可是text改变和它毫不相关，即不是它的插槽内容，也不是它的props)\r\n\r\n<logger>没有传任何props，slot位置也只是个普通字符串333，没有改变，却因为毫不相关的text导致一直重新渲染\r\n这在高频率text变化时，造成了很严重的性能问题。\r\n\r\n这是在我用Vue开发Markdown编辑器，文本不断变化时发现的问题，组件里与文本无关的如<nz-button>普通按钮<nz-button>这种中间有slot内容的不断在重复渲染，在编辑器快速触发改变文本时任何带有slot内容的组件都在不断重新渲染导致页面性能问题非常严重\r\n\r\n一直找不到合适的解决方案，因为在用antd的组件库，改组件是用jsx形式去写vue组件库的，学习了代码后发现有的组件render部分有的逻辑比较复杂，这样高频率的触发render对性能影响太大。。。。求指教，非常感谢！\r\n\r\n\r\n### What is expected?\r\n如何使<logger>333</logger>不随毫不相关的data去重复render\r\n\r\n### What is actually happening?\r\n毫不相关的data改变，使得拥有slot插槽内容的组件不断重复渲染\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10342","RelatedDescription":"Closed issue \"Vue插槽slot引发的严重性能问题？\" (#10342)"},{"Id":"476460015","IsPullRequest":true,"CreatedAt":"2019-08-03T15:06:07","Actor":"Luxiaosong","Number":"10341","RawContent":null,"Title":"tweak: let array index less than (2 ** 32 - 1) to fit Standard ECMA","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: let array index less than Math.pow(2, 32) - 1 to fit Standard ECMA\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10341","RelatedDescription":"Open PR \"tweak: let array index less than (2 ** 32 - 1) to fit Standard ECMA\" (#10341)"},{"Id":"476457899","IsPullRequest":false,"CreatedAt":"2019-08-03T14:45:49","Actor":"karmiy","Number":"10340","RawContent":null,"Title":"一个Vue关于slot的严重性能问题","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://vue.ant.design/](https://vue.ant.design/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n例如：\r\n父组件home，它有data如text，在template的随便一个地方{{text}}\r\n子组件test是:\r\nVue.component('Test', {\r\n    name: 'Test',\r\n    render: function (createElement) {\r\n        console.log(9);\r\n        return createElement('h1', '1')\r\n    }\r\n})\r\n\r\n这时我们在home这个组件里，使用<test></test>这个组件，在项目中会在控制台看到打印了9，没什么问题。\r\n当尝试去改变home的text这个data时，控制台也没有任何输出，<test></test>没有重新去渲染render，很好。\r\n但是接下来一个改变问题就来了：\r\n将<test></test>改成<test>1111111</test>\r\n再尝试去改变home的text这个data，奇怪的事情发生了，控制台随着text改变，也一直输出9，意味着<test>不断在重新渲染！！(可是人家text改变和它没有任何关系呀。。)\r\n可是<test>没有 传任何props，slot位置也只是个普通字符串111111，没有改变，却因为毫不相关的text导致一直重新渲染\r\n这在高频率text变化时，造成了很严重的性能问题。\r\n这是在我用Vue开发Markdown编辑器，文本不断变化时发现的问题，组件里与文本无关的如<nz-button>按钮<nz-button>这种中间有slot内容的不断在重复渲染，在编辑器快速触发改变文本时任何带有slot内容的组件都在不断重新渲染导致页面性能问题非常严重\r\n一直找不到合适的解决方案，因为在用antd的组件库，改组件是用jsx形式去写vue组件库的，学习了代码后发现有的组件render部分有的逻辑比较复杂，这样高频率的触发render对性能影响太大。。。。求指教，非常感谢！\r\n\r\n### What is expected?\r\n希望可以解决这个slot内容没有改变，却不断重新渲染的问题\r\n\r\n### What is actually happening?\r\n无用的无限高频率重新渲染\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10340","RelatedDescription":"Closed issue \"一个Vue关于slot的严重性能问题\" (#10340)"},{"Id":"476400469","IsPullRequest":false,"CreatedAt":"2019-08-03T01:03:18","Actor":"twitwi","Number":"10338","RawContent":null,"Title":"Create an \".async\" modifier for event handlers ","State":"open","Body":"### What problem does this feature solve?\r\nIn an event handler, one can easily mix property modifications and method calls (which is great), as in:\r\n\r\n    <span @click=\" accumulator += fetchNextItem() \">do it</span>\r\n\r\nHowever, if the called method is async, one need to actually wrap this code in an additional method like:\r\n\r\n    <span @click=\" fetchAndAccumulateNextItem() \">do it </span>\r\n    ....\r\n    methods: {\r\n        async fetchAndAccumulateNextItem() {\r\n            this.accumulator += await this.fetchNextItem()\r\n        },\r\n        async fetchNextItem() { .... } /* unmodified */\r\n    }\r\n\r\nThis can be slightly inconvenient if there are many asynchronous methods of which we use the return value.\r\nI think this might become more and more common as people start understanding and using async/await more and more.\r\n\r\nInitial context: I have a very specific use case of a vuejs<->python bridge that makes (among other things) all the python-written method callable from vuejs, but as the call goes through websockets, all methods end up async. https://github.com/twitwi/vuejs-python\r\n\r\n\r\n### What does the proposed API look like?\r\nI'd suggest a \".async\" modifier that would allow for \"await\" in the event handler snippet.\r\nFor the example above, it would be written as:\r\n\r\n    <span @click.async=\" accumulator += await fetchNextItem() \">do it</span>\r\n\r\n(this is probably useful for all types of events, not only click)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10338","RelatedDescription":"Open issue \"Create an \".async\" modifier for event handlers \" (#10338)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"478231634","IsPullRequest":true,"CreatedAt":"2019-08-08T03:27:34","Actor":"yangshuan","Number":"2877","RawContent":null,"Title":"parameters should be placed before hash(fix #2876)","State":"open","Body":"fix #2876\r\n\r\nThe URI should always be conform to the URI generic syntax \r\nscheme:[//authority]path[?query][#fragment]\r\nOtherwise most of the lib or code which get the parameters from the URI will fail.","Url":"https://github.com/vuejs/vue-router/pull/2877","RelatedDescription":"Open PR \"parameters should be placed before hash(fix #2876)\" (#2877)"},{"Id":"478211314","IsPullRequest":false,"CreatedAt":"2019-08-08T01:50:51","Actor":"yangshuan","Number":"2876","RawContent":null,"Title":"the url pattern is not conform to the URI generic syntax in the newest version 3.1.0","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/yangshuan/vue-router-test-3.1.1](https://github.com/yangshuan/vue-router-test-3.1.1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSteps are very simple:\r\n1. Use the vue-cli to generate a new empty project;\r\n2. Start the project;\r\n3. Open a browser (e.g. Chrome), and open the application index page;\r\n4. Everything seems normal, but if you use url with parameters, e.g. http://localhost:8080/?a=1, the page will goto http://localhost:8080/#/?a=1, the uri is not right, it should be 'http://localhost:8080/?a=1#/'\r\n\r\n### What is expected?\r\nThe URI should always be conform to the URI generic syntax 'scheme:[//authority]path[?query][#fragment]', otherwise most of the lib or code which get the parameters from the URI will fail.\r\n\r\n### What is actually happening?\r\nthis url is not conform to the URI generic syntax which is 'scheme:[//authority]path[?query][#fragment]';\r\nThe problem the 3.1.0 version brings out is that, when we want to get the parameters from the URL by the default URI generic syntax, we fail all the time, since the uri is not right.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2876","RelatedDescription":"Open issue \"the url pattern is not conform to the URI generic syntax in the newest version 3.1.0\" (#2876)"},{"Id":"478172333","IsPullRequest":true,"CreatedAt":"2019-08-07T22:49:05","Actor":"ronald-d-rogers","Number":"2875","RawContent":null,"Title":"fix(ssr): Memory leak in poll method, take 2 (fix #2606)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nFix #2606.\r\n\r\nUnlike https://github.com/vuejs/vue-router/pull/2867, this fix does **not** depend on the following being merged first: https://github.com/vuejs/vue/pull/9479\r\n\r\nRemoved `poll` method, which was causing a memory leak when a Vue app is created per request, which is typical in SSR.\r\n\r\nThe leak happens when:\r\n\r\n1. The `router-view` is conditioned to appear upon a variable that never becomes true.\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\n2. A `beforeRouteEnter` guard's `next` is passed a `cb`:\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {} /* cb */)\r\n  }\r\n}\r\n```\r\n\r\nInstead of polling we try to call the `cb` in `History#confirmTransition`, otherwise add the `cb` to `RouteRecord#pendingCbs`, and call it instead upon route registration (see `components/view.js`).\r\n\r\nI don't know whether or not it is ok to add `pendingCbs` to `RouteRecord`. I don't know whether or not we are ok with mutating the route record inside of `History#confirmTransition`. I also don't really know if this will cause problems elsewhere outside of running `npm test`.\r\n\r\nThe apps my team builds here in Bloomberg are thoroughly E2E tested. If you don't see any problems with this approach I can try to get our tests run against this fix version, if that helps any.","Url":"https://github.com/vuejs/vue-router/pull/2875","RelatedDescription":"Open PR \"fix(ssr): Memory leak in poll method, take 2 (fix #2606)\" (#2875)"},{"Id":"478169508","IsPullRequest":false,"CreatedAt":"2019-08-07T22:38:19","Actor":"TheInvoker","Number":"2874","RawContent":null,"Title":"Pushing query keeps existing ones","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[http://www.google.ca](http://www.google.ca)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI use this code to push a new link\r\n\r\n                this.$router.push({path:item.path, query: { \r\n                    language : this.$route.query.language, \r\n                    dark : this.$route.query.dark, \r\n                    rtl : this.$route.query.rtl\r\n                }}).catch(err => {});\r\n\r\nbut the problem is, if the link had other params in the URL, they persist. How can I use this code, but specify it to discard other params?\r\n\r\n### What is expected?\r\nother params get discarded.\r\n\r\n### What is actually happening?\r\nOther params persist.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2874","RelatedDescription":"Open issue \"Pushing query keeps existing ones\" (#2874)"},{"Id":"478144521","IsPullRequest":false,"CreatedAt":"2019-08-07T21:23:08","Actor":"hazzo","Number":"2873","RawContent":null,"Title":"New Promise API seems to break `next(false)` implementation in guard","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ox6qpz9t/1/](https://jsfiddle.net/ox6qpz9t/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open console\r\n- Click in `foo` button that will navigate programmatically to `foo` route (with replace method) that has a `beforeEnter` guard. \r\n- In the console de error `Uncaught (in promise) false` will appear when navigation is being aborted in guard with `next(false)`\r\n\r\n### What is expected?\r\nAbort navigation without error\r\n\r\n### What is actually happening?\r\nAborted navigation with unhandled promise error in console.\r\n\r\n---\r\nIn version 3.0.7, with the old API (not the new one that returns a promise) was working fine.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2873","RelatedDescription":"Closed issue \"New Promise API seems to break `next(false)` implementation in guard\" (#2873)"},{"Id":"477891226","IsPullRequest":false,"CreatedAt":"2019-08-07T12:26:34","Actor":"tcastelly","Number":"2872","RawContent":null,"Title":"Throw Error \"NavigationDuplicated\"","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-i2d63](https://codesandbox.io/s/vue-template-i2d63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse `$router.push` to change the \"page\". If you are using the same page, vue-router throw an Error.\r\n\r\n### What is expected?\r\nJust nothing, or a warning.\r\n\r\n### What is actually happening?\r\nAn Error has been thrown.\r\n\r\n---\r\n- To my point of view it's not an error. On a previous version of 'vue-router' no error was threw: https://codesandbox.io/s/vue-template-qvrfr\r\n- `<router-link> ` does not have the same behavior. There is no error even if you're pushing the current page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2872","RelatedDescription":"Closed issue \"Throw Error \"NavigationDuplicated\"\" (#2872)"},{"Id":"477454656","IsPullRequest":false,"CreatedAt":"2019-08-06T15:39:19","Actor":"WhoisUnknown","Number":"2871","RawContent":null,"Title":"Using beforeRouteEnter in global mixins not working","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-7z1uq](https://codesandbox.io/s/vue-template-7z1uq)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create minimal App with vue router.\r\n2. Register global mixin with hook beforeRouterEnter\r\n3. Try to open page\r\n\r\n### What is expected?\r\nA working beforeRouterEnter hook in all components in app\r\n\r\n### What is actually happening?\r\nGet error in console \" TypeError: guard is not a function\r\n    at routeEnterGuard (vue-router.common.js:2242)...\"\r\n\r\n---\r\nThis worked in vue 2.5.21\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2871","RelatedDescription":"Open issue \"Using beforeRouteEnter in global mixins not working\" (#2871)"},{"Id":"476778501","IsPullRequest":true,"CreatedAt":"2019-08-06T09:02:38","Actor":"posva","Number":"2870","RawContent":null,"Title":"docs(link): add v-slot for router-link","State":"closed","Body":"preview: https://5d4802bf25f76c00073841ea--vue-router.netlify.com/api/#v-slot-api-3-1-0","Url":"https://github.com/vuejs/vue-router/pull/2870","RelatedDescription":"Closed or merged PR \"docs(link): add v-slot for router-link\" (#2870)"},{"Id":"476653396","IsPullRequest":false,"CreatedAt":"2019-08-05T04:42:46","Actor":"Imtinmin","Number":"2869","RawContent":null,"Title":"use with element el-menu index oncomplete error","State":"closed","Body":"my code is  \r\n ```\r\n<el-menu  :default-active=\"$route.path\" class=\"el-menu-demo\" \r\n  background-color=\"Transparent\" \r\n  mode=\"horizontal\"\r\n  :router=true \r\n  @select=\"handleSelect\">\r\n  <el-menu-item index=\"/\" ></el-menu-item>\r\n```\r\n\r\nwhen I click the menu the firefox console is show:\r\n```\r\nTypeError: \"onComplete is not a function\"\r\n    push vue-router.esm.js:2297\r\n    transitionTo vue-router.esm.js:1895\r\n    confirmTransition vue-router.esm.js:2003\r\n    step vue-router.esm.js:1733\r\n    step vue-router.esm.js:1740\r\n    runQueue vue-router.esm.js:1744\r\n    confirmTransition vue-router.esm.js:1998\r\n    step vue-router.esm.js:1733\r\n    step vue-router.esm.js:1737\r\n    iterator vue-router.esm.js:1983\r\n    resolveAsyncComponents vue-router.esm.js:1811\r\n    iterator vue-router.esm.js:1962\r\n    step vue-router.esm.js:1736\r\n    step vue-router.esm.js:1740\r\n    step vue-router.esm.js:1740\r\n    runQueue vue-router.esm.js:1744\r\n    confirmTransition vue-router.esm.js:1991\r\n    transitionTo vue-router.esm.js:1893\r\n    push vue-router.esm.js:2294\r\n    push vue-router.esm.js:2584\r\n    handleSelect App.vue:79\r\n    VueJS 4\r\n    handleItemClick element-ui.common.js:3318\r\n    VueJS 2\r\n    dispatch emitter.js:29\r\n    handleClick element-ui.common.js:4030\r\n    VueJS 3\r\n```\r\nBut the route is available,what should I do\r\n","Url":"https://github.com/vuejs/vue-router/issues/2869","RelatedDescription":"Closed issue \"use with element el-menu index oncomplete error\" (#2869)"},{"Id":"476487858","IsPullRequest":false,"CreatedAt":"2019-08-03T21:17:16","Actor":"denjaland","Number":"2868","RawContent":null,"Title":"Router in history mode loses hash when updating query","State":"closed","Body":"### Version\r\n3.0.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/wjy9Lvgf/](https://jsfiddle.net/wjy9Lvgf/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nVueJS Router is set up with mode = history.\r\nConsider a route at /security\r\n\r\nThis page has multiple panes.  To decide which pane should be visble, we use the hash to determine this.\r\n\r\nExample:\r\n /security#tfa opens the pane where the user can enable/disable two factor authentication\r\n /security#audit opens the pane that has a datatable with the most recent security audits\r\n\r\nThe query params are mostly used to drive what data is shown.\r\nFor instance, the datatable at /security#audit has a table that can be filtered or sorted.  \r\nWhenever for instance a table column header is clicked, we set the sort query parameter as follows:\r\n\r\nthis.$router.push({query: Object.assign({}, this.$route.query, {'sort': sortkey})});\r\n\r\nI was under the impression that this method would be intelligent enough ONLY to update the query parameters, and leave the other parts of the route intact (path, params, hash...)\r\n\r\nYet, when we navigate by pushing to the router, ONLY pushing the query, the hash is lost...\r\n\r\nSo on /security#audit, clicking on the table column 'created', we do \r\nthis.$router.push({query: Object.assign({}, this.$route.query, {'sort': 'created'}));\r\n\r\nThe expected result would be /security?sort=created#audit\r\n-->this would keep the 'audit pane' active, and sort the contents in that table by created date.\r\n\r\nHowever, the result is /security?sort=created\r\n\r\nThe has should not be lost in that action.\r\n\r\n### What is expected?\r\nI would not expect the hash to be lost in this case, so the new route would be /security?sort=created#audit\r\n\r\n### What is actually happening?\r\nThe hash is lost; the new route is /security?sort=created\r\n\r\n---\r\nWe obviously try and put all these parameters in the route so a user can copy/paste the url and send it to a collleague to link to the correct information.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2868","RelatedDescription":"Closed issue \"Router in history mode loses hash when updating query\" (#2868)"},{"Id":"475980644","IsPullRequest":true,"CreatedAt":"2019-08-02T03:37:23","Actor":"ronald-d-rogers","Number":"2867","RawContent":null,"Title":"fix(ssr): Memory leak in poll method (fix #2606).","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nFix #2606.\r\n\r\nThis fix depends on the following being merged first to work: https://github.com/vuejs/vue/pull/9479\r\n\r\nFixes memory leak in `poll` method when a Vue app is created per request, which is typical in SSR.\r\n\r\nIn particular, the leak happens when:\r\n\r\n1. The `router-view` is conditioned to appear upon a variable that never becomes true.\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\n2. A `beforeRouteEnter` guard is defined in the view in the following way:\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {})\r\n  }\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vue-router/pull/2867","RelatedDescription":"Open PR \"fix(ssr): Memory leak in poll method (fix #2606).\" (#2867)"},{"Id":"475720079","IsPullRequest":false,"CreatedAt":"2019-08-01T15:30:07","Actor":"monkeySmoke","Number":"2866","RawContent":null,"Title":"清除浏览器缓存，通过vue-router新开一个窗口，新窗口的路由会被重定向到 / 目录","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n \r\n\r\n### What is expected?\r\n跳转到正确的路由\r\n\r\n### What is actually happening?\r\n \r\n\r\n---\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2866","RelatedDescription":"Closed issue \"清除浏览器缓存，通过vue-router新开一个窗口，新窗口的路由会被重定向到 / 目录\" (#2866)"},{"Id":"474781293","IsPullRequest":true,"CreatedAt":"2019-08-01T08:55:51","Actor":"Mighty683","Number":"2862","RawContent":null,"Title":"feat: return a promise with push and replace","State":"closed","Body":"Closing(#1769)\r\n\r\nChanging behaviour of `push` `replace` to return promise when no callback is provided.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2862","RelatedDescription":"Closed or merged PR \"feat: return a promise with push and replace\" (#2862)"},{"Id":"475538797","IsPullRequest":false,"CreatedAt":"2019-08-01T08:12:04","Actor":"tychenjiajun","Number":"2865","RawContent":null,"Title":"Make automatically added trailing slash in base optional","State":"open","Body":"### What problem does this feature solve?\r\nWe use the following base config\r\n```js\r\nbase: /page/index.html\r\n```\r\n\r\nwhat we want in href generated by <router-link>\r\n\r\n```html\r\n<a href=\"/page/index.html#/foo\"/></a>\r\n```\r\n\r\nwhat we have now\r\n```html\r\n<a href=\"/page/index.html/#/foo\"/></a>\r\n```\r\n\r\n### What does the proposed API look like?\r\n```js\r\nbase: {\r\n    url: '/page/index.html'\r\n    trailingSlash: false\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2865","RelatedDescription":"Open issue \"Make automatically added trailing slash in base optional\" (#2865)"},{"Id":"475455016","IsPullRequest":false,"CreatedAt":"2019-08-01T03:42:16","Actor":"TornadoLess","Number":"2864","RawContent":null,"Title":"vue router transition leave animation performance issue in mobile","State":"closed","Body":"we use transition wrapper the router-view,  when router.go(-1) is called, the current page view will leave the screen transformx(100%), but\n the animation is invisible because of the previous page view node is put after the current one,  so the leave animation is happening under the  current one.\n\nwe use zindex\n to make the leave page animation beyond the previous page but met performance issue in mobile\n\n\nbeg author provide an new transition mode:  put\n the new router view after or before the current router view, then we don’t need to use zindex to control  the view visible\n which has issue in mobile side\n\n\n :octocat: [From gitme iOS](http://flutterchina.club/app/gm.html)","Url":"https://github.com/vuejs/vue-router/issues/2864","RelatedDescription":"Closed issue \"vue router transition leave animation performance issue in mobile\" (#2864)"},{"Id":"475415506","IsPullRequest":false,"CreatedAt":"2019-08-01T00:34:56","Actor":"philBrown","Number":"2863","RawContent":null,"Title":"Improve history mode server configuration documentation to include non-root publicPath","State":"open","Body":"### What problem does this feature solve?\r\nThe documentation for [HTML5 History Mode - Example Server Configurations](https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations) assumes all apps are running at the document root (ie `/`). Apps using a non-root [`publicPath`](https://cli.vuejs.org/config/#publicpath) are going to struggle with these config examples.\r\n\r\n### What does the proposed API look like?\r\nUpdate the examples to include `<publicPath>` placeholders, eg\r\n\r\nnginx\r\n```\r\nlocation <publicPath> {\r\n  try_files $uri $uri/ <publicPath>/index.html;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2863","RelatedDescription":"Open issue \"Improve history mode server configuration documentation to include non-root publicPath\" (#2863)"},{"Id":"472320040","IsPullRequest":false,"CreatedAt":"2019-07-24T14:36:39","Actor":"gebilaofan","Number":"2861","RawContent":null,"Title":"路由切换添加scrollBehavior会出现横向滚动条","State":"closed","Body":"### What problem does this feature solve?\r\n在添加scrollBehavior后，路由切换的时候底部会出现一个横向滚动条(我加了路由动画)一闪而过。\r\n\r\n### What does the proposed API look like?\r\n不要横向的滚动条\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2861","RelatedDescription":"Closed issue \"路由切换添加scrollBehavior会出现横向滚动条\" (#2861)"},{"Id":"471469668","IsPullRequest":false,"CreatedAt":"2019-07-23T07:03:26","Actor":"Max-Law","Number":"2860","RawContent":null,"Title":"子路由嵌套，在一些安卓机型的微信web中切换列表会出现$router.push()跳转失效","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://eoatestdev.sscc.com/sscc-ow-mobile-web/webstatic/weixin/index.html#/inquirePage/inquireList](https://eoatestdev.sscc.com/sscc-ow-mobile-web/webstatic/weixin/index.html#/inquirePage/inquireList)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n在安卓微信（android^8.0重现频繁）中打开这个链接，关注测试环境的公众号并找我要测试账号就可进入列表。当你一直切换底部的三个tab后，再次点击列表的详情跳转将无任何反应。\r\n\r\n首页的代码概要：\r\n```\r\n    <keep-alive>\r\n      <router-view class=\"mid\" :search=\"searchData\"></router-view>\r\n    </keep-alive>\r\n    <footer>\r\n      <router-link\r\n        v-for=\"item in tab\"\r\n        :key=\"item.name\"\r\n        :to=\"`/inquirePage/${item.name}`\"\r\n      >{{item.text}}</router-link>\r\n    </footer>\r\n```\r\n\r\n子路由中的代码概要：\r\n```\r\n<div name=\"我的账单\">\r\n    <Refersh :callback=\"getList\" :option=\"option\" :check=\"check\" ref=\"myBuillRefersh\">\r\n      <ul>\r\n        <li v-for=\"item in items\" :key=\"item.uuid\">\r\n          <router-link :to=\"goTo(item.uuid,item.billStatus)\">\r\n            <div class=\"title\">{{item.billName}}</div>\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n    </Refersh>\r\n  </div>\r\n```\r\n\r\n### What is expected?\r\n切换tab依旧能正常跳转详情页\r\n\r\n### What is actually happening?\r\n频繁切换tab后不能正常跳转详情页\r\n\r\n---\r\n个人debug过程：\r\n首先我怀疑是因为我用better-scroll导致没有触发点击事件，然而我在最外层用事件委托发现是触发了点击事件只是$router.push()没反应。\r\n后来我从 @click 改到 v-on:click.stop 再改到<router-link>来触发还是不行。\r\n再后来我查issue，他们说vue2.6.9的版本也有click的冒泡问题，我测试了2.9.10与2.5.x的版本依旧出现。\r\n同时，我进入详情再用安卓物理返回键回到列表，有时也会出现点击不太跳转的情况。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2860","RelatedDescription":"Closed issue \"子路由嵌套，在一些安卓机型的微信web中切换列表会出现$router.push()跳转失效\" (#2860)"},{"Id":"470882500","IsPullRequest":false,"CreatedAt":"2019-07-22T04:08:52","Actor":"liaoxuewei","Number":"2859","RawContent":null,"Title":"keep-alive问题？","State":"closed","Body":"```\r\n<keep-alive>\r\n  <router-view v-if=\"$route.meta.keepAlive\"></router-view>\r\n</keep-alive>\r\n<router-view v-if=\"!$route.meta.keepAlive\"></router-view>\r\n\r\n```\r\n本人采用这种做法来实现缓存功能，但是有时可以，有时不行，经过多次测试，发现似乎是Route的层级问题，我的路由定义是：\r\n\r\n```\r\n{\r\n  id: 1,\r\n  ...\r\n  path: \"xxx\",\r\n  children:\r\n  [\r\n    {\r\n      id: 2,\r\n      ...\r\n      path: \"xxx\",\r\n      children:\r\n      [\r\n        {\r\n          id: 3,\r\n          ...\r\n          path: \"xxx\",\r\n          meta: {\r\n            keepAlive: true // 需要被缓存\r\n          },\r\n          children:\r\n          [\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\nid=3的这个无法缓存，id=2可以缓存（即树的第二级可以缓存，第三级及以后不能缓存）。\r\n这个是不是BUG啊？按理不应该局限这个吧？","Url":"https://github.com/vuejs/vue-router/issues/2859","RelatedDescription":"Closed issue \"keep-alive问题？\" (#2859)"},{"Id":"470676774","IsPullRequest":true,"CreatedAt":"2019-07-20T16:29:28","Actor":"kevinkhill","Number":"2858","RawContent":null,"Title":"Update README.md","State":"closed","Body":"caught a typo","Url":"https://github.com/vuejs/vue-router/pull/2858","RelatedDescription":"Closed or merged PR \"Update README.md\" (#2858)"},{"Id":"469738414","IsPullRequest":false,"CreatedAt":"2019-07-18T12:25:43","Actor":"wizardnet972","Number":"2857","RawContent":null,"Title":"Can't pass data to component from beforeRouteEnter only after component is initialized","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-typescript-example-cb9o0](https://codesandbox.io/s/vue-typescript-example-cb9o0)\r\n\r\n### Steps to reproduce\r\nOpen the reproduction.\r\nopen the console.\r\nThen click on the link: go to page.\r\n\r\ncheck the console log.\r\n\r\n### What is expected?\r\nconsole log object\r\n\r\n### What is actually happening?\r\nconsole log undefined.\r\n\r\n---\r\nI think because next function happens after the component is initialized and in setTimeout((), 16) I can't be able to pass to its props before the component is executed.\r\n\r\nI think right now is weird behavior for the router. its miss the expected guard/resolve behavior.\r\n\r\nSo this is why I got undefined at the getter function.\r\n\r\nAny idea how to solve this issue?\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2857","RelatedDescription":"Closed issue \"Can't pass data to component from beforeRouteEnter only after component is initialized\" (#2857)"},{"Id":"469624614","IsPullRequest":false,"CreatedAt":"2019-07-18T08:00:27","Actor":"q379257013","Number":"2856","RawContent":null,"Title":"为什么要用 resetRouter， 请问他解决什么问题了， 一直没有明白了？ ","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2856","RelatedDescription":"Closed issue \"为什么要用 resetRouter， 请问他解决什么问题了， 一直没有明白了？ \" (#2856)"},{"Id":"469374275","IsPullRequest":true,"CreatedAt":"2019-07-18T06:47:43","Actor":"darrylhein","Number":"2855","RawContent":null,"Title":"Adding periods in docs","State":"closed","Body":"very minor\r\n","Url":"https://github.com/vuejs/vue-router/pull/2855","RelatedDescription":"Closed or merged PR \"Adding periods in docs\" (#2855)"},{"Id":"469283566","IsPullRequest":false,"CreatedAt":"2019-07-17T15:21:55","Actor":"atrueresistance","Number":"2854","RawContent":null,"Title":"Why does vue.js report 404 route in production, but not development?","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development](https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRunning npm run serve I can visit auth/login, but after npm run build the server returns a 404 on auth/login.\r\n\r\nI get a 404 when going to https://example.com/auth/login but navigating to https://example.com/address-records works just fine. It seems as if only something that is more than a single / deep returns a 404.\r\n\r\nHere is the router code\r\n\r\n```\r\nlet router = new Router({\r\n  mode: \"history\",\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      name: \"home\",\r\n      component: Home\r\n    },\r\n    {\r\n      path: \"/auth/login\",\r\n      name: \"Login\",\r\n      component: Login\r\n    },\r\n    {\r\n      path: \"/address-records\",\r\n      name: \"Address\",\r\n      component: Address\r\n    }\r\n  ]\r\n});\r\n```\r\n\r\nIs there something special I need to be doing with Nginx? I have it setup with similar searched questions.\r\n\r\n```\r\n location / {\r\n        try_files $uri $uri/ /index.html;\r\n }\r\n location @rewrites {\r\n         rewrite ^(. )$ /index.html last;\r\n      }\r\n\r\n location ~* \\.(?:ico|css|js|gif|jpe?g|png)$ {\r\n         # Some basic cache-control for static files to be sent to the browser\r\n         expires max;\r\n         add_header Pragma public;\r\n         add_header Cache-Control \"public, must-revalidate, proxy-revalidate\";\r\n  }\r\n```\r\n\r\n### What is expected?\r\n200 status code from auth/login in production\r\n\r\n### What is actually happening?\r\n404 status code from auth/login in production\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2854","RelatedDescription":"Closed issue \"Why does vue.js report 404 route in production, but not development?\" (#2854)"},{"Id":"469007379","IsPullRequest":true,"CreatedAt":"2019-07-17T06:49:12","Actor":"graup","Number":"2853","RawContent":null,"Title":"Add named exports RouterLink, RouterView to es modules","State":"closed","Body":"#1976\r\n","Url":"https://github.com/vuejs/vue-router/pull/2853","RelatedDescription":"Closed or merged PR \"Add named exports RouterLink, RouterView to es modules\" (#2853)"},{"Id":"468804144","IsPullRequest":false,"CreatedAt":"2019-07-16T18:36:51","Actor":"rSammy","Number":"2852","RawContent":null,"Title":"Cannot use router link with @contextmenu","State":"closed","Body":"Hello,\r\n\r\nI figured it's impossible to use @contextmenu event with router-link.\r\n\r\nI first thought I did something wrong before realizing I didn't touch this file, so there shouldn't be any problem with contextmenu.\r\n\r\nBut then I remembered @contextmenu was working when I used div before my previous changes.\r\n\r\n**Line 483** I found this function in **vue-router-esm.js**\r\nI guess instead of just \"return\", the router should emit @contextmenu event or something like this, am I wrong ?\r\n\r\n```\r\nfunction guardEvent (e) {\r\n  // don't redirect with control keys\r\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\r\n  // don't redirect when preventDefault called\r\n  if (e.defaultPrevented) { return }\r\n  // don't redirect on right click\r\n  if (e.button !== undefined && e.button !== 0) { return }\r\n  // don't redirect if `target=\"_blank\"`\r\n  if (e.currentTarget && e.currentTarget.getAttribute) {\r\n    var target = e.currentTarget.getAttribute('target');\r\n    if (/\\b_blank\\b/i.test(target)) { return }\r\n  }\r\n  // this may be a Weex event which doesn't have this method\r\n  if (e.preventDefault) {\r\n    e.preventDefault();\r\n  }\r\n  return true\r\n}\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2852","RelatedDescription":"Closed issue \"Cannot use router link with @contextmenu\" (#2852)"},{"Id":"468772602","IsPullRequest":true,"CreatedAt":"2019-07-16T17:39:50","Actor":"posva","Number":"2851","RawContent":null,"Title":"fix(hash): correctly place query after first hash","State":"closed","Body":"Fixes #2125 \r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2851","RelatedDescription":"Closed or merged PR \"fix(hash): correctly place query after first hash\" (#2851)"},{"Id":"468535290","IsPullRequest":false,"CreatedAt":"2019-07-16T09:07:44","Actor":"chenguzhen87","Number":"2850","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://www.lulutopic.com/web/#/login](http://www.lulutopic.com/web/#/login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、设置hash路由\r\n2、在iphone下打开带hash路由\r\n3、点击浏览器‘复制’按纽\r\n4、粘贴地址\r\n\r\n### What is expected?\r\n粘贴地址带上hash部分\r\n\r\n### What is actually happening?\r\nhash地址丢失\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2850","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2850)"},{"Id":"468529272","IsPullRequest":false,"CreatedAt":"2019-07-16T08:54:06","Actor":"chenguzhen87","Number":"2849","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"在浏览器中点击复制链接，但是复制出来的链接hash部分丢失\r\n","Url":"https://github.com/vuejs/vue-router/issues/2849","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2849)"},{"Id":"468518712","IsPullRequest":false,"CreatedAt":"2019-07-16T08:32:21","Actor":"zhengxsFE","Number":"2848","RawContent":null,"Title":"createHref 方法能否变成公共方法","State":"closed","Body":"### What problem does this feature solve?\r\n**场景一：**\r\n\r\n我的商城 base 是 /h5/shop/:shopId ( node 路由 )\r\n\r\nMy mall 'base' is 'h5/shop/: shopId' (node routing)\r\n\r\n\r\n点击购物车需要跳转到登录页，但是 fullPath 拿到的 path 不包含 base 的内容\r\n\r\nClick on the shopping cart to jump to the login page, but the 'path' of 'fullPath' does not contain the content of 'base'.\r\n\r\n\r\n每次都手动拼接，希望能变成一个公共方法，（ps: 应用有多个，目前左右一个函数在使用）\r\n\r\nHope to make this method public\r\n\r\n\r\n**场景二：**\r\n\r\n购买成功页需要生成海报，海报的地址指向商品详情页，需要生成 url 地址\r\n\r\nBusiness needs to generate URLs for other pages\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n/**\r\n * url join\r\n *\r\n * @param {String|Object} location\r\n * @param {Object} [options=null]\r\n * @param {Boolean} [options.base=false]\r\n *\r\n * @returns {String|Null}\r\n */\r\nrouter.url(location, options?)\r\n\r\n// -> /home\r\nrouter.url('home')\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url('home', {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url({ path: 'home' }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/member/123\r\nrouter.url({ name: 'member', params: { memberId: '123' } }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/products?sort=date\r\nrouter.url({ path: 'products', query: { sort: 'date' } }, {\r\n  base: true\r\n})\r\n```\r\n\r\n\r\n```javascript\r\n// 或者 route 添加 href 字段\r\nroute.href = '/h5/shop/1/shopping-cart'\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2848","RelatedDescription":"Closed issue \"createHref 方法能否变成公共方法\" (#2848)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"478201435","IsPullRequest":true,"CreatedAt":"2019-08-08T01:00:07","Actor":"stephentian","Number":"1600","RawContent":null,"Title":"Fix: \" id='app' \"","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1600","RelatedDescription":"Open PR \"Fix: \" id='app' \"\" (#1600)"},{"Id":"478068219","IsPullRequest":true,"CreatedAt":"2019-08-07T18:08:25","Actor":"SagePacheco","Number":"1599","RawContent":null,"Title":"Update modules.md","State":"open","Body":"Minor language correction.","Url":"https://github.com/vuejs/vuex/pull/1599","RelatedDescription":"Open PR \"Update modules.md\" (#1599)"},{"Id":"477476046","IsPullRequest":false,"CreatedAt":"2019-08-06T16:24:54","Actor":"aosnow","Number":"1598","RawContent":null,"Title":"ModuleCollection.getNamespace 只能取第一级 key","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vuex](https://new-issue.vuejs.org/?repo=vuejs/vuex)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n// 循环下去的主体是 module 没问题\r\n  get(path) {\r\n    return path.reduce((module, key) => {\r\n      return module.getChild(key);\r\n    }, this.root);\r\n  }  \r\n\r\n// 循环下去主体是 String，因此 module = module.getChild(key);\r\n// module 永远指向 this.root\r\ngetNamespace(path) {\r\n    let module = this.root;\r\n    return path.reduce((namespace, key) => {\r\n      module = module.getChild(key);\r\n      return namespace   (module.namespaced ? key   '/' : '');\r\n    }, '');\r\n  }\r\n```\r\n`store._modules.getNamespace(['user','member'])` 将只能得到 `user/`\r\n\r\n### What is expected?\r\n`store._modules.getNamespace(['user','member'])` 应该得到 `user/member/` 的结果\r\n\r\n### What is actually happening?\r\ngetNamespace(path) 返回的结果永远只有 root.getChild(key) 的匹配结果\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1598","RelatedDescription":"Closed issue \"ModuleCollection.getNamespace 只能取第一级 key\" (#1598)"},{"Id":"477473589","IsPullRequest":false,"CreatedAt":"2019-08-06T16:16:48","Actor":"aosnow","Number":"1597","RawContent":null,"Title":"ModuleCollection.getNamespace 只能取第一级 key","State":"closed","Body":"```\r\n// 循环下去的主体是 module 没问题\r\n  get(path) {\r\n    return path.reduce((module, key) => {\r\n      return module.getChild(key);\r\n    }, this.root);\r\n  }  \r\n\r\n// 循环下去主体是 String，因此 module = module.getChild(key);\r\n// module 永远指向 this.root\r\ngetNamespace(path) {\r\n    let module = this.root;\r\n    return path.reduce((namespace, key) => {\r\n      module = module.getChild(key);\r\n      return namespace + (module.namespaced ? key + '/' : '');\r\n    }, '');\r\n  }\r\n```\r\n\r\ngetNamespace(path) 返回的结果永远只有 root.getChild(key) 的匹配结果\r\n ","Url":"https://github.com/vuejs/vuex/issues/1597","RelatedDescription":"Closed issue \"ModuleCollection.getNamespace 只能取第一级 key\" (#1597)"},{"Id":"477384943","IsPullRequest":false,"CreatedAt":"2019-08-06T13:34:41","Actor":"cherenkor","Number":"1596","RawContent":null,"Title":"Improve modules data map import","State":"open","Body":"### What problem does this feature solve?\r\nRepeating code, Safe import, More convenient way to import data\r\n\r\n### What does the proposed API look like?\r\nHi, I've been working with Vuex recently and got a task where I would need to get a property of the object from the state.\r\n\r\nLike this: ```state.headers.username```\r\n\r\nWhat do you think to implement this solution for importing this property from the state (it also could be done for actions, getters, mutations):\r\n\r\n```\r\n...mapState({ username: 'collection-data/headers.username' })\r\n```\r\n\r\nWhat do you think about it?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1596","RelatedDescription":"Open issue \"Improve modules data map import\" (#1596)"},{"Id":"477382886","IsPullRequest":false,"CreatedAt":"2019-08-06T13:30:54","Actor":"cherenkor","Number":"1595","RawContent":null,"Title":"Improve modules data import","State":"closed","Body":"Hi, I've been working with Vuex recently and got a task where I would need to get a property of the object from the state.\r\n\r\nLike this: `state.headers.username`\r\n\r\nWhat do you think to implement this solution for importing this property from the state (it also could be done for actions, getters, mutations):\r\n\r\n`\r\n...mapState({\r\n      rawEndingDate: 'collection-data/headers.username'\r\n    })\r\n`\r\n\r\nWhat do you think about it?","Url":"https://github.com/vuejs/vuex/issues/1595","RelatedDescription":"Closed issue \"Improve modules data import\" (#1595)"},{"Id":"477167338","IsPullRequest":true,"CreatedAt":"2019-08-06T04:47:23","Actor":"sue71","Number":"1594","RawContent":null,"Title":"fix: remove invalid typings","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1594","RelatedDescription":"Closed or merged PR \"fix: remove invalid typings\" (#1594)"},{"Id":"477163822","IsPullRequest":false,"CreatedAt":"2019-08-06T04:31:33","Actor":"farazshuja","Number":"1593","RawContent":null,"Title":"Switching to a nested route is automatically running the last commit event from parent's store","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-c2gtb](https://codesandbox.io/s/vue-template-c2gtb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codesandbox.io/s/vue-template-c2gtb\r\n2. Click on 'Go to Page with nested router' link\r\n3. Click on 'commit event', it will show an alert box\r\n4. Now change the nested route by clicking 'change nested route to reporting'\r\n\r\n### What is expected?\r\nRoute changed to reporting without showing the 'hello' alert box.\r\n\r\n### What is actually happening?\r\nIts showing the 'hello' alert box again.\r\n\r\n---\r\nOne of the releated issues\r\nhttps://github.com/vuejs/vuex/issues/1570\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1593","RelatedDescription":"Open issue \"Switching to a nested route is automatically running the last commit event from parent's store\" (#1593)"},{"Id":"476523653","IsPullRequest":false,"CreatedAt":"2019-08-04T07:21:04","Actor":"Rolanddoda","Number":"1592","RawContent":null,"Title":"mapState doesn't work with non namespaced module","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-issue-with-mapstate-5zb3x](https://codesandbox.io/s/vuex-issue-with-mapstate-5zb3x)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the reproduction link, there is a non namespaced module with has a count in it's state and a doubleCount in it's getters.\r\n\r\n**In the HelloWorld component I am trying to use vuex helpers to access the state and the getters like:**\r\n\r\n```js\r\n...mapState(['count']),\r\n...mapGetters(['doubleCount]')\r\n```\r\n\r\n### What is expected?\r\nSince the module it's not namespaced I should be able to access the state and getters of the module with vuex helpers.\r\n\r\nBoth `mapState` and `mapGetters` should work fine.\r\n\r\n### What is actually happening?\r\nHowever, only the mapGetters helper it's working.\r\n\r\n---\r\nIn order to get the `mapState` to work I should do:\r\n\r\n```js\r\n    ...mapState({\r\n      count: state => state.myModule.count\r\n    })\r\n```\r\n\r\nHowever IMHO, the mapState should work with just a string since the module in the end it's merged with the global store.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1592","RelatedDescription":"Open issue \"mapState doesn't work with non namespaced module\" (#1592)"},{"Id":"474320880","IsPullRequest":false,"CreatedAt":"2019-07-30T01:02:13","Actor":"Rkaede","Number":"1591","RawContent":null,"Title":"Pass payload by value, not by reference","State":"open","Body":"### What problem does this feature solve?\r\nCurrently the payload passed to mutation functions is by reference, not value. This allows the mutation functions to directly update the payload data rather than the state object.\r\n\r\nAs an example see [editTodo() in the todo demo](https://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/examples/todomvc/store/mutations.js#L17):\r\n\r\n```javascript\r\neditTodo (state, { todo, text = todo.text, done = todo.done }) {\r\n  todo.text = text\r\n  todo.done = done\r\n}\r\n```\r\n\r\nThere are 2 downsides to this.\r\n\r\nThe first is that the function is mutating the payload and not the state. It is not clear here what is being mutated. We now need to traverse all around the app to find out.\r\n\r\nIf the payload was instead passed by value then updating the value would not actually do anything. All mutation functions would need to update the state object. This would make vuex stores more explicit and understandable as well as ensure there is a clear boundary between it and the app. \r\n\r\nThe second is that Vuex plugins cannot log the mutations to a server and replay them back later. Here is a pseudocode example:\r\n\r\n```javascript\r\n// replaying back mutation logs\r\nlet logs = await getLogsFromServer();\r\nfor (log in logs) {\r\n  // any editTodo mutations passed in below will not work\r\n  // as the mutation will update the \"log\" object instead of \r\n  // the actual todo in the state object\r\n  this.store.commit(log.type, log.payload);\r\n}\r\n```\r\n\r\nI'm working on a plugin that does this (similar to [redux-vcr](https://github.com/joshwcomeau/redux-vcr)) and it would be great if there was a systematic guarantee that it would work with all Vuex stores. \r\n\r\n### What does the proposed API look like?\r\nExample - No changes needed\r\n```javascript\r\nmutations: {\r\n  // current: n is passed by reference\r\n  increment (state, n) { \r\n    state.count  = n\r\n  }\r\n}\r\n\r\nmutations: {\r\n  // proposed: n is passed by value\r\n  increment (state, n) { \r\n    state.count  = n\r\n  }\r\n}\r\n```\r\n\r\nExample B - editTodo\r\n\r\n```javascript\r\nmutations: {\r\n  // current - can update payload\r\n  editTodo (state, { todo, text = todo.text, done = todo.done }) {\r\n    todo.text = text\r\n    todo.done = done\r\n  }\r\n}\r\n\r\nmutations: {\r\n  // proposed - with pass by value we \r\n  // must update the state object\r\n  editTodo (state, todo) {\r\n     const index = state.todos.findIndex(t => t.id === todo.id);\r\n     state.todos[index] = todo;\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1591","RelatedDescription":"Open issue \"Pass payload by value, not by reference\" (#1591)"},{"Id":"473829497","IsPullRequest":false,"CreatedAt":"2019-07-29T03:15:47","Actor":"juanzi957","Number":"1590","RawContent":null,"Title":"vuex3.1.1版本存在内存泄漏的问题","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://forum.vuejs.org/t/vux/66236](https://forum.vuejs.org/t/vux/66236)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n最近我在用vue-cli3 vuex websocket构建一个项目，发现vuex存在内存泄漏的问题，但是不知道怎么解决，请大家帮忙看下，步骤如下：\r\n1.用vue-cli3创建一个空项目；\r\n2.服务端用node搭建一个简单的每隔50ms用websocket给客户端发消息的服务；\r\n3.客户端每次接收到服务端发送过来的数据都通过vuex来管理，每次都commit（或者dispatch我也试过，效果一样）到vuex管理去，\r\n4.运行十几分钟看不出内存泄漏的问题，运行个把小时就能看出一点，JS栈内存一直在增加，运行一晚上之后，浏览器完全崩溃了；\r\n5.这是服务端发送一个比较小的数据，发送一个很大的数据浏览器崩溃的就更快。\r\n下面是我的数据和代码：\r\n服务端发送的数据：\r\nvar abc = {\r\n‘aaa’: 111,\r\n‘aab’: 1111,\r\n‘aac’: 11111,\r\n‘aad’: 111111,\r\n‘aae’: 1111111,\r\n‘aaf’: 11111111,\r\n‘aag’: 111111111,\r\n‘aah’: 1111111111,\r\n‘aai’: 11111111111\r\n}\r\n\r\n客户端：用VUE-CLI3搭建的空项目，只修改过的Home.vue中的代码，一下代码放在mounted中：\r\nconst webSocketUrl = ‘ws://127.0.0.1:8000’\r\nconst ws = new WebSocket(webSocketUrl)\r\nconst _this = this\r\nws.onmessage = function (ev) {\r\n_this.$store.dispatch(‘setModulesRes’, JSON.parse(ev.data))\r\n}\r\n…\r\n\r\n### What is expected?\r\n不管是以多少频率每秒去更新vuex中的数据，都不应该导致内存泄漏引起浏览器奔溃的情况。\r\n\r\n### What is actually happening?\r\n不管任何时候，内存泄漏都是一个很严重的问题，当遇到需要不断的时时更新vuex中数据的项目，就不能用vue构建了。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1590","RelatedDescription":"Open issue \"vuex3.1.1版本存在内存泄漏的问题\" (#1590)"},{"Id":"473828352","IsPullRequest":false,"CreatedAt":"2019-07-29T03:10:11","Actor":"juanzi957","Number":"1589","RawContent":null,"Title":"vuex内存泄漏的问题","State":"closed","Body":"https://forum.vuejs.org/t/vux/66236\r\n","Url":"https://github.com/vuejs/vuex/issues/1589","RelatedDescription":"Closed issue \"vuex内存泄漏的问题\" (#1589)"},{"Id":"472762082","IsPullRequest":true,"CreatedAt":"2019-07-25T09:31:31","Actor":"rummanhasnayeen","Number":"1588","RawContent":null,"Title":"intro.md translated into Bengali and added folder","State":"open","Body":"We are a team of four Junior Software Engineers from Bangladesh. Our native language is Bengali and so \r\n we would like to translate the documentation for Vuex into Bengali. \r\nWe have already translated the intro.md in this pull request. If accepted, we will carry on the work of translating the remaining parts of the documentation into Bengali.\r\nPlease review the changes as well as provide the rules and regulations for such contribution in this project.","Url":"https://github.com/vuejs/vuex/pull/1588","RelatedDescription":"Open PR \"intro.md translated into Bengali and added folder\" (#1588)"},{"Id":"472127016","IsPullRequest":false,"CreatedAt":"2019-07-24T10:12:34","Actor":"fvigotti","Number":"1585","RawContent":null,"Title":"add reference (in docs) to static typing libraries available","State":"closed","Body":"### What problem does this feature solve?\r\nstatic typing\r\n\r\n### What does the proposed API look like?\r\nAfter some days with vuex I'm already bored by the lack of refactoring capacity and the slowdown of programming speed when you have to call namespace/method names using strings,\r\nI've already tried with static string references in both methods names and method calls but this is ugly and for big store become also a mess..\r\n\r\nI've found some libraries which brings better typing support to vuex , the best solution obviously would be toadd everything directly in vuex but If you don't find it useful at least I think that a credit in documentation should be added so users we are approaching vuex (which have less knowledge than skilled users which also mantain the docs ) can have an idea of which library choose , and also those library could get more focused support from the community ,\r\n\r\nI vote for this library to get a sort of \"officialization\" as typing library for vuex :\r\nhttps://github.com/championswimmer/vuex-module-decorators\r\n\r\n(the officialization is necessary for the reasons described above), I choose this library because seems to provide the better typed experience even if his documentation is a bit incomplete\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1585","RelatedDescription":"Closed issue \"add reference (in docs) to static typing libraries available\" (#1585)"},{"Id":"472187418","IsPullRequest":false,"CreatedAt":"2019-07-24T09:51:45","Actor":"SergioCrisostomo","Number":"1587","RawContent":null,"Title":"Storing component instances creates a circular reference loop in strict mode","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Sergio_fiddle/zkrsa4g1/3/](https://jsfiddle.net/Sergio_fiddle/zkrsa4g1/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nStore a pointer to a component instance in Vuex with `strict: true`.\r\n\r\n### What is expected?\r\nNo errors. \r\n\r\n### What is actually happening?\r\n> RangeError: Maximum call stack size exceeded\r\n\r\nVuex is adding watchers to all nested properties to warn if there are non-immutable changes inside a object (because of the strict mode help warnings) and does not stop when its entering itself. \r\n\r\nIn other words: when entering a component we can re-enter the store as a component property, and in the store we have a component that has a store etc etc ... we are in a loop\r\n\r\n---\r\nI think either:\r\n - Vuex should officially discourage from saving pointers of instances of Vue components in it\r\n\r\n**or** \r\n\r\n - add a check to stop going deeper if the nested object it the Vuex instance itself\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1587","RelatedDescription":"Open issue \"Storing component instances creates a circular reference loop in strict mode\" (#1587)"},{"Id":"472147077","IsPullRequest":true,"CreatedAt":"2019-07-24T08:26:57","Actor":"rummanhasnayeen","Number":"1586","RawContent":null,"Title":".gitignore update to ignore Intellij IDEA and vscode pr…","State":"open","Body":"…oject files\r\n\r\n.gitignore update to ignore Intellij IDEA project files and vscode project files","Url":"https://github.com/vuejs/vuex/pull/1586","RelatedDescription":"Open PR \".gitignore update to ignore Intellij IDEA and vscode pr…\" (#1586)"},{"Id":"472126314","IsPullRequest":false,"CreatedAt":"2019-07-24T07:36:22","Actor":"fvigotti","Number":"1584","RawContent":null,"Title":"suggestion: add reference (in docs) to static typing libraries available ","State":"closed","Body":"After some days with vuex I'm already bored by the lack of refactoring capacity and the slowdown of programming speed when you have to call namespace/method names using strings,\r\nI've already tried with static string references in both methods names and method calls but this is ugly and for big store become also a mess..\r\n\r\nI've found some libraries which brings better typing support to vuex , the best solution obviously would be toadd everything directly in vuex  but If you don't find it useful at least I think that a credit in documentation should be added so users we are approaching vuex  (which have less knowledge than skilled users which also mantain the docs )  can have an idea of which library choose , and also those library could get more focused support from the community ,\r\n\r\nI vote for this library to get a sort of \"officialization\" as typing library for vuex :\r\nhttps://github.com/championswimmer/vuex-module-decorators\r\n\r\n(the officialization is necessary for the reasons described above),  I choose this library because seems to provide the better typed experience even if his documentation is a bit incomplete \r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1584","RelatedDescription":"Closed issue \"suggestion: add reference (in docs) to static typing libraries available \" (#1584)"},{"Id":"469975199","IsPullRequest":true,"CreatedAt":"2019-07-18T20:36:22","Actor":"valdezalbertm","Number":"1583","RawContent":null,"Title":"Update README.md","State":"closed","Body":"The URL provided is not existing anymore.","Url":"https://github.com/vuejs/vuex/pull/1583","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1583)"},{"Id":"468913070","IsPullRequest":true,"CreatedAt":"2019-07-16T23:20:37","Actor":"ben-turner","Number":"1582","RawContent":null,"Title":"Update link to flux in README","State":"open","Body":"The current link to flux is broken. Looks like the paths have been updated to not include a file extension.","Url":"https://github.com/vuejs/vuex/pull/1582","RelatedDescription":"Open PR \"Update link to flux in README\" (#1582)"},{"Id":"468441343","IsPullRequest":false,"CreatedAt":"2019-07-16T04:28:09","Actor":"regchiu","Number":"1581","RawContent":null,"Title":"When actions returns promise, the property will be ignored","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-5rovy](https://codesandbox.io/s/vue-template-5rovy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```js\r\nactions: {\r\n    test() {\r\n      let prom = new Promise((resolve) => {\r\n        setTimeout(function(){\r\n          resolve(\"DONE\"); \r\n        }, 3000);\r\n      });\r\n      prom['id'] = 10\r\n      console.log(prom) // Object contains id\r\n      return prom;\r\n    }\r\n  }\r\n```\r\n```js\r\ncreated() {\r\n    let pf = this.$store.dispatch(\"test\");\r\n    console.log(\"PF\", pf); // No id property\r\n    pf.then(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n```\r\n\r\n### What is expected?\r\nThe properties of the object should be displayed in the console.\r\n\r\n### What is actually happening?\r\nThe properties of the object are ignored.\r\n\r\n---\r\nShare questions from the forum\r\n\r\nhttps://forum.vuejs.org/t/custom-promise-properties-in-actions/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1581","RelatedDescription":"Open issue \"When actions returns promise, the property will be ignored\" (#1581)"},{"Id":"466821711","IsPullRequest":false,"CreatedAt":"2019-07-12T05:53:05","Actor":"Rolanddoda","Number":"1580","RawContent":null,"Title":"Duplicate getter key: 'something/something' : When register/unregister Vuex module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (`/` route)\r\n2. Click the `Contact` button to navigate to the contact component (`/contact` route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact  components (or pages) I use `store.registerModule` and `store.unregisterModule` to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nAn error is showing in the console that I have duplicate getter keys.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1580","RelatedDescription":"Closed issue \"Duplicate getter key: 'something/something' : When register/unregister Vuex module\" (#1580)"},{"Id":"466177457","IsPullRequest":false,"CreatedAt":"2019-07-10T08:38:57","Actor":"yoyoys","Number":"1579","RawContent":null,"Title":"[Feature Request] mapModule","State":"open","Body":"### What problem does this feature solve?\r\nThis made namespaced module can be use like simple vuex store.\r\n\r\n### What does the proposed API look like?\r\n`store/modules/myModule.ts`\r\n\r\n```ts\r\n\r\nexport const myModule = {\r\n  state: {\r\n    count: 0\r\n  },\r\n  mutations: {\r\n    add(state, payload) {\r\n      state.count = state.count   payload\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n`lib/someLib.ts`\r\n\r\n```ts\r\nimport store from '@/store'\r\n\r\n// the `myModule` is module path\r\nconst myModule = mapModule<IMyModule>(store, 'myModule')\r\n\r\nconsole.log(myModule.state.count) // 0\r\nmyModule.commit('add', 2)\r\nconsole.log(myModule.state.count) // 2\r\n\r\n// for reuse or singleton?\r\nexport myModule\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1579","RelatedDescription":"Open issue \"[Feature Request] mapModule\" (#1579)"},{"Id":"465584333","IsPullRequest":false,"CreatedAt":"2019-07-09T05:57:06","Actor":"tinyCucumber","Number":"1578","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/cucumbers/pen/bPQQeO](https://codepen.io/cucumbers/pen/bPQQeO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.\r\n\r\n### What is expected?\r\nIf the param cb  is useless, remove it.\r\n\r\n### What is actually happening?\r\nThe param cb for wrappedActionHandler is never used;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1578","RelatedDescription":"Open issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1578)"},{"Id":"465576393","IsPullRequest":false,"CreatedAt":"2019-07-09T05:28:32","Actor":"tinyCucumber","Number":"1577","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"closed","Body":"in the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.Can someone answer my doubts?\r\n\r\n**wrappedActionHandler**\r\n\r\n```javascript\r\nfunction registerAction (store, type, handler, local) {\r\n  const entry = store._actions[type] || (store._actions[type] = [])\r\n  entry.push(function wrappedActionHandler (payload, cb) {\r\n    let res = handler.call(store, {\r\n      dispatch: local.dispatch,\r\n      commit: local.commit,\r\n      getters: local.getters,\r\n      state: local.state,\r\n      rootGetters: store.getters,\r\n      rootState: store.state\r\n    }, payload, cb)\r\n    if (!isPromise(res)) {\r\n      res = Promise.resolve(res)\r\n    }\r\n    if (store._devtoolHook) {\r\n      return res.catch(err => {\r\n        store._devtoolHook.emit('vuex:error', err)\r\n        throw err\r\n      })\r\n    } else {\r\n      return res\r\n    }\r\n  })\r\n}\r\n```\r\n\r\n**dispatch**\r\n```javascript\r\n    const {\r\n      type,\r\n      payload\r\n    } = unifyObjectStyle(_type, _payload)\r\n\r\n    const action = { type, payload }\r\n    const entry = this._actions[type]\r\n    if (!entry) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(`[vuex] unknown action type: ${type}`)\r\n      }\r\n      return\r\n    }\r\n\r\n    try {\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    } catch (e) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`[vuex] error in before action subscribers: `)\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    const result = entry.length > 1\r\n      ? Promise.all(entry.map(handler => handler(payload)))\r\n      : entry[0](payload)\r\n\r\n    return result.then(res => {\r\n      try {\r\n        this._actionSubscribers\r\n          .filter(sub => sub.after)\r\n          .forEach(sub => sub.after(action, this.state))\r\n      } catch (e) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`[vuex] error in after action subscribers: `)\r\n          console.error(e)\r\n        }\r\n      }\r\n      return res\r\n    })\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1577","RelatedDescription":"Closed issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1577)"},{"Id":"465294713","IsPullRequest":true,"CreatedAt":"2019-07-08T15:53:27","Actor":"hejialianghe","Number":"1576","RawContent":null,"Title":"vuex-cart","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1576","RelatedDescription":"Closed or merged PR \"vuex-cart\" (#1576)"},{"Id":"465291851","IsPullRequest":true,"CreatedAt":"2019-07-08T14:32:06","Actor":"hejialianghe","Number":"1575","RawContent":null,"Title":"Create vuex-cart","State":"closed","Body":"1","Url":"https://github.com/vuejs/vuex/pull/1575","RelatedDescription":"Closed or merged PR \"Create vuex-cart\" (#1575)"},{"Id":"465227767","IsPullRequest":true,"CreatedAt":"2019-07-08T12:56:43","Actor":"boomler","Number":"1574","RawContent":null,"Title":"Refactor: extract a method for duplicate environment judgement","State":"closed","Body":"There are 17 times of environment judgement in `store.js`.  Extract it to  `util.js`","Url":"https://github.com/vuejs/vuex/pull/1574","RelatedDescription":"Closed or merged PR \"Refactor: extract a method for duplicate environment judgement\" (#1574)"},{"Id":"463514720","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:27","Actor":"hugoazevedosoares","Number":"1573","RawContent":null,"Title":"fix(#1571): remove undefined payload from store.dispatch","State":"open","Body":"Fixed the issue #1571\r\n\r\nRunned all tests and they were ok, except for tsc/types that didn't work on my computer, by that was before the change was made. Also, the change has no reason to break this kind of test.\r\n\r\nThe solution was proposed by @gitlab-winnie .","Url":"https://github.com/vuejs/vuex/pull/1573","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from store.dispatch\" (#1573)"},{"Id":"461385089","IsPullRequest":false,"CreatedAt":"2019-06-27T08:18:24","Actor":"StijnVandermeulen1","Number":"1572","RawContent":null,"Title":"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.","State":"open","Body":"### What problem does this feature solve?\r\nIf you subscribe to an action an return a promise or use an await statement, the code does not wait for the request to be complete. This is a problem when you implement a component as a plugin. Communication between components can be handled by the subscribeAction. But retrieving data and pushing it into the state using the afore mentioned methods will not result in any data since the service does not wait for it to be completed.\r\n\r\nThis feature would be very usefull for components as plugins that can be fully compartmentalized and plugged into different applications. Configuration retrieval can then be defined in the subscribeAction allowing different implementations over multiple applications.\r\n\r\n### What does the proposed API look like?\r\nExample for before action:\r\n\r\nCurrent code in src/store.js line 132:\r\n\r\n   try {\r\n\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    }\r\n\r\nShould be:\r\n\r\n  try {\r\n\r\n          async function asyncForEach(array, callback) {\r\n             for (let index = 0; index < array.length; index  ) {\r\n                await callback(array[index], index, array);\r\n           }\r\n         }\r\n\r\n         await asyncForEach(this._actionSubscribers\r\n           .filter(function (sub) { return sub.before; }), async function (sub) {\r\n                return await sub.before(action, this$1.state); \r\n           });\r\n        }\r\n\r\ndispatch function should be async as wel.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1572","RelatedDescription":"Open issue \"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.\" (#1572)"},{"Id":"460917840","IsPullRequest":false,"CreatedAt":"2019-06-26T11:34:51","Actor":"markrian","Number":"1571","RawContent":null,"Title":"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/markrian/pen/vqeGZZ?editors=0010](https://codepen.io/markrian/pen/vqeGZZ?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codepen.io/markrian/pen/vqeGZZ?editors=0010\r\n1. Open the browser's console\r\n1. Observe the differing logged arguments passed to `store.dispatch` depending on whether it's a root-mapped action or a namespace-mapped action (`[ \"foo\" ]` and `[ \"childModule/foo\", undefined ]` respectively - note the extra `undefined` argument in the second case; the different action name is of course expected)\r\n\r\nNote that this only really applies in a testing scenario, where the test spies on `store.dispatch` to ensure the component dispatches the expected actions.\r\n\r\n### What is expected?\r\n`store.dispatch` receives exactly the same arguments regardless of whether the actions are namespace-mapped or not.\r\n\r\n### What is actually happening?\r\n`store.dispatch` receives a payload argument of `undefined` for namespace-mapped actions.\r\n\r\n---\r\nI encountered this when refactoring a store into a namespaced module, and found that my expectations needed to change: that `store.dispatch` received an extra `undefined` argument.\r\n\r\nI'm not sure if this should be considered a bug in Vuex, or in my testing approach of spying on `store.dispatch` :man_shrugging: \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1571","RelatedDescription":"Open issue \"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`\" (#1571)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-08T05:30:51.4417174Z","RunDurationInMilliseconds":2286}