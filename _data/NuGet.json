{"Data":{"Blog":{"FeedItems":[{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10349684602","Type":"PullRequestEvent","CreatedAt":"2019-09-04T23:29:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7504","RelatedDescription":"Opened pull request \"[SDL] Use HttpClient instead of HttpWebRequest\" (#7504) at NuGet/NuGetGallery","RelatedBody":"Functional test run: ⚠️ \r\n\r\nPart of https://github.com/nuget/engineering/issues/2686"},{"Id":"10349406097","Type":"IssuesEvent","CreatedAt":"2019-09-04T22:23:41","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7485","RelatedDescription":"Closed issue \"Investigate package download performance in Australia\" (#7485) at NuGet/NuGetGallery","RelatedBody":"We got feedback that package download from Australia is slow:\r\nhttps://twitter.com/thenickrandolph/status/1165034353589534722\r\n\r\nWe should setup CatchPoint test to see if there's a widespread issue or this is localized to the customer's network.\r\n\r\nRelated VS feedback item to be updated: https://developercommunity.visualstudio.com/content/problem/711230/cant-build-new-uwp-project.html"},{"Id":"10348998240","Type":"IssuesEvent","CreatedAt":"2019-09-04T21:11:07","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7503","RelatedDescription":"Opened issue \"[Azure Search] Consider adding a circuit breaker\" (#7503) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nIf the Azure Search resource is overloaded, it will return HTTP 503 response codes (see [this documentation](https://docs.microsoft.com/en-us/rest/api/searchservice/http-status-codes)). Our Azure Search service automatically retries on these status codes. In periods of high load, this may cause search requests to take several seconds.\r\n\r\n### Describe the solution you'd like\r\nConsider using the circuit breaker pattern in the Azure Search service: if the underlying Azure Search resource returns too many HTTP 503 responses, the service should fail requests before communicating with the underlying Azure Search resource. \r\n\r\nWith the circuit breaker pattern in the search service itself, both the Gallery and NuGet clients should failover to the next region's Azure search service.\r\n\r\n### Additional context\r\nThis issue was opened after Application Insights Availability tests reported issues on DEV and INT:\r\n\r\n* https://icm.ad.msft.net/imp/v3/incidents/details/145194593/home\r\n* https://icm.ad.msft.net/imp/v3/incidents/details/145193535/home\r\n* https://icm.ad.msft.net/imp/v3/incidents/details/145194845/home"},{"Id":"10347638416","Type":"PullRequestEvent","CreatedAt":"2019-09-04T17:52:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7502","RelatedDescription":"Opened pull request \"Add token expiration of 14 days\" (#7502) at NuGet/NuGetGallery","RelatedBody":"Tokens are used for:\r\n - adding owners to packages\r\n - adding members to organizations\r\n - transforming users to organizations\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/2679\r\n\r\nWhen a token is older than 14 days, it will not longer work. This means that \"accept\" / \"reject\" links in email will stop working 14 days after they are sent. All of these action links have counterparts in the web UI. When the the request older than 14 days, the recipient of the request will see \"(request expired)\".\r\n\r\nThe action links (\"accept\" / \"reject\") are not visible when the request is expired. In other words, the recipient sees that the request is expired for informational purposes only. I spoke offline with @karann-msft and we agreed that we don't need to implement a \"dismiss\" (essentially a POST-based ) button for the recipient. If we hear significant feedback from users, then we can revisit this decision later and likely add a `PostLink` to a new \"dismiss\" or \"cancel\" endpoint that supports POST.\r\n\r\n## Existing state (no expiration concept)\r\n\r\nOperation | Sender can cancel? | Sender can cancel? | Recipient can cancel? | Recipient can cancel?\r\n-- | -- | -- | -- | --\r\n&nbsp; | **Before expiration** | **After Expiration** | **Before Expiration** | **After Expiration**\r\nAdd owner to package |  ✅ | ✅ | ✅ | ✅\r\nAdd member to organization |  ✅ | ✅ | ✅ | ✅\r\nTransform organization |  ❌ | ❌ | ✅ | ✅\r\n\r\nNote that the recipient of the \"Transform organization\" operation is the user that was specified as the admin of the new organization. There is currently no way for the sender of a \"transform organization\" operation to cancel.\r\n\r\n## After this PR\r\n\r\nOperation | Sender can cancel? | Sender can cancel? | Recipient cancel? | Recipient cancel?\r\n-- | -- | -- | -- | --\r\n&nbsp; | **Before expiration** | **After Expiration** | **Before Expiration** | **After Expiration**\r\nAdd owner to package |  ✅ | ✅ | ✅ | ❌\r\nAdd member to organization |  ✅ | ✅ | ✅ | ❌\r\nTransform organization |  ❌ | ❌ | ✅ | ❌\r\n\r\n## Screenshots\r\n\r\n## Sender: expired package ownership request\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64276448-d6a92300-cefc-11e9-9803-60af073ec316.png)\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64276366-a497c100-cefc-11e9-9bfb-166dae5b2f7b.png)\r\n\r\n## Recipient: expired package ownership request\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64276422-ca24ca80-cefc-11e9-873c-a34cbf9474aa.png)\r\n\r\n## Sender: expired organization membership request\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64276263-5b477180-cefc-11e9-891d-c8a6c1a0c38a.png)\r\n\r\n## Recipient: expired organization membership request\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64276220-3f43d000-cefc-11e9-9b1d-9a74c638c977.png)\r\n\r\n## Recipient: expired transform organization\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64276119-ff7ce880-cefb-11e9-8352-1dea07508556.png)\r\n"},{"Id":"10347605837","Type":"IssuesEvent","CreatedAt":"2019-09-04T17:48:10","Actor":"xavierdecoster","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7442","RelatedDescription":"Closed issue \"[Queue-Back] Enable queue back on symbol validator jobs with feature flag\" (#7442) at NuGet/NuGetGallery","RelatedBody":"- [x] Symbol validator (https://github.com/NuGet/NuGet.Jobs/pull/797)\r\n- [x] Symbol ingester"},{"Id":"10340238878","Type":"PullRequestEvent","CreatedAt":"2019-09-03T21:22:54","Actor":"robertmuehsig","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7501","RelatedDescription":"Opened pull request \"Fix #6622 via CSS (multiline on verify page)\" (#7501) at NuGet/NuGetGallery","RelatedBody":"As suggested in the issue, this should solve the bug. Not sure if I found the correct location for this less changes. \r\n\r\nSummary of the changes (in less than 80 characters):\r\n\r\n* Added a new less rule to display multiline in a correct way\r\n* The CSS is should only affect the verify package site.\r\n* Didn't found any other CSS/LESS stuff, so I used the \"common-edit-metadata.less\" file. \r\n\r\nWorks in more or less all modern browsers :)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/6622"},{"Id":"10338391676","Type":"IssuesEvent","CreatedAt":"2019-09-03T16:48:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7494","RelatedDescription":"Closed issue \"Duplicates when paging through search results since new search went live\" (#7494) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI have a console application that uses the NuGet.Protocol.Core.v3 version 4.3.0-beta1-2418 nuget package to search nuget for packages with a certain keyword. My app retrieves 10 results at a time and loops through pages until no result are returned. This has always worked very well until a few days ago. What I am seeing since the new search went live is that intermittently a package will be included on a certain page and again on the following page.\r\n\r\n### To Reproduce\r\nHere is an excerpt of my C# code that can be copied and pasted into a console app to reproduce the behavior:\r\n```\r\nvar take = 10;\r\nvar skip = 0;\r\nvar searchTerm = \"Cake\";\r\nvar filters = new SearchFilter(true)\r\n{\r\n    IncludeDelisted = false\r\n};\r\nvar discoveredPackages = new List<IPackageSearchMetadata>(take);\r\nvar nugetSearchClient = nugetRepository.GetResource<PackageSearchResource>();\r\n\r\nwhile (true)\r\n{\r\n    var searchResult = await nugetSearchClient.SearchAsync(searchTerm, filters, skip, take, NullLogger.Instance, CancellationToken.None).ConfigureAwait(false);\r\n    skip += take;\r\n\r\n    if (!searchResult.Any()) break;\r\n\r\n    // I added the following code to help me investigate this problem\r\n    // An exception will be thrown if a package is returned in the search\r\n    // result and has been discovered previously\r\n    var duplicates = searchResult.Select(r => r.Identity).Intersect(discoveredPackages.Select(p => p.Identity));\r\n    if (duplicates.Any())\r\n    {\r\n        var dupes = string.Join(\", \", duplicates.Select(i => i.ToString()));\r\n        throw new Exception($\"The following package were already returned by the search API: {dupes}\");\r\n    }\r\n\r\n    discoveredPackages.AddRange(searchResult);\r\n}\r\n```\r\n\r\n### Expected behavior\r\nI expect packages to be returned only once and not to be duplicated on multiple pages of the search result.\r\n\r\n### Side note\r\nIs there a way when I search programatically to specified my desired sorting and completely avoid the new \"relevance\" sorting? For example, in my case a simple alphabetical sort would be perfectly fine."},{"Id":"10338315093","Type":"IssuesEvent","CreatedAt":"2019-09-03T16:37:51","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7487","RelatedDescription":"Closed issue \"NuGet continual prompt for credentials due to resource blocked on V3\" (#7487) at NuGet/NuGetGallery","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\n\r\nNuGet version (x.x.x.xxx): 5.2.0\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100-preview-010184\r\n\r\nVS version (if appropriate): 16.2.3\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win10 17134.984\r\n\r\nWorked before? If so, with which NuGet version: worked just yesterday now doesn't\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. right click on project -> nuget package manager\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\nApi source: https://api.nuget.org/v3/index.json\r\n\r\nWhen looking at the metadata pulled from api.nuget.org that visual studio uses only one site is being flag as malware/security risk: https://azuresearch-usnc.nuget.org/query.  What is the vetting process for the meta that is added or verifying that all site are in good standing for enterprise use?  This just started prompting for credentials today was working for the past few months.\r\n\r\n"},{"Id":"10329363677","Type":"IssuesEvent","CreatedAt":"2019-09-02T12:00:50","Actor":"rianjs","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7500","RelatedDescription":"Opened issue \"Stats have been broken for 72 hours\" (#7500) at NuGet/NuGetGallery","RelatedBody":"In the ongoing saga of broken stars, we’re now in a spot where package download counts haven’t updated since Saturday. "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10349975606","Type":"IssuesEvent","CreatedAt":"2019-09-05T00:45:32","Actor":"ilatypov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8551","RelatedDescription":"Opened issue \"nuget.exe ignores packageSourceCredentials in nuget.config when downloading a package\" (#8551) at NuGet/Home","RelatedBody":"Our poorly coded pipeline uploaded public xunit packages to a local (password-protected) jFrog artifactory.  Attempts to download them using nuget.exe's packageSourceCredentials with a clear-text (encrypted) jFrog user name and password failed showing 403 Forbidden messages.  Proxying the traffic through BURP showed that nuget.exe ignored the credentials supplied in nuget.config.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): `nuget.exe`\r\n\r\nNuGet version (x.x.x.xxx): `4.9.4.5839 and 5.2.0.6090`\r\n\r\nVS version (if appropriate): `2019 Enterprise with both the above Nuget.exe versions and 2017 (15.0) with Nuget 4.9.4`\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): \r\n```\r\n$ wmic os get Caption,CSDVersion /value\r\nCaption=Microsoft Windows Server 2008 R2 Enterprise\r\nCSDVersion=Service Pack 1\r\n```\r\n\r\nWorked before? If so, with which NuGet version: `it did a day ago but stopped (I installed a dotnet 4.7 devpack using choco in between)`.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Run CMD as an administrator (with High Mandatory Level).  Change to a top-level directory of the drive to work around nuget.exe's failure to handle long file names.  Set up a BURP proxy in Internet Options, install the BURP cert into the Certification Authorities store.\r\nCreate a `nuget.config`, delete other nuget.config's such as in %userprofile%\\appdata\\nuget\\nuget.config.\r\n```\r\n<configuration>\r\n   <packageSources>\r\n     <add key=\"example-nuget\" value=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\" />\r\n   </packageSources>\r\n   <disabledPackageSources>\r\n     <add key=\"nuget.org\" value=\"true\" />\r\n   </disabledPackageSources>\r\n   <packageSourceCredentials>\r\n     <example-nuget>\r\n       <add key=\"Username\" value=\"USER\" />\r\n       <add key=\"ClearTextPassword\" value=\"ENCRYPTEDPASS\" />\r\n     </example-nuget>\r\n   </packageSourceCredentials>\r\n   <config>\r\n     <add key=\"repositoryPath\" value=\"d:/packages\" />\r\n   </config>\r\n</configuration>\r\n```\r\n2. Set up a password-protected local repo in a jFrog artifactory, upload an external package such as xunit console runner 2.3.1 into it (to reproduce mistakes in pipelines).  Set up a virtual repo that includes both the local repo and the remote one (Microsoft gallery).  This results in artifactory allowing anonymous FindByPackageIds() calls but requiring authentication to download the above public package (xunit console runner).\r\n\r\n3. Have a Visual Studio \"classic\" solution with a dependent project containing the reference to the above package in its `packages.config`.\r\n```\r\n$ grep console DotNetClassic_Library.Tests/packages.config\r\n  <package id=\"xunit.runner.console\" version=\"2.3.1\" targetFramework=\"net472\" developmentDependency=\"true\" />\r\n```\r\n4. Run `nuget restore` with the created `nuget.config` and verbose diagnostics.\r\n```\r\nD:\\temp\\jgp_classic>nuget restore -configfile nuget.config -v d -DisableParallelProcessing -NonInteractive\r\nNuGet Version: 5.2.0.6090\r\nRestoring NuGet packages for solution D:\\temp\\jgp_classic\\DotNetClassic_Library.sln.\r\nMSBuild auto-detection: using msbuild version '16.0.461.62831' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nMSBuild P2P timeout [ms]: 120000\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\a-CIUSER\\AppData\\Local\\Temp\\NuGetScratch\\x450xxfy.v0w.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\a-CIUSER\\AppData\\Local\\Temp\\NuGetScratch\\wydlma2h.u5h.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:Restor\r\neTaskAssemblyFile=\"C:\\ProgramData\\chocolatey\\lib\\NuGet.CommandLine\\tools\\nuget.exe\" /p:RestoreSolutionDirectory=\"D:\\temp\\jgp_classic\\\\\" /p:RestoreConfigFile=\"nuget.config\" /p:SolutionDir=\"D:\\temp\\jgp_classic\\\\\" /p:SolutionName=\"DotNetClassic_Library\"\r\n\r\nRestoring NuGet package xunit.runner.console.2.3.1.\r\nMissing C:\\Users\\a-CIUSER\\.nuget\\packages\\xunit.runner.console\\2.3.1\\xunit.runner.console.2.3.1.nupkg\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1')\r\n  OK https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1') 158ms\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\nUsing C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\Plugins\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.exe as a credential provider plugin.\r\nUsing credentials from config. UserName: USER\r\n    [CredentialProvider.202447]Running in plug-in mode\r\n    [CredentialProvider.202447]Command-line v0.1.11: \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\C\r\nommonExtensions\\Microsoft\\NuGet\\Plugins\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.exe\" -Plugin\r\n    [CredentialProvider.202447]Handling 'Request' 'GetOperationClaims' - {}\r\n    [CredentialProvider.202447]Handling 'Request' 'SetLogLevel' - {\"LogLevel\":\"Debug\"}\r\n    [CredentialProvider]Handling 'Request' 'SetCredentials' - {\"PackageSourceRepository\":\"/artifactory/api/nuget/example-nuget\"}\r\n    [CredentialProvider.202447]Handling 'Request' 'Initialize' - {\"ClientVersion\":\"5.2.0\",\"Culture\":\"en-US\",\"RequestTimeout\":\"00:0\r\n0:05\"}\r\n    [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials' - {\"Uri\":\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\",\"IsRetry\":false,\"IsNonInteractive\":true,\"CanShowDialog\":true}\r\n    [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n    [CredentialProvider]Handling auth request, Uri: https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget,\r\nIsRetry: False, IsNonInteractive: True, CanShowDialog: True\r\n    [CredentialProvider]URI: https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider, cannot provide credentials for https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]VstsBuildTaskCredentialProvider - This credential provider must be run under the Team Build tasks for NuGet. Appropriate environment variables must be set.\r\n    [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - This credential provider must be run under the Team Build\r\n tasks for NuGet with external endpoint credentials. Appropriate environment variable needs to be set.\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTask.VstsBuildTaskCredentialProvider, cannot\r\n provide credentials for https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.Vsts.VstsCredentialProvider, cannot provide credentials for https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\nWARNING: The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for\r\n`NuGet`\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 2810ms\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 182ms\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 177ms\r\n\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\packages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\packages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\n\r\nErrors in packages.config projects\r\n    Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n      C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\packages\\'.\r\n      https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1'\r\n from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n      Response status code does not indicate success: 403 (Forbidden).\r\n\r\nNuGet Config files used:\r\n    D:\\temp\\jgp_classic\\nuget.config\r\n\r\nFeeds used:\r\n    C:\\Users\\a-CIUSER\\.nuget\\packages\\\r\n    https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n```\r\n5. Observe passwordless requests and responses in BURP.\r\n```\r\nGET /artifactory/api/nuget/example-nuget HTTP/1.1\r\nX-NuGet-Session-Id: a2887b9a-63b7-44b2-b22a-bb567837bec6\r\nuser-agent: NuGet Command Line/5.2.0 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 5.2.0\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 200 OK\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: 5b8f5b39d030c37a5292a71d537d8b510050617f\r\nX-Artifactory-Node-Id: Artifactory1\r\nDataServiceVersion: 1.0\r\nContent-Type: application/xml;charset=utf-8\r\nDate: Thu, 05 Sep 2019 00:25:00 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 577\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\n  ~\r\n  ~ Copyright 2016 JFrog Ltd. All rights reserved.\r\n  ~ JFROG PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\r\n  -->\r\n\r\n<service xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:app=\"http://www.w3.org/2007/app\" xml:base=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\">\r\n    <workspace>\r\n        <atom:title>Default</atom:title>\r\n        <collection href=\"Packages\">\r\n            <atom:title>Packages</atom:title>\r\n        </collection>\r\n    </workspace>\r\n</service>\r\n\r\nGET /artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1') HTTP/1.1\r\nAccept: application/atom+xml, application/xml\r\nX-NuGet-Session-Id: 056977a0-ec9f-4cdc-8506-f4e32fe3c089\r\nuser-agent: NuGet Command Line/5.2.0 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 5.2.0\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 200 OK\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: 5b8f5b39d030c37a5292a71d537d8b510050617f\r\nX-Artifactory-Node-Id: Artifactory1\r\nDataServiceVersion: 2.0\r\nContent-Type: application/atom+xml;charset=utf-8\r\nDate: Thu, 05 Sep 2019 00:25:00 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 3279\r\n\r\n<?xml version='1.0' encoding='UTF-8'?>\r\n<entry xmlns=\"http://www.w3.org/2005/Atom\" xmlns:d=\"http://schemas.microsoft.com/ado/2007/08/dataservices\" xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" xml:base=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/nuget-local/\">\r\n  <id>https://artifactory.COMPANY.TLD/artifactory/api/nuget/nuget-local/Packages(Id='xunit.runner.console',Version='2.3.1')</id>\r\n  <lowerCaseId>https://artifactory.COMPANY.TLD/artifactory/api/nuget/nuget-local/packages(id='xunit.runner.console',version='2.3.1')</lowerCaseId>\r\n  <title type=\"text\">xunit.runner.console</title>\r\n  <summary type=\"text\">Console runner for the xUnit.net framework. Capable of running xUnit.net v1.9.2 and v2.0+ tests. Supports .NET 4.5.2 or later, .NET Core 1.x, and .NET Core 2.x.</summary>\r\n  <updated>2018-10-29T15:28:21Z</updated>\r\n  <author>\r\n    <name>James Newkirk,Brad Wilson</name>\r\n  </author>\r\n  <link rel=\"edit\" title=\"V2FeedPackage\" href=\"Packages(Id='xunit.runner.console',Version='2.3.1')\"/>\r\n  <link rel=\"self\" title=\"V2FeedPackage\" href=\"Packages(Id='xunit.runner.console',Version='2.3.1')\"/>\r\n  <category term=\"NuGetGallery.OData.V2FeedPackage\" scheme=\"http://schemas.microsoft.com/ado/2007/08/dataservices/scheme\"/>\r\n  <content type=\"application/zip\" src=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\"/>\r\n  <m:properties xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" xmlns:d=\"http://schemas.microsoft.com/ado/2007/08/dataservices\">\r\n    <d:lastUpdated>2018-10-29T15:28:21</d:lastUpdated>\r\n    <d:Version>2.3.1</d:Version>\r\n    <d:Created m:type=\"Edm.DateTime\">2018-10-29T15:28:21</d:Created>\r\n    <d:Dependencies></d:Dependencies>\r\n    <d:Description>Console runner for the xUnit.net framework. Capable of running xUnit.net v1.9.2 and v2.0+ tests. Supports .NET 4.5.2 or later, .NET Core 1.x, and .NET Core 2.x.</d:Description>\r\n    <d:DownloadCount m:type=\"Edm.Int32\">2</d:DownloadCount>\r\n    <d:IconUrl>https://raw.githubusercontent.com/xunit/media/master/logo-512-transparent.png</d:IconUrl>\r\n    <d:IsLatestVersion m:type=\"Edm.Boolean\">true</d:IsLatestVersion>\r\n    <d:IsAbsoluteLatestVersion m:type=\"Edm.Boolean\">true</d:IsAbsoluteLatestVersion>\r\n    <d:IsPrerelease m:type=\"Edm.Boolean\">false</d:IsPrerelease>\r\n    <d:Language m:null=\"true\"/>\r\n    <d:Published m:type=\"Edm.DateTime\">2018-10-29T15:28:21</d:Published>\r\n    <d:LicenseUrl>https://raw.githubusercontent.com/xunit/xunit/master/license.txt</d:LicenseUrl>\r\n    <d:PackageHash>nyiBNOCMzszb9eohU1u922RGKY4ZapXUv7niuGMY/8dbH1RSByf4L439txSu4MSo/zdZH+vj7h8zQozQ+7GzWg==</d:PackageHash>\r\n    <d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm>\r\n    <d:PackageSize m:type=\"Edm.Int64\">735916</d:PackageSize>\r\n    <d:ProjectUrl>https://github.com/xunit/xunit</d:ProjectUrl>\r\n    <d:RequireLicenseAcceptance m:type=\"Edm.Boolean\">false</d:RequireLicenseAcceptance>\r\n    <d:Title>xUnit.net [Runner: Console]</d:Title>\r\n    <d:VersionDownloadCount m:type=\"Edm.Int32\">2</d:VersionDownloadCount>\r\n    <d:Authors>James Newkirk,Brad Wilson</d:Authors>\r\n    <d:MinClientVersion m:null=\"true\"/>\r\n    <d:Summary>Console runner for the xUnit.net framework.</d:Summary>\r\n  </m:properties>\r\n</entry>\r\n\r\nGET /artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 HTTP/1.1\r\nX-NuGet-Session-Id: af946c0b-07d8-4d2d-a0e2-184682b6aa9c\r\nuser-agent: NuGet Command Line/5.2.0 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 5.2.0\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 403 Forbidden\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: fd91a10aaf5e92305bba3b37f8ecc7aa3dcb8dcf\r\nX-Artifactory-Node-Id: art3\r\nContent-Type: application/json\r\nDate: Thu, 05 Sep 2019 00:25:00 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 185\r\n\r\n{\r\n  \"errors\" : [ {\r\n    \"status\" : 403,\r\n    \"message\" : \"Download request for repo:path 'example-nuget-local:xunit.runner.console.2.3.1.nupkg' is forbidden for user 'anonymous'.\"\r\n  } ]\r\n}\r\n\r\n\r\n6. Similarly, the older nuget.exe v. 4.9.4 shows 403 Forbidden.\r\n```\r\nD:\\temp\\jgp_classic>d:\\util\\nuget restore -configfile nuget.config -v d -DisableParallelProcessing -NonInteractive\r\nNuGet Version: 4.9.4.5839\r\nRestoring NuGet packages for solution D:\\temp\\jgp_classic\\DotNetClassic_Library.sln.\r\nMSBuild auto-detection: using msbuild version '16.0.461.62831' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterpris\r\ne\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nMSBuild P2P timeout [ms]: 120000\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\a-CIUSER\\AppData\\Local\\T\r\nemp\\NuGetScratch\\ihwnphjw.jtt.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\U\r\nsers\\a-CIUSER\\AppData\\Local\\Temp\\NuGetScratch\\icpnoxqu.mwn.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:Restor\r\neTaskAssemblyFile=\"d:\\util\\nuget.exe\" /p:RestoreSolutionDirectory=\"D:\\temp\\jgp_classic\\\\\" /p:RestoreConfigFile=\"nuget.config\" /p:S\r\nolutionDir=\"D:\\temp\\jgp_classic\\\\\" /p:SolutionName=\"DotNetClassic_Library\"\r\n\r\nRestoring NuGet package xunit.runner.console.2.3.1.\r\nMissing C:\\Users\\a-CIUSER\\.nuget\\packages\\xunit.runner.console\\2.3.1\\xunit.runner.console.2.3.1.nupkg\r\n  CACHE https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1')\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\nUsing credentials from config. UserName: USER\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 919ms\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 475ms\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 313ms\r\n\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\pack\r\nages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' fro\r\nm 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\pack\r\nages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' fro\r\nm 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\n\r\nErrors in packages.config projects\r\n    Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n      C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\\r\npackages\\'.\r\n      https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1'\r\n from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n      Response status code does not indicate success: 403 (Forbidden).\r\n\r\nNuGet Config files used:\r\n    D:\\temp\\jgp_classic\\nuget.config\r\n\r\nFeeds used:\r\n    C:\\Users\\a-CIUSER\\.nuget\\packages\\\r\n    https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n```\r\n\r\n7. A BURP trace of the 4.9.4 client follows.\r\n```\r\nGET /artifactory/api/nuget/example-nuget HTTP/1.1\r\nX-NuGet-Session-Id: 98d52ea7-b203-46a4-bd5b-fc1c0a2b3d7b\r\nuser-agent: NuGet Command Line/4.9.4 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 4.9.4\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 200 OK\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: fd91a10aaf5e92305bba3b37f8ecc7aa3dcb8dcf\r\nX-Artifactory-Node-Id: art3\r\nDataServiceVersion: 1.0\r\nContent-Type: application/xml;charset=utf-8\r\nDate: Thu, 05 Sep 2019 00:36:58 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 577\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\n  ~\r\n  ~ Copyright 2016 JFrog Ltd. All rights reserved.\r\n  ~ JFROG PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\r\n  -->\r\n\r\n<service xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:app=\"http://www.w3.org/2007/app\" xml:base=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\">\r\n    <workspace>\r\n        <atom:title>Default</atom:title>\r\n        <collection href=\"Packages\">\r\n            <atom:title>Packages</atom:title>\r\n        </collection>\r\n    </workspace>\r\n</service>\r\n\r\nGET /artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 HTTP/1.1\r\nX-NuGet-Session-Id: 67175435-7ae7-4b91-b0f9-62d0ecef1370\r\nuser-agent: NuGet Command Line/4.9.4 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 4.9.4\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 403 Forbidden\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: fd91a10aaf5e92305bba3b37f8ecc7aa3dcb8dcf\r\nX-Artifactory-Node-Id: art3\r\nContent-Type: application/json\r\nDate: Thu, 05 Sep 2019 00:36:58 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 185\r\n\r\n{\r\n  \"errors\" : [ {\r\n    \"status\" : 403,\r\n    \"message\" : \"Download request for repo:path 'example-nuget-local:xunit.runner.console.2.3.1.nupkg' is forbidden for user 'anonymous'.\"\r\n  } ]\r\n}\r\n```\r\n\r\n```"},{"Id":"10349899339","Type":"IssuesEvent","CreatedAt":"2019-09-05T00:24:34","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8168","RelatedDescription":"Closed issue \"Quote \" characters in PATH cause \"Illegal characters in path\" failure in `nuget restore`\" (#8168) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n**NuGet product used:** nuget.exe installed from Chocolatey\r\n\r\n**NuGet version:** `NuGet Version: 5.0.2.5988`\r\n\r\n**OS version:** Windows 10 ver. 1903 [Version 10.0.18362.116]\r\n\r\n**Visual Studio version:** 2019 Enterprise ver. 16.1.1\r\n\r\n**Worked before? If so, with which NuGet version:** Yes, with nuget.exe 4.1.0.2450\r\n- More precisely, I believe this regression was caused by the fix for https://github.com/NuGet/Home/issues/7621 (PR https://github.com/NuGet/NuGet.Client/pull/2687 ; commit https://github.com/NuGet/NuGet.Client/commit/21f2b07f2c2e84afd6602c6743d356dae8880c0c )\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Open a cmd.exe command prompt\r\n1. Reset your PATH environment variable using this exact command:\r\n  `path C:\\Windows\\System32;C:\\Windows;C:\\ProgramData\\chocolatey\\lib\\NuGet.CommandLine\\tools;\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\"`\r\n  (if you have a different version or edition of VS, and/or have installed NuGet to another location, you can change appropriately)\r\n1. `cd` to a directory containing a .sln VS solution file\r\n1. Run `msbuild -version`\r\n1. Run `nuget restore`\r\n\r\n**Expected results:** Both the MSBuild and NuGet commands run to completion\r\n**Actual results:** MSBuild successfully prints out its version, but NuGet fails with this message in red: `Illegal characters in path.`\r\n\r\n### Verbose Logs\r\n\r\n```\r\n[nuget restore -verbosity detailed]\r\nNuGet Version: 5.0.2.5988\r\nRestoring NuGet packages for solution D:\\GitHub\\metathinker\\console\\OpenConsole.sln.\r\nIllegal characters in path.\r\nSystem.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at NuGet.CommandLine.MsBuildUtility.GetMSBuild()\r\n   at NuGet.CommandLine.MsBuildUtility.GetMsBuildToolset(String userVersion, IConsole console)\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at NuGet.CommandLine.RestoreCommand.ProcessSolutionFile(String solutionFileFullPath, PackageRestoreInputs restoreInputs)\r\n   at NuGet.CommandLine.RestoreCommand.<DetermineRestoreInputsAsync>d__46.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__36.MoveNext()\r\n```"},{"Id":"10349144306","Type":"IssuesEvent","CreatedAt":"2019-09-04T21:34:46","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8547","RelatedDescription":"Closed issue \"Bless 5.2.0 NuGet.exe and publish 5.3.0-preview3 NuGet.exe and preview packages\" (#8547) at NuGet/Home","RelatedBody":" The checklist is as following:\r\n- [x]  Change the link https://dist.nuget.org/win-x86-commandline/latest/nuget.exe to point to 5.2\r\n- [x]  Publish https://dist.nuget.org/win-x86-commandline/v5.3.0-preview3/nuget.exe\r\n- [x]  Merge PR : https://github.com/NuGet/NuGet.Services.Index/pull/147\r\n- [x]  Push NuGet.* 5.3.0-preview3 packages to nuget.org  https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=426399\r\n- [x] Push NuGet.Commandline 5.2.0 package to nuget.org https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=383159"},{"Id":"10348696853","Type":"IssuesEvent","CreatedAt":"2019-09-04T20:26:15","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8527","RelatedDescription":"Closed issue \"[PerfWatson] UIDelay: nuget.packagemanagement.visualstudio.dll!NuGet.PackageManagement.VisualStudio.VSSolutionManager+<EnsureInitializeAsync>d__.MoveNext|nuget.packagemanagement.visualstudio.dll\" (#8527) at NuGet/Home","RelatedBody":"From internal bug 959478"},{"Id":"10348003145","Type":"IssuesEvent","CreatedAt":"2019-09-04T18:44:13","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8550","RelatedDescription":"Opened issue \"NuGet.exe 4.9.x / 5.1.x Pack doesn't increment version from AssemblyInfo\" (#8550) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWhen incrementing the Assembly Number on a C# Class Library, packing with NuGet.exe 5.4 correctly generates a .nupkg with the new version number. \r\n\r\nHowever, using older versions of nuget.exe (specifically, 5.1.0 and 4.9.4), the `Pack` command generated package version 1.0.0.\r\n\r\nDiscovered this while trying to repro https://github.com/NuGet/Home/issues/8497\r\n\r\nNuGet product used: NuGet.exe\r\nNuGet Version: 5.1.0.6013\r\n\r\nVS version (if appropriate): 16.3.0-pre.3.0+29229.4.d16.3 and 15.9.15+28307.812.\r\nWorked before?: Works on newer NuGet Version: 5.4.0.30492\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create new C# class library, .NET framework 4.6.2\r\n\r\n2. Build the library and pack it.\r\n\r\n3. Upgrade the library to a newer version, e.g. 1.0.1\r\n\r\n4. Build the library.\r\n\r\n5. Pack the library\r\na. using NuGet Version 5.4.x.\r\nb. using NuGet Version 5.1.x or 4.9.x.\r\n\r\n## Expected result\r\nWith 5a, you should now have a package with the new assembly version (eg, 1.0.1).\r\n\r\n## Actual result\r\nWith 5b, the package is still 1.0.0 and does not honor the Assembly Info changes.\r\n\r\n## Sample project\r\n[Repro8497.zip](https://github.com/NuGet/Home/files/3575969/Repro8497.zip)\r\n"},{"Id":"10347830874","Type":"IssuesEvent","CreatedAt":"2019-09-04T18:19:37","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7531","RelatedDescription":"Closed issue \"nuget spec should remove licenseUrl and favor the new license property instead\" (#7531) at NuGet/Home","RelatedBody":"We are [deprecating licenseUrl](https://github.com/NuGet/Home/issues/4628)  and several getting started docs like [Quickstart: Create and publish a package using Visual Studio (.NET Framework, Windows)](https://docs.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-visual-studio-net-framework#generate-the-initial-manifest) still have a `nuget spec` step that will lead new users down the wong path.\r\nnuget spec should be fixed to remove licenseUrl and add license."},{"Id":"10347323388","Type":"IssuesEvent","CreatedAt":"2019-09-04T17:07:20","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8504","RelatedDescription":"Closed issue \"PM UI - the details tab does not get loaded when on the browse tab\" (#8504) at NuGet/Home","RelatedBody":"1.Get the latest preview bits of Visual Studio. \r\n1. Open a project\r\n1. open the pm ui. \r\n1. go to the browse tab\r\n1. click on any selection\r\n1. notice that the details metadata does not get loaded. \r\n\r\nThe same doesn't happen on 16.2 latest, so it's a regression within this release. \r\n\r\n//cc @rrelyea "},{"Id":"10347320242","Type":"IssuesEvent","CreatedAt":"2019-09-04T17:06:52","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8539","RelatedDescription":"Closed issue \"I can't comment or edit my existing comment on #7309\" (#8539) at NuGet/Home","RelatedBody":"I'm trying to add a comment of \r\n>Instead of the Browse tab it would be great if it defaulted to a Recent tab that showed the 50 most recent packages installed, or a Most Used with the 50 packages I install the most.\r\n\r\nBut it's giving me\r\n![Screenshot_20190831-075133](https://user-images.githubusercontent.com/15381181/64063738-5ade6c00-cbc6-11e9-8ff0-958958303228.png)\r\n\r\nIf someone could incorporate that feedback into #7309 it would be appreciated."},{"Id":"10347318751","Type":"IssuesEvent","CreatedAt":"2019-09-04T17:06:38","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8509","RelatedDescription":"Closed issue \"AlternatePackage does not get cleared when the package selection changes\" (#8509) at NuGet/Home","RelatedBody":"1. Add NuGet.org INT as a source - https://apiint.nugettest.org/v3/index.json\r\n1. Search for TestPackage.Deprecation\r\n1. Observe the metadata for a package like TestPackageDeprecation.Legacy\r\n![image](https://user-images.githubusercontent.com/2878341/63815938-2d09d680-c8eb-11e9-92ac-9dec9e8e2e14.png)\r\n1. Select a package with .AlternatePackage in the name (that package has an alternate package specified. \r\n1. Observe that. Notice that the alternate package is listed\r\n![image](https://user-images.githubusercontent.com/2878341/63815993-5f1b3880-c8eb-11e9-98d5-05457fb85553.png)\r\n1. Now go back to the original package such as TestPackage.Deprecation.Legacy\r\n1. Observe that the AlternatePackage is still there. \r\n![image](https://user-images.githubusercontent.com/2878341/63816105-c76a1a00-c8eb-11e9-8561-e5c8c0dbea66.png)\r\n1. Note how the text changed, but not the alternate package."},{"Id":"10344993031","Type":"IssuesEvent","CreatedAt":"2019-09-04T12:33:59","Actor":"ascjacob","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8549","RelatedDescription":"Opened issue \"ContentFiles with flatten true not flattened\" (#8549) at NuGet/Home","RelatedBody":"NuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\nNuGet version (x.x.x.xxx): not sure what version visual studio is using\r\nVS version (if appropriate): 16.2.3\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1803 (17134.885)\r\n\r\nI created a nuget package through nuspec that target mulitple version of the .net framework, with some content files (xsd & xml). Following nuspec describe my package (I've anonymized the content)\r\n```\r\n<package>\r\n  <metadata>\r\n    <id>MyPackage</id>\r\n    <version>1.0.0</version>\r\n    <authors>Me</authors>\r\n    <description>Some description</description>\r\n    <copyright>Myself</copyright>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <releaseNotes>Not important</releaseNotes>\r\n    <contentFiles>\r\n      <files include=\"**/*.xml\" buildAction=\"none\" copyToOutput=\"true\" flatten=\"true\" />\r\n      <files include=\"**/*.xsd\" buildAction=\"none\" copyToOutput=\"true\" flatten=\"true\" />\r\n    </contentFiles>\r\n  </metadata>\r\n  <files>\r\n    <!-- NET 3.5 -->\r\n    <file src=\"bin\\Release\\net35\\System.Threading.dll\" target=\"lib\\net35\" /> <!-- specific 3.5 -->\r\n    <file src=\"bin\\Release\\net35\\MyDll.dll\" target=\"lib\\net35\" />\r\n    <file src=\"bin\\Release\\net35\\MyDll.xml\" target=\"contentFiles\\any\\net35\\_xml\" />\r\n    <file src=\"bin\\Release\\net35\\MyDll.xsd\" target=\"contentFiles\\any\\net35\\_xsd\" />\r\n    \r\n    <!-- NET 4.7.2 -->\r\n    <file src=\"bin\\Release\\net472\\MyDll.dll\" target=\"lib\\net472\" />\r\n    <file src=\"bin\\Release\\net472\\MyDll.xml\" target=\"contentFiles\\any\\net472\\_xml\" />\r\n    <file src=\"bin\\Release\\net472\\MyDll.xsd\" target=\"contentFiles\\any\\net472\\_xsd\" />\r\n    \r\n    <!-- NET STANDARD 2.0 -->\r\n    <file src=\"bin\\Release\\netstandard2.0\\MyDll.dll\" target=\"lib\\netstandard2.0\" />\r\n    <file src=\"bin\\Release\\netstandard2.0\\MyDll.xml\" target=\"contentFiles\\any\\netstandard2.0\\_xml\" />\r\n    <file src=\"bin\\Release\\netstandard2.0\\MyDll.xsd\" target=\"contentFiles\\any\\netstandard2.0\\_xsd\" />\r\n    \r\n    <!-- CONTENT FOR PACKAGE.CONFIG -->\r\n    <file src=\"*.xml\" target=\"content\\_xml\" />\r\n    <file src=\"*.xsd\" target=\"content\\_xsd\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nMy goal is to make thing easier to read in Visual Studio, developers complains about multiple files arriving at the root directory and want to display it in another folder\r\n\r\nWhen I add the package to my visual studio project (Myproject bellow) , the display in VS is correct. I have the 2 *_xml* and *_xsd* folder with their own content.\r\n\r\n![image](https://user-images.githubusercontent.com/54893496/64253270-331c3a80-cf1d-11e9-8bff-d8d8bf74a13a.png)\r\n\r\nBut when I build, instead of having my whole files to the root output, they are in the folder *_xml* & *_xsd*\r\n![vs](https://user-images.githubusercontent.com/54893496/64253537-cb1a2400-cf1d-11e9-85e9-a01526b923ea.PNG)\r\n\r\nI've made a lot of test : changing the contentFile include to remove subdirectories, declare sub directories, ... but nothing is working\r\n\r\nSo I tried to use flatten to false, to check the behavior behind, and in the obj folder, in the *project.assets.json* file I notice this difference, so as expected I guess (left is *flatten=\"true\"*, right is *flatten=\"false\"* :\r\n![diff](https://user-images.githubusercontent.com/54893496/64254009-c86bfe80-cf1e-11e9-9702-aa4222fe9d85.PNG)\r\n\r\nSame for *Myproject.csproj.nuget.g.props*\r\n![image](https://user-images.githubusercontent.com/54893496/64255015-cc991b80-cf20-11e9-88a0-3ec318f6e653.png)\r\n\r\nBut in *Debug\\Myproject.csproj.FileListAbsolute.txt* is containing same result : full path to files with the *_xsd* & *_xml* directories\r\n\r\nI think there is something not working correctly here, that's why I'm creating this issue.\r\n\r\nBest\r\n\r\nAlex"},{"Id":"10344911817","Type":"IssuesEvent","CreatedAt":"2019-09-04T12:23:16","Actor":"HappyRon","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8548","RelatedDescription":"Opened issue \"cannot install xamarin.googleplayservice\" (#8548) at NuGet/Home","RelatedBody":"I tried to install Xamarin.GooglePlayServices.Base. \r\nBut these error appears.\r\n\r\nError\t\tPackage restore failed. Rolling back package changes for 'PushNotification'.\t\t\t\t\r\nError\tNU1202\tPackage Xamarin.GooglePlayServices.Base 71.1610.0 is not compatible with netstandard2.0 (.NETStandard,Version=v2.0). Package Xamarin.GooglePlayServices.Base 71.1610.0 supports: monoandroid90 (MonoAndroid,Version=v9.0)\tPushNotification\tF:\\Task\\Android\\Xamarin\\PushNotification\\PushNotification\\PushNotification\\PushNotification.csproj\t1\t\r\n\r\nPlease help me."},{"Id":"10341137423","Type":"IssuesEvent","CreatedAt":"2019-09-04T00:52:47","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8544","RelatedDescription":"Closed issue \"Update the license list\" (#8544) at NuGet/Home","RelatedBody":""},{"Id":"10340979216","Type":"IssuesEvent","CreatedAt":"2019-09-04T00:08:03","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8547","RelatedDescription":"Opened issue \"Bless 5.2.0 NuGet.exe and publish 5.3.0-preview NuGet.exe and preview packages(except NuGet.CommandLine)\" (#8547) at NuGet/Home","RelatedBody":" The checklist is as following:\r\n- [ ]  Change the link https://dist.nuget.org/win-x86-commandline/latest/nuget.exe to point to 5.2\r\n- [ ]  Publish https://dist.nuget.org/win-x86-commandline/v5.3.0-preview3/nuget.exe\r\n- [ ]  Merge PR : https://github.com/NuGet/NuGet.Services.Index/pull/147\r\n- [ ]  Push NuGet.* 5.3.0-preview3 packages to nuget.org  https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=426399\r\n- [ ] Push NuGet.Commandline 5.2.0 package to nuget.org https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=383159"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-09-05T05:30:45.8261321Z","RunDurationInMilliseconds":1822}