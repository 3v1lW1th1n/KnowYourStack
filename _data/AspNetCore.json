{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core is... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":44,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6593742486","Type":"ForkEvent","CreatedAt":"2017-09-15T03:26:10","Actor":"LiangSuOliver","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/LiangSuOliver/Home","RelatedDescription":"Forked aspnet/Home to LiangSuOliver/Home","RelatedBody":null},{"Id":"6593658614","Type":"ForkEvent","CreatedAt":"2017-09-15T02:48:13","Actor":"kishorehere82","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/kishorehere82/Home","RelatedDescription":"Forked aspnet/Home to kishorehere82/Home","RelatedBody":null},{"Id":"6593604862","Type":"WatchEvent","CreatedAt":"2017-09-15T02:24:31","Actor":"osvaldoc","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6593303440","Type":"WatchEvent","CreatedAt":"2017-09-15T00:07:48","Actor":"briete","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6591812487","Type":"IssuesEvent","CreatedAt":"2017-09-14T17:24:59","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2196","RelatedDescription":"Closed issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"I am getting the same error as Edward that is tracked here #2155.\r\nWe are still using: netcoreapp1.1 \r\nError\r\n```\r\nUnhandled Exception: System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware..ctor(RequestDelegate next, IDataProtectionProvider dataProtectionProvider, ILoggerFactory loggerFactory, UrlEncoder encoder, IServiceProvider services, IOptions``1 sharedOptions, IOptions``1 options, HtmlEncoder htmlEncoder)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass3_0.<UseMiddleware>b__0(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n```\r\n\r\nThis error only occurs when trying to run my site from the command line via **dotnet run**,but not when project is built and ran in Visual Studios.\r\nI don't have a custom IOptionsMonitor as was the issue from the other ticket.\r\n\r\nHere is my \r\n```\r\nvar baseUrl = appSettings.Value.BaseUrl;\r\napp.UseOpenIdConnectAuthentication(new OpenIdConnectOptions\r\n            {\r\n                AuthenticationScheme = \"oidc\",\r\n                SignInScheme = \"Cookies\",\r\n                Authority = baseUrl,\r\n                //should be true in prod!\r\n                RequireHttpsMetadata = false,\r\n                ClientId = \"customclient\",\r\n                ClientSecret = \"secretissafewithme\",\r\n                ResponseType = \"code id_token\",\r\n                Scope = {\"api1\", \"offline_access\"},\r\n                GetClaimsFromUserInfoEndpoint = true,\r\n\r\n                SaveTokens = true,\r\n\r\n                TokenValidationParameters = new Microsoft.IdentityModel.Tokens.TokenValidationParameters\r\n                {\r\n                    NameClaimType = JwtClaimTypes.Name,\r\n                    RoleClaimType = JwtClaimTypes.Role,\r\n                },\r\n                //UseTokenLifetime = true,\r\n                Events = new OpenIdConnectEvents\r\n                {\r\n                    // Called when authentication is completed. This is the last event, assuming that authentication succeeds. \r\n                    // After this event is handled, the user is signed into the app.\r\n                    OnTicketReceived = async trc =>\r\n                    {\r\n                        await Task.Run(() =>\r\n                        {\r\n                            // store both tokens in the claims/cookie.\r\n                            var identity = trc.Ticket.Principal.Identity as ClaimsIdentity;\r\n                            identity.AddClaims(new[]\r\n                            {\r\n                                new Claim(\"access_token\", trc.Ticket.Properties.GetTokenValue(\"access_token\")),\r\n                                new Claim(\"refresh_token\", trc.Ticket.Properties.GetTokenValue(\"refresh_token\")),\r\n                                new Claim(\"expires_at\", trc.Ticket.Properties.GetTokenValue(\"expires_at\")),\r\n                            });\r\n\r\n                            // cookie is good for multiple requests\r\n                            trc.Properties.IsPersistent = true;\r\n                            // set 12h expiration\r\n                            trc.Properties.ExpiresUtc = DateTimeOffset\r\n                                .Parse(trc.Ticket.Properties.GetTokenValue(\"expires_at\")).AddHours(12);\r\n                        });\r\n                    },\r\n                },\r\n            });\r\n```\r\n\r\nI would like to run without the use of Visual Studios, which it runs perfectly fine on. Any thoughts  @HaoK?\r\n"},{"Id":"6591778659","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T17:17:06","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2196#issuecomment-329549788","RelatedDescription":"Commented on issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"You are correct in your assumption as i added \r\n`if(string.IsNullOrEmpty(baseUrl))\r\n                Console.WriteLine(\"base url is null\");`\r\n\r\nbase url is null gets outputted.\r\n\r\nI also know why this is happening.\r\n\r\nFor future reference: We have appsettings.json and appsettings.Development.json. In our setup the appsettings.json get populated by the build server; therefore, the settings appsettings.Development.json arn't being used by dotnet build without specifying the environment."},{"Id":"6591738651","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T17:07:30","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2196#issuecomment-329547383","RelatedDescription":"Commented on issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"`Console.Writeline(appSettings.Value.BaseUrl);` in startup."},{"Id":"6591734937","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T17:06:37","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2196#issuecomment-329547145","RelatedDescription":"Commented on issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"I'm not not sure how to do that as this is failing in in Main during the host build/run process."},{"Id":"6591710573","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T17:00:51","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2196#issuecomment-329545601","RelatedDescription":"Commented on issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"Write baseUrl out to the console to be sure."},{"Id":"6591705574","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T16:59:45","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2196#issuecomment-329545278","RelatedDescription":"Commented on issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"I updated the snip-it above, the baseurl comes from the app settings and is configured properly. reminder this works fine when ran in Visual Studios."},{"Id":"6591696280","Type":"ForkEvent","CreatedAt":"2017-09-14T16:57:40","Actor":"WillFM","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/WillFM/Home","RelatedDescription":"Forked aspnet/Home to WillFM/Home","RelatedBody":null},{"Id":"6591679340","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T16:53:49","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2196#issuecomment-329543607","RelatedDescription":"Commented on issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"Sounds like a configuration issue. I bet `Authority = baseUrl,` is null."},{"Id":"6591658217","Type":"IssuesEvent","CreatedAt":"2017-09-14T16:48:54","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2196","RelatedDescription":"Opened issue \"UseOpenIdConnectAuthentication InvalidOperationException\" (#2196) at aspnet/Home","RelatedBody":"I am getting the same error as Edward that is tracked here #2155.\r\nWe are still using: netcoreapp1.1 \r\nError\r\n`Unhandled Exception: System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware..ctor(RequestDelegate next, IDataProtectionProvider dataProtectionProvider, ILoggerFactory loggerFactory, UrlEncoder encoder, IServiceProvider services, IOptions``1 sharedOptions, IOptions``1 options, HtmlEncoder htmlEncoder)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass3_0.<UseMiddleware>b__0(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()`\r\n\r\nThis error only occurs when trying to run my site from the command line via **dotnet run**,but not when project is built and ran in Visual Studios.\r\nI don't have a custom IOptionsMonitor as was the issue from the other ticket.\r\n\r\nHere is my \r\n`\r\napp.UseOpenIdConnectAuthentication(new OpenIdConnectOptions\r\n            {\r\n                AuthenticationScheme = \"oidc\",\r\n                SignInScheme = \"Cookies\",\r\n                Authority = baseUrl,\r\n                //should be true in prod!\r\n                RequireHttpsMetadata = false,\r\n\r\n                ClientId = \"customclient\",\r\n                ClientSecret = \"secretissafewithme\",\r\n\r\n                ResponseType = \"code id_token\",\r\n                Scope = {\"api1\", \"offline_access\"},\r\n                GetClaimsFromUserInfoEndpoint = true,\r\n\r\n                SaveTokens = true,\r\n\r\n                TokenValidationParameters = new Microsoft.IdentityModel.Tokens.TokenValidationParameters\r\n                {\r\n                    NameClaimType = JwtClaimTypes.Name,\r\n                    RoleClaimType = JwtClaimTypes.Role,\r\n                },\r\n                //UseTokenLifetime = true,\r\n                Events = new OpenIdConnectEvents\r\n                {\r\n                    // Called when authentication is completed. This is the last event, assuming that authentication succeeds. \r\n                    // After this event is handled, the user is signed into the app.\r\n                    OnTicketReceived = async trc =>\r\n                    {\r\n                        await Task.Run(() =>\r\n                        {\r\n                            // store both tokens in the claims/cookie.\r\n                            var identity = trc.Ticket.Principal.Identity as ClaimsIdentity;\r\n                            identity.AddClaims(new[]\r\n                            {\r\n                                new Claim(\"access_token\", trc.Ticket.Properties.GetTokenValue(\"access_token\")),\r\n                                new Claim(\"refresh_token\", trc.Ticket.Properties.GetTokenValue(\"refresh_token\")),\r\n                                new Claim(\"expires_at\", trc.Ticket.Properties.GetTokenValue(\"expires_at\")),\r\n                            });\r\n\r\n                            // cookie is good for multiple requests\r\n                            trc.Properties.IsPersistent = true;\r\n                            // set 12h expiration\r\n                            trc.Properties.ExpiresUtc = DateTimeOffset\r\n                                .Parse(trc.Ticket.Properties.GetTokenValue(\"expires_at\")).AddHours(12);\r\n                        });\r\n                    },\r\n                },\r\n            });`\r\n\r\nI would like to run without the use of Visual Studios, which it runs perfectly fine on. Any thoughts  @HaoK?\r\n"},{"Id":"6590989105","Type":"WatchEvent","CreatedAt":"2017-09-14T14:39:31","Actor":"avorozcovs","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6589767164","Type":"WatchEvent","CreatedAt":"2017-09-14T10:07:48","Actor":"zorie","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6588796937","Type":"WatchEvent","CreatedAt":"2017-09-14T05:54:36","Actor":"justin0522","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6588769865","Type":"WatchEvent","CreatedAt":"2017-09-14T05:43:11","Actor":"DiffCoder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6588055126","Type":"ForkEvent","CreatedAt":"2017-09-14T00:26:15","Actor":"landsrover","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/landsrover/Home","RelatedDescription":"Forked aspnet/Home to landsrover/Home","RelatedBody":null},{"Id":"6587007037","Type":"WatchEvent","CreatedAt":"2017-09-13T19:24:04","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6586958463","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:13:04","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2155#issuecomment-329268051","RelatedDescription":"Commented on issue \"Change IConfigureNamedOptions<OpenIdConnectOptions> to IOptionsMonitor<OpenIdConnectOptions>\" (#2155) at aspnet/Home","RelatedBody":"I am getting the same error as Edward: \r\n`Unhandled Exception: System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware..ctor(RequestDelegate next, IDataProtectionProvider dataProtectionProvider, ILoggerFactory loggerFactory, UrlEncoder encoder, IServiceProvider services, IOptions`1 sharedOptions, IOptions`1 options, HtmlEncoder htmlEncoder)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass3_0.<UseMiddleware>b__0(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()`\r\n\r\nBut this only occurs when trying to run my site from the command line via dotnet run. I also don't have a custom IOptionsMonitor.\r\n\r\nHere is my \r\n`app.UseOpenIdConnectAuthentication(new OpenIdConnectOptions\r\n            {\r\n                AuthenticationScheme = \"oidc\",\r\n                SignInScheme = \"Cookies\",\r\n\r\n                Authority = baseUrl,\r\n                //should be true in prod!\r\n                RequireHttpsMetadata = false,\r\n\r\n                ClientId = \"customclient\",\r\n                ClientSecret = \"secretissafewithme\",\r\n\r\n                ResponseType = \"code id_token\",\r\n                Scope = {\"api1\", \"offline_access\"},\r\n                GetClaimsFromUserInfoEndpoint = true,\r\n\r\n                SaveTokens = true,\r\n\r\n                TokenValidationParameters = new Microsoft.IdentityModel.Tokens.TokenValidationParameters\r\n                {\r\n                    NameClaimType = JwtClaimTypes.Name,\r\n                    RoleClaimType = JwtClaimTypes.Role,\r\n                },\r\n                //UseTokenLifetime = true,\r\n                Events = new OpenIdConnectEvents\r\n                {\r\n                    // Called when authentication is completed. This is the last event, assuming that authentication succeeds. \r\n                    // After this event is handled, the user is signed into the app.\r\n                    OnTicketReceived = async trc =>\r\n                    {\r\n                        await Task.Run(() =>\r\n                        {\r\n                            // store both tokens in the claims/cookie.\r\n                            var identity = trc.Ticket.Principal.Identity as ClaimsIdentity;\r\n                            identity.AddClaims(new[]\r\n                            {\r\n                                new Claim(\"access_token\", trc.Ticket.Properties.GetTokenValue(\"access_token\")),\r\n                                new Claim(\"refresh_token\", trc.Ticket.Properties.GetTokenValue(\"refresh_token\")),\r\n                                new Claim(\"expires_at\", trc.Ticket.Properties.GetTokenValue(\"expires_at\")),\r\n                            });\r\n\r\n                            // cookie is good for multiple requests\r\n                            trc.Properties.IsPersistent = true;\r\n                            // set 12h expiration\r\n                            trc.Properties.ExpiresUtc = DateTimeOffset\r\n                                .Parse(trc.Ticket.Properties.GetTokenValue(\"expires_at\")).AddHours(12);\r\n                        });\r\n                    },\r\n                },\r\n            });`"},{"Id":"6585637846","Type":"WatchEvent","CreatedAt":"2017-09-13T14:37:34","Actor":"ableji","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6585442679","Type":"WatchEvent","CreatedAt":"2017-09-13T14:02:21","Actor":"wangyi040534","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6584735945","Type":"WatchEvent","CreatedAt":"2017-09-13T11:27:48","Actor":"ctysingh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6582798038","Type":"ForkEvent","CreatedAt":"2017-09-13T01:04:54","Actor":"nicolastakashi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/nicolastakashi/Home","RelatedDescription":"Forked aspnet/Home to nicolastakashi/Home","RelatedBody":null},{"Id":"6582487130","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:58:22","Actor":"bricelam","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-329007616","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"I used my omnipotent SO privileges to undelete my answer and expand it a bit."},{"Id":"6582437657","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:41:25","Actor":"bricelam","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-329004605","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"Well, I tried to point you in the right direction, but my answer got deleted... Here's the exact code you can copy and paste into your application.\r\n``` csharp\r\npublic class DesignTimeDbContextFactory : IDesignTimeDbContextFactory<SampleArchContext>\r\n{    \r\n    public SampleArchContext CreateDbContext(string[] args)\r\n    {\r\n        var host = new WebHostBuilder()\r\n            .UseKestrel()\r\n            .UseContentRoot(Directory.GetCurrentDirectory())\r\n            .ConfigureAppConfiguration((hostingContext, config) =>\r\n            {\r\n                var env = hostingContext.HostingEnvironment;\r\n                config.SetBasePath(env.ContentRootPath);\r\n                config.AddInMemoryCollection(new[]\r\n                       {\r\n                         new KeyValuePair<string,string>(\"the-key\", \"the-value\")\r\n                       })\r\n                       .AddJsonFile(\"appsettings.json\", reloadOnChange: true, optional: false)\r\n                       .AddJsonFile($\"appsettings.{env}.json\", optional: true)\r\n                       .AddEnvironmentVariables();\r\n            })\r\n            .ConfigureLogging((hostingContext, logging) =>\r\n            {\r\n                logging.AddDebug();\r\n                logging.AddConsole();\r\n            })\r\n            .UseIISIntegration()\r\n            .UseDefaultServiceProvider((context, options) =>\r\n            {\r\n                options.ValidateScopes = context.HostingEnvironment.IsDevelopment();\r\n            })\r\n            .UseStartup<Startup>()\r\n            .Build();\r\n            \r\n        return host.Services.CreateScope().ServiceProvider.GetRequiredService<SampleArchContext>();\r\n    }\r\n}\r\n```\r\nIf you follow the [guidance](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/#update-main-method-in-programcs) I pointed to and split the top half of your `Program.Main()` into a `BuildWebHost()` method, EF will do the rest for you (i.e. you could remove the custom `IDesignTimeDbContextFactory` implementation).\r\n\r\nTo directly answer you're question, you can't inject services into `IDesignTimeDbContextFactory`. It is a static entry point into the application (like `Program.Main()`) and the service container must be configured from scratch."},{"Id":"6582117539","Type":"WatchEvent","CreatedAt":"2017-09-12T21:11:37","Actor":"Plac3hold3r","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6581812188","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T19:59:25","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-328967523","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"@bricelam looks like @mohammad-hth is attempting to get to `IHostingEnvironment` in a `IDesignTimeDbContextFactory`. What's the recommended pattern here?"},{"Id":"6581222880","Type":"WatchEvent","CreatedAt":"2017-09-12T17:33:14","Actor":"devmonte","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6581018985","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:45:41","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328912994","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"What is creating the token? Can you cut and paste an actual token so we can decode it? It's hard to transcribe from a screenshot."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6593835032","Type":"WatchEvent","CreatedAt":"2017-09-15T04:10:04","Actor":"xeoneux","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6593696195","Type":"WatchEvent","CreatedAt":"2017-09-15T03:04:58","Actor":"jayrulez","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6593602388","Type":"WatchEvent","CreatedAt":"2017-09-15T02:23:24","Actor":"Trinitek","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6593374836","Type":"PullRequestEvent","CreatedAt":"2017-09-15T00:40:28","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/881","RelatedDescription":"Opened pull request \"Update README.md\" (#881) at aspnet/SignalR","RelatedBody":""},{"Id":"6593374377","Type":"CreateEvent","CreatedAt":"2017-09-15T00:40:14","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/pawelka/UpdateReadme","RelatedDescription":"Created branch \"pawelka/UpdateReadme\" at aspnet/SignalR","RelatedBody":null},{"Id":"6593337473","Type":"WatchEvent","CreatedAt":"2017-09-15T00:23:03","Actor":"eddof13","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6593222106","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T23:34:18","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/880#issuecomment-329636816","RelatedDescription":"Commented on issue \"Adding README to npm module\" (#880) at aspnet/SignalR","RelatedBody":"We decided not to take this for alpha1 so rebasing on dev"},{"Id":"6593220555","Type":"PushEvent","CreatedAt":"2017-09-14T23:33:42","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/c128516639f4ba709a34acd8cec0262091778e5d...f760dc3839a7aabc0b0f4d2125d5f1045de016be","RelatedDescription":"Pushed to refs/heads/pawelka/README at aspnet/SignalR","RelatedBody":null},{"Id":"6593216517","Type":"PushEvent","CreatedAt":"2017-09-14T23:32:06","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/3c5f490f2c84a91d47aceaaff8fbf7bb932d3203...c128516639f4ba709a34acd8cec0262091778e5d","RelatedDescription":"Pushed to refs/heads/pawelka/README at aspnet/SignalR","RelatedBody":null},{"Id":"6593214956","Type":"PushEvent","CreatedAt":"2017-09-14T23:31:27","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/b0e3efda567a13c7012459623230b6ccc3dafbe5...3c5f490f2c84a91d47aceaaff8fbf7bb932d3203","RelatedDescription":"Pushed to refs/heads/pawelka/README at aspnet/SignalR","RelatedBody":null},{"Id":"6593182501","Type":"PullRequestEvent","CreatedAt":"2017-09-14T23:18:20","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/880","RelatedDescription":null,"RelatedBody":""},{"Id":"6593182397","Type":"PullRequestEvent","CreatedAt":"2017-09-14T23:18:18","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/880","RelatedDescription":"Closed pull request \"Adding README to npm module\" (#880) at aspnet/SignalR","RelatedBody":""},{"Id":"6593181611","Type":"PullRequestEvent","CreatedAt":"2017-09-14T23:17:59","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/880","RelatedDescription":"Opened pull request \"Adding README to npm module\" (#880) at aspnet/SignalR","RelatedBody":""},{"Id":"6593180106","Type":"CreateEvent","CreatedAt":"2017-09-14T23:17:21","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/pawelka/README","RelatedDescription":"Created branch \"pawelka/README\" at aspnet/SignalR","RelatedBody":null},{"Id":"6592917879","Type":"PushEvent","CreatedAt":"2017-09-14T21:50:20","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/ce9a208c9c175a20ef2157494f07591170a0010d...7bc3db1b29bcc7f2a9253e250c95ebd6fa8aca9a","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6592917779","Type":"PullRequestEvent","CreatedAt":"2017-09-14T21:50:18","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/879","RelatedDescription":"Merged pull request \"Fix some markdown glitches.\" (#879) at aspnet/SignalR","RelatedBody":""},{"Id":"6592917120","Type":"PullRequestEvent","CreatedAt":"2017-09-14T21:50:07","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/879","RelatedDescription":"Opened pull request \"Fix some markdown glitches.\" (#879) at aspnet/SignalR","RelatedBody":""},{"Id":"6592916391","Type":"CreateEvent","CreatedAt":"2017-09-14T21:49:53","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/anurse/fix-markdown-in-hub-protocol","RelatedDescription":"Created branch \"anurse/fix-markdown-in-hub-protocol\" at aspnet/SignalR","RelatedBody":null},{"Id":"6592895528","Type":"WatchEvent","CreatedAt":"2017-09-14T21:43:56","Actor":"victorvfx","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6592687762","Type":"ForkEvent","CreatedAt":"2017-09-14T20:52:13","Actor":"Dzym","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/Dzym/SignalR","RelatedDescription":"Forked aspnet/SignalR to Dzym/SignalR","RelatedBody":null},{"Id":"6592487782","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T20:04:30","Actor":"jadjare","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/814#issuecomment-329593521","RelatedDescription":"Commented on issue \"aspnetcore MVC Sample\" (#814) at aspnet/SignalR","RelatedBody":"In case anyone's interested I've created a Basic Demo App using .NET Core 2.0 and SignalR.  It can be found here..\r\nhttps://github.com/jadjare/SignalR-AspNetCore2-Demo\r\n\r\nInstructions to get started on in the ReadMe file."},{"Id":"6591733252","Type":"PushEvent","CreatedAt":"2017-09-14T17:06:13","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/73fe2421ed03ede49a26e3ce0253e14b11bdc654...ce9a208c9c175a20ef2157494f07591170a0010d","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6591729501","Type":"PushEvent","CreatedAt":"2017-09-14T17:05:17","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/ff9937e247591054313b3890abdf4a2f969f364c...a267e86e1fa86ba79d99beec6cba85f92e245a47","RelatedDescription":"Pushed to refs/heads/rel/1.0.0-alpha1 at aspnet/SignalR","RelatedBody":null},{"Id":"6591706835","Type":"ForkEvent","CreatedAt":"2017-09-14T17:00:03","Actor":"calvinsadewa","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/calvinsadewa/SignalR","RelatedDescription":"Forked aspnet/SignalR to calvinsadewa/SignalR","RelatedBody":null},{"Id":"6591703840","Type":"WatchEvent","CreatedAt":"2017-09-14T16:59:22","Actor":"calvinsadewa","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6591661369","Type":"PushEvent","CreatedAt":"2017-09-14T16:49:37","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/68f74ec0fa6a4ab32a170d9e07a62fbe1ca73dc2...a267e86e1fa86ba79d99beec6cba85f92e245a47","RelatedDescription":"Pushed to refs/heads/pawelka/final at aspnet/SignalR","RelatedBody":null},{"Id":"6591620495","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T16:40:23","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/878#issuecomment-329540044","RelatedDescription":"Commented on issue \"Adding the 'final' suffix to version\" (#878) at aspnet/SignalR","RelatedBody":"I am going to merge this PR as soon as I do local verification"},{"Id":"6591616211","Type":"PullRequestEvent","CreatedAt":"2017-09-14T16:39:24","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/878","RelatedDescription":"Opened pull request \"Adding the 'final' suffix to version\" (#878) at aspnet/SignalR","RelatedBody":""},{"Id":"6591614579","Type":"CreateEvent","CreatedAt":"2017-09-14T16:39:01","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/pawelka/final","RelatedDescription":"Created branch \"pawelka/final\" at aspnet/SignalR","RelatedBody":null},{"Id":"6591515553","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T16:18:10","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/877#issuecomment-329533710","RelatedDescription":"Commented on issue \"Javascript client breaks if relative url doesn't start with a slash\" (#877) at aspnet/SignalR","RelatedBody":"I'm in favor of adding it."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6593831571","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T04:08:12","Actor":"RickyLin","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6793#issuecomment-329675747","RelatedDescription":"Commented on issue \".Net Core 2.0 View caching issues\" (#6793) at aspnet/Mvc","RelatedBody":"FYI, here's some details about the system of @qibucloud.\r\nThere are many .cshtml files in wwwroot folder as templates, the code in Controller may be like this:\r\n\r\n```\r\npublic IActionResult Abc()\r\n{\r\n    return View(\"wwwroot/MyTemplates/xyz.cshtml\");\r\n}\r\n``` \r\n"},{"Id":"6593813242","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T03:59:11","Actor":"RickyLin","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6793#issuecomment-329673954","RelatedDescription":"Commented on issue \".Net Core 2.0 View caching issues\" (#6793) at aspnet/Mvc","RelatedBody":"> 我的视图模板与样式图片javascript一起放在wwwroot目录下，不知道跟这个有没有关系\r\n\r\nMy view templates, css, images, javascripts are all in the wwwroot folder, I'm not sure whether there are something to do with it."},{"Id":"6593803686","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T03:54:41","Actor":"qibucloud","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6793#issuecomment-329673441","RelatedDescription":"Commented on issue \".Net Core 2.0 View caching issues\" (#6793) at aspnet/Mvc","RelatedBody":"@RickyLin \r\n我的视图模板与样式图片javascript一起放在wwwroot目录下，不知道跟这个有没有关系"},{"Id":"6593541808","Type":"IssuesEvent","CreatedAt":"2017-09-15T01:57:08","Actor":"JamesYing","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6829","RelatedDescription":"Opened issue \"How can I use localization in my Razor Page project\" (#6829) at aspnet/Mvc","RelatedBody":"Hi guys,\r\nI want use localization on my razor page project, I  registed the localization service in startup:\r\n`services.AddLocalization(options => options.ResourcesPath = \"Resources\");\r\n            services.AddMvc()\r\n                .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix)\r\n                .AddRazorPagesOptions(options =>\r\n                {\r\n                    options.Conventions.AuthorizeFolder(\"/Account/Manage\");\r\n                    options.Conventions.AuthorizePage(\"/Account/Logout\");\r\n                });`\r\nIn the View, I inject the IViewLocalizer, but when i run the project, it throw a exception:\r\n  IndexOutOfRangeException: Index was outside the bounds of the array.\r\n    Microsoft.AspNetCore.Mvc.Localization.ViewLocalizer.BuildBaseName(string path)\r\n\r\nThe exception from ViewLocalizer.Contextualize, the viewContext.View.Path is empty, so it throw this exception.\r\n\r\nSo, How can I use localization in my Razor Page project?"},{"Id":"6593490171","Type":"PushEvent","CreatedAt":"2017-09-15T01:34:02","Actor":"JunTaoLuo","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/6794c1a94a387e91a013377da9129358d0520e4b...6a52f8e3071afa7e666e69971944a3b9db9269e4","RelatedDescription":"Pushed to refs/heads/rel/1.1.4 at aspnet/Mvc","RelatedBody":null},{"Id":"6593466542","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T01:23:15","Actor":"RickyLin","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6793#issuecomment-329651331","RelatedDescription":"Commented on issue \".Net Core 2.0 View caching issues\" (#6793) at aspnet/Mvc","RelatedBody":"@qibucloud 如果不知道如何验证 `DOTNET_USE_POLLING_FILE_WATCHER` 是否开启，你可以在你的代码里输出一下那个环境变量。另外你还是说中文吧。中文说清楚一些，我帮你翻译。他们可能看不到你发的某些英文。\r\n\r\nIf you don't know whether `DOTNET_USE_POLLING_FILE_WATCHER` is picked up, you may print out that environment variable. By the way, you can speak Chinese, I can translate it. Probably they don't quite understand some of your English sentences."},{"Id":"6593457820","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T01:19:05","Actor":"qibucloud","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6793#issuecomment-329650775","RelatedDescription":"Commented on issue \".Net Core 2.0 View caching issues\" (#6793) at aspnet/Mvc","RelatedBody":"View .cshtml in the wwwroot folder on the prime\r\nIs it possible for this reason?\r\n@pranavkm @ianhays\r\n@DamianEdwards \r\n@Eilon "},{"Id":"6593439235","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T01:10:22","Actor":"qibucloud","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6793#issuecomment-329649381","RelatedDescription":"Commented on issue \".Net Core 2.0 View caching issues\" (#6793) at aspnet/Mvc","RelatedBody":"@pranavkm  Not from the 1.1 upgrade to 2.0 only the problem. 1.1 also have the same problem\r\n\r\nHow to use the environment variable to start my application\r\n"},{"Id":"6593396089","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T00:50:40","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6708#discussion_r139043773","RelatedDescription":"Commented on pull request \"Improvements to the testing package.\" (#6708) at aspnet/Mvc","RelatedBody":"This will go away"},{"Id":"6593395493","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T00:50:22","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6708#discussion_r139043743","RelatedDescription":"Commented on pull request \"Improvements to the testing package.\" (#6708) at aspnet/Mvc","RelatedBody":"I'm going to change this to throw instead (more obvious)"},{"Id":"6593380238","Type":"PushEvent","CreatedAt":"2017-09-15T00:43:05","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/279fc734eb835efc2afddc07b286f84bf58669fc...9f1ab6d3bedb3f096ee626522d2fd5a87d5a2def","RelatedDescription":"Pushed to refs/heads/javiercn/testing-cleanup at aspnet/Mvc","RelatedBody":null},{"Id":"6593326081","Type":"PushEvent","CreatedAt":"2017-09-15T00:17:44","Actor":"JunTaoLuo","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/f161e3a931bc19b31062aff0b0996caea69f7f61...cfc6d7e88f7e64142e3c35973a85951903d8c1bf","RelatedDescription":"Pushed to refs/heads/rel/1.0.5 at aspnet/Mvc","RelatedBody":null},{"Id":"6593305546","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T00:08:42","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6786#issuecomment-329641788","RelatedDescription":"Commented on issue \"Add a filter to convert some 'basic' 4XX responses into 'problem' responses\" (#6786) at aspnet/Mvc","RelatedBody":"We're not doing a filter. The plan is to use action result execution extensibility to do this. "},{"Id":"6593304514","Type":"IssuesEvent","CreatedAt":"2017-09-15T00:08:15","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6786","RelatedDescription":"Reopened issue \"Add a filter to convert some 'basic' 4XX responses into 'problem' responses\" (#6786) at aspnet/Mvc","RelatedBody":"* RFC 7807\r\n* Use ProblemDescription as the preferred format for \"error\" responses from API endpoints.\r\n* Introduce a new attribute that assumes that your API confers to some expectations. Expectations:\r\n    (a) Any API which participates in model binding will have model state errors\r\n    (b) API accepting id parameters will 404.\r\n    (c) More ...?\r\n* On the API description end, this means we will add a provider to enhance the description based on these expectations. See https://github.com/aspnet/Mvc/issues/6785\r\n* On the output end, we'll add a filter \\ change the execution to return a ProblemDescription if the action result matches one of our expectations.\r\n* Introduce new types that allow modifying what the shape of the error description is. We'll produce a ProblemDescription and allow users to modify it's shape."},{"Id":"6593303829","Type":"DeleteEvent","CreatedAt":"2017-09-15T00:07:58","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"prkrishn/ead\" at aspnet/Mvc","RelatedBody":null},{"Id":"6593303754","Type":"PullRequestEvent","CreatedAt":"2017-09-15T00:07:56","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6807","RelatedDescription":"Closed pull request \"Introduce opinionated API defaults.\" (#6807) at aspnet/Mvc","RelatedBody":"* Introduce ProblemDescriptionAttribute to enhance some 4xx messages and produce better API description.\r\n* Introduce IErrorDescriptionProvider to modify the shape of error response.\r\n\r\nFixes #6785, Fixes #6786"},{"Id":"6593303706","Type":"PushEvent","CreatedAt":"2017-09-15T00:07:55","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/037c1ec47d9d38480a493a5d85942f9fdbbec21a...776c2604f82b1ff76e0a03ba5497ea616b8172a2","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Mvc","RelatedBody":null},{"Id":"6593303696","Type":"IssuesEvent","CreatedAt":"2017-09-15T00:07:54","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6786","RelatedDescription":"Closed issue \"Add a filter to convert some 'basic' 4XX responses into 'problem' responses\" (#6786) at aspnet/Mvc","RelatedBody":"* RFC 7807\r\n* Use ProblemDescription as the preferred format for \"error\" responses from API endpoints.\r\n* Introduce a new attribute that assumes that your API confers to some expectations. Expectations:\r\n    (a) Any API which participates in model binding will have model state errors\r\n    (b) API accepting id parameters will 404.\r\n    (c) More ...?\r\n* On the API description end, this means we will add a provider to enhance the description based on these expectations. See https://github.com/aspnet/Mvc/issues/6785\r\n* On the output end, we'll add a filter \\ change the execution to return a ProblemDescription if the action result matches one of our expectations.\r\n* Introduce new types that allow modifying what the shape of the error description is. We'll produce a ProblemDescription and allow users to modify it's shape."},{"Id":"6593303687","Type":"IssuesEvent","CreatedAt":"2017-09-15T00:07:54","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6785","RelatedDescription":"Closed issue \"Add a new apidescriptionprovider that can infer possible 4XX responses from action signature\" (#6785) at aspnet/Mvc","RelatedBody":"See https://github.com/aspnet/Mvc/issues/6785 for more details on the work being done here."},{"Id":"6593158919","Type":"CreateEvent","CreatedAt":"2017-09-14T23:09:10","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/tree/kichalla/input-formatters-exceptins","RelatedDescription":"Created branch \"kichalla/input-formatters-exceptins\" at aspnet/Mvc","RelatedBody":null},{"Id":"6593130910","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-14T22:58:42","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6807#discussion_r139031001","RelatedDescription":"Commented on pull request \"Introduce opinionated API defaults.\" (#6807) at aspnet/Mvc","RelatedBody":"This is OK for now, I'm going to remove this when I merge API controller"},{"Id":"6593128577","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-14T22:57:49","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6807#discussion_r139030889","RelatedDescription":"Commented on pull request \"Introduce opinionated API defaults.\" (#6807) at aspnet/Mvc","RelatedBody":"`Extra line"},{"Id":"6593124562","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-14T22:56:20","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6752#discussion_r139030684","RelatedDescription":"Commented on pull request \"Design: Revisit the unwrapping code in ControllerActionInvoker\" (#6752) at aspnet/Mvc","RelatedBody":"We can call `Execute` in `TaskResultExecutor` and avoid the cost of the `ExecuteAsync` pipeline."},{"Id":"6593060484","Type":"ForkEvent","CreatedAt":"2017-09-14T22:33:58","Actor":"mfhossain","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/mfhossain/Mvc","RelatedDescription":"Forked aspnet/Mvc to mfhossain/Mvc","RelatedBody":null},{"Id":"6593054762","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T22:32:02","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6807#issuecomment-329626907","RelatedDescription":"Commented on issue \"Introduce opinionated API defaults.\" (#6807) at aspnet/Mvc","RelatedBody":"Expanding on @rynowak's mysterious comment, the plan is to use https://github.com/aspnet/Mvc/pull/6821 and https://github.com/aspnet/Mvc/pull/6822 to provide problem details rather than a single filter. We realized having the single filter was hard to scale. So this PR introduces the api descriptor. We'll retrofit the configuration once we have those pieces."},{"Id":"6593042854","Type":"PushEvent","CreatedAt":"2017-09-14T22:28:09","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/df39b2a73f161d5904bc65ec767ad6fe5f1216f5...9782b085abd2c157fa9062469f5af4e990dd557d","RelatedDescription":"Pushed to refs/heads/prkrishn/ead at aspnet/Mvc","RelatedBody":null},{"Id":"6593013518","Type":"IssuesEvent","CreatedAt":"2017-09-14T22:18:53","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6828","RelatedDescription":"Opened issue \"Api Response should have a way to represent a default response type\" (#6828) at aspnet/Mvc","RelatedBody":"Swagger \\ OpenAPI has a way to represent a `default` error response for all errors. See https://swagger.io/docs/specification/describing-responses#default. We don't have a good way to represent this. For the time being, we're resorting to using `StatusCode=0` to indicate this."},{"Id":"6592978380","Type":"PushEvent","CreatedAt":"2017-09-14T22:07:54","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/25aefe0deff027fb44bd1d490c8e7cccd667e18f...df39b2a73f161d5904bc65ec767ad6fe5f1216f5","RelatedDescription":"Pushed to refs/heads/prkrishn/ead at aspnet/Mvc","RelatedBody":null},{"Id":"6592914630","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-14T21:37:44","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6824#discussion_r139017779","RelatedDescription":"Commented on pull request \"Fix #4914 patternize filter overrides\" (#6824) at aspnet/Mvc","RelatedBody":"remove `where when`?"},{"Id":"6592914616","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-14T21:36:21","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6824#discussion_r139017507","RelatedDescription":"Commented on pull request \"Fix #4914 patternize filter overrides\" (#6824) at aspnet/Mvc","RelatedBody":"Sure 👍 . Just wondering if finding the effective filter should be driven by 'policy' alone. For example, could we provide an additional overload which checks the current type of the filter alone. This way a user doesn't need to define a new type for 'policy'."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6593488585","Type":"PushEvent","CreatedAt":"2017-09-15T01:33:20","Actor":"JunTaoLuo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Identity/compare/06a0346a071c1a3d1bd69efec106ad5815cf2854...c965c78caec7eb1e9592ee92ed86da561c44c4f8","RelatedDescription":"Pushed to refs/heads/rel/1.1.3 at aspnet/Identity","RelatedBody":null},{"Id":"6593324844","Type":"PushEvent","CreatedAt":"2017-09-15T00:17:10","Actor":"JunTaoLuo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Identity/compare/895d033bb90fc7117aebad0b44920d62745d927c...524ec4a02223d567890e305d65265409a75727e4","RelatedDescription":"Pushed to refs/heads/rel/1.0.4 at aspnet/Identity","RelatedBody":null},{"Id":"6592672792","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T20:48:46","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1418#issuecomment-329604725","RelatedDescription":"Commented on issue \"Razor Pages - Based on Individual Auth template- weird login/register errors.\" (#1418) at aspnet/Identity","RelatedBody":"Can you check the database to ensure that the user was actually created in the DB?"},{"Id":"6592648815","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T20:43:08","Actor":"Ibro","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1418#issuecomment-329603268","RelatedDescription":"Commented on issue \"Razor Pages - Based on Individual Auth template- weird login/register errors.\" (#1418) at aspnet/Identity","RelatedBody":"@HaoK  yeah, I forgot to post here afterwards. I realised I had an extra Id property. \r\nIf I remember correctly, after removing it I wasn't able to sign in at all. The error wouldn't occur but I wouldn't be able to sign in. I think it was same with registration."},{"Id":"6592636402","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T20:40:06","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1418#issuecomment-329602554","RelatedDescription":"Commented on issue \"Razor Pages - Based on Individual Auth template- weird login/register errors.\" (#1418) at aspnet/Identity","RelatedBody":"Its most likely the new Id in your user, since the its probably the base property that's being used by Identity which is null.\r\n\r\n```\r\npublic class User : IdentityUser<int>\r\n        public new int Id { get; set; }\r\n```\r\n\r\nI would use the base property"},{"Id":"6592616616","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T20:35:16","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1120#issuecomment-329601341","RelatedDescription":"Commented on issue \"Documentation\" (#1120) at aspnet/Identity","RelatedBody":"Something like this doc? https://docs.microsoft.com/en-us/aspnet/identity/overview/extensibility/overview-of-custom-storage-providers-for-aspnet-identity"},{"Id":"6592468914","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T20:00:06","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1390#issuecomment-329592420","RelatedDescription":"Commented on issue \"ConfirmEmail doesn't work\" (#1390) at aspnet/Identity","RelatedBody":"@Rick-Anderson are the docs correct? The problem here sees to be there's URL encoding on the query string, you can see the &amp in there and that's screwing it all up."},{"Id":"6592452568","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:56:25","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1384","RelatedDescription":"Closed issue \"How to modify login url when using asp.net identity\" (#1384) at aspnet/Identity","RelatedBody":"Can we modify the default `/account/login` url to some custom url while redirecting the user to login page in case of unauthorized access ?\r\n\r\nLet's say client name need to be appended to url which will look like `/ClientABC/account/login` which will redirect to login page and after login will redirect to respective url which is present in return url parameter.\r\n\r\nI am trying this in below way. Setting the login Url, here I want to append the client name\r\n\r\n```\r\nservices.Configure<IdentityOptions>(opt =>\r\n            {\r\n                opt.Cookies.ApplicationCookie.LoginPath = new PathString(\"/account/login\");\r\n            });\r\n```\r\nand then making sure all urls requires authentication\r\n\r\n```\r\n  services.AddMvc(o =>\r\n                {\r\n                   o.Filters.Add(new AuthorizeFilter(new AuthorizationPolicyBuilder().RequireAuthenticatedUser().Build()));\r\n\r\n                })\r\n```\r\n\r\nI am trying this from many days, not able to figure out the solution !\r\n\r\nThanks !\r\nRohit"},{"Id":"6592449030","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T19:55:33","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1378#issuecomment-329591261","RelatedDescription":"Commented on issue \"User Id null error ambiguous \" (#1378) at aspnet/Identity","RelatedBody":"This is just an identity assumption, you must have an id for a user. This isn't going to change."},{"Id":"6592443513","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:54:13","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1360","RelatedDescription":"Closed issue \"Multiple Identities with different token providers\" (#1360) at aspnet/Identity","RelatedBody":"_From @Elfocrash on August 15, 2017 10:15_\n\n## Intro\r\n\r\nOn my application I need to have two different Identities with different options for each Identity.\r\nWhat I initially did is to simply add the identities with `services.AddIdentity<AdminUser, IdentityRole>`, `services.AddIdentity<User, IdentityRole>`\r\nand do a `.AddDefaultTokenProviders()` at the end of the call, as the project does anyway.\r\n\r\n## The problem\r\nThe problem is that when i have two identities and i call `.AddDefaultTokenProviders()` only the second call's tokens stay in the dictionary. That is because the system is checking if token providers with those names exist and if they do it replaces them with the latter.\r\nThe problem is that the IdentityOptions is a Singeton.\r\nThe error i was getting was `\"No IUserTokenProvider named 'PasswordResetTokenProvider' is registered.\"`\r\n\r\nMy next idea after diving into the code was to remove the `.AddDefaultTokenProviders()` and manually add 3 calls for my providers ex. `.AddTokenProvider(\"UserDefault\",                    typeof(DataProtectorTokenProvider<>).MakeGenericType(typeof(User)))` (and the respective ones for email and phone).\r\n\r\nThen i manually set the token provider to be used in the User managers created for each identity like this: `optionsAccessor.Value.Tokens.PasswordResetTokenProvider = \"UserDefault\";`\r\n\r\nHowever every time i needed to call a user manager the code was stepping in both managers (or there are cases where i need both). Because the `optionsAccessor.Value.Tokens.PasswordResetTokenProvider`, `optionsAccessor.Value.Tokens.ChangeEmailTokenProvider` and `optionsAccessor.Value.Tokens.EmailConfirmationTokenProvider` are system wide value, only the one set last will be used.\r\nThis makes the system unable to user the correct token.\r\n\r\n## The workaround\r\nThe way I worked around it is by adding the `IHttpContextAccessor` in my usermanager and checking Route values to see if the request is coming by a specific area, controller and action.\r\n\r\nObviously this is very hacky and I am not happy with it.\r\nI know that the correct way would be to use claims and roles to give different permissions to separate admin users and normal users, but the app I'm buying had this separation as a requirement on a higher level (Potentially the need to store them in a centralized database away from the other records, different cookie persistence values etc).\r\n\r\n## Suggestion\r\nTo me it looks like the problem is that we use a Dictionary that limits the keys to one value.\r\nThe second `.AddDefaultTokenProviders()` call should probably throw an exception saying that i have something with that name already registered.\r\nAnother thing would be that instead of using a Dictionary, we use a data structure that allows key-value combination checks. That way we can have \"Default\"-\"AUserManager\" and \"Default\" - \"BUserManager\" but the code retrieves the one appropriate for this specific usermanager requesting it.\r\n\r\nWhat are your thoughts on this?\r\nWas Identity never build around the idea of having multiple ones?\r\n\n\n_Copied from original issue: aspnet/Mvc#6656_"},{"Id":"6592443506","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T19:54:13","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1360#issuecomment-329590928","RelatedDescription":"Commented on issue \"Multiple Identities with different token providers\" (#1360) at aspnet/Identity","RelatedBody":"Closing due to lack of response."},{"Id":"6592441943","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:53:50","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1352","RelatedDescription":"Closed issue \"When using `CheckPasswordSignInAsync`, how should you protect against timing attacks?\" (#1352) at aspnet/Identity","RelatedBody":"Within a multi-tenanted environment (without public registration), we use `CheckPasswordSignInAsync` as one of the login steps (as we also need to check permissions before logging in, too). When the user does not exist in the system, how can I effectively still run a hash before returning, so that the existence/absence of the user isn't given away via a timing attack?\r\n\r\nI haven't measured yet, but will the following line of code run a comparable hash, therefore meaning the responses take the same time for an invalid password vs a missing user?\r\n\r\n```\r\nif (user == null)\r\n{\r\n    // fake a password hash operation:\r\n    await _signInManager.CheckPasswordSignInAsync(new ServiceUser(), \"wrong password\", false);\r\n    return;\r\n}\r\n\r\nvar result = await _signInManager.CheckPasswordSignInAsync(user, password, true);\r\nif (!result.Succeeded) return;\r\n```"},{"Id":"6592441040","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:53:37","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1323","RelatedDescription":"Closed issue \"Doesn't support hierarchyid type\" (#1323) at aspnet/Identity","RelatedBody":"I need add a property in ApplicationUser Class which datatype is hierarchyid.\r\nHow can I do that?"},{"Id":"6592441038","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T19:53:37","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1323#issuecomment-329590793","RelatedDescription":"Commented on issue \"Doesn't support hierarchyid type\" (#1323) at aspnet/Identity","RelatedBody":"This is by design in EF. You should ask in the EF repo about this. https://github.com/aspnet/EntityFrameworkCore"},{"Id":"6592436749","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:52:35","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1320","RelatedDescription":"Closed issue \"Missing the UserManager.VerifyPasswordResetTokenAsync method\" (#1320) at aspnet/Identity","RelatedBody":"I want to implement a password change flow. Naturally I would expect it to work like this: \r\n\r\n```csharp\r\nvar token = await UserManager.GeneratePasswordResetTokenAsync(user);\r\nvar result = await UserManager.VerifyPasswordResetTokenAsync(user, token);\r\n```\r\nUnfortunately, I only find this method: \r\n```csharp\r\nvar result = await UserManager.VerifyUserTokenAsync(user, \"tokenProvider\", \"ResetPassword\", token);\r\n```\r\nThis makes it confusing what to use as token provider and purpose strings. Allowing to use custom token providers and purposes seems like a good idea, but when just starting out, there should be a default implementation. \r\n"},{"Id":"6592435909","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:52:23","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1301","RelatedDescription":"Closed issue \"Trying to build rel/1.1.0 locally: 'TaskCache' is inaccessible due to its protection level\" (#1301) at aspnet/Identity","RelatedBody":"I've cloned this repository, opened Identity.sln in Visual Studio 2017 (Version 15.2 (26430.14) Release, pro edition, to be precise) and tried to compile, but it fails [here](https://github.com/aspnet/Identity/blob/rel/1.1.0/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L695) with the error `'TaskCache' is inaccessible due to its protection level.`.\r\n\r\nMy ultimate goal is to obtain debugging symbols so I can step into [ExternalLoginSignInAsync](https://github.com/aspnet/Identity/blob/rel/1.1.0/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L458) and figure out why my login attempt fails, but just activating Microsoft Symbol Servers and adding https://nuget.smbsrc.net to symbol sources didn't help, so I'm trying to add a source reference instead.\r\n\r\nHow can I get past these errors, so I can step through the method and see what's going on?"},{"Id":"6592433817","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:51:53","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1258","RelatedDescription":"Closed issue \"Setting Cookies.ApplicationCookie.Events from services.Configure<IdentityOptions> prevents security stamp validation from working\" (#1258) at aspnet/Identity","RelatedBody":"### Setting Cookies.ApplicationCookie.Events from services.Configure<IdentityOptions> prevents security stamp validation from working\r\n*setting events inside configure service disables security stamp validation check which is hard to spot*  \r\n\r\n### Functional impact\r\nDisables security stamp validation completely without any errors and it's hard to spot\r\n\r\n### Minimal repro steps\r\n1. Create project with identity in asp.net core 1.1.\r\n2.configure identity options.\r\n3. Add this segment:\r\n         `options.Cookies.ApplicationCookie.Events = new CookieAuthenticationEvents()\r\n                {\r\n                    OnRedirectToLogin = (context) =>\r\n                    {\r\n                          //Some code\r\n                          Task.FromTesult(0);\r\n                     }\r\n                   }`\r\nAnd to fix this problem you need to move events from configure identity options to app.UseCookieAuthentication\r\n### Expected result\r\nCustom event to excute without effecting security stamp validation\r\n\r\n### Actual result\r\nEvents code works but Security stamp validation stops working.\r\n\r\n### More details\r\n(https://stackoverflow.com/q/44284627/5895031)"},{"Id":"6592432570","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:51:35","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1210","RelatedDescription":"Closed issue \"Calling AddLoginAsync i get Ef Exception \" (#1210) at aspnet/Identity","RelatedBody":"Calling AddLoginAsync in ExternalLoginConfirmation i get this error.\r\n\r\n```\r\nfail: Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[0]\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:       An unhandled exception has occurred: The instance of entity type 'IdentityUserLogin<string>' cannot be tracked because another instance of this type with the same key is already being tracked. When adding new entities, for most key types a unique temporary key value will be created if no key is set (i.e. if the key property is assigned the default value for its type). If you are explicitly setting key values for new entities, ensure they do not collide with existing entities or temporary values generated for other new entities. When attaching existing entities, ensure that only one entity instance with a given key value is attached to the context.\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]: System.InvalidOperationException: The instance of entity type 'IdentityUserLogin<string>' cannot be tracked because another instance of this type with the same key is already being tracked. When adding new entities, for most key types a unique temporary key value will be created if no key is set (i.e. if the key property is assigned the default value for its type). If you are explicitly setting key values for new entities, ensure they do not collide with existing entities or temporary values generated for other new entities. When attaching existing entities, ensure that only one entity instance with a given key value is attached to the context.\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintAction(EntityEntryGraphNode node)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraph(EntityEntryGraphNode node, Func`2 handleNode)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.EntityFrameworkCore.DbContext.SetEntityState[TEntity](TEntity entity, EntityState entityState)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(TUser user, UserLoginInfo login, CancellationToken cancellationToken)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at Microsoft.AspNetCore.Identity.UserManager`1.<AddLoginAsync>d__91.MoveNext()\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]: --- End of stack trace from previous location where exception was thrown ---\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\nMay 18 14:15:14 VM7sWb2 dotnet-example[26927]:    at EgritosGroup.Auth.Server.Controllers.AccountController.<ExternalLoginConfirmation>d__23.MoveNext() in C:\\Projects\\Org.Auth\\src\\src\\Org.Auth.Server\\Controllers\\AccountController.cs:line 364\r\n\r\n```\r\n\r\nmy code in line 364 is\r\n```\r\nresult = await _userManager.AddLoginAsync(user, info);\r\n```\r\n\r\n"},{"Id":"6592431364","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:51:18","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1209","RelatedDescription":"Closed issue \"proposal for Discussion on ASP.NET Identity Core 2.0\" (#1209) at aspnet/Identity","RelatedBody":"Hi @danroth27 et. al.,\r\nI thought extensively about ASP.NET Identity and how it should look like for the benefit of all. I also took into account the new Identity Service in 2.0, see https://github.com/aspnet/Identity/issues/1187, and I tried to see the whole picture from a certain distance to come to a conclusion that I want to share with you.\r\n\r\nWhat follows is the perspective of someone who is new to .Net (since one year) and who belongs to what could be qualified as a \"small dev team doing small apps\". I am not an IT professional developing apps for people but rather apps to the direct consumer. This category of devs is in my opinion quite big from the stats that I see on github and videos, and hence the ASP.NET Core + Xamarin + Azure team (hereafter AXA) could bet on such clients from a business perspective (e.g BizSpark).\r\n\r\n**The positive**\r\nLet me emphasize one thing before going into the negative critic; when you come from a different field (Fortran and quantum physics in my case = nothing to do with .Net) you look for the best solution among a broad range of solutions and I spent quite a few months testing the different programming languages and frameworks (python, javascript, C++, php, node etc) and reading about offerings (pricing, and capabilities such as scalability and pay-as-you-go solutions). This includes looking for the best host (Azure vs Amazon vs Firebase etc, vs on-premise even) together with the most universal capabilities (.Net Core, Xamarin), possibly strongly typed owing to my background and with the condition that I do not want to take care of the IT part of managing servers because this is a full-time job that requires a lot of experience. This is why AXA is the ideal choice, and in my opinion it should be the preferred choice for devs who have similar goals.\r\n\r\n**The negative**\r\nIn this scenario you want to have some start-up code but there are things you do not want to touch for security reasons (you lack experience), and this is the Identity part; namely storing users, authentication and authorization not mentioning the regulations such as GDPR https://en.wikipedia.org/wiki/General_Data_Protection_Regulation and similar in the US and elsewhere.\r\n\r\nI am ready to take the bet that sooner or later identity management will not be a configurable option  anymore (legally speaking), just in the same way as you do not configure your passport. Of course you could hire IT people in the security sector, but for start-ups that is not an immediate choice because you have other costs in the hosting and the running of your apps. \r\n\r\nAs of today, ASP.NET Core offers ASP.NET Identity with the possibility of social logins. In all honesty and for having worked on it for nearly 2 months it gives me a bitter taste of incompleteness. It sounds very unprofessional.\r\nOf course, every template has an end, but the bare minimum that every app-user expects is not even met and these are critical security issues.\r\n\r\nFor instance, the template allows you to send email confirmation, great, and password reset, super great, but the possibility to change the username and/or the email is just inexistent https://github.com/aspnet/Templates/issues/406 . Even twitter allows you to change your username ;).  It is a standard. Despite the greatness of Stackoverflow, a dev would and should feel uncertain that he is doing things properly, and the discussions there https://github.com/aspnet/Identity/issues/727 confirms it (see @brockallen 's answer and also his critic here https://vimeo.com/172009501 around 46 min). I do agree with him.\r\n\r\nI also agree with @shanselman and some devs on GitHub on the way registration is done, see https://mva.microsoft.com/en-US/training-courses/intermediate-aspnet-core-10-16964?l=cM8fKLmJD_4006218965 at 22min-23min . Here the problem is that a user could not login with his FB email because the account was already created in-app. The underlying missing feature is the ability to allow a user to associate an in-app account with a FB account when the user logs via FB for the first time. When he is prompted to associate the account, one can ask him to enter a password for his in-app account based upon the condition that the app user already exists. Currently, the message he gets \"`Username bob@contoso.com is already taken`\". We could make the template such that it says instead \"`Username bob@contoso.com is already taken. If you own this existing account,  enter your pwd`\". \r\nThis problem is a big one in my opinion for the app's popularity, because if you offer several logins methods (say FB, Google and local), a happy user logging in with say FB with bob@contoso.com may not remember which provider he used a month ago. So he might try out with Google, but with the same email bob@contoso.com or a local account. Today, he will be forced to choose another email account for association. This creates a useless micro-graph inside the graph of users, hence increasing database size, not mentioning the frustration for the user.\r\nAzure AD B2C has this problem, too, you can log on with the same email using different accounts and there is no solution as of today. To me, the credibility of ASP.NET Identity goes down here, despite the respect I have for any work done.\r\nI hope the negative aspects outlined above would trigger some discussion for improvements; I invite people to dump in further proposals or broaden the discussion here.\r\n\r\n**Proposal for an AXA template**\r\nThe above recommendations concerned ASP.NET Identity only. This new IdentityService in 2.0 includes OIDC to allow a dev to easily migrate to AADB2C, and as the discussion went on here https://github.com/aspnet/Identity/issues/1187 , it should enable easy integration of other open source Secure Token Services (Identity Server, OpenIdDict etc). In my opinion, what will be great, and in the spirit of the discussion above is to have an additional one-template Solution that has 2 or 3 projects:\r\n\r\n1) A Web App and/or API with ASP.NET identity\r\n\r\n2) A Xamarin (IOs, UWP, Droid) that would be a client talking securely to the app (e.g. a Todo list with an owner)\r\nAgain, the spirit is to provide a secure \"no touch solution\" template for what I believe is highly looked for.\r\n\r\n\r\n\r\n"},{"Id":"6592424432","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T19:49:34","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1191#issuecomment-329589888","RelatedDescription":"Commented on issue \"How to combine the aspnetusers table and my current user table?\" (#1191) at aspnet/Identity","RelatedBody":"Do you really need identity? (Roles, claims etc.) or do you just want a login process? If it's the later then [using cookie authentication on its own](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/cookie?tabs=aspnetcore2x) might work well for you. "},{"Id":"6592411678","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:46:26","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1184","RelatedDescription":"Closed issue \"IdentityServer 4 , ASP.NET Core- Custom User Manager?\" (#1184) at aspnet/Identity","RelatedBody":"Hello,\r\n\r\nI have a problem with my app workflow process. I need to build an ASP.NET Core with IdS4 where all my clients and users are managed through an external API. I need to validate users and sing them into the app only using the API. My question is : do I need to have a custom user manager and retrieve in it all the users for password validation or can I just use the api to validate the pass and sign them in?\r\n\r\nThank you"},{"Id":"6592411666","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T19:46:25","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1184#issuecomment-329589141","RelatedDescription":"Commented on issue \"IdentityServer 4 , ASP.NET Core- Custom User Manager?\" (#1184) at aspnet/Identity","RelatedBody":"You could just call your external API when you get asked to validate the details."},{"Id":"6592407817","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T19:45:29","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1159#issuecomment-329588894","RelatedDescription":"Commented on issue \"DbUpdateConcurrencyException after success signIn\" (#1159) at aspnet/Identity","RelatedBody":"Given you say this goes away when you restart we're thinking you actually do have a concurrency issue - do other parts of your web site also adjust the user?"},{"Id":"6592369675","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:35:58","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1138","RelatedDescription":"Closed issue \"Security (Sample) - don't use UserId in ConfirmEmail href\" (#1138) at aspnet/Identity","RelatedBody":"When we want to confirm our email, the Post to ConfirmEmail is { userid, token }. This is in contrast to resetting a password, where the model is { email, token }. \r\n\r\nThe chain of events begins at successful registration, when the CallbackUrl is generated.\r\n\r\nThere doesn't seem anything to be gained by using the UserId directly. Since access is via a 'public' link sent to an email, it exposes a) whether the underlying store is int or guid based and b) provides a valid UserId which can be associated with the email it's been sent to.\r\n\r\nI suggest operating the same way as the Post to ForgotPassword, and use the email as the account identifier.\r\n\r\n\r\n"},{"Id":"6592366016","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:35:03","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1127","RelatedDescription":"Closed issue \"SignInManager.IsSignedIn does not handle exceptions from WindowsIdentity.get_AuthenticationType()\" (#1127) at aspnet/Identity","RelatedBody":"The WindowsIdentity.AuthenticationType property getter throws exceptions derived from LsaGetLogonSessionData failures.  This is unusual for a property getter, but one I'm not sure how they are going to fix since there doesn't seem to be a good response for AuthenticationType when the current process simply doesn't have access to the Lsa Logon Session Data. Ultimately I believe the DotNet/CoreFx/System.Security.Principal.Windows contributors need to figure out a different way to determine, or default, the AuthenticationType when LsaGetLogonSessionData fails.\r\n\r\n\r\n```\r\n        //\r\n        // Properties.\r\n        //\r\n        // this is defined 'override sealed' for back compat. Il generated is 'virtual final' and this needs to be the same.\r\n        public override sealed string AuthenticationType\r\n        {\r\n            get\r\n            {\r\n                // If this is an anonymous identity, return an empty string\r\n                if (_safeTokenHandle.IsInvalid)\r\n                    return String.Empty;\r\n\r\n                if (_authType == null)\r\n                {\r\n                    Interop.LUID authId = GetLogonAuthId(_safeTokenHandle);\r\n                    if (authId.LowPart == Interop.LuidOptions.ANONYMOUS_LOGON_LUID)\r\n                        return String.Empty; // no authentication, just return an empty string\r\n\r\n                    SafeLsaReturnBufferHandle pLogonSessionData = SafeLsaReturnBufferHandle.InvalidHandle;\r\n                    try\r\n                    {\r\n                        int status = Interop.SspiCli.LsaGetLogonSessionData(ref authId, ref pLogonSessionData);\r\n                        if (status < 0) // non-negative numbers indicate success\r\n----->                      throw GetExceptionFromNtStatus(status);\r\n\r\n                        pLogonSessionData.Initialize((uint)Marshal.SizeOf<Interop.SECURITY_LOGON_SESSION_DATA>());\r\n\r\n                        Interop.SECURITY_LOGON_SESSION_DATA logonSessionData = pLogonSessionData.Read<Interop.SECURITY_LOGON_SESSION_DATA>(0);\r\n                        return Marshal.PtrToStringUni(logonSessionData.AuthenticationPackage.Buffer);\r\n                    }\r\n                    finally\r\n                    {\r\n                        if (!pLogonSessionData.IsInvalid)\r\n                            pLogonSessionData.Dispose();\r\n                    }\r\n                }\r\n\r\n                return _authType;\r\n            }\r\n        }\r\n\r\n```\r\n\r\nUntil then, to work around this, I think SignInManager.IsSignedIn needs to check if a ClaimsIdentity is an instance of a WindowsIdentity and avoid the AuthenticationType property.  Either that or handle the exception gracefully, assuming that any ClaimsIdentity.AuthenticationType property getter could throw.\r\n\r\n```\r\n\r\n        public virtual bool IsSignedIn(ClaimsPrincipal principal)\r\n        {\r\n            if (principal == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(principal));\r\n            }\r\n            return principal?.Identities != null &&\r\n                principal.Identities.Any(i =>\r\n                    // Avoid calling AuthenticationType on WindowsIdentity \r\n                    ((i as WindowsIdentity) != null &&\r\n                        new string[]{ \"Kerberos\", \"NTLM\", \"Negotiate\", \"Windows Authentication\" }\r\n                            .Contains(Options.Cookies.ApplicationCookieAuthenticationScheme)\r\n                    ) ||\r\n                    (i as WindowsIdentity) == null && \r\n                        i.AuthenticationType == Options.Cookies.ApplicationCookieAuthenticationScheme);\r\n\r\n        }\r\n\r\n```\r\n\r\nThe suggested change is a blunt instrument to deal with a problem that shouldn't have been there in the first place, but I attempt to honor the ApplicationCookieAuthenticationScheme comparison by supplying possible values for AuthenticationType when using Windows Authentication on IIS.  It's possible that the ApplicationCookieAuthenticationScheme should never be set to any of the values used by Windows Authentication in which case the left side of the OR expression can be dropped entirely in favor of the right side, unless you think its better to simply handle the exception and move on."},{"Id":"6592355670","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T19:32:22","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1120#issuecomment-329585721","RelatedDescription":"Commented on issue \"Documentation\" (#1120) at aspnet/Identity","RelatedBody":"Hmm, I don't remember writing anything like that. Could you give me some idea of what you want? I assume you're not wanting to just use EF and take the pain away that way?"},{"Id":"6592350620","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:31:03","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1102","RelatedDescription":"Closed issue \"Migrating User Data from Identity 2.2.1 to 3.x\" (#1102) at aspnet/Identity","RelatedBody":"Hey all\r\nIs it possible to migrate data from Identity 2.2.1 to 3.x?\r\n\r\nI found the following discussion, not sure what current status is.\r\nhttps://github.com/aspnet/EntityFramework/issues/2167\r\n\r\nMigrating only the passwords would be enough for now if complete migration doesn't work.\r\n\r\nThanks for your help"},{"Id":"6592338470","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:28:00","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1038","RelatedDescription":"Closed issue \"Store user emails in encrypted format instead of plain text.\" (#1038) at aspnet/Identity","RelatedBody":"Hi guys,\r\nI have simple question/request ?\r\nIs it possible to store the emails in the database in encrypted format instead of plain text ?\r\nI've tried to pass the email as encrypted string by bypassing the UserValidation with custom UserValidator, but when i try to get the user ( Login ) the authentication fails.\r\n\r\nBest Regards,\r\nDobromir Ivanov"},{"Id":"6592331470","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:26:19","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1034","RelatedDescription":"Closed issue \"Async methods and CancellationTokens\" (#1034) at aspnet/Identity","RelatedBody":"At the present moment, most classes with async methods to not provide a way to pass `CancellationToken` instances (examples: `SignInManager.SignOutAsync()` or `UserManager.FindByIdAsync(id)`). Underline, some of this methods are implicitly using the `CancellationToken` from the current `HttpContext`, like the `UserManager` class.\r\n\r\nWith this in mind, here are some concerns that come to my mind:\r\n\r\n1. I'm not passing a `CancellationToken`, yet, my async flow can be canceled even if I don't want it to be;\r\n2. Classes like `UserManager` have no reason to be tied to ASP.NET Core and this implementation clearly makes it;\r\n3. Using part of this library outside the scope of an ASP.NET Core application makes it impossible to use other `CancellationToken` besides the `HttpRequest.RequestAborted`. Example: imagine a CQRS application were you want to use the token provided by the bus;\r\n\r\nHere are my suggestions:\r\n\r\n- No breaking changes - add overloads that use the given `CancellationToken` instead of the internal one;\r\n- Breaking change - remove the dependency on `HttpContext.RequestAborted` and only use provided `CancellationToken`;\r\n- For consistency, all methods should have a token overload, even if the implementation does not require (example: `SignInManager.SignOutAsync()`)"},{"Id":"6592327442","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:25:15","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1030","RelatedDescription":"Closed issue \"New AspNetUserTokens Table Column Width Issues\" (#1030) at aspnet/Identity","RelatedBody":"Hi All,\r\n\r\nMy team is just wrapping up migrating from RC1 to RTM. There's now a table called AspNetUserTokens that is being created. Here's the DDL for the table as it was created auto-magically for us:\r\n\r\n    CREATE TABLE [dbo].[AspNetUserTokens] (\r\n        [UserId]        NVARCHAR (450) NOT NULL,\r\n        [LoginProvider] NVARCHAR (450) NOT NULL,\r\n        [Name]          NVARCHAR (450) NOT NULL,\r\n        [Value]         NVARCHAR (MAX) NULL,\r\n        CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY CLUSTERED ([UserId] ASC, [LoginProvider] ASC, [Name] ASC)\r\n    );\r\n\r\nWhen testing the delta script for going to production I got this warning in SQL Server Management Studio:\r\n\r\n`Warning! The maximum key length is 900 bytes. The index 'PK_AspNetUserTokens' has maximum length of 2700 bytes. For some combination of large values, the insert/update operation will fail.`\r\n\r\nWhy are the lengths of the columns so large? It would seem that making `UserId`  be `NVARCHAR(36)` would be fine, given that it's 36 everywhere else. I see the length of `LoginProvider` matches the length of that column in `AspNetUserLogins`, but isn't 450 unnecessarily large? In practice the values are `Google` and `Facebook`, etc. Maybe the same is true of the `Name` column as well. Finally, using `NVARCHAR(MAX)` (using any column type with the length `MAX`) causes the database engine to have to determin if the length of the actual piece of data being stored for a particular row should be stored in the data page itself or outside of the data page. There is an unnecessary performance hit for using `NVARCHAR(MAX)` if the token's value will be something <= 4000 in practice. Why not put the value into `NVARCHAR(#)`, where # is the largest expected size of the token's value (again, if it is less than 4000 in practice).\r\n\r\nFor now we'll use the table as-is, but wanted to bubble up these thoughts for discussion.\r\n\r\nThanks!\r\n-Brian Eriksen"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6593931093","Type":"IssuesEvent","CreatedAt":"2017-09-15T04:57:23","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2063","RelatedDescription":"Opened issue \"RFC 8187 - Character Encoding for Headers\" (#2063) at aspnet/KestrelHttpServer","RelatedBody":"Hot off the presses (September 2017) https://tools.ietf.org/html/rfc8187\r\n\r\nIndicating Character Encoding and Language for HTTP Header Field Parameters"},{"Id":"6593640995","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T02:40:26","Actor":"bgever","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/637#issuecomment-329662860","RelatedDescription":"Commented on issue \"Ssl Protocol should default to TLS1.2 only\" (#637) at aspnet/KestrelHttpServer","RelatedBody":"Now this has been changed, if you try to connect with older versions of TLS you may see the below error message logged to the console:\r\n> The client and server cannot communicate, because they do not possess a common algorithm\r\n\r\nHope this can help others debugging why that happens.\r\n```\r\nfail: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      ConnectionFilter.OnConnection\r\nSystem.AggregateException: One or more errors occurred. ---> System.Security.Authentication.AuthenticationException: A call to SSPI failed, see inner exception. ---> System.ComponentModel.Win32Exception: The client and server cannot communicate, because they do not possess a common algorithm\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionFilter.<OnConnectionAsync>d__6.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.Security.Authentication.AuthenticationException: A call to SSPI failed, see inner exception. ---> System.ComponentModel.Win32Exception: The client and server cannot communicate, because they do not possess a common algorithm\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionFilter.<OnConnectionAsync>d__6.MoveNext()<---\r\n```"},{"Id":"6593489019","Type":"PushEvent","CreatedAt":"2017-09-15T01:33:31","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/87e0f71b05c9436991517e422d9175a8fe6a14fe...34ce029712cdeca429dfcf1873110f98cf2f06af","RelatedDescription":"Pushed to refs/heads/rel/1.1.3 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593365800","Type":"IssuesEvent","CreatedAt":"2017-09-15T00:36:09","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2017","RelatedDescription":"Closed issue \"Merge code paths duplicated between HTTP/1.1 and HTTP/2\" (#2017) at aspnet/KestrelHttpServer","RelatedBody":"The initial HTTP/2 implementation contains a lot of duplicated code from the existing HTTP/1.1 stuff. That duplication should be eliminated so we can share as much code as possible between the two protocol implementations."},{"Id":"6593365545","Type":"DeleteEvent","CreatedAt":"2017-09-15T00:36:02","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"cesarbs/2017\" at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593365485","Type":"PushEvent","CreatedAt":"2017-09-15T00:36:00","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/d28b4133906fa589eba8062f0c113b1747ba7d50...a31d1e024ca86a4a9053e0be105fde17c5ccae10","RelatedDescription":"Pushed to refs/heads/dev at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593365410","Type":"PullRequestEvent","CreatedAt":"2017-09-15T00:35:58","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2041","RelatedDescription":"Merged pull request \"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations (#2017)\" (#2041) at aspnet/KestrelHttpServer","RelatedBody":"#2017\r\n\r\n## A note on naming\r\n\r\nI'm intentionally not renaming things now, so they look a bit off. I'm planning on doing some renames after addressing feedback (see below).\r\n\r\n## Summary\r\n\r\nThis change makes `Frame` the base class for the HTTP/1.1 and HTTP/2 implementations.\r\n\r\nThe HTTP/1.x-specific code in `Frame` is in a subclass called `Http1Frame` (so now `Frame<T>` subclasses `Http1Frame`).\r\n\r\n`Http2Stream` is a subclass of `Frame`.\r\n\r\n`Frame` exposes a few more abstract properties and methods that must be implemented by protocol-specific classes.\r\n\r\nProducing HTTP/1.1 and HTTP/2 output is done via the same interface (`IHttpOutputProducer`), which `OutputProducer` and `Http2OutputProducer` implement.\r\n\r\n## Things I'm not crazy about\r\n\r\n1) Multiple `.FeatureCollection.cs` files. I think the ideal would be to have a single one (`Frame.FeatureCollection.cs`). It would implement HTTP/1.1 and HTTP/2-specific features (upgrade and stream ID, respectively), but those could be nulled out in `OnReset()` where they're not supposed to be implemented. What do you guys think?\r\n\r\n1) The way `Frame.Output` is instantiated by each subclass. It's all internal but ugly still. What do you guys think of moving it to `IHttpProtocolContext` i.e. have it passed to `Frame` instead of instantiated by it?\r\n\r\n1) Protected member variables. They were already there, but now they're uglier IMO because some are not accessed by a direct subclass of `Frame` (e.g. `Frame<T>` accesses `Frame._applicationException`).\r\n\r\n## Planned renames\r\n\r\n* `Frame` -> `HttpProtocol` (I wanted to name it `HttpStream` but @davidfowl didn't like that)\r\n* `FrameAdapter` -> `Http1FrameAdapter`\r\n* `IFrameControl` -> `IHttpResponseControl`\r\n* `FrameRequestStream` -> `HttpRequestStream`\r\n* `FrameResponseStream` -> `HttpResponseStream`\r\n* `FrameRequestHeaders` -> `HttpRequestHeaders`\r\n* `FrameResponseHeaders` -> `HttpResponseHeaders`\r\n* `FrameConnection` -> `HttpConnection`\r\n* `OutputProducer` -> `Http1OutputProducer`\r\n\r\nI believe these would be better done as part of the Bedrock refactoring:\r\n\r\n* `FrameConnectionManager` -> `ConnectionManager` or `HttpConnectionManager` (if HTTP-specific)\r\n* `FrameHeartbeatManager` -> `HeartbeatManager` or `HttpHeartbeatManager` (if HTTP-specific)"},{"Id":"6593325123","Type":"PushEvent","CreatedAt":"2017-09-15T00:17:18","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/539e37af8abd7d61970bf2915844f6fe0488db24...a367507af747df0df938a7d73dea6b072ba7463d","RelatedDescription":"Pushed to refs/heads/rel/1.0.5 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593321693","Type":"PushEvent","CreatedAt":"2017-09-15T00:15:44","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/b9cf5d80e8325115f39557456543b39815656605...bfb3ad595eaf995cdc7bfa130cf8df5e64616e14","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593292507","Type":"IssueCommentEvent","CreatedAt":"2017-09-15T00:03:12","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2041#issuecomment-329641019","RelatedDescription":"Commented on issue \"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations (#2017)\" (#2041) at aspnet/KestrelHttpServer","RelatedBody":"Commit b9cf5d80e8325115f39557456543b39815656605 does the renames."},{"Id":"6593275601","Type":"PushEvent","CreatedAt":"2017-09-14T23:56:31","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/29164f374e6c62d762288d089a3d8be3d5acb7e4...b9cf5d80e8325115f39557456543b39815656605","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593273898","Type":"DeleteEvent","CreatedAt":"2017-09-14T23:55:48","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"cesarbs/keepalive-test-trace\" at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593273850","Type":"PushEvent","CreatedAt":"2017-09-14T23:55:47","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/da7bc24eece472cee44775a70bcac3b14022b7b2...d28b4133906fa589eba8062f0c113b1747ba7d50","RelatedDescription":"Pushed to refs/heads/dev at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593273796","Type":"PullRequestEvent","CreatedAt":"2017-09-14T23:55:45","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2062","RelatedDescription":"Merged pull request \"Add tracing to KeepAliveTimeoutTests.ConnectionKeptAliveBetweenRequests to investigate test failures\" (#2062) at aspnet/KestrelHttpServer","RelatedBody":"See #1684."},{"Id":"6593272900","Type":"PushEvent","CreatedAt":"2017-09-14T23:55:24","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/71994a22495a1ee5d8d434e1799a4b3b1ded4f9a...29164f374e6c62d762288d089a3d8be3d5acb7e4","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6593270366","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T23:54:20","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2041#issuecomment-329639680","RelatedDescription":"Commented on issue \"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations (#2017)\" (#2041) at aspnet/KestrelHttpServer","RelatedBody":"A few more necessary renames that I had overlooked before:\r\n\r\n`FrameHeaders` -> `HttpHeaders`\r\n`FrameDuplexStream` -> `HttpUpgradeStream`\r\n`FrameConnectionReference` -> `HttpConnectionReference`\r\n`FrameStreamState` -> `HttpStreamState`\r\n`FrameContext` -> `Http1ConnectionContext`"},{"Id":"6592896395","Type":"PullRequestEvent","CreatedAt":"2017-09-14T21:44:09","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2062","RelatedDescription":"Opened pull request \"Add tracing to KeepAliveTimeoutTests.ConnectionKeptAliveBetweenRequests to investigate test failures\" (#2062) at aspnet/KestrelHttpServer","RelatedBody":"See #1684."},{"Id":"6592893162","Type":"CreateEvent","CreatedAt":"2017-09-14T21:43:18","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/tree/cesarbs/keepalive-test-trace","RelatedDescription":"Created branch \"cesarbs/keepalive-test-trace\" at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6592141270","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T18:40:50","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1684#issuecomment-329572860","RelatedDescription":"Commented on issue \"Flaky Test: TestKeepAliveTimeout\" (#1684) at aspnet/KestrelHttpServer","RelatedBody":"Looks like it's been failing again, on Windows 7 only."},{"Id":"6591097710","Type":"IssuesEvent","CreatedAt":"2017-09-14T14:58:40","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2061","RelatedDescription":"Closed issue \"404 for static files with names starting with dots\" (#2061) at aspnet/KestrelHttpServer","RelatedBody":"Kestrel return 404 for static files which names starting with dot (\".\").\r\nLike `http://localhost:5000/client/lib/interop/.interop.types.js`\r\nRequest for such files don't reach asp.net. I checked it via `OnPrepareResponse` handler for StaticFileMiddleware's options:\r\n```\r\n\tapp.UseStaticFiles(new StaticFileOptions\r\n\t{\r\n\t\tOnPrepareResponse = ctx =>\r\n\t\t{\r\n\t\t\tvar f = ctx.File;\r\n\t\t\tif (f.Name.StartsWith(\".\"))\r\n\t\t\t{\r\n\t\t\t\tDebugger.Break(); // we won't get here\r\n\t\t\t}\r\n\t\t},\r\n\t\tServeUnknownFileTypes = true\r\n\t});\r\n```\r\n\r\nIs there any workaround for the issue?"},{"Id":"6591097704","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T14:58:40","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2061#issuecomment-329509402","RelatedDescription":"Commented on issue \"404 for static files with names starting with dots\" (#2061) at aspnet/KestrelHttpServer","RelatedBody":"This isn't a kestrel issue, by default files that start with `.` are blocked, see https://github.com/aspnet/FileSystem/issues/186. In 2.1 there's a new API you can use to change the defaults but in 2.0 you'd need to write a custom file provider that allowed finding files that started with `.`. \r\n\r\nSee https://github.com/aspnet/FileSystem/issues/186 for more details."},{"Id":"6590958539","Type":"IssuesEvent","CreatedAt":"2017-09-14T14:33:59","Actor":"evil-shrike","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2061","RelatedDescription":"Opened issue \"404 for static files with names starting with dots\" (#2061) at aspnet/KestrelHttpServer","RelatedBody":"Kestrel return 404 for static files which names starting with dot (\".\").\r\nLike `http://localhost:5000/client/lib/interop/.interop.types.js`\r\nRequest for such files don't reach asp.net. I checked it via `OnPrepareResponse` handler for StaticFileMiddleware's options:\r\n```\r\n\t\t\tapp.UseStaticFiles(new StaticFileOptions\r\n\t\t\t{\r\n\t\t\t\tOnPrepareResponse = ctx =>\r\n\t\t\t\t{\r\n\t\t\t\t\tvar f = ctx.File;\r\n\t\t\t\t\tif (f.Name.StartsWith(\".\"))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDebugger.Break(); // we won't get here\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tServeUnknownFileTypes = true\r\n\t\t\t});\r\n```\r\n\r\nIs there any workaround for the issue?"},{"Id":"6590676158","Type":"ForkEvent","CreatedAt":"2017-09-14T13:41:59","Actor":"Adrast","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/Adrast/KestrelHttpServer","RelatedDescription":"Forked aspnet/KestrelHttpServer to Adrast/KestrelHttpServer","RelatedBody":null},{"Id":"6588598249","Type":"WatchEvent","CreatedAt":"2017-09-14T04:21:03","Actor":"0xCA5E","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6588393581","Type":"WatchEvent","CreatedAt":"2017-09-14T02:50:30","Actor":"orf53975","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587906575","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T23:25:14","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2041#issuecomment-329324804","RelatedDescription":"Commented on issue \"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations (#2017)\" (#2041) at aspnet/KestrelHttpServer","RelatedBody":"Updated list of planned renames (updates in **bold**):\r\n\r\n* `Frame` -> `HttpProtocol`\r\n* `FrameAdapter` -> **`Http1ParsingHandler`** (since it's now only used in parsing-related code)\r\n* `IFrameControl` -> `IHttpResponseControl`\r\n* `FrameRequestStream` -> `HttpRequestStream`\r\n* `FrameResponseStream` -> `HttpResponseStream`\r\n* `FrameRequestHeaders` -> `HttpRequestHeaders`\r\n* `FrameResponseHeaders` -> `HttpResponseHeaders`\r\n* `FrameConnection` -> `HttpConnection`\r\n* **`Http1Frame`** -> **`Http1Connection`**\r\n* `OutputProducer` -> `Http1OutputProducer`\r\n* `FrameConnectionManager` -> **`HttpConnectionManager`**\r\n* `FrameHeartbeatManager` -> **`HttpHeartbeatManager`**"},{"Id":"6587884421","Type":"PushEvent","CreatedAt":"2017-09-13T23:16:53","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/64f88f9555267a94ce0d59f0cb41a061cac1267a...71994a22495a1ee5d8d434e1799a4b3b1ded4f9a","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587771194","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T22:36:04","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2058#issuecomment-329316511","RelatedDescription":"Commented on issue \"Performance issue with .net core\" (#2058) at aspnet/KestrelHttpServer","RelatedBody":"@chintan3100 What client are you using to make the request? How are you measuring the download speed?"},{"Id":"6587664289","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T22:03:23","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2041#discussion_r138751818","RelatedDescription":"Commented on pull request \"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations (#2017)\" (#2041) at aspnet/KestrelHttpServer","RelatedBody":"As far as I can tell this can be made private again."},{"Id":"6587614958","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:50:06","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1977","RelatedDescription":"Closed pull request \"Implement regression tests\" (#1977) at aspnet/KestrelHttpServer","RelatedBody":"Tests the following issues:\r\n\r\n- TFS-221190\r\n- TFS-221148\r\n- TFS-221191\r\n\r\n@natemcmaster @halter73 @muratg"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6593626262","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:33:54","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052532","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"These need to be virtual"},{"Id":"6593625995","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:33:46","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052519","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"breaking change, "},{"Id":"6593624716","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:33:13","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052452","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"this is a breaking change"},{"Id":"6593624413","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:33:06","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052442","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"this is a breaking change"},{"Id":"6593621651","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:31:51","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052331","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"Think about using an enum here instead. Version allows you to express a huge range of stuff including versions that done exist.\r\n\r\nThink continuous vs discrete.\r\n\r\nWe never need/want to handle a version we didn't ship."},{"Id":"6593617873","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:30:15","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052214","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"I would drop the name `Context` from this. It's not really acting as a context parameter. \r\n\r\nSo maybe: `internal override RazorParserFeatureFlags FeatureFlags { get; set; }`"},{"Id":"6593614889","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:28:59","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052121","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"Couldn't think of a better that isn't already used"},{"Id":"6593612982","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-15T02:28:06","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683#discussion_r139052053","RelatedDescription":"Commented on pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"Should this throw ArgNull instead?"},{"Id":"6593612059","Type":"PullRequestEvent","CreatedAt":"2017-09-15T02:27:43","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1683","RelatedDescription":"Opened pull request \"Added version support to Razor parser\" (#1683) at aspnet/Razor","RelatedBody":"#1678 \r\n\r\n@rynowak \r\n\r\n- Added `Version` property to `RazorParserOptions`\r\n- Added an internal `RazorParserFeatureContext` that contains a flag for all features we want to enable/disable in the parser\r\n- Reason for having a centralized location is so we don't have to look at the version every time we want to decide whether to light-up a feature\r\n- I'll send a separate PR that will use `AllowMinimizedBooleanTagHelperAttributes` to enable/disable that feature."},{"Id":"6593595510","Type":"CreateEvent","CreatedAt":"2017-09-15T02:20:22","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/tree/ajbaaska/parser-feature","RelatedDescription":"Created branch \"ajbaaska/parser-feature\" at aspnet/Razor","RelatedBody":null},{"Id":"6593507916","Type":"PushEvent","CreatedAt":"2017-09-15T01:42:01","Actor":"JunTaoLuo","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/883f8811cd3efaeb99d6b4052522e1440bf69cd7...5fc7f95f379bc2985bfcfacdbe107c8a89c94427","RelatedDescription":"Pushed to refs/heads/patch/1.1.4 at aspnet/Razor","RelatedBody":null},{"Id":"6593326391","Type":"PushEvent","CreatedAt":"2017-09-15T00:17:53","Actor":"JunTaoLuo","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/1e4ac640c097eb7ae752adadbaa2854d9dedd59e...5f786121f83502c8aaebc91e4684cd5e1458e949","RelatedDescription":"Pushed to refs/heads/patch/1.0.6 at aspnet/Razor","RelatedBody":null},{"Id":"6592804115","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T21:20:29","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1668#issuecomment-329612349","RelatedDescription":"Commented on issue \"Feature Question/Request: Razor Pages free view model property annotations\" (#1668) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Mvc/issues/6790 tracks this work"},{"Id":"6592286792","Type":"PushEvent","CreatedAt":"2017-09-14T19:14:57","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/82866d9442ae7914980576fd821e162d6c30ecbb...7cca8618ea81037290c6d29ed16664a3aeac315c","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Razor","RelatedBody":null},{"Id":"6592286773","Type":"PullRequestEvent","CreatedAt":"2017-09-14T19:14:56","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681","RelatedDescription":"Merged pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"There's still nothing processing the notifications in the background.\r\nThis is all the plumbing for dirty checking and publishing updates."},{"Id":"6592194668","Type":"IssuesEvent","CreatedAt":"2017-09-14T18:52:27","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682","RelatedDescription":"Closed issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"```@foreach (var item in contentlist)\r\n{\r\n        \t<li><a href=\"#\">\r\n                    <i></i><font>@(item.Name)</font>\r\n        \t    <span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a>\r\n               </li>\r\n}\r\n\r\nMicrosoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\r\nindex.cshtml(162,11): Error RZ9999: The \"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\r\nindex.cshtml(162,164): Error RZ9999: Encountered end tag \"a\" with no matching start tag.  Are your start/end tags properly balanced?\r\nindex.cshtml(162,168): Error RZ9999: Encountered end tag \"li\" with no matching start tag.  Are your start/end tags properly balanced?\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)```"},{"Id":"6592194652","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T18:52:27","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329575909","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"Closing as there is no issue."},{"Id":"6588772751","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T05:44:28","Actor":"qibucloud","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329379665","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"@Eilon Yes, yes"},{"Id":"6588646479","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T04:44:59","Actor":"Eilon","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329370037","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"@qibucloud so everything is working now?"},{"Id":"6588592110","Type":"IssueCommentEvent","CreatedAt":"2017-09-14T04:17:56","Actor":"qibucloud","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329366592","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"@Eilon @ajaybhargavb \r\nThis is the wrong time cshtml, but now the test is no problem, thank you\r\n\r\n```@{\r\n    Layout = $\"{Data.codepath}_公共框架.cshtml\";\r\n}\r\n<!--banner-->\r\n<div class=\"banner_pc\">\r\n    <div class=\"flexslider\">\r\n        <ul class=\"slides\">\r\n@{\r\nvar contentlist = Contents.GetList(Data, 0, \"home-slide\", 8);\r\n@foreach (var item in contentlist)\r\n{\r\n    <li><a href=\"@(item.ContentLink)\"><img src=\"@(item.Content_Pic)\" alt=\"@(item.ContentName)\"/></a></li>\r\n}\r\n}\r\n        </ul>\r\n    </div>\r\n</div>\r\n<div class=\"banner_sj\">\r\n    <div class=\"flexslider\">\r\n        <ul class=\"slides\">\r\n@foreach (var item in contentlist)\r\n{\r\n        <li><a href=\"@(item.ContentLink)\"><img src=\"@(item.Content_sjPic)\"></a></li>\r\n}\r\n        </ul>\r\n    </div>\r\n    <script type=\"text/javascript\">\r\n    jQuery(document).ready(function() {\r\n      if(jQuery('.flexslider').length){\r\n          jQuery('.flexslider').flexslider({\r\n            animation: \"slide\",\r\n            start: function(slider){\r\n              jQuery('body').removeClass('loading');\r\n            }\r\n          });\r\n      }\r\n    });\r\n    </script>\r\n</div>\r\n<!--hot_product-->\r\n<div class=\"hot_product\">\r\n\t<div class=\"hot_p_left\">\r\n    \t<big>产品目录</big>\r\n    \t<ul class=\"tab_title\">\r\n@{\r\nvar navigations = Navigations.GetList(Data, 0, \"products\", 7);\r\nforeach (var item in navigations)\r\n{\r\n<li><a href=\"@(Data.culture)/@(item.RoutingUrl).html\"><i></i>@(item.NavigationName)</a></li>\r\n}\r\n}\r\n        </ul>\r\n    </div>\r\n    <div class=\"hot_p_right\">\r\n\t\t<div class=\"hot_p_name\"><big>新品推荐</big><a href=\"@(Data.culture)/products.html\"><img src=\"@(Data.sitepath)images/more.png\" alt=\"\"/></a></div>\r\n        <div class=\"hot_p_img\">\r\n@foreach (var item in navigations)\r\n{         <div class=\"t_con\">\r\n            <ul>\r\n@foreach (var items in Contents.GetList(Data, 0, item.RoutingUrl, 4))\r\n{\r\n            \t<li><a href=\"@(Data.culture)/@(items.RoutingUrl).html\"><img src=\"/cut_185_157@(items.Content_Pic)\" alt=\"@(items.ContentName)\"/><em>@(items.ContentName)</em></a></li>\r\n}\r\n            </ul>\r\n          </div>\r\n}\r\n    </div>\r\n</div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n    jQuery(\".hot_product .t_con\").slide({ mainCell:\"ul\",vis:4,prevCell:\".sPrev\",nextCell:\".sNext\",effect:\"leftMarquee\",interTime:50,autoPlay:true,trigger:\"click\"});\r\n    jQuery(\".hot_product\").slide({titCell:\".tab_title li\",mainCell:\".hot_p_img\"});\r\n</script>\r\n<!--hezuo-->\r\n<div class=\"hezuo\">\r\n\t<div class=\"hezuo_name\"><big>合作客户</big><a href=\"@(Data.culture)/kehu.html\"><img src=\"@(Data.sitepath)images/more.png\" alt=\"\"/></a></div>\r\n    <div class=\"img-scroll\">\r\n        <span class=\"prev\"></span>\r\n        <span class=\"next\"></span>\r\n        <div class=\"img-list\">\r\n            <ul>\r\n@{\r\ncontentlist = Contents.GetList(Data, 0, \"kehu\", 8);\r\n@foreach (var item in contentlist)\r\n{\r\n    <li><a href=\"@(item.ContentLink)\" target=\"_blank\"><img src=\"@(item.Content_Pic)\" alt=\"@(item.ContentName)\"/><span>@(item.ContentName)</span></a></li>\r\n}\r\n}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <script type=\"text/javascript\" src=\"@(Data.sitepath)js/qiehuan.js\"></script>\r\n</div>\r\n<!--about_us-->\r\n<div class=\"about_us\">\r\n\t<div class=\"about\">\r\n\t\t<div class=\"ab_name\"><big>公司介绍</big><a href=\"@(Data.culture)/about.html\"><img src=\"@(Data.sitepath)images/more.png\" alt=\"\"/></a></div>\r\n        <div class=\"ab_nrong\"><a href=\"@(Data.culture)/about.html\">@Html.Raw(Data.ViewData[\"home-page-introduction\"])</a></div>\r\n\t</div>\r\n    <div class=\"equipment\">\r\n    \t<div class=\"equi_name\"><big>设备展示</big><a href=\"@(Data.culture)/canguan.html\"><img src=\"@(Data.sitepath)images/more.png\" alt=\"\"/></a></div>\r\n        <div class=\"equi_nr\">\r\n        <div id=\"demo\">\r\n            <div id=\"indemo\">\r\n                <div id=\"demo1\">\r\n                \t<ul>\r\n@{\r\ncontentlist = Contents.GetList(Data, 0, \"canguan\", 4);\r\n@foreach (var item in contentlist)\r\n{\r\n<li><a href=\"@(Data.culture)/canguan.html\"><img src=\"@(item.Content_Pic)\" alt=\"@(item.ContentName)\"/><span>@(item.ContentName)</span></a></li>\r\n}\r\n}\r\n                    </ul>\r\n                </div>\r\n                <div id=\"demo2\"></div>\r\n            </div>\r\n        </div>  \r\n        <script>\r\n        <!--\r\n        var speed=20;\r\n        var tab=document.getElementById(\"demo\");\r\n        var tab1=document.getElementById(\"demo1\");\r\n        var tab2=document.getElementById(\"demo2\");\r\n        tab2.innerHTML=tab1.innerHTML;\r\n        function Marquee(){\r\n        if(tab2.offsetWidth-tab.scrollLeft<=0)\r\n        tab.scrollLeft-=tab1.offsetWidth\r\n        else{\r\n        tab.scrollLeft++;\r\n        }\r\n        }\r\n        var MyMar=setInterval(Marquee,speed);\r\n        tab.onmouseover=function() {clearInterval(MyMar)};\r\n        tab.onmouseout=function() {MyMar=setInterval(Marquee,speed)};\r\n        -->\r\n        </script>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--intermediate-->\r\n<div class=\"intermediate\">\r\n\t<div class=\"news\">\r\n    \t<div class=\"news_name\"><big>最新动态</big><a href=\"@(Data.culture)/news.html\"><img src=\"@(Data.sitepath)images/more.png\" alt=\"\"/></a></div>\r\n        <ul>\r\n@{\r\ncontentlist = Contents.GetList(Data, 1, \"news\", 7);\r\n@foreach (var item in contentlist)\r\n{\r\n        \t<li><a href=\"@(Data.culture)/@(item.RoutingUrl).html\"><i></i><font>@(item.ContentName)</font><span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a></li>\r\n}\r\n}\r\n        </ul>\r\n    </div>\r\n    <div class=\"news\">\r\n    \t<div class=\"news_name\"><big>技术文档</big><a href=\"@(Data.culture)/support.html\"><img src=\"@(Data.sitepath)images/more.png\" alt=\"\"/></a></div>\r\n        <ul>\r\n@{\r\ncontentlist = Contents.GetList(Data, 0, \"technical-documentation\", 7);\r\n@foreach (var item in contentlist)\r\n{\r\n        \t<li><a href=\"@(Data.culture)/@(item.RoutingUrl).html\"><i></i><font>@(item.ContentName)</font><span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a></li>\r\n}\r\n}\r\n        </ul>\r\n    </div>\r\n    <div class=\"zhuti\">\r\n\t\t<div class=\"zt1\">\r\n        \t<div class=\"zt1_left\"><img src=\"@(Data.sitepath)pic/zt1.jpg\" alt=\"\"/></div>\r\n            <div class=\"zt1_right\"><big>控制板方案开发提供商</big><small>客户需求+工程确认+开发设计+布板打样+焊板调试+客户确认</small></div>\r\n        </div>\r\n    \t<div class=\"zt2\">\r\n        \t<div class=\"zt2_left\"><big>专业控制板生产厂</big><small>自动印锡+SMT(0201 BGA)+10温区回流焊+AOI检查+DIP双波峰焊+成品QC+精细维修</small></div>\r\n            <div class=\"zt2_right\"><img src=\"@(Data.sitepath)pic/zt2.jpg\" alt=\"\"/></div>\r\n        </div>\r\n    \t<div class=\"zt3\">\r\n        \t<div class=\"zt3_left\"><img src=\"@(Data.sitepath)pic/zt3.jpg\" alt=\"\"/></div>\r\n            <div class=\"zt3_right\"><big>一站式开发生产提供商</big><small>研发+贴片+插件=成品控制板</small></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--links-->\r\n<div class=\"links\">\r\n\t<div class=\"links_name\"><big>友情链接</big></div>\r\n\t<div class=\"links_nr\">@Html.Raw(Data.ViewData[\"friendship-link\"])</div>\r\n</div>\r\n@section scripts{\r\n\r\n}\r\n```"},{"Id":"6587424130","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:01:30","Actor":"Eilon","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329295777","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"Maybe an issue with line endings? How does Razor behave when a single file uses different line endings on different lines? I could see that confusing things...\r\n\r\nE.g.:\r\n\r\n```\r\n{ CR\r\n        \t<li><a href=\"#\"> CR\r\n                    <i></i><font>@(item.Name)</font> CRLF\r\n        \t    <span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a> CRLF\r\n               </li> CR\r\n} CR\r\n```\r\n\r\nOr something like that."},{"Id":"6586755329","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T18:27:38","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329255847","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"Also the line numbers in the errors don't seem to correspond to the razor code above. The errors are all on the same line (162) but the end tag for `a` and `li` are all on different lines."},{"Id":"6586712895","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T18:18:11","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329253215","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"I tried but couldn't reproduce this. @qibucloud, could you include include more of your cshtml? It'll be helpful to know what scope your `<li>` lies in."},{"Id":"6586169362","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:16:49","Actor":"Eilon","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329219586","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"@NTaylorMullen / @ajaybhargavb / @rynowak - any idea on this? Maybe a Razor parser bug? I can't see anything obviously wrong in the syntax above."},{"Id":"6583033626","Type":"IssuesEvent","CreatedAt":"2017-09-13T02:47:25","Actor":"qibucloud","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682","RelatedDescription":"Opened issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"```@foreach (var item in contentlist)\r\n{\r\n        \t<li><a href=\"#\">\r\n                    <i></i><font>@(item.Name)</font>\r\n        \t    <span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a>\r\n               </li>\r\n}\r\n\r\nMicrosoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\r\nindex.cshtml(162,11): Error RZ9999: The \"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\r\nindex.cshtml(162,164): Error RZ9999: Encountered end tag \"a\" with no matching start tag.  Are your start/end tags properly balanced?\r\nindex.cshtml(162,168): Error RZ9999: Encountered end tag \"li\" with no matching start tag.  Are your start/end tags properly balanced?\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)```"},{"Id":"6582699117","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:21:04","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681#discussion_r138498963","RelatedDescription":"Commented on pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"Next PR"},{"Id":"6582698200","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:10:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681#discussion_r138497723","RelatedDescription":"Commented on pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"Where is this called? Or is that coming in the next PR?"},{"Id":"6582544001","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T23:19:01","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1460#issuecomment-329011223","RelatedDescription":"Commented on issue \"@using directive IntelliSense does not auto complete\" (#1460) at aspnet/Razor","RelatedBody":"On a related note (I suspect), extra whitespace after the `@using` directive loses IntelliSense completely. E.g. `@using  System` is displayed in white rather than colourized."},{"Id":"6581240197","Type":"PullRequestEvent","CreatedAt":"2017-09-12T17:37:17","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681","RelatedDescription":"Opened pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"There's still nothing processing the notifications in the background.\r\nThis is all the plumbing for dirty checking and publishing updates."},{"Id":"6581239779","Type":"PushEvent","CreatedAt":"2017-09-12T17:37:11","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/37a90ef484f9cfefbac925f6c5a1d3c3326204dc...7cca8618ea81037290c6d29ed16664a3aeac315c","RelatedDescription":"Pushed to refs/heads/rynowak/mt-2 at aspnet/Razor","RelatedBody":null}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6592932263","Type":"WatchEvent","CreatedAt":"2017-09-14T21:54:34","Actor":"keithnyc","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585692487","Type":"WatchEvent","CreatedAt":"2017-09-13T14:47:20","Actor":"Chris-ZA","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6563238976","Type":"WatchEvent","CreatedAt":"2017-09-07T19:46:57","Actor":"m6t","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6545178208","Type":"WatchEvent","CreatedAt":"2017-09-04T02:21:09","Actor":"foxfu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6544528482","Type":"WatchEvent","CreatedAt":"2017-09-03T17:29:33","Actor":"alefranz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6542239491","Type":"WatchEvent","CreatedAt":"2017-09-02T02:49:33","Actor":"BlueColorDemon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6538082530","Type":"WatchEvent","CreatedAt":"2017-09-01T03:11:44","Actor":"ken1211","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6534627582","Type":"WatchEvent","CreatedAt":"2017-08-31T11:36:46","Actor":"csyszf","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6525086646","Type":"WatchEvent","CreatedAt":"2017-08-29T14:48:04","Actor":"anserk","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516751305","Type":"WatchEvent","CreatedAt":"2017-08-27T13:55:26","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516747587","Type":"WatchEvent","CreatedAt":"2017-08-27T13:52:23","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6512833226","Type":"WatchEvent","CreatedAt":"2017-08-25T15:49:37","Actor":"MattPress","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6509699760","Type":"WatchEvent","CreatedAt":"2017-08-24T22:04:39","Actor":"runebakjacobsen","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6506925369","Type":"WatchEvent","CreatedAt":"2017-08-24T11:03:36","Actor":"cemalshukriev","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"},{"Id":"6498883578","Type":"WatchEvent","CreatedAt":"2017-08-22T19:12:28","Actor":"andregr15","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6495189019","Type":"WatchEvent","CreatedAt":"2017-08-22T03:10:54","Actor":"babtsoualiaksandr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6493226643","Type":"IssueCommentEvent","CreatedAt":"2017-08-21T16:09:19","Actor":"anurse","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Announcements/issues/237#issuecomment-323786938","RelatedDescription":"Commented on issue \"Microsoft.Extensions.PlatformAbstractions has been removed\" (#237) at aspnet/Announcements","RelatedBody":"Note: As part of this change, you could encounter the following error if you build your WebHost by injecting `IStartup` directly into the container, rather than calling `.UseStartup` or `.Configure`:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentException: A valid non-empty application name must be provided.\r\nParameter name: applicationName\r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingEnvironmentExtensions.Initialize(IHostingEnvironment hostingEnvironment, String applicationName, String contentRootPath, WebHostOptions options)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at ConsoleApp11.Program.Main(String[] args) in C:\\Users\\dfowler\\documents\\visual studio 2017\\Projects\\ConsoleApp11\\ConsoleApp11\\Program.cs:line 11\r\n```\r\n\r\nThis occurs because we need to get the name of the application. Previously, we used some heuristics to detect it, but we removed some of them in 2.0. In the scenario above, where `IStartup` is manually injected into the container, add the following call to your `WebHostBuilder` set-up sequence:\r\n\r\n```\r\nWebHost.CreateDefaultBuilder(args)\r\n    // ... other Web Host configuration calls\r\n    .UseSetting(WebHostDefaults.ApplicationKey, \"[Application Name]\")\r\n```\r\n\r\n**NOTE: This is only required in 2.0 and only when you do NOT call `.UseStartup` or `.Configure`**\r\n\r\nSee https://github.com/aspnet/Hosting/issues/1137 for further info."},{"Id":"6487154520","Type":"WatchEvent","CreatedAt":"2017-08-20T04:02:52","Actor":"fahadabdulaziz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6484292850","Type":"WatchEvent","CreatedAt":"2017-08-18T23:29:17","Actor":"DejanMilicic","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481758203","Type":"WatchEvent","CreatedAt":"2017-08-18T16:17:50","Actor":"andreabbondanza","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481116208","Type":"WatchEvent","CreatedAt":"2017-08-18T14:54:17","Actor":"imranakram","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6480883973","Type":"WatchEvent","CreatedAt":"2017-08-18T14:25:21","Actor":"gldraphael","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6473732109","Type":"WatchEvent","CreatedAt":"2017-08-17T16:29:24","Actor":"modulexcite","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6470181527","Type":"WatchEvent","CreatedAt":"2017-08-17T08:23:42","Actor":"svasorcery","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6464186890","Type":"ForkEvent","CreatedAt":"2017-08-16T14:42:02","Actor":"osmarvcneto","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/osmarvcneto/Announcements","RelatedDescription":"Forked aspnet/Announcements to osmarvcneto/Announcements","RelatedBody":null},{"Id":"6462831810","Type":"WatchEvent","CreatedAt":"2017-08-16T11:45:52","Actor":"karelsteinmetz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6461972156","Type":"WatchEvent","CreatedAt":"2017-08-16T09:29:11","Actor":"holysdking","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":25,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":196,"FavoriteCount":158,"RawContent":null},{"Id":"877222209667960834","CreatedAt":"2017-06-20T17:50:47+00:00","UserScreenname":"aspnet","Text":"Check out the latest Code Conversation episode where @LadyNaggaga chats with @BaggaJaspreet about ASPNet Core TagHe… https://t.co/xeyH9UaAso","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2017-09-15T05:30:08.6376631Z","RunDurationInMilliseconds":6812}