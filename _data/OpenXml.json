{"Data":{"Sdk":{"Events":[{"Id":"11766084451","Type":"IssuesEvent","CreatedAt":"2020-03-14T20:28:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/701","RelatedDescription":"Opened issue \"Support non-nullable annotations\" (#701) at OfficeDev/Open-XML-SDK","RelatedBody":"With C# 8.0 and .NET Standard 2.1 (and other supported platforms), APIs can be annotated with nullability information. This issue will track any work to enable this. So far, this would include:\r\n\r\n- [x] Enable C# 8.0 in the project (#698)\r\n- [ ] Enable .NET Standard 2.1\r\n- [ ] Enable nullable annotations in non-.NET Standard 2.1 targets (through some shim to provide attributes that can be stripped out at compile time)"},{"Id":"11766070589","Type":"IssuesEvent","CreatedAt":"2020-03-14T20:24:09","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/644","RelatedDescription":"Closed issue \"How to parse embedded file(OLE obejct) in pptx/docx\" (#644) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [ ] Issue with the OpenXml library\r\n- [X] Question on library usage\r\n\r\nHow to parse embedded files(OLE obejct) in pptx/docx.\r\nThey are Ole objects mostly, like object1.bin.\r\nIf there're any good ways to parse it?\r\n Unzip the OLE object, there're several kinds of format:\r\n![image](https://user-images.githubusercontent.com/20583076/70017644-98380880-15be-11ea-95e4-a966e0bb0dba.png)\r\n![image](https://user-images.githubusercontent.com/20583076/70017651-9cfcbc80-15be-11ea-876a-467a3492bce4.png)\r\n![image](https://user-images.githubusercontent.com/20583076/70017658-9ff7ad00-15be-11ea-8f3d-0ce5bb4afb6c.png)\r\n![image](https://user-images.githubusercontent.com/20583076/70017672-a25a0700-15be-11ea-8d83-f29e9d07cb1f.png)\r\n\r\nDidn't find out a general good way to achieve that.\r\nI check the source code of Tika parser, they extract it in a rule-based method...\r\n```csharp\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n``` \r\n\r\n**Observed**\r\n\r\nPlease add your observed behavior here\r\n\r\n**Expected**\r\n\r\nPlease add your expected behavior here.\r\n"},{"Id":"11766065948","Type":"IssuesEvent","CreatedAt":"2020-03-14T20:22:44","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/672","RelatedDescription":"Closed issue \"CellReference is null\" (#672) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nI have excel files that I'm trying to map but CellReference is null for each cell but, if I Open the file with Microsoft Office and save, after that if I try to map again CellReference is not null for each cell. I think is a bug in the library.\r\n\r\n**Information**\r\n\r\n- .NET Target: netstandard2.0\r\n- DocumentFormat.OpenXml Version: 2.9.0\r\n\r\n**Expected**\r\n\r\nCellReference not null for all the case\r\n"},{"Id":"11765203639","Type":"PullRequestEvent","CreatedAt":"2020-03-14T16:19:03","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/698","RelatedDescription":"Merged pull request \"Add Obsolete to OpenXmlAttribute setters\" (#698) at OfficeDev/Open-XML-SDK","RelatedBody":"This change takes advantage of a C# 8.0 features that allows obsolete messages for setters independent of the getter. Since `OpenXmlAttribute` is an attribute, we should remove the setters from it so the attribute becomes immutable. That's a breaking change, so we'll mark it as obsolete, and the next major version will remove it."},{"Id":"11762053899","Type":"IssuesEvent","CreatedAt":"2020-03-13T23:44:26","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/699","RelatedDescription":"Closed issue \"Please update the SDK to support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1\" (#699) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [ ] Issue with the OpenXml library\r\n- [x] Question/Proposal on library usage\r\n\r\n**Description**\r\nPlease update the SDK to support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1, because current library only support .NET Standard before .NET Standard 2.0. \r\nThese .NET Standard before 1.6 needs more API surface referenced as nuget packages. Therefore We need to add supports for .NET Standard 2.0, .NET Standard 2.1 and hopefully .NET Core 3.1 as well, as .NET Core 3.0 has reached end of support.\r\n**Information**\r\n\r\n- .NET Target: (ie .NET Framework, .NET Core, UWP, Xamarin, etc)\r\n- DocumentFormat.OpenXml Version: (ie 2.7.2)\r\n\r\n**Repro**\r\n\r\n```csharp\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n``` \r\n\r\n**Observed**\r\n\r\nN/A, this is a proposal to update SDK to support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1\r\n\r\n**Expected**\r\n\r\nOpen XML SDK support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1\r\n"},{"Id":"11760859920","Type":"PullRequestEvent","CreatedAt":"2020-03-13T20:33:32","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/700","RelatedDescription":"Opened pull request \"Generate code with new roslyn based generator\" (#700) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11736079332","Type":"IssuesEvent","CreatedAt":"2020-03-11T12:24:42","Actor":"eriawan","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/699","RelatedDescription":"Opened issue \"Please update the SDK to support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1\" (#699) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [ ] Issue with the OpenXml library\r\n- [x] Question/Proposal on library usage\r\n\r\n**Description**\r\nPlease update the SDK to support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1, because current library only support .NET Standard before .NET Standard 2.0. \r\nThese .NET Standard before 1.6 needs more API surface referenced as nuget packages. Therefore We need to add supports for .NET Standard 2.0, .NET Standard 2.1 and hopefully .NET Core 3.1 as well, as .NET Core 3.0 has reached end of support.\r\n**Information**\r\n\r\n- .NET Target: (ie .NET Framework, .NET Core, UWP, Xamarin, etc)\r\n- DocumentFormat.OpenXml Version: (ie 2.7.2)\r\n\r\n**Repro**\r\n\r\n```csharp\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n``` \r\n\r\n**Observed**\r\n\r\nN/A, this is a proposal to update SDK to support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1\r\n\r\n**Expected**\r\n\r\nOpen XML SDK support .NET Standard 2.0, .NET Standard 2.1, and .NET Core 3.1\r\n"},{"Id":"11731352540","Type":"PullRequestEvent","CreatedAt":"2020-03-10T23:50:48","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/698","RelatedDescription":"Opened pull request \"Add Obsolete to OpenXmlAttribute setters\" (#698) at OfficeDev/Open-XML-SDK","RelatedBody":"This change takes advantage of a C# 8.0 features that allows obsolete messages for setters independent of the getter. Since `OpenXmlAttribute` is an attribute, we should remove the setters from it so the attribute becomes immutable. That's a breaking change, so we'll mark it as obsolete, and the next major version will remove it."},{"Id":"11724126910","Type":"IssuesEvent","CreatedAt":"2020-03-10T10:22:34","Actor":"MoamenMohamed93","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/697","RelatedDescription":"Opened issue \"Excel Validation reporting 0 errors on invalid document\" (#697) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [X] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nInvalid Excel document that shows error message \"We found a problems with some content....\" while opening using Microsoft Excel 2019 is reported as valid by Open XML SDK Validator.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 3.1\r\n- DocumentFormat.OpenXml Version:  (2.10.1)\r\n\r\n**Repro**\r\n\r\nCreate a Cell with string value and data type set to **Number**. \r\nValidate the created excel using OpenXmlValidator return no errors.\r\n\r\n**Expected**\r\n\r\nThe validation results contain errors."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-03-15T05:30:48.1083348Z","RunDurationInMilliseconds":1438}