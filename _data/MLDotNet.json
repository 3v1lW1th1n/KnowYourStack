{"Data":{"GitHub":{"Issues":[{"Id":"439706655","IsPullRequest":true,"CreatedAt":"2019-05-03T23:17:07","Actor":"Anipik","Number":"3649","RawContent":null,"Title":"[Donet Review] [Just for testing]pascal casing","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3649","RelatedDescription":"Closed or merged PR \"[Donet Review] [Just for testing]pascal casing\" (#3649)"},{"Id":"439850957","IsPullRequest":true,"CreatedAt":"2019-05-03T22:18:11","Actor":"Dmitry-A","Number":"3658","RawContent":null,"Title":"[AutoML] bump version to 0.4.0","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3658","RelatedDescription":"Closed or merged PR \"[AutoML] bump version to 0.4.0\" (#3658)"},{"Id":"440215004","IsPullRequest":false,"CreatedAt":"2019-05-03T20:45:18","Actor":"eerhardt","Number":"3663","RawContent":null,"Title":"[Extensions.ML] AddPredictionEnginePool should support models as embedded resources","State":"open","Body":"Today AddPredictionEnginePool supports `FromFile` and `FromUri`. Another scenario is to add the ML model as an embedded resource in a project, so you don't have to worry about copying and finding a file - it will always be in the code assembly. Or potentially you may have different models for different languages, and you can replace the resource depending on the current culture.\r\n\r\nWe should add suport for embedded resource files to Extensions.ML.","Url":"https://github.com/dotnet/machinelearning/issues/3663","RelatedDescription":"Open issue \"[Extensions.ML] AddPredictionEnginePool should support models as embedded resources\" (#3663)"},{"Id":"440209057","IsPullRequest":false,"CreatedAt":"2019-05-03T20:28:30","Actor":"eerhardt","Number":"3662","RawContent":null,"Title":"[AutoML] Generated model file should target netstandard2.0","State":"open","Body":"Using `mlnet auto-train`, the generated `.Model` file should target `netstandard2.0`. Currently it is targeting `netcoreapp2.1` which is not correct.\r\n\r\nML.NET supports a lot of app types - .NET Core is just one of them. The model project should be targeting netstandard.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/b5438d1dcdce7059d88f5c17e16be4aabfaec3bd/src/mlnet/Templates/Console/ModelProject.tt#L8-L10","Url":"https://github.com/dotnet/machinelearning/issues/3662","RelatedDescription":"Open issue \"[AutoML] Generated model file should target netstandard2.0\" (#3662)"},{"Id":"440034105","IsPullRequest":false,"CreatedAt":"2019-05-03T12:57:59","Actor":"sergey-tihon","Number":"3661","RawContent":null,"Title":"Data.SaveToTextFile","State":"open","Body":"I do classification of MS Office document, in my case `feature generation` is relatively slow process, that why I want to do in once and save my data set to file like `data.tsv` and then experiment with different models and parameters.\r\n\r\nLet's say we I defined model class\r\n```csharp\r\nprivate class IrisInputAllFeatures\r\n{\r\n    [ColumnName(\"Label\"), LoadColumn(4)]\r\n    public string IgnoredLabel { get; set; }\r\n\r\n    [LoadColumn(0, 3)]\r\n    public float Features { get; set; }\r\n}\r\n```\r\n\r\nthen I wrote the code that generate / export data\r\n\r\n```csharp\r\nvar dataSet = new [] {\r\n   new IrisInputAllFeatures() { ... },\r\n   new IrisInputAllFeatures() { ... } \r\n}\r\n```\r\n\r\nthe next thing that I expect is to be able to save all my data in file in format supported by `LoadFromTextFile` method (to be able reuse `IrisInputAllFeatures` class in both places),  like\r\n\r\n```csharp\r\nData.SaveToTextFile(\"DataSet.tsv\", dataSet);\r\n```\r\n\r\nIs there a way to save data to the file based on `ColumnName`, `LoadColumn` attributes?","Url":"https://github.com/dotnet/machinelearning/issues/3661","RelatedDescription":"Open issue \"Data.SaveToTextFile\" (#3661)"},{"Id":"440031596","IsPullRequest":false,"CreatedAt":"2019-05-03T12:51:24","Actor":"dbaechtel","Number":"3660","RawContent":null,"Title":"No Wiki. Lack of documentation.","State":"open","Body":"### System information\r\n\r\nany\r\n\r\n### Issue\r\n\r\nNo Wiki. \r\nLack of documentation.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3660","RelatedDescription":"Open issue \"No Wiki. Lack of documentation.\" (#3660)"},{"Id":"439943132","IsPullRequest":false,"CreatedAt":"2019-05-03T08:36:08","Actor":"rauhs","Number":"3659","RawContent":null,"Title":"LightGBM error when using UseCat with count Feature selection","State":"open","Body":"### Issue\r\n\r\nversion: 0.11\r\n\r\n- **What did you do?**\r\n1. I trained a LightGBM multi-class classifier with `UseCat` to `true`.\r\n1. I added a `SelectFeaturesBasedOnCount` on the final `Features`.\r\n\r\nIf it matters: I also use early stopping (does this prune some trees?).\r\n\r\n- **What happened?**\r\n\r\nI got an exception after training was done (successfully) and ML.NET tries to construct the `InternalRegressionTree`:\r\n```\r\nSystem.InvalidOperationException: 'Categorical split features is zero length'\r\n```\r\n\r\nStack\r\n```\r\n>\tMicrosoft.ML.Core.dll!Microsoft.ML.Contracts.Check(bool f, string msg) Line 491\tC#\r\n \tMicrosoft.ML.FastTree.dll!Microsoft.ML.Trainers.FastTree.InternalRegressionTree.CheckValid(System.Action<bool, string> checker) Line 471\tC#\r\n \tMicrosoft.ML.FastTree.dll!Microsoft.ML.Trainers.FastTree.InternalRegressionTree.InternalRegressionTree(int[] splitFeatures, double[] splitGain, double[] gainPValue, float[] rawThresholds, float[] defaultValueForMissing, int[] lteChild, int[] gtChild, double[] leafValues, int[][] categoricalSplitFeatures, bool[] categoricalSplit) Line 224\tC#\r\n \tMicrosoft.ML.FastTree.dll!Microsoft.ML.Trainers.FastTree.InternalRegressionTree.Create(int numLeaves, int[] splitFeatures, double[] splitGain, float[] rawThresholds, float[] defaultValueForMissing, int[] lteChild, int[] gtChild, double[] leafValues, int[][] categoricalSplitFeatures, bool[] categoricalSplit) Line 188\tC#\r\n \tMicrosoft.ML.LightGBM.dll!Microsoft.ML.LightGBM.Booster.GetModel(int[] categoricalFeatureBoudaries) Line 257\tC#\r\n \tMicrosoft.ML.LightGBM.dll!Microsoft.ML.LightGBM.LightGbmTrainerBase<Microsoft.ML.Data.VBuffer<float>, Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.TrainCore(Microsoft.ML.IChannel ch, Microsoft.ML.IProgressChannel pch, Microsoft.ML.LightGBM.Dataset dtrain, Microsoft.ML.LightGBM.LightGbmTrainerBase<Microsoft.ML.Data.VBuffer<float>, Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.CategoricalMetaData catMetaData, Microsoft.ML.LightGBM.Dataset dvalid) Line 375\tC#\r\n \tMicrosoft.ML.LightGBM.dll!Microsoft.ML.LightGBM.LightGbmTrainerBase<Microsoft.ML.Data.VBuffer<float>, Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.TrainModelCore(Microsoft.ML.TrainContext context) Line 117\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Trainers.TrainerEstimatorBase<Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.TrainTransformer(Microsoft.Data.DataView.IDataView trainSet, Microsoft.Data.DataView.IDataView validationSet, Microsoft.ML.IPredictor initPredictor) Line 148\tC#\r\n \tMlnEval.exe!ConsoleApp1.MlNetSpecific.MlNetLightGbmMultiClassTrainer.TrainAndEval(ConsoleApp1.Dev.AppState app) Line 107\tC#\r\n \tMlnEval.exe!ConsoleApp1.Program.Main(string[] args) Line 116\tC#\r\n\r\n```\r\n\r\nUnfortunately I failed to come up with a minimal reproducible example. Seems this requires a certain data setup.\r\n\r\n### Partial analysis\r\n\r\nIt looks like here:\r\nhttps://github.com/dotnet/machinelearning/blob/c5aab770622f1f56bddf8bbaf96f7798762c45ff/src/Microsoft.ML.LightGbm/WrappedLightGbmBooster.cs#L236-L251\r\n\r\n`cats` array is actually 0 length but `categoricalSplit[node]` is still set to true.\r\n\r\nwhich then later on will throw here:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/c5aab770622f1f56bddf8bbaf96f7798762c45ff/src/Microsoft.ML.FastTree/TreeEnsemble/InternalRegressionTree.cs#L465-L469\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3659","RelatedDescription":"Open issue \"LightGBM error when using UseCat with count Feature selection\" (#3659)"},{"Id":"439841782","IsPullRequest":true,"CreatedAt":"2019-05-03T01:27:17","Actor":"Dmitry-A","Number":"3657","RawContent":null,"Title":"[AutoML] undo temp change in build.proj","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3657","RelatedDescription":"Closed or merged PR \"[AutoML] undo temp change in build.proj\" (#3657)"},{"Id":"439833986","IsPullRequest":true,"CreatedAt":"2019-05-03T00:02:43","Actor":"Dmitry-A","Number":"3656","RawContent":null,"Title":"[AutoML] temp change to get around vsts publish failure","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3656","RelatedDescription":"Closed or merged PR \"[AutoML] temp change to get around vsts publish failure\" (#3656)"},{"Id":"439802435","IsPullRequest":true,"CreatedAt":"2019-05-02T22:20:04","Actor":"Dmitry-A","Number":"3655","RawContent":null,"Title":"[AutoML] Change wording for CouldNotFinshOnTime message","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3655","RelatedDescription":"Closed or merged PR \"[AutoML] Change wording for CouldNotFinshOnTime message\" (#3655)"},{"Id":"439789900","IsPullRequest":false,"CreatedAt":"2019-05-02T21:09:49","Actor":"pkumar07","Number":"3654","RawContent":null,"Title":"Add AVX intrinsics implementation for Factorization Machine","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 version 1709\r\n- **.NET Version (eg., dotnet --info)**: 3.0.100-preview-010184\r\n\r\n### Issue\r\n\r\nI'm trying to add C++ AVX intrinsics implementation for Factorization Machine and doing a dynamic dispatch from `FactorizationMachineInterface.cs`. I'm using `Avx.IsSupported` to check for AVX support and then call the `CalculateGradientAndUpdateNativeAVX/SSE` function declared as an extern.\r\n\r\nThe build fails with the following error for netcoreapp3.0. Would appreciate your suggestions to fix this.\r\n\r\n![buildfail](https://user-images.githubusercontent.com/22417834/57106643-cd0b7680-6ce2-11e9-855a-3d763580a535.PNG)\r\n\r\n\r\n### Source code / logs\r\n\r\nHere is the Microsoft.ML.StandardTrainers.csproj snippet I'm using:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework Condition=\"'$(UseIntrinsics)' != 'true'\">netstandard2.0</TargetFramework>\r\n    <TargetFrameworks Condition=\"'$(UseIntrinsics)' == 'true'\">netstandard2.0;netcoreapp3.0</TargetFrameworks>\r\n    <IncludeInPackage>Microsoft.ML</IncludeInPackage>\r\n    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\r\n    <LangVersion>7.3</LangVersion>\r\n    <DebugType>pdbonly</DebugType>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj\" />\r\n    <ProjectReference Include=\"..\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj\" />\r\n    <ProjectReference Include=\"..\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">\r\n    <Compile Remove=\"FactorizationMachine/FactorizationMachineInterface.netstandard.cs\" />\r\n    <PackageReference Include=\"System.Runtime.CompilerServices.Unsafe\" Version=\"4.5.2\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">\r\n    <Compile Remove=\"FactorizationMachine/FactorizationMachineInterface.netcoreapp.cs\" />\r\n    <PackageReference Include=\"System.Memory\" Version=\"$(SystemMemoryVersion)\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nFYI: \r\nThe build fails when targeting to netcoreapp3.0 even with no modifications to the source code. i.e. \r\n```<TargetFramework>netstandard2.0</TargetFramework>```\r\nto\r\n``` <TargetFrameworks>netstandard2.0;netcoreapp3.0</TargetFrameworks>```\r\n\r\n@glebuk @singlis ","Url":"https://github.com/dotnet/machinelearning/issues/3654","RelatedDescription":"Open issue \"Add AVX intrinsics implementation for Factorization Machine\" (#3654)"},{"Id":"439528223","IsPullRequest":false,"CreatedAt":"2019-05-02T20:25:57","Actor":"dorofino","Number":"3646","RawContent":null,"Title":"Score Range","State":"closed","Body":"Hi,  ","Url":"https://github.com/dotnet/machinelearning/issues/3646","RelatedDescription":"Closed issue \"Score Range\" (#3646)"},{"Id":"439719009","IsPullRequest":true,"CreatedAt":"2019-05-02T19:32:09","Actor":"codemzs","Number":"3651","RawContent":null,"Title":"Adds missing license headers.","State":"closed","Body":"In addition to #3645, I wrote a small C# program to open every \".cs\" file in src directory and read the first non-null/empty line and compare it against \"// Licensed to the .NET Foundation under one or more agreements.\" and found few more places where license was missing. \r\n\r\n```csharp\r\npublic static class Program\r\n    {\r\n        public static void Main(string[] args) => RunAll(@\"E:\\machinelearning\\src\");\r\n\r\n        internal static void RunAll(string sDir)\r\n        {\r\n           foreach (string d in Directory.GetDirectories(sDir))\r\n            {\r\n                foreach (string f in Directory.GetFiles(d))\r\n                {\r\n                    if (Path.GetExtension(f) == \".cs\" || Path.GetExtension(f) == \".tt\")\r\n                    {\r\n                        using (var fileStream = File.OpenRead(f))\r\n                        using (var streamReader = new StreamReader(fileStream, Encoding.UTF8, true))\r\n                        {\r\n                            string line;\r\n                            while ((line = streamReader.ReadLine()) != null)\r\n                            {\r\n                                if(String.IsNullOrEmpty(line))\r\n                                    continue;\r\n\r\n                                if (line !=\r\n                                    @\"// Licensed to the .NET Foundation under one or more agreements.\")\r\n                                {\r\n                                    Console.WriteLine(f + \" : \" + line);\r\n                                }\r\n\r\n                                break;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                RunAll(d);\r\n            }\r\n        }\r\n    }\r\n```","Url":"https://github.com/dotnet/machinelearning/pull/3651","RelatedDescription":"Closed or merged PR \"Adds missing license headers.\" (#3651)"},{"Id":"439734076","IsPullRequest":true,"CreatedAt":"2019-05-02T18:47:32","Actor":"srsaggam","Number":"3653","RawContent":null,"Title":"[AutoML] Cleaner way to exit the main()","State":"open","Body":"We could just return the exit code from main()\r\nInstead of Environment.Exit(exitcode)\r\n\r\nThe reason it wasn't working before was the fact that we were spawning foreground threads.\r\n\r\nIt seems to be the standard.\r\nhttps://github.com/dotnet/cli/blob/21cda4adb6d88d240978e24fcfeb3ebe73f5fdd7/src/dotnet/Program.cs#L30-L83\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3653","RelatedDescription":"Open PR \"[AutoML] Cleaner way to exit the main()\" (#3653)"},{"Id":"439730040","IsPullRequest":true,"CreatedAt":"2019-05-02T18:37:49","Actor":"srsaggam","Number":"3652","RawContent":null,"Title":"[AutoML] Cleaner way to exit the process","State":"closed","Body":"More cleaner way to exit the main.\r\n\r\nThe reason why return from main wasn't working before was due to the fact that we have spawned foreground threads.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3652","RelatedDescription":"Closed or merged PR \"[AutoML] Cleaner way to exit the process\" (#3652)"},{"Id":"439716132","IsPullRequest":false,"CreatedAt":"2019-05-02T18:01:18","Actor":"Anipik","Number":"3650","RawContent":null,"Title":"Azure badges stopped working on Readme.md","State":"open","Body":"The azure badges links on the readme  seems to be broken.\r\n\r\nThe problem seem to be in the last ``` Configuration parameter``` because links are working if we remove the last query parameter.\r\n\r\neg https://dnceng.visualstudio.com/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=master&jobname=Ubuntu_x64_Netcoreapp21\r\n\r\ngives the correct output but \r\nhttps://dnceng.visualstudio.com/public/_apis/build/status/dotnet/machinelearning/MachineLearning-CI?branchName=master&jobname=Ubuntu_x64_Netcoreapp21&configuration=Debug_Build\r\n\r\ndoesnt give the desired output.\r\n\r\n\r\nThey were working earlier and there hasn't been any change in the .yml files or readme during that time.\r\n\r\n\r\n@safern @chcosta @eerhardt any suggestions on what could be the problem here ?\r\n\r\ncc @shauheen ","Url":"https://github.com/dotnet/machinelearning/issues/3650","RelatedDescription":"Open issue \"Azure badges stopped working on Readme.md\" (#3650)"},{"Id":"439364696","IsPullRequest":true,"CreatedAt":"2019-05-02T17:49:07","Actor":"srsaggam","Number":"3641","RawContent":null,"Title":"[AutoML] Early stopping in CLI based on the exploration time","State":"closed","Body":"Also fixes https://github.com/dotnet/machinelearning-automl/issues/253","Url":"https://github.com/dotnet/machinelearning/pull/3641","RelatedDescription":"Closed or merged PR \"[AutoML] Early stopping in CLI based on the exploration time\" (#3641)"},{"Id":"439451760","IsPullRequest":true,"CreatedAt":"2019-05-02T17:09:41","Actor":"shauheen","Number":"3645","RawContent":null,"Title":"Adds missing license headers","State":"closed","Body":"Adding the license header to files that were missing it","Url":"https://github.com/dotnet/machinelearning/pull/3645","RelatedDescription":"Closed or merged PR \"Adds missing license headers\" (#3645)"},{"Id":"439409847","IsPullRequest":true,"CreatedAt":"2019-05-02T14:10:08","Actor":"srsaggam","Number":"3644","RawContent":null,"Title":"[AutoML] Upgrade ml.net package in generated code","State":"closed","Body":"Upgrading to 1.0.0 version in generated code. Since soon its gonna be available in nuget.org.","Url":"https://github.com/dotnet/machinelearning/pull/3644","RelatedDescription":"Closed or merged PR \"[AutoML] Upgrade ml.net package in generated code\" (#3644)"},{"Id":"439552334","IsPullRequest":false,"CreatedAt":"2019-05-02T11:54:40","Actor":"rauhs","Number":"3648","RawContent":null,"Title":"Softmax implementation in OneVersusAllModelParameters returns NaN even for scores of ~90.0f","State":"open","Body":"version: 0.11\r\n\r\nThis implementation:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/5163413f3cfab430e49f6fb2a690c160fde46b58/src/Microsoft.ML.StandardTrainers/Standard/MulticlassClassification/OneVersusAllTrainer.cs#L741-L752\r\n\r\nwill result in `NaN` as the output even for moderate scores of around 90f:\r\n\r\n```C#\r\n      var foo = new[] { 90f, 2, -2f };\r\n      NormalizeSoftmax(foo, 3);\r\n```\r\n\r\nSeen very easily in the debugger (the float cast will result in `Inf`). I'm getting back a score of roughly 102 for some of my data sets and models. Though they're extremely rare.","Url":"https://github.com/dotnet/machinelearning/issues/3648","RelatedDescription":"Open issue \"Softmax implementation in OneVersusAllModelParameters returns NaN even for scores of ~90.0f\" (#3648)"},{"Id":"439545569","IsPullRequest":false,"CreatedAt":"2019-05-02T11:34:56","Actor":"rauhs","Number":"3647","RawContent":null,"Title":"LightGBM Save/Load round trip loses Softmax OneVersusAllModelParameters","State":"open","Body":"version: 0.11\r\n\r\nRelated: #1424\r\n\r\nWhen training a softmax Multi classifier with LightGBM a save/load will lose the softmax it seems:\r\n\r\nAlso inspecting the model we can see it doesn't use `ImplSoftmax` but `ImplRaw`.\r\n\r\nReproduce:\r\n\r\n```C#\r\n    public class GenericSample\r\n    {\r\n      public string A { get; set; }\r\n      public string Label { get; set; }\r\n    }\r\n    public static void ReproduceLightGbmPersistanceBug()\r\n    {\r\n      var data = Enumerable.Range(1, 100).Select(x => new GenericSample { A = $\"{x % 20}\", Label = $\"{x % 10}\" });\r\n      var ctx = new MLContext();\r\n\r\n      var options = new Options {\r\n        UseSoftmax = true,\r\n      };\r\n      var pipe = ctx.Transforms.Categorical.OneHotEncoding(\"A\")\r\n        .Append(ctx.Transforms.Concatenate(\"Features\", \"A\"))\r\n        .Append(ctx.Transforms.Conversion.MapValueToKey(\"Label\"))\r\n        .Append(ctx.MulticlassClassification.Trainers.LightGbm(options));\r\n      var dataView = ctx.Data.LoadFromEnumerable(data);\r\n      ITransformer model = pipe.Fit(dataView);\r\n      var scores = model.Transform(dataView).GetColumn<float[]>(ctx,\"Score\");\r\n\r\n      Console.WriteLine($\"Min: {scores.Select(x => x.Min()).Min()}\");\r\n      Console.WriteLine($\"Max: {scores.Select(x => x.Max()).Max()}\");\r\n\r\n      var memoryStream = new MemoryStream();\r\n      ctx.Model.Save(model, memoryStream);\r\n      model = ctx.Model.Load(memoryStream);\r\n\r\n      scores = model.Transform(dataView).GetColumn<float[]>(ctx,\"Score\");\r\n      Console.WriteLine($\"Min: {scores.Select(x => x.Min()).Min()}\");\r\n      Console.WriteLine($\"Max: {scores.Select(x => x.Max()).Max()}\");\r\n    }\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nMin: 0.001027671\r\nMax: 0.9907509\r\nMin: -4.843706\r\nMax: 2.027462\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3647","RelatedDescription":"Open issue \"LightGBM Save/Load round trip loses Softmax OneVersusAllModelParameters\" (#3647)"},{"Id":"439366996","IsPullRequest":true,"CreatedAt":"2019-05-01T23:39:41","Actor":"daholste","Number":"3643","RawContent":null,"Title":"[AutoML] InferColumns API that consumes label column index -- only rename label column to 'Label' for headerless files","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3643","RelatedDescription":"Closed or merged PR \"[AutoML] InferColumns API that consumes label column index -- only rename label column to 'Label' for headerless files\" (#3643)"},{"Id":"439365958","IsPullRequest":true,"CreatedAt":"2019-05-01T23:23:18","Actor":"Dmitry-A","Number":"3642","RawContent":null,"Title":"[AutoML] step 2 of removing pinned nupkg versions","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3642","RelatedDescription":"Closed or merged PR \"[AutoML] step 2 of removing pinned nupkg versions\" (#3642)"},{"Id":"439358491","IsPullRequest":true,"CreatedAt":"2019-05-01T23:19:44","Actor":"Dmitry-A","Number":"3640","RawContent":null,"Title":"[AutoML] set exploration time default in CLI to half hour","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3640","RelatedDescription":"Closed or merged PR \"[AutoML] set exploration time default in CLI to half hour\" (#3640)"},{"Id":"439349272","IsPullRequest":true,"CreatedAt":"2019-05-01T22:38:59","Actor":"Dmitry-A","Number":"3639","RawContent":null,"Title":"[AutoML] undo pinning ML.NET dependency","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3639","RelatedDescription":"Closed or merged PR \"[AutoML] undo pinning ML.NET dependency\" (#3639)"},{"Id":"439279497","IsPullRequest":false,"CreatedAt":"2019-05-01T21:04:02","Actor":"codemzs","Number":"3638","RawContent":null,"Title":"Download files only if they are not present on disk.","State":"closed","Body":"In addition to wastage of network and other computing resources this also causes issues when an a Bitmap object is holding a write lock on an image and download tries to overwrite that image and results in file in use exception.","Url":"https://github.com/dotnet/machinelearning/issues/3638","RelatedDescription":"Closed issue \"Download files only if they are not present on disk.\" (#3638)"},{"Id":"439208542","IsPullRequest":true,"CreatedAt":"2019-05-01T16:11:29","Actor":"eerhardt","Number":"3637","RawContent":null,"Title":"Update ML.NET version in Extensions.ML","State":"closed","Body":"Reference the latest ML.NET.","Url":"https://github.com/dotnet/machinelearning/pull/3637","RelatedDescription":"Closed or merged PR \"Update ML.NET version in Extensions.ML\" (#3637)"},{"Id":"439192572","IsPullRequest":true,"CreatedAt":"2019-05-01T15:59:28","Actor":"eerhardt","Number":"3636","RawContent":null,"Title":"Merge release into integration","State":"closed","Body":"Merging `release/1.0` into `features/IntegrationPackage`. This will allow for the Extensions.ML package to be published to myget.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3636","RelatedDescription":"Closed or merged PR \"Merge release into integration\" (#3636)"},{"Id":"439049118","IsPullRequest":true,"CreatedAt":"2019-05-01T04:37:47","Actor":"srsaggam","Number":"3634","RawContent":null,"Title":"[AutoML] Rename classes in generated project.","State":"closed","Body":"@asthana86 @CESARDELATORRE @rustd  Have requested this change for //Build.\r\n\r\nSampleObservation -> ModelInput\r\nSamplePrediction -> ModelOutput\r\n\r\nI have changed the classes and internals to reflect this.\r\n\r\n@justinormont  Could you update your CLI once this PR is merged and continue to work with that version. \r\n\r\ncc: @rjoshi @vinodshanbhag ","Url":"https://github.com/dotnet/machinelearning/pull/3634","RelatedDescription":"Closed or merged PR \"[AutoML] Rename classes in generated project.\" (#3634)"},{"Id":"439050299","IsPullRequest":true,"CreatedAt":"2019-05-01T04:29:38","Actor":"najeeb-kazmi","Number":"3635","RawContent":null,"Title":"Latex fixes","State":"closed","Body":"Fixing scoring function documentation for:\r\n\r\n- FieldAwareFactorizationMachineTrainer\r\n- KMeansTrainer\r\n- LbfgsMaximumEntropyMulticlassTrainer\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3635","RelatedDescription":"Closed or merged PR \"Latex fixes\" (#3635)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-05-04T05:30:32.0052868Z","RunDurationInMilliseconds":686}