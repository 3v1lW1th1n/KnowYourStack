{"Data":{"GitHub":{"Issues":[{"Id":"547504835","IsPullRequest":true,"CreatedAt":"2020-01-10T05:18:45","Actor":"hughbe","Number":"2675","RawContent":null,"Title":"Cleanup EM_ constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup EM_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2675)","Url":"https://github.com/dotnet/winforms/pull/2675","RelatedDescription":"Closed or merged PR \"Cleanup EM_ constants\" (#2675)"},{"Id":"547733996","IsPullRequest":false,"CreatedAt":"2020-01-09T21:29:10","Actor":"TendyTree","Number":"2680","RawContent":null,"Title":"HashTable Refrences to control Unable to be Cleared in HelpProvider.CS/ Documentation error","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n**Framework 4.5**\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\nYes\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nI have a form with a single instance of a help provider. On this form I dynamical create and destroy buttons, which on creation I assign a it a SetHelpString and add it to a flow layout panel. On a deletion of a buttons I have no way to remove the control from the hash table reference on the help provider even with calling ResetShowHelp, leading to the hash table growing in memory, specifically _helpStrings( This could also affect the other hash tables as well)\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nCalling ResetShowHelp does not clear the control from all the hash tables, leading to the hash table growing in memory, specifically _helpStrings( This could also affect the other hash tables as well)\r\n**Expected behavior:**\r\nAccording to the .Net Docs\r\n\r\n`ResetShowHelp(Control) | Removes the Help associated with the specified control.` \r\n\r\nThis only remove the the control from the _showHelp Hashtable, shown in the code bellow. The expected out come would be that it to removes all references to that HelpProvider for that specific control\r\n\r\n\r\n**Minimal repro:**\r\nHelpProvider.cs\r\n\r\n        private readonly Hashtable _helpStrings = new Hashtable();\r\n        private readonly Hashtable _showHelp = new Hashtable();\r\n        private readonly Hashtable _boundControls = new Hashtable();\r\n        private readonly Hashtable _keywords = new Hashtable();\r\n        private readonly Hashtable _navigators = new Hashtable();\r\n\r\n\r\n\r\n        public virtual void ResetShowHelp(Control ctl)\r\n        {\r\n            if (ctl == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(ctl));\r\n            }\r\n\r\n            _showHelp.Remove(ctl);\r\n        }\r\n","Url":"https://github.com/dotnet/winforms/issues/2680","RelatedDescription":"Open issue \"HashTable Refrences to control Unable to be Cleared in HelpProvider.CS/ Documentation error\" (#2680)"},{"Id":"547658783","IsPullRequest":true,"CreatedAt":"2020-01-09T18:55:20","Actor":"weltkante","Number":"2679","RawContent":null,"Title":"[WIP] Improve PaddingConverter CreateInstance implementation","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2677\r\n\r\n## Proposed changes\r\n\r\n- The context argument may be null for callers other than the PropertyGrid, this should not lead to an exception, in particular since `GetCreateInstanceSupported` returns true for a null context. Also every other implementation of CreateInstance I could find in WinForms and System.Drawing supports a null context, so PaddingConverter is an outlier.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Callers which depend on an exception being thrown in a previously unsupported scenario will no longer see an exception\r\n\r\n### Before\r\n\r\n- `PaddingConverter.CreateInstance(null, properties)` throws an exception even though `PaddingConverter.GetCreateInstanceSupported(null)` returns true\r\n\r\n### After\r\n\r\n- `PaddingConverter.CreateInstance(null, properties)` creates an instance based on the given properties like any other TypeConverter defined in WinForms and System.Drawing\r\n\r\n## Test methodology\r\n\r\n- Tests have not been updated yet, this is WIP for discussion\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2679)","Url":"https://github.com/dotnet/winforms/pull/2679","RelatedDescription":"Open PR \"[WIP] Improve PaddingConverter CreateInstance implementation\" (#2679)"},{"Id":"547637997","IsPullRequest":true,"CreatedAt":"2020-01-09T18:11:07","Actor":"Logerfo","Number":"2678","RawContent":null,"Title":"Null Reference Types for System.Windows.Forms","State":"open","Body":"Fixes #1107.\r\nI'm not sure if `master` is the right target branch here...\r\n\r\n## Proposed changes\r\nAs suggested by @drewnoakes, I added the `<Nullable>enable</Nullable>` attribute to the `System.Windows.Forms.csproj` file and the `#nullable disable` directive to each and every `.cs` file, after their headers. I'm not sure if (or when) other projects in this solution should also be considered. (See #2676).\r\nThe goal is to remove the directive file by file, enabling the nullable reference types and fixing the resultant warnings gradually.\r\nIn case we need it, another suggestion from @drewnoakes is the usage of the `#nullable enable annotations` directive in cases where full compliance would be complex to achieve, but still being able to annotate the API surface.\r\nI chose to start with a very common file: `Control.cs`, which is already refactored in order to comply with NRT without warnings in this branch. This doesn't mean the file is not subject anymore: as more files get refactored, already refactored files might need to be revisited, since non-obvious nullable references might become obvious.\r\nSome (but not all) \"dammit\" operators (`!`) and suppressions hides possible null reference exceptions, which I didn't care to touch in order to maintain the current behavior. If it's of the maintainers interested to fix those, the work will be greater.\r\nIt comes to my mind that auto-generation codes also have to be refactored in order to avoid already warned generated codes. I don't know in which project the code generation codes are.\r\nI also think it's very important to keep this branch always up to date, periodically rebasing it and fixing merge conflicts as they are acknowledged.\r\nI encourage everyone to review this starter code in order to avoid replicating possible mistakes.\r\nI'd be glad to give write permission to my fork to anyone who want to help and doesn't have write permission to dotnet/winforms.\r\n\r\n## Customer Impact\r\n- Considering the idea of annotating the API surface, this will allow Windows Forms projects targeting .NET 5.0 to enjoy a complete NRT complied environment.\r\n- Considering the idea of annotating the whole codebase, this will allow contributors and collaborators to work with better quality codes.\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- There is a risk of deploying a nullable member which is not supposed to be one, since reverting it to `notnull` would be a breaking change.\r\n\r\n## Tests\r\n- Should we also refactor existing tests? Should we add more tests?\r\n\r\n---\r\ncc @RussKie @hughbe @sharwell\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2678)","Url":"https://github.com/dotnet/winforms/pull/2678","RelatedDescription":"Open PR \"Null Reference Types for System.Windows.Forms\" (#2678)"},{"Id":"547630149","IsPullRequest":false,"CreatedAt":"2020-01-09T17:53:13","Actor":"weltkante","Number":"2677","RawContent":null,"Title":"Improve Padding TypeConverter CreateInstance implementation","State":"open","Body":"As [noticed](https://github.com/dotnet/winforms/pull/2676#discussion_r364859043) in PR #2676 when changing method signatures to include nullable annotations the current implementation of the Padding TypeConverter `CreateInstance` override is very specifically coded for being called in context of a PropertyGrid.\r\n\r\nThe TypeConverter however is registered globally and available to anyone via the TypeDescriptor registration system, so it should follow [documented](https://docs.microsoft.com/de-de/dotnet/api/system.componentmodel.typeconverter.createinstance?view=netcore-3.1#System_ComponentModel_TypeConverter_CreateInstance_System_ComponentModel_ITypeDescriptorContext_System_Collections_IDictionary_) semantics, in particular:\r\n* the `context` argument may be null\r\n* expect properties of the `context` object being able to return null\r\n* do not return true from `GetCreateInstanceSupported` if you are always going to throw for the given context\r\n\r\nI think the intention of the current implementation is to check the previous value of `Padding.All` and if it differs update it instead of the individual properties.\r\n\r\nA correct implementation would be to gracefully fall back to the \"else\" branch of setting individual properties when either context is empty or no \"original\" Padding is available. Maybe mix in some more flexibility in what properties the caller can specify in the dictionary (so he can either specify \"All\" or the individual properties but doesn't have to specify both, e.g. by using TryGetValue or ContainsKey checks to probe for \"All\" first)\r\n\r\n(Will create a PR with what I think a better implementation can look like, details will be up for discussion then.)","Url":"https://github.com/dotnet/winforms/issues/2677","RelatedDescription":"Open issue \"Improve Padding TypeConverter CreateInstance implementation\" (#2677)"},{"Id":"547607197","IsPullRequest":true,"CreatedAt":"2020-01-09T17:05:30","Actor":"sharwell","Number":"2676","RawContent":null,"Title":"Enable nullable reference types for System.Windows.Forms.Primitives","State":"open","Body":"Recommended review strategy is commit-by-commit.\r\n\r\n* Commit 7bd4aaaf67a61ed429c6b3bc24ea95561406bceb contains the only known semantic changes\r\n* Internal APIs were annotated to the degree required to avoid compiler warnings\r\n* Public APIs were reviewed separately to add annotations according to potential use cases and available documentation\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2676)","Url":"https://github.com/dotnet/winforms/pull/2676","RelatedDescription":"Open PR \"Enable nullable reference types for System.Windows.Forms.Primitives\" (#2676)"},{"Id":"547479971","IsPullRequest":true,"CreatedAt":"2020-01-09T13:52:48","Actor":"dotnet-maestro[bot]","Number":"2673","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20200108.9\r\n- **Date Produced**: 1/9/2020 7:47 AM\r\n- **Commit**: 8019c079ce8174845107e13eb4ddf3582bb10cd0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20058.9\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2673)","Url":"https://github.com/dotnet/winforms/pull/2673","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#2673)"},{"Id":"547489852","IsPullRequest":true,"CreatedAt":"2020-01-09T13:49:58","Actor":"hughbe","Number":"2674","RawContent":null,"Title":"Cleanup TVM_ constants","State":"open","Body":"## Proposed Changes\r\n- Cleanup TVM_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2674)","Url":"https://github.com/dotnet/winforms/pull/2674","RelatedDescription":"Open PR \"Cleanup TVM_ constants\" (#2674)"},{"Id":"547464001","IsPullRequest":true,"CreatedAt":"2020-01-09T13:16:33","Actor":"dotnet-maestro[bot]","Number":"2672","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20200108.1\r\n- **Date Produced**: 1/8/2020 2:07 PM\r\n- **Commit**: 48bae09d7d8ec0e6879fe2b8d08872cd87f084ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20058.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2672)","Url":"https://github.com/dotnet/winforms/pull/2672","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2672)"},{"Id":"547448077","IsPullRequest":true,"CreatedAt":"2020-01-09T12:27:17","Actor":"hughbe","Number":"2671","RawContent":null,"Title":"Extract nested classes from WinFormsUtils","State":"open","Body":"## Proposed Changes\r\n- Extract nested classes from WinFormsUtils\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2671)","Url":"https://github.com/dotnet/winforms/pull/2671","RelatedDescription":"Open PR \"Extract nested classes from WinFormsUtils\" (#2671)"},{"Id":"547401146","IsPullRequest":true,"CreatedAt":"2020-01-09T10:50:25","Actor":"hughbe","Number":"2670","RawContent":null,"Title":"Use BitOperations.PopCount instead of GetBitCount","State":"open","Body":"Same functionality, `BitOperations` is faster\r\n\r\nVerification:\r\n```cs\r\nusing System;\r\nusing System.Numerics;\r\n\t\t\t\t\t\r\npublic class Program\r\n{\r\n\tpublic static void Main()\r\n\t{\r\n\t\tfor (uint i = 0; i < uint.MaxValue; i++)\r\n\t\t{\r\n            if ((i % 1000) == 0)\r\n            {\r\n                Console.WriteLine($\"{i}/{uint.MaxValue}\");\r\n                if (GetBitCount(i) != BitOperations.PopCount(i))\r\n                {\r\n                    throw new Exception();\r\n                }\r\n            }\r\n\t\t}\r\n\r\n        Console.WriteLine(\"Completed\");\r\n\t}\r\n\t\r\n\tpublic static int GetBitCount(uint x)\r\n\t{\r\n\t\tint count = 0;\r\n\t\twhile (x > 0)\r\n\t\t{\r\n\t\t\tx &= x - 1;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n}\r\n```\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2670)","Url":"https://github.com/dotnet/winforms/pull/2670","RelatedDescription":"Open PR \"Use BitOperations.PopCount instead of GetBitCount\" (#2670)"},{"Id":"547393315","IsPullRequest":true,"CreatedAt":"2020-01-09T10:37:13","Actor":"hughbe","Number":"2669","RawContent":null,"Title":"Cleanup CBS_ and CBN_ constants","State":"open","Body":"## Proposed Changes\r\n- Cleanup CBS_ and CBN_ constants\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2669)","Url":"https://github.com/dotnet/winforms/pull/2669","RelatedDescription":"Open PR \"Cleanup CBS_ and CBN_ constants\" (#2669)"},{"Id":"547376546","IsPullRequest":true,"CreatedAt":"2020-01-09T10:07:42","Actor":"hughbe","Number":"2668","RawContent":null,"Title":"Cleanup LBS_ styles","State":"open","Body":"## Proposed Changes\r\n- Cleanup LBS_ styles\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2668)","Url":"https://github.com/dotnet/winforms/pull/2668","RelatedDescription":"Open PR \"Cleanup LBS_ styles\" (#2668)"},{"Id":"547372277","IsPullRequest":true,"CreatedAt":"2020-01-09T10:00:21","Actor":"hughbe","Number":"2667","RawContent":null,"Title":"Cleanup DTM window messages","State":"open","Body":"## Proposed Changes\r\n- Cleanup DTM window messages\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2667)","Url":"https://github.com/dotnet/winforms/pull/2667","RelatedDescription":"Open PR \"Cleanup DTM window messages\" (#2667)"},{"Id":"547372063","IsPullRequest":true,"CreatedAt":"2020-01-09T09:59:58","Actor":"hughbe","Number":"2666","RawContent":null,"Title":"Remove unused window messages","State":"open","Body":"Remove unused window messages\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2666)","Url":"https://github.com/dotnet/winforms/pull/2666","RelatedDescription":"Open PR \"Remove unused window messages\" (#2666)"},{"Id":"547160567","IsPullRequest":true,"CreatedAt":"2020-01-09T01:57:05","Actor":"hughbe","Number":"2665","RawContent":null,"Title":"Cleanup CB_ constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup CB_ constants\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2665)","Url":"https://github.com/dotnet/winforms/pull/2665","RelatedDescription":"Closed or merged PR \"Cleanup CB_ constants\" (#2665)"},{"Id":"547099127","IsPullRequest":true,"CreatedAt":"2020-01-08T21:00:17","Actor":"hughbe","Number":"2664","RawContent":null,"Title":"Cleanup LVM messages","State":"open","Body":"## Proposed Changes\r\n- Cleanup LVM_ messages\r\n\r\nSupersedes https://github.com/dotnet/winforms/pull/2077\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2664)","Url":"https://github.com/dotnet/winforms/pull/2664","RelatedDescription":"Open PR \"Cleanup LVM messages\" (#2664)"},{"Id":"546862610","IsPullRequest":true,"CreatedAt":"2020-01-08T13:47:16","Actor":"dotnet-maestro[bot]","Number":"2663","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20200107.6\r\n- **Date Produced**: 1/8/2020 6:38 AM\r\n- **Commit**: c07be36e3ce00b06e99d02669fd658a813cdce11\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20057.6\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2663)","Url":"https://github.com/dotnet/winforms/pull/2663","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#2663)"},{"Id":"546667863","IsPullRequest":false,"CreatedAt":"2020-01-08T06:20:32","Actor":"RussKie","Number":"2662","RawContent":null,"Title":"`MonthCalendar` incomplete hightlight of today date","State":"open","Body":"* .NET Core Version: master\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nThe \"Today\" date at the bottom of the calendar is a link, which highlights when hovered.\r\nHowever the highlight is only partial:\r\n![image](https://user-images.githubusercontent.com/4403806/71954823-a242cc00-323a-11ea-8762-0f1bd2c11ed4.png)\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThe whole today date is highlighted.\r\n\r\n**Minimal repro:**\r\n\r\nAdd a `MonthCalendar` control to a form. Run. Hover the \"Today\".","Url":"https://github.com/dotnet/winforms/issues/2662","RelatedDescription":"Open issue \"`MonthCalendar` incomplete hightlight of today date\" (#2662)"},{"Id":"546610243","IsPullRequest":true,"CreatedAt":"2020-01-08T04:29:46","Actor":"areller","Number":"2661","RawContent":null,"Title":"fix casing in csproj","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nSee https://github.com/dotnet/winforms/issues/2636 for context\r\n\r\n## Proposed changes\r\n\r\n- Fix all resource files referenced in `System.Windows.Forms` to have the same casing as they have in the file system.\r\n\r\n## Customer Impact\r\n\r\n- `System.Windows.Forms` will compile on file systems with sensitive casing (e.g. ext4)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- `dotnet build` passes before and after\r\n- `dotnet test` yields same results before and after\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2661)","Url":"https://github.com/dotnet/winforms/pull/2661","RelatedDescription":"Closed or merged PR \"fix casing in csproj\" (#2661)"},{"Id":"546383783","IsPullRequest":false,"CreatedAt":"2020-01-07T16:34:40","Actor":"scalablecory","Number":"2660","RawContent":null,"Title":"SendKeys.SendWait() sends wrong characters for some particular characters","State":"open","Body":"_From @Naimad1CZ on Wednesday, December 18, 2019 10:55:26 PM_\r\n\r\nUsing:\r\nWindows 10\r\n.NET Core 3.1\r\nLibrary System.Windows.Forms\r\nFunction SendKeys.SendWait()\r\n\r\nReproduce steps:\r\n1. create a new project with those 2 lines in Main:\r\n```\r\nThread.Sleep(5000);\r\nSendKeys.SendWait(\"ĚŠČŘŽÝÁÍÉÚŮĎŤ\");\r\n```\r\n2. Switch to Czech QWERTZ keyboard on Windows (on standard English keyboard you get the expected result)\r\n3. Run the project and (during the first 5 second since the start) open some notepad or something like this\r\n4. observe `ěščřžýáíéúůĎŤ` being written\r\n\r\nExpected result:\r\nobserve `ĚŠČŘŽÝÁÍÉÚŮĎŤ` being written\r\n\r\nNote + possible cause of problem:\r\nOn Czech Keyboard, all of letters `ĚŠČŘŽÝÁÍÉÚŮ` could be written by pressing a single button on keyboard in case that `CapsLock` is turned on, but `ĎŤ` couln't (`Ď` has to be written by pressing `ˇ` (actually `Shift` + key on the left of Backspace) and then `D` (`Shift` + `d`)), so maybe SendWait() gets info about keyboard keys, and if the characters that could be written on this keyboard using 1 key (+`Shift`/`CapsLock`), then it presses according keys, but in other case, it just presses maybe `Alt`+KeyCode or something. And in the first case, it forgets about pressing `CapsLock` when writing letters that are keyboard language-dependent.\r\n\r\n_Copied from original issue: dotnet/core#4016_","Url":"https://github.com/dotnet/winforms/issues/2660","RelatedDescription":"Open issue \"SendKeys.SendWait() sends wrong characters for some particular characters\" (#2660)"},{"Id":"546372212","IsPullRequest":true,"CreatedAt":"2020-01-07T16:14:29","Actor":"hughbe","Number":"2659","RawContent":null,"Title":"Cleanup MENUITEM structs","State":"open","Body":"## Proposed Changes\r\n- Cleanup MENUITEM structs\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2659)","Url":"https://github.com/dotnet/winforms/pull/2659","RelatedDescription":"Open PR \"Cleanup MENUITEM structs\" (#2659)"},{"Id":"546323182","IsPullRequest":true,"CreatedAt":"2020-01-07T14:44:58","Actor":"hughbe","Number":"2658","RawContent":null,"Title":"Cleanup CHOOSEFONT","State":"open","Body":"## Proposed Changes\r\n- Cleanup CHOOSEFONT\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2658)","Url":"https://github.com/dotnet/winforms/pull/2658","RelatedDescription":"Open PR \"Cleanup CHOOSEFONT\" (#2658)"},{"Id":"546282843","IsPullRequest":true,"CreatedAt":"2020-01-07T13:48:09","Actor":"dotnet-maestro[bot]","Number":"2657","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20200106.3\r\n- **Date Produced**: 1/7/2020 1:55 AM\r\n- **Commit**: 5afe409d59460195955b85882df41df0218a18b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20056.3\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20056.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2657)","Url":"https://github.com/dotnet/winforms/pull/2657","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#2657)"},{"Id":"546246893","IsPullRequest":false,"CreatedAt":"2020-01-07T12:03:39","Actor":"hughbe","Number":"2656","RawContent":null,"Title":"Add support for tasks to ListViewGroup","State":"open","Body":"- You can set the `LVGF_TASK` flag on `mask` and set `pszTask` to a valid string and `cchTask` to the length of the string\r\n\r\n# Proposed API\r\n\r\nThis would add the following APIs to `ListView` and `ListViewGroup`. I modelled these after the `ColumnClick` event args/handler/method\r\n```cs\r\npublic delegate void GroupLinkClickEventHandler(object sender, GroupLinkClickEventArgs e);\r\npublic class GroupLinkClickEventArgs : EventArgs\r\n{\r\n    public GroupLinkClickEventArgs(int column) { }\r\n\r\n    public int GroupLink { get; }\r\n}\r\npublic class ListView\r\n{\r\n    ...\r\n    public event GroupLinkClickEventHandler GroupLinkClick { add; remove; }\r\n    protected void OnGroupLinkClick(GroupEventArgs e) { }\r\n    ...\r\n}\r\npublic class ListViewGroup\r\n{\r\n    ...\r\n    public string Task { get; set; }\r\n    ...\r\n}\r\n```\r\n\r\n# Example\r\n```cs\r\nvar listView = new ListView();\r\nvar group = new ListViewGroup\r\n{\r\n    Task = \"Task\"\r\n};\r\nlistView.Groups.Add(group);\r\nlistView.GroupLinkClick += (sender, e) => MessageBox.Show(\"Link Clicked\");\r\n```\r\nE.g. \r\n![Screen Recording 2020-01-04 at 07 01 pm](https://user-images.githubusercontent.com/1275900/71770473-b332cb00-2f24-11ea-9834-5695ec8bd1c2.gif)","Url":"https://github.com/dotnet/winforms/issues/2656","RelatedDescription":"Open issue \"Add support for tasks to ListViewGroup\" (#2656)"},{"Id":"546244799","IsPullRequest":false,"CreatedAt":"2020-01-07T11:58:51","Actor":"hughbe","Number":"2655","RawContent":null,"Title":"Add support for subtitles in ListViewGroup","State":"open","Body":"- You can set the `LVGF_SUBTITLE` flag on `mask` and set `pszSubtitle` to a valid string and `cchSubtitle` to the length of the string\r\n\r\n## Proposed API\r\nThis would add the following API to `ListViewGroup`:\r\n```cs\r\npublic class ListViewGroup\r\n{\r\n    ...\r\n    public string Subtitle { get; set; }\r\n    ...\r\n}\r\n```\r\n\r\n# Example\r\n```cs\r\nvar group = new ListViewGroup\r\n{\r\n     Subtitle = \"Subtitle\"\r\n};\r\n```\r\n\r\nE.g.\r\n![image](https://user-images.githubusercontent.com/1275900/71746055-d6497600-2e63-11ea-95ab-77cbcdc742cf.png)","Url":"https://github.com/dotnet/winforms/issues/2655","RelatedDescription":"Open issue \"Add support for subtitles in ListViewGroup\" (#2655)"},{"Id":"546233800","IsPullRequest":true,"CreatedAt":"2020-01-07T11:32:13","Actor":"hughbe","Number":"2654","RawContent":null,"Title":"Add ListViewGroup.Footer/FooterAlignment","State":"open","Body":"## Proposed Changes\r\n- Add ListViewGroup.Footer/FooterAlignment\r\n\r\nFixes #2653\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2654)","Url":"https://github.com/dotnet/winforms/pull/2654","RelatedDescription":"Open PR \"Add ListViewGroup.Footer/FooterAlignment\" (#2654)"},{"Id":"546215187","IsPullRequest":false,"CreatedAt":"2020-01-07T10:50:31","Actor":"hughbe","Number":"2653","RawContent":null,"Title":"Add support for footers to ListViewGroup","State":"open","Body":"- You can set the `LVGF_FOOTER` flag on `mask` and set `pszFooter` to a valid string and `cchFooter` to the length of the string\r\n- You can set the `LVGF_ALIGN` flag on `mask` and set the `uAlign` to a valid `LVGA_FOOTER_CENTER` value\r\n\r\n## Proposed API\r\nThis would add the following APIs to `ListViewGroup`:\r\n```cs\r\npublic class ListViewGroup\r\n{\r\n    ...\r\n    public string Footer { get; set; }\r\n    public HorizontalAlignment FooterAlignment { get; set; }\r\n    ...\r\n}\r\n```\r\n\r\n## Example\r\n\r\n```cs\r\nvar group = new ListViewGroup\r\n{\r\n     Footer = \"NewFooter\",\r\n     FooterAlignment = HorizontalAlign.Center\r\n};\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1275900/71745879-66d38680-2e63-11ea-82f7-5381a58bd045.png)","Url":"https://github.com/dotnet/winforms/issues/2653","RelatedDescription":"Open issue \"Add support for footers to ListViewGroup\" (#2653)"},{"Id":"546046377","IsPullRequest":true,"CreatedAt":"2020-01-07T02:58:18","Actor":"RussKie","Number":"2652","RawContent":null,"Title":"Fix missing reference","State":"closed","Body":"Our downstream consumers are broken missing System.Windows.Forms.Primitives.dll, e.g. https://github.com/dotnet/wpf/pull/2399\r\n\r\nFollow up for #2518\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2652)","Url":"https://github.com/dotnet/winforms/pull/2652","RelatedDescription":"Closed or merged PR \"Fix missing reference\" (#2652)"},{"Id":"546001180","IsPullRequest":true,"CreatedAt":"2020-01-07T02:21:12","Actor":"AArnott","Number":"2651","RawContent":null,"Title":"Enable several whitespace StyleCop rules","State":"closed","Body":"Mostly the rules are around blank line placement. But I also enabled the 'no trailing whitespace' rule and 'use tabs properly' rules. All changes to code were the result of automated code fixes from the analyzers.\r\n\r\nAs previously agreed with @RussKie \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2651)","Url":"https://github.com/dotnet/winforms/pull/2651","RelatedDescription":"Closed or merged PR \"Enable several whitespace StyleCop rules\" (#2651)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-01-10T05:31:00.1828144Z","RunDurationInMilliseconds":840}