{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null},{"Title":"Welcoming SymbolSource to the .NET Foundation","PublishedOn":"2018-05-01T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to welcome SymbolSource.org to the .NET Foundation! SymbolSource has been providing a valuable service to the .NET Community for years with the ability to host Symbols for public NuGet...","Href":"https://devblogs.microsoft.com/nuget/welcoming-symbolsource-to-dot-net-foundation/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"9971376345","Type":"PullRequestEvent","CreatedAt":"2019-07-09T00:08:59","Actor":"mogah","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7323","RelatedDescription":"Opened pull request \"Mogah gh final ui\" (#7323) at NuGet/NuGetGallery","RelatedBody":"This PR adds the final UI for the GitHub Usage section on the Gallery"},{"Id":"9970527849","Type":"IssuesEvent","CreatedAt":"2019-07-08T21:00:04","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7246","RelatedDescription":"Closed issue \"Document Sendgrid SMTP on Azure\" (#7246) at NuGet/NuGetGallery","RelatedBody":"Apologies if this is inappropriate, but I can't find detailed documentation on how to deploy a NuGetGallery on Azure using Sendgrid as the email service provider.\r\n\r\nApparently Sendgrid SMTP URIs need to be in the form:\r\n\r\n`smtpTLS://CREDENTIAL-USERNAME:PASSWORD@smtp.sendgrid.net:587`\r\n\r\nBut this format seems to cause an exception when I set Gallery.SmtpUri value like this.\r\n\r\nThe existing documentation in README.md states that\r\n\r\n>  \"SMTP connection string, such as: smtp://user:password@smtpservername:25\"\r\n\r\n should be used, but this does not seem to work for Sendgrid Azure service. Also, Sendgrid recommend using API Key, but the Gallery.SmtpUri does not support this.\r\n\r\nCan someone provide guidance on correct usage for Sendgrid Azure service for email?"},{"Id":"9970104848","Type":"IssuesEvent","CreatedAt":"2019-07-08T19:51:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7314","RelatedDescription":"Closed issue \"stats: Community Packages shows non-Community Packages\" (#7314) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nThe Community Packages shows non-Community Packages, see screenshot\r\n\r\n\r\nurl: https://www.nuget.org/stats/packages\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. go to https://www.nuget.org/stats/packages\r\n\r\n\r\n### Expected behavior\r\nNot showing Microsoft packages when \"Show all packages\" isn't checked. Currently 16 microsoft.* packages are shown\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/5808377/60547011-ef3f6600-9d1e-11e9-8184-c94af1b141e0.png)\r\n\r\nrelated: https://github.com/NuGet/NuGetGallery/pull/4955"},{"Id":"9969213786","Type":"IssuesEvent","CreatedAt":"2019-07-08T17:27:41","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7201","RelatedDescription":"Closed issue \"[GitHub Usage] Deploy initial usage blob\" (#7201) at NuGet/NuGetGallery","RelatedBody":"Needs to be done to all environments' \"content\" blob container.\r\n\r\n- [x] Dev\r\n- [ ] Int\r\n- [ ] Prod"},{"Id":"9969213612","Type":"IssuesEvent","CreatedAt":"2019-07-08T17:27:40","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7203","RelatedDescription":"Closed issue \"[GitHub Usage] Add initial Gallery UI\" (#7203) at NuGet/NuGetGallery","RelatedBody":"Add UI on Gallery, hidden behind feature flag. Add Google Analytics."},{"Id":"9968074021","Type":"IssuesEvent","CreatedAt":"2019-07-08T14:51:38","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7322","RelatedDescription":"Opened issue \"Gallery tests fail when offline\" (#7322) at NuGet/NuGetGallery","RelatedBody":"## Describe the bug\r\nThe Gallery's tests do not pass if your computer is not connected to the internet.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go offline\r\n1. Run `.\\buildandtest.ps1`\r\n\r\nThe [`CorrelatingHttpClientHandlerFacts`](https://github.com/NuGet/NuGetGallery/blob/25f60e3b3718bff10d7649a0990a6cd2576402cc/tests/NuGetGallery.Facts/SearchClient/CorrelatingHttpClientHandlerFacts.cs#L32) depend on the availability of nuget.org."},{"Id":"9962542065","Type":"IssuesEvent","CreatedAt":"2019-07-07T15:23:53","Actor":"jozefizso","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7321","RelatedDescription":"Opened issue \"Symbol packages are incorrect\" (#7321) at NuGet/NuGetGallery","RelatedBody":"NuGet will hapilly pack PDB files into the new SNUPKG files. Project was compiled with VS 2017 v15.9.13 and there were no errors or warnings creating the nuget packages and symbols.\r\n\r\nYet, NuGet Gallery cannot process symbols because of the \"The uploaded symbols package contains one or more pdbs that are not portable\" error.\r\n\r\nAs those files were successfuly created by nuget, I expect the Gallery can use them.\r\n\r\nOtherwise, NuGet 5.0.2 contains a bug which prevents it from creating correct symbol files as it does not warning the user in any way that such packages will be useles.\r\n\r\nPS: This whole new experience arround symbol packages is just terrible. I don't understand why did you shut down the previous symbols package server and we cannot use existing symbols for our packages.\r\n\r\nPS1: Process for new symbol packages is terribly documented. Parameters to create the new SNUPKG files are not documented at all."},{"Id":"9958566011","Type":"IssuesEvent","CreatedAt":"2019-07-05T21:49:00","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7109","RelatedDescription":"Closed issue \"[Azure Search] Db2AzureSearch gets throttled\" (#7109) at NuGet/NuGetGallery","RelatedBody":"Running `db2azuresearch` on an Azure Search index with \"Standard\" size and 1 partition will hit throttling limits:\r\n\r\n>  503: \"Failed to execute indexing request for this document because not enough resources were available. You may be reaching the limits of your provisioned capacity. Please try again later or adjust the number of replicas. See http://aka.ms/azure-search-throttling for more information.\"\r\n\r\nThis can be circumvented by lowering the `Db2AzureSearch:MaxConcurrentBatches` configuration to slow down the tool. We should consider the following after performance testing our final implementation:\r\n\r\n* Decrease the `Db2AzureSearch:MaxConcurrentBatches` configuration to slow down ingestion\r\n* Increase the Azure Search partition count to increases our write throughput capacity\r\n\r\nStack trace on throttling:\r\n\r\n```\r\nSystem.InvalidOperationException: Errors were found when indexing a batch. Up to 5 errors get logged. ---> Microsoft.Azure.Search.IndexBatchException: 503 of 1000 indexing actions in the batch failed. The remaining actions succeeded and modified the index. Check the IndexResponse property for the status of each index action.\r\n   \r\nat Microsoft.Azure.Search.DocumentsOperations.<DoIndexWithHttpMessagesAsync>d__23.MoveNext()\r\nat Microsoft.Azure.Search.DocumentsOperationsExtensions.<IndexAsync>d__13`1.MoveNext()\r\nat NuGet.Services.AzureSearch.Wrappers.DocumentsOperationsWrapper.<IndexAsync>d__2`1.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\Wrappers\\DocumentsOperationsWrapper.cs:line 22\r\nat NuGet.Services.AzureSearch.BatchPusher.<IndexAsync>d__15.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 208\r\nat NuGet.Services.AzureSearch.BatchPusher.<IndexAsync>d__15.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 274\r\nat NuGet.Services.AzureSearch.BatchPusher.<PushBatchesAsync>d__14.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 129\r\nat NuGet.Services.AzureSearch.BatchPusher.<PushBatchesAsync>d__13.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 102\r\nat NuGet.Services.AzureSearch.BatchPusher.<PushFullBatchesAsync>d__11.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 92\r\nat NuGet.Services.AzureSearch.Db2AzureSearch.Db2AzureSearchCommand.<ConsumeWorkAsync>d__14.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\Db2AzureSearch\\Db2AzureSearchCommand.cs:line 172\r\n```"},{"Id":"9952399662","Type":"PullRequestEvent","CreatedAt":"2019-07-04T21:28:29","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7319","RelatedDescription":"Merged pull request \"[2019.07.03][ReleasePrep]RI dev into master\" (#7319) at NuGet/NuGetGallery","RelatedBody":"Major changes:\r\nAB testing support for search\r\nAccountDeleter job initial implementation.\r\nNew Recaptcha on logged in Contact page.\r\nClean up of unused libraries.\r\nApplication Insights library fix.\r\nOther bug fixes."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"9969835708","Type":"IssuesEvent","CreatedAt":"2019-07-08T19:06:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8306","RelatedDescription":"Closed issue \"nuget version *\" (#8306) at NuGet/Home","RelatedBody":"<p>VSF_TYPE_MARKDOWNHI</p><p>I have started using the \n&lt;Version&gt;1.*&lt;/Version&gt; i.e. * option</p><p>For our internal packages. And this is a really really great option. Thanks!</p><p>The only issue, it shows in the updates for the Visual Studio IDE. Infact a V1.* thinks that the V1.0.0 of the package is installed in the IDE.\nSholdn't the IDE see the &quot;*&quot; in the version and understand it is the latest.?</p><p>Or should there be a checkbox that allows to enable / disable nugets with wildard  options?</p><p>Thanks.-.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/616851/nuget-version.html\nVSTS ticketId: 935378_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 24/06/2019, 00:37 AM (12 days ago): <markdown><p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n</markdown>\nAndy Zivkovic [MSFT] on 05/07/2019, 04:33 PM (13 hours ago): <markdown><p>With projects using <code>PackageReference</code>, NuGet is run on every build. In order to avoid a slow restore on every build, NuGet detects when restore input changes (which packages are requested, package versions). When the input is the same, it doesn’t actually restore, it keeps the previous restore’s results. Therefore, if a new version of a package was released after the last time your project went through a full restore, you won’t be using the latest version of the package any longer. You can force a full restore by using the “force” argument with either the nuget or dotnet cli, or simply deleting your project’s <code>obj/project.assets.json</code> file.</p>\n<p>Finally, Visual Studio’s Package Manager UI shows the version actually installed (resolved version), rather than the requested version.</p>\n<p>Does this answer your question?</p>\n</markdown>\nRik Svendsen Rose on 05/07/2019, 09:17 PM (8 hours ago): <p>HI</p><p>The VS package manager shows the minimum version, not the installed version when you use * wildcards in the csproj.</p><p>This is my point, it should maybe indicate that a wildcard is in use, to insure other developers done update manually by mistake...</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"9969588033","Type":"IssuesEvent","CreatedAt":"2019-07-08T18:27:07","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8293","RelatedDescription":"Closed issue \"Change dev branch target to preview 2\" (#8293) at NuGet/Home","RelatedBody":""},{"Id":"9969430394","Type":"IssuesEvent","CreatedAt":"2019-07-08T18:01:57","Actor":"skofman1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8309","RelatedDescription":"Opened issue \"Add client telemetry to understand server network aspect of restore/install behavior\" (#8309) at NuGet/Home","RelatedBody":""},{"Id":"9969426302","Type":"IssuesEvent","CreatedAt":"2019-07-08T18:01:17","Actor":"JarahSi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8244","RelatedDescription":"Closed issue \"Add rule for build in package\" (#8244) at NuGet/Home","RelatedBody":"Add a warning for a build folder in a package with \"<tfm>/library.dll\" and recommend adding \"lib/<tfm>/_._\" for packages that don't want to be considered compatible for all TFMs\n"},{"Id":"9964011260","Type":"IssuesEvent","CreatedAt":"2019-07-08T03:26:45","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8308","RelatedDescription":"Opened issue \"Push should support UserName/Password\" (#8308) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.1.0.6013\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1903\r\n\r\n## Details\r\nWhen publishing to a source that requires authentication, the current steps require to first add the source with the credentials.  Then you execute ```nuget push -Source``` but this isn't ideal for CI/CD and especially when you get interactive prompts for some reason on the subsequent push after successfully adding the Source with credentials (in this case GitHub Package Repository)\r\n\r\nPlease support the ability to do the following:\r\n```nuget push <package> -Source \"source URI\" -UserName \"username\" -Password \"PAT_TOKEN\"``` \r\nin one step."},{"Id":"9963024989","Type":"IssuesEvent","CreatedAt":"2019-07-07T19:37:16","Actor":"txwizard","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8192","RelatedDescription":"Closed issue \"Even After Installing the last two workloads, NuGet client tools won't build.\" (#8192) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\ngit clone https://github.com/NuGet/NuGet.Client\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\nWhatever is on master as of today, 04 June 2019\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\n2019 15.9.12\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nPer ver command: Microsoft Windows [Version 10.0.17763.437]\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\nNo.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Running the Git CLI for Windows in a standard cmd.exe window , clone the Git repository into a new directory.\r\n\r\n2. Install the two missing workloads, which aren't mentioned in the online instructions, but are in README.md.\r\n\r\n3. Start PowerShell via cmd.exe: PowerShell -ExecutionPolicy Unrestricted.\r\n\r\n4. Verify by Get-ExecutionPolicy that the execution policy applicable to the active PowerShell instance is unrestricted.\r\n\r\n5. Execute the build, both before and after the recommended git clean operation.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nFollowing is a transcript of the entire command prompt session, captured via the Windows Clipboard from the cmd.exe and PowerShell.exe windows.\r\n\r\nMicrosoft Windows [Version 10.0.17763.437]\r\n(c) 2018 Microsoft Corporation. All rights reserved.\r\n\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client 2019/06/04 22:05:19.99>PowerShell -ExecutionPolicy Unrestricted\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nPS F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client> Get-ExecutionPolicy -list\r\n\r\n        Scope ExecutionPolicy\r\n        ----- ---------------\r\nMachinePolicy       Undefined\r\n   UserPolicy       Undefined\r\n      Process    Unrestricted\r\n  CurrentUser    RemoteSigned\r\n LocalMachine    RemoteSigned\r\n\r\n\r\nPS F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client> .\\build.ps1 -SkipUnitTest\r\n\r\n\r\n\r\n\r\n[22:06:53 +0]   ============================================================\r\n[22:06:53 +0]   Build #4352 started at 06/05/2019 03:06:53\r\n[22:06:53 +0]   [BEGIN] Cleaning artifacts\r\n[22:06:53 +0]   Cleaning the Artifacts folder\r\n[22:06:53 +0]   [DONE +00:00:00] Cleaning artifacts\r\n[22:06:53 +0]   [BEGIN] Running Restore\r\n[22:06:53 +0]   . \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\\msbuild.exe\" build\\build.proj /t:RestoreVS /p:Configuration=Debug /p:ReleaseLabel=zlocal /p:BuildNumber=4352 /v:m /m:1\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring for Visual Studio 15.0\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\test\\TestExtensions\\TestableVSCredentialProvider\\TestableVSCredentialProvider.csproj(4,3): error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\packages\\Microsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj(5,3): error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\packages\\Microsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\src\\NuGet.Clients\\NuGet.Tools\\NuGet.Tools.csproj(6,3): error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\packages\\Microsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\src\\NuGet.Clients\\NuGet.VisualStudio.Client\\NuGet.VisualStudio.Client.csproj(5,3): error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\packages\\Microsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nInvoke-BuildStep : Failed - Running Restore\r\nAt F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\build.ps1:100 char:1\r\n+ Invoke-BuildStep 'Running Restore' {\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Invoke-BuildStep\r\n\r\nError-Log : [22:06:55 +2]       [FAILED +00:00:02] Running Restore\r\nAt F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\build\\common.ps1:132 char:17\r\n+ ...             Error-Log \"[FAILED +$(Format-ElapsedTime $sw.Elapsed)] $B ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Error-Log\r\n\r\nPS F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client> git clean -xdf and retry building\r\nPS F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client> git clean -xdf\r\nRemoving .nuget/nuget.exe\r\nRemoving artifacts/\r\nRemoving cli/\r\nPS F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client> .\\build.ps1 -SkipUnitTest\r\n\r\n\r\n\r\n\r\n[22:08:22 +0]   ============================================================\r\n[22:08:22 +0]   Build #4352 started at 06/05/2019 03:08:22\r\n[22:08:22 +0]   Configuring NuGet.Client build environment\r\n[22:08:22 +0]   [BEGIN] Configuring git repo\r\n[22:08:22 +0]   [DONE +00:00:00] Configuring git repo\r\n[22:08:22 +0]   [BEGIN] Installing NuGet.exe\r\n[22:08:22 +0]   Downloading nuget.exe\r\nNuGet Version: 5.0.2.5988\r\nhttp-cache: C:\\Users\\DAG\\AppData\\Local\\NuGet\\v3-cache\r\nglobal-packages: C:\\Users\\DAG\\.nuget\\packages\\\r\ntemp: C:\\Users\\DAG\\AppData\\Local\\Temp\\NuGetScratch\r\nplugins-cache: C:\\Users\\DAG\\AppData\\Local\\NuGet\\plugins-cache\r\n[22:08:26 +4]   [DONE +00:00:03] Installing NuGet.exe\r\n[22:08:26 +0]   [BEGIN] Installing .NET CLI\r\nvsmajor version is 15\r\n[22:08:26 +0]   Downloading .NET CLI\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.301-preview-010200/dotnet-sdk-2.2.301-preview-010200-win-x64.zip\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.301-preview-010200/dotnet-sdk-2.2.301-preview-010200-win-x64.zip\r\ndotnet-install: Adding to current process PATH: \"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\cli\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\ndotnet-install: Installation finished\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.301-preview-010200\r\n Commit:    4bc9eeb1a7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\cli\\sdk\\2.2.301-preview-010200\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301-preview-010200 [F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\cli\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\cli\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\cli\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\cli\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n[22:08:48 +22]  [DONE +00:00:22] Installing .NET CLI\r\n[22:08:48 +0]   [BEGIN] Restoring solution packages\r\n[22:08:48 +0]   Restoring packages @\"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\"\r\n[22:08:48 +0]   F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\.nuget\\nuget.exe restore F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\.nuget\\packages.config -SolutionDirectory F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client -verbosity quiet\r\n[22:08:49 +0]   [DONE +00:00:00] Restoring solution packages\r\nWARNING: [22:08:49 +0] [SKIP] Cleaning package cache\r\n[22:08:49 +0]   [BEGIN] Validating VS 15 toolset installation\r\n[22:08:49 +0]   [DONE +00:00:00] Validating VS 15 toolset installation\r\n[22:08:49 +0]   Using MSBUILD version 15.9.21.664 found at 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\\msbuild.exe'\r\n[22:08:49 +0]   Configuration data has been written to 'F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\artifacts\\configure.json'\r\n[22:08:49 +0]   [BEGIN] Cleaning artifacts\r\n[22:08:49 +0]   Cleaning the Artifacts folder\r\n[22:08:49 +0]   [DONE +00:00:00] Cleaning artifacts\r\n[22:08:49 +0]   [BEGIN] Running Restore\r\n[22:08:49 +0]   . \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\\msbuild.exe\" build\\build.proj /t:RestoreVS /p:Configuration=Debug /p:ReleaseLabel=zlocal /p:BuildNumber=4352 /v:m /m:1\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring for Visual Studio 15.0\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\test\\TestExtensions\\TestableVSCredentialProvider\\Test\r\nableVSCredentialProvider.csproj(4,3): error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projec\r\nts\\NuGet\\NuGet.Client\\packages\\Microsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" wa\r\ns not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.\r\nSolutionRestoreManager.csproj(5,3): error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projects\r\n\\NuGet\\NuGet.Client\\packages\\Microsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" was\r\nnot found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\src\\NuGet.Clients\\NuGet.Tools\\NuGet.Tools.csproj(6,3)\r\n: error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\packages\\Micro\r\nsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" was not found. Confirm that the path i\r\nn the <Import> declaration is correct, and that the file exists on disk.\r\nF:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\src\\NuGet.Clients\\NuGet.VisualStudio.Client\\NuGet.Vis\r\nualStudio.Client.csproj(5,3): error MSB4019: The imported project \"F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\r\n\\NuGet.Client\\packages\\Microsoft.VSSDK.BuildTools.15.9.3032\\build\\Microsoft.VSSDK.BuildTools.props\" was not fo\r\nund. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nInvoke-BuildStep : Failed - Running Restore\r\nAt F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\build.ps1:100 char:1\r\n+ Invoke-BuildStep 'Running Restore' {\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Invoke-BuildStep\r\n\r\nError-Log : [22:08:51 +2]       [FAILED +00:00:02] Running Restore\r\nAt F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client\\build\\common.ps1:132 char:17\r\n+ ...             Error-Log \"[FAILED +$(Format-ElapsedTime $sw.Elapsed)] $B ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Error-Log\r\n\r\nPS F:\\Source_Code\\Visual_Studio\\Projects\\NuGet\\NuGet.Client>\r\n\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nOK. You asked for it: [https://p6lists-my.sharepoint.com/:u:/p/dagray/ERjqbTemZopGv1jJ-7twpbIBbDz_j6dbcW9COgMc36uJMA?e=YRrbdU](url) is a read-only link to the entire project.\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\nAlthough I cloned the source so that I can build and trace it, I have some ideas that I want to explore further before I consider contributing them to the project.\r\n\r\n\r\n"},{"Id":"9960872296","Type":"IssuesEvent","CreatedAt":"2019-07-06T20:57:37","Actor":"TFTomSun","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8307","RelatedDescription":"Opened issue \"PackageReference inside Build Package\" (#8307) at NuGet/Home","RelatedBody":"Hello,\r\ni know that package references inside build packages are explicitly disabled, to avoid endless restores. I read, that it might be possible to get package references inside build packages working by restoring a second time. Can somebody explain, whats the best way to do that? My scenario is simple: I have a build package and based on some conditions i want that a second package is referenced automatically. So making the second package as a dependency of the build package won't work, because of the conditional thing.\r\n\r\nMany thanks in advance."},{"Id":"9960446155","Type":"IssuesEvent","CreatedAt":"2019-07-06T16:39:59","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8300","RelatedDescription":"Closed issue \"Plugin:  NuGet waits full handshake timeout if plugin fails to launch or terminates early\" (#8300) at NuGet/Home","RelatedBody":""},{"Id":"9960421776","Type":"IssuesEvent","CreatedAt":"2019-07-06T16:27:00","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8285","RelatedDescription":"Closed issue \"Old bond incompatibility issue. While building bond rpc I am getting error.\" (#8285) at NuGet/Home","RelatedBody":"healthtypeforstoragemypersonal_types.h(24): fatal\r\n       error C1189: #error:  This file was generated by an older Bond compiler which is incompatible with current Bond library. Please regenerate with the latest Bond compiler."},{"Id":"9960050013","Type":"IssuesEvent","CreatedAt":"2019-07-06T13:03:35","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7202","RelatedDescription":"Closed issue \"[Mono] Error parsing solution file ... invalid image with Mono 5.14.0.177, msbuild 15.0 in Travis CI\" (#7202) at NuGet/Home","RelatedBody":"_From @denfromufa on August 14, 2018 3:47_\n\nThis is from gitter chat in Mono: https://gitter.im/mono/mono\r\n\r\n**Any idea why we are getting \"invalid image\" error from VS solution file under certain conditions? Seems to be working under .NET Core and .NET Framework, but not Mono.**\r\n\r\nhttps://travis-ci.org/pythonnet/pythonnet/jobs/415741698#L1874\r\n\r\n```\r\nCurrently running NuGet.exe 4.1.0.\r\nUpdating NuGet.exe to 4.7.1.\r\nUpdate successful.\r\nMSBuild auto-detection: using msbuild version '15.0' from '/usr/lib/mono/msbuild/15.0/bin'.\r\nError parsing solution file at /home/travis/build/pythonnet/pythonnet/pythonnet.sln: Invalid Image\r\n```\r\n\r\nKatelyn Gadd @kg 22:36\r\ninvalid image parsing sln makes it sound like it's having trouble loading msbuild assemblies\r\nMicrosoft/msbuild#3282 this is the same error message\r\nrather, the first part is the same. different exception\r\nso it is indeed caused by a managed exception\r\nhttps://github.com/rainersigwald/msbuild/commit/7960c8032a98990d5a4a96ae0e6be7f66327e24b#diff-af08e5d2c5235a664572f4581ba0e7c6R161 it looks like msbuild has had mono compatibility issues before\r\n\r\nDenis Akhiyarov @denfromufa 22:41\r\n@kg thanks for diagnostics, any easy workaround the get the CI builds going? I don't recall these errors last week for the same build configuration:\r\nhttps://travis-ci.org/pythonnet/pythonnet/builds/413267958\r\n\r\nKatelyn Gadd @kg 22:42\r\ni'm sorry, i don't know enough to recommend a solution right now. you might want to ping @rainersigwald to see if he has any ideas\r\nor you could file an issue since it's an exception in msbuild to see if they can suggest a fix. i think that error message is insufficient\r\nso it is a useful defect report in the sense of 'we should at least improve this error message'\r\nit looks like it only outputs exc.Message which is insufficient in this case\n\n_Copied from original issue: Microsoft/msbuild#3604_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null},{"Id":"1108063773363826688","CreatedAt":"2019-03-19T17:52:45+00:00","UserScreenname":"nuget","Text":"NuGet talk at the MVP Summit by @karann9 \n#MVPBuzz #MvpSummit https://t.co/P43G7wRRkX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-07-09T05:30:43.693196Z","RunDurationInMilliseconds":2146}