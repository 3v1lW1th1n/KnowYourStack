{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. Security This release contains the following security changes. CVE-2017-8759 &#124; .NET Framework Remote Code Execution Vulnerability A remote code execution vulnerability exists... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null},{"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","PublishedOn":"2017-08-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current blog post focuses on &#8220;Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance&#8220;. Just as a reminder, the four introductory blog posts of this series are (or... <a aria-label=\"read more about Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","RawContent":null},{"Title":"The week in .NET – Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!","PublishedOn":"2017-08-23T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previous posts: .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore Visual Studio extension of the week: Project File Tools The Project File Tools Visual Studio extension provides package name and version IntelliSense, tooltips for... <a aria-label=\"read more about The week in .NET &#8211; Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/","RawContent":null},{"Title":".NET Framework Update for AppContext","PublishedOn":"2017-08-18T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"A new update for .NET Framework is now available for the AppContext class. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10. The AppContext class was introduced in the... <a aria-label=\"read more about .NET Framework Update for AppContext\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","RawContent":null},{"Title":".NET Framework August 2017 Preview of Quality Rollup","PublishedOn":"2017-08-16T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The August 2017 Preview of Quality Rollup is now available. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Values added to System.Web.Cache expire immediately, with .NET Framework 4.7. [452228] Also reported at ASP.NET Forums #2123507 ASP.NET site running on Sitefinity broken, with .NET Framework 4.7. [457739] CLR CRWLock::StaticAcquireWriterLock() never returns if... <a aria-label=\"read more about .NET Framework August 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/","RawContent":null},{"Title":"The week in .NET – .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston, and links!","PublishedOn":"2017-08-15T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Previous posts: Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore MIST, F# in NYC .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, and Visual Studio 2017 Update 3 launched! This is a week to celebrate for the .NET community, as .NET Core 2.0, ASP.NET Core 2.0, and Entity Framework 2.0 shipped! We&#8217;re also... <a aria-label=\"read more about The week in .NET &#8211; .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/15/the-week-in-net-net-core-2-0-asp-net-core-2-0-entity-framework-2-0-visual-studio-2017-update-3-enterprise-entity-framework-core-in-boston-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/15/the-week-in-net-net-core-2-0-asp-net-core-2-0-entity-framework-2-0-visual-studio-2017-update-3-enterprise-entity-framework-core-in-boston-and-links/","RawContent":null},{"Title":"F# and .NET Core Roadmap Update","PublishedOn":"2017-08-14T00:00:00","CommentsCount":58,"FacebookCount":0,"Summary":"Now that .NET Core 2.0 has been released, we wanted to take some time to talk about F# and .NET Core. F# and .NET Core 1.0 F# has been supported on .NET Core and .NET Standard since their 1.0 releases. In the months leading up to the release of .NET Core 1.0, Enrico Sada from... <a aria-label=\"read more about F# and .NET Core Roadmap Update\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/f-and-net-core-roadmap-update/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/f-and-net-core-roadmap-update/","RawContent":null},{"Title":"Announcing .NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":97,"FacebookCount":0,"Summary":".NET Core 2.0 is available today as a final release. You can start developing with it at the command line, in your favorite text editor, in Visual Studio 2017 15.3, Visual Studio Code or Visual Studio for Mac. It is ready for production workloads, on your own hardware or your favorite cloud, like Microsoft Azure.... <a aria-label=\"read more about Announcing .NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6564921419","Type":"WatchEvent","CreatedAt":"2017-09-08T05:25:54","Actor":"jenniemanphonsy","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/home","RelatedBody":null},{"Id":"6543428196","Type":"ForkEvent","CreatedAt":"2017-09-02T22:28:07","Actor":"ZeroInfinite","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/ZeroInfinite/home-1","RelatedDescription":"Forked dotnet/home to ZeroInfinite/home-1","RelatedBody":null},{"Id":"6542231534","Type":"WatchEvent","CreatedAt":"2017-09-02T02:40:26","Actor":"babtsoualiaksandr","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/home","RelatedBody":null},{"Id":"6532786398","Type":"WatchEvent","CreatedAt":"2017-08-31T01:32:12","Actor":"billpratt","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/home","RelatedBody":null},{"Id":"6530853179","Type":"IssueCommentEvent","CreatedAt":"2017-08-30T16:28:40","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-326045444","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@brentschmaltz I'll send you an email with who to contact."},{"Id":"6530532162","Type":"IssueCommentEvent","CreatedAt":"2017-08-30T15:24:07","Actor":"brentschmaltz","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-326025900","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@Eilon we do not.  Can you point us to instructions."},{"Id":"6519322260","Type":"ForkEvent","CreatedAt":"2017-08-28T12:18:48","Actor":"mazong1123","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/mazong1123/home","RelatedDescription":"Forked dotnet/home to mazong1123/home","RelatedBody":null},{"Id":"6517294485","Type":"WatchEvent","CreatedAt":"2017-08-27T21:20:16","Actor":"devdivision","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/home","RelatedBody":null},{"Id":"6515896969","Type":"PushEvent","CreatedAt":"2017-08-26T22:20:19","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/dotnet/home/compare/a180fed6a0ac6524d36997d505f5f18edfa7c7c9...c37f5bcba25e1389d6683587458c97e6545bd747","RelatedDescription":"Pushed to refs/heads/master at dotnet/home","RelatedBody":null},{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896523","Type":"PushEvent","CreatedAt":"2017-08-26T22:19:50","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/dotnet/home/compare/9ba029eb55a7a9a599829445da338d3b624a4222...a180fed6a0ac6524d36997d505f5f18edfa7c7c9","RelatedDescription":"Pushed to refs/heads/master at dotnet/home","RelatedBody":null},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6508801939","Type":"IssueCommentEvent","CreatedAt":"2017-08-24T18:13:58","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-324714399","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@brentschmaltz - does your team upload symbols for the IdentityModel packages?"},{"Id":"6494201609","Type":"IssueCommentEvent","CreatedAt":"2017-08-21T20:41:20","Actor":"JaredShaver","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-323847415","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@Eilon It looks like the symbols for ASP.NET Core 2 release are loading now, thank you for getting it sorted out.\r\n\r\nIdentityModel symbols are still missing though, I'm guessing that is another team's responsibility...  Examples:\r\n- Microsoft.IdentityModel.Protocols.OpenIdConnect.dll\r\n- Microsoft.IdentityModel.Tokens.dll\r\n- System.IdentityModel.Tokens.Jwt.dll\r\n- Microsoft.IdentityModel.Logging.dll\r\n- Microsoft.IdentityModel.Protocols.dll"},{"Id":"6487140317","Type":"WatchEvent","CreatedAt":"2017-08-20T03:52:33","Actor":"kopelli","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/home","RelatedBody":null},{"Id":"6483200800","Type":"IssueCommentEvent","CreatedAt":"2017-08-18T19:58:45","Actor":"dnfclas","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/pull/86#issuecomment-323447413","RelatedDescription":"Commented on issue \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":"\r\n@gep13,\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by .NET Foundation. We will now review your pull request.\n_Thanks,\n.NET Foundation Pull Request Bot_"},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6482114918","Type":"IssueCommentEvent","CreatedAt":"2017-08-18T17:12:14","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-323409836","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"Indeed, it appears there might be a problem with the uploaded symbols - we are investigating."},{"Id":"6480034319","Type":"IssueCommentEvent","CreatedAt":"2017-08-18T12:23:43","Actor":"tiandian","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-323339493","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"I tried with the asp.net core 2.1.0-preview1-26636, but it doesn't work, no symbols found."},{"Id":"6477914043","Type":"WatchEvent","CreatedAt":"2017-08-18T05:58:15","Actor":"freeradius-xx","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/home","RelatedBody":null},{"Id":"6470627673","Type":"IssueCommentEvent","CreatedAt":"2017-08-17T09:29:43","Actor":"dnfclas","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/pull/85#issuecomment-323018168","RelatedDescription":"Commented on issue \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"__@stefanov-stefan__, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\r\n<br />_Thanks, .NET Foundation Pull Request Bot_"},{"Id":"6470589805","Type":"IssueCommentEvent","CreatedAt":"2017-08-17T09:24:17","Actor":"dnfclas","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/pull/85#issuecomment-323016919","RelatedDescription":"Commented on issue \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"\r\n@__stefanov-stefan__,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla2.dotnetfoundation.org.\n\nIt will cover your contributions to all .NET Foundation-managed open source projects.\n_Thanks,\n.NET Foundation Pull Request Bot_"},{"Id":"6470589367","Type":"PullRequestEvent","CreatedAt":"2017-08-17T09:24:13","Actor":"stefanov-stefan","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Opened pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6466917727","Type":"IssueCommentEvent","CreatedAt":"2017-08-16T20:30:37","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-322889774","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@JaredShaver - I believe the ASP.NET/EF Core 2.0.0 symbols should be up now. Please give it a try and let us know. (Please note that source links were not enabled in this build, that's something that's still in our plans for future releases.)"},{"Id":"6466893027","Type":"WatchEvent","CreatedAt":"2017-08-16T20:27:21","Actor":"eallage","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/home","RelatedBody":null},{"Id":"6449908252","Type":"IssueCommentEvent","CreatedAt":"2017-08-14T18:02:06","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-322263094","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@JaredShaver the symbols for ASP.NET/EF Core 2.0.0 are being processed, I'll try to update this thread when they're ready."},{"Id":"6449660432","Type":"IssueCommentEvent","CreatedAt":"2017-08-14T16:59:15","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-322246639","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@JaredShaver we're working on it today for ASP.NET Core 2, sorry for the delay!"},{"Id":"6443210301","Type":"IssueCommentEvent","CreatedAt":"2017-08-11T20:33:14","Actor":"JaredShaver","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/home/issues/69#issuecomment-321912151","RelatedDescription":"Commented on issue \"What is the link to debug symbols server of .NET Core?\" (#69) at dotnet/home","RelatedBody":"@Eilon will the symbols be published for ASP.NET Core 2 by the time it releases?  I was unable to download them from the Microsoft symbol server or the http://srv.symbolsource.org/pdb/Public or http://srv.symbolsource.org/pdb/MyGet servers using ASP.NET Core 2 preview 2.  Being able to step into the source was invaluable when implementing OpenID Connect OWIN middleware and I was hoping I could do the same with ASP.NET Core when implementing the new services/middleware pipeline."},{"Id":"6404144202","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:09:52","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/84","RelatedDescription":"Opened issue \"How can we embed images into the .NET foundation website?\" (#84) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding images. I'd prefer to _not to adjust CSP_ policy to add the reactiveui.net and instead have some way to pull-request images into this repository.\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"},{"Id":"6404140964","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:08:17","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/83","RelatedDescription":"Opened issue \"Modify CSP policy to allow embedding of youtube videos\" (#83) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding the ReactiveUI video.\r\n\r\nhttps://developers.google.com/web/fundamentals/security/csp/\r\n\r\n```\r\nchild-src lists the URLs for workers and embedded frame contents. For example: child-src https://youtube.com would enable embedding videos from YouTube but not from other origins. Use this in place of the deprecated frame-src directive.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6577489981","Type":"WatchEvent","CreatedAt":"2017-09-12T01:16:42","Actor":"mishrsud","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6573613380","Type":"WatchEvent","CreatedAt":"2017-09-11T09:27:49","Actor":"rmunn","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6571466603","Type":"WatchEvent","CreatedAt":"2017-09-10T14:47:49","Actor":"hszczepanski","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6564889310","Type":"WatchEvent","CreatedAt":"2017-09-08T05:09:28","Actor":"jenniemanphonsy","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6555647773","Type":"WatchEvent","CreatedAt":"2017-09-06T11:09:35","Actor":"naiwenchi","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6553539545","Type":"WatchEvent","CreatedAt":"2017-09-05T23:15:42","Actor":"mrshanahan","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6549938970","Type":"WatchEvent","CreatedAt":"2017-09-05T09:04:22","Actor":"aleksd","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6548382819","Type":"WatchEvent","CreatedAt":"2017-09-04T21:21:41","Actor":"artur-s","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6546827410","Type":"WatchEvent","CreatedAt":"2017-09-04T12:09:50","Actor":"bitnot","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6546637777","Type":"WatchEvent","CreatedAt":"2017-09-04T11:14:13","Actor":"exoteric","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6546520344","Type":"WatchEvent","CreatedAt":"2017-09-04T10:40:20","Actor":"goh-chunlin","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6546261556","Type":"WatchEvent","CreatedAt":"2017-09-04T09:33:22","Actor":"mwolicki","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6546221110","Type":"WatchEvent","CreatedAt":"2017-09-04T09:23:28","Actor":"rizamarhaban","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6545815520","Type":"WatchEvent","CreatedAt":"2017-09-04T07:35:41","Actor":"DudePascalou","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6544960980","Type":"WatchEvent","CreatedAt":"2017-09-03T23:42:08","Actor":"jingeno","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6543650373","Type":"WatchEvent","CreatedAt":"2017-09-03T03:03:58","Actor":"bej-syan","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6541935607","Type":"IssuesEvent","CreatedAt":"2017-09-01T22:57:04","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/31","RelatedDescription":"Opened issue \"Issues with .NET Standard 2.0 with .NET Framework & NuGet\" (#31) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\nWe've designed .NET Standard & our tooling so that projects targeting .NET Framework 4.6.1 can consume NuGet packages & projects targeting .NET Standard 2.0 or earlier. Unfortunately, we've seen a few issues around that scenario. The purpose of this document is to summarize the issues, outline our plan on addressing them, and providing workarounds you can deploy with today's state of our tooling.\r\n\r\n## Symptoms and root cause\r\n\r\nThe [primary symptom](https:/github.com/dotnet/standard/issues/410) is that applications crash with a `FileLoadException` or a `FileNotFoundException`. Another symptom is warnings at build time regarding assembly versions. This is due to one or both of the following issues:\r\n\r\n1. Missing binding redirects\r\n2. Missing binaries that come from indirect NuGet packages\r\n\r\n### Missing binding redirects\r\n\r\n.NET Standard 1.x was based around contracts. Many of these contracts shipped with .NET Framework 4.5 and later. However, different versions of .NET Framework picked up different versions of these contracts, as by-design of contract versioning. As a side effect of marking .NET Framework 4.6.1 as implementing .NET Standard 2.0, some projects will now start picking up binaries built for .NET Standard 1.5 and 1.6 (as opposed to previously where .NET Framework 4.6.1 was considered as implementing .NET Standard 1.4). This results in mismatches of the assembly versions between what was shipped in .NET Framework and what was part of .NET Standard 1.5/1.6.\r\n\r\nThis can be addressed by binding redirects. As writing them by hand sucks, we added an [Automatic Binding Redirect Generation][abrg] feature in .NET Framework 4.5.1. This feature is opt-in. Unfortunately, it's not enabled based on target framework, but by which target framework was selected when the project was created (as the feature is turned on via an MSBuild property that is conditionally emitted by the template). In practice, this means it's mostly off you often upgrade existing projects, rather than creating new ones.\r\n\r\n[abrg]: https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection\r\n\r\n### Missing binaries\r\n\r\nThere are two primary flavors of NuGet: `packages.config` and `PackageReference`.\r\n\r\n* With `packages.config`, each project has a config file with a flattened graph of all the NuGet dependencies. The project file in turn has direct links to all the assets. The assets are selected at install time. None of this includes indirect NuGet references coming from referenced projects.\r\n\r\n* With `PackageReference` each project contains MSBuild `PackageReference` items. The project file contains no references to any assets as the assets are selected at build time. Package restore will compute the graph of all packages, including indirect NuGet references coming from referenced projects.\r\n\r\nThe default for .NET Framework projects is `packages.config`. This ensures more compatibility because `PackageReference` doesn't support all the features that `packages.config` did, for example, PowerShell install scripts and content.\r\n\r\nThe only supported mode for SDK-style projects (.NET Core/.NET Standard) is `PackageReference`. This means that a .NET Framework project referencing a .NET Standard project ends up crossing the streams between two different NuGet models. When the .NET Standard project references NuGet packages that the .NET Framework project doesn't reference, the application ends up missing all binaries coming from those packages.\r\n\r\nWhy has this worked before? Because with` packages.config`, all dependencies are copied to each project's output folder. MSBuild copies them up from there. With `PackageReference`, we don't copy the binaries because it relies on the consuming project to see its dependencies and extract the proper asset itself. This allows the consuming project to pick up the right assets for packages that use bait & switch (which many of the .NET packages must do).\r\n\r\n### Plan\r\n\r\nThe plan is to address these issues moving forward as follows:\r\n\r\n1. **Converge on `PackageReference` for all project types**, including .NET Framework. The short-term plan for (1) is to start blocking project-to-project references in Visual Studio 15.4 that will end up crossing the streams between `packages.config` and `PackageReference`. This block is UI only; you can still edit the reference by editing the project by hand. The error message will instruct you to switch the .NET Framework project to `PackageReference` if you want to reference a .NET Standard project. Referencing .NET Standard binaries or NuGet packages will not require this, it's only about project-to-project references. In later releases, we plan on providing a converter. The challenge is that `packages.config` has features we can't offer for `PackagReference` across the board, in particular PowerShell install scripts and content. We'll need good guidance and mitigations, if applicable.\r\n\r\n2. **Ensure binding redirects are on by default**. Short term, this means we need to fix our target files to make sure we turn on automatic binding redirect generation. However, binding redirects don't work well in all scenarios, when there is no application project (like unit tests or add-ins). We need to work on a plan to bring the regular “higher wins” binding policy without binding redirects. This needs a proposal and proper vetting, but it seems we've reached the point where this is necessary.\r\n\r\n## Workarounds\r\n\r\n### Regular .NET Framework projects\r\n\r\n1. Enable [automatic binding redirects][abrg] in the root .NET Framework application.\r\n2. Make sure your root application project doesn't use `packages.config` but uses `PackageReference` for NuGet packages\r\n    * If you currently don't have `packages.config`, simply add `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` to your project file\r\n    * If you currently do have a `packages.config`, convert the contents to packages references in the project file. The syntax is like this:\r\n        - `<PackageReference Include=\"package-id\" Version=\"package-version\" />`\r\n\r\n### ASP.NET web applications and web sites\r\n\r\n1. Web applications and web sites don't support automatic binding redirect generation. In order to resolve binding conflicts, you need to double click the warning in the error list and Visual Studio will add them to your `web.config` file.\r\n2. In web application projects, you should enable `PackageReference` like mentioned above. In web sites, you cannot use `PackageReference` as there is no project file. In that case, you need to install all NuGet packages into your web site that any of the direct or indirect project references depend on.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to [https://github.com/dotnet/standard/issues/481]"},{"Id":"6541854262","Type":"WatchEvent","CreatedAt":"2017-09-01T22:19:59","Actor":"Doomjunky","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6540381488","Type":"WatchEvent","CreatedAt":"2017-09-01T15:13:24","Actor":"aleksejkozin","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6539447659","Type":"WatchEvent","CreatedAt":"2017-09-01T11:16:54","Actor":"SmithsonianDSP","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6538252963","Type":"WatchEvent","CreatedAt":"2017-09-01T04:42:53","Actor":"wrummler","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6537795842","Type":"WatchEvent","CreatedAt":"2017-09-01T01:00:15","Actor":"Valyansky","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6537750611","Type":"WatchEvent","CreatedAt":"2017-09-01T00:38:31","Actor":"arleypadua","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6537728265","Type":"WatchEvent","CreatedAt":"2017-09-01T00:27:54","Actor":"eknowledger","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6537297844","Type":"WatchEvent","CreatedAt":"2017-08-31T21:46:11","Actor":"MathieuDSTP","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6536807371","Type":"WatchEvent","CreatedAt":"2017-08-31T19:39:09","Actor":"tpayne84","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6536471484","Type":"WatchEvent","CreatedAt":"2017-08-31T18:16:56","Actor":"crowchirp","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6535562842","Type":"WatchEvent","CreatedAt":"2017-08-31T15:00:05","Actor":"vai","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6535318229","Type":"WatchEvent","CreatedAt":"2017-08-31T14:14:58","Actor":"rarrarrarr","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/announcements","RelatedBody":null},{"Id":"6535130606","Type":"ForkEvent","CreatedAt":"2017-08-31T13:37:56","Actor":"07101994","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/07101994/announcements","RelatedDescription":"Forked dotnet/announcements to 07101994/announcements","RelatedBody":null}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6587644407","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:57:53","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13958#discussion_r138750746","RelatedDescription":"Commented on pull request \"EventPipeProvider destructor hardening\" (#13958) at dotnet/coreclr","RelatedBody":"For the comment, you probably want to say something like \"The provider list should be non-NULL, but can be NULL on shutdown.\"  That way it's clear that this is really just to prevent AVs when we're shutting down."},{"Id":"6587644429","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:56:04","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13958#discussion_r138750381","RelatedDescription":"Commented on pull request \"EventPipeProvider destructor hardening\" (#13958) at dotnet/coreclr","RelatedBody":"This looks like it might be overwriting the double delete fix."},{"Id":"6587629035","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:53:57","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13924","RelatedDescription":"Closed pull request \"Add verification test for event listener data\" (#13924) at dotnet/coreclr","RelatedBody":"Adds a test which can verify that objects are properly received by an EventListener. This provides verification beyond the current smoke tests, but stops short of verifying what is written to a file\r\n\r\nReferences: #11567"},{"Id":"6587629025","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:53:57","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13924#issuecomment-329307857","RelatedDescription":"Commented on issue \"Add verification test for event listener data\" (#13924) at dotnet/coreclr","RelatedBody":"Yes, so this test is basically a halfway point to testing the full EventPipe system as the data comes out of the file. I did not realise this functionality is already tested in CoreFX. I am going to close this PR and open a new one when I have a test that acts on the final file output of EventPipe"},{"Id":"6587625157","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:52:52","Actor":"JosephTremoulet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13919#issuecomment-329307626","RelatedDescription":"Commented on issue \"F# compiler is broken with latest CoreCLR runtime\" (#13919) at dotnet/coreclr","RelatedBody":"I have now put up a PR for a fix (#13957)."},{"Id":"6587621504","Type":"PushEvent","CreatedAt":"2017-09-13T21:51:56","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/dotnet/coreclr/compare/9fc84cfb5feafe7846307d76df2b9f85455b481a...0d309876c9c5dd5a8e2d34341ba49fe89bf15404","RelatedDescription":"Pushed to refs/heads/master at dotnet/coreclr","RelatedBody":null},{"Id":"6587621036","Type":"IssuesEvent","CreatedAt":"2017-09-13T21:51:48","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13818","RelatedDescription":"Closed issue \"Heap corruption in EventPipe causes crash at cleanup time\" (#13818) at dotnet/coreclr","RelatedBody":"On Linux (where EventPipe is used) shutting down an event provider will sometimes result in a crash with either a heap contamination message (triggered by an assert in Debug mode) or segmentation fault (in Release mode)\r\n\r\nExample Debug failure message:\r\n```\r\nAssert failure(PID 222818 [0x00036662], Thread: 222818 [0x36662]): !\"Heap contamination detected! HeapFree was called on a heap other than the one that memory was allocated from.\\n\" \"Possible cause: you used new (executable) to allocate the memory, but didn't use DeleteExecutable() to free it.\"\r\n    File: /home/nate/coreclr/src/vm/hosting.cpp Line: 490\r\n    Image: /home/nate/coreclr/bin/tests/Linux.x64.Debug/Tests/Core_Root/corerun\r\n```\r\n\r\nI've narrowed it down to code within https://github.com/dotnet/coreclr/pull/12476 as triggering this failure, but have not determined the exact cause (which may have already existed)."},{"Id":"6587621016","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:51:48","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13833","RelatedDescription":"Merged pull request \"Eliminate double delete in EventPipeProvider cleanup\" (#13833) at dotnet/coreclr","RelatedBody":"Deletion of the list element occurs as a result of deleting the provider through the UnregisterProvider function which is unconditionally called from the EventPipeProvider deconstructor\r\n\r\nCloses: https://github.com/dotnet/coreclr/issues/13818"},{"Id":"6587618185","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:51:00","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13958#issuecomment-329307249","RelatedDescription":"Commented on issue \"EventPipeProvider destructor hardening\" (#13958) at dotnet/coreclr","RelatedBody":"Meta comment: The way the git assembled the patch makes it hard to tell what the actual changes are. The change is to add the the `CrstHolder _crst(EventPipe::GetLock());` statement and each `if (m_pProviderList != NULL)` statement. The other lines changes are simply indents"},{"Id":"6587607987","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:48:10","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13958","RelatedDescription":"Opened pull request \"EventPipeProvider destructor hardening\" (#13958) at dotnet/coreclr","RelatedBody":"In the future there will be multiple event pipes running at once. This PR looks to prevent memory access violations by taking the lock before manipulating the provider list in the destructor and adding NULL checks around provider list manipulation in the form of asserts in checked builds and conditionals "},{"Id":"6587604085","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:47:09","Actor":"JosephTremoulet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13957#issuecomment-329306414","RelatedDescription":"Commented on issue \"Renumber blocks before computing loop nest\" (#13957) at dotnet/coreclr","RelatedBody":"@briansull / @AndyAyersMS PTAL\r\n/cc @dotnet/jit-contrib \r\n\r\nThis also fixes VSO bug 486439\r\n\r\nMinimal diffs:\r\n\r\n```\r\nSummary:\r\n(Note: Lower is better)\r\n\r\nTotal bytes of diff: -103 (0.00 % of base)\r\n    diff is an improvement.\r\n\r\nTotal byte diff includes 0 bytes from reconciling methods\r\n        Base had    0 unique methods,        0 unique bytes\r\n        Diff had    0 unique methods,        0 unique bytes\r\n\r\nTop file regressions by size (bytes):\r\n           1 : System.Net.Http.dasm (0.00 % of base)\r\n\r\nTop file improvements by size (bytes):\r\n         -63 : Microsoft.CodeAnalysis.CSharp.dasm (0.00 % of base)\r\n         -17 : Microsoft.CodeAnalysis.VisualBasic.dasm (0.00 % of base)\r\n         -12 : Microsoft.CodeAnalysis.dasm (0.00 % of base)\r\n          -7 : Microsoft.CSharp.dasm (0.00 % of base)\r\n          -5 : JIT\\Regression\\JitBlue\\GitHub_13919\\GitHub_13919\\GitHub_13919.dasm (-2.62 % of base)\r\n\r\n6 total files with size differences (5 improved, 1 regressed), 2037 unchanged.\r\n\r\nTop method regessions by size (bytes):\r\n           4 : System.Net.Http.dasm - ContentReadStream:set_Position(long):this\r\n           1 : Microsoft.CodeAnalysis.VisualBasic.dasm - TypeSymbolExtensions:IsCompatibleWithGenericIEnumerableOfType(ref,ref,byref):bool\r\n\r\nTop method improvements by size (bytes):\r\n         -18 : Microsoft.CodeAnalysis.CSharp.dasm - LanguageParser:ParseNamespaceBody(byref,byref,byref,char):this\r\n         -15 : Microsoft.CodeAnalysis.CSharp.dasm - LanguageParser:ParseArgumentList(byref,byref,byref,char,char):this\r\n         -15 : Microsoft.CodeAnalysis.CSharp.dasm - LocalScopeBinder:BuildLocals(struct):struct:this\r\n         -12 : Microsoft.CodeAnalysis.dasm - TypeNameDecoder`2:GetTypeSymbol(struct,byref):ref:this\r\n          -7 : Microsoft.CodeAnalysis.CSharp.dasm - AnonymousTypeManager:AssignTemplatesNamesAndCompile(ref,ref,ref):this\r\n\r\n17 total methods with size differences (15 improved, 2 regressed), 202622 unchanged.\r\n```\r\n"},{"Id":"6587599002","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:45:46","Actor":"JosephTremoulet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13957","RelatedDescription":"Opened pull request \"Renumber blocks before computing loop nest\" (#13957) at dotnet/coreclr","RelatedBody":"The loop nest computation expects to be able to test block numbers for\r\nlexical inclusion, so do a renumbering pass first if blocks have been\r\nmoved.\r\n\r\nFixes #13919."},{"Id":"6587577331","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:39:58","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/issues/12877#issuecomment-329304879","RelatedDescription":"Commented on issue \"JIT: \"is\" keyword generates boxing in generic function\" (#12877) at dotnet/coreclr","RelatedBody":"Don't think its currently expressible in C# as above would be\r\n```csharp\r\nvar key = key0 as IEquatable<TKey>\r\nreturn key.Equals(key1);\r\n```\r\n😢 \r\n\r\nWorking on proposal"},{"Id":"6587569808","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:37:54","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13924#issuecomment-329304402","RelatedDescription":"Commented on issue \"Add verification test for event listener data\" (#13924) at dotnet/coreclr","RelatedBody":"@nategraf, I think this change looks fine, but I do want to understand the overall goal.  We do have a number of tests like this in CoreFx that test the EventSource --> EventListener pipeline.  That's a nice place to put the managed surface area test cases because they can then run against any runtime.\r\n\r\nIf the goal of this is to get us closer to being able to test the input/output of the EventPipe, then this feels like the right place to put this test.  Can you confirm that you are basically preparing to make this validate the end-to-end for the EventPipe?"},{"Id":"6587555319","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:34:05","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13956#discussion_r138745763","RelatedDescription":"Commented on pull request \"Create dotnet deployment and acquisition size on disk test\" (#13956) at dotnet/coreclr","RelatedBody":"Changed it to 'windows_server_2016_clr_perf' if that is alright"},{"Id":"6587555255","Type":"PushEvent","CreatedAt":"2017-09-13T21:34:05","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/dotnet/coreclr/compare/e866d072042f4ad9e0811aa36e338dac781c09a5...9fc84cfb5feafe7846307d76df2b9f85455b481a","RelatedDescription":"Pushed to refs/heads/master at dotnet/coreclr","RelatedBody":null},{"Id":"6587554729","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:33:57","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13950","RelatedDescription":"Merged pull request \"Fix setting PAX options for crossgen\" (#13950) at dotnet/coreclr","RelatedBody":"In my previous PR that added marking executables with paxctl, I've made\r\na mistake in the order of calling _add_library and add_dependencies.\r\nBut that was hidden due to the fact that we have yet another copy of the\r\nadd_library_clr and add_executable_clr functions in src/CMakeLists.txt.\r\nI have no idea how that happened.\r\nThis one has overriden the other, which has hidden the problem, but also\r\ncaused the crossgen to not to be modified by the paxctl.\r\nSo I am fixing the order and removing the extra definitions of those\r\nfunctions."},{"Id":"6587542142","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:30:46","Actor":"jorive","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13956#discussion_r138745071","RelatedDescription":"Commented on pull request \"Create dotnet deployment and acquisition size on disk test\" (#13956) at dotnet/coreclr","RelatedBody":"Is there a *windows_server_2016_dotnet_sizeondisk* machine pool (VMs) on Jenkins? If not, then you could use the same label than LinkBench/IlLink.\r\n(`label(string)` tells Jenkins what is the machine pool where the leg will run on.)"},{"Id":"6587475754","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:13:42","Actor":"nategraf","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13956","RelatedDescription":"Opened pull request \"Create dotnet deployment and acquisition size on disk test\" (#13956) at dotnet/coreclr","RelatedBody":"This PR adds a benchmark which determines the size on disk for acquiring dotnet and deployment of each standard template (excluding nodejs templates) on each platform. The data from this benchmark can automatically be uploaded to BenchView"},{"Id":"6587461057","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:10:09","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13921#issuecomment-329297923","RelatedDescription":"Commented on issue \"﻿Improve thread pool worker thread's spinning for work\" (#13921) at dotnet/coreclr","RelatedBody":"Thanks @sdmaclea, yes the config values are interpreted as hex.\r\n\r\nIs the 6% regression from baseline using the default of 0x46? Is there a regression from baseline even when compared with the highest point in the peak?"},{"Id":"6587443723","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:06:11","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13891#issuecomment-329296958","RelatedDescription":"Commented on issue \"implement __assume for non-windows builds\" (#13891) at dotnet/coreclr","RelatedBody":"I wonder if maybe LTO is required to see the improvement.\r\n\r\nDoes implementing this impact the generated code anywhere else?"},{"Id":"6587346230","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:43:20","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13295#issuecomment-329291050","RelatedDescription":"Commented on issue \"Predecessor List does not always maintain sorted order.\" (#13295) at dotnet/coreclr","RelatedBody":"Impacts amd64 Desktop Testing:\r\n\r\nVSO 472665 [x86][RyuJit][JitStress2] Assertion failed 'blockPred->bbTraversalStamp == curTraversalStamp' in 'testout1:Sub_Funclet_96():int'\r\n\r\nFailures:\r\nJit/directed/cmov/Bool_Xor_Op_cs_do.exe (TestID: 1980434)\r\nAssert failure(PID 5932 [0x0000172c], Thread: 5476 [0x1564]): Assertion failed 'blockPred->bbTraversalStamp == curTraversalStamp' in 'testout1:Sub_Funclet_96():int' (IL size 701)\r\n\r\nJit/directed/cmov/Bool_Xor_Op_cs_ro.exe (TestID: 1951162)\r\nAssert failure(PID 5728 [0x00001660], Thread: 5208 [0x1458]): Assertion failed 'blockPred->bbTraversalStamp == curTraversalStamp' in 'testout1:Sub_Funclet_51():int' (IL size 613)\r\n"},{"Id":"6587338640","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:41:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13931#issuecomment-329290564","RelatedDescription":"Commented on issue \"Mark Span.Length as non-versionable\" (#13931) at dotnet/coreclr","RelatedBody":"It means that precompiled R2R images will have more efficient code for it."},{"Id":"6587308556","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:34:33","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13921#issuecomment-329288888","RelatedDescription":"Commented on issue \"﻿Improve thread pool worker thread's spinning for work\" (#13921) at dotnet/coreclr","RelatedBody":"> broad peak 48 and 96\r\n\r\nI think that might be hex.  So I am still reasonably happy with the default of 0x46.  "},{"Id":"6587281839","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:28:16","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13931#issuecomment-329287273","RelatedDescription":"Commented on issue \"Mark Span.Length as non-versionable\" (#13931) at dotnet/coreclr","RelatedBody":"What does it mean to mark a struct as NonVersionable?"},{"Id":"6587266126","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T20:24:35","Actor":"wtgodbe","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13795#discussion_r138729028","RelatedDescription":"Commented on pull request \"Use new publish mechanism in CoreCLR\" (#13795) at dotnet/coreclr","RelatedBody":"@karajas @weshaggard is this the right RelativePath? Does it matter what the layout looks like inside of the transport feed container? Should the Container name be some specific format, rather than using the pipebuild label?"},{"Id":"6587258763","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:22:58","Actor":"wtgodbe","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13795#issuecomment-329285911","RelatedDescription":"Commented on issue \"Use new publish mechanism in CoreCLR\" (#13795) at dotnet/coreclr","RelatedBody":"@weshaggard @karajas @MattGal I think this is good to go now - I'll also need to add\r\n\r\n> TransportFeedAccessToken=[AzureKeyVault=HelixKV,SecretName=dotnetfeed-account-key]\r\n\r\nTo the pipebuild def"},{"Id":"6587253789","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:21:52","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13921#issuecomment-329285632","RelatedDescription":"Commented on issue \"﻿Improve thread pool worker thread's spinning for work\" (#13921) at dotnet/coreclr","RelatedBody":"@kouvel In general the baseline plaintext performance on tip has regressed since I was looking at it regularly.  I have not figured out the root cause.  \r\n\r\nSo with that in mind doing a differential between UnfairSemaphore and CLRLifoSemaphore, I see about a 7% regression.  I assume the root cause would be the busy spinning in the spin wait.\r\n\r\nRegarding the UnfairSemaphoreSpinLimit:  I see a broad peak 48 and 96 (2x because I'm on Linux).  So I am happy with the current default of 70.\r\n\r\nI will do some more experimentation tonight or more likely tomorrow.\r\n\r\nWith using .`/wrk -c 500 -t 7 -d 10 http://localhost:5000/plaintext` as a stimulus I see roughly a 6% regressionWith using .`/wrk -c 500 -t 48 -d 10 http://localhost:5000/plaintext` as a stimulus I see roughly a 6% regression"},{"Id":"6587232436","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:16:48","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13953#issuecomment-329284317","RelatedDescription":"Commented on issue \"JIT: mark part of runtime lookup tree as nonfaulting and invariant\" (#13953) at dotnet/coreclr","RelatedBody":"@JosephTremoulet PTAL\r\ncc @dotnet/jit-contrib \r\n\r\nJit-diff impact (somewhat muted since R2R handles this path differently)\r\n```\r\nTotal bytes of diff: -2163 (-0.02 % of base)\r\n    diff is an improvement.\r\nTotal byte diff includes 0 bytes from reconciling methods\r\n        Base had    0 unique methods,        0 unique bytes\r\n        Diff had    0 unique methods,        0 unique bytes\r\nTop file improvements by size (bytes):\r\n       -2163 : System.Private.CoreLib.dasm (-0.06 % of base)\r\n1 total files with size differences (1 improved, 0 regressed), 78 unchanged.\r\nTop method improvements by size (bytes):\r\n         -52 : System.Private.CoreLib.dasm - System.Collections.Generic.ObjectEqualityComparer`1[Nullable`1][System.Nullable`1[System.__Canon]]:Equals(struct,struct):bool:this\r\n         -43 : System.Private.CoreLib.dasm - System.Collections.Generic.ObjectEqualityComparer`1[Nullable`1][System.Nullable`1[System.__Canon]]:LastIndexOf(ref,struct,int,int):int:this\r\n         -43 : System.Private.CoreLib.dasm - System.Collections.Generic.ObjectEqualityComparer`1[Nullable`1][System.Nullable`1[System.__Canon]]:IndexOf(ref,struct,int,int):int:this\r\n         -32 : System.Private.CoreLib.dasm - System.ThrowHelper:IfNullAndNullsAreIllegalThenThrow(ref,int) (3 methods)\r\n         -31 : System.Private.CoreLib.dasm - System.Collections.Generic.GenericComparer`1[ValueTuple`7][System.ValueTuple`7[System.__Canon,System.__Canon,System.__Canon,System.__Canon,System.__Canon,System.__Canon,System.__Canon]]:Compare(struct,struct):int:this\r\n91 total methods with size differences (91 improved, 0 regressed), 79218 unchanged.\r\n```\r\nSample diff:\r\n```asm\r\n;;; System.ThrowHelper:IfNullAndNullsAreIllegalThenThrow(ref,int) [shared instance]\r\n\r\n;;; Before \r\nG_M29294_IG01:\r\n       sub      rsp, 40\r\n       mov      qword ptr [rsp+20H], rcx\r\nG_M29294_IG02:\r\n       mov      rcx, qword ptr [rcx+56]\r\n       mov      rcx, qword ptr [rcx]\r\n       test     cl, 1\r\n       je       SHORT G_M29294_IG03\r\n       mov      rcx, qword ptr [rcx-1]\r\nG_M29294_IG03:\r\n       test     rdx, rdx\r\n       je       G_M29294_IG05\r\nG_M29294_IG04:\r\n       add      rsp, 40\r\n       ret      \r\n************** Beginning of cold code **************\r\nG_M29294_IG05:\r\n       mov      ecx, r8d\r\n       call     System.ThrowHelper:ThrowArgumentNullException(int)\r\n       int3  \r\n\r\n;; after\r\nG_M29294_IG01:\r\n       sub      rsp, 40\r\n       mov      qword ptr [rsp+20H], rcx\r\nG_M29294_IG02:\r\n       test     rdx, rdx\r\n       je       G_M29294_IG04\r\nG_M29294_IG03:\r\n       add      rsp, 40\r\n       ret      \r\n************** Beginning of cold code **************\r\nG_M29294_IG04:\r\n       mov      ecx, r8d\r\n       call     System.ThrowHelper:ThrowArgumentNullException(int)\r\n       int3 "},{"Id":"6587227105","Type":"PullRequestEvent","CreatedAt":"2017-09-13T20:15:31","Actor":"mikem8361","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13955","RelatedDescription":"Opened pull request \"Add info on loading core dumps in lldb\" (#13955) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6587629342","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:54:02","Actor":"JosephTremoulet","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/pull/7606#issuecomment-329307877","RelatedDescription":"Commented on issue \"Update CoreSetup to preview1-25713-01 (master)\" (#7606) at dotnet/cli","RelatedBody":"PR for JIT fix into CoreCLR is up at dotnet/coreclr#13957."},{"Id":"6587546570","Type":"PushEvent","CreatedAt":"2017-09-13T21:31:53","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/dotnet/cli/compare/5d4d7bf6195dfbc313086159481026aef75901ca...2b7becc720ea65a767bd73464ff2387f1fa5241b","RelatedDescription":"Pushed to refs/heads/merges/release/2.0.0-to-master-20170913-070028 at dotnet/cli","RelatedBody":null},{"Id":"6587324457","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:38:18","Actor":"jhudsoncedaron","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7643#issuecomment-329289730","RelatedDescription":"Commented on issue \"dotnet build --no-dependencies -r platform tries to build its dependencies anyway\" (#7643) at dotnet/cli","RelatedBody":"Update: it's not actually building the dependencies but it is evaluating the dependencies recursively in a way that causes spurious build failures."},{"Id":"6587272065","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:25:58","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7625#issuecomment-329286679","RelatedDescription":"Commented on issue \"req : target build to ARM32/64\" (#7625) at dotnet/cli","RelatedBody":"Hi @ch0mik \r\n\r\nCould you give me more detail of the request? What is your scenario? To use CLI on arm or publish to arm and run it on? Or it is about nuget packages?\r\n\r\nCore CLR does support arm https://docs.microsoft.com/en-us/dotnet/core/rid-catalog\r\n\r\n@KathleenDollard FYI"},{"Id":"6587245337","Type":"IssuesEvent","CreatedAt":"2017-09-13T20:19:55","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/5927","RelatedDescription":"Closed issue \"Fail to copy core-sdk files in ubuntu.16.04-arm build\" (#5927) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nBuild Command:\r\n```\r\n./build.sh -c Release /p:CLIBUILD_SKIP_TESTS=true /p:DISABLE_CROSSGEN=1 /p:Rid=ubuntu.16.04-arm /p:IncludeAdditionalSharedFrameworks=false\r\n```\r\n\r\nRelated patch:\r\n```\r\n--- a/build/Branding.props\r\n+++ b/build/Branding.props\r\n@@ -12,7 +12,7 @@\r\n     <SharedFrameworkName>Microsoft.NETCore.App</SharedFrameworkName>\r\n     <SharedFrameworkNugetName>$(SharedFrameworkName)</SharedFrameworkNugetName>\r\n \r\n-    <ProductMonikerRid Condition=\" '$(Rid)' == 'ubuntu.16.04-x64' Or '$(Rid)' == 'fedora.23-x64' Or '$(Rid)' == 'opensuse.13.2-x64' \">$(Rid)</ProductMonikerRid>\r\n+    <ProductMonikerRid Condition=\" '$(Rid)' == 'ubuntu.16.04-x64' Or '$(Rid)' == 'fedora.23-x64' Or '$(Rid)' == 'opensuse.13.2-x64' Or '$(Rid)' == 'ubuntu.16.04-arm'\">$(Rid)</ProductMonikerRid>\r\n     <ProductMonikerRid Condition=\" '$(ProductMonikerRid)' == '' \">$(OSName)-$(Architecture)</ProductMonikerRid>\r\n     \r\n     <ArtifactNameSdk>dotnet-sdk</ArtifactNameSdk>\r\n```\r\n```\r\n--- a/build/BundledRuntimes.props\r\n+++ b/build/BundledRuntimes.props\r\n@@ -53,21 +53,21 @@\r\n       </_DownloadAndExtractItem>\r\n \r\n       <_DownloadAndExtractItem Include=\"DownloadedSharedFrameworkInstallerFile\"\r\n-                               Condition=\"'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedSharedFrameworkInstallerFile)') And '$(InstallerExtension)' != ''\">\r\n+                               Condition=\"'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedSharedFrameworkInstallerFile)') And '$(InstallerExtension)' != '' And '$(IsCross)' == 'False'\">\r\n         <Url>$(CoreSetupInstallerBlobRootUrl)/$(SharedFrameworkVersion)/$(DownloadedSharedFrameworkInstallerFileName)</Url>\r\n         <DownloadFileName>$(DownloadedSharedFrameworkInstallerFile)</DownloadFileName>\r\n         <ExtractDestination></ExtractDestination>\r\n       </_DownloadAndExtractItem>\r\n \r\n       <_DownloadAndExtractItem Include=\"DownloadedSharedHostInstallerFile\"\r\n-                               Condition=\"'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedSharedHostInstallerFile)') And '$(InstallerExtension)' != ''\">\r\n+                               Condition=\"'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedSharedHostInstallerFile)') And '$(InstallerExtension)' != '' And '$(IsCross)' == 'False'\">\r\n         <Url>$(CoreSetupInstallerBlobRootUrl)/$(SharedHostVersion)/$(DownloadedSharedHostInstallerFileName)</Url>\r\n         <DownloadFileName>$(DownloadedSharedHostInstallerFile)</DownloadFileName>\r\n         <ExtractDestintation></ExtractDestintation>\r\n       </_DownloadAndExtractItem>\r\n \r\n       <_DownloadAndExtractItem Include=\"DownloadedHostFxrInstallerFile\"\r\n-                               Condition=\"'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedHostFxrInstallerFile)') And '$(InstallerExtension)' != ''\">\r\n+                               Condition=\"'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedHostFxrInstallerFile)') And '$(InstallerExtension)' != '' And '$(IsCross)' == 'False'\">\r\n         <Url>$(CoreSetupInstallerBlobRootUrl)/$(HostFxrVersion)/$(DownloadedHostFxrInstallerFileName)</Url>\r\n         <DownloadFileName>$(DownloadedHostFxrInstallerFile)</DownloadFileName>\r\n         <ExtractDestintation></ExtractDestintation>\r\n```\r\n```\r\n--- a/build/DependencyVersions.props\r\n+++ b/build/DependencyVersions.props\r\n@@ -1,7 +1,7 @@\r\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n <Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n   <PropertyGroup>\r\n-    <CLI_SharedFrameworkVersion>2.0.0-beta-001509-00</CLI_SharedFrameworkVersion>\r\n+    <CLI_SharedFrameworkVersion>2.0.0-beta-001650-00</CLI_SharedFrameworkVersion>^M\r\n     <CLI_MSBuild_Version>15.2.0-preview-000002-01</CLI_MSBuild_Version>\r\n     <CLI_Roslyn_Version>2.0.0-rc4-61325-08</CLI_Roslyn_Version>\r\n     <CLI_NETSDK_Version>1.1.0-alpha-20170209-1</CLI_NETSDK_Version>\r\n```\r\n```\r\n--- a/build/Prepare.targets\r\n+++ b/build/Prepare.targets\r\n@@ -26,10 +26,14 @@\r\n       <OverwriteExtractionDestination Condition=\"'$(OverwriteExtractionDestination)' == ''\">True</OverwriteExtractionDestination>\r\n     </PropertyGroup>\r\n     \r\n-    <DownloadFile Condition=\" '@(_DownloadAndExtractItem)' != '' \"\r\n+    <DownloadFile Condition=\" '@(_DownloadAndExtractItem)' != '' And '$(IsCross)' == 'False'\"\r\n                   Uri=\"%(_DownloadAndExtractItem.Url)\"\r\n                   DestinationPath=\"%(_DownloadAndExtractItem.DownloadFileName)\" />\r\n \r\n+    <Copy Condition=\" '$(IsCross)' == 'True' \"\r\n+          SourceFiles=\"$(RepoRoot)/testsource/$(CombinedFrameworkHostCompressedFileName)\"\r\n+          DestinationFiles=\"$(CombinedSharedHostAndFrameworkArchive)\" />\r\n+\r\n     <ZipFileExtractToDirectory Condition=\" '%(_DownloadAndExtractItem.ExtractDestination)' != '' AND '$(OSName)' == 'win' \"\r\n                                SourceArchive=\"%(_DownloadAndExtractItem.DownloadFileName)\"\r\n                                DestinationDirectory=\"%(_DownloadAndExtractItem.ExtractDestination)\"\r\n```\r\n```\r\n--- a/build/Stage0.props\r\n+++ b/build/Stage0.props\r\n@@ -5,6 +5,8 @@\r\n       <DotnetStage0>$(Stage0Directory)/dotnet$(ExeExtension)</DotnetStage0>\r\n       <IsDesktopAvailable>False</IsDesktopAvailable>\r\n       <IsDesktopAvailable Condition=\" '$(OSName)' == 'win' \">True</IsDesktopAvailable>\r\n+      <IsCross>False</IsCross>\r\n+      <IsCross Condition=\" !$(Rid.Contains('$(OSName)')) Or !$(Rid.Contains('$(Architecture)')) \">True</IsCross>\r\n       <CoreCLRRid>$(Rid)</CoreCLRRid>\r\n       <CoreCLRRid Condition=\" '$(OSName)' == 'win' \">win7-$(Architecture)</CoreCLRRid>\r\n       <CoreCLRRid Condition=\" '$(OSName)' == 'osx' \">osx.10.10-x64</CoreCLRRid>\r\n```\r\n## Expected  behavior\r\nBuild successful\r\n\r\n## Actual behavior\r\nOccurred the following errors:\r\n```\r\n                   \"/home/jyoung/git/dotnet/cli-jy/build.proj\" (default target) (1) ->\r\n                   (CompileCLI target) -> \r\n                     /home/jyoung/git/dotnet/cli-jy/build/Compile.targets(50,7): error MSB3680: The source file \"/home/jyoung/git/dotnet/cli-jy/artifacts/ubuntu.16.04-arm/stage2/sdk/2.0.0-alpha-005111/System.ComponentModel.Primitives.dll\" does not exist. [/home/jyoung/git/dotnet/cli-jy/build.proj]\r\n                     /home/jyoung/git/dotnet/cli-jy/build/Compile.targets(50,7): error MSB3680: The source file \"/home/jyoung/git/dotnet/cli-jy/artifacts/ubuntu.16.04-arm/stage2/sdk/2.0.0-alpha-005111/System.Collections.Specialized.dll\" does not exist. [/home/jyoung/git/dotnet/cli-jy/build.proj]\r\n                     /home/jyoung/git/dotnet/cli-jy/build/Compile.targets(50,7): error MSB3680: The source file \"/home/jyoung/git/dotnet/cli-jy/artifacts/ubuntu.16.04-arm/stage2/sdk/2.0.0-alpha-005111/System.Collections.NonGeneric.dll\" does not exist. [/home/jyoung/git/dotnet/cli-jy/build.proj]\r\n                     /home/jyoung/git/dotnet/cli-jy/build/Compile.targets(50,7): error MSB3680: The source file \"/home/jyoung/git/dotnet/cli-jy/artifacts/ubuntu.16.04-arm/stage2/sdk/2.0.0-alpha-005111/System.Private.DataContractSerialization.dll\" does not exist. [/home/jyoung/git/dotnet/cli-jy/build.proj]\r\n```\r\n\r\nI'm trying to build cli project for Ubuntu.16.04-arm. I already had a tarball for Ubuntu.16.04-arm but there wasn't in Azure server so I added some patch to copy the local tarball for testing. The copy and decompression worked fine, but fails to copy the core-sdk dlls.\r\nRelated code:\r\n```\r\nin build/Compile.targets\r\n      <!-- copy core sdk -->                                                    \r\n      <Copy SourceFiles=\"@(MSBuildImportsContent)\"                              \r\n            DestinationFolder=\"$(SdkOutputDirectory)/%(RecursiveDir)\" /> \r\n```\r\nWhat does that `MSBuildImportsContent` mean? When I look at the Ubuntu.14.04-x64 log, it looks like there are not any files to copy at that stage, but I can not find any part of it that copies files to `SdkOutputDirectory`.\r\n\r\n\r\n\r\n"},{"Id":"6587235670","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:17:35","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7585#issuecomment-329284513","RelatedDescription":"Commented on issue \"Switch CLI to a non-system language\" (#7585) at dotnet/cli","RelatedBody":"I have changed the language from English to something else on an English OS - however, it's probably the same technique:\r\nIn your command shell; set the environmental variable \"DOTNET_CLI_UI_LANGUAGE\" to \"en\"\r\n\r\nLet me know if that works - I'm now curious...\r\n"},{"Id":"6587204768","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:10:07","Actor":"dasMulli","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7583#issuecomment-329282621","RelatedDescription":"Commented on issue \"`dotnet run -p` doesn't work with asp.net apps\" (#7583) at dotnet/cli","RelatedBody":"I don't think this has to do with path handling of the CLI but rather the asp.net core stack using the working directory as content root. This should be fixed by adding this to the project:\r\n\r\n```xml\r\n  <PropertyGroup>\r\n    <RunWorkingDirectory>$(MSBuildThisFileDirectory)</RunWorkingDirectory>\r\n  </PropertyGroup>\r\n```"},{"Id":"6587189327","Type":"IssuesEvent","CreatedAt":"2017-09-13T20:06:26","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7569","RelatedDescription":"Closed issue \"dotnet user profile folder\" (#7569) at dotnet/cli","RelatedBody":"Hi @livarcocc ,\r\n\r\nMay you can help me with this simple question. Is there anyway to re-locate the dotnet user profile folder (.dotnet)?\r\n\r\n\r\n\r\n\r\n"},{"Id":"6587189313","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:06:26","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7569#issuecomment-329281724","RelatedDescription":"Commented on issue \"dotnet user profile folder\" (#7569) at dotnet/cli","RelatedBody":"Please feel free to reopen if you need more detail"},{"Id":"6587175672","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:03:09","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7569#issuecomment-329280924","RelatedDescription":"Commented on issue \"dotnet user profile folder\" (#7569) at dotnet/cli","RelatedBody":"Hi @ariellourenco \r\n\r\nThe location is fixed relative to user profile\r\n\r\nThis may not be 100% what you want, you can change the environment variable USERPROFILE on windows, HOME on Linux. Which will create a _.dotnet_ under that folder. Note, changing that variable will also affect other program rely on it"},{"Id":"6587132603","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:53:22","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7556#issuecomment-329278298","RelatedDescription":"Commented on issue \"'dotnet build' produces no useful error messages\" (#7556) at dotnet/cli","RelatedBody":"Hi @shinmai are you still seeing this problem?"},{"Id":"6587114364","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:49:08","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7583#issuecomment-329277201","RelatedDescription":"Commented on issue \"`dotnet run -p` doesn't work with asp.net apps\" (#7583) at dotnet/cli","RelatedBody":"I think it relate to this https://github.com/dotnet/cli/pull/7166\r\n\r\nIt is a good change to have, but it is a breaking change. This change need to wait for a major release"},{"Id":"6586966393","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:14:59","Actor":"anurse","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7526#issuecomment-329268496","RelatedDescription":"Commented on issue \"dotnet-install.ps1 script prints installation drive name (old debugging info?)\" (#7526) at dotnet/cli","RelatedBody":":+1:"},{"Id":"6586955676","Type":"IssuesEvent","CreatedAt":"2017-09-13T19:12:25","Actor":"jhudsoncedaron","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7643","RelatedDescription":"Opened issue \"dotnet build --no-dependencies -r platform tries to build its dependencies anyway\" (#7643) at dotnet/cli","RelatedBody":"Have a project with a bunch of dependent projects\r\n\r\nbuild the whole thing with dotnet build\r\n\r\ntry to build the final exe for a specific platform with dotnet build --no-dependencies -r win7-x64\r\n\r\ndiscover everything got built again! There's no cause for that!\r\n\r\nThis appears to be the reason https://github.com/dotnet/cli/issues/7641 won't bisect."},{"Id":"6586898781","Type":"IssuesEvent","CreatedAt":"2017-09-13T19:00:12","Actor":"jhudsoncedaron","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7642","RelatedDescription":"Opened issue \"dotnet build --no-dependencies tries to build <ReferenceOutputAssembly>false</ReferenceOutputAssembly> references\" (#7642) at dotnet/cli","RelatedBody":"The project has extra DLLs that need to be copied into its build output to work\r\n\r\n    <ProjectReference Include=\"..\\Cedaron.Redacted.Repository.SQL\\Cedaron.Redacted.Repository.SQL.csproj\">\r\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\r\n      <OutputItemType>Content</OutputItemType>\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n      <Targets>Build;DebugSymbolsProjectOutputGroup</Targets>\r\n    </ProjectReference>\r\n\r\nAnd these projects get rebuilt even if --no-dependencies is specified. The dlls have already been built just copy them."},{"Id":"6586729767","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T18:22:01","Actor":"joshudson","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7641#issuecomment-329254203","RelatedDescription":"Commented on issue \"Can get new package downgrades doing dotnet build -r platform / nuget package resolution does the wrong thing within net core itself\" (#7641) at dotnet/cli","RelatedBody":"Bisection has repeatedly failed; but we have an additional bug in the tooling:\r\n\r\nSystem.IO.FileSystem (>= 4.0.1) -> runtime.win.System.IO.FileSystem (>= 4.3.0)\r\n\r\nSomehow the tooling thinks System.IO.Filesystem 4.0.1 references runtime.win.System.IO.FileSystem 4.3.0. IT DOES NOT!"},{"Id":"6586616074","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:56:20","Actor":"polarbit","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7640#issuecomment-329247350","RelatedDescription":"Commented on issue \"dotnet-sdk-2.0.0 package dependency error on ubuntu 16.10 \" (#7640) at dotnet/cli","RelatedBody":"Thank you @livarcocc  and @omajid  for responses, I did not know that. 👍 \r\n\r\nI assumed implicitly, if it works with 17.04, 16.04, 14.04;  it works with 16.10  :)\r\n\r\nBy the way, everything works for now on 16.10 after I installed libicu55. But of course I will move my system to 16.04, or 17.04."},{"Id":"6586499431","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:29:51","Actor":"cobrafast","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/3681#issuecomment-329240068","RelatedDescription":"Commented on issue \"dotnet restore fails on Linux 4.6.2\" (#3681) at dotnet/cli","RelatedBody":"@janvorli sure:\r\n\r\n```\r\ncurl 7.55.1 (x86_64-pc-linux-gnu) libcurl/7.55.1 OpenSSL/1.0.2l zlib/1.2.8 libpsl/0.17.0 (+libidn2/0.16) libssh2/1.8.0 nghttp2/1.25.0 librtmp/2.3\r\nRelease-Date: 2017-08-14\r\nProtocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \r\nFeatures: AsynchDNS IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL \r\n```"},{"Id":"6586493945","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:28:35","Actor":"janvorli","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/3681#issuecomment-329239709","RelatedDescription":"Commented on issue \"dotnet restore fails on Linux 4.6.2\" (#3681) at dotnet/cli","RelatedBody":"@cobrafast can you please run `curl --version` and post the result here? I am interested in seeing the libraries that it shows."},{"Id":"6586449490","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:18:34","Actor":"cobrafast","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/3681#issuecomment-329236966","RelatedDescription":"Commented on issue \"dotnet restore fails on Linux 4.6.2\" (#3681) at dotnet/cli","RelatedBody":"Installing packages from the jessie repo doesn't help either.\r\n\r\nPerhaps we can get this issue reopened?"},{"Id":"6586415468","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:10:46","Actor":"cobrafast","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/3681#issuecomment-329234806","RelatedDescription":"Commented on issue \"dotnet restore fails on Linux 4.6.2\" (#3681) at dotnet/cli","RelatedBody":"Issue seems to persist with the build from the dotnet debian package repository.\r\n\r\n```\r\ndeb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-stretch-prod stretch main\r\n```\r\n\r\n```\r\nfish: “dotnet build” terminated by signal SIGSEGV (Address boundary error)\r\n```\r\n\r\n```\r\n#0  0x00007fffe0abfd6d in ?? () from /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#1  0x00007fffe0abac8b in X509_verify_cert () from /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#2  0x00007fff7d237ff6 in ?? ()\r\n#3  0x00007fff54f1edb0 in ?? ()\r\n#4  0x6c00fa377b77ae7b in ?? ()\r\n#5  0x00000000d0408626 in ?? ()\r\n#6  0x00007ffff67b4488 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/2.0.0/libcoreclr.so\r\n#7  0x00007fff54f1f688 in ?? ()\r\n#8  0x00007fff7e652100 in ?? ()\r\n#9  0x00007fff7e652100 in ?? ()\r\n#10 0x00007fff54f1edb0 in ?? ()\r\n#11 0x00007fff7d237ff6 in ?? ()\r\n#12 0x00007fff54f1ee40 in ?? ()\r\n#13 0x00007fff7e652100 in ?? ()\r\n#14 0x00007fff5823d308 in ?? ()\r\n#15 0x0000000000000001 in ?? ()\r\n#16 0x00007fff582306a8 in ?? ()\r\n#17 0x00007fff5823d378 in ?? ()\r\n#18 0x00007fff5823d308 in ?? ()\r\n#19 0x00007fff5823d308 in ?? ()\r\n#20 0x00007fff301330c0 in ?? ()\r\n#21 0x00007fff54f1eeb0 in ?? ()\r\n#22 0x00007fff7e43ce57 in ?? ()\r\n#23 0x00007fff54f1ee50 in ?? ()\r\n#24 0x00007fff5823d308 in ?? ()\r\n#25 0x00007fff582306a8 in ?? ()\r\n#26 0x0000000000000000 in ?? ()\r\n```\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  8\r\n OS Platform: Linux\r\n RID:         debian.8-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n```\r\nii  dotnet-host                                                 2.0.0-1                                         amd64\r\nii  dotnet-hostfxr-2.0.0                                        2.0.0-1                                         amd64\r\nii  dotnet-runtime-2.0.0                                        2.0.0-1                                         amd64\r\nii  dotnet-sdk-2.0.0                                            2.0.0-1                                         amd64\r\nii  libcrypt-openssl-bignum-perl                                0.04-4+b2                                       amd64\r\nii  libcrypt-openssl-rsa-perl                                   0.28-2+b1                                       amd64\r\nii  libcurl4-openssl-dev:amd64                                  7.55.1-1                                        amd64\r\nii  libgnutls-openssl27:amd64                                   3.5.13-2                                        amd64\r\nii  openssl                                                     1.0.1t-1+deb8u6                                 amd64\r\n```"},{"Id":"6586384622","Type":"IssuesEvent","CreatedAt":"2017-09-13T17:03:46","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7640","RelatedDescription":"Closed issue \"dotnet-sdk-2.0.0 package dependency error on ubuntu 16.10 \" (#7640) at dotnet/cli","RelatedBody":"Hi,\r\n\r\nI tried to install dotnet-sdk-2.0.0, after uninstalling preview versions.\r\nAnd received same error with #7475. \r\nWhich says briefly _\"The following packages have unmet dependencies:\r\n dotnet-sdk-2.0.0 : Depends: dotnet-runtime-2.0.0 but it is not going to be installed\"_\r\n\r\nThen tried to install dotnet-runtime-2.0.0 ; this time apt-get says libicu55 not found or broken .\r\n\r\nThen I added below line to /etc/apt/sources.list\r\ndeb http://security.ubuntu.com/ubuntu xenial-security main\r\nW.r.t. package here: https://packages.ubuntu.com/xenial/amd64/libicu55-dbg/download\r\n\r\nAnd re-run apt-get install dotnet-sdk-2.0.0 and be successful.\r\nBut currently, I did not understand what is the reason. Was my system broken, or package itself is broken ?\r\n\r\nIf anybody can look into outputs below and give some comments, it will be very helpful.\r\n\r\n## ERRORS & OUTPUTS:\r\n\r\n**apt-get update**\r\n> sudo apt-get update\r\nHit:1 http://tr.archive.ubuntu.com/ubuntu yakkety InRelease\r\nHit:2 http://tr.archive.ubuntu.com/ubuntu yakkety-updates InRelease\r\nHit:3 http://tr.archive.ubuntu.com/ubuntu yakkety-backports InRelease\r\nHit:4 http://security.ubuntu.com/ubuntu yakkety-security InRelease\r\nGet:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]\r\nHit:6 https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial InRelease\r\nHit:7 https://packages.microsoft.com/repos/vscode stable InRelease\r\nHit:8 https://download.docker.com/linux/ubuntu yakkety InRelease\r\nGet:9 http://security.ubuntu.com/ubuntu xenial-security/main amd64 Packages [356 kB]\r\nGet:10 http://security.ubuntu.com/ubuntu xenial-security/main i386 Packages [333 kB]\r\nGet:11 http://security.ubuntu.com/ubuntu xenial-security/main Translation-en [156 kB]\r\nGet:12 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [60,0 kB]\r\nGet:13 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [57,0 kB]\r\nFetched 1.065 kB in 16s (65,9 kB/s)\r\nReading package lists... Done\r\n\r\n**apt-get install dotnet-runtime-2.0.0**\r\n>sudo apt-get install dotnet-runtime-2.0.0\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\nSome packages could not be installed. This may mean that you have\r\nrequested an impossible situation or if you are using the unstable\r\ndistribution that some required packages have not yet been created\r\nor been moved out of Incoming.\r\nThe following information may help to resolve the situation:\r\n\r\nThe following packages have unmet dependencies:\r\ndotnet-runtime-2.0.0 : Depends: libicu55 but it is not installable\r\nE: Unable to correct problems, you have held broken packages.\r\n\r\n**libicu55 install error**\r\n> sudo apt-get install dotnet-runtime-2.0.0\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\nSome packages could not be installed. This may mean that you have\r\nrequested an impossible situation or if you are using the unstable\r\ndistribution that some required packages have not yet been created\r\nor been moved out of Incoming.\r\nThe following information may help to resolve the situation:\r\n\r\nThe following packages have unmet dependencies:\r\ndotnet-runtime-2.0.0 : Depends: libicu55 but it is not installable\r\nE: Unable to correct problems, you have held broken packages.\r\n\r\n**apt-cache search libicu**\r\n> sudo apt-cache search libicu\r\nicu-devtools - Development utilities for International Components for Unicode\r\nicu-devtools-dbg - Development utilities for International Components for Unicode (debug symbols)\r\nlibicu-dev - Development files for International Components for Unicode\r\nlibicu57 - International Components for Unicode\r\nlibicu57-dbg - International Components for Unicode (debug symbols)\r\nlibicu4j-4.2-java - Library for Unicode support and internationalization\r\nlibicu4j-4.4-java - Library for Unicode support and internationalization\r\nlibicu4j-49-java - Library for Unicode support and internationalization\r\nlibicu4j-java - Library for Unicode support and internationalization\r\nlibicu4j-java-doc - Library for Unicode support and internationalization - Docs\r\n\r\n## Environment data\r\nNAME=\"Ubuntu\"\r\nVERSION=\"16.10 (Yakkety Yak)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 16.10\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6586384612","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:03:46","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7640#issuecomment-329232921","RelatedDescription":"Commented on issue \"dotnet-sdk-2.0.0 package dependency error on ubuntu 16.10 \" (#7640) at dotnet/cli","RelatedBody":"You are absolutely right. We supported that in 1.0 I believe. We support 14.04 and 16.04.\r\n\r\nClosing this issue then."},{"Id":"6586346146","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:55:25","Actor":"omajid","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7640#issuecomment-329230522","RelatedDescription":"Commented on issue \"dotnet-sdk-2.0.0 package dependency error on ubuntu 16.10 \" (#7640) at dotnet/cli","RelatedBody":"Do we support Ubuntu 16.10? Our OS support page says we dont: https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0-supported-os.md#out-of-support-os-versions"},{"Id":"6586335942","Type":"IssuesEvent","CreatedAt":"2017-09-13T16:53:11","Actor":"jhudsoncedaron","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7641","RelatedDescription":"Opened issue \"Can get new package downgrades doing dotnet build -r platform / nuget package resolution does the wrong thing within net core itself\" (#7641) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nHave a .NET Core 2.0 project\r\nDon't reference System.Diagnostics.Debug (normally you would not reference this in an MVC project so this is easy)\r\nHave a dependent .NET Core 1.0 DLL that references the 1.0 version of System.IO.Filesystem\r\nobserve that dotnet build succeeds\r\nobserve that dotnet build -r win7-x64 fails with package depenency problems\r\n\r\n## Expected  behavior\r\n\r\nbuild succeeds\r\n\r\n## Actual behavior\r\n\r\nC:\\Users\\jhudson\\dev\\redacted.csproj : error NU1605: Detected package downgrade: System.Diagnostics.Debug from 4.3.0 to 4.0.11. Reference the package directly from the project to select a different version. \\r [C:\\Users\\jhudson\\dev\\redacted.csproj]\r\nC:\\Users\\jhudson\\dev\\redacted.csproj : error NU1605:  Redacted2 (>= 1.0.0) -> Cedaron.Common (>= 1.1.2) -> System.IO.FileSystem (>= 4.0.1) -> runtime.win.System.IO.FileSystem (>= 4.3.0) -> System.Diagnostics.Debug (>= 4.3.0) \\r [C:\\Users\\jhudson\\dev\\redacted.csproj]\r\nC:\\Users\\jhudson\\dev\\cento_forms\\src\\redacted.csproj : error NU1605:  Redacted2 (>= 1.0.0) -> Cedaron.Common (>= 1.1.2) -> System.Diagnostics.Debug (>= 4.0.11) [C:\\Users\\jhudson\\dev\\redacted.csproj]\r\n\r\nWhere Redacted2 is a normal .NET Core 2.0 dll and Cedaron.Common is pinned to .NET Core 1.0 for compatibility reasons (in fact it hasn't been compiled since .NET Core 2.0 came out)\r\n\r\nObviously the runtime.win.* dlls referencing other dlls is causing the problem. I've got no idea what the solution ought to be.\r\n\r\nI've got many instances of this error message with different dlls and I think that directly embedding the dependencies of runtime.win.* into my own project files is a terrible idea."},{"Id":"6586323062","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:50:22","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7640#issuecomment-329229102","RelatedDescription":"Commented on issue \"dotnet-sdk-2.0.0 package dependency error on ubuntu 16.10 \" (#7640) at dotnet/cli","RelatedBody":"@wli3 can you help out here?"},{"Id":"6586319879","Type":"IssuesEvent","CreatedAt":"2017-09-13T16:49:37","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7631","RelatedDescription":"Closed issue \"Fedora 26 requires compat-openssl10\" (#7631) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nTry to install the .NET Core 2.0 SDK in a Fedora 26 container, using the instructions at https://www.microsoft.com/net/core#linuxfedora.\r\n\r\n### Dockerfile\r\n```\r\nFROM fedora:26\r\n\r\nRUN rpm --import https://packages.microsoft.com/keys/microsoft.asc \\\r\n    && sh -c 'echo -e \"[packages-microsoft-com-prod]\\nname=packages-microsoft-com-prod \\nbaseurl=https://packages.microsoft.com/yumrepos/microsoft-rhel7.3-prod\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\" > /etc/yum.repos.d/dotnetdev.repo'\r\n\r\nRUN dnf install -y libunwind libicu\r\n\r\nRUN dnf install -y dotnet-sdk-2.0.0\r\n\r\nRUN mkdir warmup \\\r\n    && cd warmup \\\r\n    && dotnet new \\\r\n    && cd .. \\\r\n    && rm -rf warmup \\\r\n```\r\n\r\n## Expected  behavior\r\nInstall works.\r\n\r\n## Actual behavior\r\nCrash during `dnf install dotnet-sdk-2.0.0`:\r\n\r\n```\r\n/var/tmp/rpm-tmp.Kob50o: line 26:    15 Aborted                 (core dumped) /usr/share/dotnet/dotnet exec /usr/share/dotnet/sdk/2.0.0/dotnet.dll internal-reportinstallsuccess \"rpmpackage\" > /dev/null 2>&1\r\n```\r\n\r\nAnd crash during `dotnet new`:\r\n\r\n```\r\nNo usable version of the libssl was found\r\n```\r\n\r\n## Fix\r\nInstall `compat-openssl10` in addition to `libunwind` and `libicu`:\r\n\r\n```\r\n\r\nRUN dnf install -y libunwind libicu compat-openssl10\r\n```"},{"Id":"6586319872","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:49:37","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7631#issuecomment-329228893","RelatedDescription":"Commented on issue \"Fedora 26 requires compat-openssl10\" (#7631) at dotnet/cli","RelatedBody":"Thanks @mairaw, closing this one since we have an issue tracking the website update already."},{"Id":"6586317672","Type":"IssuesEvent","CreatedAt":"2017-09-13T16:49:07","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7638","RelatedDescription":"Closed issue \"ASP.NET Core 2.0: Model expressions throws error when used with tag helpers\" (#7638) at dotnet/cli","RelatedBody":"Hi,\r\n\r\nI have used input tag helper with model expressions in my entire application. But recent update 2.0 will collapse my entire application  and its throws error #1614.\r\n\r\nIf there is any options to resolve this model expression issues with tag helpers in my application with 2.0 SDK.\r\n\r\nThanks"},{"Id":"6586281194","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:40:55","Actor":"mairaw","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/cli/issues/7631#issuecomment-329226395","RelatedDescription":"Commented on issue \"Fedora 26 requires compat-openssl10\" (#7631) at dotnet/cli","RelatedBody":"I'll take care of that page. "}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6587608777","Type":"ForkEvent","CreatedAt":"2017-09-13T21:48:23","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/joperezr/standard","RelatedDescription":"Forked dotnet/standard to joperezr/standard","RelatedBody":null},{"Id":"6586786059","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T18:34:32","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-329257771","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"@amasoumi NETStandard.Library.NETFramework is about .NET Framework and not UWP some of it might work but there will definitely be some issues with it as you start to use more of the types from netstandard.\r\n\r\n@daveh101 You will need to use a 6.0.0 version of the Microsoft.NETCore.UniversalWindowsPlatform package to be able to correctly consume .NET Standard 2.0 assets. It doesn't look like we have a preview of it on nuget yet but we do have a version on our dev build myget feed. https://dotnet.myget.org/feed/dotnet-core/package/nuget/Microsoft.NETCore.UniversalWindowsPlatform/6.0.0"},{"Id":"6586518247","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:34:14","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/442#issuecomment-329241176","RelatedDescription":"Commented on issue \"Adding .NET Standard reference assemblies is consuming 20% of a single design-time build, 9% of a solution design-time build \" (#442) at dotnet/standard","RelatedBody":"If you'd like to try the proposed solution you can use NETStandard.Library.2.1.0-preview1-25708-0 from https://www.myget.org/F/ericstj-issue-repros/api/v3/index.json.  If you'd like to minimize the change, you can just grab the targets out of there and overwrite the ones in your NS.L package.\r\n\r\nFor `.NETStandard.Library.NETFramework.targets` it'll get slightly better with https://github.com/dotnet/sdk/pull/1582.  We can additionally use the list technique there if we find that it helps."},{"Id":"6586501049","Type":"WatchEvent","CreatedAt":"2017-09-13T17:30:13","Actor":"roberthusak","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6586490538","Type":"IssuesEvent","CreatedAt":"2017-09-13T17:27:50","Actor":"roberthusak","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/490","RelatedDescription":"Opened issue \"Why does netstandard.dll reference particular platform assemblies with version 0.0.0.0?\" (#490) at dotnet/standard","RelatedBody":"Hi, when I open `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.0.0\\netstandard.dll` in ILSpy, I can see that all the assembly references it contains have version `0.0.0.0`:\r\n\r\n    mscorlib, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n    System.Core, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n    System, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n    System.Data, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n    System.Data.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n    ...\r\n\r\nAll the referenced assemblies are in the same folder, but have versions different from `0.0.0.0` (`mscorlib.dll 4.0.0.0`, `System.Data.Common.dll 4.2.0.0` etc.). The same situation is in the case of .NET 4.6.1 and its `netstandard.dll`.\r\n\r\nI would like to know what the reason for this is and what it is supposed to mean. Is it a signal to ignore the version of the referenced assemblies? Or is `netstandard.dll` a special case when one always needs to ignore the reference versions?\r\n\r\nWe're working on a custom compiler built upon Roslyn and currently we can't handle references to libraries compiled to `netstandard2.0` due to this anomaly. I'm looking for a way to handle it properly. Thanks."},{"Id":"6583868722","Type":"WatchEvent","CreatedAt":"2017-09-13T08:01:47","Actor":"HopeForToday","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6583716806","Type":"ForkEvent","CreatedAt":"2017-09-13T07:21:14","Actor":"CQLiangYao","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/CQLiangYao/standard","RelatedDescription":"Forked dotnet/standard to CQLiangYao/standard","RelatedBody":null},{"Id":"6583716103","Type":"WatchEvent","CreatedAt":"2017-09-13T07:21:04","Actor":"CQLiangYao","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6583384217","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T05:22:26","Actor":"davkean","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/442#issuecomment-329062268","RelatedDescription":"Commented on issue \"Adding .NET Standard reference assemblies is consuming 20% of a single design-time build, 9% of a solution design-time build \" (#442) at dotnet/standard","RelatedBody":"I've now got the evaluation profile working in a state that let's me capture numbers across an entire solution. Here's the cost of these expressions if we were to do a solution-wide design-time build of the private customer solution that I've been testing with here: https://github.com/dotnet/project-system/issues/2789.\r\n\r\nThis is the top 6 expressions:\r\n\r\nFile|Line Number|Element|Expression|Inclusive (ms)|Exclusive (ms)\r\n---|---:|---|---|---:|---:\r\nNETStandard.Library.NETFramework.targets|3|_NETStandardLibraryNETFrameworkReference|`<_NETStandardLibraryNETFrameworkReference Include=\"$(MSBuildThisFileDirectory)\\ref\\*.dll\" Exclude=\"@(_NETStandardLibraryNETFrameworkReference-&gt;'$(MSBuildThisFileDirectory)\\ref\\%(FileName).dll'\"  />`|580.7|580.8\r\nNETStandard.Library.NETFramework.targets|6|_NETStandardLibraryNETFrameworkLib|`<_NETStandardLibraryNETFrameworkLib Include=\"$(MSBuildThisFileDirectory)\\lib\\*.dll\" Exclude=\"@(_NETStandardLibraryNETFrameworkLib-&gt;'$(MSBuildThisFileDirectory)\\ref\\%(FileName).dll'\"  />`|516.5|516.5\r\nNETStandard.Library.targets|7|Reference|`<Reference Condition=\"'$(_NetStandardLibraryRefPath)' != ''\" Include=\"$(_NetStandardLibraryRefPath)*.dll\" ><!-- Private = false to make these reference only --><Private>false</Private><!-- hide these from Assemblies view in Solution Explorer, they will be shown under packages --><Visible>false</Visible><Facade Condition=\"'%(FileName)' != 'netstandard'\">true</Facade><NuGetPackageId>NETStandard.Library</NuGetPackageId><NuGetPackageVersion>$(NETStandardLibraryPackageVersion)</NuGetPackageVersion></Reference>`|298.3|262.6\r\nMicrosoft.Managed.DesignTime.targets|46|ManagedXamlResourcesDirectory|`<ManagedXamlResourcesDirectory Condition=\"!Exists('$(ManagedXamlResourcesDirectory)')\" >$(MSBuildThisFileDirectory)$(LangName.Split('-')[0])</ManagedXamlResourcesDirectory>`|116.4|113.8\r\nMicrosoft.Common.CurrentVersion.targets|92|TargetPlatformSdkPath|`<TargetPlatformSdkPath Condition=\"'$(TargetPlatformSdkPath)' == ''\" >$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPlatformSDKLocation($(TargetPlatformIdentifier), $(TargetPlatformVersion)))</TargetPlatformSdkPath>`|53.7|52.8\r\nMicrosoft.Common.CurrentVersion.targets|83|FrameworkPathOverride|`<FrameworkPathOverride Condition=\"'$(FrameworkPathOverride)' == ''\" >$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries($(TargetFrameworkIdentifier), $(TargetFrameworkVersion), $(TargetFrameworkProfile), $(PlatformTarget), $(TargetFrameworkRootPath)))</FrameworkPathOverride>`|52.5|51.8\r\n"},{"Id":"6583100951","Type":"WatchEvent","CreatedAt":"2017-09-13T03:13:15","Actor":"pds-test1","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6583078049","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T03:03:32","Actor":"davkean","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/442#issuecomment-329044541","RelatedDescription":"Commented on issue \"Adding .NET Standard reference assemblies is consuming 20% of a single design-time build, 9% of a solution design-time build \" (#442) at dotnet/standard","RelatedBody":"Daniel wrote an evaluation profiler so I can see the real cost here - I'm seeing that this costs between 8 - 10 ms per evaluation (the 4th highest expression)\r\n\r\nGiven a project that has 12 .NET Framework project references, and consumes 1 .NET Standard library, that cost would be approximately:\r\n\r\n- 2 x 12 references x 10 ms == 240 ms (note we're [double-evaluating](https://github.com/Microsoft/msbuild/issues/1276) references right now)\r\n- 1 x project itself x 10 ms == 10ms\r\n\r\nTotal: 250ms.\r\n\r\nStill playing around with the profiler - but will point to a bug that calls out all costs when I'm finished."},{"Id":"6580983866","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:38:14","Actor":"amasoumi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-328910710","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"since you need to have NETStandard.Library.NETFramework.2.0.0-preview2-25405-01 to build references to the API and one of its dependency is NETStandard.Library (>= 2.0.0-preview2-25401-01) for some reason it will points to a different version of netstandard dll  even though you upgraded to the latest stable version of NETStandard.Library which is 2.0.0.0, so I think for now this is one option,\r\nhowever I agree that this is not a permeant solution until they release a stable version of NETStandard.Library.NETFramework"},{"Id":"6580928405","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:26:33","Actor":"daveh101","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-328907096","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"@weshaggard I have 2 solutions that I am working on, typically both on different versions, **5.3.2** and **5.4.0**\r\n\r\nIt doesn't work with either of these.  There doesn't appear to be any pre-release version that can be used either"},{"Id":"6580859669","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:12:07","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-328902833","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"@daveh101 can you tell us what version of Microsoft.NETCore.UniversalWindowsPlatform package you are referencing? "},{"Id":"6580850204","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:10:14","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-328902241","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"While that might workaround this issue it isn't the correct solution. You might be getting lucky that the net461 netstandard.dll works in UWP but that is definitely not the one that should be used. There is a netstandard.dll that is specific to UWP and it should be in the meta-package Microsoft.NETCore.UniversalWindowsPlatform.\r\n\r\n@joperezr @nattress do you guys have any ideas why he might not be getting the netstandard.dll referenced automatically?"},{"Id":"6580480223","Type":"WatchEvent","CreatedAt":"2017-09-12T15:01:09","Actor":"Jamie-BitFlight","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6580009440","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T13:35:12","Actor":"amasoumi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-328855071","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"@daveh101 , no problem, don't forget to give me rating 👍 "},{"Id":"6579931302","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T13:19:44","Actor":"daveh101","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-328850798","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"@amasoumi THanks - That works - pretty obvious now you mention it :)"},{"Id":"6579787198","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T12:49:36","Actor":"amasoumi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/489#issuecomment-328842699","RelatedDescription":"Commented on issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"use the netstandard.dll from the either following locations and put it into a local folder of your choice and insert the \"ItemGroup\" below at the end of your .csproj file\r\n--------------------------------------\r\nlocations to look for DLL ;\r\n`C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\net461\\lib\\netstandard.dll or from the .NET Core 2.0 SDK you can find it C:\\Program Files\\dotnet\\sdk\\2.0.0\\Microsoft\\Microsoft.NET.Build.Extensions\\net461\\lib\\netstandard.dll\r\n`\r\n------------------------------------ \r\n`<ItemGroup>\r\n<Reference Include=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\">\r\n<HintPath>..\\Workaround\\netstandard.dll</HintPath>\r\n<Private>True</Private>\r\n</Reference>\r\n</ItemGroup>`"},{"Id":"6579535579","Type":"WatchEvent","CreatedAt":"2017-09-12T11:50:54","Actor":"HideDev","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6579282213","Type":"IssuesEvent","CreatedAt":"2017-09-12T10:46:14","Actor":"daveh101","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/489","RelatedDescription":"Opened issue \"UWP SDK 16267 - The type 'Object' is defined in an assembly that is not referenced \" (#489) at dotnet/standard","RelatedBody":"I am trying to UWP to work with .NET Standard 2.0, and am being presented with the following error when trying to build the project:\r\n\r\n> error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n\r\nI reported this as a comment on issue #391 and have been asked to open this as a new issue due to being related to UWP.\r\n\r\nI am running Visual Studio 2017 15.4 Preview 2 (problem was also present on Preview 1). I also have the Insider SDK 16267 installed - According to the following blog post UWP & .NET Standard 2.0 are supposed to work together:\r\nhttps://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview\r\n\r\nIn the comments of that blog post, people were getting issues similar to this (which I also had originally)\r\n> error : Project ‘.csproj’ targets ‘.NETStandard,Version=v2.0’. It cannot be referenced by a project that targets ‘UAP,Version=v10.0.16267\r\n\r\nThe fix was to install the .NET Standard SDK 2.0.2 which is available from:\r\nhttps://aka.ms/ns2x64\r\nhttps://aka.ms/ns2x86\r\n\r\nNow, VS attempts to build the project, but fails with the error above that `Object` is defined in an un-referenced assembly.\r\n\r\nCopied in those relevant from the original comment on issue #391\r\ncc: @weshaggard @joperezr @nattress \r\n"},{"Id":"6579116636","Type":"ForkEvent","CreatedAt":"2017-09-12T10:05:55","Actor":"skewedthinker","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/skewedthinker/standard","RelatedDescription":"Forked dotnet/standard to skewedthinker/standard","RelatedBody":null},{"Id":"6578003720","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T04:58:31","Actor":"JamesNK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/481#issuecomment-328736064","RelatedDescription":"Commented on issue \"Issues with .NET Standard 2.0 with .NET Framework & NuGet\" (#481) at dotnet/standard","RelatedBody":"Is this issue the cause of https://github.com/JamesNK/Newtonsoft.Json/issues/1423?"},{"Id":"6577791336","Type":"WatchEvent","CreatedAt":"2017-09-12T03:19:21","Actor":"luququ","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6577768977","Type":"IssuesEvent","CreatedAt":"2017-09-12T03:09:45","Actor":"amasoumi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/485","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.'\" (#485) at dotnet/standard","RelatedBody":"Hi Guys,\r\nI am having  issue creating a extension package, I tried all the workaround suggested, but had no luck, I added NETStandard.Library.NETFramework as well on the extension package but still having problem, any thoughts would be appreciated!\r\ni am using VS professional 2017 preview (3) 15.40 Preview 1.0\r\nthanks\r\n\r\nSystem.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.'"},{"Id":"6577766513","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T03:08:40","Actor":"amasoumi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/485#issuecomment-328721058","RelatedDescription":"Commented on issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.'\" (#485) at dotnet/standard","RelatedBody":"i fixed the issue by adding following at the end of .csproj file\r\n  <ItemGroup>\r\n  <Reference Include=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\">\r\n    <HintPath>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\net461\\lib\\netstandard.dll</HintPath>\r\n    <Private>True</Private>\r\n  </Reference>\r\n  </ItemGroup>"},{"Id":"6577490076","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T01:16:44","Actor":"amasoumi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/485#issuecomment-328702741","RelatedDescription":"Commented on issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.'\" (#485) at dotnet/standard","RelatedBody":"how can i make sure if it is correctly deployed?"},{"Id":"6577488183","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T01:16:00","Actor":"amasoumi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/standard/issues/485#issuecomment-328702636","RelatedDescription":"Commented on issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.'\" (#485) at dotnet/standard","RelatedBody":"I am actually running it in debug mode, soon as I call the VISX from .NET standard 2.0 then i get this error message, one thing i have to mention is that my VISX app has reference to 2 other .NET standard 2.0 of class type library   "},{"Id":"6577340750","Type":"WatchEvent","CreatedAt":"2017-09-12T00:13:50","Actor":"densityx","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null},{"Id":"6577340670","Type":"WatchEvent","CreatedAt":"2017-09-12T00:13:47","Actor":"densityx","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred dotnet/standard","RelatedBody":null}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6587638176","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:56:29","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/22688#issuecomment-329308351","RelatedDescription":"Commented on issue \"Mark System.Memory package as stable for 2.1\" (#22688) at dotnet/corefx","RelatedBody":"Sure, wish I had a pointer to Powershell's load semantics.  @daxian-dbw might."},{"Id":"6587561819","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:35:43","Actor":"ektrah","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23629#issuecomment-329303960","RelatedDescription":"Commented on issue \"General low level primitive for ciphers (AES-GCM being the first)\" (#23629) at dotnet/corefx","RelatedBody":"From my point of view the sole purpose of crypto primitives is to implement well-designed higher-level security protocols. Every such protocol insists on generating nonces in their own way. For example:\r\n\r\n* TLS 1.2 follows the recommendations of RFC 5116 and concatenates a 4-byte IV with an 8-byte counter,\r\n* TLS 1.3 xor's an 8-byte counter padded to 12 bytes with a 12-byte IV,\r\n* Noise uses an 8-byte counter padded to 12 bytes *in big-endian byte order* for AES-GCM and an 8-byte counter padded to 12 bytes *in little-endian byte order* for ChaCha/Poly.\r\n\r\nGCM is way too brittle for randomized nonces at typical nonce sizes (96 bit). And I'm not aware of any security protocol that actually supports randomized nonces.\r\n\r\nThere is not much demand for more APIs providing crypto primitives. 99.9% of developers need high-level recipes for security-related scenarios: storing a password in a database, encrypting a file at rest, securely transferring a software update, etc.\r\n\r\nHowever, APIs for such high-level recipes are rare. The only APIs available are often only HTTPS and the  crypto primitives, which forces developers to roll their own security protocols. IMO the solution is not to put a lot of effort in designing APIs for working with primitives. It's APIs for high-level recipes."},{"Id":"6587485645","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:16:10","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24014","RelatedDescription":"Opened pull request \"Updating CoreClr dependencies to servicing-25713-01\" (#24014) at dotnet/corefx","RelatedBody":""},{"Id":"6587480592","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:14:55","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23994#issuecomment-329299076","RelatedDescription":"Commented on issue \"NuGet package compability issue\" (#23994) at dotnet/corefx","RelatedBody":"> System.Net.Security on NuGet says it supports .NET Standard\r\n\r\nI think you're misinterpreting NuGet's representation of the package content as support designation.  If there was a way to declare support on NuGet we would declare it appropriately (or in this case, designate it is not supported).\r\n\r\nWhen these packages were first released, NuGet would give you an install failure (due to ref with no lib) which these packages relied on.  We wanted them to fail at build time but still provide portable surface area: thus the netstandard ref and missing lib for UWP.  NuGet later removed this.  Meanwhile we cannot remove the netstandard refs because we've established those and folks rely on them to build portable libraries between desktop and netcore.  In the latest packages we've stopped doing this ref-no-lib pattern, instead we provide a netstandard lib that throws platformnotsupported.  As you've mentioned, this doesn't help at build time.  You need to run the app to see the exception.\r\n\r\nThere isn't much we can do for those old packages and we had to decide where to focus efforts: add support for the libraries, or build a different guardrails system to expose the error at build time.  We chose to focus on adding support.  I believe @terrajobst is tracking the need for a better guardrails."},{"Id":"6587458671","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:09:36","Actor":"Priya91","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/24000#issuecomment-329297779","RelatedDescription":"Commented on issue \"Tests under: System.Net.Security.Tests.NegotiateStreamTest failed with \"System.ComponentModel.Win32Exception\"\" (#24000) at dotnet/corefx","RelatedBody":"From the callstack, it looks like these tests are failing due to some wrong arguments to fork and exec.. This is not the same issue as the one on ubuntu 17.10, that's a different bug."},{"Id":"6587445552","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:06:37","Actor":"Priya91","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23496#issuecomment-329297054","RelatedDescription":"Commented on issue \"MSBuild Exec task broken with .NET Core 2.1\" (#23496) at dotnet/corefx","RelatedBody":"cc @joperezr @wtgodbe "},{"Id":"6587444750","Type":"IssuesEvent","CreatedAt":"2017-09-13T21:06:26","Actor":"fletchsod-developer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24013","RelatedDescription":"Opened issue \"Provide SignXml class without XmlDocument components.\" (#24013) at dotnet/corefx","RelatedBody":"This is Enhancement only.\r\n\r\nMy company is unable to use the `SignXml` class because it require `XmlDocument` component.  This `XmlDocument` does NOT work with the invalid xml data.  The invalid xml data is provided by 3rd party company that is last updated 12 years ago and it is unable to modify invalid xml becuase of their integration mess.\r\n\r\nUpon looking at `SignXml.cs` source code in this GitHub, I discovered that it is only a xml builder that use variety of Crypography stuff as value that is assigned to xml's value.  This show that is is possible to use Cryptography without XmlDocument somehow.  We have no control over telling the Dot Net Core XmlDocument to ignore invalid xml data for this to work."},{"Id":"6587430834","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:03:03","Actor":"Priya91","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23119#issuecomment-329296190","RelatedDescription":"Commented on issue \"Update package versions to service release/1.1 and 1.0 branches.\" (#23119) at dotnet/corefx","RelatedBody":"this is fixed."},{"Id":"6587430805","Type":"IssuesEvent","CreatedAt":"2017-09-13T21:03:03","Actor":"Priya91","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/23119","RelatedDescription":"Closed issue \"Update package versions to service release/1.1 and 1.0 branches.\" (#23119) at dotnet/corefx","RelatedBody":"I went through the history of the release/1.1 branch, this [commit](https://github.com/dotnet/corefx/commit/9e98f24f508d2cda97f10474a86052f51bc9c7e3), which is an update after the servicing release. From then these are the concrete product commits,\r\n\r\n1. [Interop.MountPoints.cs](https://github.com/dotnet/corefx/commit/3d2debcf3f4fb7ce06f58c0b617348835e9036c8) by @wfurt \r\n2. [WinHttpHandler](https://github.com/dotnet/corefx/commit/454bdeb2ef477344b8626307892f442bff2a3106) by @davidsh \r\n\r\nWe need to update the package and assembly versions of the libs where these changes need to serviced for 1.1 release.\r\n\r\nrefer pr #23113 "},{"Id":"6587418217","Type":"PushEvent","CreatedAt":"2017-09-13T21:00:10","Actor":"huanwu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/dotnet/corefx/compare/99ac27f1223460424a2ebc0899895884e6c5c191...7fe8643547987c844fad93ccccd946fd1ed7fd00","RelatedDescription":"Pushed to refs/heads/master at dotnet/corefx","RelatedBody":null},{"Id":"6587417740","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:00:02","Actor":"huanwu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/23947","RelatedDescription":"Merged pull request \"Add /casesensitive parameter so the command works on linux when the path contains capital letter\" (#23947) at dotnet/corefx","RelatedBody":"On linux, the output folder Debug contains \"D\", without adding /casesitive, it will try to reach folder debug, which doesn't exist.\r\n\r\n@shmao @zhenlan @mconnew "},{"Id":"6587392896","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T20:54:16","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/pull/24005#discussion_r138736653","RelatedDescription":"Commented on pull request \"Fix return value of partially successful Socket.Send\" (#24005) at dotnet/corefx","RelatedBody":"Just noticed that this could probably be restructured slightly:\r\n```C#\r\nif (successfulSend)\r\n{\r\n    errorCode = SocketError.Success;\r\n    return false;\r\n}\r\nelse if (errno == Interop.Error.EAGAIN)\r\n{\r\n    errorCode = SocketError.WouldBlock;\r\n    return false;\r\n}\r\nelse\r\n{\r\n    errorCode = GetSocketErrorForErrorCode(errno);\r\n    return true;\r\n}\r\n```\r\nNote that EAGAIN has the same value as EWOULDBLOCK, so I don't think we need to do the comparison twice."},{"Id":"6587390246","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:53:39","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329293760","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"@danmosemsft  I'll submit a PR for that."},{"Id":"6587376186","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:50:19","Actor":"migueldeicaza","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/20325#issuecomment-329292891","RelatedDescription":"Commented on issue \"Support Full System.Drawing Functionality on .NET Core\" (#20325) at dotnet/corefx","RelatedBody":"Hello,\r\n\r\nGenerally, for new code, I would advocate using SkiaSharp directly for the many arguments already made in this thread.   \r\n\r\nFor providing System.Drawing to .NET Core, adopting libgdiplus has the advantage that it has very low friction, the work to package this across the board and make it available is already there and some of the hard pieces of text rendering are already in place.\r\n\r\nA win with the current approach is that System.Drawing on Windows would consume the Windows libgdiplus, which means that compatibility there will be great.   The downside is that unless folks file and provide good bug reports and patches, the Unix version will not match it - it is very close, but there are a few known gaps and some known gaps to some of those that worked on it that might not be extensively documented -- Ill file issues later.\r\n\r\nFor those concerned about performance, a path that  could be taken in the future is to replace the use of Cairo in libgdiplus with Skia, and that would not affect the managed code at all, it would be a transparent swap out.\r\n\r\nI would not go as far as @mellinoe has gone with his criticism of GDI+, I think some of it is painting it with a too wide brush, but this is right on target:\r\n\r\n> If you're building a new, modern, cross-platform UI stack, you really should be building on top of a library which was designed for such an environment, not GDI+.\r\n\r\nExactly.   And given that there is something of the caliber of SkiaSharp, you should use that instead.   And this is exactly what projects like Avalonia have done.   Google is continuously evolving it, and we are keeping it fresh and up to date, and it is the foundation of two of the most used pieces of software in the world."},{"Id":"6587372006","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:49:18","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329292603","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"perhaps @tarekgh you could slap a check for Windows version on that one so it doesn't come up again? I should have done this myself."},{"Id":"6587367243","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:48:11","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/24000#issuecomment-329292299","RelatedDescription":"Commented on issue \"Tests under: System.Net.Security.Tests.NegotiateStreamTest failed with \"System.ComponentModel.Win32Exception\"\" (#24000) at dotnet/corefx","RelatedBody":">or cause this test to skip on suse,\r\n\r\nThese tests have been failing on Ubuntu 17.10 as well.  I thought @Priya91 was looking into that."},{"Id":"6587360720","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:46:45","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329291928","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"@jkotas if you have RS2 then \"WindowAndCursorProps.Title_Set_Windows(lengthOfTitle: 1024) [FAIL]\" expected to fail"},{"Id":"6587358929","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:46:21","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/20223#issuecomment-329291830","RelatedDescription":"Commented on issue \"Test: System.Net.Sockets.Tests.DnsEndPointTest/Socket_StaticConnectAsync_HostNotFound failed with \"Xunit.Sdk.TrueException\"\" (#20223) at dotnet/corefx","RelatedBody":"This test uses a loopback socket server.  So, not sure why it would fail with timeout."},{"Id":"6587353100","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:44:59","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/pull/24005#issuecomment-329291473","RelatedDescription":"Commented on issue \"Fix return value of partially successful Socket.Send\" (#24005) at dotnet/corefx","RelatedBody":"LGTM"},{"Id":"6587347094","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:43:32","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329291093","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"@kingces95 one more ask. could you run \"intl.cpl\" and then click on \"Additional Settings\" button and tell me the value of \"No. of digits after decimal\"? I assume you are running with en-US locale. thanks for your help."},{"Id":"6587346393","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:43:22","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/24000#issuecomment-329291056","RelatedDescription":"Commented on issue \"Tests under: System.Net.Security.Tests.NegotiateStreamTest failed with \"System.ComponentModel.Win32Exception\"\" (#24000) at dotnet/corefx","RelatedBody":"It may be as simple as \"kdestroy\" not being available on suse 4.22.\r\n@karelz someone should either update the images, or cause this test to skip on suse, or find an alternative way to achieve whatever it's doing. Perhaps some apt-get type command needs to go into the dockerfile.\r\n```\r\n            var startInfo = new ProcessStartInfo(KDestroyCmd);\r\n            startInfo.UseShellExecute = true;\r\n            startInfo.CreateNoWindow = true;\r\n            startInfo.Arguments = \"-A\";\r\n            using (Process clearCreds = Process.Start(startInfo))\r\n```"},{"Id":"6587329686","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:39:29","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329290032","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"Globalization tests are fine for me. The tests I see failing intermittently are System.DirectoryServices.*, System.Net.* and System.Console."},{"Id":"6587322890","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:37:54","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/pull/24005#issuecomment-329289630","RelatedDescription":"Commented on issue \"Fix return value of partially successful Socket.Send\" (#24005) at dotnet/corefx","RelatedBody":"@geoffkizer, @davidsh, you happy with this?"},{"Id":"6587295506","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:31:31","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329288098","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"@danmosemsft is right. Windows had a regression in RS2 which they fixed on RS3. The regression caused the framework to fail when setting the console title with long text. I agree it is not worth adding work around in the framework for this one as the problem occurred on RS2 only and happen when setting the Window title to a long string which is not a common scenario at all."},{"Id":"6587273408","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:26:17","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329286750","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"@jkotas the globalization test failure has nothing to do with the machine configuration in general. do you see the globalization test failing on your machine?"},{"Id":"6587267874","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:25:01","Actor":"larssb","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/22688#issuecomment-329286459","RelatedDescription":"Commented on issue \"Mark System.Memory package as stable for 2.1\" (#22688) at dotnet/corefx","RelatedBody":"@ericstj thank you for sending me in the right direction. I put the System.Memory.dll in the same folder as the ImageSharp required dll's and that was then loaded. However, now I'm getting an error telling me about the next required dll which is missing. But hey, now I just find that and put it in the same folder and put that on repeat until I'm there.\r\n\r\nThank you.... "},{"Id":"6587266637","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:24:44","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/20223#issuecomment-329286386","RelatedDescription":"Commented on issue \"Test: System.Net.Sockets.Tests.DnsEndPointTest/Socket_StaticConnectAsync_HostNotFound failed with \"Xunit.Sdk.TrueException\"\" (#20223) at dotnet/corefx","RelatedBody":"failed again https://ci.dot.net/job/dotnet_corefx/job/master/job/outerloop_netcoreapp_windows_nt_release_prtest/42/"},{"Id":"6587258974","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:23:01","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329285920","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"It may even have been particular builds of RS2 - I know it reproed consistently on my home laptop, but never at work. Again, that assumes it was failing for that reason and not some other random console problem."},{"Id":"6587255431","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:22:14","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23992#issuecomment-329285723","RelatedDescription":"Commented on issue \"Clean Enlistment Test Failures\" (#23992) at dotnet/corefx","RelatedBody":"@mellinoe I don't see that info (about the console failure) but if it is that, I believe it was a bug in RS2. Not sure about RS1. No, I did not complete the PR #21518 - It's just setting console title to a huge string, so IMO it's not worth bothering to fix, the right thing is to adorn this test so it doesn't run on affected Windows versions."},{"Id":"6587251470","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:21:20","Actor":"sdrapkin","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/corefx/issues/23629#issuecomment-329285474","RelatedDescription":"Commented on issue \"General low level primitive for ciphers (AES-GCM being the first)\" (#23629) at dotnet/corefx","RelatedBody":"Building on @ektrah's comment, his (her?) approach is driven by [RFC 5116](https://tools.ietf.org/html/rfc5116), which I've referenced earlier. There are many notable quotes in RFC 5116:\r\n\r\n> 3.1.  Requirements on Nonce Generation\r\n> It is essential for security that the nonces be constructed in a manner that respects the requirement that each nonce value be distinct for each invocation of the authenticated encryption operation, for any fixed value of the key.\r\n...\r\n> 4. Requirements on AEAD Algorithm Specifications\r\n> Each AEAD algorithm MUST accept any nonce with a length between N_MIN and N_MAX octets, inclusive, where the values of N_MIN and N_MAX are specific to that algorithm.  The values of N_MAX and N_MIN MAY be equal.  Each algorithm SHOULD accept a nonce with a length of twelve (12) octets. Randomized or stateful algorithms, which are described below, MAY have an N_MAX value of zero.\r\n...\r\n> An Authenticated Encryption algorithm MAY incorporate or make use of a random source, e.g., for the generation of an internal initialization vector that is incorporated into the ciphertext output.  An AEAD algorithm of this sort is called randomized; though note that only encryption is random, and decryption is always deterministic.  A randomized algorithm MAY have a value of N_MAX that is equal to zero.\r\n\r\n> An Authenticated Encryption algorithm MAY incorporate internal state information that is maintained between invocations of the encrypt operation, e.g., to allow for the construction of distinct values that are used as internal nonces by the algorithm.  An AEAD algorithm of this sort is called stateful.  This method could be used by an algorithm to provide good security even when the application inputs zero-length nonces.  A stateful algorithm MAY have a value of N_MAX that is equal to zero.\r\n\r\nOne idea potentially worth exploring is the passing of zero-length/null Nonce, which might even be the default. The passing of such \"special\" Nonce value will randomize the actual Nonce value, which will be available as Encrypt's output.\r\n\r\nIf `INonceProvider` stays because \"reasons\", another idea is to add a `Reset()` call, which will be triggered every time the `AuthenticatedEncryptor` is rekey'ed. If, on the other hand, the plan is to never rekey `AuthenticatedEncryptor` instances, this will trash GC if we want to build a streaming chunk-encrypting API (ex. chunk = network packet), and every chunk must be encrypted with a different key (ex. Netflix [MSL](https://medium.com/netflix-techblog/message-security-layer-a-modern-take-on-securing-communication-f16964b79642) protocol, Inferno, others). Especially for parallel enc/dec operations where we'd want to maintain a pool of AEAD engines, and borrow instances from that pool to do enc/dec. Let's give GC some love :)"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6587658767","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T22:01:52","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138751517","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"Did not notice the pattern. Will do.\r\n\r\n---\r\nIn reply to: [138723419](https://github.com/dotnet/roslyn/pull/21982#discussion_r138723419) [](ancestors = 138723419)"},{"Id":"6587653779","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T22:00:31","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138751297","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"I think we still have versions of span that are not decorated. It was fixed very recently and may not yet propagated to various binaries/nugets\r\nThere is no harm with keeping this a little longer. I think we should merge with this.\r\n\r\n---\r\nIn reply to: [138713521](https://github.com/dotnet/roslyn/pull/21982#discussion_r138713521) [](ancestors = 138713521)"},{"Id":"6587649421","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:59:28","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138751055","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"Ah, so we do have tests to verify `VariableDeclaratorSyntax` maps to an `IVariableDeclaration` 👍 "},{"Id":"6587641289","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:57:17","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138750626","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"in Operation tree, there is no matching IOperation concept for VariableDeclarationSyntax. if user call GetOperation with it, it will return null.\r\n\r\nin IOperation, statement points declarator directly without middle decleration like syntax node.\r\n"},{"Id":"6587640257","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:57:00","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138750575","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"[https://github.com/dotnet/roslyn/issues/21976](https://github.com/dotnet/roslyn/issues/21976)\r\n\r\n---\r\nIn reply to: [138729016](https://github.com/dotnet/roslyn/pull/21982#discussion_r138729016) [](ancestors = 138729016)"},{"Id":"6587638149","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:56:28","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138750470","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"The bug was not too bad - basically inefficiency of IL. \r\nIn some cases we would create unnecessary temps. If both branches of ternary refer to readonly variables, and we need a writeable ref (like if the ternary is a receiver of a struct method call) we can make just one temp at the top, not on all branches recursively.\r\n\r\n---\r\nIn reply to: [138749293](https://github.com/dotnet/roslyn/pull/21982#discussion_r138749293) [](ancestors = 138749293,138749075,138713967)"},{"Id":"6587628815","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:53:53","Actor":"TyOverby","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22049#issuecomment-329307844","RelatedDescription":"Commented on issue \"fix base image for perf correctness\" (#22049) at dotnet/roslyn","RelatedBody":"@dotnet-bot test ci please"},{"Id":"6587628137","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:53:41","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138749923","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"👍 I think there is a bug tracking the issue that you fixed here. We can close all such bugs later.."},{"Id":"6587627606","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:53:33","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138749876","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"sure I can take a look at argument."},{"Id":"6587620419","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:51:37","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138749506","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"This seems to be affecting large number of tests. Can we fix the factory to not return IArgument for syntax kinds other than argument?"},{"Id":"6587619941","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:51:30","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22056#discussion_r138749485","RelatedDescription":"Commented on pull request \"IDelegateCreationExpression\" (#22056) at dotnet/roslyn","RelatedBody":"It feels like there is an inconsistency with scenario when lambdas are involved, those are using IDelegateCreation even for error cases. Might be worth investigating why."},{"Id":"6587617053","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:50:39","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138749293","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"There was a PROTOTYPE comment somewere asking for tests. I added tests and found a bug, so I fixed it.\r\n\r\n---\r\nIn reply to: [138749075](https://github.com/dotnet/roslyn/pull/21982#discussion_r138749075) [](ancestors = 138749075,138713967)"},{"Id":"6587613642","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:49:41","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138749092","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"I think it is a bug in factory. factory should create IArgument with ArgumentNode since it must be there."},{"Id":"6587613452","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:49:38","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138749075","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"We had a bug here, see testcase TestRefConditionalHomelessBranches in CodeGenRefConditionalOperator  for scenarios\r\n\r\n---\r\nIn reply to: [138713967](https://github.com/dotnet/roslyn/pull/21982#discussion_r138713967) [](ancestors = 138713967)"},{"Id":"6587612639","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:49:24","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22056#discussion_r138749030","RelatedDescription":"Commented on pull request \"IDelegateCreationExpression\" (#22056) at dotnet/roslyn","RelatedBody":">SemanticModelTestBase [](start = 17, length = 21)\r\n\r\nScenarios that are using CType should also be tested with DirectCast/TryCast"},{"Id":"6587605499","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:47:29","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138748681","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"This feels weird. We have an ArgumentSyntaxNode that maps to an IArgument. It feels that the InterpolatedStringExpression should match with the IInterpolatedStringExpression. I think we should special case arguments to ensure IArgument is only returned for ArgumentSyntaxNode. @dotnet/analyzer-ioperation thoughts?"},{"Id":"6587603450","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:46:57","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138748553","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"I will consider this resolved, since it is tracked by [https://github.com/dotnet/roslyn/issues/22077](https://github.com/dotnet/roslyn/issues/22077)\r\n\r\n---\r\nIn reply to: [138748431](https://github.com/dotnet/roslyn/pull/21982#discussion_r138748431) [](ancestors = 138748431,138748410,138729843,138711134,138700246)"},{"Id":"6587601012","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:46:18","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138748431","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"Neal is right though defaulting to \"RValue\" is mostly ok, since that is the vast majority of expressions.\r\n\r\n---\r\nIn reply to: [138748410](https://github.com/dotnet/roslyn/pull/21982#discussion_r138748410) [](ancestors = 138748410,138729843,138711134,138700246)"},{"Id":"6587600535","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:46:11","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21982#discussion_r138748410","RelatedDescription":"Commented on pull request \"Cleanup PROTOTYPE comments\" (#21982) at dotnet/roslyn","RelatedBody":"I did not give up on this. I think once all nodes that can come through here are handle we should add `case default` with an assert. There is a bug tracking this.\r\n\r\n---\r\nIn reply to: [138729843](https://github.com/dotnet/roslyn/pull/21982#discussion_r138729843) [](ancestors = 138729843,138711134,138700246)"},{"Id":"6587598576","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:45:38","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138748296","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"yep in preorder traverse."},{"Id":"6587597685","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:45:24","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138748243","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"okay."},{"Id":"6587596662","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:45:08","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138748190","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"hmm. they were used in some of IOperation tests. that is why I added children since otherwise, test won't pass."},{"Id":"6587579325","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:40:29","Actor":"mmitche","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22049#issuecomment-329304993","RelatedDescription":"Commented on issue \"fix base image for perf correctness\" (#22049) at dotnet/roslyn","RelatedBody":"@dotnet-bot test ci please"},{"Id":"6587577260","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:39:56","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22056#discussion_r138747066","RelatedDescription":"Commented on pull request \"IDelegateCreationExpression\" (#22056) at dotnet/roslyn","RelatedBody":">ReturnedValue: ILocalReferenceExpression:  (OperationKind.LocalReferenceExpression, Type: System.Object) (Syntax: 'Function() 1') [](start = 10, length = 129)\r\n\r\nShould this node be Implicit?"},{"Id":"6587576702","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:39:47","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22056#discussion_r138747029","RelatedDescription":"Commented on pull request \"IDelegateCreationExpression\" (#22056) at dotnet/roslyn","RelatedBody":">IReturnStatement (OperationKind.ReturnStatement) (Syntax: 'Function() 1') [](start = 8, length = 73)\r\n\r\nShould this node be Implicit?"},{"Id":"6587575762","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:39:31","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22056#discussion_r138746978","RelatedDescription":"Commented on pull request \"IDelegateCreationExpression\" (#22056) at dotnet/roslyn","RelatedBody":">ILabeledStatement (Label: exit) (OperationKind.LabeledStatement) (Syntax: 'Function() 1') [](start = 8, length = 89)\r\n\r\nShould this node be Implicit?"},{"Id":"6587574529","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:39:11","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22056#discussion_r138746874","RelatedDescription":"Commented on pull request \"IDelegateCreationExpression\" (#22056) at dotnet/roslyn","RelatedBody":">IReturnStatement (OperationKind.ReturnStatement) (Syntax: '1') [](start = 8, length = 62)\r\n\r\nShould this node be Implicit?"},{"Id":"6587572794","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:38:41","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22056#discussion_r138746756","RelatedDescription":"Commented on pull request \"IDelegateCreationExpression\" (#22056) at dotnet/roslyn","RelatedBody":">ReturnedValue: ILocalReferenceExpression:  (OperationKind.LocalReferenceExpression, Type: System.Object) (Syntax: 'Function() 1') [](start = 10, length = 129)\r\n\r\nIt is not clear what local does this node reference."},{"Id":"6587562981","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:36:00","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138746167","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"I meant `VariableDeclaratorSyntax` not `VariableDeclarationSyntax`..."},{"Id":"6587558003","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T21:34:41","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/dotnet/roslyn/pull/21857#discussion_r138745885","RelatedDescription":"Commented on pull request \"changed how GetOperation work.\" (#21857) at dotnet/roslyn","RelatedBody":"Why will the VariableDeclarationSyntax not return an IVariableDeclaration?"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"907775139210715137","CreatedAt":"2017-09-13T01:17:13+00:00","UserScreenname":"dotnet","Text":".NET Framework September 2017 Security and Quality Rollup https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":25,"RawContent":null},{"Id":"906146140000841728","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"dotnet","Text":"Getting Started with Windows Containers https://t.co/UnRPIRZySp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":181,"FavoriteCount":108,"RawContent":null},{"Id":"903669794150506500","CreatedAt":"2017-09-01T17:24:02+00:00","UserScreenname":"dotnet","Text":"#dotNETConf - streaming live directly to your favorite device. Don't miss out.\n\nIs it on your calendar yet?… https://t.co/SK3CUqUkrs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":122,"FavoriteCount":100,"RawContent":null},{"Id":"902942589053108224","CreatedAt":"2017-08-30T17:14:23+00:00","UserScreenname":"dotnet","Text":"Introducing .NET IL Linker https://t.co/ji9Uhlalw2","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":299,"FavoriteCount":203,"RawContent":null},{"Id":"902581598876459009","CreatedAt":"2017-08-29T17:19:56+00:00","UserScreenname":"dotnet","Text":"The Week in .NET: Let's Encrypt WebApp Renewer, CodeCamp Seattle 2017, and links!\nhttps://t.co/Mssa964piA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":42,"RawContent":null},{"Id":"900496427477901312","CreatedAt":"2017-08-23T23:14:13+00:00","UserScreenname":"dotnet","Text":"If you had $100 to spend improving Unit Testing in Visual Studio what would you spend it on? Tell us here: https://t.co/lppiVZVHeD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":49,"RawContent":null}]}},"RunOn":"2017-09-13T22:01:57.6422995Z","RunDurationInMilliseconds":5888}