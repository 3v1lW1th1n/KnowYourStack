{"Data":{"GitHub":{"Issues":[{"Id":"408170085","IsPullRequest":true,"CreatedAt":"2019-02-09T00:06:56","Actor":"mareklinka","Number":"2481","RawContent":null,"Title":"Remove dead code in src/Microsoft.ML.FastTree/Application","State":"closed","Body":"As proposed in #2468, this PR removes the unused code under `src/Microsoft.ML.FastTree/Application`. No other changes were made.","Url":"https://github.com/dotnet/machinelearning/pull/2481","RelatedDescription":"Closed or merged PR \"Remove dead code in src/Microsoft.ML.FastTree/Application\" (#2481)"},{"Id":"408363212","IsPullRequest":false,"CreatedAt":"2019-02-08T23:28:52","Actor":"nsulikowski","Number":"2484","RawContent":null,"Title":"How about a Preview for Metadata?","State":"open","Body":"something like this?\r\n`DataDebuggerPreview Preview(this Metadata metadata, int maxRows = 100)`","Url":"https://github.com/dotnet/machinelearning/issues/2484","RelatedDescription":"Open issue \"How about a Preview for Metadata?\" (#2484)"},{"Id":"408350055","IsPullRequest":true,"CreatedAt":"2019-02-08T22:33:26","Actor":"shmoradims","Number":"2483","RawContent":null,"Title":"Documentation for BinaryClassification.AveragedPerceptron","State":"open","Body":"Docs & sample for BinaryClassification.AveragedPerceptron. Related to #1209.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2483","RelatedDescription":"Open PR \"Documentation for BinaryClassification.AveragedPerceptron\" (#2483)"},{"Id":"407987467","IsPullRequest":false,"CreatedAt":"2019-02-08T19:35:05","Actor":"daholste","Number":"2477","RawContent":null,"Title":"Sample Breaks When Change Learner from FastTree to AveragedPerceptron","State":"closed","Body":"@srsaggam and I were looking at the sentiment analysis sample:\r\n\r\nhttps://github.com/dotnet/machinelearning-samples/blob/a79ced6c6bb788c2189d81e5993863e15cf8be0c/samples/csharp/getting-started/BinaryClassification_SentimentAnalysis/SentimentAnalysis/SentimentAnalysisConsoleApp/Program.cs#L59\r\n\r\nWhen you change the learner from 'FastTree' to 'AveragedPerceptron', the sample throws the exception:\r\n```\r\nSystem.ArgumentOutOfRangeException: 'Probability column 'Probability' not found'\r\n```\r\nThis is probably because AveragedPerceptron is not calibrated, but FastTree is. Any thoughts on how to handle this scenario? We've successfully made use of PlattCalibratorEstimator, but I don't think this is supported b/c (1) it's not exposed / hanging off of MLContext, and (2) it takes an IPredictor","Url":"https://github.com/dotnet/machinelearning/issues/2477","RelatedDescription":"Closed issue \"Sample Breaks When Change Learner from FastTree to AveragedPerceptron\" (#2477)"},{"Id":"408272304","IsPullRequest":false,"CreatedAt":"2019-02-08T18:32:19","Actor":"wschin","Number":"2482","RawContent":null,"Title":"TreeEnsembleFeaturizer is not a Transformer yet","State":"open","Body":"[TreeEnsembleFeaturizer](\r\nhttps://github.com/dotnet/machinelearning/blob/6b1a0d337f74274509cfd439974dca2305a6bfbb/src/Microsoft.ML.FastTree/TreeEnsembleFeaturizer.cs#L44) is a very useful tool in many applications. Do we have a plan to make it publicly available?\r\n\r\ncc @shauheen, @Ivanidzo4ka, @TomFinley, @yaeldekel.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2482","RelatedDescription":"Open issue \"TreeEnsembleFeaturizer is not a Transformer yet\" (#2482)"},{"Id":"408165013","IsPullRequest":false,"CreatedAt":"2019-02-08T14:02:06","Actor":"mareklinka","Number":"2480","RawContent":null,"Title":"Microsoft.ML.InternalCodeAnalyzer should use Microsoft.CodeAnalysis.Testing for harness setup","State":"open","Body":"As discussed in [in this PR](https://github.com/dotnet/machinelearning/pull/2434#discussion_r254508809), the tests for the internal code analyzer should make use of the facilities provided in `Microsoft.CodeAnalysis.Testing`.\r\n\r\nThat would make the test project more best-practice compliant and easier to maintain.","Url":"https://github.com/dotnet/machinelearning/issues/2480","RelatedDescription":"Open issue \"Microsoft.ML.InternalCodeAnalyzer should use Microsoft.CodeAnalysis.Testing for harness setup\" (#2480)"},{"Id":"408161063","IsPullRequest":false,"CreatedAt":"2019-02-08T13:51:44","Actor":"sdg002","Number":"2479","RawContent":null,"Title":"How to normalize 2 columns simultaneously?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  .NET 4.6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI have loaded sample data from a text file and I am trying to normalize and print the normalized data\r\n- **What happened?**\r\nThe max normalized value was 1.0 which is expected. The min normalized value should have been 0 or -1 but it was another positive number < 1 and > 0\r\n- **What did you expect?**\r\n\r\n- The minimum of the normalized values should be between 0 and 1, or -1 and +1.  **Solved using fixZero=false**\r\n- I am confused whether I have taken the right programmatic approach\r\n\r\n### Source code / logs\r\n        [TestMethod]\r\n        public void Normalize_MultipleColumn()\r\n        {\r\n            string pathFull = System.IO.Path.Combine(Util.GetProjectDir2(), _datafile);\r\n            var mlContext = new Microsoft.ML.MLContext();\r\n            Microsoft.Data.DataView.IDataView dataView = LoadDummy2(mlContext, pathFull);\r\n            Trace.WriteLine(\"Before normalization\");\r\n            EnumerOverData(mlContext, dataView);\r\n            var schema = dataView.Schema;\r\n\r\n            var pipeline_Ht_And_Wt = mlContext.Transforms.Normalize(\r\n                new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.MinMaxColumn(\"Height\"),\r\n                new Microsoft.ML.Transforms.Normalizers.NormalizingEstimator.MinMaxColumn(\"Weight\")\r\n                );\r\n\r\n            var normalizedData = pipeline_Ht_And_Wt.Fit(dataView).Transform(dataView);\r\n            Trace.WriteLine(\"After normalization\");\r\n            EnumerOverData(mlContext, normalizedData);\r\n        }\r\n        private IDataView LoadDummy2(MLContext mlContext, string pathFull)\r\n        {\r\n            var argsLoader = new Microsoft.ML.Data.TextLoader.Arguments();\r\n            argsLoader.HasHeader = true;\r\n            argsLoader.Separators = new char[] { '|' };\r\n            argsLoader.Column = new Microsoft.ML.Data.TextLoader.Column[]\r\n            {\r\n                new Microsoft.ML.Data.TextLoader.Column(\"Id\", Microsoft.ML.Data.DataKind.I4,0),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"Height\", Microsoft.ML.Data.DataKind.R8,1),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"Weight\", Microsoft.ML.Data.DataKind.R8,2),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"IsOverWeight\", Microsoft.ML.Data.DataKind.Bool,3)\r\n            };\r\n\r\n            var loader = mlContext.Data.CreateTextLoader(argsLoader);\r\n            Microsoft.Data.DataView.IDataView dataView = loader.Read(pathFull);\r\n            return dataView;\r\n        }\r\n        private void EnumerOverData(MLContext mlContext, IDataView dataView)\r\n        {\r\n            var someRows = mlContext.CreateEnumerable<entity.Dummy2>(dataView, false);\r\n            foreach (var oRow in someRows)\r\n            {\r\n                System.Diagnostics.Trace.WriteLine($\"id={oRow.Id}    wt={oRow.Weight}   ht={oRow.Height}  isOverWt={oRow.IsOverWeight}\");\r\n            }\r\n        }\r\n      \r\n### Before normalization\r\n    id|wt|ht|overwt\r\n    01|30.0|4.0|False\r\n    02|35.0|4.5|False\r\n    03|40.0|5.0|False\r\n    10|33.0|4.0|True\r\n    11|38.0|4.5|True\r\n    12|43.0|5.0|True\r\n\r\n### After normalization (fixZero=true)\r\n    id=1    wt=0.8   ht=0.697674418604651  \r\n    id=2    wt=0.9   ht=0.813953488372093  \r\n    id=3    wt=1   ht=0.930232558139535  \r\n    id=10    wt=0.8   ht=0.767441860465116  \r\n    id=11    wt=0.9   ht=0.883720930232558  \r\n    id=12    wt=1   ht=1  \r\n\r\n### After normalization (fixZero=false)\r\n    id=1    wt=0   ht=0  \r\n    id=2    wt=0.5   ht=0.384615384615385  \r\n    id=3    wt=1   ht=0.769230769230769  \r\n    id=10    wt=0   ht=0.230769230769231 \r\n    id=11    wt=0.5   ht=0.615384615384615  \r\n    id=12    wt=1   ht=1 \r\n\r\n\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2479","RelatedDescription":"Open issue \"How to normalize 2 columns simultaneously?\" (#2479)"},{"Id":"408095652","IsPullRequest":false,"CreatedAt":"2019-02-08T10:41:54","Actor":"nsulikowski","Number":"2478","RawContent":null,"Title":"Pipeline visualization please","State":"open","Body":"Can you add a way to generate a DOT graph of a pipeline, like [https://docs.microsoft.com/en-us/NimbusML/tutorials/c_a-visualize-a-pipeline](NimbusML) ?\r\n\r\nI tried to build it myself, but all the transformer's properties are being internalized.\r\nThanks\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2478","RelatedDescription":"Open issue \"Pipeline visualization please\" (#2478)"},{"Id":"407909145","IsPullRequest":false,"CreatedAt":"2019-02-08T08:58:46","Actor":"sdg002","Number":"2466","RawContent":null,"Title":"Displaying the records that have been loaded using TextLoader","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  .NET 4.5\r\n\r\n### Issue\r\nI was trying to get a better understanding of loading records from a flat file. All I wanted to do was to access the records that have been loaded sequentially and display  them.\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\nThe code in the **while block** below is my attempt. **This worked well**. However, I am wondering if this is the right way to iterate over a cursor?  Is there anything simpler to get the individual column values? Feels a bit onerous.\r\n\r\n### Source code / logs\r\n        [TestMethod]\r\n        public void TestMethod1()\r\n        {\r\n            string datafile = @\"Data\\Dummy2.csv\";\r\n            string pathFull = System.IO.Path.Combine(Util.GetProjectDir2(), datafile);\r\n            var argsLoader = new Microsoft.ML.Data.TextLoader.Arguments();\r\n            try\r\n            {\r\n                argsLoader.HasHeader = true;\r\n                argsLoader.Separators = new char[] { '|' };\r\n                argsLoader.Column = new Microsoft.ML.Data.TextLoader.Column[]\r\n                {\r\n                    new Microsoft.ML.Data.TextLoader.Column(\"id\", Microsoft.ML.Data.DataKind.I4,0),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"ht\", Microsoft.ML.Data.DataKind.R4,1),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"wt\", Microsoft.ML.Data.DataKind.R4,2),\r\n                new Microsoft.ML.Data.TextLoader.Column(\"overwt\", Microsoft.ML.Data.DataKind.Bool,3)\r\n                };\r\n                var mlContext = new Microsoft.ML.MLContext();\r\n                var loader = mlContext.Data.CreateTextLoader(argsLoader);\r\n                Microsoft.Data.DataView.IDataView dataView = loader.Read(pathFull);\r\n                var schema = dataView.Schema;\r\n                Microsoft.Data.DataView.RowCursor cur = dataView.GetRowCursor(schema);\r\n                while (cur.MoveNext())\r\n                {\r\n                    System.Diagnostics.Trace.WriteLine($\"got a row, position={cur.Position}\");\r\n                    ///\r\n                    /// Column 0\r\n                    ///\r\n                    Microsoft.Data.DataView.ValueGetter<int> getter = cur.GetGetter<int>(0);\r\n                    int id = 0;\r\n                    getter.Invoke(ref id);\r\n                    ///\r\n                    /// Column 1\r\n                    ///\r\n                    Microsoft.Data.DataView.ValueGetter<float> getterWt = cur.GetGetter<float>(1);\r\n                    float wt = 0;\r\n                    getterWt.Invoke(ref wt);\r\n                    ///\r\n                    /// Column 3\r\n                    ///\r\n                    Microsoft.Data.DataView.ValueGetter<bool> getterIsOverWt = cur.GetGetter<bool>(3);\r\n                    bool isOverWt = false;\r\n                    getterIsOverWt.Invoke(ref isOverWt);\r\n\r\n                    System.Diagnostics.Trace.WriteLine($\"id={id}    wt={wt}    isOverWt={isOverWt}\");\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                System.Diagnostics.Trace.WriteLine(ex.ToString());\r\n            }\r\n        }\r\n/*\r\nid|wt|ht|overwt\r\n01|30.0|4.0|False\r\n02|35.0|4.5|False\r\n03|40.0|5.0|False\r\n10|33.0|4.0|True\r\n11|38.0|4.5|True\r\n12|43.0|5.0|True\r\n\r\n*/\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2466","RelatedDescription":"Closed issue \"Displaying the records that have been loaded using TextLoader\" (#2466)"},{"Id":"407987298","IsPullRequest":true,"CreatedAt":"2019-02-08T02:56:10","Actor":"zeahmed","Number":"2476","RawContent":null,"Title":"Lockdown of Microsoft.ML.LightGBM public surface.","State":"open","Body":"This PR fixes #2271.\r\n\r\nThe changes included in this PR are as follows.\r\n1. Changed unnecessary `public` items to `internal`.\r\n2. Created samples in the samples project.\r\n3. Referenced the samples as an example in public API exposed through MLContext.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2476","RelatedDescription":"Open PR \"Lockdown of Microsoft.ML.LightGBM public surface.\" (#2476)"},{"Id":"407972232","IsPullRequest":true,"CreatedAt":"2019-02-08T01:35:16","Actor":"zeahmed","Number":"2475","RawContent":null,"Title":"TensorFlow: Fixed shape issue where unknown shape will be induced from data.","State":"open","Body":"This PR fixes #2458.\r\n\r\nThe problem addressed in this PR are\r\n1. Input is used to determine the shape. If there is one unknown dimension, it is computed from the input data. If there are several unknown dimension, the value computed from the input is equally distributed among unknown dimension.\r\n2. There is no batch dimension assumption on input now.\r\n3. Output shape are computed as previously done. However, if there are more than one unknown dimensions in the shape, a variable length vector is returned then.\r\n4. Created test to check for different type of shapes can be pass in and out of TF.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2475","RelatedDescription":"Open PR \"TensorFlow: Fixed shape issue where unknown shape will be induced from data.\" (#2475)"},{"Id":"407967700","IsPullRequest":false,"CreatedAt":"2019-02-08T01:12:43","Actor":"danmosemsft","Number":"2474","RawContent":null,"Title":"Get tests passing on Mono and add Mono to CI","State":"open","Body":"@Anipik and others have been scouting Mono. \r\n\r\nAs soon as our tests pass on Mono, we should add it to CI to protect it.\r\n\r\nNote - the Mono build will need (at least) the fix for https://github.com/mono/mono/issues/12690\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2474","RelatedDescription":"Open issue \"Get tests passing on Mono and add Mono to CI\" (#2474)"},{"Id":"407967569","IsPullRequest":false,"CreatedAt":"2019-02-08T01:11:59","Actor":"Ivanidzo4ka","Number":"2473","RawContent":null,"Title":"GetColumn method is extension for IDataView but not mlContext.","State":"open","Body":"https://github.com/dotnet/machinelearning/issues/1708 moved CreateEnumerable from extension on top of DataView to become extension on mlContext object.\r\n\r\nWe still have GetColumn extension https://github.com/dotnet/machinelearning/blob/7fc7e50ce6f8fed24fc0b9528839a0ac8d0ed320/src/Microsoft.ML.Data/Utilities/ColumnCursor.cs#L25\r\nwhich works on top of DataView. Shall we move it to mlContext?\r\n\r\n`var enumerable = mlContext.CreateEnumerable<SamplesUtils.DatasetUtils.SampleTemperatureData>(filteredData, reuseRowObject: true);`\r\n`var originalColumnBack = transformedData_default.GetColumn<VBuffer<ReadOnlyMemory<char>>>(mlContext, defaultColumnName);`\r\n\r\nThey look silly together.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2473","RelatedDescription":"Open issue \"GetColumn method is extension for IDataView but not mlContext.\" (#2473)"},{"Id":"407950240","IsPullRequest":false,"CreatedAt":"2019-02-07T23:54:49","Actor":"srsaggam","Number":"2472","RawContent":null,"Title":"Any reason for inconsistency in params for TextLoader?","State":"open","Body":"1) This Method :\r\nhttps://github.com/dotnet/machinelearning/blob/834e4715afa070f5e5c3628693682943b3f0bd6d/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderSaverCatalog.cs#L55\r\n\r\n2) and this one : \r\nhttps://github.com/dotnet/machinelearning/blob/834e4715afa070f5e5c3628693682943b3f0bd6d/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderSaverCatalog.cs#L22\r\n\r\nLooks like the first one has params like : \r\n```\r\nchar separatorChar = '\\t', bool allowQuotedStrings = true, bool supportSparse = true, bool trimWhitespace = false\r\n```\r\n\r\nWhere as the second one doesn't have those. In order to use those params there is another method overload : \r\n```\r\nCreateTextLoader(this DataOperationsCatalog catalog, TextLoader.Arguments args, IMultiStreamSource dataSample = null);\r\n```\r\n\r\nThis takes Arguments class and particularly one param is interesting in this Arguments:\r\n```\r\nchar [] Separators\r\n```\r\n Any reason this is char[] and not char like in other overloads? and why inconsistency in params for the methods 1) and 2).\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2472","RelatedDescription":"Open issue \"Any reason for inconsistency in params for TextLoader?\" (#2472)"},{"Id":"407947315","IsPullRequest":false,"CreatedAt":"2019-02-07T23:42:15","Actor":"abgoswam","Number":"2471","RawContent":null,"Title":"Missing support for Anomaly Detection metrics.","State":"open","Body":"ML.NET supports several evaluation metrics but is missing support for Anomaly Detection metrics.\r\n\r\nExample of supported metrics:\r\n- [BinaryClassificationMetrics](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/Evaluators/Metrics/BinaryClassificationMetrics.cs)\r\n- [RegressionMetrics](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/Evaluators/Metrics/RegressionMetrics.cs)\r\n\r\nIs anomaly detection a scenario we want to support for V 1.0 ?  If yes, we should probably add support for anomaly detection metrics\r\n\r\n@Ivanidzo4ka @sfilipi @shauheen @glebuk @artidoro \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2471","RelatedDescription":"Open issue \"Missing support for Anomaly Detection metrics.\" (#2471)"},{"Id":"407937064","IsPullRequest":true,"CreatedAt":"2019-02-07T23:04:17","Actor":"rogancarr","Number":"2470","RawContent":null,"Title":"Add a project for functional tests without visibility into internals of ML.NET","State":"open","Body":"This PR adds a new project, `Microsoft.ML.Functional.Tests` for adding end-to-end scenario tests for ML.NET. This project does not have visibility into the main library, and is not strongly named, so may not be added.\r\n\r\nTwo tests were also moved from `Microsoft.ML.Tests` into this project:\r\n- `CrossValidation`: Migrated with additional tests\r\n- `ReconfigurablePrediction`: Migrated but marked as `Skip` because Issue #2465 prevents us from completing the scenario.\r\n\r\nFixes #2306 ","Url":"https://github.com/dotnet/machinelearning/pull/2470","RelatedDescription":"Open PR \"Add a project for functional tests without visibility into internals of ML.NET\" (#2470)"},{"Id":"407935001","IsPullRequest":false,"CreatedAt":"2019-02-07T22:56:56","Actor":"wschin","Number":"2469","RawContent":null,"Title":"Model produced by SdcaBinaryTrainer is not and can not be strongly-typed","State":"open","Body":"The [`CreatePredictor`](https://github.com/dotnet/machinelearning/blob/6ec3280fe62b34ab07e183cd5d9e5d2767dd0dcc/src/Microsoft.ML.StandardLearners/Standard/SdcaBinary.cs#L1550) function,\r\n```csharp\r\n        using TScalarPredictor = IPredictorWithFeatureWeights<float>;\r\n        ...\r\n        protected override TScalarPredictor CreatePredictor(VBuffer<float>[] weights, float[] bias)\r\n        {\r\n            ...\r\n            var predictor = new LinearBinaryModelParameters(Host, in maybeSparseWeights, bias[0]);\r\n            if (Info.NeedCalibration)\r\n                return predictor;\r\n            return new ParameterMixingCalibratedPredictor(Host, predictor, new PlattCalibrator(Host, -1, 0));\r\n        }\r\n```\r\n in `SdcaBinaryTrainer` can produce two different types depending on the specified loss function. To generate model in a type-safe manner, we need two trainers for the two possible model types. cc @TomFinley for visibility.","Url":"https://github.com/dotnet/machinelearning/issues/2469","RelatedDescription":"Open issue \"Model produced by SdcaBinaryTrainer is not and can not be strongly-typed\" (#2469)"},{"Id":"407929070","IsPullRequest":false,"CreatedAt":"2019-02-07T22:37:11","Actor":"sfilipi","Number":"2468","RawContent":null,"Title":"Remove the dead code inside the FastTree assembly","State":"open","Body":"The code inside src/Microsoft.ML.FastTree/Application is not in use. \r\n\r\nDelete the Folder. ","Url":"https://github.com/dotnet/machinelearning/issues/2468","RelatedDescription":"Open issue \"Remove the dead code inside the FastTree assembly\" (#2468)"},{"Id":"407926515","IsPullRequest":false,"CreatedAt":"2019-02-07T22:29:17","Actor":"wschin","Number":"2467","RawContent":null,"Title":"OvaModelParameters is not strongly-typed","State":"open","Body":" In the constructor of 'OvaModelParameters`,\r\n```csharp\r\n        using TScalarPredictor = IPredictorProducing<float>;\r\n        ...\r\n        internal static OvaModelParameters Create(IHost host,  OutputFormula outputFormula, TScalarPredictor[] predictors)\r\n        {\r\n        ...\r\n        }\r\n```\r\nwe remove the type information of predictors by forcing them to be `IPredictorProducing<float>`. To make all multi-class classifiers' outputting strongly-typed models. We need to make `OvaModelParameters` strongly-typed.","Url":"https://github.com/dotnet/machinelearning/issues/2467","RelatedDescription":"Open issue \"OvaModelParameters is not strongly-typed\" (#2467)"},{"Id":"407873363","IsPullRequest":false,"CreatedAt":"2019-02-07T20:00:47","Actor":"rogancarr","Number":"2465","RawContent":null,"Title":"Cannot set the threshold on a binary predictor","State":"open","Body":"It is no longer possible to set a custom `Threshold` and `ThresholdColumn` on a binary classifier.\r\n\r\nPreviously, we had been using `BinaryPredictionTransformer`. Recently, `BinaryPredictionTransformer` was marked as `internal` and is no longer available for usage outside of the library.\r\n\r\nRelated to question #403","Url":"https://github.com/dotnet/machinelearning/issues/2465","RelatedDescription":"Open issue \"Cannot set the threshold on a binary predictor\" (#2465)"},{"Id":"407856732","IsPullRequest":false,"CreatedAt":"2019-02-07T19:50:04","Actor":"rogancarr","Number":"2464","RawContent":null,"Title":"BinaryPredictionTransformer has a public constructor","State":"closed","Body":"`BinaryPredictionTransformer` has a `public` constructor of the form:\r\n```cs\r\nBinaryPredictionTransformer(IHostEnvironment env, ModelLoadContext ctx)\r\n```\r\n\r\nSince the usable constructor\r\n```cs\r\nBinaryPredictionTransformer(IHostEnvironment env, TModel model, Schema inputSchema, string featureColumn, float threshold = 0f, string thresholdColumn = DefaultColumnNames.Score)\r\n```\r\nis marked `internal`, it seems like the one taking a `ModelLoadContext` should be too.","Url":"https://github.com/dotnet/machinelearning/issues/2464","RelatedDescription":"Closed issue \"BinaryPredictionTransformer has a public constructor\" (#2464)"},{"Id":"407855783","IsPullRequest":false,"CreatedAt":"2019-02-07T19:17:39","Actor":"XamlBrewer","Number":"2463","RawContent":null,"Title":"ConvertToOnnx throws Protobuf exception","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro 1809 17763.253\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.0 and 2.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** Added ML.NET.Onnx NuGet package to any official sample, and a call to ConvertToOnnx.\r\n- **What happened?** Exception: Sequence contained null element / Parameter: values / Google.Protobuf\r\n\r\n- **What did you expect?** A successful conversion in at least one of the samples\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\nExample from the Clustering_CustomerSegmentation sample (inserted after step 6):\r\nvar onnx = mlContext.Model.ConvertToOnnx(trainedModel, pivotDataView);\r\n\r\nSame behavior is experienced in all the samples that I opened (and downgraded to v0.9).\r\n\r\n![onnxexception](https://user-images.githubusercontent.com/9828352/52436561-e69e8700-2b14-11e9-8851-324dfc95dbef.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2463","RelatedDescription":"Open issue \"ConvertToOnnx throws Protobuf exception\" (#2463)"},{"Id":"407813277","IsPullRequest":false,"CreatedAt":"2019-02-07T17:28:23","Actor":"ileve","Number":"2462","RawContent":null,"Title":"ScoreTensorFlowModel does not produce the expected results","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10-x64 10.0.17134\r\n- **.NET Version (eg., dotnet --info)**: dotnet SDK 2.1.402\r\n\r\nvisual Studio 15.8.4\r\n\r\n### Issue\r\n`ScoreTensorFlowModel` does not produce the expected results from a pre-trained network\r\n- **What did you do?**\r\nI trained a [regression model](https://colab.research.google.com/drive/1kuR3ugh-EOXcNXz_Qglt06MQQQkA2Mmp) and saved the full model as an h5 file. Then i load the file and convert it to a pb file. Then the pb file was fed to an ML.NET project.\r\n\r\n- **What happened?**\r\nThe predicted results from ML.NET project are not the same with the predicted results in TensorFlow notebook.\r\n- **What did you expect?**\r\nto get the same results.\r\n### Source code / logs\r\nthe C# code was:\r\n\r\n```csharp    \r\n    class Program\r\n    {\r\n        static string dataset = Path.Combine(Directory.GetCurrentDirectory(), \"mpg.txt\");\r\n        static string pbModel = Path.Combine(Directory.GetCurrentDirectory(), \"fromh5.pb\");\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var mlContext = new MLContext(); \r\n\r\n            string dataFile = File.ReadAllText(dataset);\r\n            // Creating a data reader, based on the format of the data\r\n            var reader = TextLoaderStatic.CreateReader(mlContext, c => (\r\n                        index: c.LoadFloat(0),  //it is irrelevant with inputs or output\r\n                        dense_input_1: c.LoadFloat(1, 9)),\r\n                        separator: '\\t', hasHeader: true);\r\n\r\n            // Read the data\r\n            var data = reader.Read(new MultiFileSource(dataset));\r\n\r\n            var estimator = mlContext.Transforms.ScoreTensorFlowModel(\r\n                                    pbModel,\r\n                                    new string[] { \"dense_2_1/BiasAdd\" },\r\n                                    new string[] { \"dense_input_1\" });\r\n\r\n            var model = estimator.Fit(data.AsDynamic);\r\n            var predictionMachine = model.CreatePredictionEngine<InputData, OutputData>(mlContext);\r\n            var inputs = mlContext.CreateEnumerable<InputData>(data.AsDynamic, reuseRowObject: false).ToArray();\r\n            for (int i = 0; i < inputs.Length; i++)\r\n            {\r\n                var predictedLabel = predictionMachine.Predict(inputs[i]);\r\n                for (int j = 0; j < inputs[i].Features.Length; j++)\r\n                {\r\n                    Console.Write(inputs[i].Features[j]);\r\n                    Console.Write(\" \");\r\n                }\r\n                Console.WriteLine(predictedLabel.Output[0]);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    class InputData\r\n    {\r\n        [ColumnName(\"dense_input_1\"), VectorType(9)]\r\n        public float[] Features { get; set; }\r\n    }\r\n\r\n    class OutputData\r\n    {\r\n        [ColumnName(\"dense_2_1/BiasAdd\"), VectorType(1)]\r\n        public float[] Output { get; set; }\r\n    }\r\n```\r\n\r\nThe inputs which were used for prediction were read from `mpg.txt` file with contents:\r\n\r\n```\t\r\n         Cylinders \tDisplacement \tHorsepower \tWeight \tAcceleration \tModel Year \tUSA \tEurope \tJapan\r\n9 \t1.483887\t 1.865988 \t2.234620\t1.018782\t-2.530891 \t-1.604642 \t0.774676 \t-0.465148 \t-0.495225\r\n25 \t1.483887 \t1.578444 \t2.890853 \t1.925289 \t-0.559020 \t-1.604642 \t0.774676 \t-0.465148 \t-0.495225\r\n28 \t1.483887 \t1.041693 \t2.313368 \t2.063931 \t1.054328 \t-1.604642 \t0.774676 \t-0.465148 \t-0.495225\r\n31 \t-0.869348 \t-0.789008 \t-0.259066 \t-0.903250 \t-0.559020 \t-1.332580 \t-1.286751 \t-0.465148 \t2.012852\r\n33 \t0.307270 \t0.351586 \t-0.127819 \t-0.422150 \t-0.917542 \t-1.332580 \t0.774676 \t-0.465148 \t-0.495225\r\n39 \t1.483887 \t1.961837 \t1.840880 \t1.746357 \t-1.455325 \t-1.332580 \t0.774676 \t-0.465148 \t-0.495225\r\n40 \t1.483887 \t1.492180 \t1.263395 \t1.379015 \t-0.738281 \t-1.332580 \t0.774676 \t-0.465148 \t-0.495225\r\n43 \t1.483887 \t1.961837 \t1.709634 \t2.080521 \t-1.276064 \t-1.332580 \t0.774676 \t-0.465148 \t-0.495225\r\n48 \t0.307270 \t0.524113 \t-0.442811 \t0.176263 \t-0.379759 \t-1.332580 \t0.774676 \t-0.465148 \t-0.495225\r\n54 \t-0.869348 \t-1.181986 \t-0.941548 \t-1.632011 \t0.875068 \t-1.332580 \t-1.286751 \t-0.465148 \t2.012852\r\n```\r\n\r\nThe pb file is:\r\n[pbfile](https://user-images.githubusercontent.com/31559543/52429060-05e4e680-2b0c-11e9-8a15-59e04c24ffc8.jpg)\r\n\r\nPredicted results :\r\n```15.770189 ,  8.624239 ,  7.2484765, 24.726585 , 21.833643 , 12.528247 , 13.377004 , 12.101825 , 20.065805 , 32.288208```\r\n\r\nPredicted results from ML.NET:\r\n```-0.5800864, -0.775505, -0.7530465, -0.1452617, -0.2986267, -0.6405546, -0.4707591, -0.6763195, -0.1432758, -0.2586956```","Url":"https://github.com/dotnet/machinelearning/issues/2462","RelatedDescription":"Open issue \"ScoreTensorFlowModel does not produce the expected results\" (#2462)"},{"Id":"407810071","IsPullRequest":false,"CreatedAt":"2019-02-07T17:21:01","Actor":"sdg002","Number":"2461","RawContent":null,"Title":"The method Read of TextLoader does not check for the presence of the file.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET 4.6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\nThe method Read of the class TextLoader does not validate the presence of the input file. I understand that there is an element of lazy loading here. But, it would help to get feedback earlier in the form of System.IO.FileNotFoundException\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2461","RelatedDescription":"Open issue \"The method Read of TextLoader does not check for the presence of the file.\" (#2461)"},{"Id":"407801948","IsPullRequest":false,"CreatedAt":"2019-02-07T17:02:16","Actor":"abgoswam","Number":"2460","RawContent":null,"Title":"Modify API for FeaturizeText ?","State":"open","Body":"In the MLContext for the text featurizer, the input column names are taken as a IEnumerable<string>\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/834e4715afa070f5e5c3628693682943b3f0bd6d/src/Microsoft.ML.Transforms/Text/TextCatalog.cs#L43-L46\r\n\r\nhttps://github.com/dotnet/machinelearning/pull/2394#discussion_r254357200   recommends making them params instead.   \r\n\r\nShould we modify this API ?\r\n\r\n@sfilipi ","Url":"https://github.com/dotnet/machinelearning/issues/2460","RelatedDescription":"Open issue \"Modify API for FeaturizeText ?\" (#2460)"},{"Id":"407733950","IsPullRequest":false,"CreatedAt":"2019-02-07T14:44:41","Actor":"sdg002","Number":"2459","RawContent":null,"Title":"Is there any end to end C# sample code using LightGBM  ?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  4.6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2459","RelatedDescription":"Open issue \"Is there any end to end C# sample code using LightGBM  ?\" (#2459)"},{"Id":"407727494","IsPullRequest":false,"CreatedAt":"2019-02-07T14:30:53","Actor":"LucasFievet","Number":"2458","RawContent":null,"Title":"TensorFlowTransformer is not properly matching the input dimensions","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10/Pro\r\n- **.NET Version (eg., dotnet --info)**: .NET Version 2.1.202\r\n- ML.TensorFlow Version 0.10\r\n\r\n### Issue\r\n\r\n- **What did you do?**: Executed a TensorFlow model using TensorFlowEstimator\r\n- **What happened?**: Mapper does not properly match the input dimensions to the TensorFlow model dimensions\r\n- **What did you expect?**: Properly matched dimensions\r\n\r\n### Source code / logs\r\n\r\nTensorFlowTransform.cs, Lines 810 - 875\r\n\r\nLine 853:\r\n\r\nvar d = originalShape.NumDimensions > 2 ? Math.Pow(typeValueCount / valCount, 1.0 / (originalShape.NumDimensions - 2)) : 1;\r\n\r\nThe case with 2 dimensions, where the originalShape is [1, ?] is not matched properly.","Url":"https://github.com/dotnet/machinelearning/issues/2458","RelatedDescription":"Open issue \"TensorFlowTransformer is not properly matching the input dimensions\" (#2458)"},{"Id":"407707792","IsPullRequest":false,"CreatedAt":"2019-02-07T13:46:56","Actor":"sdg002","Number":"2457","RawContent":null,"Title":"No sample code! ","State":"open","Body":"There used to be a MSDN , a long time ago. There used to code snippets which made learning so easy. I understand you have GitHub. But, you could provide links to make the user journey more comfortable.\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 022855f3-11d3-616c-f742-51e109c739d3\n* Version Independent ID: fc02b6bb-c669-5081-f891-71d8e911834b\n* Content: [TextLoader.Read Method (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.textloader.read?view=ml-dotnet#Microsoft_ML_Data_TextLoader_Read_System_String_)\n* Content Source: [dotnet/xml/Microsoft.ML.Data/TextLoader.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/TextLoader.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/2457","RelatedDescription":"Open issue \"No sample code! \" (#2457)"},{"Id":"407680241","IsPullRequest":false,"CreatedAt":"2019-02-07T12:39:34","Actor":"arkenidar","Number":"2456","RawContent":null,"Title":"support for \"autoconstructive evolution\" & Genetic Programming (GP)","State":"open","Body":"what about support for these?:\r\n\r\nhttps://en.wikipedia.org/wiki/Autoconstructive_evolution\r\n\r\nIn the \"autoconstructive evolution\" approach to meta-genetic programming, the methods for the production and variation of offspring are encoded within the evolving programs themselves, and programs are executed to produce new programs to be added to the population.[45][46]\r\nhttps://en.wikipedia.org/wiki/Genetic_programming#Meta-genetic_programming\r\n\r\nthanks","Url":"https://github.com/dotnet/machinelearning/issues/2456","RelatedDescription":"Open issue \"support for \"autoconstructive evolution\" & Genetic Programming (GP)\" (#2456)"},{"Id":"407562064","IsPullRequest":false,"CreatedAt":"2019-02-07T08:42:30","Actor":"daholste","Number":"2455","RawContent":null,"Title":"FastForest learning rate not settable thru options object","State":"closed","Body":"Learning rate for FastForest is not settable thru options object\r\n\r\nThis issue also appears as one of the later comments in this issue: https://github.com/dotnet/machinelearning/issues/1983","Url":"https://github.com/dotnet/machinelearning/issues/2455","RelatedDescription":"Closed issue \"FastForest learning rate not settable thru options object\" (#2455)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-09T05:30:55.0338824Z","RunDurationInMilliseconds":1024}