{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11457487384","Type":"PullRequestEvent","CreatedAt":"2020-02-06T23:55:09","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7840","RelatedDescription":"Opened pull request \"Enable using managed identities for KeyVault\" (#7840) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2970\r\n"},{"Id":"11456397114","Type":"PullRequestEvent","CreatedAt":"2020-02-06T21:08:21","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7837","RelatedDescription":"Merged pull request \"Remove the SemVer 2.0.0 warnings from push and display packages\" (#7837) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/7836\r\n\r\n# Push from command line\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895268-defee480-4833-11ea-9c75-3f06f84d3cda.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895274-e8884c80-4833-11ea-9794-36e2eea8c1b3.png)\r\n\r\n# UI upload\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895620-0ace9a00-4835-11ea-95a4-dd7f672c10ed.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895603-ff7b6e80-4834-11ea-9cab-db34aba32eca.png)\r\n\r\n# Package details page\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895639-1d48d380-4835-11ea-9ec0-f4856af403a9.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895674-36ea1b00-4835-11ea-824c-acedafcb9983.png)\r\n"},{"Id":"11456260165","Type":"PullRequestEvent","CreatedAt":"2020-02-06T20:50:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7838","RelatedDescription":"Merged pull request \"Block version ranges that NuGet pack does not allow\" (#7838) at NuGet/NuGetGallery","RelatedBody":"When you try to pack a .nuspec with a floating version in it, NuGet pack prevents this by taking out the floating part and substituting in min version. \"12.*\" turns into \"12.0.0\". However, someone can hand-craft a .nuspec to get around it.\r\n\r\nWhen we moved from 2.x APIs to 3.x APIs in gallery, we started supporting this without realizing it. Our .nuspec validation looks at each dependency version and parses it as a `VersionRange` which supports floating (since it's the same model that is used for `<PackageReference>` version).\r\n\r\nThese are the only packages that have utilized this:\r\n\r\nId | Version | Created\r\n-- | -- | --\r\nPInvokeCompiler  |  1.0.0-rc1 |  2017-01-09\r\nScissorhands.Helpers |   1.0.0-alpha-17  |  2016-01-13\r\nScissorhands.Helpers |   1.0.0-alpha-16  | 2016-01-13\r\n\r\nThanks @zivkan for the data.\r\n\r\nWe should block these since it has unpredictable impact on the restore graph and is a totally undocumented case for transitive package dependencies.\r\n\r\nIf we want to open the flood gates later we can but it would be coupled with official client support and a well thought through plan of how this will impact package consumers as a whole.\r\n\r\n"},{"Id":"11455939931","Type":"IssuesEvent","CreatedAt":"2020-02-06T20:08:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7839","RelatedDescription":"Opened issue \"Consider blocking non-sense version range: [X, Y) where X > Y\" (#7839) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/Home/issues/9145\r\n\r\nSteps.\r\n\r\n1. [ ] Analyze the existing packages and see if anyone has done it\r\n1. [ ] Block it\r\n\r\nThere's no known scenario for this range. It's a contradiction."},{"Id":"11447901898","Type":"PullRequestEvent","CreatedAt":"2020-02-06T01:20:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7838","RelatedDescription":"Opened pull request \"Block versions that NuGet pack does not allow\" (#7838) at NuGet/NuGetGallery","RelatedBody":"When you try to pack a .nuspec with a floating version in it, NuGet pack prevents this by taking out the floating part and substituting in min version. \"12.*\" turns into \"12.0.0\". However, someone can hand-craft a .nuspec to get around it.\r\n\r\nWhen we moved from 2.x APIs to 3.x APIs in gallery, we started supporting this without realizing it. Our .nuspec validation looks at each dependency version and parses it as a `VersionRange` which supports floating (since it's the same model that is used for `<PackageReference>` version).\r\n\r\nThese are the only packages that have utilized this:\r\n\r\nId | Version | Created\r\n-- | -- | --\r\nPInvokeCompiler  |  1.0.0-rc1 |  2017-01-09\r\nScissorhands.Helpers |   1.0.0-alpha-17  |  2016-01-13\r\nScissorhands.Helpers |   1.0.0-alpha-16  | 2016-01-13\r\n\r\nThanks @zivkan for the data.\r\n\r\nWe should block these since it has unpredictable impact on the restore graph and is a totally undocumented case for package dependencies.\r\n\r\nIf we want to open the flood gates later we can but it would be coupled with official client support and a well thought through plan of how this will impact package consumers as a whole.\r\n\r\n"},{"Id":"11447671517","Type":"PullRequestEvent","CreatedAt":"2020-02-06T00:33:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7837","RelatedDescription":"Opened pull request \"Remove the SemVer 2.0.0 warnings from push and display packages\" (#7837) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/7836\r\n\r\n# Push from command line\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895268-defee480-4833-11ea-9c75-3f06f84d3cda.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895274-e8884c80-4833-11ea-9794-36e2eea8c1b3.png)\r\n\r\n# UI upload\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895620-0ace9a00-4835-11ea-95a4-dd7f672c10ed.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895603-ff7b6e80-4834-11ea-9cab-db34aba32eca.png)\r\n\r\n# Package details page\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895639-1d48d380-4835-11ea-9ec0-f4856af403a9.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895674-36ea1b00-4835-11ea-824c-acedafcb9983.png)\r\n"},{"Id":"11446601716","Type":"IssuesEvent","CreatedAt":"2020-02-05T21:36:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7836","RelatedDescription":"Opened issue \"Remove the SemVer 2.0.0 warning from nuget.org\" (#7836) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nWhen the SemVer 2.0.0 changes were introduced to the V2 and V3 protocol, they are intended to mitigate the impact of SemVer 2.0.0 packages breaking old clients, e.g. suppose a very popular package released a SemVer 2.0.0 version. In such a case a 2.x customer would fail to restore a package because the version parsing would explode. So we make SemVer 2.0.0 packages \"opt-in\". \r\n\r\nThis protocol change meant that SemVer 2.0.0 packages were hidden in most of our APIs for clients that predate NuGet version 4.3. 4.3 is when the SemVer 2.0.0 protocol was implemented. At that same time we put a warning banner on nuget.org.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73881689-a223f500-4815-11ea-8717-653f6302cc65.png)\r\nhttps://www.nuget.org/packages/NuGet.Versioning/5.5.0-preview.2.6382\r\n\r\nA similar warning is also visible during UI upload and during package push. And during pack (NU5105).\r\n\r\nSince 4.3 was shipped so long ago, most clients now support the SemVer 2.0.0 protocol and this warning is more noisy than helpful.\r\n\r\nRange | Percent | Note\r\n-- | -- | --\r\nâ‰¥ 4.3 | ~96.4% | Supports SemVer 2.0.0 protocol\r\nâ‰¥ 3.0 && < 4.3 | ~3.6% | Partial SemVer 2.0.0 but not SemVer 2.0.0 protocol `*`\r\n< 3.0 | ~0.0% | Does not support SemVer 2.0.0\r\n\r\n`*` =\r\n- 3.5.0 and on supported SemVer 2.0.0 in packages.config\r\n- PackageReference always supported SemVer 2.0.0 from what I can tell\r\n- V3 feeds always return SemVer 2.0.0 packages from flat container so packages can be found prior to SemVer 2.0.0. protocol support\r\n\r\n### Describe the solution you'd like\r\n\r\nRemove these warnings entirely.\r\n\r\n### Additional details\r\n\r\nPrompted by https://twitter.com/SimonCropp/status/1169447145939685376, https://github.com/NuGet/NuGetGallery/pull/7772, and https://github.com/NuGet/Home/issues/5201.\r\n\r\n/cc @nkolev92 @SimonCropp @agr @karann-msft \r\n"},{"Id":"11444714968","Type":"IssuesEvent","CreatedAt":"2020-02-05T17:38:56","Actor":"taori","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7835","RelatedDescription":"Opened issue \"Improved link functionality for nuget.org\" (#7835) at NuGet/NuGetGallery","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuget.org page\r\n\r\nIt would be great if there were a page link for nuget.org to access the latest version of a packet matching a given version suffix name.\r\n\r\ne.g nuget.org/packages/mypage/latest/alpha or nuget.org/packages/mypage/latest\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11458243497","Type":"IssuesEvent","CreatedAt":"2020-02-07T02:37:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6772","RelatedDescription":"Closed issue \"[Feedback] [Test Failure] There is no â€˜no-op restoreâ€™ log for C# xUnit Test Project (.NET Core) project after restoring with developer command prompt\" (#6772) at NuGet/Home","RelatedBody":"Internal issue: [525127](https://devdiv.visualstudio.com/DevDiv/NuGet/_queries/edit/525127/?fullScreen=false&triage=true)"},{"Id":"11458020148","Type":"IssuesEvent","CreatedAt":"2020-02-07T01:47:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9149","RelatedDescription":"Opened issue \"Obsolete restore types that project.json specific\" (#9149) at NuGet/Home","RelatedBody":"For example https://github.com/NuGet/NuGet.Client/blob/7bac015acc5b7e0161a058c8febc98abe2386d51/src/NuGet.Core/NuGet.LibraryModel/LibraryDependency.cs#L16 is not very useful anymore. \r\n\r\nSame applies to a lot of types throughout restore. "},{"Id":"11457795361","Type":"IssuesEvent","CreatedAt":"2020-02-07T00:58:27","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9077","RelatedDescription":"Closed issue \"Review Accessibility bugs\" (#9077) at NuGet/Home","RelatedBody":"Query: https://devdiv.visualstudio.com/DevDiv/_queries/query/db727d15-1a7a-41dc-b8ab-5c813706be26/\n\nBug 1: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049204\nBug 2: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049209\nBug 3: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049251"},{"Id":"11457765828","Type":"IssuesEvent","CreatedAt":"2020-02-07T00:51:52","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6410","RelatedDescription":"Closed issue \"msbuild /restore support for all NuGet use cases\" (#6410) at NuGet/Home","RelatedBody":"## Background\r\nAs new .NET project types (e.g. .NET Core, among others) are introduced, newer versions of NuGet are required to understand the project type and accompanying target framework. In Visual Studio, this is fine because the VS update that brings the new project types also brings new versions of NuGet libraries that can restore packages for these project types.\r\n\r\nVSTS builds are unable to provide this same symmetry because we are unable to use those built-in NuGet libraries, and instead call NuGet.exe or dotnet.exe directly to do restore. This causes issues when the version of NuGet used to restore is too old to work with one or more of the projects in the user's solution. We want to avoid this issue by using the new msbuild /restore functionality, which relies solely on the installed copy of MSBuild, which in turn matches the version of Visual Studio installed on the build agents. This will mean that agents can build new project types as soon as they're updated to a new version of Visual Studio.\r\n\r\n## Ask\r\nHowever, msbuild /restore currently only works for .NET Core/PackageRef projects. We'd like to have its functionality extended to support both .NET paradigms (Framework/packages.config is missing). Once that's done, we can simplify the VSTS build templates for .NET project to use this built-in restore capability and avoid hard-to-debug build errors during the restore step.\r\n\r\n## Related issues\r\n- https://github.com/Microsoft/vsts-tasks/issues/5997\r\n- https://github.com/Microsoft/vsts-tasks/issues/6039\r\n- https://github.com/Microsoft/vsts-tasks/issues/5236\r\n- https://github.com/Microsoft/vsts-tasks/issues/5164\r\n- https://github.com/Microsoft/vsts-tasks/issues/5065\r\n- https://developercommunity.visualstudio.com/content/problem/145862/build-nuget-restore-private-feed.html\r\n- https://developercommunity.visualstudio.com/content/problem/158828/nuget-restore-on-private-agent-always-using-v41.html\r\n- https://developercommunity.visualstudio.com/content/problem/100882/nuget-restore-fails-after-aspnet-core-20-migration.html\r\n- https://developercommunity.visualstudio.com/content/problem/32997/hosted-agent-2017-with-nuget-35.html"},{"Id":"11456709072","Type":"IssuesEvent","CreatedAt":"2020-02-06T21:50:09","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8190","RelatedDescription":"Closed issue \"Error list shown although \"Always show Error List if build finishes with errors\" is not checked\" (#8190) at NuGet/Home","RelatedBody":"## Details about Problem\nDeveloper Community: https://developercommunity.visualstudio.com/content/problem/177400/error-list-shown-although-always-show-error-list-i.html\n\nNuGet causes Error List to popup during Build even when VS settings are set otherwise.\n\n## Detailed repro steps so we can see the same problem\n\n1. Create a .csproj-style project.\n2. Break the referenced NuGet packages in some way (eg, modify PackageReference or Packages.config to point to a nupkg version number that does not exist.\n3. Modify the VS settings so that \"Always show Error List when a build fails\" is unchecked.\n4. Compile the solution.\n5. The Error List will take focus.\n...\n\n## Other suggested things\n\n### Verbose Logs\n\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\n\n### Sample Project\n\nVery helpful if you can zip a project and paste into this issue!\n\n"},{"Id":"11456573547","Type":"IssuesEvent","CreatedAt":"2020-02-06T21:31:47","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9148","RelatedDescription":"Opened issue \"Insertion of 5.5.0-rtm.6418\" (#9148) at NuGet/Home","RelatedBody":"VS:\r\n - [ ] https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/227455\r\n\r\n.NET Core 3.0\r\n - [ ] https://github.com/dotnet/toolset/pull/4248\r\n - [ ] https://github.com/dotnet/cli/pull/13218\r\n - [ ] https://github.com/dotnet/sdk/pull/10609\r\n\r\n.NET Core 5.0\r\n \r\n"},{"Id":"11456392701","Type":"PullRequestEvent","CreatedAt":"2020-02-06T21:07:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/9109","RelatedDescription":"Merged pull request \"Extensibility services guidelines\" (#9109) at NuGet/Home","RelatedBody":"Fixes: https://github.com/NuGet/Home/issues/9062\r\nA separate PR for the already reviewed extensibility services doc. \r\n\r\n@NuGet/nuget-client can someone quickly review this so I can merge it? "},{"Id":"11456392670","Type":"IssuesEvent","CreatedAt":"2020-02-06T21:07:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9062","RelatedDescription":"Closed issue \"Guidelines for asynchronous NuGet extensibility services\" (#9062) at NuGet/Home","RelatedBody":""},{"Id":"11456087821","Type":"IssuesEvent","CreatedAt":"2020-02-06T20:27:57","Actor":"outbred","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9147","RelatedDescription":"Opened issue \"Cannot suppress NU1702, which only shows for .NET Framework projects using new SDK format\" (#9147) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used : Package Manager Console\r\nNuGet version: 5.4.0.6292\r\nVS version: 16.4.4\r\nOS version: Win10 v1903\r\nWorked before? If so, with which NuGet version: nope\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nReference a .NET framework project using the new SDK format from a .NET Std 2.0 project, and you will see a warning like this:\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(1653,5): warning NU1702: ProjectReference 'C:\\blah\\blah.csproj' was resolved using '.NETFramework,Version=v4.7.2' instead of the project target framework '.NETStandard,Version=v2.0'. This project may not be fully compatible with your project.\r\n\r\nThere is no way to suppress this message, even with <NoWarn>$(NoWarn);NU1702;1702</NoWarn> in my project file (for Debug and Release builds).\r\n\r\nNU1701 can be suppressed via the props dialog for the package, but the props dialog for the project has no 'No Warn' entry field.\r\n\r\n### Verbose Logs\r\n\r\nnot needed\r\n\r\n### Sample Project\r\n\r\nThis project has 2 .NET Framework projects in it - the warning shows for the new SDK formatted project, but not the other (old style format).  Note that no project is multi-targeted.\r\n\r\n[DotNetFramework.zip](https://github.com/NuGet/Home/files/4167561/DotNetFramework.zip)\r\n\r\n"},{"Id":"11456009821","Type":"IssuesEvent","CreatedAt":"2020-02-06T20:17:46","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9146","RelatedDescription":"Opened issue \"Docs & SDK code for: add `dotnet nuget <add|remove|update|disable|enable|list> source` command\" (#9146) at NuGet/Home","RelatedBody":"Still needed to finish [NuGet/Home#4126] add `dotnet nuget <add|remove|update|disable|enable|list> source` command:\n- [ ] docs\n- [ ] sdk checkin\n- [ ] anything else"},{"Id":"11455926959","Type":"IssuesEvent","CreatedAt":"2020-02-06T20:07:04","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9107","RelatedDescription":"Closed issue \"Fix disabled Linux agent\" (#9107) at NuGet/Home","RelatedBody":"Appears out of disk space. Fix that.\r\nFigure out why it happened...and try to prevent."},{"Id":"11455846648","Type":"IssuesEvent","CreatedAt":"2020-02-06T19:57:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9145","RelatedDescription":"Opened issue \"NuGetVersionRange allows logically incorrect ranges to be parsed\" (#9145) at NuGet/Home","RelatedBody":"See: https://nugettoolsdev.azurewebsites.net/5.5.0-preview.2.6382/parse-version-range?versionRange=%5B10.0.0%2C+9.0.0%29\r\n\r\n> [10.0.0, 9.0.0)\r\n\r\nThis range is empty and there's no reasonable scenario where it's necessary. \r\n\r\nThis has always been the case, all the way to 2.5 https://nugettoolsdev.azurewebsites.net/2.5.0/parse-version-range?versionRange=%5B10.0.0%2C+9.0.0%29."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-07T05:30:45.4850122Z","RunDurationInMilliseconds":2149}