{"Data":{"Vue":{"Events":[{"Id":"7175368119","Type":"IssuesEvent","CreatedAt":"2018-01-31T05:02:27","Actor":"decademoon","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7569","RelatedDescription":"Opened issue \"Allow props to have different internal and external names\" (#7569) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\nConsider the `<input>` element. It maintains its own internal state for its value (by the browser) irrespective of whether or not it is being driven by `v-model`.\r\n\r\nAfter looking at some Vue component libraries, most of the components externalize their state through props, meaning that the parent component must define the value for that component in its data and use `v-model` to wire it up -- the component cannot be used without `v-model` because it doesn't maintain the state internally to the component.\r\n\r\nIdeally I'd like to author input components that satisfy the following requirements:\r\n\r\n* Can be used without `v-model` (the component maintains the state itself)\r\n* Can be used with `v-model` (the state is driven entirely by the prop   emitting `input` events)\r\n\r\nThis results in somewhat messy code like [this](http://jsfiddle.net/df4Lnuw6/179/):\r\n\r\n```js\r\nVue.component('checkbox', {\r\n  template: '<div class=\"checkbox\" @click=\"toggle\">{{ internalValue ? \"Checked\" : \"Unchecked\" }}</div>',\r\n  \r\n  props: {\r\n    value: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      internalValue: false,\r\n    };\r\n  },\r\n  \r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      handler(value) {\r\n        this.internalValue = value;\r\n      },\r\n    },\r\n    \r\n    internalValue(internalValue) {\r\n      this.$emit('input', internalValue);\r\n    },\r\n  },\r\n  \r\n  methods: {\r\n    toggle() {\r\n      this.internalValue = !this.internalValue;\r\n    },\r\n  },\r\n});\r\n```\r\n\r\nIn order to distinguish between the prop and the data, I've used `value` and `internalValue` respectively. The problem is that `value` is rarely used in the code (it's only used in the watcher) and I have to remember to use `internalValue` throughout the component's code and template instead of `value` (since `internalValue` is the mutable source of truth).\r\n\r\nTo avoid this, I could instead name the prop `externalValue` and the data `value`, but now I would have to use `<checkbox :external-value=\"x\">` which is not ideal (the external prop should be called simply \"value\").\r\n\r\nI'm proposing a feature in which you can specify what internal name a prop should be exposed as within the component without changing the external name of that prop in templates (kind of like how method arguments work in objective-c).\r\n\r\n### What does the proposed API look like?\r\n```js\r\nVue.component('foo', {\r\n  props: {\r\n    value: {\r\n      internalName: 'valueProp',\r\n    },\r\n  },\r\n\r\n  template: '<div>{{ valueProp }}</div>',\r\n});\r\n```\r\n\r\n```html\r\n<foo value=\"bar\">\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7175239082","Type":"IssuesEvent","CreatedAt":"2018-01-31T04:07:11","Actor":"mortyccp","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2038","RelatedDescription":"Opened issue \"Throw exception or provide info message when route's component is null\" (#2038) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nCurrently, route's component can be null and it give no information and error. Provide information or raising error can help users to catch they have some import issues when they use\r\n```\r\nimport * as components from './components'\r\n\r\nexport default [\r\n  {\r\n    path: '/accounts',\r\n    component: components.AccountsListView,\r\n    name: 'accountsListView'\r\n  },\r\n  {\r\n    path: '/accounts/create',\r\n    component: components.CreateEditAccounts,\r\n    name: 'createAccounts'\r\n  }\r\n]\r\n```\r\n\r\nSo if `components.CreateEditAccounts` is null, they will know what went wrong easier.\r\n\r\n### What does the proposed API look like?\r\nRaise error when component is null or log info message.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7172245063","Type":"PullRequestEvent","CreatedAt":"2018-01-30T16:14:03","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2037","RelatedDescription":"Merged pull request \"Update redirect-and-alias.md\" (#2037) at vuejs/vue-router","RelatedBody":"Correction conjugaison\r\n"},{"Id":"7172057342","Type":"PullRequestEvent","CreatedAt":"2018-01-30T15:44:12","Actor":"fredrocheron","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2037","RelatedDescription":"Opened pull request \"Update redirect-and-alias.md\" (#2037) at vuejs/vue-router","RelatedBody":"Correction conjugaison\r\n"},{"Id":"7170643587","Type":"IssuesEvent","CreatedAt":"2018-01-30T11:09:36","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2034","RelatedDescription":"Closed issue \"发现一个2.x中文文档的错别字\" (#2034) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nhttps://router.vuejs.org/zh-cn/essentials/getting-started.html\r\n\r\n### Steps to reproduce\r\n通过注入路由，我们可以用 this.$router 来访问它，就像在任何组件里用 this.$router 访问当前  **路有**  一样。\r\n\r\n### What is expected?\r\n错别字\r\n\r\n### What is actually happening?\r\n错别字\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7170637143","Type":"PullRequestEvent","CreatedAt":"2018-01-30T11:08:11","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2035","RelatedDescription":"Merged pull request \"Fixed a typo in getting-started.md\" (#2035) at vuejs/vue-router","RelatedBody":"\"Ertelle\" to \"Erstelle\" in list point 4.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7174735604","Type":"PullRequestEvent","CreatedAt":"2018-01-31T01:10:34","Actor":"DavidWilliamBalbino","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1143","RelatedDescription":"Opened pull request \"Add language pt-br\" (#1143) at vuejs/vuex","RelatedBody":""},{"Id":"7174607625","Type":"IssuesEvent","CreatedAt":"2018-01-31T00:30:21","Actor":"LinusBorg","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1142","RelatedDescription":"Closed issue \"Store Two-way binding with using <v-for>\" (#1142) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nHi All,\r\nI want to know how can i map vuex's data with inner v-for object.\r\n\r\nFor example,\r\n\r\nIn template,\r\n```html\r\n<template>\r\n    <div>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <th> Index </th>\r\n                    <th> Name </th>\r\n                    <th> Value </th>\r\n                </tr>\r\n                <tr v-for=\"(item, index) in testarr\" :key=\"index\">\r\n                    <td> {{ index }} </td>\r\n                    <td> {{ item.name }} </td>\r\n                    <td> {{ item.value }} </td>\r\n                    <td> <input type=\"checkbox\" v-model=\"item.checked\"/> </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n```\r\n\r\nAnd scripts\r\n```javascript\r\nexport default {\r\n    name: 'VueTest',\r\n    data() {\r\n        return {\r\n            testarr: [\r\n                {\r\n                    name: '1234',\r\n                    value: 53535,\r\n                },\r\n                {\r\n                    name: '2352352',\r\n                    value: 5144,\r\n                },\r\n                {\r\n                    name: '61246',\r\n                    value: 2390,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n\r\n}\r\n```\r\n\r\nin this situation, (there are not connected with Vuex)\r\nwhen i check 'checkbox', automatically be made what called `checked`.\r\n\r\nOtherwise with Vuex,\r\n\r\n```javascript\r\nexport default {\r\n    name: 'VuexTest',\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        vuexdata: {\r\n            get() { return this.$store.state.vuexArr; },\r\n            set(value) { this.$store.commit('updateArr', value); }\r\n        }\r\n    }\r\n\r\n}\r\n```\r\nAnd template <v-for> is,\r\n\r\n```html\r\n <tr v-for=\"(item, index) in vuexdata\" :key=\"index\">\r\n                    <td> {{ index }} </td>\r\n                    <td> {{ item.name }} </td>\r\n                    <td> {{ item.value }} </td>\r\n                    <td> <input type=\"checkbox\" v-model=\"item.checked\"/> </td>\r\n                </tr>\r\n```\r\nthere are some APIs with `computed` data ( get(), set() methods ),\r\nbut these are not solution for this.\r\n\r\n\r\nAnd i have read https://github.com/vuejs/vuex/issues/936,\r\nbut it is not a solution neither.\r\n\r\n\r\nIf there is a point, please comment this.\r\n\r\nThanks!\r\n\r\n### What does the proposed API look like?\r\nTwo-way binding with using <v-for> in each object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7170376871","Type":"IssuesEvent","CreatedAt":"2018-01-30T10:15:23","Actor":"01045972746","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1142","RelatedDescription":"Opened issue \"Store Two-way binding with using <v-for>\" (#1142) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nHi All,\r\nI want to know how can i map vuex's data with inner v-for object.\r\n\r\nFor example,\r\n\r\nIn template,\r\n```html\r\n<template>\r\n    <div>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <th> Index </th>\r\n                    <th> Name </th>\r\n                    <th> Value </th>\r\n                </tr>\r\n                <tr v-for=\"(item, index) in testarr\" :key=\"index\">\r\n                    <td> {{ index }} </td>\r\n                    <td> {{ item.name }} </td>\r\n                    <td> {{ item.value }} </td>\r\n                    <td> <input type=\"checkbox\" v-model=\"item.checked\"/> </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n```\r\n\r\nAnd scripts\r\n```javascript\r\nexport default {\r\n    name: 'VueTest',\r\n    data() {\r\n        return {\r\n            testarr: [\r\n                {\r\n                    name: '1234',\r\n                    value: 53535,\r\n                },\r\n                {\r\n                    name: '2352352',\r\n                    value: 5144,\r\n                },\r\n                {\r\n                    name: '61246',\r\n                    value: 2390,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n\r\n}\r\n```\r\n\r\nin this situation, (there are not connected with Vuex)\r\nwhen i check 'checkbox', automatically be made what called `checked`.\r\n\r\nOtherwise with Vuex,\r\n\r\n```javascript\r\nexport default {\r\n    name: 'VuexTest',\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        vuexdata: {\r\n            get() { return this.$store.state.vuexArr; },\r\n            set(value) { this.$store.commit('updateArr', value); }\r\n        }\r\n    }\r\n\r\n}\r\n```\r\nAnd template <v-for> is,\r\n\r\n```html\r\n <tr v-for=\"(item, index) in vuexdata\" :key=\"index\">\r\n                    <td> {{ index }} </td>\r\n                    <td> {{ item.name }} </td>\r\n                    <td> {{ item.value }} </td>\r\n                    <td> <input type=\"checkbox\" v-model=\"item.checked\"/> </td>\r\n                </tr>\r\n```\r\nthere are some APIs with `computed` data ( get(), set() methods ),\r\nbut these are not solution for this.\r\n\r\n\r\nAnd i have read https://github.com/vuejs/vuex/issues/936,\r\nbut it is not a solution neither.\r\n\r\n\r\nIf there is a point, please comment this.\r\n\r\nThanks!\r\n\r\n### What does the proposed API look like?\r\nTwo-way binding with using <v-for> in each object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-01-31T05:30:34.6522916Z","RunDurationInMilliseconds":2473}