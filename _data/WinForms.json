{"Data":{"GitHub":{"Issues":[{"Id":"404075107","IsPullRequest":true,"CreatedAt":"2019-01-29T00:59:32","Actor":"hughbe","Number":"395","RawContent":null,"Title":"Add ListBindingHelper tests","State":"open","Body":"Depends on https://github.com/dotnet/winforms/pull/394","Url":"https://github.com/dotnet/winforms/pull/395","RelatedDescription":"Open PR \"Add ListBindingHelper tests\" (#395)"},{"Id":"404074584","IsPullRequest":true,"CreatedAt":"2019-01-29T00:57:22","Actor":"hughbe","Number":"394","RawContent":null,"Title":"Fix binding null refs","State":"open","Body":"Fixes #388 \r\nFixes #389\r\nFixes #390\r\nFixes #391\r\nFixes #392\r\n\r\nThis is an obvious win - we now return something meaningful (and usable) in these examples rather than throwing NRE. There are no changes in exceptions, only exceptions in edge cases that are no longer an issue!","Url":"https://github.com/dotnet/winforms/pull/394","RelatedDescription":"Open PR \"Fix binding null refs\" (#394)"},{"Id":"404073071","IsPullRequest":true,"CreatedAt":"2019-01-29T00:50:47","Actor":"hughbe","Number":"393","RawContent":null,"Title":"Remove dead code from binding","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/393","RelatedDescription":"Open PR \"Remove dead code from binding\" (#393)"},{"Id":"403985815","IsPullRequest":false,"CreatedAt":"2019-01-28T20:08:28","Actor":"hughbe","Number":"392","RawContent":null,"Title":"ListBindingHelper.GetListName(1, new PropertyDescriptor[] { null }) throws NRE should return null","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/392","RelatedDescription":"Open issue \"ListBindingHelper.GetListName(1, new PropertyDescriptor[] { null }) throws NRE should return null\" (#392)"},{"Id":"403984816","IsPullRequest":false,"CreatedAt":"2019-01-28T20:05:44","Actor":"hughbe","Number":"391","RawContent":null,"Title":"ListBindingHelper.GetListName(typeof(Array), new PropertyDescriptor[0]) throws NRE should return \"Array\"","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/391","RelatedDescription":"Open issue \"ListBindingHelper.GetListName(typeof(Array), new PropertyDescriptor[0]) throws NRE should return \"Array\"\" (#391)"},{"Id":"403931318","IsPullRequest":false,"CreatedAt":"2019-01-28T17:45:34","Actor":"hughbe","Number":"390","RawContent":null,"Title":"ListBindingHelper.GetListItemProperties(x, new PropertyDescriptor[] { null }) throws NRE should return empty","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/390","RelatedDescription":"Open issue \"ListBindingHelper.GetListItemProperties(x, new PropertyDescriptor[] { null }) throws NRE should return empty\" (#390)"},{"Id":"403877132","IsPullRequest":false,"CreatedAt":"2019-01-28T15:46:34","Actor":"hughbe","Number":"389","RawContent":null,"Title":"ListBindingHelper.GetListItemType(new IEnumerableWrapper(null)) throws NRE should return typeof(object)","State":"open","Body":"```cs\r\nListBindingHelper.GetListItemType(new IEnumerableWrapper(null));\r\n\r\nprivate class IEnumerableWrapper : IEnumerable\r\n{\r\n    public IEnumerableWrapper(IList list)\r\n    {\r\n        List = list;\r\n    }\r\n\r\n    private IList List { get; }\r\n\r\n    public IEnumerator GetEnumerator() => List?.GetEnumerator();\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/389","RelatedDescription":"Open issue \"ListBindingHelper.GetListItemType(new IEnumerableWrapper(null)) throws NRE should return typeof(object)\" (#389)"},{"Id":"403870631","IsPullRequest":false,"CreatedAt":"2019-01-28T15:32:50","Actor":"hughbe","Number":"388","RawContent":null,"Title":"ListBindingHelper.GetListItemType(typeof(IListSourceThatReturnsNull)) throws NRE should return null","State":"open","Body":"Should return null\r\n\r\n```cs\r\nvoid Method()\r\n{\r\n      ListBindingHelper.GetListItemType(ilistSource.GetType());\r\n}\r\n\r\n        private class ClassWithIListSource : IListSource\r\n        {\r\n            public bool ContainsListCollection => throw new NotImplementedException();\r\n\r\n            public IList GetListResult { get; set; }\r\n\r\n            public IList GetList() => GetListResult;\r\n        }\r\n```","Url":"https://github.com/dotnet/winforms/issues/388","RelatedDescription":"Open issue \"ListBindingHelper.GetListItemType(typeof(IListSourceThatReturnsNull)) throws NRE should return null\" (#388)"},{"Id":"403775569","IsPullRequest":false,"CreatedAt":"2019-01-28T11:48:02","Actor":"Zheng-Li01","Number":"387","RawContent":null,"Title":"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application ","State":"open","Body":"**OS:** RS4 X64\r\n**VS:** Visual Studio 2019 Version 16.0.0.0 Preview 4.0 [28526.15.d16.0stg]\r\n**.NET SDK:** .NET Core 3.0.100-preview-10184\r\n\r\n**More Info:**\r\n1. In .Net framework application adding the same code, no exception pops up.\r\n2. Replace Bitmap value = new Bitmap(64, 64) with Bitmap value = new Bitmap(\"C:\\Users\\Desktop\\xxx.png\") , no exception pops up.\r\n\r\n**Steps to Reproduce:**\r\n1. Create a Winforms .Net Core application by command: dotnet new winforms –o “xxx”.\r\n2. Write code to Form1.cs.\r\n    using System.Resources;\r\n    using System.Drawing;\r\n    Bitmap value = new Bitmap(64, 64);\r\n    String key = \"e\";\r\n    ResXResourceWriter writer = new ResXResourceWriter(\"ResxResourceWriter.resx\");\r\n    ResXDataNode node = new ResXDataNode(key, value);\r\n    writer.AddResource(node);\r\n3. Debug the application.\r\n\r\n**Actual:**\r\nWhen debugging to writer.AddResource(node), the exception pops up.\r\n![image](https://user-images.githubusercontent.com/38325459/51834305-d62c2680-2334-11e9-8764-6b0f0b4b3800.png)\r\n\r\n**Call Stack:**\r\nSystem.ArgumentNullException\r\nHResult=0x80004003\r\nMessage=Value cannot be null.\r\nSource=System.Drawing.Common\r\nStackTrace:\r\nat System.Drawing.Image.Save(Stream stream, ImageCodecInfo encoder, EncoderParameters encoderParams)\r\nat System.Drawing.Image.Save(Stream stream, ImageFormat format)\r\nat System.Drawing.ImageConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)\r\nat System.ComponentModel.TypeConverter.ConvertTo(Object value, Type destinationType)\r\nat System.Resources.ResXDataNode.FillDataNodeInfoFromObject(DataNodeInfo nodeInfo, Object value)\r\nat System.Resources.ResXDataNode.GetDataNodeInfo()\r\nat System.Resources.ResXResourceWriter.AddResource(ResXDataNode node)\r\nat AddResourceconsole.Program.Main(String[] args) in C:\\Users\\v-jiaol\\Desktop\\WinformDemo\\AddResourceconsole\\Program.cs:line 31\r\n\r\n**Expected:**\r\nNo exception pops up, application runs successfully.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/387","RelatedDescription":"Open issue \"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application \" (#387)"},{"Id":"403703288","IsPullRequest":false,"CreatedAt":"2019-01-28T08:44:19","Actor":"Olina-Zhang","Number":"386","RawContent":null,"Title":"WinForms Core default project name/solution name should not be “ConsoleAppXXX” in Visual Studio","State":"open","Body":"**VS**: 16.0.0 Preview 4.0 [28526.15.d16.0stg]\r\n**.NET SDK**: .NET Core 3.0.100-preview-010184\r\n\r\n**Steps to Reproduce:**\r\n1. Launch Dev16, click “Create a new project”, then choose “Windows Forms App (.Net Core)” template, then click Next\r\n2. In “configure your new project” dialog, check the project name and solution name\r\n\r\n**Actual:**\r\nThe Project name and Solution name for Winforms .Net Core app are not correct, should not be “ConsoleAppXXX”. See following screenshot:\r\n![corecreating](https://user-images.githubusercontent.com/26474449/51823921-a5e17b00-2295-11e9-8881-593939e31043.png)\r\n\r\n**Expected:**\r\nThe default Project name and Solution name are same as Winforms Framework app when creating.","Url":"https://github.com/dotnet/winforms/issues/386","RelatedDescription":"Open issue \"WinForms Core default project name/solution name should not be “ConsoleAppXXX” in Visual Studio\" (#386)"},{"Id":"403453656","IsPullRequest":false,"CreatedAt":"2019-01-26T15:48:03","Actor":"hughbe","Number":"385","RawContent":null,"Title":"TableLayoutStyleCollection.Insert/Add/ItemSet(null) throws NRE should throw ANE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/385","RelatedDescription":"Open issue \"TableLayoutStyleCollection.Insert/Add/ItemSet(null) throws NRE should throw ANE\" (#385)"},{"Id":"403453605","IsPullRequest":false,"CreatedAt":"2019-01-26T15:47:27","Actor":"hughbe","Number":"384","RawContent":null,"Title":"TableLayoutPanelCellPosition.CreateInstance(null, null) throws NRE should throw ANE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/384","RelatedDescription":"Open issue \"TableLayoutPanelCellPosition.CreateInstance(null, null) throws NRE should throw ANE\" (#384)"},{"Id":"403453565","IsPullRequest":false,"CreatedAt":"2019-01-26T15:46:59","Actor":"hughbe","Number":"383","RawContent":null,"Title":"TableLayoutControlCollection should throw when constructed with a null container","State":"open","Body":"Currently the add method throws NRE","Url":"https://github.com/dotnet/winforms/issues/383","RelatedDescription":"Open issue \"TableLayoutControlCollection should throw when constructed with a null container\" (#383)"},{"Id":"403453512","IsPullRequest":false,"CreatedAt":"2019-01-26T15:46:20","Actor":"hughbe","Number":"382","RawContent":null,"Title":"TableLayoutSettings.GetRowSpan/SetRowSpan/SetRow/SetColumn/SetColumnSpan should validate control for null","State":"open","Body":"Throws NRE","Url":"https://github.com/dotnet/winforms/issues/382","RelatedDescription":"Open issue \"TableLayoutSettings.GetRowSpan/SetRowSpan/SetRow/SetColumn/SetColumnSpan should validate control for null\" (#382)"},{"Id":"403453443","IsPullRequest":true,"CreatedAt":"2019-01-26T15:45:23","Actor":"hughbe","Number":"381","RawContent":null,"Title":"Improve validation of Table arguments","State":"open","Body":"Fixes #382 \r\nFixes #383 \r\nFixes #384\r\nFixes #385","Url":"https://github.com/dotnet/winforms/pull/381","RelatedDescription":"Open PR \"Improve validation of Table arguments\" (#381)"},{"Id":"403449637","IsPullRequest":true,"CreatedAt":"2019-01-26T15:01:05","Actor":"hughbe","Number":"380","RawContent":null,"Title":"Fix InputLanguage null refs and add tests","State":"open","Body":"Fixes https://github.com/dotnet/winforms/issues/379\r\nFixes https://github.com/dotnet/winforms/issues/378\r\n\r\nAlso some code cleanup\r\n","Url":"https://github.com/dotnet/winforms/pull/380","RelatedDescription":"Open PR \"Fix InputLanguage null refs and add tests\" (#380)"},{"Id":"403449618","IsPullRequest":false,"CreatedAt":"2019-01-26T15:00:55","Actor":"hughbe","Number":"379","RawContent":null,"Title":"new InputLanguageChangedEventArgs((InputLanguage)null, 0) throws NRE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/379","RelatedDescription":"Open issue \"new InputLanguageChangedEventArgs((InputLanguage)null, 0) throws NRE\" (#379)"},{"Id":"403449590","IsPullRequest":false,"CreatedAt":"2019-01-26T15:00:26","Actor":"hughbe","Number":"378","RawContent":null,"Title":"InputLanguage.FromCulture(null) throws NRE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/378","RelatedDescription":"Open issue \"InputLanguage.FromCulture(null) throws NRE\" (#378)"},{"Id":"402873595","IsPullRequest":true,"CreatedAt":"2019-01-25T20:23:52","Actor":"hughbe","Number":"366","RawContent":null,"Title":"Fix ListView debug asserts","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/winforms/pull/366","RelatedDescription":"Closed or merged PR \"Fix ListView debug asserts\" (#366)"},{"Id":"403232017","IsPullRequest":false,"CreatedAt":"2019-01-25T16:33:50","Actor":"hughbe","Number":"377","RawContent":null,"Title":"Calling ColumnHeaderCollection.RemoveAt for an empty collection throws NRE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/377","RelatedDescription":"Open issue \"Calling ColumnHeaderCollection.RemoveAt for an empty collection throws NRE\" (#377)"},{"Id":"403231890","IsPullRequest":false,"CreatedAt":"2019-01-25T16:33:31","Actor":"hughbe","Number":"376","RawContent":null,"Title":"new ColumnHeaderCollection(null) causes NREs whenever used","State":"open","Body":"Should validate","Url":"https://github.com/dotnet/winforms/issues/376","RelatedDescription":"Open issue \"new ColumnHeaderCollection(null) causes NREs whenever used\" (#376)"},{"Id":"403231752","IsPullRequest":false,"CreatedAt":"2019-01-25T16:33:11","Actor":"hughbe","Number":"375","RawContent":null,"Title":"ColumnHeaderCollection.AddRange(new ColumnHeader[] { null }) throws NRE should throw ANE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/375","RelatedDescription":"Open issue \"ColumnHeaderCollection.AddRange(new ColumnHeader[] { null }) throws NRE should throw ANE\" (#375)"},{"Id":"403231640","IsPullRequest":false,"CreatedAt":"2019-01-25T16:32:51","Actor":"hughbe","Number":"374","RawContent":null,"Title":"ColumnHeaderCollection.Add(null) throws NRE should throw ANE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/374","RelatedDescription":"Open issue \"ColumnHeaderCollection.Add(null) throws NRE should throw ANE\" (#374)"},{"Id":"403141252","IsPullRequest":false,"CreatedAt":"2019-01-25T12:39:28","Actor":"hughbe","Number":"373","RawContent":null,"Title":"ListViewSubItemCollection.Remove should set the item's owner to `null`","State":"open","Body":"```cs\r\n[Fact]\r\npublic void IListRemove_ListViewSubItem_Success()\r\n{\r\n    var item = new ListViewItem();\r\n    IList collection = new ListViewItem.ListViewSubItemCollection(item);\r\n    var subItem = new ListViewItem.ListViewSubItem();\r\n    collection.Add(subItem);\r\n\r\n    collection.Remove(subItem);\r\n    Assert.Empty(collection);\r\n    Assert.Same(item, subItem.owner);\r\n\r\n    // Remove again.\r\n    collection.Remove(subItem);\r\n    Assert.Empty(collection);\r\n    Assert.Same(item, subItem.owner);\r\n}\r\n```\r\n\r\nThe owner remains even though the item has been removed","Url":"https://github.com/dotnet/winforms/issues/373","RelatedDescription":"Open issue \"ListViewSubItemCollection.Remove should set the item's owner to `null`\" (#373)"},{"Id":"403140952","IsPullRequest":false,"CreatedAt":"2019-01-25T12:38:29","Actor":"hughbe","Number":"372","RawContent":null,"Title":"ListViewGroupCollection.Insert is missing validation present in Add","State":"open","Body":"Add:\r\n```cs\r\npublic int Add(ListViewGroup group)\r\n{\r\n    if (group == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(group));\r\n    }\r\n\r\n    if (this.Contains(group)) {\r\n        return -1;\r\n    }\r\n\r\n    // Will throw InvalidOperationException if group contains items which are parented by another listView.\r\n    CheckListViewItems(group);\r\n    group.ListViewInternal = this.listView;\r\n    int index = this.List.Add(group);\r\n    if (listView.IsHandleCreated) {\r\n        listView.InsertGroupInListView(this.List.Count, group);\r\n        MoveGroupItems(group);\r\n    }            \r\n    return index;\r\n}        \r\n```\r\n\r\nInsert:\r\n```cs\r\npublic void Insert(int index, ListViewGroup group) {\r\n    if (group == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(group));\r\n    }\r\n\r\n    if (Contains(group)) {\r\n        return;\r\n    }\r\n    group.ListViewInternal = this.listView;\r\n    this.List.Insert(index, group);\r\n    if (listView.IsHandleCreated) {\r\n        listView.InsertGroupInListView(index, group);\r\n        MoveGroupItems(group);\r\n    }            \r\n}       \r\n```\r\n\r\nNotice the missing call in `Insert` to `CheckListViewItems(group);`\r\n\r\nThis lets us get into an invalid state in `Insert`","Url":"https://github.com/dotnet/winforms/issues/372","RelatedDescription":"Open issue \"ListViewGroupCollection.Insert is missing validation present in Add\" (#372)"},{"Id":"403127165","IsPullRequest":false,"CreatedAt":"2019-01-25T11:55:17","Actor":"hughbe","Number":"371","RawContent":null,"Title":"ListViewSubItemCollection[0] = null throws NRE should throw ANE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/371","RelatedDescription":"Open issue \"ListViewSubItemCollection[0] = null throws NRE should throw ANE\" (#371)"},{"Id":"403126023","IsPullRequest":false,"CreatedAt":"2019-01-25T11:51:48","Actor":"hughbe","Number":"370","RawContent":null,"Title":"ListViewGroupCollection indexer setter should block null values","State":"open","Body":"This causes null refs across the board whenever doing other operations on the collection, e.g. adding an item","Url":"https://github.com/dotnet/winforms/issues/370","RelatedDescription":"Open issue \"ListViewGroupCollection indexer setter should block null values\" (#370)"},{"Id":"403125580","IsPullRequest":false,"CreatedAt":"2019-01-25T11:50:24","Actor":"hughbe","Number":"369","RawContent":null,"Title":"`ListViewGroupCollection[index] = group` doesn't set the `group.ListView` prop","State":"open","Body":"```cs\r\n            var listView = new ListView();\r\n            ListViewGroupCollection collection = listView.Groups;\r\n            collection.Add(new ListViewGroup());\r\n\r\n            var group = new ListViewGroup();\r\n            collection[0] = group;\r\n            Assert.Same(group, collection[0]);\r\n            Assert.Same(listView, group.ListView);\r\n```\r\n\r\nThis fails -> group.ListView is null.","Url":"https://github.com/dotnet/winforms/issues/369","RelatedDescription":"Open issue \"`ListViewGroupCollection[index] = group` doesn't set the `group.ListView` prop\" (#369)"},{"Id":"402941331","IsPullRequest":true,"CreatedAt":"2019-01-24T23:36:46","Actor":"AdamYoblick","Number":"368","RawContent":null,"Title":"removed soundplayer package, added System.Windows.Extensions dependency","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/368","RelatedDescription":"Closed or merged PR \"removed soundplayer package, added System.Windows.Extensions dependency\" (#368)"},{"Id":"402874063","IsPullRequest":true,"CreatedAt":"2019-01-24T20:04:49","Actor":"hughbe","Number":"367","RawContent":null,"Title":"Remove dead ctor checks in ListItemConverter","State":"open","Body":"`ctor` is never null when getting the instancedescriptor\r\n\r\nthe other changes are formatting cleanups","Url":"https://github.com/dotnet/winforms/pull/367","RelatedDescription":"Open PR \"Remove dead ctor checks in ListItemConverter\" (#367)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-01-29T05:31:11.6253892Z","RunDurationInMilliseconds":637}