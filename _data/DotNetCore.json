{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access Build 3734","PublishedOn":"2019-01-29T00:30:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are getting closer to the final version now! This release includes several accessibility, performance and reliability fixes across the major framework libraries. We will continue to stabilize this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/28/announcing-net-framework-4-8-early-access-build-3734/","RawContent":null},{"Title":"Help us plan the future of .NET and Big Data","PublishedOn":"2019-01-28T22:05:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re currently looking into how we can make .NET great for Big Data scenarios.    Please fill out the survey below and help shape how we can improve .NET for Big Data by sharing your experiences,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/28/help-us-plan-the-future-of-net-and-big-data/","RawContent":null},{"Title":"Debugging .NET Apps with Time Travel Debugging (TTD)","PublishedOn":"2019-01-25T19:32:21+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"When you are debugging an application, there are many tools and techniques you can use, like logs, memory dumps and Event Tracing for Windows (ETW). In this post, we will talk about Time Travel...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/25/debugging-net-apps-with-time-travel-debugging-ttd/","RawContent":null},{"Title":".NET and TypeScript at FOSDEM 2019","PublishedOn":"2019-01-24T20:50:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The schedule for the .NET and Typescript Developer Room at FOSDEM has now been published! FOSDEM is one of the longest running Free and Open Source conferences, and we’re excited to have a .NET and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/net-and-typescript-at-fosdem-2019/","RawContent":null},{"Title":"Do more with patterns in C# 8.0","PublishedOn":"2019-01-24T18:00:30+00:00","CommentsCount":48,"FacebookCount":0,"Summary":"Do more with patterns in C# 8.0 Visual Studio 2019 Preview 2 is out! And with it, a couple more C# 8.0 features are ready for you to try. It&#8217;s mostly about pattern matching, though I&#8217;ll...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/do-more-with-patterns-in-c-8-0/","RawContent":null},{"Title":"Announcing F# 4.6 Preview","PublishedOn":"2019-01-24T15:45:40+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that Visual Studio 2019 will ship a new version of F# when it releases: F# 4.6! F# 4.6 is a smaller update to the F# language, making it a &#8220;true&#8221;...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/announcing-f-4-6-preview/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2019 Preview 2","PublishedOn":"2019-01-24T15:30:31+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Another preview of Visual Studio 2019, another update on the cool stuff going into it! We&#8217;re pleased to announce some updates to the .NET Core tools for Visual Studio 2019. You can try these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/net-core-tooling-update-for-visual-studio-2019-preview-2/","RawContent":null},{"Title":".NET Framework January 22, 2018 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-01-22T22:22:08+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the January 22, 2018 .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Help us help you! What desktop apps are you bringing to .NET Core 3.0?","PublishedOn":"2019-01-17T16:00:26+00:00","CommentsCount":43,"FacebookCount":0,"Summary":"Windows Desktop applications are coming to .NET Core. The recently released .NET Core 3.0 Preview 1 version includes WinForms and WPF support. To make .NET Core 3.0 viable for as many of you as...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/17/help-us-help-you-what-desktop-apps-are-you-bringing-to-net-core-3-0/","RawContent":null},{"Title":".NET Framework January 2019 Preview of Quality Rollup","PublishedOn":"2019-01-16T04:08:30+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Updated: January 24, 2019 The Windows 10 1607 (Anniversary Update) and Windows Server 2016 updates have also been released.   The Microsoft Update Catalog table below has been updated with this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8887340703","Type":"PullRequestEvent","CreatedAt":"2019-01-15T05:16:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Opened pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."},{"Id":"8860916656","Type":"PullRequestEvent","CreatedAt":"2019-01-09T22:28:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Merged pull request \"Update of EF description\" (#128) at dotnet/foundation","RelatedBody":"@divega !"},{"Id":"8837337598","Type":"PullRequestEvent","CreatedAt":"2019-01-05T03:23:40","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Merged pull request \"Update to absolute path\" (#129) at dotnet/foundation","RelatedBody":"Update to absolute path so that when this list is copied the link will actually work"},{"Id":"8833785661","Type":"PullRequestEvent","CreatedAt":"2019-01-04T11:57:11","Actor":"MarcBruins","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Opened pull request \"Update to absolute path\" (#129) at dotnet/foundation","RelatedBody":"Update to absolute path so that when this list is copied the link will actually work"},{"Id":"8833210040","Type":"PullRequestEvent","CreatedAt":"2019-01-04T09:40:51","Actor":"ErikEJ","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Opened pull request \"Update of EF description\" (#128) at dotnet/foundation","RelatedBody":"@divega !"},{"Id":"8831721539","Type":"PullRequestEvent","CreatedAt":"2019-01-04T00:22:43","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Merged pull request \"Update documentation information\" (#127) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8852414845","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:17:46","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Opened issue \"January 2019 .NET Updates\" (#96) at dotnet/announcements","RelatedBody":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"8852318390","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:28","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Opened issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Compression.ZipFile | 4.0.0, 4.0.1, 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n\r\n"},{"Id":"8852317992","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:24","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Net.Http | 4.3.0, 4.3.1, 4.3.2, 4.3.3, 4.3.4 | 4.3.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n"},{"Id":"8752496804","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:22:59","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8752467326","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:12:36","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Opened issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8967121366","Type":"IssuesEvent","CreatedAt":"2019-01-29T01:52:47","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22262","RelatedDescription":"Opened issue \"[x64] Test failed: System.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal\" (#22262) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_ubuntu_corefx_minopts/835/\r\n\r\n**Failed tests:**\r\nSystem.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal\r\n\r\n**Log:**\r\n```\r\n      System.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal(testData: [FormatDecimal [-0, scale=0],default to '0')]) [FAIL]\r\n  [m[31;1m[m[37m      Assert.Equal() Failure\r\n  [m[37m                ↓ (pos 0)\r\n  [m[37m      Expected: 0\r\n  [m[37m      Actual:   -0\r\n  [m[37m                ↑ (pos 0)\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_minopts/_/fx/src/System.Memory/tests/ParsersAndFormatters/Formatter/ValidateFormatter.cs(84,0): at System.Buffers.Text.Tests.FormatterTests.ValidateFormatterHelper[T](FormatterTestData`1 testData)\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_minopts/_/fx/src/System.Memory/tests/ParsersAndFormatters/Formatter/ValidateFormatter.cs(22,0): at System.Buffers.Text.Tests.FormatterTests.ValidateFormatter[T](FormatterTestData`1 testData)\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_minopts/_/fx/src/System.Memory/tests/ParsersAndFormatters/Formatter/FormatterTests.cs(79,0): at System.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal(FormatterTestData`1 testData)\r\n```"},{"Id":"8967090894","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:44:39","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22261","RelatedDescription":"Opened pull request \"RunCrossGen in ReadyToRun tests, set TimeoutPerTest, set FailOnWorkItemFailure\" (#22261) at dotnet/coreclr","RelatedBody":"1. For ReadyToRun tests in AzDO set RunCrossGen=true during Helix test running\r\n2. Set __TestTimeout and introduce TimeoutPerTestInMinutes for test jobs\r\n3. Set FailOnWorkItemFailure - fail the AzDO step on Helix work item \"catastrophic failure\"\r\n"},{"Id":"8967043597","Type":"IssuesEvent","CreatedAt":"2019-01-29T01:31:35","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22260","RelatedDescription":"Opened issue \"[Linux/arm/arm64] Assert failure JIT_jit64._opt_cse_hugeexpr1_hugeexpr1_\" (#22260) at dotnet/coreclr","RelatedBody":"```\r\nAssert failure(PID 6363 [0x000018db], Thread: 6363 [0x18db]): SUCCEEDED(res)\r\n    File: /__w/1/s/src/unwinder/arm/unwinder_arm.cpp Line: 1540\r\n    Image: /ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Payload/corerun\r\n\r\n/ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Work/c0193bda-105f-4884-9a9c-c630889f0e71/Exec/opt/cse/hugeexpr1/hugeexpr1.sh: line 263:  6363 Aborted                 $_DebuggerFullPath \\\"$CORE_ROOT/corerun\\\" $ExePath $CLRTestExecutionArguments\r\n/n/nReturn code:      1/nRaw output file:      /ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Work/c0193bda-105f-4884-9a9c-c630889f0e71/Exec/Reports/JIT.jit64/opt/cse/hugeexpr1/hugeexpr1.output.txt/nRaw output:/nBEGIN EXECUTION\r\n/ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Payload/corerun hugeexpr1.exe\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\n/nTo run the test:/n> set CORE_ROOT=/ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Payload/n> /ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Work/c0193bda-105f-4884-9a9c-c630889f0e71/Exec/opt/cse/hugeexpr1/hugeexpr1.sh/n\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\nFailed since https://dev.azure.com/dnceng/public/_build/results?buildId=81471\r\n\r\n@AndyAyersMS Can this be related to #22202?"},{"Id":"8967041438","Type":"IssuesEvent","CreatedAt":"2019-01-29T01:30:59","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22259","RelatedDescription":"Opened issue \"Assertion failure on eventpipe\" (#22259) at dotnet/coreclr","RelatedBody":"Trying to get events via eventpipe using the dotnet-collect tool (https://github.com/dotnet/diagnostics/tree/master/src/Tools/dotnet-collect) while running debug version of the runtime fires this assert:\r\n```\r\nAssert failure(PID 2132 [0x00000854], Thread: 2132 [0x0854]): pContainingBuffer == GetHead()\r\n```\r\n\r\nRunning the app with runtime built in release mode fixes this but it should be looked at."},{"Id":"8967029467","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:27:37","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22258","RelatedDescription":"Opened pull request \"Mark all arm64 floating-point registers as callee-trashed\" (#22258) at dotnet/coreclr","RelatedBody":"For the nominally callee-saved registers v8-v15, only the low\r\n64 bits are actually saved, by the ABI, and the JIT doesn't\r\ncurrently properly save/restore the high 64 bits when needed."},{"Id":"8966986510","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:16:17","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22243","RelatedDescription":"Merged pull request \"Add Marshal ansi conversion to shared partition\" (#22243) at dotnet/coreclr","RelatedBody":""},{"Id":"8966846080","Type":"PullRequestEvent","CreatedAt":"2019-01-29T00:38:46","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22257","RelatedDescription":"Opened pull request \"[WIP] Preserve Vector Arg registers on Arm64\" (#22257) at dotnet/coreclr","RelatedBody":"Fix #14371"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8965876295","Type":"IssuesEvent","CreatedAt":"2019-01-28T21:16:30","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10666","RelatedDescription":"Opened issue \"Automatically reference shared frameworks from dependencies\" (#10666) at dotnet/cli","RelatedBody":"If a dependency of a project (either another project in the solution, or a NuGet package) depends on an optional shared framework, then the project with the dependency should also depend on that shared framework.\r\n\r\nThis depends on NuGet writing these dependencies to the assets file: https://github.com/NuGet/Home/issues/7342.  Once that is done we will raise them into framework references.\r\n\r\nWe will also need to download all targeting packs for the targeted framework in case we might need to depend on them via a transitive dependency (which we won't know about until after restore has happened).\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8965568858","Type":"IssuesEvent","CreatedAt":"2019-01-28T20:22:50","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9438","RelatedDescription":"Closed issue \"Update dotnet-install.ps1 to download 2.0.* versions of ASP.NET runtime\" (#9438) at dotnet/cli","RelatedBody":"There are several versions of the ASP.NET 2.0 runtime available on the [.NET downloads page](https://www.microsoft.com/net/download/all). Unfortunately, `dotnet-install.ps1` fails to download any of them. I would expect that `dotnet-install.ps1` can install any version available on the downloads page.\r\n\r\nWe have a deployment process that downloads and installs the version of .NET Core an apps needs. With the current version of the script, we can only 2.1.* versions and are dev teams aren't ready to start using 2.1\r\n\r\n## Steps to reproduce\r\n```\r\n# These are all the 2.0.* versions of ASP.NET available on the downloads page.\r\nforeach( $version in @( '2.0.3','2.0.5','2.0.6','2.0.7','2.0.8') )\r\n{\r\n    $installDir = Join-Path -Path $env:TEMP -ChildPath ('aspnetcore-{0}' -f $version)\r\n    try\r\n    {\r\n        .\\dotnet-install.ps1 -Version $version -Runtime 'aspnetcore' -InstallDir $installDir -NoPath -ErrorAction Continue\r\n        Write-Host ('Successfully downloaded ASP.NET Core {0}.' -f $version) -ForegroundColor Green\r\n    }\r\n    catch\r\n    {\r\n        Write-Error -ErrorRecord $_\r\n    }\r\n}\r\n```\r\n\r\n## Expected  behavior\r\nI expect that all versions of ASP.NET available on the downloads page would be download-able by `dotnet-install.ps1`.\r\n\r\n## Actual behavior\r\nThe `dotnet-install.ps1` script throws a terminating exception when attempting to download any `2.0.*` version.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nn/a \r\n"},{"Id":"8965015219","Type":"IssuesEvent","CreatedAt":"2019-01-28T18:51:14","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10660","RelatedDescription":"Closed issue \"Windows lies to dotnet.exe abouts the OS version\" (#10660) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nOn Windows 10:\r\n1. `mkdir test`\r\n2. `cd test`\r\n3. `dotnet new console`\r\n4. Change Program.cs to call `Console.WriteLine(Environment.OSVersion.Version)`\r\n5. `dotnet run`\r\n\r\n## Expected  behavior\r\nSee \"10.0.17663\" (for example, on RS5)\r\n\r\n## Actual behavior\r\nSee \"6.2.9200.0\"\r\n\r\nThis is because dotnet.exe's RT_MANIFEST resource is auto-generated with only the `asInvoker` privilege level, but is lacking the `supportedOS`. Instead, you should consider authoring a manifest like the following and adding it to your dotnet.csproj as the `ApplicationManifest`:\r\n\r\n```xml\r\n<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\r\n<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>\r\n    <trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\">\r\n        <security>\r\n            <requestedPrivileges>\r\n                <requestedExecutionLevel level='asInvoker' uiAccess='false' />\r\n            </requestedPrivileges>\r\n        </security>\r\n    </trustInfo>\r\n    <compatibility xmlns=\"urn:schemas-microsoft-com:compatibility.v1\">\r\n        <application>\r\n            <supportedOS Id=\"{e2011457-1546-43c5-a5fe-008deee3d3f0}\" />\r\n            <supportedOS Id=\"{35138b9a-5d96-4fbd-8e2d-a2440225f93a}\" />\r\n            <supportedOS Id=\"{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}\" />\r\n            <supportedOS Id=\"{1f676c76-80e1-4239-95bb-83d0f6d0da78}\" />\r\n            <supportedOS Id=\"{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}\" />\r\n        </application>\r\n    </compatibility>\r\n</assembly>\r\n```\r\n\r\nThis is problematic when running `dotnet run` with a console app that needs the correct Windows OS version, such as a benchmark application using BenchmarkDotNet.\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.503\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.7\r\n  Commit:  cca5d72d48\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003121 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003156 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-rc4-004771 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview2-006127 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-25319-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n"},{"Id":"8964992369","Type":"IssuesEvent","CreatedAt":"2019-01-28T18:47:24","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10665","RelatedDescription":"Closed issue \"Usability of 'dotnet new'\" (#10665) at dotnet/cli","RelatedBody":"The usage experience with `dotnet new` is honestly a bit painful when working locally with custom templates. Specifically, I would like to ask for:\r\n\r\n- having the opportunity to uninstall templates by short name (I think that's unique)\r\n- being able to see a version in the list of installed templates\r\n- getting a _clear_ notification, whether a template was installed or uninstalled, instead of printing all available templates\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8966283216","Type":"PullRequestEvent","CreatedAt":"2019-01-28T22:28:28","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1062","RelatedDescription":"Merged pull request \"Add build status badge to Repo home page\" (#1062) at dotnet/standard","RelatedBody":"CC @danmosemsft @terrajobst @safern @ViktorHofer "},{"Id":"8965842112","Type":"IssuesEvent","CreatedAt":"2019-01-28T21:10:37","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1063","RelatedDescription":"Opened issue \"Create shims for new netstandard2.1 assemblies\" (#1063) at dotnet/standard","RelatedBody":"We need to create Shims for the assemblies added to netstandard2.1 that weren't in netstandard2.0 - This means (as far as I know):\r\n\r\n- System.Memory\r\n- System.Threading.Tasks.Extensions\r\n- System.Reflection.DispatchProxy\r\n- System.Reflection.Emit\r\n- System.Reflection.Emit.ILGeneration\r\n- System.Reflection.Emit.Lightweight\r\n- System.Numerics.Vectors\r\n- System.Buffers\r\n\r\nCC @ericstj @terrajobst "},{"Id":"8965523304","Type":"PullRequestEvent","CreatedAt":"2019-01-28T20:14:56","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1062","RelatedDescription":"Opened pull request \"Add build status badge to Repo home page\" (#1062) at dotnet/standard","RelatedBody":"CC @danmosemsft @terrajobst @safern "},{"Id":"8957863647","Type":"IssuesEvent","CreatedAt":"2019-01-27T08:57:07","Actor":"ModestasK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1061","RelatedDescription":"Opened issue \"Timer class issue on ARM (Raspbian/ubuntu stretch)\" (#1061) at dotnet/standard","RelatedBody":"Setup:\r\n\r\n**RaspberyPi 3**\r\n- Distributor ID:\tRaspbian\r\n- Description:\tRaspbian GNU/Linux 9.4 (stretch)\r\n- Release:\t9.4\r\n- Codename:\tstretch\r\n\r\n**DotNet**\r\n\r\n- Host (useful for support):\r\nVersion: 2.1.5\r\nCommit:  290303f510\r\n\r\n- .NET Core SDKs installed:\r\nNo SDKs were found.\r\n\r\n- .NET Core runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.5 [/opt/dotnet/shared/Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.5 [/opt/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.1.5 [/opt/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n**SourceCode**\r\n\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n      Timer runTimer = new Timer(\r\n           (object state) => { Console.WriteLine(\"Hello\"); },\r\n           null,\r\n           TimeSpan.Zero,\r\n           TimeSpan.FromMinutes(1));\r\n\r\n       while (true)\r\n       {\r\n           Thread.Sleep(5000);\r\n       }\r\n}\r\n```\r\n\r\n**Expected behaviour:** \"_Hello_\" should be printed into console every minute (which is actually the case on Ubuntu/Windows)\r\n\r\n**Actual behaviour:** prints \"_Hello_\" only once and timer is never invoked again. This is what happens on Raspberry.\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8967708378","Type":"IssuesEvent","CreatedAt":"2019-01-29T04:49:55","Actor":"MkazemAkhgary","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34919","RelatedDescription":"Opened issue \"Why SpinLock is not re-entrant?\" (#34919) at dotnet/corefx","RelatedBody":"if spin lock has enough information to detect deadlock and throw exception, why is it not re-entrant? (or why there is no option to make it re-entrant)."},{"Id":"8967701629","Type":"IssuesEvent","CreatedAt":"2019-01-29T04:47:33","Actor":"MkazemAkhgary","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34918","RelatedDescription":"Opened issue \"mutable structs as readonly field should be a warning\" (#34918) at dotnet/corefx","RelatedBody":"for beginners this behavior can be unexpected. (yes it happened to me before). especially if you are using a library and you are not sure if struct is safe to be readonly or not. for example SpinLock must not be readonly.\r\n\r\n```c#\r\nreadonly MutableStruct x; // make this a warning\r\n```\r\n\r\nIf struct is immutable (via c# 7.2 readonly keyword) its ok to have it as readonly field."},{"Id":"8967544438","Type":"PullRequestEvent","CreatedAt":"2019-01-29T03:55:09","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34888","RelatedDescription":"Merged pull request \"Add Helix definition to guide\" (#34888) at dotnet/corefx","RelatedBody":"Added Helix definition to guide.\r\n\r\n/cc @danmosemsft @karelz @stephentoub "},{"Id":"8967483509","Type":"PullRequestEvent","CreatedAt":"2019-01-29T03:36:18","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34915","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#34915) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"8967340612","Type":"PullRequestEvent","CreatedAt":"2019-01-29T02:54:33","Actor":"grant-d","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34917","RelatedDescription":"Opened pull request \"[NO MERGE] BitOps analysis CoreFX (WIP)\" (#34917) at dotnet/corefx","RelatedBody":"Update call sites for https://github.com/dotnet/coreclr/pull/22225\r\n\r\n\r\nNote that this PR will **not build** right now - it is being used to analyze the consolidation of call sites for https://github.com/dotnet/corefx/issues/32269.\r\n\r\ncc @tannergooding "},{"Id":"8967299378","Type":"PullRequestEvent","CreatedAt":"2019-01-29T02:42:37","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34916","RelatedDescription":"Opened pull request \"Update CoreFx to preview.19078.4 (master)\" (#34916) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"8967236809","Type":"PullRequestEvent","CreatedAt":"2019-01-29T02:24:57","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34914","RelatedDescription":"Merged pull request \"Correct link to example review\" (#34914) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8967423815","Type":"PullRequestEvent","CreatedAt":"2019-01-29T03:18:44","Actor":"grant-d","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32901","RelatedDescription":"Opened pull request \"[NO MERGE] BitOps analysis Roslyn (WIP)\" (#32901) at dotnet/roslyn","RelatedBody":"Update call sites for https://github.com/dotnet/coreclr/pull/22225\r\n\r\nNote that this PR will **not build** right now - it is being used to analyze the consolidation of call sites for https://github.com/dotnet/corefx/issues/32269.\r\n\r\ncc @tannergooding "},{"Id":"8967281786","Type":"PullRequestEvent","CreatedAt":"2019-01-29T02:37:40","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32900","RelatedDescription":"Opened pull request \"OptProf cleanup\" (#32900) at dotnet/roslyn","RelatedBody":"Infrastructure only change."},{"Id":"8967139628","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:57:51","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32899","RelatedDescription":"Opened pull request \"Generate top-level nullability rewriter.\" (#32899) at dotnet/roslyn","RelatedBody":"Generate a rewriter that will set the top-level nullability bits on `BoundExpression` given a map of expressions to TSWA."},{"Id":"8967038693","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:30:13","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32892","RelatedDescription":"Merged pull request \"Merge master to dev16.1-preview1\" (#32892) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into dev16.1-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-dev16.1-preview1\ngit reset --hard upstream/dev16.1-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-dev16.1-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8967038445","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:30:09","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32893","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#32893) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8967265052","Type":"PullRequestEvent","CreatedAt":"2019-01-29T02:32:53","Actor":"grant-d","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6911","RelatedDescription":"Opened pull request \"[NO MERGE] BitOps analysis (WIP)\" (#6911) at dotnet/corert","RelatedBody":"Update call sites for https://github.com/dotnet/coreclr/pull/22225\r\n\r\n\r\nNote that this PR will **not build** right now - it is being used to analyze the consolidation of call sites for https://github.com/dotnet/corefx/issues/32269.\r\n\r\ncc @tannergooding "},{"Id":"8967146654","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:59:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6910","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6910) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"8966998433","Type":"PullRequestEvent","CreatedAt":"2019-01-29T01:19:21","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6910","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6910) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8966902379","Type":"PullRequestEvent","CreatedAt":"2019-01-29T00:53:33","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6909","RelatedDescription":"Merged pull request \"Update CoreFx to preview.19078.2 (master)\" (#6909) at dotnet/corert","RelatedBody":"...to get up to date System.Native."},{"Id":"8965899316","Type":"PullRequestEvent","CreatedAt":"2019-01-28T21:20:28","Actor":"filipnavara","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6909","RelatedDescription":"Opened pull request \"Update CoreFx to preview.19078.2 (master)\" (#6909) at dotnet/corert","RelatedBody":"...to get up to date System.Native."},{"Id":"8960282716","Type":"PullRequestEvent","CreatedAt":"2019-01-28T04:54:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6908","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6908) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @TomerWeisberg @benaadams"},{"Id":"8960055628","Type":"PullRequestEvent","CreatedAt":"2019-01-28T03:24:10","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6908","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6908) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8967128713","Type":"IssuesEvent","CreatedAt":"2019-01-29T01:54:52","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2880","RelatedDescription":"Opened issue \"\"salt\" MSBuild handshake in test / dogfood environment\" (#2880) at dotnet/sdk","RelatedBody":"Right now for our tests (and in the dogfood script) we override the MSBuildSDKsPath to point MSBuild to the SDK under test.  However, this doesn't seem to prevent sharing MSBuild nodes that didn't have this set, which can end up causing assembly loading or other issues.\r\n\r\nIdeally in our test environment we would add a \"salt\" to the node connection handshake, so that MSBuild would only be able to connect to nodes that come from the same test environment.\r\n\r\nThis would probably require a change in MSBuild to allow us to provide such a \"salt\".\r\n\r\n@rainersigwald, thoughts?"},{"Id":"8966901000","Type":"IssuesEvent","CreatedAt":"2019-01-29T00:53:11","Actor":"mairaw","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2879","RelatedDescription":"Opened issue \"Don't reuse the https://aka.ms/sdkimplicitrefs link to indicate version should not be indicated\" (#2879) at dotnet/sdk","RelatedBody":"This comes from a discussion at https://github.com/dotnet/docs/issues/8691 and my proposal can be found at https://github.com/dotnet/docs/issues/8691#issuecomment-448343752\r\n\r\nCustomers are getting the following error:\r\nNETSDK1071: A PackageReference to 'Microsoft.AspNetCore.All' specified a Version of 2.2.0-preview3-35497. Specifying the version of this package is not recommended. For more information, see https://aka.ms/sdkimplicitrefs. However, this document does not cover how Microsoft.AspNetCore.All should actually be referenced in this situation.\r\n\r\nHowever, specifying the version of a package has nothing to do with implicit package references, so I don't think we should be using that same link for this error message. \r\nWe should create a new aka.ms link for that error and that link would point to a different location in the ASP.NET docs TBD.\r\n\r\n/cc @Rick-Anderson"},{"Id":"8966706656","Type":"PullRequestEvent","CreatedAt":"2019-01-29T00:01:53","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2878","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#2878) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8966706450","Type":"PullRequestEvent","CreatedAt":"2019-01-29T00:01:51","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2877","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.1.6xx\" (#2877) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8966687347","Type":"PullRequestEvent","CreatedAt":"2019-01-28T23:57:08","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2876","RelatedDescription":"Opened pull request \"Fix shim apphost2\" (#2876) at dotnet/sdk","RelatedBody":"Will squash before merge\r\n\r\nIt might be hard to read from direct diff. 798624c is the initial change to make it work. After that are all refactorings to separate it into 2 Targets."},{"Id":"8965723398","Type":"IssuesEvent","CreatedAt":"2019-01-28T20:50:10","Actor":"natemcmaster","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2875","RelatedDescription":"Opened issue \"Cannot force ResolveFrameworkReference to avoid downloading targeting packs\" (#2875) at dotnet/sdk","RelatedBody":"Feature request: for the sake of things like source-build and building your own targeting pack (e.g. https://github.com/aspnet/AspNetCore), I'd like to be able to force the SDK into an \"offline mode\" which fails instead of attempting to download targeting packs. The current code only checks for `Directory.Exists`\r\n\r\nhttps://github.com/dotnet/sdk/blob/915adb77cc3763f88aca3da622961abd54f100f2/src/Tasks/Microsoft.NET.Build.Tasks/ResolveFrameworkReferences.cs#L112-L126\r\n\r\n\r\n**Options I've considered:**\r\n\r\n* Add a global property, like `DisableTargetingPackAcquisition`\r\n* Add something to `KnownFrameworkReference` or `<FrameworkReference>` as metadata\r\n\r\ncc @dsplaisted @nguerrera\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-01-15T05:16:12","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update links","State":"open","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Open PR \"Update links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"open","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Open issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"404086714","IsPullRequest":false,"CreatedAt":"2019-01-29T01:52:47","Actor":"VincentBu","Number":"22262","RawContent":null,"Title":"[x64] Test failed: System.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_ubuntu_corefx_minopts/835/\r\n\r\n**Failed tests:**\r\nSystem.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal\r\n\r\n**Log:**\r\n```\r\n      System.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal(testData: [FormatDecimal [-0, scale=0],default to '0')]) [FAIL]\r\n  [m[31;1m[m[37m      Assert.Equal() Failure\r\n  [m[37m                ↓ (pos 0)\r\n  [m[37m      Expected: 0\r\n  [m[37m      Actual:   -0\r\n  [m[37m                ↑ (pos 0)\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_minopts/_/fx/src/System.Memory/tests/ParsersAndFormatters/Formatter/ValidateFormatter.cs(84,0): at System.Buffers.Text.Tests.FormatterTests.ValidateFormatterHelper[T](FormatterTestData`1 testData)\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_minopts/_/fx/src/System.Memory/tests/ParsersAndFormatters/Formatter/ValidateFormatter.cs(22,0): at System.Buffers.Text.Tests.FormatterTests.ValidateFormatter[T](FormatterTestData`1 testData)\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_minopts/_/fx/src/System.Memory/tests/ParsersAndFormatters/Formatter/FormatterTests.cs(79,0): at System.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal(FormatterTestData`1 testData)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22262","RelatedDescription":"Open issue \"[x64] Test failed: System.Buffers.Text.Tests.FormatterTests.TestFormatterDecimal\" (#22262)"},{"Id":"404084994","IsPullRequest":true,"CreatedAt":"2019-01-29T01:44:39","Actor":"echesakovMSFT","Number":"22261","RawContent":null,"Title":"RunCrossGen in ReadyToRun tests, set TimeoutPerTest, set FailOnWorkItemFailure","State":"open","Body":"1. For ReadyToRun tests in AzDO set RunCrossGen=true during Helix test running\r\n2. Set __TestTimeout and introduce TimeoutPerTestInMinutes for test jobs\r\n3. Set FailOnWorkItemFailure - fail the AzDO step on Helix work item \"catastrophic failure\"\r\n","Url":"https://github.com/dotnet/coreclr/pull/22261","RelatedDescription":"Open PR \"RunCrossGen in ReadyToRun tests, set TimeoutPerTest, set FailOnWorkItemFailure\" (#22261)"},{"Id":"404082178","IsPullRequest":false,"CreatedAt":"2019-01-29T01:31:35","Actor":"echesakovMSFT","Number":"22260","RawContent":null,"Title":"[Linux/arm] Assert failure JIT_jit64._opt_cse_hugeexpr1_hugeexpr1_","State":"open","Body":"```\r\nAssert failure(PID 6363 [0x000018db], Thread: 6363 [0x18db]): SUCCEEDED(res)\r\n    File: /__w/1/s/src/unwinder/arm/unwinder_arm.cpp Line: 1540\r\n    Image: /ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Payload/corerun\r\n\r\n/ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Work/c0193bda-105f-4884-9a9c-c630889f0e71/Exec/opt/cse/hugeexpr1/hugeexpr1.sh: line 263:  6363 Aborted                 $_DebuggerFullPath \\\"$CORE_ROOT/corerun\\\" $ExePath $CLRTestExecutionArguments\r\n/n/nReturn code:      1/nRaw output file:      /ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Work/c0193bda-105f-4884-9a9c-c630889f0e71/Exec/Reports/JIT.jit64/opt/cse/hugeexpr1/hugeexpr1.output.txt/nRaw output:/nBEGIN EXECUTION\r\n/ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Payload/corerun hugeexpr1.exe\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\n/nTo run the test:/n> set CORE_ROOT=/ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Payload/n> /ssd/dotnetbuild/work/3d0eca72-694f-4d05-9c2c-b11731fe1cd3/Work/c0193bda-105f-4884-9a9c-c630889f0e71/Exec/opt/cse/hugeexpr1/hugeexpr1.sh/n\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\nFailed since https://dev.azure.com/dnceng/public/_build/results?buildId=81471\r\n\r\n@AndyAyersMS Can this be related to #22202?","Url":"https://github.com/dotnet/coreclr/issues/22260","RelatedDescription":"Open issue \"[Linux/arm] Assert failure JIT_jit64._opt_cse_hugeexpr1_hugeexpr1_\" (#22260)"},{"Id":"404082017","IsPullRequest":false,"CreatedAt":"2019-01-29T01:30:58","Actor":"sywhang","Number":"22259","RawContent":null,"Title":"Assertion failure on eventpipe","State":"open","Body":"Trying to get events via eventpipe using the dotnet-collect tool (https://github.com/dotnet/diagnostics/tree/master/src/Tools/dotnet-collect) while running debug version of the runtime fires this assert:\r\n```\r\nAssert failure(PID 2132 [0x00000854], Thread: 2132 [0x0854]): pContainingBuffer == GetHead()\r\n```\r\n\r\nRunning the app with runtime built in release mode fixes this but it should be looked at.","Url":"https://github.com/dotnet/coreclr/issues/22259","RelatedDescription":"Open issue \"Assertion failure on eventpipe\" (#22259)"},{"Id":"404081290","IsPullRequest":true,"CreatedAt":"2019-01-29T01:27:37","Actor":"BruceForstall","Number":"22258","RawContent":null,"Title":"Mark all arm64 floating-point registers as callee-trashed","State":"open","Body":"For the nominally callee-saved registers v8-v15, only the low\r\n64 bits are actually saved, by the ABI, and the JIT doesn't\r\ncurrently properly save/restore the high 64 bits when needed.","Url":"https://github.com/dotnet/coreclr/pull/22258","RelatedDescription":"Open PR \"Mark all arm64 floating-point registers as callee-trashed\" (#22258)"},{"Id":"403610426","IsPullRequest":true,"CreatedAt":"2019-01-29T01:16:17","Actor":"marek-safar","Number":"22243","RawContent":null,"Title":"Add Marshal ansi conversion to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22243","RelatedDescription":"Closed or merged PR \"Add Marshal ansi conversion to shared partition\" (#22243)"},{"Id":"404070289","IsPullRequest":true,"CreatedAt":"2019-01-29T00:38:45","Actor":"CarolEidt","Number":"22257","RawContent":null,"Title":"[WIP] Preserve Vector Arg registers on Arm64","State":"open","Body":"Fix #14371","Url":"https://github.com/dotnet/coreclr/pull/22257","RelatedDescription":"Open PR \"[WIP] Preserve Vector Arg registers on Arm64\" (#22257)"},{"Id":"404040637","IsPullRequest":false,"CreatedAt":"2019-01-28T22:43:17","Actor":"GrabYourPitchforks","Number":"22256","RawContent":null,"Title":"JIT optimization: auto sign-extend constants during code gen to allow for smaller encoding forms","State":"open","Body":"Sample method:\r\n\r\n```cs\r\npublic static void WriteValue(byte[] array, uint value)\r\n{\r\n    // Set the high bit of the low byte of 'value', then write the low byte to the array.\r\n    // This is commonly used for \"write a UTF-8 continuation byte to the output\".\r\n    array[0] = (byte)(value | 0x80);\r\n}\r\n```\r\n\r\nThis produced codegen akin to (modulo null and bounds checking):\r\n\r\n```asm\r\n; assume eax = value\r\nor eax, 0x00000080  ; 6-byte encoding\r\nmov $arr[0], al\r\n```\r\n\r\nIt would be great if the JIT could automatically detect that it can splat over the high bytes of _value_ to produce a more efficient codegen encoding.\r\n\r\n```asm\r\n; assume eax = value\r\nor eax, 0xFFFFFF80  ; 3-byte encoding\r\nmov $arr[0], al\r\n```\r\n\r\nWe can work around this for now by changing the C# code to read `(value | 0xFFFFFF80u)` instead of `(value | 0x80)`, but it makes the code less readable. FWIW clang, gcc, and msvc perform similar optimizations during compilation.\r\n\r\n/cc @tannergooding @dotnet/jit-contrib","Url":"https://github.com/dotnet/coreclr/issues/22256","RelatedDescription":"Open issue \"JIT optimization: auto sign-extend constants during code gen to allow for smaller encoding forms\" (#22256)"},{"Id":"404026311","IsPullRequest":true,"CreatedAt":"2019-01-28T22:00:16","Actor":"CarolEidt","Number":"22255","RawContent":null,"Title":"[WIP] Struct & SIMD improvements","State":"open","Body":"- Enable CSE of struct values when handle is available (and add code to get the handle of HW SIMD types)\r\n- Don't require block nodes for SIMD assignments\r\n- Don't set `GTF_GLOB_REF` on `GT_OBJ` if it is local\r\n- Set `lvRegStruct` on promoted SIMD fields\r\n- Add tests for #19910 (fixed with this PR) and #3539 & #19910 (fixed with #21314)\r\n- Additional cleanup","Url":"https://github.com/dotnet/coreclr/pull/22255","RelatedDescription":"Open PR \"[WIP] Struct & SIMD improvements\" (#22255)"},{"Id":"404010931","IsPullRequest":true,"CreatedAt":"2019-01-28T21:17:28","Actor":"dotnet-maestro-bot","Number":"22254","RawContent":null,"Title":"Update CoreFx to preview.19078.4 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/22254","RelatedDescription":"Open PR \"Update CoreFx to preview.19078.4 (master)\" (#22254)"},{"Id":"404008895","IsPullRequest":false,"CreatedAt":"2019-01-28T21:11:42","Actor":"BruceForstall","Number":"22253","RawContent":null,"Title":"[Linux/arm64] HFA tests fail with JitStress=2/JitStressRegs=1","State":"open","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstress2_jitstressregs1_tst/108/consoleFull\r\n\r\nTests:\r\n```\r\n./JIT/jit64/hfa/main/testC/hfa_nd1C_r/hfa_nd1C_r.exe\r\n./JIT/jit64/hfa/main/testC/hfa_nd0C_r/hfa_nd0C_r.exe\r\n./JIT/jit64/hfa/main/testC/hfa_sd0C_r/hfa_sd0C_r.exe\r\n./JIT/jit64/hfa/main/testC/hfa_sd1C_r/hfa_sd1C_r.exe\r\n```\r\n\r\nTests appear to pass, but return code 1, not 100.","Url":"https://github.com/dotnet/coreclr/issues/22253","RelatedDescription":"Open issue \"[Linux/arm64] HFA tests fail with JitStress=2/JitStressRegs=1\" (#22253)"},{"Id":"404000202","IsPullRequest":false,"CreatedAt":"2019-01-28T20:47:34","Actor":"AndyAyersMS","Number":"22252","RawContent":null,"Title":"sos ClrStack fails on arm64 linux with GC stress","State":"open","Body":"For instance, while debugging #19464, with recent bits from master (say e62ee275e4c1b35d217e2f760627751cbd4b2a11).\r\n```\r\n$ export COMPlus_GCStress=0x4\r\n$ ./corerun ../../JIT/Regression/CLR-x86-JIT/v2.1/DDB/b163200/b163200/b163200.exe\r\n\r\nAssert failure(PID 41585 [0x0000a271], Thread: 41585 [0xa271]): SanityCheck()\r\n    File: /coreclr/src/vm/methodtable.cpp Line: 9994\r\n    Image: /home/andya/repos/coreclr/bin/tests/Linux.arm64.Checked/Tests/Core_Root/corerun\r\n\r\nAborted\r\n\r\n$ lldb-6.0 -- ./corerun ../../JIT/Regression/CLR-x86-JIT/v2.1/DDB/b163200/b163200/b163200.exe\r\n(lldb) target create \"./corerun\"\r\nCurrent executable set to './corerun' (aarch64).\r\n(lldb) settings set -- target.run-args  \"../../JIT/Regression/CLR-x86-JIT/v2.1/DDB/b163200/b163200/b163200.exe\"\r\n(lldb) process launch\r\nProcess 41605 launched: './corerun' (aarch64)\r\nProcess 41605 stopped\r\n* thread #1, name = 'corerun', stop reason = signal SIGILL: illegal instruction\r\n    frame #0: 0x0000ffff3ecd8df4\r\n->  0xffff3ecd8df4: .long  0xbadc0de1                ; unknown opcode\r\n    0xffff3ecd8df8: mov    w0, #0x1\r\n    0xffff3ecd8dfc: strb   w0, [x22, #0xc]\r\n    0xffff3ecd8e00: mov    x0, #0x5fd8\r\n(lldb) plugin load libsosplugin.so\r\n(lldb) sos ClrStack\r\nStack dump:\r\n0.      HandleCommand(command = \"sos ClrStack\")\r\nIllegal instruction\r\n```\r\nThis repros every time. Note GCStress uses illegal instruction traps to do its thing.\r\n\r\nI'm fairly sure I've also seen `ClrStack` fail without GCStress, but don't have a repro handy.\r\n\r\ncc @mikem8361 -- feel free to send me tips on how to debug SOS and I'll dig in.","Url":"https://github.com/dotnet/coreclr/issues/22252","RelatedDescription":"Open issue \"sos ClrStack fails on arm64 linux with GC stress\" (#22252)"},{"Id":"403482176","IsPullRequest":false,"CreatedAt":"2019-01-28T20:23:14","Actor":"saucecontrol","Number":"22235","RawContent":null,"Title":"JIT fails to inline methods called from a large/complex outer method","State":"closed","Body":"I'm seeing a significant perf regression between 2.1 and 3.0 for this complex hashing function\r\nhttps://github.com/saucecontrol/Blake2Fast/blob/a140aaba46a8aa3003303c4aef62a472dd8ab4a3/src/Blake2Fast/Blake2bSse4.cs#L186-L503\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.10.14, OS=Windows 10.0.17134\r\nIntel Xeon CPU E3-1505M v6 3.00GHz, 1 CPU, 8 logical and 4 physical cores\r\nFrequency=2929685 Hz, Resolution=341.3336 ns, Timer=TSC\r\n.NET Core SDK=3.0.100-preview-010184\r\n  [Host]        : .NET Core 2.1.7 (CoreCLR 4.6.27129.04, CoreFX 4.6.27129.04), 64bit RyuJIT\r\n  netcoreapp2.1 : .NET Core 2.1.7 (CoreCLR 4.6.27129.04, CoreFX 4.6.27129.04), 64bit RyuJIT\r\n  netcoreapp3.0 : .NET Core 3.0.0-preview-27324-5 (CoreCLR 4.6.27322.0, CoreFX 4.7.19.7311), 64bit RyuJIT\r\n\r\nJit=RyuJit  Toolchain=Default  \r\n\r\n```\r\n|      Method |           Job | Platform |     Mean |     Error |    StdDev | Allocated |\r\n|------------ |-------------- |--------- |---------:|----------:|----------:|----------:|\r\n| Blake2bFast | netcoreapp2.1 |      X64 | 11.79 ms | 0.1075 ms | 0.1005 ms |       0 B |\r\n| Blake2bFast | netcoreapp3.0 |      X64 | 52.02 ms | 0.6522 ms | 0.6101 ms |       0 B |\r\n|             |               |          |          |           |           |           |\r\n| Blake2bFast | netcoreapp2.1 |      X86 | 16.14 ms | 0.1888 ms | 0.1766 ms |       0 B |\r\n| Blake2bFast | netcoreapp3.0 |      X86 | 80.83 ms | 2.0971 ms | 6.1834 ms |       0 B |\r\n\r\n\r\nIn looking at the generated assembly, it appears RyuJIT produces good code up until about midway through the third round of mixing, and then switches from inlining the mixing functions (g1 and g2) to calling them instead.\r\n\r\nI had to make some changes to the 3.0 version of the code, but those amounted to nothing more than replacing the older `StaticCast` calls with the new `As` variants.  To confirm the codegen around the API changes wasn't the issue, I commented out rounds 3-12 in the main function, and performance returned to 2.1 levels.  So it appears the complexity of the main function is the issue.\r\n\r\nI spotted https://github.com/dotnet/coreclr/pull/21893 which mentions a change to the inlining budget allowed by the JIT, but I wasn't able to find where the 'budget' logic was added or whether any part of it was included in 2.1.  I can see that in 3.0 Preview 1, this function is about 10x slower than 2.1 and with the nightly builds the delta dropped to 4-5x, so it seems to be related somehow.\r\n\r\nObviously in this case, the performance implications of ignoring the `MethodImplOptions.AggressiveInlining` hints are quite catastrophic, so I'm wondering if there is a way to truly force inlining or to adjust the budget the JIT allows.  The function's complexity can't be reduced, and because of the heavy use of intrinsics, the generated code is a small fraction of what it appears to be in C# or IL.\r\n\r\n@AndyAyersMS any ideas?\r\n","Url":"https://github.com/dotnet/coreclr/issues/22235","RelatedDescription":"Closed issue \"JIT fails to inline methods called from a large/complex outer method\" (#22235)"},{"Id":"403970851","IsPullRequest":true,"CreatedAt":"2019-01-28T19:47:50","Actor":"maryamariyan","Number":"22251","RawContent":null,"Title":"Add SwitchExpressionException","State":"closed","Body":"Related to: https://github.com/dotnet/corefx/issues/33284\r\n\r\ncc: @danmosemsft @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/22251","RelatedDescription":"Closed or merged PR \"Add SwitchExpressionException\" (#22251)"},{"Id":"403864214","IsPullRequest":true,"CreatedAt":"2019-01-28T15:19:27","Actor":"filipnavara","Number":"22249","RawContent":null,"Title":"WIP: Move ResourceManager to shared CoreLib.","State":"open","Body":"Posting for early feedback before I proceed to adapt the CoreRT part. Contributes to #21932","Url":"https://github.com/dotnet/coreclr/pull/22249","RelatedDescription":"Open PR \"WIP: Move ResourceManager to shared CoreLib.\" (#22249)"},{"Id":"403838295","IsPullRequest":false,"CreatedAt":"2019-01-28T14:23:48","Actor":"chrisnas","Number":"22248","RawContent":null,"Title":"SOS!do fails to display static fields value for types defined in System.Private.CoreLib.dll","State":"open","Body":"**Repro:** \r\n1. create a .NET Core console application\r\n2. use procdump -ma to generate a memory dump\r\n3. open the dump in WinDBG and load sos.dll (.loadby sos coreclr)\r\n4. enumerate type instances (!dumpheap -stat) and look for CultureInfo instances\r\n5. dump a CultureInfo instance: each static field has NOINIT as value\r\n```\r\n00007fffc61fadf8  4000fa5      a30 ...ation.CultureInfo  0   shared           static s_userDefaultCulture\r\n                                 >> Domain:Value  000001a5824a8010:NotInit  <<\r\n00007fffc61fadf8  4000fa6      a38 ...ation.CultureInfo  0   shared           static s_userDefaultUICulture\r\n                                 >> Domain:Value  000001a5824a8010:NotInit  <<\r\n00007fffc61fadf8  4000fa7      a40 ...ation.CultureInfo  0   shared           static s_InvariantCultureInfo\r\n                                 >> Domain:Value  000001a5824a8010:NotInit  <<\r\n\r\n```\r\nThe same behavior occurs with string.Empty\r\n\r\n**Investigation:**\r\nThe !do command ends up calling a few functions\r\n[Strike.cs|DumpObj](https://github.com/dotnet/coreclr/blob/master/src/ToolBox/SOS/Strike/strike.cpp#L2011)\r\n-> [Strike.cs|PrintObj](https://github.com/dotnet/coreclr/blob/master/src/ToolBox/SOS/Strike/strike.cpp#L1488)\r\n-> [Util.cs|DisplayFields](https://github.com/dotnet/coreclr/blob/af46c514824aacd4d439eb1891d3d392c6894476/src/ToolBox/SOS/Strike/util.cpp#L1452)\r\n-> [Util.cs|DisplaySharedStatic](https://github.com/dotnet/coreclr/blob/af46c514824aacd4d439eb1891d3d392c6894476/src/ToolBox/SOS/Strike/util.cpp#L1243)\r\n\r\nThis last function iterates on appdomains and calls [ClrDataAccess::GetDomainLocalModuleDataFromAppDomain](https://github.com/dotnet/coreclr/blob/af46c514824aacd4d439eb1891d3d392c6894476/src/debug/daccess/request.cpp#L3216) with a moduleID as an int (which is 32 bits even in x64)\r\nThis moduleID was an ULONG64 in DisplaySharedStatic but cast as an int\r\n\r\nIn .NET Framework, the moduleID seems to be an \"index\" like 1, 2 or 3 but in .NET Core, it looks like an address. The test on moduleID in GetDomainLocalModuleDataFromAppDomain will always fail:\r\nif (appDomainAddr == 0 || **moduleID < 0** || pLocalModuleData == NULL)\r\n        return E_INVALIDARG;\r\n\r\nI have tried to change the interface to pass a CLRDATA_ADDRESS instead of an int \r\n(this change impacts src/debug/daccess/dacimpl.h, src/debug/daccess/request.cpp and src/pal/prebuilt/inc/sospriv.h)\r\nbut it is not really better: \r\nThe code below the test does not make sense to me:\r\n`ModuleIndex index = Module::IDToIndex(moduleID);`\r\nstatic ModuleIndex IDToIndex(SIZE_T ModuleID)\r\n{\r\n    ModuleIndex index(**ModuleID >> 1**);\r\n    return index;\r\n}\r\nWhy dividing an \"address\" by 2 to get an \"index\"?\r\n\r\nAnd the next line crashes when trying to GetModuleSlot\r\nDomainLocalModule* pLocalModule = pAppDomain->GetDomainLocalBlock()->GetModuleSlot(index);\r\n\r\n\r\nNote: this is the same problem as https://github.com/Microsoft/clrmd/issues/214 with ClrMD. ","Url":"https://github.com/dotnet/coreclr/issues/22248","RelatedDescription":"Open issue \"SOS!do fails to display static fields value for types defined in System.Private.CoreLib.dll\" (#22248)"},{"Id":"403530480","IsPullRequest":true,"CreatedAt":"2019-01-28T14:16:59","Actor":"dotnet-maestro-bot","Number":"22237","RawContent":null,"Title":"Update PgoData to master-20190128.1 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/22237","RelatedDescription":"Closed or merged PR \"Update PgoData to master-20190128.1 (master)\" (#22237)"},{"Id":"403755183","IsPullRequest":false,"CreatedAt":"2019-01-28T10:54:12","Actor":"janvorli","Number":"22247","RawContent":null,"Title":"Calling System.Diagnostics.Tracing.EventPipe.Enable twice asserts","State":"open","Body":"While running unloadability tests in a mode where each coreclr test is executed **twice** in the same process, I have hit an assert in the CLREventBase::CreateManualEvent called from SampleProfiler::Enable due to the fact that the event was already created before.\r\nI have investigated it a bit and the issue has nothing to do with unloadability and just the sequence of calling System.Diagnostics.Tracing.EventPipe.Enable / System.Diagnostics.Tracing.EventPipe.Disable / System.Diagnostics.Tracing.EventPipe.Enable causes the assert.\r\n\r\nI've hit that while running the `tracing\\tracevalidation\\jittingstarted`, `tracing\\tracevalidation\\inducedgc` and `tracing\\tracevalidation\\rundown` tests.","Url":"https://github.com/dotnet/coreclr/issues/22247","RelatedDescription":"Open issue \"Calling System.Diagnostics.Tracing.EventPipe.Enable twice asserts\" (#22247)"},{"Id":"403597817","IsPullRequest":true,"CreatedAt":"2019-01-28T02:25:08","Actor":"Dotnet-GitSync-Bot","Number":"22241","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/22241","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#22241)"},{"Id":"403452299","IsPullRequest":true,"CreatedAt":"2019-01-28T02:01:23","Actor":"benaadams","Number":"22233","RawContent":null,"Title":"Shrink Task.Delay when used without Cancellation","State":"closed","Body":"`Task.Delay` is commonly used without cancellation:\r\n\r\n`Task Delay(int)` - API Port 22.6%\r\n`Task Delay(TimeSpan)` - API Port 9.8%\r\n\r\n`Task Delay(int, CancellationToken)` - API Port 5.6%\r\n`Task Delay(TimeSpan, CancellationToken)` - API Port 9.3%\r\n\r\nThis shaves 24 bytes of allocation off that common path.\r\n\r\nUsing @SergeyTeplyakov's [ObjectLayoutInspector](https://github.com/SergeyTeplyakov/ObjectLayoutInspector) and local copies of the internal objects to make it easier to inspect.\r\n```csharp\r\nObjectLayoutInspector.TypeLayout.PrintLayout<DelayPromise>(recursively: true);\r\nObjectLayoutInspector.TypeLayout.PrintLayout<DelayPromiseWithoutCancellation>(recursively: true);\r\n```\r\n```\r\nType layout for 'DelayPromise'\r\nSize: 88 bytes. Paddings: 7 bytes (%7 of empty space)\r\n|==============================================================|\r\n| Object Header (8 bytes)                                      |\r\n|--------------------------------------------------------------|\r\n| Method Table Ptr (8 bytes)                                   |\r\n|==============================================================|\r\n|   0-7: Delegate m_action (8 bytes)                           |\r\n|--------------------------------------------------------------|\r\n|  8-15: Object m_stateObject (8 bytes)                        |\r\n|--------------------------------------------------------------|\r\n| 16-23: TaskScheduler m_taskScheduler (8 bytes)               |\r\n|--------------------------------------------------------------|\r\n| 24-31: Object m_continuationObject (8 bytes)                 |\r\n|--------------------------------------------------------------|\r\n| 32-39: ContingentProperties m_contingentProperties (8 bytes) |\r\n|--------------------------------------------------------------|\r\n| 40-43: Int32 m_taskId (4 bytes)                              |\r\n|--------------------------------------------------------------|\r\n| 44-47: Int32 m_stateFlags (4 bytes)                          |\r\n|--------------------------------------------------------------|\r\n|    48: VoidTaskResult m_result (1 byte)                      |\r\n|--------------------------------------------------------------|\r\n| 49-55: padding (7 bytes)                                     |\r\n|--------------------------------------------------------------|\r\n| 56-63: TimerQueueTimer Timer (8 bytes)                       |\r\n|--------------------------------------------------------------|\r\n| 64-71: CancellationToken Token (8 bytes)                     |\r\n|--------------------------------------------------------------|\r\n| 72-87: CancellationTokenRegistration Registration (16 bytes) |\r\n| |=====================================|                      |\r\n| |   0-7: CallbackNode _node (8 bytes) |                      |\r\n| |-------------------------------------|                      |\r\n| |  8-15: Int64 _id (8 bytes)          |                      |\r\n| |=====================================|                      |\r\n|==============================================================|\r\n```\r\nTo\r\n```\r\nType layout for 'DelayPromiseWithoutCancellation'\r\nSize: 64 bytes. Paddings: 7 bytes (%10 of empty space)\r\n|==============================================================|\r\n| Object Header (8 bytes)                                      |\r\n|--------------------------------------------------------------|\r\n| Method Table Ptr (8 bytes)                                   |\r\n|==============================================================|\r\n|   0-7: Delegate m_action (8 bytes)                           |\r\n|--------------------------------------------------------------|\r\n|  8-15: Object m_stateObject (8 bytes)                        |\r\n|--------------------------------------------------------------|\r\n| 16-23: TaskScheduler m_taskScheduler (8 bytes)               |\r\n|--------------------------------------------------------------|\r\n| 24-31: Object m_continuationObject (8 bytes)                 |\r\n|--------------------------------------------------------------|\r\n| 32-39: ContingentProperties m_contingentProperties (8 bytes) |\r\n|--------------------------------------------------------------|\r\n| 40-43: Int32 m_taskId (4 bytes)                              |\r\n|--------------------------------------------------------------|\r\n| 44-47: Int32 m_stateFlags (4 bytes)                          |\r\n|--------------------------------------------------------------|\r\n|    48: VoidTaskResult m_result (1 byte)                      |\r\n|--------------------------------------------------------------|\r\n| 49-55: padding (7 bytes)                                     |\r\n|--------------------------------------------------------------|\r\n| 56-63: TimerQueueTimer Timer (8 bytes)                       |\r\n|==============================================================|\r\n```\r\n\r\n/cc @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/22233","RelatedDescription":"Closed or merged PR \"Shrink Task.Delay when used without Cancellation\" (#22233)"},{"Id":"403620754","IsPullRequest":false,"CreatedAt":"2019-01-28T01:34:11","Actor":"benaadams","Number":"22246","RawContent":null,"Title":"Jit doesn't always eliminate identical checks (bounds)","State":"open","Body":"Double check is via outer method (first) and then inlined method (second, Span .ctor)\r\n\r\nSeen in https://github.com/dotnet/coreclr/pull/22207#issuecomment-457632929\r\n\r\n```asm\r\n; Assembly listing for method String:EndsWith(ref,int):bool:this\r\n...\r\nG_M23680_IG10:\r\n       mov      ecx, dword ptr [rsi+8]\r\n       sub      ecx, r8d\r\n       cmp      dword ptr [rsi+8], ecx   ; should eliminate one below?\r\n       jb       SHORT G_M23680_IG15\r\n       cmp      dword ptr [rsi+8], ecx   ; should be eliminated?\r\n       jb       G_M23680_IG22\r\nG_M23680_IG11:\r\n```\r\n\r\n/cc @AndyAyersMS ","Url":"https://github.com/dotnet/coreclr/issues/22246","RelatedDescription":"Open issue \"Jit doesn't always eliminate identical checks (bounds)\" (#22246)"},{"Id":"403619254","IsPullRequest":false,"CreatedAt":"2019-01-28T01:21:49","Actor":"VincentBu","Number":"22245","RawContent":null,"Title":"[arm] Test failed: readytorun_tests._versionbubbles_versionbubbles_versionbubbles_._versionbubbles_versionbubbles_versionbubbles_sh","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_gcstress0xc_minopts_heapverify1_tst/38/\r\n\r\n**Failed tests:**\r\nreadytorun_tests._versionbubbles_versionbubbles_versionbubbles_._versionbubbles_versionbubbles_versionbubbles_sh\r\n\r\n**Log:**\r\n```\r\nreadytorun_tests._versionbubbles_versionbubbles_versionbubbles_._versionbubbles_versionbubbles_versionbubbles_sh [FAIL]\r\n        /n/nReturn code:      1/nRaw output file:      /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_minopts_heapverify1_tst/bin/tests/Linux.arm.Checked/readytorun/tests/Reports/readytorun.tests/versionbubbles/versionbubbles/versionbubbles.output.txt/nRaw output:/nBEGIN EXECUTION\r\n        /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_minopts_heapverify1_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun versionbubbles.exe\r\n        Large Version Bubble is enabled.\r\n        FAIL\r\n        Expected: 100\r\n        Actual: 101\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        /nTo run the test:/n> set CORE_ROOT=/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_minopts_heapverify1_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/n> /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_minopts_heapverify1_tst/bin/tests/Linux.arm.Checked/readytorun/tests/versionbubbles/versionbubbles/versionbubbles.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/bin/tests/Linux.arm.Checked/TestWrappers/readytorun.tests/readytorun.tests.XUnitWrapper.cs(529,0): at readytorun_tests._versionbubbles_versionbubbles_versionbubbles_._versionbubbles_versionbubbles_versionbubbles_sh()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22245","RelatedDescription":"Open issue \"[arm] Test failed: readytorun_tests._versionbubbles_versionbubbles_versionbubbles_._versionbubbles_versionbubbles_versionbubbles_sh\" (#22245)"},{"Id":"403618118","IsPullRequest":false,"CreatedAt":"2019-01-28T01:13:16","Actor":"VincentBu","Number":"22244","RawContent":null,"Title":"[arm] System.Runtime.InteropServices.Tests.ThrowExceptionForHRTests.ThrowExceptionForHR_ErrorInfo_ReturnsValidException Failed","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_corefx_baseline_tst/41/\r\n\r\n**Failed tests:**\r\nSystem.Runtime.InteropServices.Tests.ThrowExceptionForHRTests.ThrowExceptionForHR_ErrorInfo_ReturnsValidException\r\n\r\n**Log:**\r\n```\r\n[m[31;1m    System.Runtime.InteropServices.Tests.ThrowExceptionForHRTests.ThrowExceptionForHR_ErrorInfo_ReturnsValidException(errorCode: -2147352570, errorInfo: 0) [FAIL]\r\n[m[37m      Assert.Equal() Failure\r\n[m[37m                       ↓ (pos 7)\r\n[m[37m      Expected: System.Private.CoreLib\r\n[m[37m      Actual:   System.Runtime.InteropServices.Tests\r\n[m[37m                       ↑ (pos 7)\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_baseline/_/fx/src/System.Runtime.InteropServices/tests/System/Runtime/InteropServices/Marshal/ThrowExceptionForHRTests.cs(78,0): at System.Runtime.InteropServices.Tests.ThrowExceptionForHRTests.ThrowExceptionForHR_ErrorInfo_ReturnsValidException(Int32 errorCode, IntPtr errorInfo)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22244","RelatedDescription":"Open issue \"[arm] System.Runtime.InteropServices.Tests.ThrowExceptionForHRTests.ThrowExceptionForHR_ErrorInfo_ReturnsValidException Failed\" (#22244)"},{"Id":"403608396","IsPullRequest":false,"CreatedAt":"2019-01-27T23:31:37","Actor":"philipflesher","Number":"22242","RawContent":null,"Title":"SIGSEGV core dump, maybe during GC - 2.2.x, OSX","State":"open","Body":"I've been debugging an issue for almost 2 weeks with no resolution in sight. Running 2.2.103 on OSX Mojave.\r\n\r\nDoing heavy CSV processing across ~12 threads, our application will abort non-deterministically after a minute or so. No exception is reported. Instead, a SIGSEGV occurs on one of the threads and a core dump is created. Almost always, this shows that the crashed thread was in `RtlRestoreContext` at the time, while most (or all) other threads are blocked waiting on GC for a requested memory allocation. Very recently, I've also seen the crashed thread in `WKS::gc_heap::generation_to_condemn(int, int*, int*, int)` (see example dump below).\r\n\r\nAgain, this is non-deterministic right now and difficult to reproduce.\r\n\r\n```\r\nProcess:               dotnet [40763]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        vsdbg [40762]\r\nResponsible:           dotnet [40763]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-01-27 17:16:26.462 -0600\r\nOS Version:            Mac OS X 10.14.1 (18B75)\r\nReport Version:        12\r\nBridge OS Version:     3.1 (16P1065)\r\nAnonymous UUID:        8275A5EB-310A-4164-9B89-796D9D8EA11F\r\n\r\nSleep/Wake UUID:       2D7F755E-ED90-43CF-AE79-4E5F59A679CC\r\n\r\nTime Awake Since Boot: 590000 seconds\r\nTime Since Wake:       21000 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        15\r\n\r\nException Type:        EXC_ARITHMETIC (SIGFPE)\r\nException Codes:       0x0000000000000008, 0x00000000000000b8\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Signal:    Floating point exception: 8\r\nTermination Reason:    Namespace SIGNAL, Code 0x8\r\nTerminating Process:   exc handler [40763]\r\n\r\nThread 0:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101cbeedd Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n6   libcoreclr.dylib              \t0x0000000101cb9b60 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n7   libcoreclr.dylib              \t0x0000000101de247e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n8   libcoreclr.dylib              \t0x0000000101cbf8d0 Thread::Block(int, PendingSync*) + 32\r\n9   libcoreclr.dylib              \t0x0000000101cb7686 SyncBlock::Wait(int, int) + 598\r\n10  libcoreclr.dylib              \t0x0000000101eff3e5 ObjectNative::WaitTimeout(bool, int, Object*) + 197\r\n11  ???                           \t0x0000000108607873 0 + 4435507315\r\n12  ???                           \t0x00000001085cbb55 0 + 4435262293\r\n13  ???                           \t0x00000001085cb769 0 + 4435261289\r\n14  ???                           \t0x00000001085cb4e2 0 + 4435260642\r\n15  ???                           \t0x00000001085cb40c 0 + 4435260428\r\n16  ???                           \t0x000000010935359e 0 + 4449449374\r\n17  ???                           \t0x000000010935350e 0 + 4449449230\r\n18  ???                           \t0x0000000108bfc84f 0 + 4441753679\r\n19  ???                           \t0x0000000108bc3347 0 + 4441518919\r\n20  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n21  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n22  libcoreclr.dylib              \t0x0000000101bd7caa RunMain(MethodDesc*, short, int*, PtrArray**) + 682\r\n23  libcoreclr.dylib              \t0x0000000101bd7f1f Assembly::ExecuteMainMethod(PtrArray**, int) + 223\r\n24  libcoreclr.dylib              \t0x0000000101c12884 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n25  libcoreclr.dylib              \t0x0000000101b4be46 coreclr_execute_assembly + 230\r\n26  libhostpolicy.dylib           \t0x0000000101a80ba8 0x101a06000 + 502696\r\n27  libhostpolicy.dylib           \t0x0000000101a70b66 0x101a06000 + 437094\r\n28  libhostpolicy.dylib           \t0x0000000101a728a0 0x101a06000 + 444576\r\n29  libhostfxr.dylib              \t0x00000001019a18a3 0x101917000 + 567459\r\n30  libhostfxr.dylib              \t0x00000001019c15ee 0x101917000 + 697838\r\n31  libhostfxr.dylib              \t0x00000001019c41c2 0x101917000 + 709058\r\n32  libhostfxr.dylib              \t0x00000001019c2678 0x101917000 + 702072\r\n33  libhostfxr.dylib              \t0x00000001019a2919 0x101917000 + 571673\r\n34  dotnet                        \t0x00000001018e1052 0x1018d4000 + 53330\r\n35  dotnet                        \t0x00000001018e1645 0x1018d4000 + 54853\r\n36  libdyld.dylib                 \t0x00007fff59b5c08d start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c94c2a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff59c95174 mach_msg + 60\r\n2   libcoreclr.dylib              \t0x0000000101b48358 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x0000000101b472ae SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c9b052 kevent + 10\r\n1   libcoreclr.dylib              \t0x0000000101b3cc80 CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(int, unsigned char*, int) + 560\r\n2   libcoreclr.dylib              \t0x0000000101b3c1b3 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 147\r\n3   libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c968a6 read + 10\r\n1   libcoreclr.dylib              \t0x0000000101bb56f4 TwoWayPipe::Read(void*, unsigned int) + 36\r\n2   libcoreclr.dylib              \t0x0000000101bada98 DbgTransportSession::TransportWorker() + 3016\r\n3   libcoreclr.dylib              \t0x0000000101bab8c9 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n7   libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101ba9d98 DebuggerRCThread::MainLoop() + 264\r\n6   libcoreclr.dylib              \t0x0000000101ba9c2b DebuggerRCThread::ThreadProc() + 251\r\n7   libcoreclr.dylib              \t0x0000000101ba9914 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n8   libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n9   libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n10  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n11  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3e6be WaitForSingleObject + 62\r\n6   libcoreclr.dylib              \t0x0000000101bab16f HelperCanary::ThreadProc() + 31\r\n7   libcoreclr.dylib              \t0x0000000101bab118 HelperCanary::ThreadProc(void*) + 56\r\n8   libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n9   libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n10  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n11  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101d41d1e FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 158\r\n6   libcoreclr.dylib              \t0x0000000101d41e13 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n7   libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n8   libcoreclr.dylib              \t0x0000000101cc4359 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n9   libcoreclr.dylib              \t0x0000000101d421ec FinalizerThread::FinalizerThreadStart(void*) + 188\r\n10  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c94c2a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff59c95174 mach_msg + 60\r\n2   libclrjit.dylib               \t0x00000001029cf288 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x00000001029ce1de SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101cbeedd Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n6   libcoreclr.dylib              \t0x0000000101cb9b60 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n7   libcoreclr.dylib              \t0x0000000101de247e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n8   libcoreclr.dylib              \t0x0000000101cbf8d0 Thread::Block(int, PendingSync*) + 32\r\n9   libcoreclr.dylib              \t0x0000000101cb7686 SyncBlock::Wait(int, int) + 598\r\n10  libcoreclr.dylib              \t0x0000000101eff3e5 ObjectNative::WaitTimeout(bool, int, Object*) + 197\r\n11  ???                           \t0x000000010861565b 0 + 4435564123\r\n12  ???                           \t0x00000001086153e8 0 + 4435563496\r\n13  ???                           \t0x00000001092379ef 0 + 4448287215\r\n14  ???                           \t0x0000000109237803 0 + 4448286723\r\n15  ???                           \t0x000000010b04e650 0 + 4479837776\r\n16  ???                           \t0x000000010b04e550 0 + 4479837520\r\n17  ???                           \t0x000000010a7116a6 0 + 4470150822\r\n18  ???                           \t0x000000010b037f91 0 + 4479745937\r\n19  ???                           \t0x000000010b0366c2 0 + 4479739586\r\n20  ???                           \t0x000000010b0351aa 0 + 4479734186\r\n21  ???                           \t0x000000010b034f2c 0 + 4479733548\r\n22  ???                           \t0x000000010b034e73 0 + 4479733363\r\n23  ???                           \t0x000000010b033eea 0 + 4479729386\r\n24  ???                           \t0x000000010b033d0e 0 + 4479728910\r\n25  ???                           \t0x000000010b033bb6 0 + 4479728566\r\n26  ???                           \t0x000000010b033967 0 + 4479727975\r\n27  ???                           \t0x0000000108e6b11a 0 + 4444303642\r\n28  ???                           \t0x0000000108e64a0a 0 + 4444277258\r\n29  ???                           \t0x000000010aa8b7c9 0 + 4473796553\r\n30  ???                           \t0x000000010aa88b9e 0 + 4473785246\r\n31  ???                           \t0x000000010a7116a6 0 + 4470150822\r\n32  ???                           \t0x000000010aa8884e 0 + 4473784398\r\n33  ???                           \t0x000000010aa886f0 0 + 4473784048\r\n34  ???                           \t0x000000010aa881c9 0 + 4473782729\r\n35  ???                           \t0x000000010aa88069 0 + 4473782377\r\n36  ???                           \t0x000000010aa87f9f 0 + 4473782175\r\n37  ???                           \t0x000000010aa646a3 0 + 4473636515\r\n38  ???                           \t0x000000010860d98d 0 + 4435532173\r\n39  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n40  ???                           \t0x00000001085c8935 0 + 4435249461\r\n41  ???                           \t0x00000001086fd4e8 0 + 4436514024\r\n42  ???                           \t0x00000001085fc488 0 + 4435461256\r\n43  ???                           \t0x00000001085c91ab 0 + 4435251627\r\n44  ???                           \t0x00000001085cb667 0 + 4435261031\r\n45  ???                           \t0x00000001085cb4e2 0 + 4435260642\r\n46  ???                           \t0x00000001085cb40c 0 + 4435260428\r\n47  ???                           \t0x000000010935359e 0 + 4449449374\r\n48  ???                           \t0x000000010aa605b0 0 + 4473619888\r\n49  ???                           \t0x000000010aa5defe 0 + 4473609982\r\n50  ???                           \t0x000000010a6f3aed 0 + 4470029037\r\n51  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n52  ???                           \t0x00000001085c8935 0 + 4435249461\r\n53  ???                           \t0x00000001086fd4e8 0 + 4436514024\r\n54  ???                           \t0x00000001085fc488 0 + 4435461256\r\n55  ???                           \t0x00000001085c91ab 0 + 4435251627\r\n56  ???                           \t0x00000001085cb667 0 + 4435261031\r\n57  ???                           \t0x00000001085cb4e2 0 + 4435260642\r\n58  ???                           \t0x00000001085cb40c 0 + 4435260428\r\n59  ???                           \t0x000000010935359e 0 + 4449449374\r\n60  ???                           \t0x000000010935350e 0 + 4449449230\r\n61  ???                           \t0x0000000109350f60 0 + 4449439584\r\n62  ???                           \t0x0000000108bfd561 0 + 4441757025\r\n63  ???                           \t0x0000000108bfa8bd 0 + 4441745597\r\n64  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n65  ???                           \t0x00000001085c8935 0 + 4435249461\r\n66  ???                           \t0x000000010860a000 0 + 4435517440\r\n67  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n68  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n69  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n70  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n71  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n72  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n73  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n74  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n75  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n76  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n77  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45094 AllocateArrayEx(TypeHandle, int*, unsigned int, int) + 772\r\n10  libcoreclr.dylib              \t0x0000000101d63676 JIT_NewArr1(CORINFO_CLASS_STRUCT_*, long) + 326\r\n11  ???                           \t0x000000010b1142ae 0 + 4480647854\r\n12  ???                           \t0x000000010b112405 0 + 4480640005\r\n13  ???                           \t0x000000010b111c93 0 + 4480638099\r\n14  ???                           \t0x000000010b111965 0 + 4480637285\r\n15  ???                           \t0x000000010b115279 0 + 4480651897\r\n16  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n17  ???                           \t0x000000010b04db33 0 + 4479834931\r\n18  ???                           \t0x000000010b04d109 0 + 4479832329\r\n19  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n20  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n21  ???                           \t0x00000001085c8935 0 + 4435249461\r\n22  ???                           \t0x000000010860a000 0 + 4435517440\r\n23  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n24  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n25  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n26  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n27  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n28  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n29  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n30  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n33  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108516607 0 + 4434519559\r\n12  ???                           \t0x000000010b113c70 0 + 4480646256\r\n13  ???                           \t0x000000010b115c22 0 + 4480654370\r\n14  ???                           \t0x000000010b112378 0 + 4480639864\r\n15  ???                           \t0x000000010b111c93 0 + 4480638099\r\n16  ???                           \t0x000000010b111965 0 + 4480637285\r\n17  ???                           \t0x000000010b115279 0 + 4480651897\r\n18  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n19  ???                           \t0x000000010b04db33 0 + 4479834931\r\n20  ???                           \t0x000000010b04d109 0 + 4479832329\r\n21  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n22  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n23  ???                           \t0x00000001085c8935 0 + 4435249461\r\n24  ???                           \t0x000000010860a000 0 + 4435517440\r\n25  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n26  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n27  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n28  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n29  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n30  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n31  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n32  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n33  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n34  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n35  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108516607 0 + 4434519559\r\n12  ???                           \t0x000000010b113c70 0 + 4480646256\r\n13  ???                           \t0x000000010b1139fa 0 + 4480645626\r\n14  ???                           \t0x000000010b11322d 0 + 4480643629\r\n15  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n16  ???                           \t0x000000010b111c93 0 + 4480638099\r\n17  ???                           \t0x000000010b111965 0 + 4480637285\r\n18  ???                           \t0x000000010b115279 0 + 4480651897\r\n19  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n20  ???                           \t0x000000010b04db33 0 + 4479834931\r\n21  ???                           \t0x000000010b04d109 0 + 4479832329\r\n22  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n23  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n24  ???                           \t0x00000001085c8935 0 + 4435249461\r\n25  ???                           \t0x000000010860a000 0 + 4435517440\r\n26  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n27  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n28  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n29  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n30  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n31  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n32  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n33  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n34  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n35  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n36  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108516607 0 + 4434519559\r\n12  ???                           \t0x000000010b113c70 0 + 4480646256\r\n13  ???                           \t0x000000010b1139fa 0 + 4480645626\r\n14  ???                           \t0x000000010b11322d 0 + 4480643629\r\n15  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n16  ???                           \t0x000000010b111c93 0 + 4480638099\r\n17  ???                           \t0x000000010b111965 0 + 4480637285\r\n18  ???                           \t0x000000010b115279 0 + 4480651897\r\n19  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n20  ???                           \t0x000000010b04db33 0 + 4479834931\r\n21  ???                           \t0x000000010b04d109 0 + 4479832329\r\n22  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n23  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n24  ???                           \t0x00000001085c8935 0 + 4435249461\r\n25  ???                           \t0x000000010860a000 0 + 4435517440\r\n26  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n27  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n28  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n29  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n30  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n31  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n32  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n33  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n34  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n35  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n36  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 13:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108516607 0 + 4434519559\r\n12  ???                           \t0x000000010b113cf7 0 + 4480646391\r\n13  ???                           \t0x000000010b1139fa 0 + 4480645626\r\n14  ???                           \t0x000000010b11322d 0 + 4480643629\r\n15  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n16  ???                           \t0x000000010b111c93 0 + 4480638099\r\n17  ???                           \t0x000000010b111965 0 + 4480637285\r\n18  ???                           \t0x000000010b115279 0 + 4480651897\r\n19  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n20  ???                           \t0x000000010b04db33 0 + 4479834931\r\n21  ???                           \t0x000000010b04d109 0 + 4479832329\r\n22  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n23  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n24  ???                           \t0x00000001085c8935 0 + 4435249461\r\n25  ???                           \t0x000000010860a000 0 + 4435517440\r\n26  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n27  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n28  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n29  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n30  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n31  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n32  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n33  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n34  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n35  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n36  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 14:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108512902 0 + 4434503938\r\n12  ???                           \t0x000000010b113aa5 0 + 4480645797\r\n13  ???                           \t0x000000010b11322d 0 + 4480643629\r\n14  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n15  ???                           \t0x000000010b111c93 0 + 4480638099\r\n16  ???                           \t0x000000010b111965 0 + 4480637285\r\n17  ???                           \t0x000000010b115279 0 + 4480651897\r\n18  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n19  ???                           \t0x000000010b04db33 0 + 4479834931\r\n20  ???                           \t0x000000010b04d109 0 + 4479832329\r\n21  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n22  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n23  ???                           \t0x00000001085c8935 0 + 4435249461\r\n24  ???                           \t0x000000010860a000 0 + 4435517440\r\n25  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n26  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n27  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n28  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n29  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n30  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n31  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n32  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n33  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n34  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n35  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 15 Crashed:\r\n0   libcoreclr.dylib              \t0x0000000101e50c7b WKS::gc_heap::generation_to_condemn(int, int*, int*, int) + 2283\r\n1   libcoreclr.dylib              \t0x0000000101e5f36e WKS::gc_heap::garbage_collect(int) + 670\r\n2   libcoreclr.dylib              \t0x0000000101e5299d WKS::GCHeap::GarbageCollectGeneration(unsigned int, gc_reason) + 653\r\n3   libcoreclr.dylib              \t0x0000000101e54593 WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 531\r\n4   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n5   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n6   libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n7   ???                           \t0x0000000108512902 0 + 4434503938\r\n8   ???                           \t0x000000010b113aa5 0 + 4480645797\r\n9   ???                           \t0x000000010b11322d 0 + 4480643629\r\n10  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n11  ???                           \t0x000000010b111c93 0 + 4480638099\r\n12  ???                           \t0x000000010b111965 0 + 4480637285\r\n13  ???                           \t0x000000010b115279 0 + 4480651897\r\n14  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n15  ???                           \t0x000000010b04db33 0 + 4479834931\r\n16  ???                           \t0x000000010b04d109 0 + 4479832329\r\n17  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n18  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n19  ???                           \t0x00000001085c8935 0 + 4435249461\r\n20  ???                           \t0x000000010860a000 0 + 4435517440\r\n21  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n22  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n23  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n24  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n25  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n26  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n27  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n28  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n29  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n30  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n31  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 16:\r\n0   libsystem_pthread.dylib       \t0x00007fff59d4d428 start_wqthread + 0\r\n1   ???                           \t0x0000000054485244 0 + 1414025796\r\n\r\nThread 17:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a345 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3f23f SleepEx + 143\r\n5   libcoreclr.dylib              \t0x0000000101ce5d5b ThreadpoolMgr::TimerThreadFire() + 123\r\n6   libcoreclr.dylib              \t0x0000000101ce5c45 ThreadpoolMgr::TimerThreadStart(void*) + 181\r\n7   libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n10  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 18:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e45e6f WKS::WaitLonger(int) + 239\r\n8   libcoreclr.dylib              \t0x0000000101e499c0 WKS::enter_spin_lock(WKS::GCDebugSpinLock*) + 288\r\n9   libcoreclr.dylib              \t0x0000000101e543e3 WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 99\r\n10  libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n11  libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n12  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n13  ???                           \t0x0000000108516607 0 + 4434519559\r\n14  ???                           \t0x000000010b113c70 0 + 4480646256\r\n15  ???                           \t0x000000010b1139fa 0 + 4480645626\r\n16  ???                           \t0x000000010b11322d 0 + 4480643629\r\n17  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n18  ???                           \t0x000000010b111c93 0 + 4480638099\r\n19  ???                           \t0x000000010b111965 0 + 4480637285\r\n20  ???                           \t0x000000010b115279 0 + 4480651897\r\n21  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n22  ???                           \t0x000000010b04db33 0 + 4479834931\r\n23  ???                           \t0x000000010b04d109 0 + 4479832329\r\n24  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n25  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n26  ???                           \t0x00000001085c8935 0 + 4435249461\r\n27  ???                           \t0x000000010860a000 0 + 4435517440\r\n28  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n29  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n30  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n31  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n32  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n33  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n34  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n35  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n36  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n37  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n38  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 19:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108516607 0 + 4434519559\r\n12  ???                           \t0x000000010b113c70 0 + 4480646256\r\n13  ???                           \t0x000000010b1139fa 0 + 4480645626\r\n14  ???                           \t0x000000010b11322d 0 + 4480643629\r\n15  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n16  ???                           \t0x000000010b111c93 0 + 4480638099\r\n17  ???                           \t0x000000010b111965 0 + 4480637285\r\n18  ???                           \t0x000000010b115279 0 + 4480651897\r\n19  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n20  ???                           \t0x000000010b04db33 0 + 4479834931\r\n21  ???                           \t0x000000010b04d109 0 + 4479832329\r\n22  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n23  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n24  ???                           \t0x00000001085c8935 0 + 4435249461\r\n25  ???                           \t0x000000010860a000 0 + 4435517440\r\n26  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n27  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n28  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n29  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n30  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n31  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n32  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n33  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n34  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n35  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n36  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 20:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108512902 0 + 4434503938\r\n12  ???                           \t0x000000010b113aa5 0 + 4480645797\r\n13  ???                           \t0x000000010b11322d 0 + 4480643629\r\n14  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n15  ???                           \t0x000000010b111c93 0 + 4480638099\r\n16  ???                           \t0x000000010b111965 0 + 4480637285\r\n17  ???                           \t0x000000010b115279 0 + 4480651897\r\n18  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n19  ???                           \t0x000000010b04db33 0 + 4479834931\r\n20  ???                           \t0x000000010b04d109 0 + 4479832329\r\n21  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n22  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n23  ???                           \t0x00000001085c8935 0 + 4435249461\r\n24  ???                           \t0x000000010860a000 0 + 4435517440\r\n25  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n26  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n27  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n28  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n29  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n30  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n31  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n32  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n33  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n34  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n35  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 21:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108516607 0 + 4434519559\r\n12  ???                           \t0x000000010b113cf7 0 + 4480646391\r\n13  ???                           \t0x000000010b1139fa 0 + 4480645626\r\n14  ???                           \t0x000000010b11322d 0 + 4480643629\r\n15  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n16  ???                           \t0x000000010b111c93 0 + 4480638099\r\n17  ???                           \t0x000000010b111965 0 + 4480637285\r\n18  ???                           \t0x000000010b115279 0 + 4480651897\r\n19  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n20  ???                           \t0x000000010b04db33 0 + 4479834931\r\n21  ???                           \t0x000000010b04d109 0 + 4479832329\r\n22  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n23  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n24  ???                           \t0x00000001085c8935 0 + 4435249461\r\n25  ???                           \t0x000000010860a000 0 + 4435517440\r\n26  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n27  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n28  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n29  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n30  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n31  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n32  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n33  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n34  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n35  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n36  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 22:\r\n0   libsystem_kernel.dylib        \t0x00007fff59c981b2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff59d515cb _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x0000000101b3a382 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000101b39fa8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000101b3ee21 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000101b3ef96 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x0000000101de24f0 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x0000000101e544af WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned long, int) + 303\r\n8   libcoreclr.dylib              \t0x0000000101e774bd WKS::GCHeap::Alloc(gc_alloc_context*, unsigned long, unsigned int) + 157\r\n9   libcoreclr.dylib              \t0x0000000101d45eed SlowAllocateString(unsigned int) + 157\r\n10  libcoreclr.dylib              \t0x0000000101d62ed2 FramedAllocateString(unsigned int) + 130\r\n11  ???                           \t0x0000000108516607 0 + 4434519559\r\n12  ???                           \t0x000000010b113c70 0 + 4480646256\r\n13  ???                           \t0x000000010b1139fa 0 + 4480645626\r\n14  ???                           \t0x000000010b11322d 0 + 4480643629\r\n15  ???                           \t0x000000010b1123ad 0 + 4480639917\r\n16  ???                           \t0x000000010b111c93 0 + 4480638099\r\n17  ???                           \t0x000000010b111965 0 + 4480637285\r\n18  ???                           \t0x000000010b115279 0 + 4480651897\r\n19  ???                           \t0x000000010b1150b9 0 + 4480651449\r\n20  ???                           \t0x000000010b04db33 0 + 4479834931\r\n21  ???                           \t0x000000010b04d109 0 + 4479832329\r\n22  ???                           \t0x000000010b04c81e 0 + 4479830046\r\n23  ???                           \t0x000000010858f0c1 0 + 4435013825\r\n24  ???                           \t0x00000001085c8935 0 + 4435249461\r\n25  ???                           \t0x000000010860a000 0 + 4435517440\r\n26  libcoreclr.dylib              \t0x0000000101e0a111 CallDescrWorkerInternal + 124\r\n27  libcoreclr.dylib              \t0x0000000101d0134d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n28  libcoreclr.dylib              \t0x0000000101d1b395 QueueUserWorkItemManagedCallback(void*) + 165\r\n29  libcoreclr.dylib              \t0x0000000101cc3d10 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n30  libcoreclr.dylib              \t0x0000000101cc4303 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n31  libcoreclr.dylib              \t0x0000000101cb9280 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n32  libcoreclr.dylib              \t0x0000000101ce2f87 ThreadpoolMgr::WorkerThreadStart(void*) + 1095\r\n33  libcoreclr.dylib              \t0x0000000101b44bb8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n34  libsystem_pthread.dylib       \t0x00007fff59d4e339 _pthread_body + 126\r\n35  libsystem_pthread.dylib       \t0x00007fff59d512a7 _pthread_start + 70\r\n36  libsystem_pthread.dylib       \t0x00007fff59d4d445 thread_start + 13\r\n\r\nThread 15 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x0000000000000000  rcx: 0x0000000000000000  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000001  rsi: 0x0000000000c00000  rbp: 0x000070000fd88820  rsp: 0x000070000fd88710\r\n   r8: 0x00000000fffffffa   r9: 0x00000000fffffffb  r10: 0x00000000533670a6  r11: 0x0000000000000002\r\n  r12: 0x0000000000000000  r13: 0x0000000102048ed0  r14: 0x0000000000000001  r15: 0x00000001020488c0\r\n  rip: 0x0000000101e50c7b  rfl: 0x0000000000010246  cr2: 0x0000000102061000\r\n  \r\nLogical CPU:     10\r\nError Code:      0x00000000\r\nTrap Number:     19\r\n\r\n\r\nBinary Images:\r\n       0x1018d4000 -        0x1018f6ff7 +dotnet (0) <32E0E7BE-0C92-3236-995E-B1953E8694FF> /usr/local/share/dotnet/dotnet\r\n       0x101917000 -        0x1019fdfff +libhostfxr.dylib (0) <C49DB0F3-1732-3BD6-9C91-2A1DCF1393DD> /usr/local/share/dotnet/host/fxr/2.2.1/libhostfxr.dylib\r\n       0x101a06000 -        0x101ad3ff7 +libhostpolicy.dylib (0) <869E5F60-0C4A-36BB-B06B-89CCD384377B> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/libhostpolicy.dylib\r\n       0x101afc000 -        0x10200aff7 +libcoreclr.dylib (0) <2D974A3C-5DDA-3610-920F-68FCCC70B0B8> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/libcoreclr.dylib\r\n       0x102812000 -        0x102a16ff7 +libclrjit.dylib (0) <4A89FE79-2F2A-3A8F-ADBC-F8905E4659AC> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/libclrjit.dylib\r\n       0x102af4000 -        0x102afffff +System.Globalization.Native.dylib (0) <67B4ECF3-8278-3373-87F4-12463AA91CA7> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/System.Globalization.Native.dylib\r\n       0x102b06000 -        0x102b0eff3 +System.Native.dylib (0) <9E61EFE1-FC34-32A0-B897-1D35EEC288F4> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/System.Native.dylib\r\n       0x102dab000 -        0x102dacff7 +System.Net.Http.Native.dylib (0) <AF7CBB55-5470-3CA3-AEA2-B48BD689557C> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/System.Net.Http.Native.dylib\r\n       0x102e18000 -        0x102e1dfff +System.Security.Cryptography.Native.Apple.dylib (0) <5BFA934B-E17C-3448-AB95-68EBFC4F56EE> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.7/System.Security.Cryptography.Native.Apple.dylib\r\n       0x1035b4000 -        0x1036326a7  dyld (635.2) <1780094A-8FE2-3EAA-B4A3-C4CF14BC5196> /usr/lib/dyld\r\n    0x7fff28c74000 -     0x7fff28c74fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <A09CB6D5-3F8A-3E05-B0EB-63878296A059> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff28c8c000 -     0x7fff2932cfe3  com.apple.vImage (8.1 - ???) <DB23E2A0-EA06-3073-AA7E-2873556714A9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff2932d000 -     0x7fff295a4fd7  libBLAS.dylib (1243.200.4) <76710990-AE2B-300E-88BB-797ABAD74956> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff295a5000 -     0x7fff29617fe7  libBNNS.dylib (38.200.5) <5F3A4021-8FF8-30E8-B84A-AA2BD70F4151> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff29618000 -     0x7fff299befff  libLAPACK.dylib (1243.200.4) <45722A8A-5788-3C4C-ADD9-1812763FA635> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff299bf000 -     0x7fff299d4ffb  libLinearAlgebra.dylib (1243.200.4) <E923DA33-B142-3A73-A80A-642878D19099> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff299d5000 -     0x7fff299daff3  libQuadrature.dylib (3.200.2) <6FFAC142-415D-3AF0-BC09-336302F11934> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff299db000 -     0x7fff29a58ffb  libSparse.dylib (79.200.5) <0D7E71A4-10D2-3979-B386-D2426ADAF6D7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff29a59000 -     0x7fff29a6cffb  libSparseBLAS.dylib (1243.200.4) <00D6FC17-B739-3259-90A4-92AC8BBE03D6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff29a6d000 -     0x7fff29c51ff3  libvDSP.dylib (671.220.1) <2F576522-08B1-3C65-8F00-3427E938ADDA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff29c52000 -     0x7fff29d07ff3  libvMisc.dylib (671.220.1) <29F59097-A256-38E9-9D55-BF56E9139CD9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff29d08000 -     0x7fff29d08fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <221E4FEF-0431-3316-8281-22B6F8315A09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff2ad2b000 -     0x7fff2ad2bfff  com.apple.ApplicationServices (50.1 - 50.1) <470C0943-30AD-3BA2-AFCE-EB7DD26E1709> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff2ad2c000 -     0x7fff2ad97ff7  com.apple.ApplicationServices.ATS (377 - 453.11) <7599E619-EE21-3EB7-875B-AE3B8D3E13BB> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff2ae30000 -     0x7fff2af4ffff  libFontParser.dylib (228.6) <E800074F-62CF-340A-A5A7-B8BE5B560045> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff2af50000 -     0x7fff2af9bfff  libFontRegistry.dylib (228.12) <480D472D-C8FB-321D-86EC-2EA6927A97AD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff2b097000 -     0x7fff2b09bff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <90641B6B-D07B-3577-B594-965825544B60> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff2b138000 -     0x7fff2b18aff3  com.apple.HIServices (1.22 - 627.14.2) <01F309D6-32E7-3C4F-A38B-8206EE3076CC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff2b18b000 -     0x7fff2b199ff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <67BC5855-B7A3-39E6-B5DD-52B287EB1532> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff2b19a000 -     0x7fff2b1e6fff  com.apple.print.framework.PrintCore (14.0 - 503.7) <C13BC56A-65F4-35B1-9E33-51FE6F3B06FD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff2b1e7000 -     0x7fff2b222ff7  com.apple.QD (3.12 - 407.2) <94A30038-C545-327A-B1C0-E19C79D62BAB> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff2b223000 -     0x7fff2b22fff7  com.apple.speech.synthesis.framework (8.1.0 - 8.1.0) <823830AC-62A6-36CC-A659-6BC10F2AC6F5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff2b230000 -     0x7fff2b4ccff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <F56518BA-B21B-32D8-B077-40A989815F46> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff2b832000 -     0x7fff2bbf3ff7  com.apple.CFNetwork (975.0.3 - 975.0.3) <99BD4FA0-8BD3-35E5-8FB1-C757D439716C> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff2c12f000 -     0x7fff2c1fbfff  com.apple.ColorSync (4.13.0 - 3340) <0618DA46-5A5E-339D-BB2F-ED66A2BFCCF9> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff2c396000 -     0x7fff2c426fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <A7F8E168-AB1D-36F4-9693-CFEF12BC197D> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff2c4b8000 -     0x7fff2c859fef  com.apple.CoreData (120 - 866.1) <B74013FA-621B-30F9-8CFE-3290FF63C2B8> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff2c85a000 -     0x7fff2c943ff7  com.apple.CoreDisplay (101.3 - 104.4) <52C96B6A-B119-3BE2-B47D-65F12E987609> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff2c944000 -     0x7fff2cd91fe7  com.apple.CoreFoundation (6.9 - 1560.12) <B5BDC307-6C89-3DE0-B4B9-4C2C650E4528> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff2cd93000 -     0x7fff2d420ff7  com.apple.CoreGraphics (2.0 - 1247.4.1) <D2F1DD53-09BD-307B-8B80-46B259530ED8> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff2d422000 -     0x7fff2d74bfff  com.apple.CoreImage (14.1.0 - 710.2.240) <CAEE3AAA-0781-311A-B987-72C7332C1A3F> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff2dc01000 -     0x7fff2dc01fff  com.apple.CoreServices (934 - 934) <EBA4A3BF-0B07-3E1B-9C14-8E6879453C6C> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff2dc02000 -     0x7fff2dc80ffb  com.apple.AE (771 - 771) <BBFEAB6C-B1F9-3D22-934E-8298155AC459> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff2dc81000 -     0x7fff2df59ff7  com.apple.CoreServices.CarbonCore (1178.11 - 1178.11) <9FBE7BFB-3A81-37AC-8E15-E6F7932BBDC0> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff2df5a000 -     0x7fff2dfa4ff7  com.apple.DictionaryServices (1.2 - 284.16.3) <D9388630-E7F2-321E-81FF-EBD5F3B47A52> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff2dfa5000 -     0x7fff2dfadffb  com.apple.CoreServices.FSEvents (1239.200.12 - 1239.200.12) <E40A3C4A-79C7-37D8-999B-D1169A06870B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff2dfae000 -     0x7fff2e179fff  com.apple.LaunchServices (934 - 934) <FD3D313D-997B-388B-B208-29774CDDF897> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff2e17a000 -     0x7fff2e21cfff  com.apple.Metadata (10.7.0 - 1191.52) <5A758D93-4BBD-3C6D-861B-000536ED9B2D> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff2e21d000 -     0x7fff2e268ff7  com.apple.CoreServices.OSServices (934 - 934) <1D2AC09A-653F-3C2D-B5B9-F9ABA307E51C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff2e269000 -     0x7fff2e2d7ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <C6A34D09-9707-3F28-838F-63B59B8A12D5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff2e2d8000 -     0x7fff2e2fcffb  com.apple.coreservices.SharedFileList (71.27 - 71.27) <B46A15E0-4C10-3616-BE49-58E07EC463FE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff2e644000 -     0x7fff2e7a9ffb  com.apple.CoreText (352.0 - 584.25) <AC3B4909-564A-3C26-B055-7687E5DE1697> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff2e7aa000 -     0x7fff2e7e7fff  com.apple.CoreVideo (1.8 - 0.0) <C7BB7D0F-3AF2-3046-A387-A802BCA52A3A> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff2eafb000 -     0x7fff2eb00fff  com.apple.DiskArbitration (2.7 - 2.7) <C53C1905-9BCF-3AE8-8BB3-C8A2C7DB7D25> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff2ecc9000 -     0x7fff2f097fff  com.apple.Foundation (6.9 - 1560.12) <B5DC275C-12C9-320A-A117-C8FE9034931A> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff2f108000 -     0x7fff2f138ff3  com.apple.GSS (4.0 - 2.0) <721B6FEF-9E0E-311B-8CAF-93ADEE2AE548> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff2f3be000 -     0x7fff2f450ff7  com.apple.framework.IOKit (2.0.2 - 1483.220.15) <B58031DE-A6B7-3685-840F-361670C06836> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff2f452000 -     0x7fff2f45cff7  com.apple.IOSurface (255.1 - 255.1) <538F0257-A408-36AF-AB1E-1D7037D6359E> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff2f4b3000 -     0x7fff2f651fff  com.apple.ImageIO.framework (3.3.0 - 1821.6.4.1) <00BF9654-021D-33C7-B681-461F3EF357FD> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff2f652000 -     0x7fff2f656ffb  libGIF.dylib (1821.6.4.1) <032CA0C2-8AAA-3D3F-8E61-25CE9267C2A7> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff2f657000 -     0x7fff2f73cfef  libJP2.dylib (1821.6.4.1) <FED43EEB-2B6C-32FC-94A2-297DA8CE4D87> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff2f73d000 -     0x7fff2f762ff7  libJPEG.dylib (1821.6.4.1) <DD334010-2B8D-3A5E-BC17-39A9D94AC92D> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff2fa35000 -     0x7fff2fa5bfe7  libPng.dylib (1821.6.4.1) <EBAAB8C0-33A7-3C13-B96C-8B6AB8287C7A> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff2fa5c000 -     0x7fff2fa5eff7  libRadiance.dylib (1821.6.4.1) <E9BCF8B3-DA07-3F80-B51F-5793BD38AE4A> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff2fa5f000 -     0x7fff2faadfff  libTIFF.dylib (1821.6.4.1) <C432D21E-2DA5-3B69-BD04-BA7B6DBEAE2F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff30b4a000 -     0x7fff30b63fff  com.apple.Kerberos (3.0 - 1) <8BE3D524-257D-3663-A937-F1AC76BDF4D9> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff30b64000 -     0x7fff30b99ffb  com.apple.LDAPFramework (2.4.28 - 194.5) <DC361FB9-4B59-311E-8CC5-07FF9A9C673F> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP\r\n    0x7fff31584000 -     0x7fff31617fff  com.apple.Metal (157.60 - 157.60) <B38C577A-CD24-30AD-A396-219945949F39> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff31634000 -     0x7fff31654ff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <A9E87429-4788-3B2F-B970-4052F16C5961> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff31655000 -     0x7fff316d3ff7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <80DE2FD1-85DB-3E98-98BD-F22A2600DD25> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff316d4000 -     0x7fff316fcfff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <49039DEE-D0EC-33FF-BE10-997A520D2E38> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff316fd000 -     0x7fff3182fff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <425D1FA4-17A3-3D00-8BE4-7A682FF279B5> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff31830000 -     0x7fff3184bff7  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <BB1651A0-05CD-3F97-8355-39CD326C0AFD> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff3184c000 -     0x7fff3184cff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <3910EC50-5B16-3695-B867-741E3B54FA8B> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff32a4b000 -     0x7fff32a57ffb  com.apple.NetFS (6.0 - 4.0) <529E29A9-5E77-3A8C-A982-CF55F949FE5D> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff35517000 -     0x7fff3556fff7  com.apple.opencl (2.12.7 - 2.12.7) <CCAC9774-C4BF-33C1-AC87-F2AEB972632F> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff35570000 -     0x7fff3558cff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <7E4EFF02-2596-31E6-88DE-29C89E2837E4> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff3558d000 -     0x7fff35599ffb  com.apple.OpenDirectory (10.14 - 207.200.4) <52A3918E-0F7A-33FD-87EE-21A37B37D13B> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff35efc000 -     0x7fff35efefff  libCVMSPluginSupport.dylib (17.0.37) <E47B2819-913A-3588-A3F5-CE3EDA8551A2> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff35eff000 -     0x7fff35f04ff3  libCoreFSCache.dylib (163.20) <BF8F04DD-C1A1-3D2A-BF3F-639FE907E28D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff35f05000 -     0x7fff35f09fff  libCoreVMClient.dylib (163.20) <45A2C724-F3D1-316A-9A41-CAB8E2A390EC> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff35f0a000 -     0x7fff35f12ffb  libGFXShared.dylib (17.0.37) <C26CA5C7-8DFC-3BE9-9873-C7A51F139FB0> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff35f13000 -     0x7fff35f1efff  libGL.dylib (17.0.37) <8DCB2714-ECB1-39EC-931D-C58D9E91B51C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff35f1f000 -     0x7fff35f59fef  libGLImage.dylib (17.0.37) <B64C775F-C64F-35D7-8179-1E4F20E76BA3> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff360cd000 -     0x7fff3610afff  libGLU.dylib (17.0.37) <B0D434EF-F5AC-3C0A-84DF-FFAFC57F3759> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff36aba000 -     0x7fff36ac9ff3  com.apple.opengl (17.0.37 - 17.0.37) <6BCCA53E-5621-32ED-BA9A-38B1C2499ED5> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff37925000 -     0x7fff37b7dfff  com.apple.QuartzCore (1.11 - 694.22.4.1) <1F5A49A9-370C-311B-B67C-DEA6DF6D2983> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff383cb000 -     0x7fff386f1ff7  com.apple.security (7.0 - 58286.220.15) <6725D63D-378F-3751-8602-3122016E4AA4> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff386f2000 -     0x7fff38781fff  com.apple.securityfoundation (6.0 - 55185.200.14) <236BACD7-163F-3F35-B710-2C62988AA251> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff387b3000 -     0x7fff387b7ff3  com.apple.xpc.ServiceManagement (1.0 - 1) <C200EC23-CAFB-33E8-AF3D-5B36420A21B1> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff38b74000 -     0x7fff38be4ff3  com.apple.SystemConfiguration (1.17 - 1.17) <EED5BC9B-CE8D-343C-BCDC-04A79F704828> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff3be4b000 -     0x7fff3bef0fe7  com.apple.APFS (1.0 - 1) <E00222C4-E8CF-302A-8AF3-E8BB9B1C3B0E> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff3c93a000 -     0x7fff3c93bff3  com.apple.AggregateDictionary (1.0 - 1) <1DEBBE36-8945-3AD8-BD48-2850AD845711> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff3d23f000 -     0x7fff3d24efcf  com.apple.AppleFSCompression (96.200.3 - 1.0) <E093776E-C367-3CCF-BFD5-623476A89E9A> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff3d398000 -     0x7fff3d3e1ff3  com.apple.AppleJPEG (1.0 - 1) <9A690E6E-F987-3660-BED6-B1A4D1906B6C> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff3d62e000 -     0x7fff3d632ff7  com.apple.AppleSRP (5.0 - 1) <B8E2BEC9-FAFB-3E26-BF26-E2E58C545006> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP\r\n    0x7fff3d633000 -     0x7fff3d65bff7  com.apple.applesauce (1.0 - ???) <60BB16D6-DE7E-356A-B9DE-F73EE179934A> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff3d7c1000 -     0x7fff3d7d7ffb  com.apple.AssertionServices (1.0 - 1) <8FB0D908-6C46-3399-92D6-4E7D4B5F4F19> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff3df87000 -     0x7fff3df90ff3  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <972F41B3-7DF7-3BF1-ACCA-A093A4328ADF> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff3e034000 -     0x7fff3e0a5ffb  com.apple.BaseBoard (360.24 - 360.24) <AC0E4924-994E-3B54-869C-C831B4DE0136> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff3fc56000 -     0x7fff3fc5ffff  com.apple.CommonAuth (4.0 - 2.0) <93CF1D80-A3A8-378B-9DF7-BF17A206C57D> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff40756000 -     0x7fff4075ffff  com.apple.frameworks.CoreDaemon (1.3 - 1.3) <8D971ACD-6A26-30A9-9C5B-BCBF60A661F1> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon\r\n    0x7fff40971000 -     0x7fff40985fff  com.apple.CoreEmoji (1.0 - 69.19.8) <E909BE8D-AE0C-327E-BE0A-D60B1F4012A4> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff40f5b000 -     0x7fff40fcdff7  com.apple.CoreNLP (1.0 - 130.15.22) <401F5284-A984-32A1-A547-CC8156381070> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff41d49000 -     0x7fff41d4dff7  com.apple.DSExternalDisplay (3.1 - 380) <B6B26BB3-2DC9-34D0-817E-EB612432EC96> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff43078000 -     0x7fff434a0fff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <CCBC466A-1AD4-3B0B-80B2-D6CFCBB37FC0> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff48468000 -     0x7fff4846dff7  com.apple.GPUWrangler (3.25.6 - 3.25.6) <F65BC9B4-77AB-3254-8432-9F7D3B0E169E> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff492d3000 -     0x7fff492e2fff  com.apple.GraphVisualizer (1.0 - 5) <C7040CD7-6CAB-3878-B29E-21F1665341D0> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff49433000 -     0x7fff494a8fff  com.apple.Heimdal (4.0 - 2.0) <D3A3285B-A45D-38A9-A4E9-D58D76674071> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff4a894000 -     0x7fff4a89bffb  com.apple.IOAccelerator (400.27 - 400.27) <6FA8A133-57A7-3C35-BF94-8469B09885FB> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff4a89f000 -     0x7fff4a8b8fff  com.apple.IOPresentment (1.0 - 42.6) <C115E88F-5E16-3804-8ACD-29C0F8895EFA> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff4afc9000 -     0x7fff4b0c0fff  com.apple.LanguageModeling (1.0 - 159.15.15) <E524CC46-42C7-3046-AD6C-5D5D768EA478> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff4b0c1000 -     0x7fff4b102ff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <90C1CFE1-9935-3F4F-8A9B-1DD697F2FF3D> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff4b109000 -     0x7fff4b10fff7  com.apple.LinguisticData (1.0 - 238.15.29) <A8DEE139-5D20-3BAC-AF5E-4E5E0C42C795> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff4be6b000 -     0x7fff4be93ffb  com.apple.spotlight.metadata.utilities (1.0 - 1191.52) <38A9B11A-9D5C-3CCA-A163-EC17242FDC68> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff4be94000 -     0x7fff4bf26fff  com.apple.gpusw.MetalTools (1.0 - 1) <5B86F005-D12D-3B0B-8906-808926D3DA12> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff4c179000 -     0x7fff4c1a3ff7  com.apple.MultitouchSupport.framework (2410.5 - 2410.5) <8D87A3ED-4CBD-300F-92E3-B1B79D7E0BF3> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff4c416000 -     0x7fff4c420fff  com.apple.NetAuth (6.2 - 6.2) <55DC741A-A01A-380C-B2D3-244241DA1F2C> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff4ccec000 -     0x7fff4cd42fff  com.apple.OTSVG (1.0 - ???) <5F2E7A0E-384E-3545-A9D5-EC4406E92AF4> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff52a1b000 -     0x7fff52cccff3  com.apple.SkyLight (1.600.0 - 336.81.5) <DE7FD278-A178-3A5B-8A26-7295340A54BE> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff5489f000 -     0x7fff548acffb  com.apple.TCC (1.0 - 1) <B84E7234-A993-328C-A054-EFEB0402C55C> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff54c9f000 -     0x7fff54ca0fff  com.apple.TrustEvaluationAgent (2.0 - 31.200.1) <BD0BE410-E172-3585-82B2-869A1FE43092> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\r\n    0x7fff5688c000 -     0x7fff5688eff3  com.apple.loginsupport (1.0 - 1) <5F1E000D-0674-3413-AB3E-83F7974666FB> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff56b48000 -     0x7fff56b80fff  libCRFSuite.dylib (41.15.4) <62EDD39F-6D1B-334B-A9A2-5800714255BB> /usr/lib/libCRFSuite.dylib\r\n    0x7fff56b83000 -     0x7fff56b8eff7  libChineseTokenizer.dylib (28.15.3) <8CD1C213-7F62-3F02-BFB1-D0A5EFF92AB0> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff56c1f000 -     0x7fff56c20ff7  libDiagnosticMessagesClient.dylib (107) <C542CB3C-AA44-3D7F-B88C-79CC31B481AB> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff56c57000 -     0x7fff56e1aff7  libFosl_dynamic.dylib (18.3.2) <6EF1CB2A-2BDA-3458-B631-F794D72660FD> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff56e70000 -     0x7fff56e8ffff  libMobileGestalt.dylib (645.220.9) <F303B3D9-C6AD-30B9-9414-09DB34357E12> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff56e90000 -     0x7fff56e90fff  libOpenScriptingUtil.dylib (179) <0664670D-C7E1-3D27-814B-B9C445AAF0DC> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff56fd1000 -     0x7fff56fd2ffb  libSystem.B.dylib (1252.200.5) <D5AFCC78-2AC2-37EB-B0EF-BB00FD38ED00> /usr/lib/libSystem.B.dylib\r\n    0x7fff5705c000 -     0x7fff5705dfff  libThaiTokenizer.dylib (2.15.1) <A8235B04-F541-3856-BE2E-B58EE0483AD9> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff57070000 -     0x7fff57086ffb  libapple_nghttp2.dylib (1.24.1) <B8D45114-3868-3154-BC35-22597E3E7D8A> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff57087000 -     0x7fff570b0ffb  libarchive.2.dylib (54.200.3) <B47C54A0-3A30-374A-BD99-2304B9B0EC82> /usr/lib/libarchive.2.dylib\r\n    0x7fff57134000 -     0x7fff57134ff3  libauto.dylib (187) <01824E49-F2EF-3FC1-ABF3-782EFDF6CA17> /usr/lib/libauto.dylib\r\n    0x7fff5720b000 -     0x7fff5721bff3  libbsm.0.dylib (39.200.18) <5E5098D0-F7B2-32A1-8038-E709F6718D4E> /usr/lib/libbsm.0.dylib\r\n    0x7fff5721c000 -     0x7fff5722afff  libbz2.1.0.dylib (38.200.3) <4EE3C5E8-BEF3-3910-A231-B1AE2B437E01> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff5722b000 -     0x7fff57282ff7  libc++.1.dylib (400.9.4) <D4AB366F-48A9-3C7D-91BD-41198F69DD57> /usr/lib/libc++.1.dylib\r\n    0x7fff57283000 -     0x7fff57298fff  libc++abi.dylib (400.17) <BA948A32-9024-3E55-98D4-18E31F6AED25> /usr/lib/libc++abi.dylib\r\n    0x7fff57299000 -     0x7fff57299ff3  libcharset.1.dylib (51.200.6) <D998A58B-E4A8-3685-9A6A-43AFC28100EB> /usr/lib/libcharset.1.dylib\r\n    0x7fff5729a000 -     0x7fff572aaffb  libcmph.dylib (6.15.1) <5D776FF6-DF7F-3EDD-B920-C07ED76C672B> /usr/lib/libcmph.dylib\r\n    0x7fff572ab000 -     0x7fff572c3ffb  libcompression.dylib (52.200.13) <EA767836-CBDC-318D-AC14-963C90D6CC67> /usr/lib/libcompression.dylib\r\n    0x7fff5756e000 -     0x7fff57584fff  libcoretls.dylib (155.220.1) <3F98C144-397C-36A2-84F1-BB0D841D3D89> /usr/lib/libcoretls.dylib\r\n    0x7fff57585000 -     0x7fff57586ff3  libcoretls_cfhelpers.dylib (155.220.1) <0C190169-8EB8-3BA2-89BB-60265BB502F9> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff57a50000 -     0x7fff57be8ff7  libcrypto.42.dylib (22.200.4) <EFCEE49A-759B-3A9A-A164-ECD1A98D40F9> /usr/lib/libcrypto.42.dylib\r\n    0x7fff57bfd000 -     0x7fff57c53ffb  libcups.2.dylib (462.9) <51E06E95-891F-3B88-A8C3-35B514C57239> /usr/lib/libcups.2.dylib\r\n    0x7fff57c7d000 -     0x7fff57cd1ff3  libcurl.4.dylib (105.200.2) <607613FE-3D84-3035-9C79-C6F72AF287D7> /usr/lib/libcurl.4.dylib\r\n    0x7fff57d8b000 -     0x7fff57d8bfff  libenergytrace.dylib (17.200.1) <D62ED169-B91C-3CCB-ADF5-E66AE4007B51> /usr/lib/libenergytrace.dylib\r\n    0x7fff57dbd000 -     0x7fff57dc2ff7  libgermantok.dylib (17.15.2) <9CBF0658-E83B-32E6-B674-3EE72D22C041> /usr/lib/libgermantok.dylib\r\n    0x7fff57dc3000 -     0x7fff57dc8ff7  libheimdal-asn1.dylib (520.220.2) <5302394C-ECF0-3C3B-BA67-4830EEF3CC40> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff57df4000 -     0x7fff57ee5ff7  libiconv.2.dylib (51.200.6) <3240A278-F537-3EC8-BE0C-983797520A50> /usr/lib/libiconv.2.dylib\r\n    0x7fff57ee6000 -     0x7fff58149ffb  libicucore.A.dylib (62108.0.1) <969815D4-A345-31BB-82B7-0C3B58CA7E90> /usr/lib/libicucore.A.dylib\r\n    0x7fff58196000 -     0x7fff58197fff  liblangid.dylib (128.15.1) <F79B6250-C0B1-3E8E-851F-6CA33B4311A3> /usr/lib/liblangid.dylib\r\n    0x7fff58198000 -     0x7fff581b0fff  liblzma.5.dylib (10.200.3) <3ADDFA63-F37A-3C9C-91E4-58EE3113B9A1> /usr/lib/liblzma.5.dylib\r\n    0x7fff581c8000 -     0x7fff58278fff  libmecab.1.0.0.dylib (779.19.2) <314FE1B9-3B4E-3B89-A101-33CE7B78FCE6> /usr/lib/libmecab.1.0.0.dylib\r\n    0x7fff58279000 -     0x7fff584b6fff  libmecabra.dylib (779.19.2) <0ECEC3FC-935D-3EA5-8B3D-5CBD4E80AB78> /usr/lib/libmecabra.dylib\r\n    0x7fff5868e000 -     0x7fff589e6fff  libnetwork.dylib (1229.221.1) <CE7ACD18-109F-382E-963B-C68419E301A1> /usr/lib/libnetwork.dylib\r\n    0x7fff58a77000 -     0x7fff591fdfe7  libobjc.A.dylib (750.1) <9CE27EC3-3A12-35D1-8F2F-3550B9668259> /usr/lib/libobjc.A.dylib\r\n    0x7fff59210000 -     0x7fff59214ffb  libpam.2.dylib (22.200.1) <8C419238-675A-3C41-B8D4-95E391CA630F> /usr/lib/libpam.2.dylib\r\n    0x7fff59217000 -     0x7fff5924dff7  libpcap.A.dylib (79.200.4) <5939AB23-B2A9-3C03-B6C1-4F0E5A21D9FC> /usr/lib/libpcap.A.dylib\r\n    0x7fff59367000 -     0x7fff5937fffb  libresolv.9.dylib (65.200.2) <0FEAEB01-B926-37FA-AB47-99BAC481C10B> /usr/lib/libresolv.9.dylib\r\n    0x7fff593be000 -     0x7fff593d0ff7  libsasl2.2.dylib (211) <205CC13E-4ED7-3CE9-987F-12B28C6115A7> /usr/lib/libsasl2.2.dylib\r\n    0x7fff593d3000 -     0x7fff595aafe7  libsqlite3.dylib (274.20) <4434B695-BC65-30D6-AFED-1B6488DB3D2E> /usr/lib/libsqlite3.dylib\r\n    0x7fff596ad000 -     0x7fff596fafff  libssl.44.dylib (22.200.4) <CF4931A6-5928-3E2B-8E31-1854F36B0C19> /usr/lib/libssl.44.dylib\r\n    0x7fff59837000 -     0x7fff5983affb  libutil.dylib (51.200.4) <91EE9BF4-FB06-3260-B502-7EFDAD5AF59B> /usr/lib/libutil.dylib\r\n    0x7fff5983b000 -     0x7fff59848fff  libxar.1.dylib (404) <4B4D0206-0B62-3E89-AD07-E7BB9E4DFA68> /usr/lib/libxar.1.dylib\r\n    0x7fff5984d000 -     0x7fff59930fff  libxml2.2.dylib (32.8) <1CE77741-2E67-34B6-BB9F-B8E043966FCE> /usr/lib/libxml2.2.dylib\r\n    0x7fff59931000 -     0x7fff59959ff3  libxslt.1.dylib (16.1) <F191E8B9-7530-30CA-873B-2FA2BF2D6374> /usr/lib/libxslt.1.dylib\r\n    0x7fff5995a000 -     0x7fff5996cffb  libz.1.dylib (70.200.4) <99A3D725-8388-38B4-B66C-5E9006E6F072> /usr/lib/libz.1.dylib\r\n    0x7fff599dd000 -     0x7fff599e1ff3  libcache.dylib (81) <FE21A7E9-DBEB-33AC-836B-785AD036ACF4> /usr/lib/system/libcache.dylib\r\n    0x7fff599e2000 -     0x7fff599ecff3  libcommonCrypto.dylib (60118.220.1) <1099E427-6E81-3059-87AF-6F5FD81CA998> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff599ed000 -     0x7fff599f4fff  libcompiler_rt.dylib (63.4) <A4D9CF37-D076-3CE9-95F1-DA89DA1601B6> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff599f5000 -     0x7fff599feff3  libcopyfile.dylib (146.200.3) <4BCDADBF-79F5-3829-B47D-64DA0D44BCBF> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff599ff000 -     0x7fff59a83fdf  libcorecrypto.dylib (602.220.6) <E1046E01-A2FD-35B4-B018-ACC372F3880E> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff59b0a000 -     0x7fff59b44ff7  libdispatch.dylib (1008.220.2) <D8B56783-152A-34A8-94E9-8E6BAE049384> /usr/lib/system/libdispatch.dylib\r\n    0x7fff59b45000 -     0x7fff59b74fff  libdyld.dylib (635.2) <1B79A5CE-125F-301F-A441-C1869573AED0> /usr/lib/system/libdyld.dylib\r\n    0x7fff59b75000 -     0x7fff59b75ffb  libkeymgr.dylib (30) <A73AA788-C35C-3284-BFCA-95B1BBDF0CF3> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff59b76000 -     0x7fff59b82ff7  libkxld.dylib (4903.221.2) <16D75C5C-584A-3848-84C0-3BFB312AEB92> /usr/lib/system/libkxld.dylib\r\n    0x7fff59b83000 -     0x7fff59b83ff7  liblaunch.dylib (1336.220.5) <95EB6EAF-2DC5-344F-BADB-CA4E35E4E503> /usr/lib/system/liblaunch.dylib\r\n    0x7fff59b84000 -     0x7fff59b89fff  libmacho.dylib (921) <ECC4E97C-575E-3A08-8191-BF02D7D4E637> /usr/lib/system/libmacho.dylib\r\n    0x7fff59b8a000 -     0x7fff59b8cffb  libquarantine.dylib (86.220.1) <6AE5AEEC-A9FD-3CF8-92DD-12B5AFBE12DE> /usr/lib/system/libquarantine.dylib\r\n    0x7fff59b8d000 -     0x7fff59b8eff3  libremovefile.dylib (45.200.2) <D74A307B-3DC7-3992-B16C-DACB8207BE13> /usr/lib/system/libremovefile.dylib\r\n    0x7fff59b8f000 -     0x7fff59ba6ff3  libsystem_asl.dylib (356.200.4) <EC9D8AD4-E5CB-3765-804A-9E1E9DC045D2> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff59ba7000 -     0x7fff59ba7fff  libsystem_blocks.dylib (73) <26419398-C30C-30F1-B656-A92AFA9560F6> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff59ba8000 -     0x7fff59c30fff  libsystem_c.dylib (1272.200.26) <3DEEE96E-6DF6-35AD-8654-D69AC26B907B> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff59c31000 -     0x7fff59c34ff7  libsystem_configuration.dylib (963.200.27) <02CC3996-B34E-333C-8806-AE2699D34424> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff59c35000 -     0x7fff59c38ff7  libsystem_coreservices.dylib (66) <254B6849-2C8F-302C-8616-B8324A11AB30> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff59c39000 -     0x7fff59c3fffb  libsystem_darwin.dylib (1272.200.26) <974E9EF7-DE72-34B7-B056-0A81C10DF8EB> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff59c40000 -     0x7fff59c46ff7  libsystem_dnssd.dylib (878.200.35) <FFC665AA-B257-35AD-BD8B-32FD42C2EEC1> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff59c47000 -     0x7fff59c93ff3  libsystem_info.dylib (517.200.9) <0707C387-D7DE-372E-8FF1-3DE5C91932D6> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff59c94000 -     0x7fff59cbbff7  libsystem_kernel.dylib (4903.221.2) <0E882078-7330-3B49-AA5D-3CDB5645A4E5> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff59cbc000 -     0x7fff59d07ff7  libsystem_m.dylib (3158.200.7) <43D1796B-954F-37D6-B1AC-9D80DF0655A2> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff59d08000 -     0x7fff59d2cff7  libsystem_malloc.dylib (166.220.1) <3B196122-4E0D-3E3F-AA3E-5115B976DE26> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff59d2d000 -     0x7fff59d38ff3  libsystem_networkextension.dylib (767.220.1) <C54EB8F6-F305-3452-8DB1-F7DA6859AF8C> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff59d39000 -     0x7fff59d40fff  libsystem_notify.dylib (172.200.21) <BCCB222F-DC64-3954-A836-DCCE6659CA5A> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff59d41000 -     0x7fff59d4afef  libsystem_platform.dylib (177.200.16) <B75B04AD-69FE-3ADE-84D2-C17972FC8F49> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff59d4b000 -     0x7fff59d55fff  libsystem_pthread.dylib (330.220.2) <4958273C-4273-3501-8137-E44249E10D9C> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff59d56000 -     0x7fff59d59ff7  libsystem_sandbox.dylib (851.220.9) <4D6433A8-C703-3ED9-82EB-B9E481A0FD2F> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff59d5a000 -     0x7fff59d5cff3  libsystem_secinit.dylib (30.220.1) <6C681113-8C48-3256-BEF6-0C3723DEB926> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff59d5d000 -     0x7fff59d64ff7  libsystem_symptoms.dylib (820.227.2) <3147D594-F41F-35FD-BF0B-6B8B66A407DE> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff59d65000 -     0x7fff59d7aff7  libsystem_trace.dylib (906.220.1) <D5045DC5-A165-3238-A470-1796F12BF84F> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff59d7c000 -     0x7fff59d81ffb  libunwind.dylib (35.4) <41222EF6-2233-3CF4-947A-15D48CB8C030> /usr/lib/system/libunwind.dylib\r\n    0x7fff59d82000 -     0x7fff59db2fff  libxpc.dylib (1336.220.5) <B2137772-E202-3656-A089-F6DD517007D5> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 38\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 127254126\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=342.6M resident=0K(0%) swapped_out_or_unallocated=342.6M(100%)\r\nWritable regions: Total=186.8M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=186.8M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        2 \r\nDispatch continuations            24.0M        2 \r\nKernel Alloc Once                    8K        2 \r\nMALLOC                           113.9M       15 \r\nMALLOC guard page                   16K        5 \r\nSTACK GUARD                       56.1M       24 \r\nStack                             18.9M       24 \r\nVM_ALLOCATE                        2.3G      463 \r\nVM_ALLOCATE (reserved)              64K        2         reserved VM address space (unallocated)\r\n__DATA                            16.6M      206 \r\n__FONT_DATA                          4K        2 \r\n__LINKEDIT                       217.8M       12 \r\n__TEXT                           124.8M      207 \r\n__UNICODE                          564K        2 \r\nmapped file                       54.4M      187 \r\nshared memory                       12K        4 \r\n===========                     =======  ======= \r\nTOTAL                              2.9G     1143 \r\nTOTAL, minus reserved VM space     2.9G     1143 \r\n\r\nModel: MacBookPro15,1, BootROM 220.220.102.0.0 (iBridge: 16.16.1065.0.0,0), 6 processors, Intel Core i9, 2.9 GHz, 32 GB, SMC \r\nGraphics: Intel UHD Graphics 630, Intel UHD Graphics 630, Built-In\r\nGraphics: Radeon Pro 555X, Radeon Pro 555X, PCIe\r\nMemory Module: BANK 0/ChannelA-DIMM0, 16 GB, DDR4, 2400 MHz, Micron, 16ATS2G64HZ-2G6B1 16ATS2G64HZ-2G6B1\r\nMemory Module: BANK 2/ChannelB-DIMM0, 16 GB, DDR4, 2400 MHz, Micron, 16ATS2G64HZ-2G6B1 16ATS2G64HZ-2G6B1\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x7BF), wl0: Sep 18 2018 16:24:57 version 9.130.86.7.32.6.21 FWID 01-83a3fe91\r\nBluetooth: Version 6.0.9f2, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en0\r\nUSB Device: USB 3.1 Bus\r\nUSB Device: iBridge Bus\r\nUSB Device: iBridge DFR brightness\r\nUSB Device: iBridge Display\r\nUSB Device: Apple Internal Keyboard / Trackpad\r\nUSB Device: Headset\r\nUSB Device: iBridge ALS\r\nUSB Device: iBridge FaceTime HD Camera (Built-in)\r\nUSB Device: iBridge\r\nThunderbolt Bus: MacBook Pro, Apple Inc., 34.6\r\nThunderbolt Bus: MacBook Pro, Apple Inc., 34.6\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22242","RelatedDescription":"Open issue \"SIGSEGV core dump, maybe during GC - 2.2.x, OSX\" (#22242)"},{"Id":"403566979","IsPullRequest":true,"CreatedAt":"2019-01-27T19:15:09","Actor":"stephentoub","Number":"22238","RawContent":null,"Title":"Remove several uses of VoidTaskResult ","State":"closed","Body":"Currently TrySetResult/Canceled/Exception live on `Task<T>`.  There's no reason `TrySetCanceled` and `TrySetException` need to live there, as they only access state from the base `Task`, and so can be moved down.  `TrySetResult` needs the `TResult`, however in a variety of cases `Task<T>` is used with a `VoidTaskResult`, and for such cases we can just have a parameterless `TrySetResult()` on the base class as well, which can be used any time there is no `TResult` or when `default(TResult)` is the desired result.  This lets us switch several cases where we were using `Task<VoidTaskResult>` to just be `Task`, which saves 8 bytes on the task instance on 64-bit.  It also avoids an Interlocked.Exchange as part of the TrySetResult call.\r\n\r\nThis primarily affects Task.Delay and the non-generic variants of Task.WhenAll, ValueTask.AsTask(), Task.FromCanceled, and Task.FromException.\r\n\r\ncc: @kouvel, @tarekgh, @benaadams, @jkotas","Url":"https://github.com/dotnet/coreclr/pull/22238","RelatedDescription":"Closed or merged PR \"Remove several uses of VoidTaskResult \" (#22238)"},{"Id":"403584437","IsPullRequest":false,"CreatedAt":"2019-01-27T19:13:02","Actor":"AndyAyersMS","Number":"22240","RawContent":null,"Title":"Examples where heavy intrinsics usage runs into internal jit limits on optimization","State":"open","Body":"Tracking issue for cases where heavy intrinsics usage leads to poor optimization because methods hit various internal jit limits.\r\n\r\n* #21794 inlining stops because the inlining budget was exceeded (partially addressed by #21893)\r\n* #22235 inlining stops after hitting \"too many locals\" limit\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22240","RelatedDescription":"Open issue \"Examples where heavy intrinsics usage runs into internal jit limits on optimization\" (#22240)"},{"Id":"403571810","IsPullRequest":false,"CreatedAt":"2019-01-27T16:59:17","Actor":"niklaskarl","Number":"22239","RawContent":null,"Title":"How does vtfixup get handled on Unix?","State":"open","Body":"I have a legacy project using .vtfixup to call into managed from a native application. I am wondering how porting to cross-platform can be accomplished the easiest way. Is it possible to load the assemblies using the Unix-Hosting interface and get the HMODULE (or dlopen equivalent) of the loaded assembly? Are exports and relocations applied on Unix at all or do I have to switch to CreateDelegate?","Url":"https://github.com/dotnet/coreclr/issues/22239","RelatedDescription":"Open issue \"How does vtfixup get handled on Unix?\" (#22239)"},{"Id":"403465335","IsPullRequest":true,"CreatedAt":"2019-01-27T16:11:58","Actor":"benaadams","Number":"22234","RawContent":null,"Title":"Shrink Task.Delay when used without Cancellation (2)","State":"closed","Body":"Follow up to https://github.com/dotnet/coreclr/pull/22233\r\n\r\n`Task.Delay` is commonly used without cancellation:\r\n\r\n`Task Delay(int)` - API Port 22.6%\r\n`Task Delay(TimeSpan)` - API Port 9.8%\r\n\r\n`Task Delay(int, CancellationToken)` - API Port 5.6%\r\n`Task Delay(TimeSpan, CancellationToken)` - API Port 9.3%\r\n\r\nThis shaves 24 bytes of allocation off that common path.\r\n\r\nUsing @SergeyTeplyakov's [ObjectLayoutInspector](https://github.com/SergeyTeplyakov/ObjectLayoutInspector) and local copies of the internal objects to make it easier to inspect.\r\n```csharp\r\nObjectLayoutInspector.TypeLayout.PrintLayout<DelayPromiseWithCancellation>(recursively: true);\r\nObjectLayoutInspector.TypeLayout.PrintLayout<DelayPromise>(recursively: true);\r\n```\r\n```\r\nType layout for 'DelayPromiseWithCancellation'\r\nSize: 88 bytes. Paddings: 7 bytes (%7 of empty space)\r\n|==============================================================|\r\n| Object Header (8 bytes)                                      |\r\n|--------------------------------------------------------------|\r\n| Method Table Ptr (8 bytes)                                   |\r\n|==============================================================|\r\n|   0-7: Delegate m_action (8 bytes)                           |\r\n|--------------------------------------------------------------|\r\n|  8-15: Object m_stateObject (8 bytes)                        |\r\n|--------------------------------------------------------------|\r\n| 16-23: TaskScheduler m_taskScheduler (8 bytes)               |\r\n|--------------------------------------------------------------|\r\n| 24-31: Object m_continuationObject (8 bytes)                 |\r\n|--------------------------------------------------------------|\r\n| 32-39: ContingentProperties m_contingentProperties (8 bytes) |\r\n|--------------------------------------------------------------|\r\n| 40-43: Int32 m_taskId (4 bytes)                              |\r\n|--------------------------------------------------------------|\r\n| 44-47: Int32 m_stateFlags (4 bytes)                          |\r\n|--------------------------------------------------------------|\r\n|    48: VoidTaskResult m_result (1 byte)                      |\r\n|--------------------------------------------------------------|\r\n| 49-55: padding (7 bytes)                                     |\r\n|--------------------------------------------------------------|\r\n| 56-63: TimerQueueTimer Timer (8 bytes)                       |\r\n|--------------------------------------------------------------|\r\n| 64-71: CancellationToken Token (8 bytes)                     |\r\n|--------------------------------------------------------------|\r\n| 72-87: CancellationTokenRegistration Registration (16 bytes) |\r\n| |=====================================|                      |\r\n| |   0-7: CallbackNode _node (8 bytes) |                      |\r\n| |-------------------------------------|                      |\r\n| |  8-15: Int64 _id (8 bytes)          |                      |\r\n| |=====================================|                      |\r\n|==============================================================|\r\n```\r\nTo\r\n```\r\nType layout for 'DelayPromise'\r\nSize: 64 bytes. Paddings: 7 bytes (%10 of empty space)\r\n|==============================================================|\r\n| Object Header (8 bytes)                                      |\r\n|--------------------------------------------------------------|\r\n| Method Table Ptr (8 bytes)                                   |\r\n|==============================================================|\r\n|   0-7: Delegate m_action (8 bytes)                           |\r\n|--------------------------------------------------------------|\r\n|  8-15: Object m_stateObject (8 bytes)                        |\r\n|--------------------------------------------------------------|\r\n| 16-23: TaskScheduler m_taskScheduler (8 bytes)               |\r\n|--------------------------------------------------------------|\r\n| 24-31: Object m_continuationObject (8 bytes)                 |\r\n|--------------------------------------------------------------|\r\n| 32-39: ContingentProperties m_contingentProperties (8 bytes) |\r\n|--------------------------------------------------------------|\r\n| 40-43: Int32 m_taskId (4 bytes)                              |\r\n|--------------------------------------------------------------|\r\n| 44-47: Int32 m_stateFlags (4 bytes)                          |\r\n|--------------------------------------------------------------|\r\n|    48: VoidTaskResult m_result (1 byte)                      |\r\n|--------------------------------------------------------------|\r\n| 49-55: padding (7 bytes)                                     |\r\n|--------------------------------------------------------------|\r\n| 56-63: TimerQueueTimer Timer (8 bytes)                       |\r\n|==============================================================|\r\n```\r\n\r\n/cc @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/22234","RelatedDescription":"Closed or merged PR \"Shrink Task.Delay when used without Cancellation (2)\" (#22234)"},{"Id":"403524244","IsPullRequest":true,"CreatedAt":"2019-01-27T09:29:40","Actor":"marek-safar","Number":"22236","RawContent":null,"Title":"Add Marshal ansi conversion to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22236","RelatedDescription":"Closed or merged PR \"Add Marshal ansi conversion to shared partition\" (#22236)"},{"Id":"403938872","IsPullRequest":false,"CreatedAt":"2018-12-25T05:03:15","Actor":"KexyBiscuit","Number":"22250","RawContent":null,"Title":"ComTypes.IConnectionPoint.Advise throws InvalidCastException","State":"open","Body":"### Symptoms\r\nThe code was like...\r\n```\r\nSomeComObject.ExampleEvent += new SomeComType.SomeDelegate(SomeMethod);\r\n```\r\n\r\n### Exception details\r\n```\r\nSystem.InvalidCastException\r\n  HResult=0x80004002\r\n  Message=Specified cast is not valid.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(Object pUnkSink, Int32& pdwCookie)\r\n   at System.Runtime.InteropServices.ComEventsSink.Advise(Object rcw)\r\n   at System.Runtime.InteropServices.ComEventsInfo.AddSink(Guid& iid)\r\n   at System.Runtime.InteropServices.ComEventsHelper.Combine(Object rcw, Guid iid, Int32 dispid, Delegate d)\r\n   at System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(Object target, Delegate handler)\r\n   (further StackTrace are omitted)\r\n```\r\n\r\n### Environment\r\n```\r\nC:\\Users\\KexyBiscuit> dotnet --version\r\n3.0.100-preview-009812\r\n```\r\n\r\n```\r\n<TargetFramework>netcoreapp3.0</TargetFramework>\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22250","RelatedDescription":"Open issue \"ComTypes.IConnectionPoint.Advise throws InvalidCastException\" (#22250)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"404010579","IsPullRequest":false,"CreatedAt":"2019-01-28T21:16:30","Actor":"dsplaisted","Number":"10666","RawContent":null,"Title":"Automatically reference shared frameworks from dependencies","State":"open","Body":"If a dependency of a project (either another project in the solution, or a NuGet package) depends on an optional shared framework, then the project with the dependency should also depend on that shared framework.\r\n\r\nThis depends on NuGet writing these dependencies to the assets file: https://github.com/NuGet/Home/issues/7342.  Once that is done we will raise them into framework references.\r\n\r\nWe will also need to download all targeting packs for the targeted framework in case we might need to depend on them via a transitive dependency (which we won't know about until after restore has happened).\r\n\r\nNOTE: We would also like to have a property to disable transitive framework references (which would then disable the automatic download of packages you might not need).","Url":"https://github.com/dotnet/cli/issues/10666","RelatedDescription":"Open issue \"Automatically reference shared frameworks from dependencies\" (#10666)"},{"Id":"403494079","IsPullRequest":false,"CreatedAt":"2019-01-28T18:51:14","Actor":"heaths","Number":"10660","RawContent":null,"Title":"Windows lies to dotnet.exe abouts the OS version","State":"closed","Body":"## Steps to reproduce\r\nOn Windows 10:\r\n1. `mkdir test`\r\n2. `cd test`\r\n3. `dotnet new console`\r\n4. Change Program.cs to call `Console.WriteLine(Environment.OSVersion.Version)`\r\n5. `dotnet run`\r\n\r\n## Expected  behavior\r\nSee \"10.0.17663\" (for example, on RS5)\r\n\r\n## Actual behavior\r\nSee \"6.2.9200.0\"\r\n\r\nThis is because dotnet.exe's RT_MANIFEST resource is auto-generated with only the `asInvoker` privilege level, but is lacking the `supportedOS`. Instead, you should consider authoring a manifest like the following and adding it to your dotnet.csproj as the `ApplicationManifest`:\r\n\r\n```xml\r\n<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\r\n<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>\r\n    <trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\">\r\n        <security>\r\n            <requestedPrivileges>\r\n                <requestedExecutionLevel level='asInvoker' uiAccess='false' />\r\n            </requestedPrivileges>\r\n        </security>\r\n    </trustInfo>\r\n    <compatibility xmlns=\"urn:schemas-microsoft-com:compatibility.v1\">\r\n        <application>\r\n            <supportedOS Id=\"{e2011457-1546-43c5-a5fe-008deee3d3f0}\" />\r\n            <supportedOS Id=\"{35138b9a-5d96-4fbd-8e2d-a2440225f93a}\" />\r\n            <supportedOS Id=\"{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}\" />\r\n            <supportedOS Id=\"{1f676c76-80e1-4239-95bb-83d0f6d0da78}\" />\r\n            <supportedOS Id=\"{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}\" />\r\n        </application>\r\n    </compatibility>\r\n</assembly>\r\n```\r\n\r\nThis is problematic when running `dotnet run` with a console app that needs the correct Windows OS version, such as a benchmark application using BenchmarkDotNet.\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.503\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.7\r\n  Commit:  cca5d72d48\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003121 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003156 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-rc4-004771 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview2-006127 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-25319-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n","Url":"https://github.com/dotnet/cli/issues/10660","RelatedDescription":"Closed issue \"Windows lies to dotnet.exe abouts the OS version\" (#10660)"},{"Id":"403601217","IsPullRequest":false,"CreatedAt":"2019-01-28T18:47:23","Actor":"matkoch","Number":"10665","RawContent":null,"Title":"Usability of 'dotnet new'","State":"closed","Body":"The usage experience with `dotnet new` is honestly a bit painful when working locally with custom templates. Specifically, I would like to ask for:\r\n\r\n- having the opportunity to uninstall templates by short name (I think that's unique)\r\n- being able to see a version in the list of installed templates\r\n- getting a _clear_ notification, whether a template was installed or uninstalled, instead of printing all available templates\r\n","Url":"https://github.com/dotnet/cli/issues/10665","RelatedDescription":"Closed issue \"Usability of 'dotnet new'\" (#10665)"},{"Id":"403549844","IsPullRequest":false,"CreatedAt":"2019-01-28T18:45:39","Actor":"axodox","Number":"10661","RawContent":null,"Title":"Dry run will create empty directories","State":"closed","Body":"## Steps to reproduce\r\nGo into an empty directory, then run this in cmd:\r\ndotnet new console -n ThisDirectoryShouldNotExist --dry-run\r\n\r\n## Expected  behavior\r\nno file or directory will be created when --dry-run is used\r\n\r\n## Actual behavior\r\nan empty directory named 'ThisDirectoryShouldNotExist' will be created\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]","Url":"https://github.com/dotnet/cli/issues/10661","RelatedDescription":"Closed issue \"Dry run will create empty directories\" (#10661)"},{"Id":"403469695","IsPullRequest":false,"CreatedAt":"2019-01-27T19:33:42","Actor":"ziffusion","Number":"10659","RawContent":null,"Title":"dotnet build output directory on Linux is different for root vs non-root","State":"closed","Body":"(dotnet sdk 2.2)\r\n\r\nFor root user:\r\n\r\n> ./bin/Debug/netcoreapp2.1/IEDSim.dll\r\n\r\nFor non-root user:\r\n\r\n> ./bin/**LINUX**/Debug/netcoreapp2.1/IEDSim.dll\r\n\r\nWhy is this, and is there a way to make this conistant?\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10659","RelatedDescription":"Closed issue \"dotnet build output directory on Linux is different for root vs non-root\" (#10659)"},{"Id":"403567211","IsPullRequest":false,"CreatedAt":"2019-01-27T16:12:39","Actor":"mklement0","Number":"10664","RawContent":null,"Title":"dotnet-install.sh and dotnet-install.ps1 do not work as advertised with respect to printing a repeatable command line (`-DryRun`)","State":"open","Body":"## Steps to reproduce\r\n\r\nNote: Assumes the presence presence of [`dotnet-script.ps1`](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1) (Windows) and [`dotnet-script.sh`](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.sh) (Unix) in the current dir.\r\n\r\nOn Unix:\r\n\r\n```sh\r\n./dotnet-install.sh -dryrun -runtime dotnet\r\n```\r\n\r\nOn Windows:\r\n\r\n```powershell\r\n./dotnet-install.ps1 -dryrun -runtime dotnet\r\n```\r\n\r\n## Expected  behavior\r\n\r\nBoth platforms (except for the filename extension):\r\n\r\n```none\r\ndotnet-install: Repeatable invocation: ./dotnet-install.ps1 -Runtime dotnet -Version 2.1.7\r\n```\r\n\r\nThat is:\r\n\r\n* The implied `latest` `-Version` should be reflected in an _explicit, resolved_ `-Version` argument.\r\n\r\n* All explicitly specified parameters should appear, except for `-dryrun`, with `-Version` _resolved_, if an _abstract_ value such as `latest` or `coherent` was specified.\r\n\r\n* Aside from `-Version`, no _omitted_ parameters should appear.\r\n\r\n## Actual behavior\r\n\r\nUnix:\r\n\r\n```none\r\n# ...\r\ndotnet-install: Repeatable invocation: ./dotnet-install.sh --version 2.1.7 --channel LTS --install-dir <auto>\r\n```\r\n\r\nThat is:\r\n\r\n* the `-runtime` argument is lost.\r\n\r\n* parameters that were at their default are now needlessly hard-coded; as an side `<auto>` used _unquoted_ will break the invocation.\r\n\r\nWindows:\r\n\r\n```none\r\n#...\r\ndotnet-install: Repeatable invocation: .\\.\\dotnet-install.ps1 -dryrun -runtime dotnet\r\n```\r\n\r\nThat is:\r\n\r\n* the `.\\` is unexpectedly doubled (because the script blindly prepends `.\\`\r\n\r\n* otherwise, the input command line is blindly echoed, which means that:\r\n  * `-dryrun` is needlessly present\r\n  * no version resolution is performed.\r\n\r\n## Environment data\r\n\r\nUsing the aforementioned scripts directly from this repo's master branch, as of 27 Jan 2019.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10664","RelatedDescription":"Open issue \"dotnet-install.sh and dotnet-install.ps1 do not work as advertised with respect to printing a repeatable command line (`-DryRun`)\" (#10664)"},{"Id":"403564948","IsPullRequest":false,"CreatedAt":"2019-01-27T15:51:53","Actor":"mklement0","Number":"10663","RawContent":null,"Title":"dotnet-install.ps1: `-Runtime aspnetcore` is broken","State":"open","Body":"## Steps to reproduce\r\n\r\nOn Windows, assumes the presence of [`dotnet-script.ps1`](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1) in the current dir.:\r\n\r\n```powershell\r\n.\\dotnet-script.ps1 -DryRun -Runtime aspnetcore\r\n```\r\n\r\n## Expected  behavior\r\n\r\nThe usual `-DryRun` output, listing the resolved download links.\r\n\r\n## Actual behavior\r\n\r\nThe following error occurs:\r\n\r\n```na\r\nIndex was outside the bounds of the array.\r\n```\r\n\r\nThe reason is that the version information reported by the feed has only _1_ line  in the case of `asspnetcore` (only a version number, not preceded by  another line with the commit hash), whereas the code assumes the presence of _2_ lines.\r\n\r\n## Environment data\r\n\r\nUsing the [script directly from the repo](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1) as of 27 Jan 2019.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10663","RelatedDescription":"Open issue \"dotnet-install.ps1: `-Runtime aspnetcore` is broken\" (#10663)"},{"Id":"403553093","IsPullRequest":true,"CreatedAt":"2019-01-27T13:50:32","Actor":"mayankbansal018","Number":"10662","RawContent":null,"Title":"Vstest honor nologo","State":"open","Body":"Passing /nologo user input to VSTest task\r\n\r\nRelated: https://github.com/Microsoft/vstest/pull/1717\r\n\r\nBug: https://github.com/Microsoft/vstest/issues/1701","Url":"https://github.com/dotnet/cli/pull/10662","RelatedDescription":"Open PR \"Vstest honor nologo\" (#10662)"},{"Id":"403415648","IsPullRequest":false,"CreatedAt":"2019-01-26T07:16:33","Actor":"John0King","Number":"10658","RawContent":null,"Title":"What's the equivalent of `dotnet publish -r win-x64`  in MSBuild","State":"open","Body":"the msbuild version won't restore during publish and cause a error when I separate the `dotnet restore` and `dotnet publish`\r\nthis is what I try \r\n\r\n```\r\n1. dotnet restore -r win-x64\r\n2. msbuild /p:RuntimeIdentifier=win-x64 /p:configuration=release\r\nthen  there is a error\r\nThe project was restored using Microsoft.NETCore.App version 2.2.0, but with current settings, version 2.2.1 would be used instead\r\n```\r\n\r\nhow do I solve this problem ?\r\n","Url":"https://github.com/dotnet/cli/issues/10658","RelatedDescription":"Open issue \"What's the equivalent of `dotnet publish -r win-x64`  in MSBuild\" (#10658)"},{"Id":"403377660","IsPullRequest":true,"CreatedAt":"2019-01-26T00:01:10","Actor":"dotnet-bot","Number":"10657","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10657","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10657)"},{"Id":"403328798","IsPullRequest":true,"CreatedAt":"2019-01-25T23:58:42","Actor":"livarcocc","Number":"10656","RawContent":null,"Title":"Adding CliCommandLineParser and cli-migrate to the list of Dependency uptake repos for the CLI.","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/10656","RelatedDescription":"Closed or merged PR \"Adding CliCommandLineParser and cli-migrate to the list of Dependency uptake repos for the CLI.\" (#10656)"},{"Id":"401095953","IsPullRequest":true,"CreatedAt":"2019-01-25T22:23:20","Actor":"dotnet-maestro[bot]","Number":"10640","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19067.2\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19067.2\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19067.2\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19067.2\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19073.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19073.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19074.2\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19075.2\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19075.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10640","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10640)"},{"Id":"403227817","IsPullRequest":false,"CreatedAt":"2019-01-25T20:56:15","Actor":"pepone","Number":"10655","RawContent":null,"Title":"Restore using msbuild produce different result than dotnet restore","State":"closed","Body":"I seeing some differences between `dotnet restore` and `dotnet msbuild /t:Restore`\r\nThe former generates\r\n\r\n```\r\n<Import Project=\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\NETStandard.Library.targets\" \r\nCondition=\"Exists('C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.3\\build\\netstandard2.0\\NETStandard.Library.targets')\" />`\r\n```\r\n\r\nThe later generates\r\n\r\n```\r\n<Import Project=\"$(NuGetPackageRoot)netstandard.library\\2.0.3\\build\\netstandard2.0\\NETStandard.Library.targets\"\r\nCondition=\"Exists('$(NuGetPackageRoot)netstandard.library\\2.0.3\\build\\netstandard2.0\\NETStandard.Library.targets')\" />\r\n```\r\nUsing the later fails at build time because netstandard.library package is not in $(NuGetPackageRoot)\r\n```\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/10655","RelatedDescription":"Closed issue \"Restore using msbuild produce different result than dotnet restore\" (#10655)"},{"Id":"403049251","IsPullRequest":true,"CreatedAt":"2019-01-25T20:54:38","Actor":"mayankbansal018","Number":"10654","RawContent":null,"Title":"TestPlatform insertion 16.0-preview-20190124-02","State":"closed","Body":"Testplatform insertion Rel Notes: https://github.com/Microsoft/vstest-docs/blob/master/docs/releases.md#1600-preview-20190124-02","Url":"https://github.com/dotnet/cli/pull/10654","RelatedDescription":"Closed or merged PR \"TestPlatform insertion 16.0-preview-20190124-02\" (#10654)"},{"Id":"402847937","IsPullRequest":true,"CreatedAt":"2019-01-24T21:21:10","Actor":"livarcocc","Number":"10653","RawContent":null,"Title":"Disable telemetry for a test explicitly to make sure cache files are not generated","State":"closed","Body":"Disable telemetry for a test explicitly to make sure cache files are not generated when we are validating the cache folder is not created.\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10653","RelatedDescription":"Closed or merged PR \"Disable telemetry for a test explicitly to make sure cache files are not generated\" (#10653)"},{"Id":"402697708","IsPullRequest":true,"CreatedAt":"2019-01-24T17:57:19","Actor":"dotnet-maestro[bot]","Number":"10652","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19073.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10652","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10652)"},{"Id":"402464408","IsPullRequest":true,"CreatedAt":"2019-01-23T22:47:46","Actor":"wli3","Number":"10651","RawContent":null,"Title":"Add --interactive to dotnet add reference","State":"open","Body":"need https://github.com/dotnet/cli/pull/10650 in first\r\n\r\npart of #10529 ","Url":"https://github.com/dotnet/cli/pull/10651","RelatedDescription":"Open PR \"Add --interactive to dotnet add reference\" (#10651)"},{"Id":"402405638","IsPullRequest":true,"CreatedAt":"2019-01-23T19:57:56","Actor":"wli3","Number":"10650","RawContent":null,"Title":"Add --interactive to dotnet run and test","State":"open","Body":"These 2 verb have verbosity set to quiet. And we need to change it to minimal during --interface\r\nto show the nuget plugin guide\r\n\r\npart of #10529 ","Url":"https://github.com/dotnet/cli/pull/10650","RelatedDescription":"Open PR \"Add --interactive to dotnet run and test\" (#10650)"},{"Id":"402318345","IsPullRequest":false,"CreatedAt":"2019-01-23T16:48:11","Actor":"spozniak","Number":"10649","RawContent":null,"Title":"MacOS runtime pkg installer does not include AspNetCore runtime","State":"closed","Body":"## Steps to reproduce\r\nDownload and install \r\nhttps://dotnet.microsoft.com/download/thank-you/dotnet-runtime-2.2.1-macos-x64-installer\r\nor\r\nhttps://dotnet.microsoft.com/download/thank-you/dotnet-runtime-2.2.1-macos-x64-installer\r\n\r\n## Expected  behavior\r\nShould contain two AspNetCore runtimes\r\n`Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]`\r\n`Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]`\r\n\r\n## Actual behavior\r\nNo AspNetCore shared runtimes installed. Because of that DotNetCore application fails with an error:\r\n\r\n> It was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.AspNetCore.All', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n      /usr/local/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n      https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n\r\nAs workaround it is possible to get them from binaries https://dotnet.microsoft.com/download/thank-you/dotnet-runtime-2.2.1-macos-x64-asp.net-core-runtime-binaries\r\nThis issue is similar to: https://github.com/dotnet/cli/issues/8529 but is related to runtime installer.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10649","RelatedDescription":"Closed issue \"MacOS runtime pkg installer does not include AspNetCore runtime\" (#10649)"},{"Id":"402080389","IsPullRequest":true,"CreatedAt":"2019-01-23T06:08:02","Actor":"dotnet-maestro[bot]","Number":"10648","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19072.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10648","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10648)"},{"Id":"402021447","IsPullRequest":false,"CreatedAt":"2019-01-23T00:56:16","Actor":"vijayrkn","Number":"10647","RawContent":null,"Title":"Different build behaviour for .net core web apps between local VS IDE and msbuild","State":"open","Body":"_From @fromorbonia on January 10, 2019 9:26_\n\n## Steps to reproduce\r\nPublishing a .NET Core web application with a FileSystem profile under VS2017 IDE creates a directory with an EXE (e.g. MyProject.exe)\r\nThere is a Jenkins build server running msbuild, which correctly picks up the publish profile that was used and configured locally.\r\nPlace the resulting files on a server (with IIS) and a previosuly configured Web Site, and the site should start correctly.\r\n\r\n## Expected  behavior\r\nI would expect the build server to create exactly the same set of files, as produced by the local VS2017 publish process. \r\nSpecifically, in this case, it should include MyProject.exe with a matching web.config file - so that once the files being copied to the IIS server the web site starts correctly.\r\n\r\n## Actual behavior\r\nThe publish folder contains an apphost.exe and MyProject.dll, but not an EXE. The web.config points to the EXE that does not exist:\r\n`<aspNetCore processPath=\".\\MyProject.exe\"...`\r\nThe web site doesn't not run on IIS.\r\n\r\n\r\n## Environment data\r\nAfter some rounds of changes, I've ended up with the following key values (when looking at similar other posts people have asked about so have mentioned here) in the pubxml file:\r\n```\r\n    <UseAppHost>true</UseAppHost>\r\n    <SelfContained>false</SelfContained>\r\n    <_IsPortable>true</_IsPortable>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n```\r\nI've only set UseAppHost to true, because it on the local VS IDE it creates the correct combination of web.config and files so that the web site starts correctly on deployment. I don't have a requirement to use or not use an apphost.exe file.\r\n\r\n\r\nFor the **local VS2017 IDE** this is:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.401\r\n Commit:    91b1c13032\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.3\r\n  Commit:  124038c13e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nFor the **Jenkins build** server:\r\n12:53:26 .NET Core SDK (reflecting any global.json):\r\n12:53:26  Version:   2.1.502\r\n12:53:26  Commit:    c74ce8f29f\r\n12:53:26 \r\n12:53:26 Runtime Environment:\r\n12:53:26  OS Name:     Windows\r\n12:53:26  OS Version:  10.0.14393\r\n12:53:26  OS Platform: Windows\r\n12:53:26  RID:         win10-x64\r\n12:53:26  Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n12:53:26 \r\n12:53:26 Host (useful for support):\r\n12:53:26   Version: 2.1.6\r\n12:53:26   Commit:  3f4f8eebd8\r\n12:53:26 \r\n12:53:26 .NET Core SDKs installed:\r\n12:53:26   2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n12:53:26   2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n12:53:26   2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n12:53:26 \r\n12:53:26 .NET Core runtimes installed:\r\n12:53:26   Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n12:53:26   Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n12:53:26   Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n12:53:26   Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n12:53:26   Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n12:53:26   Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\n\n_Copied from original issue: aspnet/websdk#470_","Url":"https://github.com/dotnet/cli/issues/10647","RelatedDescription":"Open issue \"Different build behaviour for .net core web apps between local VS IDE and msbuild\" (#10647)"},{"Id":"401994081","IsPullRequest":true,"CreatedAt":"2019-01-22T23:06:04","Actor":"mklement0","Number":"10646","RawContent":null,"Title":"WIP: Makes dotnet-install.ps1 x-platform","State":"open","Body":"Adds cross-edition and cross-platform support to the script, addresses #8278.","Url":"https://github.com/dotnet/cli/pull/10646","RelatedDescription":"Open PR \"WIP: Makes dotnet-install.ps1 x-platform\" (#10646)"},{"Id":"401981445","IsPullRequest":false,"CreatedAt":"2019-01-22T22:24:52","Actor":"danmosemsft","Number":"10645","RawContent":null,"Title":"Update dotnet-install.sh (and https://dot.net/v1/dotnet-install.sh) to allow other distros","State":"open","Body":"_From @danmosemsft on January 21, 2019 6:3_\n\nRepos using Arcade bootstrap with `eng/common/tools.sh` which bootstraps dotnet using a script from `https://dot.net/v1/dotnet-install.sh`. The script will fail on ubuntu 18.10.\r\n\r\ncorefxlab has its own (out of date) copy of this file, which I already updated here\r\nhttps://github.com/dotnet/corefxlab/pull/2636\r\n\r\nA similar change needs to go into `https://dot.net/v1/dotnet-install.sh` but I do not know where that file comes from. It is referenced here:\r\n\r\n```\r\neng/common/tools.sh:  local install_script_url=\"https://dot.net/v1/dotnet-install.sh\"\r\n```\r\nbuildtools has its own\r\n```\r\nbuildtools/bootstrap/bootstrap.sh:    download \"https://raw.githubusercontent.com/dotnet/cli/$dotNetInstallBranch/scripts/obtain/dotnet-install.sh\" \"$dotnetInstallPath\"\r\n```\r\n\n\n_Copied from original issue: dotnet/arcade#1848_","Url":"https://github.com/dotnet/cli/issues/10645","RelatedDescription":"Open issue \"Update dotnet-install.sh (and https://dot.net/v1/dotnet-install.sh) to allow other distros\" (#10645)"},{"Id":"401910031","IsPullRequest":false,"CreatedAt":"2019-01-22T19:07:49","Actor":"firelizzard18","Number":"10644","RawContent":null,"Title":".NET Core 3.0 SDK preview breaks dependencies","State":"open","Body":"I have a project that has `System.Runtime.InteropServices` in its dependency graph. I can't share the \r\nproject itself. Below is part of the `csproj`.\r\n\r\nIf I build this project (on Windows) with .NET Core 2.2 SDK, everything works. If I build it with .NET Core 3.0 SDK (preview), the build artifacts are missing `System.Runtime.InteropServices.dll`, which breaks my application.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net462</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'net462' \">\r\n    <Reference Include=\"System.ServiceProcess\" />\r\n    <Reference Include=\"System.Transactions\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Cors\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics.Elm\" Version=\"0.2.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Routing\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.HttpSys\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.IISIntegration\" Version=\"2.1.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel\" Version=\"2.1.3\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Console\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Portable.BouncyCastle\" Version=\"1.8.4\" />\r\n    <PackageReference Include=\"System.Data.SqlClient\" Version=\"4.6.0\" />\r\n    <PackageReference Include=\"System.Reflection.TypeExtensions\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <!-- lots of <ProjectReference>s -->\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10644","RelatedDescription":"Open issue \".NET Core 3.0 SDK preview breaks dependencies\" (#10644)"},{"Id":"401902646","IsPullRequest":false,"CreatedAt":"2019-01-22T19:00:51","Actor":"CreativeHouseDotOrg","Number":"10642","RawContent":null,"Title":"dotnet command line argument to terminate remaining build processes that are finished but dont exit","State":"closed","Body":"### Is your feature request related to a problem? Please describe.\r\nI'm am trying to `build` and `publish`... but unfortunately there are hanging processes in Task Manager .NET Core Host that lead to a publish error if i try to `dotnet publish`\r\n\r\n### Describe the solution you'd like\r\nI want the Remaining Tasks to close after the build OR publish process has ended.\r\n\r\n### Describe alternatives you've considered\r\nSince now i've been terminating them by hand, it would be good to have a `dotnet <command>` to terminate all open .Net Core Hosts that remain.\r\n\r\n### Additional context\r\n\r\nHere is a Screenshot of the remaining Tasks:\r\n\r\n![1](https://user-images.githubusercontent.com/4038603/51504064-f1e87780-1dde-11e9-8ebd-1424a7654113.PNG)\r\n\r\n![unbenannt](https://user-images.githubusercontent.com/4038603/51504000-9f0ec000-1dde-11e9-8419-0216e6945290.PNG)\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10642","RelatedDescription":"Closed issue \"dotnet command line argument to terminate remaining build processes that are finished but dont exit\" (#10642)"},{"Id":"401907244","IsPullRequest":false,"CreatedAt":"2019-01-22T19:00:13","Actor":"firelizzard18","Number":"10643","RawContent":null,"Title":"Cannot build a supported target when an unsupported target exists in `<TargetFrameworks>`","State":"open","Body":"## Steps to reproduce\r\n\r\n1. On Windows, install .NET Core 2.0 SDK and .NET Framework 4.7 SDK\r\n2. `dotnet new console -o test`\r\n3. `cd test`\r\n4. In `test.csproj`, replace `<TargetFramework>...` with `<TargetFrameworks>net47;netcoreapp3.0</TargetFrameworks>`\r\n5. `dotnet build -f net47`\r\n\r\n## Expected  behavior\r\n\r\nThe CLI builds and runs the project using the specified target framework. The fact that there are other valid target frameworks is ignored.\r\n\r\n## Actual behavior\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.6.84.34536 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.1.104\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(135,5): error : The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [C:\\Source\\temp\\build-test\\build-test.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.104)\r\n\r\nProduct Information:\r\n Version:            2.1.104\r\n Commit SHA-1 hash:  48ec687460\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.104\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.6\r\n  Build    : 74b1c703813c8910df5b96f304b0f2b78cdf194d\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10643","RelatedDescription":"Open issue \"Cannot build a supported target when an unsupported target exists in `<TargetFrameworks>`\" (#10643)"},{"Id":"401755135","IsPullRequest":true,"CreatedAt":"2019-01-22T13:34:42","Actor":"dotnet-maestro[bot]","Number":"10641","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19070.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10641","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10641)"},{"Id":"401047357","IsPullRequest":true,"CreatedAt":"2019-01-20T23:37:18","Actor":"dotnet-bot","Number":"10638","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10638","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#10638)"},{"Id":"401095922","IsPullRequest":true,"CreatedAt":"2019-01-20T13:35:00","Actor":"dotnet-maestro[bot]","Number":"10639","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19069.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10639","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10639)"},{"Id":"400934274","IsPullRequest":false,"CreatedAt":"2019-01-19T00:07:44","Actor":"nguerrera","Number":"10637","RawContent":null,"Title":"Investigate why CI fails often with TestCaptureOutput on","State":"open","Body":"We started getting failures like this all of the sudden very often in CI (no repro locally):\r\n\r\n```\r\nF:\\vsagent\\10\\s\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19065.6\\tools\\XUnit\\XUnit.targets(93,5): error MSB3491: Could not write lines to file \"F:\\vsagent\\10\\s\\artifacts\\log\\Release\\Microsoft.DotNet.Configurer.UnitTests_netcoreapp3.0_x64.log\". The process cannot access the file 'F:\\vsagent\\10\\s\\artifacts\\log\\Release\\Microsoft.DotNet.Configurer.UnitTests_netcoreapp3.0_x64.log' because it is being used by another process. [F:\\vsagent\\10\\s\\test\\Microsoft.DotNet.Configurer.UnitTests\\Microsoft.DotNet.Configurer.UnitTests.csproj]\r\n```\r\n\r\nThis is in a step in arcade where it appends to the log file that would have been written by a prior Exec with `> ` redirected output to it. Somehow the file is still in use. Maybe exec returned before the handle was released? But how?\r\n","Url":"https://github.com/dotnet/cli/issues/10637","RelatedDescription":"Open issue \"Investigate why CI fails often with TestCaptureOutput on\" (#10637)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"403988291","IsPullRequest":true,"CreatedAt":"2019-01-28T22:28:27","Actor":"wtgodbe","Number":"1062","RawContent":null,"Title":"Add build status badge to Repo home page","State":"closed","Body":"CC @danmosemsft @terrajobst @safern @ViktorHofer ","Url":"https://github.com/dotnet/standard/pull/1062","RelatedDescription":"Closed or merged PR \"Add build status badge to Repo home page\" (#1062)"},{"Id":"404008513","IsPullRequest":false,"CreatedAt":"2019-01-28T21:10:37","Actor":"wtgodbe","Number":"1063","RawContent":null,"Title":"Create shims for new netstandard2.1 assemblies","State":"open","Body":"We need to create Shims for the assemblies added to netstandard2.1 that weren't in netstandard2.0 - This means (as far as I know):\r\n\r\n- System.Memory\r\n- System.Threading.Tasks.Extensions\r\n- System.Reflection.DispatchProxy\r\n- System.Reflection.Emit\r\n- System.Reflection.Emit.ILGeneration\r\n- System.Reflection.Emit.Lightweight\r\n- System.Numerics.Vectors\r\n- System.Buffers\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1063","RelatedDescription":"Open issue \"Create shims for new netstandard2.1 assemblies\" (#1063)"},{"Id":"398564136","IsPullRequest":false,"CreatedAt":"2019-01-24T23:36:09","Actor":"netspiri","Number":"1052","RawContent":null,"Title":"Incorrect dll being copied","State":"closed","Body":"I have\r\n\r\n- ProjectA targeting .Net Standard 2.0 making use of nuget library where the dlls for the different frameworks are named differently\r\n- ProjectB targeting .Net Standard 2.0 references ProjectA\r\n- ProjectC targeting .Net Framework 4.7.2 references ProjectB\r\n- ProjectD targeting .Net Framework 4.7.2 and is a Console app referencing ProjectC\r\n\r\nIf I run ProjectD I get the infamous \"Could not load file or assembly\" for Aspose.Email.Core.dll.\r\n\r\nI played around <RestoreProjectStyle>PackageReference</RestoreProjectStyle> in ProjectC and ProjectD but this results in .net framework dll (i.e Aspose.Email.dll) being copied over from the nuget package and not the .net standard dll (Aspose.Email.Core.dll).  I did not play with binding redirects because I do not think this is related.\r\n\r\nI've migrated manually ProjectC and ProjectD to the new csproj style but this had no effect.\r\n\r\nI do not want to end up with ProjectD referencing the required dlls directly because there must \"the proper way of doing it\".\r\n\r\nI have therefore uploaded a clean barebones project to https://bitbucket.org/netspiri/projectreferencestest.git , so as to see how the experts would do it, in the hope that this might help others. \r\n\r\nI've attached also the output of msbuild ProjectD.csproj /t:rebuild /bl\r\n\r\nIt would be nice if the experts would guide trough thier troubleshooting process.\r\n\r\n[log.txt](https://github.com/dotnet/standard/files/2752202/log.txt)\r\n[msbuild.zip](https://github.com/dotnet/standard/files/2752203/msbuild.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1052","RelatedDescription":"Closed issue \"Incorrect dll being copied\" (#1052)"},{"Id":"402932649","IsPullRequest":true,"CreatedAt":"2019-01-24T23:21:33","Actor":"wtgodbe","Number":"1060","RawContent":null,"Title":"Set StrongNameKeyID after import sdk.props","State":"closed","Body":"This allows us to set our own default for `StrongNameKeyID` rather than relying on the one from the SDK.\r\n\r\nCC @ericstj ","Url":"https://github.com/dotnet/standard/pull/1060","RelatedDescription":"Closed or merged PR \"Set StrongNameKeyID after import sdk.props\" (#1060)"},{"Id":"402860962","IsPullRequest":true,"CreatedAt":"2019-01-24T21:43:12","Actor":"terrajobst","Number":"1059","RawContent":null,"Title":"Add missing dummy fields","State":"closed","Body":"In ced9376c, we've added dummy fields for structs. Apparently, I missed these two in the diff.","Url":"https://github.com/dotnet/standard/pull/1059","RelatedDescription":"Closed or merged PR \"Add missing dummy fields\" (#1059)"},{"Id":"402275150","IsPullRequest":false,"CreatedAt":"2019-01-24T19:47:05","Actor":"jacobmohl","Number":"1056","RawContent":null,"Title":"Add support for HttpClient.PatchAsync()","State":"closed","Body":"It would make sense to support the HTTP Verb PATCH in HttpClient. Which for now is only supported in .Net Core 2.1 and forward with HttpClient.PatchAsync().","Url":"https://github.com/dotnet/standard/issues/1056","RelatedDescription":"Closed issue \"Add support for HttpClient.PatchAsync()\" (#1056)"},{"Id":"402847550","IsPullRequest":true,"CreatedAt":"2019-01-24T19:39:46","Actor":"wtgodbe","Number":"1058","RawContent":null,"Title":"Re-enable APICompat for netstandard1.x/2.0","State":"closed","Body":"This causes netstandard1.x/2.0 assets to be binplaced at `artifacts\\obj\\CompatShims\\ref` again, which will re-enable the APICompat runs for those TFMs. @ViktorHofer I noticed you removed this line here: https://github.com/dotnet/standard/pull/1040/files#diff-1fea8681058f11db0ecbfc2fc8a5be52L7 - was that intentional?","Url":"https://github.com/dotnet/standard/pull/1058","RelatedDescription":"Closed or merged PR \"Re-enable APICompat for netstandard1.x/2.0\" (#1058)"},{"Id":"400369663","IsPullRequest":false,"CreatedAt":"2019-01-24T19:21:03","Actor":"UnreachableCode","Number":"1055","RawContent":null,"Title":"Android implementation of HTTPClient throwing up java.io.IOException ","State":"closed","Body":"I believe this relates to the bug detailed in Xamarin's old Bugzilla:\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=41100\r\n\r\nand is also similar to the issue discussed here:\r\nhttps://github.com/square/okhttp/issues/1517\r\n\r\nHere is the main stacktrace of my issue:\r\n\r\nLoginProvider+<LoginAsync>d__1.MoveNext () C:\\source\\repos\\{MyApp}\\{MyApp}\\{MyApp}\\Services\\LoginProvider.cs:35\r\njava.io.IOException: unexpected end of stream on Connection{testclarity.i-menzies.com:443, proxy=DIRECT@ hostAddress=62.244.173.166 cipherSuite=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 protocol=http/1.1} (recycle count=0)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:210)\r\ncom.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\r\ncom.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:905)\r\ncom.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:789)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:443)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:388)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:501)\r\ncom.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\r\ncom.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\r\nCaused by: java.io.EOFException: \\n not found: size=0 content=...\r\ncom.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:200)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\r\n\r\nI have tried setting the connection closed header and setting chunked transfer encoding but neither of these fixes work. I would try to set the OkHTTP.setRetryOnConnectionFailure(true) but I don't think there is a way to do this in the referenced Java source.","Url":"https://github.com/dotnet/standard/issues/1055","RelatedDescription":"Closed issue \"Android implementation of HTTPClient throwing up java.io.IOException \" (#1055)"},{"Id":"402566640","IsPullRequest":true,"CreatedAt":"2019-01-24T06:55:33","Actor":"wtgodbe","Number":"1057","RawContent":null,"Title":"Dummy commit to trigger CI","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1057","RelatedDescription":"Closed or merged PR \"Dummy commit to trigger CI\" (#1057)"},{"Id":"400334291","IsPullRequest":false,"CreatedAt":"2019-01-18T13:36:41","Actor":"aday12345","Number":"1054","RawContent":null,"Title":".net standard 2.1 targeting question","State":"closed","Body":"i have the .net core 2.2 sdk installed and can target it with no issue, but should i be able to target the netStandard 2.1 library when creating a class library? i only see 2.0 as an option.","Url":"https://github.com/dotnet/standard/issues/1054","RelatedDescription":"Closed issue \".net standard 2.1 targeting question\" (#1054)"},{"Id":"396287501","IsPullRequest":false,"CreatedAt":"2019-01-17T10:59:36","Actor":"gpcaretti","Number":"1044","RawContent":null,"Title":"FAQ: how to understand a package is compatible with NETStandard","State":"closed","Body":"I am developing a library bases on .NETstandard 2.0.\r\n\r\nMy question is: if in my library I need to refer a class defined outside the .NETstandard library (e.g. the `System.ComponentModel.DataAnnotations.DataTypeAttribute` class), how do I understand if I do not break the multiplatfom compatibility of my library by referring the external library `System.ComponentModel.DataAnnotations`?","Url":"https://github.com/dotnet/standard/issues/1044","RelatedDescription":"Closed issue \"FAQ: how to understand a package is compatible with NETStandard\" (#1044)"},{"Id":"396610837","IsPullRequest":true,"CreatedAt":"2019-01-16T21:17:03","Actor":"wtgodbe","Number":"1047","RawContent":null,"Title":"Bump AssemblyVersion for nestandard.dll to 2.1.0.0","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/929\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1047","RelatedDescription":"Closed or merged PR \"Bump AssemblyVersion for nestandard.dll to 2.1.0.0\" (#1047)"},{"Id":"399549465","IsPullRequest":false,"CreatedAt":"2019-01-15T21:45:54","Actor":"kaby76","Number":"1053","RawContent":null,"Title":"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.","State":"open","Body":"I've started porting (rewriting) the Net Core framework to the GPU. Part of this very large task is to go through the framework and verify that it indeed satisfies the Net Standard specification because I really don't trust anything/anyone. So, I have several questions regarding Net Standard.\r\n\r\n1) According to Microsoft documentation (https://docs.microsoft.com/en-us/dotnet/standard/net-standard), “[t]he .NET Standard is a formal specification of .NET APIs that are intended to be available on all .NET implementations. The motivation behind the .NET Standard is establishing greater uniformity in the .NET ecosystem. ECMA 335 continues to establish uniformity for .NET implementation behavior, but there's no similar spec for the .NET Base Class Libraries (BCL) for .NET library implementations.”\r\n\r\nQ: Exactly where is the “formal specification” of the API? Is it the MD file for a particular version (e.g., https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_ref.md)? Is it the collection of C# files with stub implementations (e.g., the files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref)? Or, is it something else?\r\n\r\n2) Assuming that the C# files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref is the formal definition. I wrote a CSPROJ to build an assembly for the current state of the decls. Then, I wrote a program to go through a framework, following reference assemblies to implementation assemblies, and output a sorted list of all types, all methods, all attributes, for public decls. I compared the reference and implementation assemblies for Net Core with the Standard set forth in the C# code. And yes, there are some non-trivial differences, mostly because the standard is evolving.\r\n\r\nThe following are general questions of type equivalence.\r\n\r\nQ: If there's an attribute (\"[...]\") on a type is in Standard, but missing on the type in Core, does Core still satisfy the Standard?\r\n\r\nQ: If a method and/or type exists in Core, but not in Standard, does the implementation still satisfy the Standard? In other words, can an implementation provide \"extra\" and still satisfy Standard?\r\n\r\nThe full list of the type dump for Standard and Core assemblies is here (https://1drv.ms/f/s!Atb3HX_AxX9ZgaxT-m221N6ut285Vw).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1053","RelatedDescription":"Open issue \"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.\" (#1053)"},{"Id":"393267915","IsPullRequest":true,"CreatedAt":"2019-01-14T18:45:00","Actor":"ViktorHofer","Number":"1040","RawContent":null,"Title":"Remove the manual config system","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/1032","Url":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Closed or merged PR \"Remove the manual config system\" (#1040)"},{"Id":"392986163","IsPullRequest":false,"CreatedAt":"2019-01-14T18:45:00","Actor":"ViktorHofer","Number":"1032","RawContent":null,"Title":"Remove slim configuration system and stop overloading Configuration","State":"closed","Body":"We should stop overloading the `Configuration` property in favor of the right msbuild properties and remove the `ConfigurationGroup` property to enable native VS support and remove a lot of obsolete stuff.\r\n\r\n```\r\n  <PropertyGroup Condition=\"'$(Configuration)'==''\">\r\n    <ConfigurationGroup Condition=\"'$(ConfigurationGroup)'==''\">Debug</ConfigurationGroup>\r\n    <Configuration>$(ConfigurationGroup)</Configuration>\r\n    <Configuration Condition=\"'$(TargetGroup)'!=''\">$(TargetGroup)_$(Configuration)</Configuration>\r\n    <Configuration Condition=\"'$(OSGroup)'!='' and '$(OSGroup)'!='AnyOS'\">$(OSGroup)_$(Configuration)</Configuration>\r\n  </PropertyGroup>\r\n```\r\n\r\ncc @ericstj @wtgodbe ","Url":"https://github.com/dotnet/standard/issues/1032","RelatedDescription":"Closed issue \"Remove slim configuration system and stop overloading Configuration\" (#1032)"},{"Id":"396798571","IsPullRequest":false,"CreatedAt":"2019-01-11T01:19:54","Actor":"duncand","Number":"1050","RawContent":null,"Title":"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset","State":"closed","Body":"I'm looking to provide input on .NET Standard and this appears to be the best place.\r\n\r\nSee https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/ for reference.\r\n\r\nI propose that what is currently planned for .NET Standard 2.1 be pushed back to .NET Standard 2.2, and that .NET Standard 2.1 instead just have the subset of those changes that are implementable on .NET Framework.\r\n\r\nWhile going forward, .NET Standard after 2.0 is mainly adding new features that are not practical to implement in .NET Framework, some of the proposals for 2.1 contained bringing out some things that already existed but missed the 2.0 window.\r\n\r\nIf we do what I propose, then we have a last chance to increase the API surface that can run everywhere, before it is permanently shut out due to releasing a .NET Standard version that Framework can't run, given that each increasing Standard version is a superset of what came before.","Url":"https://github.com/dotnet/standard/issues/1050","RelatedDescription":"Closed issue \"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset\" (#1050)"},{"Id":"394796330","IsPullRequest":false,"CreatedAt":"2019-01-11T00:23:25","Actor":"MV10","Number":"1041","RawContent":null,"Title":"System.MathF missing in .NET Standard 2.1 README","State":"closed","Body":"Minor, but `System.MathF` is missing from the [README](https://github.com/dotnet/standard/blob/master/docs/planning/netstandard-2.1/README.md). I figured it would be in the Miscellaneous list at a minimum. (As I understand it, this is still on schedule for .NET Standard 2.1 per  https://github.com/dotnet/corefx/issues/15830, correct?)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1041","RelatedDescription":"Closed issue \"System.MathF missing in .NET Standard 2.1 README\" (#1041)"},{"Id":"396675175","IsPullRequest":false,"CreatedAt":"2019-01-11T00:22:05","Actor":"Entomy","Number":"1049","RawContent":null,"Title":"String Enhancements","State":"closed","Body":"In .NET Core >=2.1 there exists a `.Join()` method that takes strings and chars, and a `.Split()` method that takes strings and chars. However in .NET Standard, `.Join()` only accepts strings, and `.Split()` only accepts chars. This is an odd seeming, and inconvenient, limitation. Can this be added to a future version?","Url":"https://github.com/dotnet/standard/issues/1049","RelatedDescription":"Closed issue \"String Enhancements\" (#1049)"},{"Id":"397146216","IsPullRequest":false,"CreatedAt":"2019-01-08T23:57:44","Actor":"dsplaisted","Number":"1051","RawContent":null,"Title":"Create targeting pack for .NET Standard","State":"open","Body":"For .NET Core 3.0, we expect to separate targeting packs, which contain the assets needed at build time when targeting .NET Core 3.0 (for example, reference assemblies and intellisense documentation) from \"runtime packs\", which will include the platform-specific runtime components for .NET Core 3.  See dotnet/cli#10006, and [dotnet/designs#50](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e)\r\n\r\nWe will have targeting pack for each shared framework (.NET Core, ASP.NET Core, and WindowsDesktop), as well as for .NET Standard.  This issue tracks the work required a .NET Standard targeting pack.  Ideally, we should create targeting packs for both .NET Standard 2.1 and 2.0.\r\n\r\nThe work required includes:\r\n\r\n- A new NuGet package including the targeting pack assets.  This should include the reference assemblies, intellisense documentation, and platform manifest file.  The current straw man proposal for the package ID is `Microsoft.NETCore.App.Ref`\r\n- Installers for each supported installer format (msi, deb, pkg, and rpm), which lay out the targeting pack files under `<DOTNET_ROOT>/packs/<PackageId>/version`.  These installers will be bundled or depended on by the corresponding .NET Core SDK installers.\r\n\r\nSome of the details (such as package layout, names, etc) are still [under design](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e) and may change slightly.","Url":"https://github.com/dotnet/standard/issues/1051","RelatedDescription":"Open issue \"Create targeting pack for .NET Standard\" (#1051)"},{"Id":"396646204","IsPullRequest":true,"CreatedAt":"2019-01-07T22:02:02","Actor":"wtgodbe","Number":"1048","RawContent":null,"Title":" Move source items into src folder","State":"closed","Body":"With this, we group all source items into an `src` folder to match the convention of other repos. I've done a diff of the `artifacts` dir before & after this change to confirm that everything still looks like the same. @ViktorHofer @danmosemsft @terrajobst PTAL\r\n\r\nFixes https://github.com/dotnet/standard/issues/1037","Url":"https://github.com/dotnet/standard/pull/1048","RelatedDescription":"Closed or merged PR \" Move source items into src folder\" (#1048)"},{"Id":"393015237","IsPullRequest":false,"CreatedAt":"2019-01-07T22:02:02","Actor":"ViktorHofer","Number":"1037","RawContent":null,"Title":"Group source items in a src folder","State":"closed","Body":"We should move\r\n- netstandard\r\n- platforms\r\n- apicompat\r\n- dir.traversal.targets\r\n- package.builds\r\n- src.builds\r\n\r\ninto a `src` folder to align with other dotnet repos.\r\n\r\ncc @wtgodbe @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/issues/1037","RelatedDescription":"Closed issue \"Group source items in a src folder\" (#1037)"},{"Id":"396598897","IsPullRequest":true,"CreatedAt":"2019-01-07T18:47:02","Actor":"wtgodbe","Number":"1046","RawContent":null,"Title":"Update APICompat baseline","State":"closed","Body":"I see these updates to the APICompat baselines after building from clean - I've confirmed that they weren't present before https://github.com/dotnet/standard/commit/dbb3e847a6dd09a8c9ec0206463ed1b848a5c90b. I figured I'd open a PR to use first as an easy way to view the diff & discuss, then to take into master if we decide it's the right thing. @ViktorHofer did you notice these locally when fixing up APICompat/GenAPI?","Url":"https://github.com/dotnet/standard/pull/1046","RelatedDescription":"Closed or merged PR \"Update APICompat baseline\" (#1046)"},{"Id":"396591596","IsPullRequest":false,"CreatedAt":"2019-01-07T18:06:51","Actor":"wtgodbe","Number":"1045","RawContent":null,"Title":"Convert seed.sh/.cmd files to proj files & update GenAPI invocations","State":"open","Body":"We should convert files like https://github.com/dotnet/standard/blob/8ca3d4c0c9599186d50196781484312176a9b2ad/platforms/xamarin.android/seed.sh to `.proj` files that can be built on-demand (either by direct invocation of `dotnet msbuild`, or a wrapper .ps1/.sh script that builds the project). This way we'll have access to the up-to-date version of `GenAPI`. We should also update the invocation of GenAPI to match the new standard introduced by https://github.com/dotnet/arcade/pull/1676\r\n\r\nCC @ViktorHofer ","Url":"https://github.com/dotnet/standard/issues/1045","RelatedDescription":"Open issue \"Convert seed.sh/.cmd files to proj files & update GenAPI invocations\" (#1045)"},{"Id":"396025237","IsPullRequest":true,"CreatedAt":"2019-01-04T19:25:54","Actor":"ViktorHofer","Number":"1043","RawContent":null,"Title":"Fix GenAPI invocation with new args","State":"closed","Body":"Also need to use DARC to get a GenApi fix in.","Url":"https://github.com/dotnet/standard/pull/1043","RelatedDescription":"Closed or merged PR \"Fix GenAPI invocation with new args\" (#1043)"},{"Id":"395644781","IsPullRequest":true,"CreatedAt":"2019-01-04T16:29:48","Actor":"ViktorHofer","Number":"1042","RawContent":null,"Title":"Respect ApiCompat cmd changes","State":"closed","Body":"Depends on https://github.com/dotnet/arcade/pull/1676","Url":"https://github.com/dotnet/standard/pull/1042","RelatedDescription":"Closed or merged PR \"Respect ApiCompat cmd changes\" (#1042)"},{"Id":"393264404","IsPullRequest":true,"CreatedAt":"2018-12-26T21:14:18","Actor":"terrajobst","Number":"1039","RawContent":null,"Title":"Fix representation of enum values","State":"closed","Body":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***","Url":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Closed or merged PR \"Fix representation of enum values\" (#1039)"},{"Id":"393009607","IsPullRequest":false,"CreatedAt":"2018-12-21T01:08:29","Actor":"ViktorHofer","Number":"1036","RawContent":null,"Title":"Disable Jenkins","State":"closed","Body":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?","Url":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036)"},{"Id":"393171059","IsPullRequest":true,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1038","RawContent":null,"Title":"Add APICompat run for NetStandard2.0","State":"closed","Body":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029","Url":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Closed or merged PR \"Add APICompat run for NetStandard2.0\" (#1038)"},{"Id":"393005614","IsPullRequest":true,"CreatedAt":"2018-12-20T18:07:43","Actor":"ViktorHofer","Number":"1035","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\nFailing CI jobs are leftovers: https://github.com/dotnet/standard/issues/1036\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1035","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1035)"},{"Id":"393001679","IsPullRequest":true,"CreatedAt":"2018-12-20T11:31:22","Actor":"ViktorHofer","Number":"1034","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1034","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1034)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"404121436","IsPullRequest":false,"CreatedAt":"2019-01-29T04:49:55","Actor":"MkazemAkhgary","Number":"34919","RawContent":null,"Title":"Why SpinLock is not re-entrant?","State":"open","Body":"if spin lock has enough information to detect deadlock and throw exception, why is it not re-entrant? (or why there is no option to make it re-entrant).","Url":"https://github.com/dotnet/corefx/issues/34919","RelatedDescription":"Open issue \"Why SpinLock is not re-entrant?\" (#34919)"},{"Id":"404121054","IsPullRequest":false,"CreatedAt":"2019-01-29T04:47:33","Actor":"MkazemAkhgary","Number":"34918","RawContent":null,"Title":"mutable structs as readonly field should be a warning","State":"open","Body":"for beginners this behavior can be unexpected. (yes it happened to me before). especially if you are using a library and you are not sure if struct is safe to be readonly or not. for example SpinLock must not be readonly.\r\n\r\n```c#\r\nreadonly MutableStruct x; // make this a warning\r\n```\r\n\r\nIf struct is immutable (via c# 7.2 readonly keyword) its ok to have it as readonly field.","Url":"https://github.com/dotnet/corefx/issues/34918","RelatedDescription":"Open issue \"mutable structs as readonly field should be a warning\" (#34918)"},{"Id":"404079489","IsPullRequest":true,"CreatedAt":"2019-01-29T03:36:18","Actor":"Dotnet-GitSync-Bot","Number":"34915","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/34915","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34915)"},{"Id":"404099576","IsPullRequest":true,"CreatedAt":"2019-01-29T02:54:33","Actor":"grant-d","Number":"34917","RawContent":null,"Title":"[NO MERGE] BitOps analysis CoreFX (WIP)","State":"open","Body":"Update call sites for https://github.com/dotnet/coreclr/pull/22225\r\n\r\n\r\nNote that this PR will **not build** right now - it is being used to analyze the consolidation of call sites for https://github.com/dotnet/corefx/issues/32269.\r\n\r\ncc @tannergooding ","Url":"https://github.com/dotnet/corefx/pull/34917","RelatedDescription":"Open PR \"[NO MERGE] BitOps analysis CoreFX (WIP)\" (#34917)"},{"Id":"404097219","IsPullRequest":true,"CreatedAt":"2019-01-29T02:42:36","Actor":"dotnet-maestro-bot","Number":"34916","RawContent":null,"Title":"Update CoreFx to preview.19078.4 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34916","RelatedDescription":"Open PR \"Update CoreFx to preview.19078.4 (master)\" (#34916)"},{"Id":"404072392","IsPullRequest":true,"CreatedAt":"2019-01-29T02:24:56","Actor":"AustinWise","Number":"34914","RawContent":null,"Title":"Correct link to example review","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/34914","RelatedDescription":"Closed or merged PR \"Correct link to example review\" (#34914)"},{"Id":"403989119","IsPullRequest":true,"CreatedAt":"2019-01-29T01:18:35","Actor":"dotnet-maestro-bot","Number":"34907","RawContent":null,"Title":"Update CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview.19078.2, beta-27328-00, beta-27328-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34907","RelatedDescription":"Closed or merged PR \"Update CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview.19078.2, beta-27328-00, beta-27328-00, respectively (master)\" (#34907)"},{"Id":"404055026","IsPullRequest":true,"CreatedAt":"2019-01-28T23:34:01","Actor":"ViktorHofer","Number":"34913","RawContent":null,"Title":"Make global tools work with helix","State":"open","Body":"Depends on https://github.com/dotnet/arcade/pull/1897","Url":"https://github.com/dotnet/corefx/pull/34913","RelatedDescription":"Open PR \"Make global tools work with helix\" (#34913)"},{"Id":"404041746","IsPullRequest":false,"CreatedAt":"2019-01-28T22:46:51","Actor":"caesar1995","Number":"34912","RawContent":null,"Title":"Implement trailing headers support on SocketsHttpHandler","State":"open","Body":"gRPC (Google RPC) protocol uses HTTP trailers to send/receive metadata. On the client side, SocketsHttpHandler needs to implement support for trailing headers to [receive metadata.](https://grpc.io/docs/guides/concepts.html#client-streaming-rpc)\r\n\r\n```\r\nClient:\r\nGET /index.html\r\nTE: trailers (Indicates that the client is willing to accept trailer fields in a chunked transfer coding)\r\n\r\nServer:\r\nHTTP/1.1 200 OK \r\nContent-Type: text/plain \r\nTransfer-Encoding: chunked\r\nTrailer: Expires (Indicates what will be the additional fields)\r\n\r\n7\\r\\n \r\nNetwork\\r\\n \r\n0\\r\\n \r\nExpires: Wed, 21 Oct 2015 07:28:00 GMT\\r\\n (Here is the trailing header)\r\n\\r\\n\r\n```\r\n\r\n## API Proposal\r\nTo support trailing headers come with the response message, we need a new Property in `HttpResponseMessage` class.\r\n\r\n```c#\r\npublic HttpResponseHeaders TrailingHeaders\r\n{\r\n    get\r\n    {\r\n        if (_trailingHeaders == null)\r\n        {\r\n            _trailingHeaders = new HttpResponseHeaders();\r\n        }\r\n        return _trailingHeaders ;\r\n    }\r\n}\r\n```\r\n\r\n## Usage\r\nTrailers are part of the response body (chunked message), the information stored in `TrailingHeaders` field should be returned to developer after the underneath response stream is read - can be explicitly or implicitly.\r\n\r\nBy default, the `HttpCompletionOption` for response is `ResponseContentRead`, which indicates HttpClient operations (Get/Send) will be considered completed after reading the *entire* response message including the content. Therefore, we will have the trailing headers information ready implicitly.\r\n\r\nHowever, if developer wants to get response as soon as it's available (`HttpCompletionOption.ResponseHeadersRead`), he needs to issue an explicit read on the response content by:\r\n```c#\r\nHttpContent:\r\n    LoadIntoBufferAsync();\r\n    ReadAsStringAsync();\r\n    ReadAsByteArrayAsync();\r\n    ReadAsStreamAsync();\r\n```\r\n\r\n## Sample Code\r\n```c#\r\n// Response contents:\r\n\r\n// Headers.\r\n// Content-Type: text/plain\r\n// Transfer-Encoding: chunked\r\n// Trailer: MyCoolTrailerHeader, Hello\r\n\r\n// Body.\r\n// Microsoft\r\n// gRPC\r\n\r\n// Trailing Headers.\r\n// MyCoolTrailerHeader: info\r\n// Hello: World\r\n\r\nHttpClientHandler handler = new SocketsHttpHandler();\r\nvar client = new HttpClient(handler);\r\n\r\n// CASE 1: Default case.\r\nTask<HttpResponseMessage> getResponseTask = client.GetAsync(url);\r\nusing (HttpResponseMessage response = await getResponseTask)\r\n{\r\n    // Headers will always be available for a response message.\r\n    Assert.Contains(\"text/plain\", response.Headers.GetValues(\"Content-Type\"));\r\n    Assert.Contains(\"chunked\", response.Headers.GetValues(\"Transfer-Encoding\"));\r\n    Assert.Contains(\"MyCoolTrailerHeader\", response.Headers.GetValues(\"Trailer\"));\r\n    Assert.Contains(\"Hello\", response.Headers.GetValues(\"Trailer\"));\r\n\r\n    // The HttpClient.GetAsync() by default passed in HttpCompletionOption.ResponseContentRead.\r\n    // `TrailingHeaders` info will be ready when response is returned.\r\n    Assert.Contains(\"info\", response.TrailingHeaders.GetValues(\"MyCoolTrailerHeader\"));\r\n    Assert.Contains(\"World\", response.TrailingHeaders.GetValues(\"Hello\"));\r\n    \r\n    // Trailers should not be part of the content data.\r\n    string data = await response.Content.ReadAsStringAsync();\r\n    Assert.Contains(\"Microsoft\", data);\r\n    Assert.DoesNotContain(\"MyCoolTrailerHeader\", data);\r\n    Assert.DoesNotContain(\"amazingtrailer\", data);\r\n}\r\n\r\n// CASE 2: If HttpCompletionOption.ResponseHeadersRead is specified.\r\nTask<HttpResponseMessage> getResponseTask = client.GetAsync(url, HttpCompletionOption.ResponseHeadersRead);\r\nusing (HttpResponseMessage response = await getResponseTask)\r\n{\r\n    // Headers will always be available for a response message.\r\n    Assert.Contains(\"text/plain\", response.Headers.GetValues(\"Content-Type\"));\r\n    Assert.Contains(\"chunked\", response.Headers.GetValues(\"Transfer-Encoding\"));\r\n    Assert.Contains(\"MyCoolTrailerHeader\", response.Headers.GetValues(\"Trailer\"));\r\n    Assert.Contains(\"Hello\", response.Headers.GetValues(\"Trailer\"));\r\n\r\n    // Nothing in `TrailingHeaders` since we haven't read the body yet.\r\n    Assert.Equals(string.Empty, response.TrailingHeaders.toString());\r\n    \r\n    // Read the body content: ReadAsStringAsync().\r\n    // Trailers should not be part of the content data.\r\n    string data = await response.Content.ReadAsStringAsync();\r\n    Assert.Contains(\"Microsoft\", data);\r\n    Assert.DoesNotContain(\"MyCoolTrailerHeader\", data);\r\n    Assert.DoesNotContain(\"amazingtrailer\", data);\r\n\r\n    // Now `TrailingHeaders` info is ready.\r\n    Assert.Contains(\"info\", response.TrailingHeaders.GetValues(\"MyCoolTrailerHeader\"));\r\n    Assert.Contains(\"World\", response.TrailingHeaders.GetValues(\"Hello\"));\r\n}\r\n```\r\n\r\n## HTTP2\r\n\r\nThe TE header on the request can only contains `trailers` value. ([RFC 7540](https://tools.ietf.org/html/rfc7540#section-8.1.2.2))\r\n\r\n>The only exception to this is the TE header field, which MAY be\r\n   present in an HTTP/2 request; when it is, it MUST NOT contain any\r\n   value other than \"trailers\".\r\n\r\nNo additional API is needed for HTTP2.\r\n\r\ncc: @dotnet/ncl @geoffkizer @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/34912","RelatedDescription":"Open issue \"Implement trailing headers support on SocketsHttpHandler\" (#34912)"},{"Id":"404037335","IsPullRequest":true,"CreatedAt":"2019-01-28T22:32:38","Actor":"safern","Number":"34911","RawContent":null,"Title":"Change helix queues for package testing to be RS4","State":"open","Body":"RS2 is too old and since we only use it for package testing machines go idle really often that it slows by 20-30 mins the test execution.\r\n\r\ncc: @ericstj ","Url":"https://github.com/dotnet/corefx/pull/34911","RelatedDescription":"Open PR \"Change helix queues for package testing to be RS4\" (#34911)"},{"Id":"404035577","IsPullRequest":false,"CreatedAt":"2019-01-28T22:27:03","Actor":"TheBuzzSaw","Number":"34910","RawContent":null,"Title":"AnonymousPipeClientStream.ReadAsync only returns zero in Windows.","State":"open","Body":"This is my first contribution. I hope I'm in the right place. Feedback please. :)\r\n\r\nMy parent process has an `AnonymousPipeServerStream` with `PipeDirection.Out`. It spawns a child process, which creates an `AnonymousPipeClientStream` with `PipeDirection.In`. If the parent process calls `Dispose` on its stream, the child process observes this, and `ReadAsync` returns `0`. This is desired behavior, but it only works in Windows. In macOS and Linux, that call to `ReadAsync` _never returns_.\r\n\r\nI am unable to find any documentation that promises that closing an anonymous pipe results in the listening side returning `0`. So, this technically may not be a bug, but it is inconsistent.\r\n\r\nI wrote a program demonstrating the problem. It was a little long, so I put it into a gist: https://gist.github.com/TheBuzzSaw/69c16a9dad2b27857b0070008ac9fb0d\r\n\r\nI also wrote a program demonstrating the reverse: the parent process has `PipeDirection.In`, and the child process has `PipeDirection.Out`. In this scenario, `ReadAsync` _does_ return `0` in all operating systems in the parent process.","Url":"https://github.com/dotnet/corefx/issues/34910","RelatedDescription":"Open issue \"AnonymousPipeClientStream.ReadAsync only returns zero in Windows.\" (#34910)"},{"Id":"404025667","IsPullRequest":false,"CreatedAt":"2019-01-28T21:58:26","Actor":"SoerenBusse","Number":"34909","RawContent":null,"Title":"Unix process start - missing user groups","State":"open","Body":"Hey there,\r\n\r\nI've written a daemon which runs as root and starts some gui applications on a users desktop. For this I used the ProcessStartInfo.Username feature to start the subprocesses as a specific user. This sets the UID and the GID of the subprocess correctly. \r\n\r\nHowever the started process doesn't contain any additional groups which are assigned to this user. This is especially important when your machine is domain joined and you need to access files from the subprocess where only the additional group has access to. \r\n\r\nHave I missed something or is this not possible with the current code?\r\n\r\nWhen looking at the source code the native code doesn't execute the `setgroups()` method to set the additional groups.\r\nhttps://github.com/dotnet/corefx/blob/ea00d24e4caeb5b000ff716dd67315325877ca83/src/Native/Unix/System.Native/pal_process.c#L256\r\n\r\nI think the best way to fix this would be to add a native call to the `getgrouplist`\r\nhttp://man7.org/linux/man-pages/man3/getgrouplist.3.html\r\nand return it in the GetUserAndGroupIds method\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.Process/src/System/Diagnostics/Process.Unix.cs#L793\r\nwhich then passes the groups to the native `ForkAndExecuteProcess` method\r\n\r\nI would be very glad if this could be fixed soon, because it prevent the use of NetCore in our application.\r\n\r\n**Edit:**\r\nWhile experimenting with the process api I found out that a process started with a specific username set in ProcessInfo contains the group 0 (root) in it's process table:\r\n```\r\nName:\tbash\r\nUmask:\t0022\r\nState:\tS (sleeping)\r\nTgid:\t8932\r\nNgid:\t0\r\nPid:\t8932\r\nPPid:\t8903\r\nTracerPid:\t0\r\nUid:\t1001\t1001\t1001\t1001\r\nGid:\t1001\t1001\t1001\t1001\r\nFDSize:\t256\r\nGroups:\t0 \r\n```\r\nThis allows any subprocess to write to files where the root group has write permissions to. I don't think that this is an expected side effect when using this method.\r\n\r\nI think this might happen because of the missing setgroups so that it uses the group id of the parent process which is in my case root?","Url":"https://github.com/dotnet/corefx/issues/34909","RelatedDescription":"Open issue \"Unix process start - missing user groups\" (#34909)"},{"Id":"404016498","IsPullRequest":true,"CreatedAt":"2019-01-28T21:32:33","Actor":"dotnet-maestro-bot","Number":"34908","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-03131-06, uwp62-27322-01, servicing-27129-04, rel-27328-01, rel-27328-01, respectively (release/uwp6.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34908","RelatedDescription":"Open PR \"Update BuildTools, CoreClr, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-03131-06, uwp62-27322-01, servicing-27129-04, rel-27328-01, rel-27328-01, respectively (release/uwp6.2)\" (#34908)"},{"Id":"403717362","IsPullRequest":false,"CreatedAt":"2019-01-28T21:21:44","Actor":"filipnavara","Number":"34895","RawContent":null,"Title":"No new builds are published on MyGet","State":"closed","Body":"The last package on https://dotnet.myget.org/feed/dotnet-core/package/nuget/Microsoft.Private.CoreFx.NETCoreApp is from 23 Jan 2019. The lack of newer packages prevents me from ingesting new code in CoreRT.","Url":"https://github.com/dotnet/corefx/issues/34895","RelatedDescription":"Closed issue \"No new builds are published on MyGet\" (#34895)"},{"Id":"403949673","IsPullRequest":true,"CreatedAt":"2019-01-28T20:05:30","Actor":"safern","Number":"34903","RawContent":null,"Title":"Update arcade manually to 19078.1","State":"closed","Body":"Previous auto PR was pointing to .NET Tools - Latest, which last build into that channel was produced in 1/23 so it reverted the manual updates we had previously done, since we did them from .NET Tools - Validation channel. For now until preview2 @mmitche turned off the subscription. We will re-enable it once there is a newer build in .NET Tools - Latest.\r\n\r\ncc: @ViktorHofer @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/34903","RelatedDescription":"Closed or merged PR \"Update arcade manually to 19078.1\" (#34903)"},{"Id":"403887906","IsPullRequest":true,"CreatedAt":"2019-01-28T19:40:36","Actor":"ViktorHofer","Number":"34901","RawContent":null,"Title":"Disable coverage status checks for project and patch","State":"closed","Body":"As discussed, I will keep the ci and reach settings for now until I'm able to test the codecov integration.","Url":"https://github.com/dotnet/corefx/pull/34901","RelatedDescription":"Closed or merged PR \"Disable coverage status checks for project and patch\" (#34901)"},{"Id":"403825112","IsPullRequest":true,"CreatedAt":"2019-01-28T19:24:56","Actor":"stephentoub","Number":"34898","RawContent":null,"Title":"Add IAsyncDisposable implementations to refs","State":"closed","Body":"Apparently when I added the DisposeAsync methods to the refs, I didn't actually mark the corresponding types as implementing the interface.  This fixes that.\r\n\r\ncc: @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/34898","RelatedDescription":"Closed or merged PR \"Add IAsyncDisposable implementations to refs\" (#34898)"},{"Id":"403968810","IsPullRequest":false,"CreatedAt":"2019-01-28T19:23:38","Actor":"natemcmaster","Number":"34906","RawContent":null,"Title":"Duplication of corefx assemblies between the in-box shared frameworks: NETCore.App, WindowsDesktop.App, and AspNetCore.App","State":"open","Body":"We currently have overlap between the 3 in-box shared frameworks. There are three problems as a result of this:\r\n\r\n1. AspNetCore and WindowsDesktop contain the same assemblies. This might create problems later for conflict resolution at runtime and/or by the SDK. Both AspNetCore.App and WindowsDesktop.App include these in their **runtime** packs.\r\n\r\n\t- System.Security.Cryptography.Pkcs.dll\r\n\t- System.Security.Cryptography.Xml.dll\r\n\t- System.Security.Permissions.dll\r\n\t\r\n2. AspNetCore and WindowsDesktop ship references for assemblies found in Microsoft.NETCore.App at runtime. This could be a problem if we somehow end up with a mismatch between reference assemblies and runtime. Some of this appears to be a deliberate due to suppressing ref assemblies in corefx by setting `IsNetCoreAppRef=false`. As a result, both AspNetCore.App and WindowsDesktop.App include these in their **targeting** packs.\r\n\r\n\t- Microsoft.Win32.Registry.dll\r\n\t- System.Security.AccessControl.dll\r\n\t- System.Security.Cryptography.Cng.dll\r\n\t- System.Security.Cryptography.Pkcs.dll\r\n\t- System.Security.Cryptography.Xml.dll\r\n\t- System.Security.Permissions.dll\r\n\t- System.Security.Principal.Windows.dll\r\n\r\n3. Disk-space inefficiency. We're duplicating these assemblies in several places -- targeting packs, shared frameworks, and runtime packs.\r\n\r\ncc @ericstj @pakrym @DustinCampbell @davidfowl @nguerrera @dsplaisted ","Url":"https://github.com/dotnet/corefx/issues/34906","RelatedDescription":"Open issue \"Duplication of corefx assemblies between the in-box shared frameworks: NETCore.App, WindowsDesktop.App, and AspNetCore.App\" (#34906)"},{"Id":"403965387","IsPullRequest":false,"CreatedAt":"2019-01-28T19:15:08","Actor":"wfurt","Number":"34905","RawContent":null,"Title":"improve usability of SSL handshake exception","State":"open","Body":"There is growing number of cases (like #32976) where uses see something like:\r\n\r\n```\r\n---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n```\r\n\r\nFrom that, it is very difficult to diagnose real root cause \r\nIt would be nice if the exception can provide more specific reason. This may not be complete list but it would be nice to distinguish following cases:\r\n- wrong time\r\n- unknown/untrusted CA\r\n- name mismatch\r\n- CRL/OSCP revocation issues\r\n- custom verification callback denial\r\n- extended key usage violation or other attribute problems\r\n\r\n\r\n \r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34905","RelatedDescription":"Open issue \"improve usability of SSL handshake exception\" (#34905)"},{"Id":"403956334","IsPullRequest":false,"CreatedAt":"2019-01-28T19:08:07","Actor":"peterhuene","Number":"34904","RawContent":null,"Title":"Windows lies to dotnet.exe abouts the OS version","State":"closed","Body":"_From @heaths on January 26, 2019 23:13_\n\n## Steps to reproduce\r\nOn Windows 10:\r\n1. `mkdir test`\r\n2. `cd test`\r\n3. `dotnet new console`\r\n4. Change Program.cs to call `Console.WriteLine(Environment.OSVersion.Version)`\r\n5. `dotnet run`\r\n\r\n## Expected  behavior\r\nSee \"10.0.17663\" (for example, on RS5)\r\n\r\n## Actual behavior\r\nSee \"6.2.9200.0\"\r\n\r\nThis is because dotnet.exe's RT_MANIFEST resource is auto-generated with only the `asInvoker` privilege level, but is lacking the `supportedOS`. Instead, you should consider authoring a manifest like the following and adding it to your dotnet.csproj as the `ApplicationManifest`:\r\n\r\n```xml\r\n<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\r\n<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>\r\n    <trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\">\r\n        <security>\r\n            <requestedPrivileges>\r\n                <requestedExecutionLevel level='asInvoker' uiAccess='false' />\r\n            </requestedPrivileges>\r\n        </security>\r\n    </trustInfo>\r\n    <compatibility xmlns=\"urn:schemas-microsoft-com:compatibility.v1\">\r\n        <application>\r\n            <supportedOS Id=\"{e2011457-1546-43c5-a5fe-008deee3d3f0}\" />\r\n            <supportedOS Id=\"{35138b9a-5d96-4fbd-8e2d-a2440225f93a}\" />\r\n            <supportedOS Id=\"{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}\" />\r\n            <supportedOS Id=\"{1f676c76-80e1-4239-95bb-83d0f6d0da78}\" />\r\n            <supportedOS Id=\"{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}\" />\r\n        </application>\r\n    </compatibility>\r\n</assembly>\r\n```\r\n\r\nThis is problematic when running `dotnet run` with a console app that needs the correct Windows OS version, such as a benchmark application using BenchmarkDotNet.\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.503\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.7\r\n  Commit:  cca5d72d48\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003121 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003156 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-rc4-004771 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview2-006127 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-25319-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\n\n_Copied from original issue: dotnet/cli#10660_","Url":"https://github.com/dotnet/corefx/issues/34904","RelatedDescription":"Closed issue \"Windows lies to dotnet.exe abouts the OS version\" (#34904)"},{"Id":"403890240","IsPullRequest":false,"CreatedAt":"2019-01-28T16:12:42","Actor":"tannergooding","Number":"34902","RawContent":null,"Title":"Consider moving several HWIntrinsic instance methods to be extension methods","State":"open","Body":"As per https://github.com/dotnet/coreclr/issues/22235#issuecomment-457988077, moving several of the hardware intrinsic \"helper\" methods to be instance methods has caused a regression in certain code hot-paths due to additional locals being created in order to pass the `this` parameter.\r\n\r\nWe should look at making these extension methods instead, so that users still have the \"nice\" calling syntax but so that the code can still remain performant to call.","Url":"https://github.com/dotnet/corefx/issues/34902","RelatedDescription":"Open issue \"Consider moving several HWIntrinsic instance methods to be extension methods\" (#34902)"},{"Id":"403867706","IsPullRequest":true,"CreatedAt":"2019-01-28T15:26:37","Actor":"ViktorHofer","Number":"34900","RawContent":null,"Title":"Disable SourceLink locally","State":"open","Body":"For local builds we don't need source link and disable it by default.\r\nThat behavior can be overridden by passing `/p:EnableSourceLink=true`\r\nto the build.\r\n\r\nThis addresses the source link issue when generating coverage reports as discussed in an offline thread. We don't need to generate source link information in offline builds. I mentioned that in our last infra standup and no concerns were raised.","Url":"https://github.com/dotnet/corefx/pull/34900","RelatedDescription":"Open PR \"Disable SourceLink locally\" (#34900)"},{"Id":"403843798","IsPullRequest":false,"CreatedAt":"2019-01-28T14:35:47","Actor":"syedabidali","Number":"34899","RawContent":null,"Title":"Microsoft.XmlSerializer.Generator v2.0.0 not working","State":"open","Body":"why it picking up all the references, please suggest how can i resolve this for now , i removed the reference from dotnet CLI and configure it on Post Build event in VS 2017 but this run one after post built code , does removing the generated serializer.cs file.\r\n\r\n![image](https://user-images.githubusercontent.com/14038836/51842823-9284ed00-2333-11e9-91eb-f67d69206c9b.png)\r\n![image](https://user-images.githubusercontent.com/14038836/51842838-987ace00-2333-11e9-8c05-40cc4bc8c13e.png)\r\n","Url":"https://github.com/dotnet/corefx/issues/34899","RelatedDescription":"Open issue \"Microsoft.XmlSerializer.Generator v2.0.0 not working\" (#34899)"},{"Id":"403747987","IsPullRequest":true,"CreatedAt":"2019-01-28T14:15:02","Actor":"ViktorHofer","Number":"34896","RawContent":null,"Title":"Add codecov yml configuration","State":"closed","Body":"Adding a codecov.yml file to adjust some settings, most importantly the CI provider setting which is necessary as we will use helix to upload the reports.\r\n\r\nhttps://docs.codecov.io/docs/codecov-yaml","Url":"https://github.com/dotnet/corefx/pull/34896","RelatedDescription":"Closed or merged PR \"Add codecov yml configuration\" (#34896)"},{"Id":"403665677","IsPullRequest":true,"CreatedAt":"2019-01-28T14:05:05","Actor":"Dotnet-GitSync-Bot","Number":"34893","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @TomerWeisberg @benaadams","Url":"https://github.com/dotnet/corefx/pull/34893","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#34893)"},{"Id":"403767314","IsPullRequest":false,"CreatedAt":"2019-01-28T11:35:49","Actor":"Zheng-Li01","Number":"34897","RawContent":null,"Title":"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application","State":"closed","Body":"**OS:** RS4 X64\r\n**VS:** Visual Studio 2019 Version 16.0.0.0 Preview 4.0 [28526.15.d16.0stg]\r\n**.NET SDK:** .NET Core 3.0 3.0.100-preview-10184\r\n\r\n**More Info:**\r\n1. In .Net framework application adding the same code, no exception pops up.\r\n2. Replace Bitmap value = new Bitmap(64, 64) with Bitmap value = new Bitmap(\"C:\\\\Users\\\\v-jiaol\\\\Desktop\\\\new.png\") , no exception pops up.\r\n \r\n**Steps to Reproduce:**\r\n1. Create a Winforms .Net Core application by command: dotnet new winforms –o “xxx”.\r\n2. Write code to Form1.cs.\r\n  using System.Resources;\r\n  using System.Drawing;\r\n  Bitmap value = new Bitmap(64, 64);\r\n  String key = \"e\";\r\n  ResXResourceWriter writer = new ResXResourceWriter(\"ResxResourceWriter.resx\");\r\n  ResXDataNode node = new ResXDataNode(key, value);\r\n  writer.AddResource(node);\r\n3. Debug the application.\r\n\r\n**Actual:**\r\nWhen debugging to writer.AddResource(node), the exception pops up.\r\n![image](https://user-images.githubusercontent.com/38325459/51833317-0920eb00-2332-11e9-8948-614ef214eba3.png)\r\n\r\n\r\n \r\n\r\n \r\n\r\n**Expected:**\r\nNo exception pops up, application runs successfully.\r\n\r\n**Call Stack:**\r\nSystem.ArgumentNullException\r\nHResult=0x80004003\r\n Message=Value cannot be null.\r\n Source=System.Drawing.Common\r\nStackTrace:\r\nat System.Drawing.Image.Save(Stream stream, ImageCodecInfo encoder, EncoderParameters encoderParams)\r\nat System.Drawing.Image.Save(Stream stream, ImageFormat format)\r\nat System.Drawing.ImageConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)\r\nat System.ComponentModel.TypeConverter.ConvertTo(Object value, Type destinationType)\r\nat System.Resources.ResXDataNode.FillDataNodeInfoFromObject(DataNodeInfo nodeInfo, Object value)\r\nat System.Resources.ResXDataNode.GetDataNodeInfo()\r\n at System.Resources.ResXResourceWriter.AddResource(ResXDataNode node)\r\nat AddResourceconsole.Program.Main(String[] args) in C:\\Users\\v-jiaol\\Desktop\\WinformDemo\\AddResourceconsole\\Program.cs:line 31\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34897","RelatedDescription":"Closed issue \"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application\" (#34897)"},{"Id":"403710779","IsPullRequest":false,"CreatedAt":"2019-01-28T09:05:47","Actor":"ahsonkhan","Number":"34894","RawContent":null,"Title":"Provide an in-box implementation of IBufferWriter<byte> backed by a resizable byte array","State":"open","Body":"## Motivation\r\n\r\nThe `Utf8JsonWriter` is a ref struct which accepts `IBufferWriter<byte>` for synchronous writing. Today, we provide one implementation of this interface, `PipeWriter`. If the user wants to write to an array or stream, or wants to write asynchronously to an output sink other than `PipeWriter`, they end up implementing their own custom `IBufferWriter<byte>`. To enable writing JSON to an array or stream (sync/async) using the new `Utf8JsonWriter`, we need to provide a built-in implementation of `IBufferWriter<byte>` so that every caller doesn't have to write their own.\r\n\r\n## Proposed API\r\n\r\n``` C#\r\nnamespace System.Buffers\r\n{\r\n    // MemoryBufferWriter? BinaryBufferWriter?\r\n    // Is it fine to leave it non-generic (as bytes), given we need to write to the stream?\r\n    public class ArrayBufferWriter : IBufferWriter<byte>, IDisposable {\r\n\r\n        // struct or class? support custom ArrayPools? For the JSON scenario, it can't be a struct\r\n        public ArrayBufferWriter(int initialCapacity = 256);\r\n\r\n        // Implements IBufferWriter<byte>\r\n        public void Advance(int count);\r\n        public Memory<byte> GetMemory(int sizeHint = 0);\r\n        public Span<byte> GetSpan(int sizeHint = 0);\r\n\r\n        // Implements IDisposable\r\n        public void Dispose();\r\n        \r\n        public long BytesCommitted { get; } // Do we need this?\r\n        public int BytesWritten { get; } // Should this be int64 too, like BytesCommitted?\r\n\r\n        // What has been written to the output so far.\r\n        public Memory<byte> OutputAsMemory { get; } // Written? Formatted? SoFar suffix?\r\n        public Span<byte> OutputAsSpan { get; }\r\n        \r\n        // Resets state but doesn't return the underlying buffer back to the pool\r\n        public void Clear();\r\n\r\n        public void CopyTo(Stream stream);\r\n        public Task CopyToAsync(Stream stream, CancellationToken cancellationToken = default(CancellationToken));\r\n    }\r\n}\r\n```\r\n\r\n## Sample Usage\r\n\r\n```C#\r\nprivate static void WriteJsonToFile()\r\n{\r\n    using (var fileStream = File.Create(\"MyJsonFile.json\"))\r\n    using (var output = new ArrayBufferWriter())\r\n    {\r\n        var state = new JsonWriterState(options: new JsonWriterOptions { Indented = true });\r\n        var json = new Utf8JsonWriter(output, state);\r\n        json.WriteStartObject();\r\n        json.WriteString(\"message\", \"Hello, World!\", escape: true);\r\n        json.WriteEndObject();\r\n        json.Flush(isFinalBlock: true);\r\n        output.CopyTo(fileStream);\r\n    }\r\n}\r\n```\r\n\r\n```C#\r\nconst int IterationCount = 10_000_000;\r\nconst int SyncWriteThreshold = 1_000_000;\r\n\r\nprivate static async Task WriteJsonToFileAsync()\r\n{\r\n    using (var fileStream = File.Create(\"MyJsonFile.json\"))\r\n    using (var output = new ArrayBufferWriter())\r\n    {\r\n        var state = new JsonWriterState(options: new JsonWriterOptions { Indented = true });\r\n        long written = 0;\r\n\r\n        for (int j = 0; j < IterationCount; j++)\r\n        {\r\n            state = WriteJson(output, j, state);\r\n\r\n            written += state.BytesWritten;\r\n            if (written > SyncWriteThreshold)\r\n            {\r\n                await output.CopyToAsync(fileStream);\r\n                written = 0;\r\n            }\r\n        }\r\n\r\n        if (written != 0)\r\n        {\r\n            await output.CopyToAsync(fileStream);\r\n            written = 0;\r\n        }\r\n    }\r\n}\r\n\r\nprivate static JsonWriterState WriteJson(ArrayBufferWriter output, int j, JsonWriterState state)\r\n{\r\n    var json = new Utf8JsonWriter(output, state);\r\n\r\n    if (j == 0)\r\n    {\r\n        json.WriteStartObject();\r\n    }\r\n\r\n    json.WriteString(\"message\", \"Hello, World!\", escape: true);\r\n\r\n    if (j < IterationCount - 1)\r\n    {\r\n        json.Flush(isFinalBlock: false);\r\n    }\r\n    else\r\n    {\r\n        json.WriteEndObject();\r\n        json.Flush(isFinalBlock: true);\r\n    }\r\n\r\n    return json.GetCurrentState();\r\n}\r\n```\r\n**Microsoft.Extensions.DependencyModel:**\r\nhttps://github.com/dotnet/core-setup/blob/c304bb38c1462f0f1633fc7ed2c317dcc5c72c9c/src/managed/Microsoft.Extensions.DependencyModel/DependencyContextWriter.Utf8JsonWriter.cs#L15-L48\r\n```C#\r\npublic void Write(DependencyContext context, Stream stream)\r\n{\r\n    if (context == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(context));\r\n    }\r\n    if (stream == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(stream));\r\n    }\r\n    using (var bufferWriter = new ArrayBufferWriter())\r\n    {\r\n        Write(context, bufferWriter);\r\n        bufferWriter.CopyTo(stream);\r\n    }\r\n}\r\n\r\nprivate void Write(DependencyContext context, ArrayBufferWriter bufferWriter)\r\n{\r\n    var state = new JsonWriterState(options: new JsonWriterOptions { Indented = true });\r\n    var jsonWriter = new Utf8JsonWriter(bufferWriter, state);\r\n\r\n    jsonWriter.WriteStartObject();\r\n    WriteRuntimeTargetInfo(context, ref jsonWriter);\r\n    WriteCompilationOptions(context.CompilationOptions, ref jsonWriter);\r\n    WriteTargets(context, ref jsonWriter);\r\n    WriteLibraries(context, ref jsonWriter);\r\n    if (context.RuntimeGraph.Any())\r\n    {\r\n        WriteRuntimeGraph(context, ref jsonWriter);\r\n    }\r\n    jsonWriter.WriteEndObject();\r\n    jsonWriter.Flush();\r\n}\r\n```\r\n\r\n**Sample implementation of `ArrayBufferWriter`:**\r\nhttps://gist.github.com/ahsonkhan/1275dd34aaff4239cfdb7b213aa4ebe4\r\n\r\n## Open Questions\r\n\r\n- Are we fine with the type name `ArrayBufferWriter`?\r\n  - Can it continue to implement `IBufferWriter<byte>` specifically rather than be generic? It implements `IBufferWriter<byte>` since that's what the scenario requires (writing the underlying bytes to the stream).\r\n- Can we keep it as a class or should it be a struct? The `Utf8JsonWriter` accepts `IBufferWriter<byte>` so, as a struct, it would get boxed and the state changes won't be visible to the caller.\r\n- Should it support custom array pools that the caller passes in?\r\n- Should we remove `BytesCommitted` or is it useful?\r\n   - If we are keeping it, should we keep `BytesWritten` as `Int64` or is keeping it as `Int32` fine? `BytesWritten` will never be `> int.MaxValue`.\r\n- Anyone have suggestions for better names for `OutputAsMemory`/`OutputAsSpan`? \r\n\r\ncc @terrajobst, @davidfowl, @stephentoub, @KrzysztofCwalina, @steveharter, @bartonjs, @joshfree, @benaadams, @JeremyKuhne, @pakrym, @eerhardt  ","Url":"https://github.com/dotnet/corefx/issues/34894","RelatedDescription":"Open issue \"Provide an in-box implementation of IBufferWriter<byte> backed by a resizable byte array\" (#34894)"},{"Id":"403624948","IsPullRequest":true,"CreatedAt":"2019-01-28T06:17:58","Actor":"Dotnet-GitSync-Bot","Number":"34891","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corefx/pull/34891","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34891)"},{"Id":"403651729","IsPullRequest":false,"CreatedAt":"2019-01-28T05:00:34","Actor":"riverar","Number":"34892","RawContent":null,"Title":"System.IO.Compression.ZipArchive reads entire input stream before failing when non-Zip specified","State":"open","Body":"Consider this example with a large [sample cabinet file](http://go.microsoft.com/fwlink/p/?LinkID=74689):\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n    using (var z = new ZipArchive(File.OpenRead(@\"sample.cab\")))\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nZipArchive does not support Microsoft Cabinet files, so I expected a quick check of the magic `MSCF (4D 53 43 46)` would result in failure. Instead, ZipArchive consumes the entire input stream -- this could be a long time and prove to be costly on Azure Blob Storage-backed streams. The local file header signature is defined in the [ZIP file format specification](https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT) as 4 bytes: ```04 03 4b 50``` .\r\n\r\nEventually, ZipArchive will throw:\r\n```\r\nSystem.IO.InvalidDataException: 'End of Central Directory record could not be found.'\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/34892","RelatedDescription":"Open issue \"System.IO.Compression.ZipArchive reads entire input stream before failing when non-Zip specified\" (#34892)"},{"Id":"403597831","IsPullRequest":true,"CreatedAt":"2019-01-27T22:34:33","Actor":"Dotnet-GitSync-Bot","Number":"34890","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/34890","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#34890)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"404104430","IsPullRequest":true,"CreatedAt":"2019-01-29T03:18:43","Actor":"grant-d","Number":"32901","RawContent":null,"Title":"[NO MERGE] BitOps analysis Roslyn (WIP)","State":"open","Body":"Update call sites for https://github.com/dotnet/coreclr/pull/22225\r\n\r\nNote that this PR will **not build** right now - it is being used to analyze the consolidation of call sites for https://github.com/dotnet/corefx/issues/32269.\r\n\r\ncc @tannergooding ","Url":"https://github.com/dotnet/roslyn/pull/32901","RelatedDescription":"Open PR \"[NO MERGE] BitOps analysis Roslyn (WIP)\" (#32901)"},{"Id":"404096171","IsPullRequest":true,"CreatedAt":"2019-01-29T02:37:40","Actor":"tmat","Number":"32900","RawContent":null,"Title":"OptProf cleanup","State":"open","Body":"Infrastructure only change.","Url":"https://github.com/dotnet/roslyn/pull/32900","RelatedDescription":"Open PR \"OptProf cleanup\" (#32900)"},{"Id":"404087806","IsPullRequest":true,"CreatedAt":"2019-01-29T01:57:51","Actor":"333fred","Number":"32899","RawContent":null,"Title":"Generate top-level nullability rewriter.","State":"open","Body":"Generate a rewriter that will set the top-level nullability bits on `BoundExpression` given a map of expressions to TSWA.","Url":"https://github.com/dotnet/roslyn/pull/32899","RelatedDescription":"Open PR \"Generate top-level nullability rewriter.\" (#32899)"},{"Id":"404061370","IsPullRequest":true,"CreatedAt":"2019-01-29T01:30:13","Actor":"dotnet-bot","Number":"32892","RawContent":null,"Title":"Merge master to dev16.1-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into dev16.1-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-dev16.1-preview1\ngit reset --hard upstream/dev16.1-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-dev16.1-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32892","RelatedDescription":"Closed or merged PR \"Merge master to dev16.1-preview1\" (#32892)"},{"Id":"404061483","IsPullRequest":true,"CreatedAt":"2019-01-29T01:30:09","Actor":"dotnet-bot","Number":"32893","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32893","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32893)"},{"Id":"404079831","IsPullRequest":true,"CreatedAt":"2019-01-29T01:20:41","Actor":"dibarbet","Number":"32898","RawContent":null,"Title":"Issue 26640 Fix unnecessary cast warning in conditional expressions when required.","State":"open","Body":"For https://github.com/dotnet/roslyn/issues/26640\r\n\r\nThis makes the check for semantic changes look at the boxing result for the conditional expression - if it is boxed, the types being boxed should be the same in the original and speculated.  I'm not sure if this logic is correct, there might be case where this should not apply but I haven't thought of one.","Url":"https://github.com/dotnet/roslyn/pull/32898","RelatedDescription":"Open PR \"Issue 26640 Fix unnecessary cast warning in conditional expressions when required.\" (#32898)"},{"Id":"404076996","IsPullRequest":true,"CreatedAt":"2019-01-29T01:07:46","Actor":"JoeRobich","Number":"32897","RawContent":null,"Title":"Classify C# 8 ControlKeywords","State":"open","Body":"- classify `switch` keyword within SwitchExpression\r\n- classify `when` keyword within WhenClause\r\n- classify `throw` keyword within ThrowExpression\r\n\r\nFixes #32896","Url":"https://github.com/dotnet/roslyn/pull/32897","RelatedDescription":"Open PR \"Classify C# 8 ControlKeywords\" (#32897)"},{"Id":"404075338","IsPullRequest":false,"CreatedAt":"2019-01-29T01:00:40","Actor":"JoeRobich","Number":"32896","RawContent":null,"Title":"Switch keyword in switch expression is not classified as ControlKeyword","State":"open","Body":"Moved from [Developer Community issue](https://developercommunity.visualstudio.com/content/problem/437625/switch-keyword-in-switch-statement-is-not-colored.html):\r\n\r\nThe Preview 2 of Visual Studio 2019 brings an option to \"use enhanced colors for C# and Basic\", where flow-controlling keywords (`if`, `for`, `goto`, etc.) are colored pink. In the previously existing version of `switch` block the keyword switch is also colored as expected, however in the switch statement (in C# 8.0) the color of the keyword is still blue.\r\n\r\n![image](https://user-images.githubusercontent.com/611219/51876622-116f2b00-231e-11e9-9489-6e4402def837.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/32896","RelatedDescription":"Open issue \"Switch keyword in switch expression is not classified as ControlKeyword\" (#32896)"},{"Id":"403975235","IsPullRequest":true,"CreatedAt":"2019-01-29T00:39:06","Actor":"ryzngard","Number":"32880","RawContent":null,"Title":"Bail on null type information in GenerateDeconstructMethodCodeFixProvider","State":"closed","Body":"It's possible that a valid foreach statement has an invalid variable declaration syntax, which can result in no type information on calling `GetForEachStatementInfo`\r\n\r\nFixes #32510 ","Url":"https://github.com/dotnet/roslyn/pull/32880","RelatedDescription":"Closed or merged PR \"Bail on null type information in GenerateDeconstructMethodCodeFixProvider\" (#32880)"},{"Id":"403906170","IsPullRequest":true,"CreatedAt":"2019-01-29T00:36:12","Actor":"Therzok","Number":"32878","RawContent":null,"Title":"Remove redundant pattern check","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/32878","RelatedDescription":"Closed or merged PR \"Remove redundant pattern check\" (#32878)"},{"Id":"404067892","IsPullRequest":true,"CreatedAt":"2019-01-29T00:27:44","Actor":"mavasani","Number":"32895","RawContent":null,"Title":"Bail out for ref locals for unused value assignment analyzer","State":"open","Body":"We need points to analysis for properly analyzing unused assignments to ref locals, which is currently not supported.\r\nFixes #32855","Url":"https://github.com/dotnet/roslyn/pull/32895","RelatedDescription":"Open PR \"Bail out for ref locals for unused value assignment analyzer\" (#32895)"},{"Id":"404024531","IsPullRequest":true,"CreatedAt":"2019-01-29T00:08:55","Actor":"jaredpar","Number":"32887","RawContent":null,"Title":"Verifying a number of NRT bugs are fixed","State":"closed","Body":"Found a number of NRT bugs which are now fixed and added the appropriate verification. In the EE tests it was mostly ensuring the tests were run with the latest language version (now the default). ","Url":"https://github.com/dotnet/roslyn/pull/32887","RelatedDescription":"Closed or merged PR \"Verifying a number of NRT bugs are fixed\" (#32887)"},{"Id":"404061497","IsPullRequest":true,"CreatedAt":"2019-01-29T00:00:50","Actor":"dotnet-bot","Number":"32894","RawContent":null,"Title":"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32894","RelatedDescription":"Open PR \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#32894)"},{"Id":"403977686","IsPullRequest":false,"CreatedAt":"2019-01-28T23:16:11","Actor":"jcouv","Number":"32881","RawContent":null,"Title":"Representation of suppression in IOperation","State":"closed","Body":"With the change to remove the bound suppression node, the corresponding IOperation node was removed.\r\nA few options:\r\n- represent the suppression as a flag (like we do in the bound tree)\r\n- inject some IOperation nodes back in","Url":"https://github.com/dotnet/roslyn/issues/32881","RelatedDescription":"Closed issue \"Representation of suppression in IOperation\" (#32881)"},{"Id":"404048664","IsPullRequest":true,"CreatedAt":"2019-01-28T23:10:27","Actor":"CyrusNajmabadi","Number":"32891","RawContent":null,"Title":"Update usages of the source file name when copying a banner to a new file.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/32792","Url":"https://github.com/dotnet/roslyn/pull/32891","RelatedDescription":"Open PR \"Update usages of the source file name when copying a banner to a new file.\" (#32891)"},{"Id":"404047356","IsPullRequest":true,"CreatedAt":"2019-01-28T23:05:43","Actor":"genlu","Number":"32890","RawContent":null,"Title":"Handle string concat with no string literals in ConvertToInterpolatedString","State":"open","Body":"Fix #32864.\r\n\r\nI have considered a few different options based on this particular scenario, e.g. \r\n```cs\r\nvar x = 1 + (\"string\");\r\n```\r\n\r\n1. Provide refactoring to convert it to \r\n```cs\r\nvar x = $\"{1}{(\"string\")}\";\r\n```\r\n\r\n2. Provide refactoring that first removes unnecessary parentheses\r\n```cs\r\nvar x = $\"{1}string\";\r\n```\r\n\r\n3. Don't offer to \"convert to interpolated string\". User must explicitly remove unnecessary parentheses first.\r\n\r\nOption 1 is the simplest and most flexible (users might want the paren?). But once \"convert to interpolated string\" is selected first and then \"remove paren\", there's no way to flatten it to `${1}string` automatically.\r\n\r\nOption 2 and 3 would avoid this problem by limiting the action user can take.\r\n\r\nI ended up choosing Option 1 because (1) it's a very small change, with no behavior change to the refactoring, and (2) \"flatten interpolated string\" seems like a useful refactoring/codefix to have :)\r\n\r\n@dotnet/roslyn-ide @CyrusNajmabadi \r\n","Url":"https://github.com/dotnet/roslyn/pull/32890","RelatedDescription":"Open PR \"Handle string concat with no string literals in ConvertToInterpolatedString\" (#32890)"},{"Id":"404039750","IsPullRequest":false,"CreatedAt":"2019-01-28T22:40:15","Actor":"ivanbasov","Number":"32889","RawContent":null,"Title":"CSharpEditAndContinueAnalyzer.ClassifyUpdate of VariableDeclaratorSyntax. Cast exception on  (TypeDeclarationSyntax)oldNode.Parent.Parent.Parent;","State":"open","Body":"**Callstack reported**: \r\n```\r\nSystem.InvalidCastException: Unable to cast object of type 'Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax' to type 'Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax'.\r\n   at Microsoft.CodeAnalysis.CSharp.EditAndContinue.CSharpEditAndContinueAnalyzer.EditClassifier.ClassifyUpdate(VariableDeclaratorSyntax oldNode, VariableDeclaratorSyntax newNode)\r\n   at Microsoft.CodeAnalysis.CSharp.EditAndContinue.CSharpEditAndContinueAnalyzer.EditClassifier.ClassifyUpdate(SyntaxNode oldNode, SyntaxNode newNode)\r\n   at Microsoft.CodeAnalysis.CSharp.EditAndContinue.CSharpEditAndContinueAnalyzer.EditClassifier.ClassifyEdit()\r\n   at Microsoft.CodeAnalysis.CSharp.EditAndContinue.CSharpEditAndContinueAnalyzer.ReportSyntacticRudeEdits(List`1 diagnostics, Match`1 match, Edit`1 edit, Dictionary`2 editMap)\r\n   at Microsoft.CodeAnalysis.EditAndContinue.AbstractEditAndContinueAnalyzer.AnalyzeSyntax(EditScript`1 script, Dictionary`2 editMap, SourceText oldText, SourceText newText, DocumentId documentId, IActiveStatementTrackingService trackingService, ImmutableArray`1 oldActiveStatements, ActiveStatement[] newActiveStatements, ImmutableArray`1[] newExceptionRegions, List`1 updatedMethods, List`1 diagnostics)\r\n   at Microsoft.CodeAnalysis.EditAndContinue.AbstractEditAndContinueAnalyzer.<AnalyzeDocumentAsync>d__65.MoveNext()\r\n…\r\n```\r\n\r\nIt seems that \r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.CSharp.Features/EditAndContinue/CSharpEditAndContinueAnalyzer.cs,2491\r\nshould be changed from\r\n `   var fieldDeclaration = (FieldDeclarationSyntax)oldNode.Parent.Parent;`\r\nto\r\n`    var fieldDeclaration = (BaseFieldDeclarationSyntax)oldNode.Parent.Parent;`\r\n\r\nWe should add a unit test for this as well.\r\n","Url":"https://github.com/dotnet/roslyn/issues/32889","RelatedDescription":"Open issue \"CSharpEditAndContinueAnalyzer.ClassifyUpdate of VariableDeclaratorSyntax. Cast exception on  (TypeDeclarationSyntax)oldNode.Parent.Parent.Parent;\" (#32889)"},{"Id":"404033029","IsPullRequest":true,"CreatedAt":"2019-01-28T22:19:21","Actor":"RikkiGibson","Number":"32888","RawContent":null,"Title":"Basic syntax tests for readonly members","State":"open","Body":"Looking for feedback on some of this early work.\r\n\r\nMy understanding is that the possible \"readonly members\" include get accessors and methods on structs. Any other kinds of declarations I need to cover? \r\n\r\nI outlined how I think the entire development of this feature breaks down in https://github.com/dotnet/csharplang/issues/1710#issuecomment-458323864. Would also appreciate feedback on that.","Url":"https://github.com/dotnet/roslyn/pull/32888","RelatedDescription":"Open PR \"Basic syntax tests for readonly members\" (#32888)"},{"Id":"404020174","IsPullRequest":false,"CreatedAt":"2019-01-28T21:43:08","Actor":"z3nth10n","Number":"32886","RawContent":null,"Title":"ILRepack + EasyConsole makes code execution unreachable","State":"open","Body":"**Version Used**: 2.10.0.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a console application (.NET Framework).\r\n2. Import [this NuGet package](https://www.nuget.org/packages/ILRepack.Lib.MSBuild.Task/).\r\n3. Import [this source code](https://github.com/splttingatms/EasyConsole.git) into your newly created project.\r\n4. Then create these three classes:\r\n\r\nDemoProgram.cs\r\n```\r\nusing EasyConsole;\r\n\r\nnamespace PoC\r\n{\r\n    internal class DemoProgram : Program\r\n    {\r\n        public DemoProgram()\r\n            : base(\"EasyConsole Demo\", breadcrumbHeader: true)\r\n        {\r\n            AddPage(new MainPage(this));\r\n            AddPage(new ExamplePage(this));\r\n\r\n            SetPage<MainPage>();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nMainPage.cs\r\n```\r\nusing EasyConsole;\r\nusing System;\r\n\r\nnamespace PoC\r\n{\r\n    public class MainPage : MenuPage\r\n    {\r\n        public MainPage(Program program)\r\n        : base(\"Main Page\", program,\r\n          new Option(\"one\", () => program.NavigateTo<ExamplePage>()),\r\n          new Option(\"two\", () => program.NavigateTo<ExamplePage>()),\r\n          new Option(\"three\", () => program.NavigateTo<ExamplePage>()),\r\n          new Option(\"Exit\", () => Environment.Exit(0)))\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nExamplePage.cs\r\n```\r\nusing EasyConsole;\r\nusing System.Linq;\r\n\r\nnamespace PoC\r\n{\r\n    public class ExamplePage : MenuPage\r\n    {\r\n        public ExamplePage(Program program)\r\n            : base(\"Example Page\", program, Enumerable.Range(0, 3).Select(i => new Option($\"Option {i}\", null)).ToArray())\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n5. Navigate to `Program.cs` inside of `<your EasyConsole lib path>\\Program.cs`, and put a breakpoint in line 98.\r\n\r\n6. Compile in Release mode and then execute it.\r\n\r\n7. Navigate to any page (by typing 1, 2 or 3), then, let the breakpoint enter in action.\r\n\r\n8. Start pressing F10 (next step).\r\n\r\n**Expected Behavior**:\r\n\r\nYou should be able to put the execution step at `CurrentPage.Display();` line (this will read another input, by this reason this will never reach the return statement).\r\n\r\n**Actual Behavior**:\r\n\r\nBefore Display() is reached, execution is ended. Also, you can try to put a `Console.WriteLine(\"something\")` after Console.Clear() and this will not be outputted in the screen.\r\n\r\nIf you remove ILRepack.MSBuild.Task package or you change to `Debug Mode` (the .targets file inside this package has defined a condition, ILRepack will only execute if `Release Mode` is selected), as you can see here:\r\n\r\n`Condition=\"$(Configuration.Contains('Release')) and !Exists('$(ILRepackTargetsFile)') and '$(ClearOutputDirectory)' != 'False'\"`\r\n\r\nIn line 32 from `packages\\ILRepack.Lib.MSBuild.Task.2.0.16\\build\\ILRepack.Lib.MSBuild.Task.targets`.\r\n\r\nThis behavior will not happen. This happens as soon as you use ILRepack.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/32886","RelatedDescription":"Open issue \"ILRepack + EasyConsole makes code execution unreachable\" (#32886)"},{"Id":"404019534","IsPullRequest":true,"CreatedAt":"2019-01-28T21:41:19","Actor":"chsienki","Number":"32885","RawContent":null,"Title":"update mono-devel in dockerfile, and don't cache later commands","State":"open","Body":"This fixes a couple of related Mono CI things:\r\n\r\n1. Pass --debug on the command line for future debugging:\r\n    - We invoke xunit via arcade, which has limited extensibility points. I've hooked in a target with a bit of quote foo to enable it. It's not very pretty, I'll open a separate bug on Arcade to let us do this in the future more elegantly.\r\n\r\n2. Docker compose caches layers, causing out of date mono builds:\r\n    - We grab mono as part of the docker container build out. If the underlying machines hang around for a while, we'll never rebuild due to caching. \r\n    - This PR adds a dummy arg to the dockerfile that we pass in as current datetime; this allows us to cache up to that point, then always rebuild afterwards (see https://github.com/moby/moby/issues/1996)\r\n    - We add a new apt-get update/upgrade pair after the dummy arg, so we'll always update mono to the latest regardless of caching, but its much quicker than always rebuilding from scratch \r\n\r\n3. A mono upgrade bug between 5.21 and 5.23 breaks `apt-get update`:\r\n    - Sadly we hit this bug (https://github.com/mono/mono/issues/12316) upgrading between our cached images and latest\r\n    - For now we need to rebuild docker images from scratch in order to flush out the earlier build from all of our build machines \r\n    - When all the machines in the pool have cycled through we can remove the `--no-cache` option and just do an incremental update (bullet 2). \r\n","Url":"https://github.com/dotnet/roslyn/pull/32885","RelatedDescription":"Open PR \"update mono-devel in dockerfile, and don't cache later commands\" (#32885)"},{"Id":"404004428","IsPullRequest":true,"CreatedAt":"2019-01-28T20:59:10","Actor":"gafter","Number":"32884","RawContent":null,"Title":"Address minor issues identified in review #32431.","State":"open","Body":"Fixes #32807","Url":"https://github.com/dotnet/roslyn/pull/32884","RelatedDescription":"Open PR \"Address minor issues identified in review #32431.\" (#32884)"},{"Id":"403987964","IsPullRequest":true,"CreatedAt":"2019-01-28T20:14:02","Actor":"mavasani","Number":"32883","RawContent":null,"Title":"Bail out on reporting unused parameter diagnostic for special paramet…","State":"open","Body":"…er names\r\n\r\nWe ignore parameter names that start with an underscore and are optionally followed by an integer, such as `_`, `_1`, `_2`, etc.\r\nThis allows bailing out on unused parameters for methods that need a specific signature and are forced to have these parameters. This also serves as a convenient way to suppress instances of unused parameter diagnostic without disabling the diagnostic completely.\r\n\r\nFixes #32851\r\nFixes #32228","Url":"https://github.com/dotnet/roslyn/pull/32883","RelatedDescription":"Open PR \"Bail out on reporting unused parameter diagnostic for special paramet…\" (#32883)"},{"Id":"403980406","IsPullRequest":false,"CreatedAt":"2019-01-28T19:54:19","Actor":"rlvandaveer","Number":"32882","RawContent":null,"Title":"Pattern matching with ValueTuple causes Compiler Error ","State":"open","Body":"**Version Used**: \r\nMicrosoft (R) Visual C# Compiler version 2.10.0.0 (b9fb1610)\r\n\r\n**Steps to Reproduce**:\r\n\r\nAdd a case statement to a switch statement that checks for a ValueTuple<bool, string> and checks for the value of Item1 e.g.,\r\n\r\n```c#\r\n\r\nswitch (val)\r\n{\r\n  case ValueTuple<bool,string> t when t.Item1 == true`\r\n    // do stuff\r\n    break;\r\n  // extraneous code omitted\r\n}\r\n```\r\n\r\nNote that val is of type object.\r\n\r\nThe error can be overcome by two different syntax changes:\r\n1. Move the value checking logic from the case and into the case body:\r\n\r\n```c#\r\ncase ValueTuple<bool,string> t:\r\nif (t.Item1 == true) do stuff...\r\n```\r\n\r\n2. Change equality `==` to `is` e.g., `case ValueTuple<bool,string> t when t.Item1 istrue`\r\n\r\n**Expected Behavior**:\r\nCode should compile\r\n\r\n**Actual Behavior**:\r\n1>Build FAILED.\r\n1>\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error MSB6006: \"csc.exe\" exited with code -2146232797.\r\n1>    0 Warning(s)\r\n1>    1 Error(s)\r\n1>\r\n1>Time Elapsed 00:00:04.04\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========","Url":"https://github.com/dotnet/roslyn/issues/32882","RelatedDescription":"Open issue \"Pattern matching with ValueTuple causes Compiler Error \" (#32882)"},{"Id":"403970411","IsPullRequest":false,"CreatedAt":"2019-01-28T19:27:46","Actor":"TessenR","Number":"32879","RawContent":null,"Title":"Incorrect possible dereference of a null reference warning in case of 'x ?? throw' null check","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 2.0\r\nVisualStudio.16.Preview/16.0.0-pre.2.0+28522.59\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n  void Test(string? s)\r\n  {\r\n    _ = s ?? throw new System.ArgumentNullException(nameof(s));\r\n    s.ToString();\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warnings. `s` is explicitly checked for null and if it's null an exception is throw on the first line. It's impossible for `s` to hold a null value on the second line.\r\n\r\n**Actual Behavior**:\r\nIncorrect `Possible dereference of a null reference` warning for `s.ToString()`\r\n","Url":"https://github.com/dotnet/roslyn/issues/32879","RelatedDescription":"Open issue \"Incorrect possible dereference of a null reference warning in case of 'x ?? throw' null check\" (#32879)"},{"Id":"403854065","IsPullRequest":false,"CreatedAt":"2019-01-28T14:58:12","Actor":"TessenR","Number":"32877","RawContent":null,"Title":"Missing warnings for nullable references under `throw` statement/expression","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 2.0\r\nVisualStudio.16.Preview/16.0.0-pre.2.0+28522.59\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code:\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n  void M1() => throw null;\r\n  void M2(System.Exception? ex = null) => throw ex;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNullable reference types warnings e.g. `Possible dereference of a null reference` for `throw null` and `throw ex` expressions.\r\n\r\n**Actual Behavior**:\r\nNo warnings\r\n","Url":"https://github.com/dotnet/roslyn/issues/32877","RelatedDescription":"Open issue \"Missing warnings for nullable references under `throw` statement/expression\" (#32877)"},{"Id":"403773917","IsPullRequest":true,"CreatedAt":"2019-01-28T11:43:31","Actor":"alrz","Number":"32876","RawContent":null,"Title":"Fix assertion in UsePatternMatching analyzer","State":"open","Body":"Hit this a couple of times while testing.","Url":"https://github.com/dotnet/roslyn/pull/32876","RelatedDescription":"Open PR \"Fix assertion in UsePatternMatching analyzer\" (#32876)"},{"Id":"403678835","IsPullRequest":true,"CreatedAt":"2019-01-28T09:00:11","Actor":"dotnet-bot","Number":"32874","RawContent":null,"Title":"Merge master-vs-deps to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32874","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to dev16.1-preview1-vs-deps\" (#32874)"},{"Id":"403678895","IsPullRequest":true,"CreatedAt":"2019-01-28T08:30:06","Actor":"dotnet-bot","Number":"32875","RawContent":null,"Title":"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32875","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#32875)"},{"Id":"403657778","IsPullRequest":true,"CreatedAt":"2019-01-28T07:17:06","Actor":"dotnet-bot","Number":"32872","RawContent":null,"Title":"Merge dev16.0-preview3-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-preview3-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-preview3-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32872","RelatedDescription":"Closed or merged PR \"Merge dev16.0-preview3-vs-deps to master-vs-deps\" (#32872)"},{"Id":"403657828","IsPullRequest":true,"CreatedAt":"2019-01-28T06:49:02","Actor":"dotnet-bot","Number":"32873","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32873","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32873)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"404095205","IsPullRequest":true,"CreatedAt":"2019-01-29T02:32:53","Actor":"grant-d","Number":"6911","RawContent":null,"Title":"[NO MERGE] BitOps analysis CoreRT (WIP)","State":"open","Body":"Update call sites for https://github.com/dotnet/coreclr/pull/22225\r\n\r\n\r\nNote that this PR will **not build** right now - it is being used to analyze the consolidation of call sites for https://github.com/dotnet/corefx/issues/32269.\r\n\r\ncc @tannergooding ","Url":"https://github.com/dotnet/corert/pull/6911","RelatedDescription":"Open PR \"[NO MERGE] BitOps analysis CoreRT (WIP)\" (#6911)"},{"Id":"404079527","IsPullRequest":true,"CreatedAt":"2019-01-29T01:59:43","Actor":"Dotnet-GitSync-Bot","Number":"6910","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6910","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6910)"},{"Id":"404012101","IsPullRequest":true,"CreatedAt":"2019-01-29T00:53:33","Actor":"filipnavara","Number":"6909","RawContent":null,"Title":"Update CoreFx to preview.19078.2 (master)","State":"closed","Body":"...to get up to date System.Native.","Url":"https://github.com/dotnet/corert/pull/6909","RelatedDescription":"Closed or merged PR \"Update CoreFx to preview.19078.2 (master)\" (#6909)"},{"Id":"403636861","IsPullRequest":true,"CreatedAt":"2019-01-28T04:54:37","Actor":"Dotnet-GitSync-Bot","Number":"6908","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @TomerWeisberg @benaadams","Url":"https://github.com/dotnet/corert/pull/6908","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6908)"},{"Id":"403624969","IsPullRequest":true,"CreatedAt":"2019-01-28T03:19:29","Actor":"Dotnet-GitSync-Bot","Number":"6907","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/6907","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6907)"},{"Id":"403615550","IsPullRequest":true,"CreatedAt":"2019-01-28T00:49:10","Actor":"trylek","Number":"6906","RawContent":null,"Title":"Support for LDVIRTFTN on GVM's requiring instantiating stubs","State":"open","Body":"I found out that one bucket of the remaining CoreCLR CPAOT failures\r\nis caused by missing support for instantiating stubs. We must emit\r\ninstantiating stubs whenever we hit LDVIRTFTN on a generic method,\r\notherwise JIT crashes with an assertion failure.\r\n\r\nThis case was already supposed to be taken care of by means of the\r\nDynamicHelperCell representing the instantiating stub but\r\nthe implementation was incomplete. This change properly wires up\r\nthe instantiation stub logic and fixes various transitive issues\r\nit uncovered.\r\n\r\nMost notably this involved fixing the calls to DynamicHelperCell\r\nto pass around the exact method, rooting the canonical method for\r\ncompilation when emitting an instantiating stub and fixing method\r\nfixup signature formatting to include the instantiating & unboxing\r\nstub flag, otherwise we were hitting a spurious assertion failure\r\nregarding output symbol duplicates in the CPAOT object emitter.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6906","RelatedDescription":"Open PR \"Support for LDVIRTFTN on GVM's requiring instantiating stubs\" (#6906)"},{"Id":"403584857","IsPullRequest":true,"CreatedAt":"2019-01-27T21:27:15","Actor":"Dotnet-GitSync-Bot","Number":"6905","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @stephentoub","Url":"https://github.com/dotnet/corert/pull/6905","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6905)"},{"Id":"403447741","IsPullRequest":true,"CreatedAt":"2019-01-27T19:50:26","Actor":"filipnavara","Number":"6898","RawContent":null,"Title":"WIP: Move Timer to shared CoreLib partition.","State":"closed","Body":"Counter-part to https://github.com/dotnet/coreclr/pull/22231, contributes to https://github.com/dotnet/coreclr/issues/21932.","Url":"https://github.com/dotnet/corert/pull/6898","RelatedDescription":"Closed or merged PR \"WIP: Move Timer to shared CoreLib partition.\" (#6898)"},{"Id":"403501965","IsPullRequest":true,"CreatedAt":"2019-01-27T03:36:55","Actor":"Dotnet-GitSync-Bot","Number":"6903","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6903","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6903)"},{"Id":"403462114","IsPullRequest":true,"CreatedAt":"2019-01-27T01:57:40","Actor":"jkotas","Number":"6901","RawContent":null,"Title":"Disable bad CoreCLR test","State":"closed","Body":"The test makes an assumption that objects are finalized in a specific order. It is not a safe assumption to make.","Url":"https://github.com/dotnet/corert/pull/6901","RelatedDescription":"Closed or merged PR \"Disable bad CoreCLR test\" (#6901)"},{"Id":"403484519","IsPullRequest":true,"CreatedAt":"2019-01-26T21:19:54","Actor":"tonerdo","Number":"6902","RawContent":null,"Title":"[Interpreter] Arguments","State":"open","Body":"This PR adds support for the following opcodes:\r\n\r\n* `ldarg.*`\r\n* `starg.*`\r\n\r\nwhich allows methods like the following to be interpreted:\r\n\r\n```csharp\r\npublic static int Sum(int a, int b)\r\n{\r\n    return a + b;\r\n}\r\n```\r\n\r\nIt also updates `InterpreterCallInterceptor` to ensure a non-zero `RuntimeMethodHandle` is returned for non-primitive argument and local variable types, which is needed for interpreting methods like the following:\r\n\r\n```csharp\r\npublic static DateTime ForwardDateTime(DateTime d)\r\n{\r\n    return d;\r\n}\r\n\r\npublic static Exception ForwardException(Exception e)\r\n{\r\n    return e;\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/corert/pull/6902","RelatedDescription":"Open PR \"[Interpreter] Arguments\" (#6902)"},{"Id":"403461759","IsPullRequest":true,"CreatedAt":"2019-01-26T18:51:32","Actor":"Dotnet-GitSync-Bot","Number":"6900","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6900","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6900)"},{"Id":"403353370","IsPullRequest":true,"CreatedAt":"2019-01-26T18:23:30","Actor":"trylek","Number":"6895","RawContent":null,"Title":"Fix catch clauses referring to a generic method argument","State":"closed","Body":"Scrutinizing the CoreCLR Pri#1 results I found a large bucket of\r\nfailures caused by mismatched catch clauses for generic exception\r\ntypes. With tons of help from Jan Vorlicek I tracked this down to\r\na subtle difference in getMethodInfo flags. I have added one of\r\nthe previously failing Pri#1 tests to the CPAOT trivial unit test\r\nsuite.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6895","RelatedDescription":"Closed or merged PR \"Fix catch clauses referring to a generic method argument\" (#6895)"},{"Id":"403410281","IsPullRequest":true,"CreatedAt":"2019-01-26T17:15:23","Actor":"Dotnet-GitSync-Bot","Number":"6896","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams @benaadams @marek-safar","Url":"https://github.com/dotnet/corert/pull/6896","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6896)"},{"Id":"403453995","IsPullRequest":true,"CreatedAt":"2019-01-26T15:52:04","Actor":"MichalStrehovsky","Number":"6899","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6899","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6899)"},{"Id":"403429944","IsPullRequest":false,"CreatedAt":"2019-01-26T10:54:34","Actor":"MichalStrehovsky","Number":"6897","RawContent":null,"Title":"Expose option to completely disable reflection","State":"open","Body":"CoreRT runtime doesn't require reflection metadata to run managed code. We should expose a compiler option that skips generation of reflection metadata and switches reflection stack over to one that operates on runtime metadata only (i.e. one can use reflection to get the base type or list of interfaces, but no names, methods, fields, are exposed).","Url":"https://github.com/dotnet/corert/issues/6897","RelatedDescription":"Open issue \"Expose option to completely disable reflection\" (#6897)"},{"Id":"403220173","IsPullRequest":true,"CreatedAt":"2019-01-26T05:51:35","Actor":"Dotnet-GitSync-Bot","Number":"6894","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6894","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6894)"},{"Id":"403168509","IsPullRequest":true,"CreatedAt":"2019-01-25T15:59:55","Actor":"Dotnet-GitSync-Bot","Number":"6892","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Quogu","Url":"https://github.com/dotnet/corert/pull/6892","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6892)"},{"Id":"403190701","IsPullRequest":false,"CreatedAt":"2019-01-25T14:56:42","Actor":"letmaik","Number":"6893","RawContent":null,"Title":"Error out on unsupported NativeCallable signatures","State":"open","Body":"I'd like to do something like:\r\n\r\n```cs\r\n        [NativeCallable(EntryPoint = \"StrToInt\", CallingConvention = CallingConvention.Cdecl)]\r\n        public static int StrToInt(string a)\r\n        {\r\n            return int.Parse(a);\r\n        }\r\n```\r\n\r\nwhich builds fine, but then it crashes when I try to invoke it. I tried adding `[MarshalAs(UnmanagedType.LPStr)]` to the argument but that didn't change anything.\r\n\r\nShould this work in principle or am I missing something?\r\n\r\nEDIT: Actually, there is an error that gets printed: \"Unhandled Exception: System.FormatException: Input string was not in a correct format.\" I'm calling the shared library from Python via ctypes:\r\n\r\n```py\r\nfrom ctypes import CDLL, c_char_p\r\nLIB_PATH = \"...dll\"\r\nlib = CDLL(LIB_PATH)\r\nlib.StrToInt.argtypes = [c_char_p]\r\nassert lib.StrToInt('42'.encode('utf-8')) == 42\r\n```","Url":"https://github.com/dotnet/corert/issues/6893","RelatedDescription":"Open issue \"Error out on unsupported NativeCallable signatures\" (#6893)"},{"Id":"402984073","IsPullRequest":true,"CreatedAt":"2019-01-25T04:03:09","Actor":"Dotnet-GitSync-Bot","Number":"6890","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/6890","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6890)"},{"Id":"402986311","IsPullRequest":false,"CreatedAt":"2019-01-25T03:04:40","Actor":"xiaotie","Number":"6891","RawContent":null,"Title":"Some unexpected behavior using timer with comdlg","State":"open","Body":"There are some unexpected behavior when use system timer in corert, but it is ok in dotnet core:\r\n\r\n```\r\n        private static System.Timers.Timer timer;\r\n\r\n        public static void Test()\r\n        {\r\n            timer = new System.Timers.Timer();\r\n            timer.Interval = 1000;\r\n            timer.Start();  // It is ok in dotnet core native when comment this line \r\n\r\n            for (int i = 0; i < 100; i++)\r\n                new FileDialog().RunDialog();\r\n        }\r\n```\r\n\r\nHere is the full code:  [https://github.com/xiaotie/DotNetNativeTimerBug](https://github.com/xiaotie/DotNetNativeTimerBug)","Url":"https://github.com/dotnet/corert/issues/6891","RelatedDescription":"Open issue \"Some unexpected behavior using timer with comdlg\" (#6891)"},{"Id":"402962363","IsPullRequest":true,"CreatedAt":"2019-01-25T02:14:29","Actor":"Dotnet-GitSync-Bot","Number":"6889","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @jkotas","Url":"https://github.com/dotnet/corert/pull/6889","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6889)"},{"Id":"402941757","IsPullRequest":true,"CreatedAt":"2019-01-25T01:03:07","Actor":"Dotnet-GitSync-Bot","Number":"6888","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @tannergooding","Url":"https://github.com/dotnet/corert/pull/6888","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6888)"},{"Id":"402898840","IsPullRequest":true,"CreatedAt":"2019-01-24T22:47:05","Actor":"filipnavara","Number":"6887","RawContent":null,"Title":"Fix argument checks in ThreadPool.RegisterWaitForSingleObject.","State":"closed","Body":"Extracted from #6880. /cc @jkotas \r\n\r\nI will submit the unit tests to CoreFX soon.","Url":"https://github.com/dotnet/corert/pull/6887","RelatedDescription":"Closed or merged PR \"Fix argument checks in ThreadPool.RegisterWaitForSingleObject.\" (#6887)"},{"Id":"402779587","IsPullRequest":false,"CreatedAt":"2019-01-24T16:33:48","Actor":"letmaik","Number":"6885","RawContent":null,"Title":"Cannot open input file 'kernel32.lib'","State":"closed","Body":"I'm using the x64 Native Tools Command Prompt for VS 2017 on Windows 10.\r\nWhen trying to build the NativeLibrary example as shared library I get the following error:\r\n```\r\n> dotnet publish /p:NativeLib=Shared -r win-x64 -c Release\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 69.69 ms for C:\\Users\\...\\git\\corert\\samples\\NativeLibrary\\NativeLibrary.csproj.\r\n  NativeLibrary -> C:\\Users\\marieche\\git\\corert\\samples\\NativeLibrary\\bin\\x64\\Release\\netstandard2.0\\win-x64\\NativeLibrary.dll\r\n  Generating native code\r\nLINK : fatal error LNK1181: cannot open input file 'kernel32.lib' [C:\\Users\\...\\git\\corert\\samples\\NativeLibrary\\NativeLibrary.csproj]\r\nC:\\Users\\...\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27323-02\\build\\Microsoft.NETCore.Native.targets(305,5): error MSB3073: The command \"link  @\"obj\\x64\\Release\\netstandard2.0\\win-x64\\native\\link.rsp\"\" exited with code 1181. [C:\\Users\\...\\git\\corert\\samples\\NativeLibrary\\NativeLibrary.csproj]\r\n```\r\n\r\nIf it helps, here are my environment variables:\r\n```\r\nALLUSERSPROFILE=C:\\ProgramData\r\nAPPDATA=C:\\Users\\...\\AppData\\Roaming\r\nCommandPromptType=Native\r\nCommonProgramFiles=C:\\Program Files\\Common Files\r\nCommonProgramFiles(x86)=C:\\Program Files (x86)\\Common Files\r\nCommonProgramW6432=C:\\Program Files\\Common Files\r\nComSpec=C:\\WINDOWS\\system32\\cmd.exe\r\nDevEnvDir=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\\r\nDriverData=C:\\Windows\\System32\\Drivers\\DriverData\r\nFramework40Version=v4.0\r\nFrameworkDir=C:\\Windows\\Microsoft.NET\\Framework64\\\r\nFrameworkDir64=C:\\Windows\\Microsoft.NET\\Framework64\\\r\nFrameworkVersion=v4.0.30319\r\nFrameworkVersion64=v4.0.30319\r\nFSHARPINSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\FSharp\\\r\nHOMEDRIVE=C:\r\nHOMEPATH=\\Users\\...\r\nINCLUDE=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\include;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um;\r\nLIB=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\lib\\x64;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\lib\\um\\x64;\r\nLIBPATH=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\lib\\x64;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\lib\\x86\\store\\references;C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319;\r\nLOCALAPPDATA=C:\\Users\\...\\AppData\\Local\r\nNETFXSDKDir=C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\\r\nNUMBER_OF_PROCESSORS=4\r\nOS=Windows_NT\r\nPath=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX64\\x64;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\VC\\VCPackages;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\3.1;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin\\Roslyn;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Performance Tools\\x64;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Performance Tools;C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Common\\VSPerfCollectionTools\\\\x64;C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Common\\VSPerfCollectionTools\\;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\x64\\;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\FSharp\\;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\\\MSBuild\\15.0\\bin;C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program Files\\Docker\\Docker\\Resources\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\CMake\\bin;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files\\nodejs\\;C:\\Users\\...\\AppData\\Roaming\\local\\bin;C:\\Users\\...\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\...\\.dotnet\\tools;C:\\Program Files\\nuget;C:\\Users\\...\\AppData\\Roaming\\npm;C:\\Users\\...\\AppData\\Local\\Microsoft\\WindowsApps\r\nPATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\r\nPlatform=x64\r\nPROCESSOR_ARCHITECTURE=AMD64\r\nPROCESSOR_IDENTIFIER=Intel64 Family 6 Model 69 Stepping 1, GenuineIntel\r\nPROCESSOR_LEVEL=6\r\nPROCESSOR_REVISION=4501\r\nProgramData=C:\\ProgramData\r\nProgramFiles=C:\\Program Files\r\nProgramFiles(x86)=C:\\Program Files (x86)\r\nProgramW6432=C:\\Program Files\r\nPROMPT=$P$G\r\nPSModulePath=C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\nPUBLIC=C:\\Users\\Public\r\nSESSIONNAME=Console\r\nSystemDrive=C:\r\nSystemRoot=C:\\WINDOWS\r\nSYSTEMTYPE=slate\r\nTEMP=C:\\Users\\...\\AppData\\Local\\Temp\r\nTMP=C:\\Users\\...\\AppData\\Local\\Temp\r\nUniversalCRTSdkDir=C:\\Program Files (x86)\\Windows Kits\\10\\\r\nUSERNAME=...\r\nUSERPROFILE=C:\\Users\\...\r\nVCIDEInstallDir=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\VC\\\r\nVCINSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\\r\nVCToolsInstallDir=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\\r\nVCToolsRedistDir=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Redist\\MSVC\\14.16.27012\\\r\nVCToolsVersion=14.16.27023\r\nVisualStudioVersion=15.0\r\nVS150COMNTOOLS=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\\r\nVSCMD_ARG_app_plat=Desktop\r\nVSCMD_ARG_HOST_ARCH=x64\r\nVSCMD_ARG_TGT_ARCH=x64\r\nVSCMD_VER=15.9.3\r\nVSINSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\\r\nwindir=C:\\WINDOWS\r\nWindowsLibPath=References\\CommonConfiguration\\Neutral\r\nWindowsSDKLibVersion=winv6.3\\\r\nWindowsSDKVersion=\\\r\nWindowsSDK_ExecutablePath_x64=C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\x64\\\r\nWindowsSDK_ExecutablePath_x86=C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\\r\n__DOTNET_ADD_64BIT=1\r\n__DOTNET_PREFERRED_BITNESS=64\r\n__VSCMD_PREINIT_PATH=C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program Files\\Docker\\Docker\\Resources\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\CMake\\bin;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files\\nodejs\\;C:\\Users\\...\\AppData\\Roaming\\local\\bin;C:\\Users\\...\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\...\\.dotnet\\tools;C:\\Program Files\\nuget;C:\\Users\\...\\AppData\\Roaming\\npm;C:\\Users\\...\\AppData\\Local\\Microsoft\\WindowsApps\r\n```\r\n(Note that I masked out my username)","Url":"https://github.com/dotnet/corert/issues/6885","RelatedDescription":"Closed issue \"Cannot open input file 'kernel32.lib'\" (#6885)"},{"Id":"402774927","IsPullRequest":false,"CreatedAt":"2019-01-24T16:00:35","Actor":"letmaik","Number":"6884","RawContent":null,"Title":"Update console build instructions","State":"closed","Body":"https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built\r\n\r\nThe extra lines in the project template are described with \"Important: A few lines at the top and at the bottom are different from the default template - don't miss updating them!\". However, this seems to be outdates as none of the samples have them. E.g. https://github.com/dotnet/corert/blob/master/samples/HelloWorld/HelloWorld.csproj","Url":"https://github.com/dotnet/corert/issues/6884","RelatedDescription":"Closed issue \"Update console build instructions\" (#6884)"},{"Id":"402759347","IsPullRequest":true,"CreatedAt":"2019-01-24T15:26:00","Actor":"MichalStrehovsky","Number":"6883","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6883","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6883)"},{"Id":"402745564","IsPullRequest":true,"CreatedAt":"2019-01-24T15:25:01","Actor":"MichalStrehovsky","Number":"6882","RawContent":null,"Title":"Fix UWP VirtualAlloc import","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6882","RelatedDescription":"Closed or merged PR \"Fix UWP VirtualAlloc import\" (#6882)"},{"Id":"402723474","IsPullRequest":true,"CreatedAt":"2019-01-24T14:47:55","Actor":"MichalStrehovsky","Number":"6881","RawContent":null,"Title":"Make _reader not readonly","State":"closed","Body":"I was too eager on adding `readonly` in #6863. This breaks the desired semantics.","Url":"https://github.com/dotnet/corert/pull/6881","RelatedDescription":"Closed or merged PR \"Make _reader not readonly\" (#6881)"},{"Id":"402709942","IsPullRequest":true,"CreatedAt":"2019-01-24T13:36:05","Actor":"filipnavara","Number":"6880","RawContent":null,"Title":"WIP: Move portable thread pool implementation to shared partition","State":"open","Body":"@marek-safar This introduces ThreadPool implementation with the FeaturePortableThreadPool flag into the shared partition. It should be possible to use it as-is in Mono, but I didn't try to build it yet.","Url":"https://github.com/dotnet/corert/pull/6880","RelatedDescription":"Open PR \"WIP: Move portable thread pool implementation to shared partition\" (#6880)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"404087126","IsPullRequest":false,"CreatedAt":"2019-01-29T01:54:52","Actor":"dsplaisted","Number":"2880","RawContent":null,"Title":"\"salt\" MSBuild handshake in test / dogfood environment","State":"open","Body":"Right now for our tests (and in the dogfood script) we override the MSBuildSDKsPath to point MSBuild to the SDK under test.  However, this doesn't seem to prevent sharing MSBuild nodes that didn't have this set, which can end up causing assembly loading or other issues.\r\n\r\nIdeally in our test environment we would add a \"salt\" to the node connection handshake, so that MSBuild would only be able to connect to nodes that come from the same test environment.\r\n\r\nThis would probably require a change in MSBuild to allow us to provide such a \"salt\".\r\n\r\n@rainersigwald, thoughts?","Url":"https://github.com/dotnet/sdk/issues/2880","RelatedDescription":"Open issue \"\"salt\" MSBuild handshake in test / dogfood environment\" (#2880)"},{"Id":"404073631","IsPullRequest":false,"CreatedAt":"2019-01-29T00:53:11","Actor":"mairaw","Number":"2879","RawContent":null,"Title":"Don't reuse the https://aka.ms/sdkimplicitrefs link to indicate version should not be indicated","State":"open","Body":"This comes from a discussion at https://github.com/dotnet/docs/issues/8691 and my proposal can be found at https://github.com/dotnet/docs/issues/8691#issuecomment-448343752\r\n\r\nCustomers are getting the following error:\r\nNETSDK1071: A PackageReference to 'Microsoft.AspNetCore.All' specified a Version of 2.2.0-preview3-35497. Specifying the version of this package is not recommended. For more information, see https://aka.ms/sdkimplicitrefs. However, this document does not cover how Microsoft.AspNetCore.All should actually be referenced in this situation.\r\n\r\nHowever, specifying the version of a package has nothing to do with implicit package references, so I don't think we should be using that same link for this error message. \r\nWe should create a new aka.ms link for that error and that link would point to a different location in the ASP.NET docs TBD.\r\n\r\n/cc @Rick-Anderson","Url":"https://github.com/dotnet/sdk/issues/2879","RelatedDescription":"Open issue \"Don't reuse the https://aka.ms/sdkimplicitrefs link to indicate version should not be indicated\" (#2879)"},{"Id":"404061761","IsPullRequest":true,"CreatedAt":"2019-01-29T00:01:53","Actor":"dotnet-bot","Number":"2878","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2878","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2878)"},{"Id":"404061747","IsPullRequest":true,"CreatedAt":"2019-01-29T00:01:50","Actor":"dotnet-bot","Number":"2877","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2877","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#2877)"},{"Id":"404060640","IsPullRequest":true,"CreatedAt":"2019-01-28T23:57:07","Actor":"wli3","Number":"2876","RawContent":null,"Title":"Fix shim apphost","State":"open","Body":"Will squash before merge. Will hold for preview 3\r\n\r\nIt might be hard to read from direct diff. 798624c is the initial change to make it work. After that are all refactorings to separate it into 2 Targets.\r\n\r\nFix https://github.com/dotnet/sdk/issues/2867","Url":"https://github.com/dotnet/sdk/pull/2876","RelatedDescription":"Open PR \"Fix shim apphost\" (#2876)"},{"Id":"404001119","IsPullRequest":false,"CreatedAt":"2019-01-28T20:50:09","Actor":"natemcmaster","Number":"2875","RawContent":null,"Title":"Cannot force ResolveFrameworkReference to avoid downloading targeting packs","State":"open","Body":"Feature request: for the sake of things like source-build and building your own targeting pack (e.g. https://github.com/aspnet/AspNetCore), I'd like to be able to force the SDK into an \"offline mode\" which fails instead of attempting to download targeting packs. The current code only checks for `Directory.Exists`\r\n\r\nhttps://github.com/dotnet/sdk/blob/915adb77cc3763f88aca3da622961abd54f100f2/src/Tasks/Microsoft.NET.Build.Tasks/ResolveFrameworkReferences.cs#L112-L126\r\n\r\n\r\n**Options I've considered:**\r\n\r\n* Add a global property, like `DisableTargetingPackAcquisition`\r\n* Add something to `KnownFrameworkReference` or `<FrameworkReference>` as metadata\r\n\r\ncc @dsplaisted @nguerrera\r\n","Url":"https://github.com/dotnet/sdk/issues/2875","RelatedDescription":"Open issue \"Cannot force ResolveFrameworkReference to avoid downloading targeting packs\" (#2875)"},{"Id":"403377692","IsPullRequest":true,"CreatedAt":"2019-01-28T17:09:42","Actor":"dotnet-bot","Number":"2873","RawContent":null,"Title":"Merge release/2.1.4xx to release/2.1.5xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.5xx\ngit reset --hard upstream/release/2.1.5xx\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.4xx-to-release/2.1.5xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2873","RelatedDescription":"Closed or merged PR \"Merge release/2.1.4xx to release/2.1.5xx\" (#2873)"},{"Id":"403387485","IsPullRequest":true,"CreatedAt":"2019-01-26T03:38:39","Actor":"peterhuene","Number":"2874","RawContent":null,"Title":"Add test for ComposeStore target for netcoreapp3.0.","State":"closed","Body":"This PR adds a test to cover using the `ComposeStore` target from a\r\nproject targeting `netcoreapp3.0`.\r\n\r\nThe test is intended to replicate similar tests we have in `dotnet/cli`\r\nso that we can catch regression of the `dotnet store` command in the SDK\r\nrepo.\r\n\r\nThe test ensures `ComposeStore` will work when targeting `netcoreapp3.0`\r\nand that the underlying issue (a reference to `Microsoft.NETCore.App`\r\nbeing added without a version) is checked for.","Url":"https://github.com/dotnet/sdk/pull/2874","RelatedDescription":"Closed or merged PR \"Add test for ComposeStore target for netcoreapp3.0.\" (#2874)"},{"Id":"403036161","IsPullRequest":true,"CreatedAt":"2019-01-25T22:34:19","Actor":"wli3","Number":"2870","RawContent":null,"Title":"WIP proposed fix for missing shims","State":"closed","Body":"If this route is good. Add shim filed to ResolveFrameworkReferences.\r\n\r\nPending. remove cache from resolve package. and shim related code","Url":"https://github.com/dotnet/sdk/pull/2870","RelatedDescription":"Closed or merged PR \"WIP proposed fix for missing shims\" (#2870)"},{"Id":"402899283","IsPullRequest":true,"CreatedAt":"2019-01-25T18:32:00","Actor":"peterhuene","Number":"2860","RawContent":null,"Title":"Fix _RestoreCrossgen target dependency.","State":"closed","Body":"The `_RestoreCrossgen` target depends on a package reference to\r\n`Microsoft.NETCore.App` to be present.  However, for `netcoreapp3`\r\ntargeted applications, this requires the `ResolveFrameworkReferences`\r\ntarget to execute.\r\n\r\nThis commit adds a target dependency from `_RestoreCrossgen` to\r\n`ResolveFrameworkReferences` so that the package references are\r\npopulated when coming from a framework reference.\r\n\r\nFixes the CLI tests around `dotnet store` that invoke the crossgen\r\ntargets.","Url":"https://github.com/dotnet/sdk/pull/2860","RelatedDescription":"Closed or merged PR \"Fix _RestoreCrossgen target dependency.\" (#2860)"},{"Id":"402909653","IsPullRequest":true,"CreatedAt":"2019-01-25T17:10:27","Actor":"johnbeisner","Number":"2866","RawContent":null,"Title":"Update PerfGroovy - release/2.1.4xx","State":"closed","Body":"For Windows: only x86 is supported at this time; archive the bin logs.\r\n\r\nThe performance machines launch a 'SysWOW64' command shell - therefore the performance tests are running against a x86 installed SDK.","Url":"https://github.com/dotnet/sdk/pull/2866","RelatedDescription":"Closed or merged PR \"Update PerfGroovy - release/2.1.4xx\" (#2866)"},{"Id":"403237287","IsPullRequest":true,"CreatedAt":"2019-01-25T16:52:30","Actor":"mmitche","Number":"2872","RawContent":null,"Title":"Reclassify signtool dependency","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2872","RelatedDescription":"Closed or merged PR \"Reclassify signtool dependency\" (#2872)"},{"Id":"403163675","IsPullRequest":false,"CreatedAt":"2019-01-25T13:46:22","Actor":"marcelopinheiro-bpp","Number":"2871","RawContent":null,"Title":"Problems to load project because of  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.targets\\ImportAfter\\Microsoft.NET.Build.Extensions.NETFramework.targets","State":"open","Body":"When loading a Project inside my solution, I  was receiving errors of files not found in the \"ImportAfter\" Directory (C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.Targets\\ImportAfter).\r\n\r\nSo I added manually the files \r\n* Microsoft.NET.Build.Extensions.targets\r\n* Microsoft.NET.DefaultPackageConflictOverrides.targets\r\n* Microsoft.NET.Build.Extensions.NETFramework.targets\r\n* Microsoft.NET.Build.Extensions.ConflictResolution.targets\r\n\r\nBecause they didn't came together the Visual Studio Community installation.\r\n\r\nAfter that, a received this error (The error is in PT-BR):\r\n```\r\nHouve uma tentativa de comparação numérica em \"$(_TargetFrameworkVersionWithoutV)\", que é avaliada como \"\" em vez de um número, na condição \"'$(ImplicitlyExpandNETStandardFacades)' == '' AND '$(_TargetFrameworkVersionWithoutV)' >= '4.6.1'\".  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.targets\\ImportAfter\\Microsoft.NET.Build.Extensions.NETFramework.targets\r\n```\r\n\r\nI don't know what to modify or what to do now. Thanks for the attention\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2871","RelatedDescription":"Open issue \"Problems to load project because of  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.targets\\ImportAfter\\Microsoft.NET.Build.Extensions.NETFramework.targets\" (#2871)"},{"Id":"403026343","IsPullRequest":false,"CreatedAt":"2019-01-25T06:44:09","Actor":"roozbehid","Number":"2869","RawContent":null,"Title":"PackageReference and local mscorlib.dll cause problem","State":"open","Body":"Following project file\r\n\r\n    <Project Sdk=\"Microsoft.NET.Sdk\">\r\n    \r\n      <PropertyGroup>\r\n        <OutputType>Exe</OutputType>\r\n        <TargetFramework>net461</TargetFramework>\r\n      </PropertyGroup>\r\n    \r\n      <ItemGroup>\r\n        <PackageReference Include=\"Microsoft.Build\" Version=\"15.3.409\" />\r\n      </ItemGroup>\r\n    \r\n    </Project>\r\n\r\nin the same folder add -empty or valid - mscorlib.dll file.\r\nThen ResolveAssemblyReference would want to use it and will cause problems.\r\n\r\nI experienced with some attributes to include it but none worked, like those referenced in https://docs.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2017\r\n\r\nFor example following feels like from docs should work, but it doesnt! (same with `<Content Include`)\r\n\r\n      <ItemGroup>\r\n        <Content Update=\"mscorlib.dll\">\r\n          <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n          <IsAssembly>False</IsAssembly>\r\n          <PublishState>DataFile</PublishState>\r\n        </Content>\r\n      </ItemGroup>\r\n\r\nUsing TargetFramework of `netcoreapp2.0` will work though!\r\n\r\nError is either a crash in ResolveAssemblyReference or problem with referencing two mscorlib.dll files!","Url":"https://github.com/dotnet/sdk/issues/2869","RelatedDescription":"Open issue \"PackageReference and local mscorlib.dll cause problem\" (#2869)"},{"Id":"402963538","IsPullRequest":true,"CreatedAt":"2019-01-25T01:10:32","Actor":"cdmihai","Number":"2868","RawContent":null,"Title":"Fix transitive references","State":"open","Body":"Fixes #2855\r\n","Url":"https://github.com/dotnet/sdk/pull/2868","RelatedDescription":"Open PR \"Fix transitive references\" (#2868)"},{"Id":"402956582","IsPullRequest":false,"CreatedAt":"2019-01-25T00:37:00","Actor":"natemcmaster","Number":"2867","RawContent":null,"Title":"Using PackAsToolShimRuntimeIdentifiers and netcoreapp3.0 fails with error NETSDK1065","State":"open","Body":"**Repro**\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <PackAsTool>true</PackAsTool>\r\n    <PackAsToolShimRuntimeIdentifiers>win-x64;win-x86</PackAsToolShimRuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n`dotnet pack`\r\n\r\n**Result**\r\n```\r\nC:\\Users\\namc\\.dotnet\\x64\\sdk\\3.0.100-preview-010166\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(228,5): error NETSDK1065: Cannot find app host for win-x64. win-x64 could be an invalid runtime identifier (RID). For more information about RID, see https://aka.ms/rid-catalog. [C:\\src\\aspnet\\BuildTools\\repro\\CliTool\\CliTool.csproj]\r\n```\r\n\r\n**Details**\r\n\r\nUsing 3.0.100-preview-010166\r\n\r\ncc @nguerrera @wli3 ","Url":"https://github.com/dotnet/sdk/issues/2867","RelatedDescription":"Open issue \"Using PackAsToolShimRuntimeIdentifiers and netcoreapp3.0 fails with error NETSDK1065\" (#2867)"},{"Id":"402909592","IsPullRequest":true,"CreatedAt":"2019-01-25T00:08:22","Actor":"johnbeisner","Number":"2861","RawContent":null,"Title":"Update PerfGroovy - master","State":"closed","Body":"For Windows: only x86 is supported at this time; archive the bin logs.\r\n\r\nThe performance machines launch a 'SysWOW64' command shell - therefore the performance tests are running against a x86 installed SDK.","Url":"https://github.com/dotnet/sdk/pull/2861","RelatedDescription":"Closed or merged PR \"Update PerfGroovy - master\" (#2861)"},{"Id":"402909604","IsPullRequest":true,"CreatedAt":"2019-01-25T00:04:29","Actor":"johnbeisner","Number":"2862","RawContent":null,"Title":"Update PerfGroovy - release/2.2.2xx","State":"closed","Body":"For Windows: only x86 is supported at this time; archive the bin logs.\r\n\r\nThe performance machines launch a 'SysWOW64' command shell - therefore the performance tests are running against a x86 installed SDK.","Url":"https://github.com/dotnet/sdk/pull/2862","RelatedDescription":"Closed or merged PR \"Update PerfGroovy - release/2.2.2xx\" (#2862)"},{"Id":"402909622","IsPullRequest":true,"CreatedAt":"2019-01-25T00:04:25","Actor":"johnbeisner","Number":"2863","RawContent":null,"Title":"Update PerfGroovy - release/2.2.1xx","State":"closed","Body":"For Windows: only x86 is supported at this time; archive the bin logs.\r\n\r\nThe performance machines launch a 'SysWOW64' command shell - therefore the performance tests are running against a x86 installed SDK.","Url":"https://github.com/dotnet/sdk/pull/2863","RelatedDescription":"Closed or merged PR \"Update PerfGroovy - release/2.2.1xx\" (#2863)"},{"Id":"402909629","IsPullRequest":true,"CreatedAt":"2019-01-25T00:04:21","Actor":"johnbeisner","Number":"2864","RawContent":null,"Title":"Update PerfGroovy - release/2.1.6xx","State":"closed","Body":"For Windows: only x86 is supported at this time; archive the bin logs.\r\n\r\nThe performance machines launch a 'SysWOW64' command shell - therefore the performance tests are running against a x86 installed SDK.","Url":"https://github.com/dotnet/sdk/pull/2864","RelatedDescription":"Closed or merged PR \"Update PerfGroovy - release/2.1.6xx\" (#2864)"},{"Id":"402909644","IsPullRequest":true,"CreatedAt":"2019-01-25T00:04:16","Actor":"johnbeisner","Number":"2865","RawContent":null,"Title":"Update PerfGroovy - release/2.1.5xx","State":"closed","Body":"For Windows: only x86 is supported at this time; archive the bin logs.\r\n\r\nThe performance machines launch a 'SysWOW64' command shell - therefore the performance tests are running against a x86 installed SDK.","Url":"https://github.com/dotnet/sdk/pull/2865","RelatedDescription":"Closed or merged PR \"Update PerfGroovy - release/2.1.5xx\" (#2865)"},{"Id":"401967744","IsPullRequest":true,"CreatedAt":"2019-01-24T23:21:51","Actor":"NikolaMilosavljevic","Number":"2857","RawContent":null,"Title":"Update .NET Framework Reference Assemblies version to 1.0.0-alpha-5","State":"closed","Body":"Update version of .NET Framework reference assemblies package, to latest.","Url":"https://github.com/dotnet/sdk/pull/2857","RelatedDescription":"Closed or merged PR \"Update .NET Framework Reference Assemblies version to 1.0.0-alpha-5\" (#2857)"},{"Id":"402697342","IsPullRequest":true,"CreatedAt":"2019-01-24T14:29:28","Actor":"dotnet-maestro[bot]","Number":"2859","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19073.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19073.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2859","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2859)"},{"Id":"402080266","IsPullRequest":true,"CreatedAt":"2019-01-23T17:24:55","Actor":"dotnet-maestro[bot]","Number":"2858","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19072.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19072.5\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19072.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19072.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2858","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2858)"},{"Id":"401538714","IsPullRequest":true,"CreatedAt":"2019-01-22T23:39:28","Actor":"drewnoakes","Number":"2853","RawContent":null,"Title":"Don't set MSBuildAllProjects for MSBuild 16.0+","State":"closed","Body":"Microsoft/msbuild#1299 discusses a change whereby MSBuild prepends the newest project file path to `MSBuildAllProjects` automatically. Therefore, so long as consumers of this property only use this property for up-to-date checks, it's possible to reduce both the size of this property and corresponding allocations.\r\n\r\nThis reduction applies equally to consumers, such as for the case discussed in dotnet/project-system#3744.\r\n\r\nFor backwards compatibility the property is still set for MSBuild versions prior to 16.0.\r\n\r\nSee also Microsoft/msbuild#3605.\r\n\r\n//cc: @jeffkl @rainersigwald @davkean ","Url":"https://github.com/dotnet/sdk/pull/2853","RelatedDescription":"Closed or merged PR \"Don't set MSBuildAllProjects for MSBuild 16.0+\" (#2853)"},{"Id":"401951079","IsPullRequest":true,"CreatedAt":"2019-01-22T22:41:28","Actor":"peterhuene","Number":"2856","RawContent":null,"Title":"Fix ArgumentNullException in ResolveFrameworkReferences.","State":"closed","Body":"When a `netcoreapp3.0` executable project references a `netcoreapp3.0`\r\nlibrary project, and `SelfContained` is globally true, then an\r\n`ArgumentNullException` occurs in the `ResolveFrameworkReferences` task.\r\n\r\nThis can happen when publishing with the following command:\r\n\r\n```\r\ndotnet publish -f netcoreapp3.0 -r win-x86 --self-contained\r\n```\r\n\r\nWhen `SelfContained` is `true` for the class library project reference,\r\nthe task does not take into account that `RuntimeIdentifier` might be\r\nnull since it gets filtered out from the reference.\r\n\r\nAdditionally, some cleanup was needed relating to\r\n`GetBestRuntimeIdentifier`.\r\n\r\nFixes #2851.","Url":"https://github.com/dotnet/sdk/pull/2856","RelatedDescription":"Closed or merged PR \"Fix ArgumentNullException in ResolveFrameworkReferences.\" (#2856)"},{"Id":"401311605","IsPullRequest":false,"CreatedAt":"2019-01-22T22:41:28","Actor":"0xd4d","Number":"2851","RawContent":null,"Title":"Publish self contained app with RIDs that refs a classlib without RIDs results in ArgumentNullException in ResolveFrameworkReferences","State":"closed","Body":"Version: Latest build of .NET Core SDK (3.0.100-preview-010137)\r\n\r\nIf you have an app with RIDs in the csproj file that references a class library with no RIDs in its csproj file, and you publish a self contained .NET Core 3.0 app, the build fails with an ArgumentNullException in ResolveFrameworkReferences.\r\n\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/ResolveFrameworkReferences.cs#L132 calls `GetBestRuntimeIdentifier()` but this method assumes `AppHostRuntimeIdentifier` isn't `null`.\r\n\r\nStack trace:\r\n\r\n```\r\nThe \"ResolveFrameworkReferences\" task failed unexpectedly.\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: key\r\n   at System.Collections.Generic.Dictionary`2.FindEntry(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.ContainsKey(TKey key)\r\n   at System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(TKey key)\r\n   at Microsoft.NET.Build.Tasks.NuGetUtils.GetBestMatchingRid(RuntimeGraph runtimeGraph, String runtimeIdentifier, IEnumerable`1 availableRuntimeIdentifiers, Boolean& wasInGraph) in /_/src/Tasks/Microsoft.NET.Build.Tasks/NuGetUtils.NuGet.cs:line 86\r\n   at Microsoft.NET.Build.Tasks.ResolveFrameworkReferences.GetBestRuntimeIdentifier(String targetRuntimeIdentifier, String availableRuntimeIdentifiers, Boolean& wasInGraph) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolveFrameworkReferences.cs:line 267\r\n   at Microsoft.NET.Build.Tasks.ResolveFrameworkReferences.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolveFrameworkReferences.cs:line 134\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 35\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask)\r\n```\r\n\r\nRepro:\r\n\r\n- Clone https://github.com/0xd4d/ResolveFrameworkReferences_issue\r\n- Use latest daily build of .NET Core SDK\r\n- dotnet publish -c Release -f netcoreapp3.0 -r win-x86 --self-contained\r\n","Url":"https://github.com/dotnet/sdk/issues/2851","RelatedDescription":"Closed issue \"Publish self contained app with RIDs that refs a classlib without RIDs results in ArgumentNullException in ResolveFrameworkReferences\" (#2851)"},{"Id":"401895527","IsPullRequest":false,"CreatedAt":"2019-01-22T18:28:29","Actor":"cdmihai","Number":"2855","RawContent":null,"Title":"Cannot build with DisableTransitiveProjectReferences=true","State":"open","Body":"Given a graph with projects that do not have compile time dependencies on the transitive projects, it should be able to build the graph without injecting transitive project references into each project.\r\n\r\nRepro:\r\n[new-xtarget-3.zip](https://github.com/dotnet/sdk/files/2784102/new-xtarget-3.zip)\r\nThe zip has a graph like 1->2->3. Running with `DisableTransitiveProjectReferences=true` gives the following results:\r\n\r\n```\r\n\"E:\\projects\\MSBuildTestProjects\\projects\\sdk\\working\\new-xtarget-3\\1\\1.csproj\" (default target) (1) ->\r\n\"E:\\projects\\MSBuildTestProjects\\projects\\sdk\\working\\new-xtarget-3\\1\\1.csproj\" (Build target) (1:2) ->\r\n(GenerateBuildDependencyFile target) ->\r\n  C:\\Program Files\\dotnet\\sdk\\2.2.200-preview-009748\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(129,5): error NETSDK1007: Cannot find project info for 'E:\\projects\\MSB \r\nuildTestProjects\\projects\\sdk\\working\\new-xtarget-3\\3\\3.csproj'. This can indicate a missing project reference. [E:\\projects\\MSBuildTestProjects\\projects\\sdk\\working\\new-xtarget-3\\1 \r\n\\1.csproj]\r\n```\r\n\r\nFailing binlog: \r\n[failing.zip](https://github.com/dotnet/sdk/files/2784113/failing.zip)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2855","RelatedDescription":"Open issue \"Cannot build with DisableTransitiveProjectReferences=true\" (#2855)"},{"Id":"401764141","IsPullRequest":false,"CreatedAt":"2019-01-22T13:27:34","Actor":"m0sa","Number":"2854","RawContent":null,"Title":"Make multi-targeting constants local properties","State":"open","Body":"The `DefineConstants` properties for multi targeting builds are a bit confusing, since they are global and not local. This means that if there is a custom `-p:DefineConstants=WHATEVER` on the command line, the multi targeting constants won't get added.\r\n\r\nWhat I'm asking here is to add a `TreatAsLocalProperty=\"DefineConstants\"` to Microsoft.NET.Sdk.CSharp.targets, (and possibly other .target / .props files where `DefineConstants` gets updated), so that it works consistently when the consuming build modifies it via a PropertyGroup as well as via command line args.\r\n\r\n---\r\n\r\nLet me elaborate. We have an old non-SDK style solution that we are gradually refactoring into AspNetCore and SDK-style. We were confronted with the build on the CI server failing miserably, because the target framework constants weren't defined during the build (e.g. `#if NET462` and `#if NETCOREAPP2_2` were not working as expected). Turned out that we had some build configurations passing in a custom `DefineConstants` property. As this property [is global](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-properties?view=vs-2017#global-properties), [this line Microsoft.NET.Sdk.CSharp.targets](https://github.com/dotnet/sdk/blob/006bb6ddaf2a3997ddd25f000fae968e9233fe93/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.CSharp.targets#L35) does not work like a *non-msbuild expert would* would expect from reading it. It took us multiple days of digging through MSBuildBinLog, and collective WTFing, to finally figure out what's going on. Ironically, we did skim over the SDK.CSharp.targets, as it was seemingly not doing what it was supposed to do, but it looked OK at first glance.\r\n\r\nAdding to the confusion was the fact that if you add a custom `<PropertyGroup><DefineConstants>WHATEVER</DefineConstants></PropertyGroup>`, it gets concatenated, and not overridden.\r\n\r\nIdeally, it would behave the same way (concatenate the existing  value) when it gets passed in via the command line arg.\r\n","Url":"https://github.com/dotnet/sdk/issues/2854","RelatedDescription":"Open issue \"Make multi-targeting constants local properties\" (#2854)"},{"Id":"401344480","IsPullRequest":true,"CreatedAt":"2019-01-21T14:14:36","Actor":"dotnet-maestro[bot]","Number":"2852","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19070.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19070.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2852","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2852)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1088888461006782465","CreatedAt":"2019-01-25T19:56:54+00:00","UserScreenname":"dotnet","Text":"Debugging .NET Apps with Time Travel Debugging (TTD) by @fujiy https://t.co/VHwBMfDCSv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":118,"FavoriteCount":68,"RawContent":null},{"Id":"1088327156449476608","CreatedAt":"2019-01-24T06:46:28+00:00","UserScreenname":"dotnet","Text":"Come work for @amandaksilver. She’s a great boss and has an amazing team with lots of influence on the dev experien… https://t.co/LW30IafmZa","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null},{"Id":"1088226836696317952","CreatedAt":"2019-01-24T00:07:50+00:00","UserScreenname":"dotnet","Text":"Join Jeff and Allison tomorrow and learn about the AWESOME new tools in @VisualStudio https://t.co/GgR00dulgQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":2,"RawContent":null},{"Id":"1086041216355954688","CreatedAt":"2019-01-17T23:22:58+00:00","UserScreenname":"dotnet","Text":"We’re happy to read this sentiment about the broader #dotnet #CommunityStandup that @JamesMontemagno has created fo… https://t.co/VtBt7BRcPl","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2019-01-29T05:30:51.7262521Z","RunDurationInMilliseconds":23247}