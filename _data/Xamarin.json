{"Data":{"Blog":{"FeedItems":[{"Title":"Visual Studio 2017 Version 15.6 Preview Available Today!","PublishedOn":"2018-01-10T19:16:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month, we released Visual Studio 2017 version 15.5, which came with awesome new features, including the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-preview-available-today/","RawContent":null},{"Title":"Delivering Rich Media Experiences with the Xamarin.Forms Video Player","PublishedOn":"2018-01-09T18:42:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Adam Fisher. Adam is the founder of Octane Software, focused on the creation of consumer Internet products. You can find Adam on Twitter at @adamgfisher and on Github at...","Href":"https://blog.xamarin.com/delivering-rich-media-experiences-xamarin-forms-video-player/","RawContent":null},{"Title":"Colonial Life Drives Field Sales Productivity with .NET, Mobile, and DevOps","PublishedOn":"2018-01-05T19:59:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET community is millions of developers strong, with people around the world turning ideas into apps across web, mobile, desktop, and the newest connected device platforms. Colonial Life’s...","Href":"https://blog.xamarin.com/colonial-life-drives-field-sales-productivity-net-mobile-devops/","RawContent":null},{"Title":"CoreML Programming with Xamarin.Mac and F#","PublishedOn":"2018-01-04T18:08:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Xamarin technologies are most commonly used to develop mobile applications, Xamarin.Mac makes it easy to use your preferred .NET language to develop desktop Mac apps. There are many C#...","Href":"https://blog.xamarin.com/coreml-programming-xamarin-mac-f/","RawContent":null},{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null},{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7082855302","Type":"PullRequestEvent","CreatedAt":"2018-01-10T21:40:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1180","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix classes-zip inception (#1142)\" (#1180) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=61073\r\nContext: a296784\r\n\r\nWhen we added the new `classes.zip` functionality, there was one oddity\r\npresent. On the first build, everything appears to be normal. On the\r\nsecond build, `classes.zip` appeared to contain itself inside itself???\r\n\r\nTo make things even stranger, I wrote a unit test that contains a\r\n`Java.Lang.Object` subclass in which its type and namespace names change\r\non each write. This worked fine on macOS, even with the oddity of\r\n`classes.zip` continually zipping itself inside itself... The new java\r\nsources would appear at the bottom of the list within the zip file.\r\n\r\nEverything broke down when I tried my unit test on Windows, the case of\r\n`classes.zip` trying to compress itself inside itself was silently\r\nfailing. It was not processing any further files after the failing zip\r\nentry, and so *in theory* this situation would cause many Java stubs to\r\nbe missing from the zip.\r\n\r\nSolution? Let's just put `classes.zip` up one directory.\r\n\r\nSo instead of:\r\n```\r\nobj/Debug/android/bin/classes/classes.zip\r\n```\r\nMove it to:\r\n```\r\nobj/Debug/android/bin/classes.zip\r\n```\r\n\r\nThis prevents the `classes` directory from containing `classes.zip`, and\r\nour strange case of `classes.zip` inception.\r\n\r\nMerry Christmas! I'm going to go play Skylanders now."},{"Id":"7082649003","Type":"IssuesEvent","CreatedAt":"2018-01-10T20:53:22","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1182","RelatedDescription":"Opened issue \"Certain projects are failing to build with AOT and LLVM enabled against d15-6 on Windows\" (#1182) at xamarin/xamarin-android","RelatedBody":"I'm seeing a new failure on Windows when compiling certain projects with both AOT and LLVM. The same error does not reproduce for me on macOS, and appears to be newly introduced in 15.6.\r\n \r\n### Steps to Reproduce\r\n\r\n1. Download ApiDemo - https://github.com/xamarin/monodroid-samples/tree/master/ApiDemo\r\n2. msbuild /p:Configuration=Release /t:SignAndroidPackage /p:AotAssemblies=true /p:EnableLlvm=true ApiDemo.csproj\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project builds successfully with AOT and LLVM enabled.\r\n\r\n### Actual Behavior\r\n```\r\n[aot-compiler stdout] Mono Ahead of Time compiler - compiling assembly C:\\agent\\_work\\r2\\a\\monodroid-samples\\ApiDemo\\obj\\Release\\android\\assets\\shrunk\\Mono.Android.Export.dll (TaskId:348)\r\n  [aot-compiler stdout] AOTID 9B00228E-5ECD-7F32-1753-92A543C073ED (TaskId:348)\r\n  [aot-compiler stdout] Executing opt: \"C:\\PROGRA~2\\MICROS~2\\2017\\ENTERP~1\\MSBuild\\Xamarin\\Android\\opt\" -f -targetlibinfo -no-aa -basicaa -notti -instcombine -simplifycfg -inline-cost -inline -sroa -domtree -early-cse -lazy-value-info -correlated-propagation -simplifycfg -instcombine -simplifycfg -reassociate -domtree -loops -loop-simplify -lcssa -loop-rotate -licm -lcssa -loop-unswitch -instcombine -scalar-evolution -loop-simplify -lcssa -indvars -loop-idiom -loop-deletion -loop-unroll -memdep -gvn -memdep -memcpyopt -sccp -instcombine -lazy-value-info -correlated-propagation -domtree -memdep -adce -simplifycfg -instcombine -strip-dead-prototypes -domtree -verify -o \"C:\\agent\\_work\\r2\\a\\MONODR~2\\ApiDemo\\obj\\Release\\aot\\ARM64-~1\\Mono.Android.Export.dll\\temp.opt.bc\" \"C:\\agent\\_work\\r2\\a\\MONODR~2\\ApiDemo\\obj\\Release\\aot\\ARM64-~1\\Mono.Android.Export.dll\\temp.bc\" (TaskId:348)\r\n  [aot-compiler stdout] Executing llc: \"C:\\PROGRA~2\\MICROS~2\\2017\\ENTERP~1\\MSBuild\\Xamarin\\Android\\llc\"  -asm-verbose=false -mtriple=aarch64-linux-android -disable-gnu-eh-frame -enable-mono-eh-frame -mono-eh-frame-symbol=mono_aot_Mono_Android_Export_eh_frame -relocation-model=pic -o \"C:\\agent\\_work\\r2\\a\\MONODR~2\\ApiDemo\\obj\\Release\\aot\\ARM64-~1\\Mono.Android.Export.dll\\temp-llvm.s\" \"C:\\agent\\_work\\r2\\a\\MONODR~2\\ApiDemo\\obj\\Release\\aot\\ARM64-~1\\Mono.Android.Export.dll\\temp.opt.bc\" (TaskId:348)\r\n  [aot-compiler stderr] Stack dump: (TaskId:348)\r\n  [aot-compiler stderr] 0.\tProgram arguments: C:\\PROGRA~2\\MICROS~2\\2017\\ENTERP~1\\MSBuild\\Xamarin\\Android\\llc -asm-verbose=false -mtriple=aarch64-linux-android -disable-gnu-eh-frame -enable-mono-eh-frame -mono-eh-frame-symbol=mono_aot_MonoDroid_ApiDemo_eh_frame -relocation-model=pic -o C:\\agent\\_work\\r2\\a\\MONODR~2\\ApiDemo\\obj\\Release\\aot\\ARM64-~1\\MonoDroid.ApiDemo.dll\\temp-llvm.s C:\\agent\\_work\\r2\\a\\MONODR~2\\ApiDemo\\obj\\Release\\aot\\ARM64-~1\\MonoDroid.ApiDemo.dll\\temp.opt.bc  (TaskId:348)\r\n  [aot-compiler stderr] 1.\tRunning pass 'Function Pass Manager' on module 'C:\\agent\\_work\\r2\\a\\MONODR~2\\ApiDemo\\obj\\Release\\aot\\ARM64-~1\\MonoDroid.ApiDemo.dll\\temp.opt.bc'. (TaskId:348)\r\n  [aot-compiler stderr] 2.\tRunning pass 'Greedy Register Allocator' on function '@MonoDroid_ApiDemo_ApiDemo_GetDemoActivities_string' (TaskId:348)\r\n  [aot-compiler stderr] AOT of image C:\\agent\\_work\\r2\\a\\monodroid-samples\\ApiDemo\\obj\\Release\\android\\assets\\MonoDroid.ApiDemo.dll failed. (TaskId:348)\r\n```\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/842d3a55d49841a4fa955cd403af1549\r\nAndroid NDK 15.2.4203891\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/report-7d4d56fee1504d14818b0cef6538694e.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7081825512","Type":"IssuesEvent","CreatedAt":"2018-01-10T17:53:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1170","RelatedDescription":"Reopened issue \"No longer able to access `Android.Widget.AbsListView.ChoiceMode` when compiling against v2.3 in d15-6\" (#1170) at xamarin/xamarin-android","RelatedBody":"It appears that the ChoiceMode property of `Android.Widget.AbsListView` https://developer.android.com/reference/android/widget/AbsListView.html#setChoiceMode(int) is no longer accessible when comping against v2.3. This appears to be a regression introduced in d15-6.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the AccessoryViews monodroid sample - https://github.com/xamarin/monodroid-samples/tree/master/AccessoryViews\r\n2. Ensure you have SDK Platform Version 10 (2.3) installed, and attempt to build the project. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project builds without error when targeting v2.3. This succeeds using d15-5 builds:\r\nhttps://gist.githubusercontent.com/pjcollins/22ca1e9064404355a0d88e72bb25d929/raw/3d07327d36390d523ac74e1b7d32af4fc63c73f5/15.5%2520Output\r\n\r\n### Actual Behavior\r\nThe project fails to build against monodroid/d15-6:\r\nhttp://xqa.blob.core.windows.net/gist/report-c995421b88984113bef0729590cdf1cf.txt\r\n```\r\n(CoreCompile target) -> \r\n  HomeScreen.cs(31,16): error CS1061: 'ListView' does not contain a definition for 'ChoiceMode' and no extension method 'ChoiceMode' accepting a first argument of type 'ListView' could be found (are you missing a using directive or an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n  HomeScreen.cs(31,29): error CS0234: The type or namespace name 'ChoiceMode' does not exist in the namespace 'Android.Widget' (are you missing an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n```\r\nInterestingly enough, if I update the Target Framework version of my project to v4.0.3 or higher, the type can be resolved and the project builds successfully.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nhttps://gist.github.com/pjcollins/03e44af172a79acd68ccf2d25dd129ae\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7081543495","Type":"IssuesEvent","CreatedAt":"2018-01-10T16:55:55","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1170","RelatedDescription":"Closed issue \"No longer able to access `Android.Widget.AbsListView.ChoiceMode` when compiling against v2.3 in d15-6\" (#1170) at xamarin/xamarin-android","RelatedBody":"It appears that the ChoiceMode property of `Android.Widget.AbsListView` https://developer.android.com/reference/android/widget/AbsListView.html#setChoiceMode(int) is no longer accessible when comping against v2.3. This appears to be a regression introduced in d15-6.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the AccessoryViews monodroid sample - https://github.com/xamarin/monodroid-samples/tree/master/AccessoryViews\r\n2. Ensure you have SDK Platform Version 10 (2.3) installed, and attempt to build the project. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project builds without error when targeting v2.3. This succeeds using d15-5 builds:\r\nhttps://gist.githubusercontent.com/pjcollins/22ca1e9064404355a0d88e72bb25d929/raw/3d07327d36390d523ac74e1b7d32af4fc63c73f5/15.5%2520Output\r\n\r\n### Actual Behavior\r\nThe project fails to build against monodroid/d15-6:\r\nhttp://xqa.blob.core.windows.net/gist/report-c995421b88984113bef0729590cdf1cf.txt\r\n```\r\n(CoreCompile target) -> \r\n  HomeScreen.cs(31,16): error CS1061: 'ListView' does not contain a definition for 'ChoiceMode' and no extension method 'ChoiceMode' accepting a first argument of type 'ListView' could be found (are you missing a using directive or an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n  HomeScreen.cs(31,29): error CS0234: The type or namespace name 'ChoiceMode' does not exist in the namespace 'Android.Widget' (are you missing an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n```\r\nInterestingly enough, if I update the Target Framework version of my project to v4.0.3 or higher, the type can be resolved and the project builds successfully.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nhttps://gist.github.com/pjcollins/03e44af172a79acd68ccf2d25dd129ae\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7081475109","Type":"IssuesEvent","CreatedAt":"2018-01-10T16:43:21","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1170","RelatedDescription":"Reopened issue \"No longer able to access `Android.Widget.AbsListView.ChoiceMode` when compiling against v2.3 in d15-6\" (#1170) at xamarin/xamarin-android","RelatedBody":"It appears that the ChoiceMode property of `Android.Widget.AbsListView` https://developer.android.com/reference/android/widget/AbsListView.html#setChoiceMode(int) is no longer accessible when comping against v2.3. This appears to be a regression introduced in d15-6.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the AccessoryViews monodroid sample - https://github.com/xamarin/monodroid-samples/tree/master/AccessoryViews\r\n2. Ensure you have SDK Platform Version 10 (2.3) installed, and attempt to build the project. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project builds without error when targeting v2.3. This succeeds using d15-5 builds:\r\nhttps://gist.githubusercontent.com/pjcollins/22ca1e9064404355a0d88e72bb25d929/raw/3d07327d36390d523ac74e1b7d32af4fc63c73f5/15.5%2520Output\r\n\r\n### Actual Behavior\r\nThe project fails to build against monodroid/d15-6:\r\nhttp://xqa.blob.core.windows.net/gist/report-c995421b88984113bef0729590cdf1cf.txt\r\n```\r\n(CoreCompile target) -> \r\n  HomeScreen.cs(31,16): error CS1061: 'ListView' does not contain a definition for 'ChoiceMode' and no extension method 'ChoiceMode' accepting a first argument of type 'ListView' could be found (are you missing a using directive or an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n  HomeScreen.cs(31,29): error CS0234: The type or namespace name 'ChoiceMode' does not exist in the namespace 'Android.Widget' (are you missing an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n```\r\nInterestingly enough, if I update the Target Framework version of my project to v4.0.3 or higher, the type can be resolved and the project builds successfully.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nhttps://gist.github.com/pjcollins/03e44af172a79acd68ccf2d25dd129ae\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7081465052","Type":"IssuesEvent","CreatedAt":"2018-01-10T16:41:31","Actor":"georgi8706","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1181","RelatedDescription":"Opened issue \"RecyclerView.Adapter successor native peer members are disposed (only the android instance - Java.Lang.Object.Handle becomes 0x0) while adapter is still alive\" (#1181) at xamarin/xamarin-android","RelatedBody":"### Short Description of the issue\r\nAll members of my adapter class, that inherits the **RecyclerView.Adapter**, are being disposed in OnLoadFinished callback method\r\nin my activity (responsible for displaying the loaded messages in RecyclerView) that inherits Android.Support.V4.App.LoaderManager.ILoaderCallbacks.\r\n\r\n### \r\n\r\nShort environment details:\r\nXamarin.Android Visual Studio project on Windows 10.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run FindMe application (FindMe is the name of my application).\r\n2. Press the gray square of the main activity (It will start the second activity, which displays a list with the SMS/MMS messages of the phone). \r\n3. Press the back button of the phone to return back to the main activity.\r\n4. Repeat step 2 and 3 several times (In most cases the bug will be reproduced within less than 10 times, but I reproduced it also from the 18 - 20 time). \r\n\r\n### Expected Behavior\r\nI expect while the CMessagesAdapter (inherites RecyclerView.Adapter) is alive, all of its members to be also alive. Otherwise my application crashes when I try to call one of these members.\r\n\r\n### Actual Behavior\r\nMy successor class of  RecyclerView.Adapter (CMessagesAdapter, see attached VS project) has a Java.Lang.String instance member, which Handle suddenly becomes 0x0. \r\nNative peer objects of all of the members of theCMessagesAdapter suddenly are deleted (at least **Handle becomes 0x0**).\r\nThis happens in the **OnLoadFinished** callback method (my activity, CMessagingActivity, that has the RecyclerView, inherites  Android.Support.V4.App.LoaderManager.ILoaderCallbacks).\r\nAfter the loader loads the messages from the data base and returns back to the activity to display them, the the java instances of the adapter members are disposed. \r\nThis does not reproduce always, but very often. I managed to reproduced it at the 2nd and 3rd time, but also often at 6th and 9th time. I also reproduced it at 18th time, \r\nso please check it at least 30 times to be sure that you will get to the problem.\r\nWhen I say here \"time\" I mean: press the square button and wait the messages to load (OnLoadFinished is called). This is a single time. Then press the back button to return back and repeat the same steps one more time. This is a second time. So for example 9th time means that calling the OnLoadFInished for the 9th time.\r\nI reproduced the problem both on release and debug. \r\nI managed to reproduce it more easily (less steps) when I enabled gref and gc in the log\r\nfrom the command line: \r\n**adb shell setprop debug.mono.log gref,gc**\r\n \r\nI managed to reproduces it only on my phone - **LGE LG-H525n (this is LG G4c)**.\r\nI couldn't reproduce this bug on an emulator.\r\n\r\n### Reproduced device info:\r\nLGE LG-H525n (this is LG G4c)\r\nAndroid: **6.0, API 23**\r\nAndroid security patch level: 2016-07-01\r\nKernel version: 3.10.49\r\nSoftware Version: V20d-EUR-XX\r\n\r\n### My Environment:\r\nSee the MyEnvironment.txt file in the archive.\r\n\r\n### Version Information\r\nVisual Studio Version Info file VisualStudioVersionInfo.txt is in the archive with the Visual Studio project and the rest files.\r\n### Log File\r\nSee the grefLog.txt file in the archive with the Visual Studio project and the rest files.\r\n\r\n### Source code and Visual Studio project\r\nSee the FindMe.7z\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n[AndroidInstanceBugReportInBugzilla.zip](https://github.com/xamarin/xamarin-android/files/1619659/AndroidInstanceBugReportInBugzilla.zip)\r\n\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7081421802","Type":"PullRequestEvent","CreatedAt":"2018-01-10T16:33:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1180","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix classes-zip inception (#1142)\" (#1180) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=61073\r\nContext: a296784\r\n\r\nWhen we added the new `classes.zip` functionality, there was one oddity\r\npresent. On the first build, everything appears to be normal. On the\r\nsecond build, `classes.zip` appeared to contain itself inside itself???\r\n\r\nTo make things even stranger, I wrote a unit test that contains a\r\n`Java.Lang.Object` subclass in which its type and namespace names change\r\non each write. This worked fine on macOS, even with the oddity of\r\n`classes.zip` continually zipping itself inside itself... The new java\r\nsources would appear at the bottom of the list within the zip file.\r\n\r\nEverything broke down when I tried my unit test on Windows, the case of\r\n`classes.zip` trying to compress itself inside itself was silently\r\nfailing. It was not processing any further files after the failing zip\r\nentry, and so *in theory* this situation would cause many Java stubs to\r\nbe missing from the zip.\r\n\r\nSolution? Let's just put `classes.zip` up one directory.\r\n\r\nSo instead of:\r\n```\r\nobj/Debug/android/bin/classes/classes.zip\r\n```\r\nMove it to:\r\n```\r\nobj/Debug/android/bin/classes.zip\r\n```\r\n\r\nThis prevents the `classes` directory from containing `classes.zip`, and\r\nour strange case of `classes.zip` inception.\r\n\r\nMerry Christmas! I'm going to go play Skylanders now."},{"Id":"7081345919","Type":"IssuesEvent","CreatedAt":"2018-01-10T16:20:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1171","RelatedDescription":"Closed issue \"Warning [ObsoleteSdkInt] displayed when enabling lint checks in simple XA app\" (#1171) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Build a simple \"Hello World\" type application with /p:AndroidLintEnabled=true /p:AndroidUseLatestPlatformSdk=true\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nXamarin Android lint checks produce no warnings or errors for a simple 'template' style project.\r\n\r\n### Actual Behavior\r\nXA Lint checks now produce the following warning:\r\n```\r\n(_LintChecks target) -> \r\n  obj/Debug/android/src/mono/MonoPackageManager.java(85,6): warning XA0102:  Unnecessary; SDK_INT is always >= 10 [ObsoleteSdkInt] [/Users/petercollins/git/monodroid-samples/HelloWorld/HelloWorld.csproj]\r\n```\r\n\r\n### Version Information\r\n\r\nXA Version: 8.2.0.4\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.2\r\n\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-e3357168d0154e319154eb4c64863316.txt\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7081344902","Type":"PullRequestEvent","CreatedAt":"2018-01-10T16:20:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1179","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Ignore the ObsoleteSdkInt Lint Check\" (#1179) at xamarin/xamarin-android","RelatedBody":"Context #1171\r\n\r\nThere is a new test [ObsoleteSdkInt] which produces a warning\r\nsuch as\r\n\r\n\tobj/Debug/android/src/mono/MonoPackageManager.java(85,6): warning XA0102:  Unnecessary; SDK_INT is always >= 10 [ObsoleteSdkInt]\r\n\r\nSo our MonoPackageManager.java file is the cause of this\r\nparticular warning [1]. I am not sure we can remove that\r\nline of code yet, since our apps can run on older devices.\r\nThat said once the % share of devices for API's < 8 is 0,\r\nwe can probably remove that line of code completely and\r\nre-enable this check.\r\n\r\n[1] https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Resources/MonoPackageManager.java#L85"},{"Id":"7081320164","Type":"IssuesEvent","CreatedAt":"2018-01-10T16:15:46","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1134","RelatedDescription":"Closed issue \"New APT0000 msbuild errors are being reported from aapt output parsing\" (#1134) at xamarin/xamarin-android","RelatedBody":"This was previously discussed, however there still appear to be some corner cases that weren't addressed by the latest relevant change in commit https://github.com/xamarin/xamarin-android/commit/2135856e.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/Xamarin.Android.JcwGen-Tests.csproj with msbuild.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild should succeed without incorrectly reporting aapt warnings as msbuild errors.\r\n\r\n### Actual Behavior\r\nBuild fails with the following:\r\n```\r\nExecuting package -f -m -M /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl/manifest/AndroidManifest.xml -J /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl --custom-package xamarin.android.jcwgen_tests -F /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl/resources.apk.bk -S obj/Release/res/ -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/lp/3/jl/res -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/lp/5/jl/res -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/resourcecache/6ECC701C56CAE8576696DE7B3605BB4A/res -j obj/Release/lp/4/jl/__reference__empty-1.jar -j obj/Release/lp/4/jl/__reference__empty-2.jar -j obj/Release/lp/4/jl/xamarin-test.jar -I /Users/xamarinqa/Library/Developer/Xamarin/android-sdk-macosx/platforms/android-10/android.jar --auto-add-overlay --max-res-version 10 (TaskId:1230)\r\naapt : error APT0000: max res 10, skipping values-sw720dp-land-v13 \"max res 10, skipping values-sw720dp-land-v13\". [/Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/Xamarin.Android.JcwGen-Tests.csproj]\r\nDone executing task \"Aapt\" -- FAILED. (TaskId:1230)\r\n```\r\n\r\n### Version Information\r\nXA 8.2.0.0.\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-f69375a71be042929c3d54c25ecfd34b.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7081319246","Type":"PullRequestEvent","CreatedAt":"2018-01-10T16:15:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1178","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix Aapt task to emit warnings\" (#1178) at xamarin/xamarin-android","RelatedBody":"Context #1134\r\n\r\nCommit 23c5801 reworked Aapt to emit warnings if the required\r\noutput file did exist. If it didn't we should emit errors.\r\nThere was one slight problem with this, we were checking the\r\nwrong file. We should have been checking for the temp\r\npackaged_resources file rather than the R.txt (which will\r\nalways exist after an initial build).\r\n\r\nThis commit fixes that amd adds a unit test. Note the in order\r\nto create the senario we need to have a `$(TargetFrameworkVersion)`\r\nwhich is `v8.0`. We currently only build `v1.0` and `v8.1` for\r\nPR builds. So the test checks to see if that target framework is\r\navailable. If not the test will be ignored."},{"Id":"7080607490","Type":"PullRequestEvent","CreatedAt":"2018-01-10T14:06:54","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1179","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Ignore the ObsoleteSdkInt Lint Check\" (#1179) at xamarin/xamarin-android","RelatedBody":"Context #1171\r\n\r\nThere is a new test [ObsoleteSdkInt] which produces a warning\r\nsuch as\r\n\r\n\tobj/Debug/android/src/mono/MonoPackageManager.java(85,6): warning XA0102:  Unnecessary; SDK_INT is always >= 10 [ObsoleteSdkInt]\r\n\r\nSo our MonoPackageManager.java file is the cause of this\r\nparticular warning [1]. I am not sure we can remove that\r\nline of code yet, since our apps can run on older devices.\r\nThat said once the % share of devices for API's < 8 is 0,\r\nwe can probably remove that line of code completely and\r\nre-enable this check.\r\n\r\n[1] https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Resources/MonoPackageManager.java#L85"},{"Id":"7079986231","Type":"PullRequestEvent","CreatedAt":"2018-01-10T11:44:37","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1176","RelatedDescription":"Merged pull request \"[build] Set `$(JI_MAX_JDK)` for Java.Interop\" (#1176) at xamarin/xamarin-android","RelatedBody":"Update the `make prepare` step so that we pass `JI_MAX_JDK=8` to\r\nJava.Interop's `make prepare` step. This prevents us from using JDK 9\r\nif it is installed on the machine.\r\n\r\nInternal VSTS builds are failing *seemingly* because JDK 9 is\r\ninstalled and used by default on the build machine, with `gradelw`\r\nbailing out with:\r\n\r\n\tCaused by: java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlSchema\r\n\r\nThis previously worked with JDK 8, so we're hoping that the use of\r\nJDK 9 is the cause, and by *excluding* JDK 9 from being used we'll be\r\nable to build on VSTS again."},{"Id":"7079985278","Type":"PullRequestEvent","CreatedAt":"2018-01-10T11:44:22","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1178","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix Aapt task to emit warnings\" (#1178) at xamarin/xamarin-android","RelatedBody":"Context #1134\r\n\r\nCommit 23c5801 reworked Aapt to emit warnings if the required\r\noutput file did exist. If it didn't we should emit errors.\r\nThere was one slight problem with this, we were checking the\r\nwrong file. We should have been checking for the temp\r\npackaged_resources file rather than the R.txt (which will\r\nalways exist after an initial build).\r\n\r\nThis commit fixes that amd adds a unit test. Note the in order\r\nto create the senario we need to have a `$(TargetFrameworkVersion)`\r\nwhich is `v8.0`. We currently only build `v1.0` and `v8.1` for\r\nPR builds. So the test checks to see if that target framework is\r\navailable. If not the test will be ignored."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7083360482","Type":"IssuesEvent","CreatedAt":"2018-01-10T23:54:39","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1524","RelatedDescription":"Closed issue \"2.5.0.122203 not available on NuGet\" (#1524) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe latest release for Xamarin Forms is _2.5.0 Service Release 3 (2.5.0.122203)_, whereas the latest version on NuGet is 2.5.0.121934. I don't know the details of the release process, but since 2.5.0.12203 is released since 21 days (as of today), I would expect to be available on NuGet as well.\r\n\r\n### Steps to Reproduce\r\n1. Go to https://github.com/xamarin/Xamarin.Forms/releases, check latest version --> 2.5.0.122203\r\n2. Go to https://www.nuget.org/packages/Xamarin.Forms/, check latest version --> 2.5.0.121934\r\n\r\n### Expected Behavior\r\nLatest release is available on NuGet.\r\n### Actual Behavior\r\nLatest release is not available on NuGet.\r\n"},{"Id":"7082696893","Type":"PullRequestEvent","CreatedAt":"2018-01-10T21:04:01","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1069","RelatedDescription":"Closed pull request \"IPlatformRenderer\" (#1069) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSpike of IPlatformRenderer\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\n- Add IPlatformRenderer\r\n- Add IPlatformRenderer< T >\r\n- Add VisualElementAttribute\r\n  - Apply to Element to load renderer of the same name + \"Renderer\"\r\n- PR_Label; Derives from Label; VisualElement applied\r\n- PR_LabelRenderer; Only UWP. Implemenets IPlatformRenderer< T >; Forwards calls to composed LabelRenderer\r\n\r\n### Behavioral Changes ###\r\n\r\nNone; Goal is to be backward compatible\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7082557977","Type":"IssuesEvent","CreatedAt":"2018-01-10T20:32:52","Actor":"chkn","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1553","RelatedDescription":"Opened issue \"CSS stylesheet doesn't work in Application.Resources\" (#1553) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\n\r\nA CSS stylesheet referenced from a `StyleSheet` element in XAML only works in the Page.Resources, not in Application.Resources.\r\n\r\n### Steps to Reproduce\r\n\r\nDo the same steps in https://github.com/xamarin/Xamarin.Forms/issues/1552 but add the stylesheet to the `Application` in step 4.\r\n\r\n### Expected Behavior\r\n\r\nAll pages should inherit the styles from the application.\r\n\r\n### Actual Behavior\r\n\r\nYou need to specify the stylesheet on each page.\r\n\r\n### Basic Information\r\n\r\nSame as https://github.com/xamarin/Xamarin.Forms/issues/1552 \r\n\r\n### Reproduction Link\r\n\r\nSame as https://github.com/xamarin/Xamarin.Forms/issues/1552 \r\n"},{"Id":"7082500223","Type":"IssuesEvent","CreatedAt":"2018-01-10T20:20:02","Actor":"chkn","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1552","RelatedDescription":"Opened issue \"CSS stylesheet not found by default \" (#1552) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\n\r\nThe CSS stylesheet resource can't be found when referenced from a `StyleSheet` element in a shared project XAML file.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new shared project, XAML forms project like so:\r\n\r\n<img width=\"903\" alt=\"screen shot 2018-01-10 at 10 05 34 am\" src=\"https://user-images.githubusercontent.com/289291/34793011-cd37ad9c-f5fe-11e7-9b4e-81484b981628.png\">\r\n\r\n2. Add the Xamarin.Forms [nightly](https://blog.xamarin.com/try-the-latest-in-xamarin-forms-with-nightly-builds/) NuGet to the iOS platform project. (I used version `2.6.0.79756-nightly`)\r\n\r\n3. Add a new CSS file called `Styles.css` to the shared project.\r\n\r\n4. Open the default page created by the project template and add this to the `ContentPage`:\r\n\r\n```\r\n    <ContentPage.Resources>\r\n        <StyleSheet Source=\"Styles.css\" />\r\n    </ContentPage.Resources>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe stylesheet is loaded at runtime and works.\r\n\r\n### Actual Behavior\r\n\r\nException:\r\n\r\n```\r\nXamarin.Forms.Xaml.XamlParseException: Position 8:10. Resource 'Styles.css' not found.\r\n  at Xamarin.Forms.Xaml.ResourcesLoader.GetResource (System.String resourcePath, System.Reflection.Assembly assembly, System.Xml.IXmlLineInfo lineInfo) [0x00011] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\ResourcesLoader.cs:40 \r\n  at Xamarin.Forms.Xaml.StyleSheetExtension.Xamarin.Forms.Xaml.IValueProvider.ProvideValue (System.IServiceProvider serviceProvider) [0x000f8] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\MarkupExtensions\\StyleSheetExtension.cs:35 \r\n  at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.ProvideValue (System.Object& value, Xamarin.Forms.Xaml.ElementNode node, System.Object source, Xamarin.Forms.Xaml.XmlName propertyName) [0x000a4] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:235 \r\n  at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.Visit (Xamarin.Forms.Xaml.ElementNode node, Xamarin.Forms.Xaml.INode parentNode) [0x00103] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:105 \r\n  at Xamarin.Forms.Xaml.ElementNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x000d5] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:149 \r\n  at Xamarin.Forms.Xaml.RootNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00058] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:201 \r\n  at Xamarin.Forms.Xaml.XamlLoader.Visit (Xamarin.Forms.Xaml.RootNode rootnode, Xamarin.Forms.Xaml.HydrationContext visitorContext) [0x00083] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:142 \r\n  at Xamarin.Forms.Xaml.XamlLoader.Load (System.Object view, System.String xaml) [0x000ab] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:88 \r\n  at Xamarin.Forms.Xaml.XamlLoader.Load (System.Object view, System.Type callingType) [0x00029] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:66 \r\n  at Xamarin.Forms.Xaml.Extensions.LoadFromXaml[TXaml] (TXaml view, System.Type callingType) [0x00001] in D:\\agent\\_work\\6\\s\\Xamarin.Forms.Xaml\\ViewExtensions.cs:36 \r\n  at FormsCSSTest.FormsCSSTestPage.InitializeComponent () [0x00001] in /Users/alcorra/Projects/FormsCSSTest/iOS/obj/iPhoneSimulator/Debug/FormsCSSTestPage.xaml.g.cs:21 \r\n  at FormsCSSTest.FormsCSSTestPage..ctor () [0x00008] in /Users/alcorra/Projects/FormsCSSTest/FormsCSSTestPage.xaml.cs:7 \r\n  at FormsCSSTest.App..ctor () [0x0000f] in /Users/alcorra/Projects/FormsCSSTest/App.xaml.cs:9 \r\n  at FormsCSSTest.iOS.AppDelegate.FinishedLaunching (UIKit.UIApplication app, Foundation.NSDictionary options) [0x00007] in /Users/alcorra/Projects/FormsCSSTest/iOS/AppDelegate.cs:15 \r\n  at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/5665/f70a1348/source/xamarin-macios/src/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/5665/f70a1348/source/xamarin-macios/src/UIKit/UIApplication.cs:63 \r\n  at FormsCSSTest.iOS.Application.Main (System.String[] args) [0x00001] in /Users/alcorra/Projects/FormsCSSTest/iOS/Main.cs:15 \r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.6.0.79756-nightly\r\n- Last known good version: None\r\n- IDE:\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 5)\r\nInstallation UUID: bc5e4cf1-375a-48d4-b837-aea80fd6075a\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t2.0.0-preview2-25407-01\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t2.0.0-preview2-006497\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.215 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.3.0 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/alcorra/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 26.0.0\r\nSDK Build Tools Version: 25.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.3 (Visual Studio Enterprise)\r\nHash: f70a1348\r\nBranch: xcode9.2\r\nBuild date: 2017-12-18 14:47:16-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0-rc1\r\nHash: 7f3bf81\r\nBranch: master\r\nBuild date: Fri, 22 Dec 2017 22:04:38 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030005\r\nGit revision: b1c2982e201e71ef758866c9ade05f253a8c6f47\r\nBuild date: 2017-12-21 11:04:40-05\r\nXamarin addins: f397ddfbacfb39e60c9cc8d9e410f73faf8c2cbc\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Reproduction Link\r\n\r\n[FormsCSSTest.zip](https://github.com/xamarin/Xamarin.Forms/files/1620334/FormsCSSTest.zip)"},{"Id":"7082335315","Type":"PullRequestEvent","CreatedAt":"2018-01-10T19:43:02","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1551","RelatedDescription":"Merged pull request \"[CSS] allow the previewer to intercept the load call earlier\" (#1551) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[CSS] allow the previewer to intercept the load call earlier\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7084149083","Type":"IssuesEvent","CreatedAt":"2018-01-11T04:56:35","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3198","RelatedDescription":"Closed issue \"UIDocumentBrowserViewControllerDelegate.DidImportDocument bound incorrectly\" (#3198) at xamarin/xamarin-macios","RelatedBody":"`IUIDocumentBrowserViewControllerDelegate` and `UIDocumentBrowserViewControllerDelegate` have DidImportDocument bound incorrectly.\r\n\r\n```csharp\r\n[Export (\"documentBrowser:didImportDocumentAtURL:toDestinationURL:\"), CompilerGenerated]\r\npublic virtual void DidImportDocument (UIDocumentBrowserViewController controller, NSUrl sourceUrl, NSUrl destinationUrl)\r\n```\r\n\r\nshould be: `documentBrowser:didImportDocumentAt:toDestinationURL:`\r\n\r\nhttps://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874196-documentbrowser\r\n\r\n"},{"Id":"7084042528","Type":"IssuesEvent","CreatedAt":"2018-01-11T04:08:13","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3198","RelatedDescription":"Opened issue \"UIDocumentBrowserViewControllerDelegate.DidImportDocument bound incorrectly\" (#3198) at xamarin/xamarin-macios","RelatedBody":"`IUIDocumentBrowserViewControllerDelegate` and `UIDocumentBrowserViewControllerDelegate`\r\n\r\n```csharp\r\n[Export (\"documentBrowser:didImportDocumentAtURL:toDestinationURL:\"), CompilerGenerated]\r\n\t\tpublic virtual void DidImportDocument (UIDocumentBrowserViewController controller, NSUrl sourceUrl, NSUrl destinationUrl)\r\n```\r\n\r\nshould be: `documentBrowser:didImportDocumentAt:toDestinationURL:`\r\n\r\nhttps://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874196-documentbrowser\r\n\r\n"},{"Id":"7083712015","Type":"PullRequestEvent","CreatedAt":"2018-01-11T01:58:50","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3191","RelatedDescription":"Merged pull request \"[tests][macos] Enable more tests to be executed on macOS (XM)\" (#3191) at xamarin/xamarin-macios","RelatedBody":"Largely related to somewhat recent frameworks/API additions to XM"},{"Id":"7083107053","Type":"PullRequestEvent","CreatedAt":"2018-01-10T22:41:35","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3196","RelatedDescription":"Opened pull request \"[README] Add documentation for generator-diff.mk\" (#3196) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7082229775","Type":"IssuesEvent","CreatedAt":"2018-01-10T19:20:30","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3195","RelatedDescription":"Opened issue \"[XI]LookInside sample fails with build error \"error : Unexpected character ']' with d15-6\" (#3195) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open LookInside sample, ios-samples/ios8/LookInside\r\n2. Build it\r\n\r\n### Expected Behavior\r\nApp should build successfully\r\n\r\n### Actual Behavior\r\nApp fails to build with an error \"error : Unexpected character ']'. This issue occurs with d15-6 builds and not with d15-5  (11.6.X builds)\r\n\r\n### Environment\r\n```\r\n=== Xamarin.iOS ===\r\n\r\nVersion: xamarin.ios-11.8.0.8 (Visual Studio Community)\r\nBranch: xcode9.2\r\n\r\n```\r\n### Build Logs\r\n\r\nBuild Log with Stable: https://gist.github.com/GouriKumari/be22288e296816c93308cd9895563291\r\nBuild Log with error: https://gist.github.com/GouriKumari/8ecb3da1d10744d46c35f8f726cfaa8d\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"951172797337866240","CreatedAt":"2018-01-10T19:24:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio 2017 version 15.6 Preview is now available! Get started today: https://t.co/KG2CJ20AHH https://t.co/e5VR78hTLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":16,"RawContent":null},{"Id":"951133533246025738","CreatedAt":"2018-01-10T16:48:00+00:00","UserScreenname":"xamarinhq","Text":"Get the most out of Binding in #XamarinForms with this overview of the powerful features that you should be using: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":19,"RawContent":null},{"Id":"950803363595243521","CreatedAt":"2018-01-09T18:56:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/V8JfqCj42s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":81,"FavoriteCount":35,"RawContent":null},{"Id":"950774673335341058","CreatedAt":"2018-01-09T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/G6BluXZvLM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":11,"RawContent":null},{"Id":"950410272363163649","CreatedAt":"2018-01-08T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/k8IzINY3SW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":60,"RawContent":null},{"Id":"950049897843105792","CreatedAt":"2018-01-07T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDfY3Ep https://t.co/6yNTVxdVbh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":18,"RawContent":null},{"Id":"949688768231104512","CreatedAt":"2018-01-06T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/EvDnR69pjy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":105,"FavoriteCount":47,"RawContent":null},{"Id":"949372052758302723","CreatedAt":"2018-01-05T20:08:30+00:00","UserScreenname":"xamarinhq","Text":"Learn how Colonial Life drives field sales productivity with #dotNET and #DevOps using #XamarinForms:… https://t.co/Y1wBTN0TJA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"949323858972233734","CreatedAt":"2018-01-05T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":21,"RawContent":null},{"Id":"948981959132368901","CreatedAt":"2018-01-04T18:18:24+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/VAkrZo84pP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":39,"RawContent":null},{"Id":"948961974766972934","CreatedAt":"2018-01-04T16:59:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":16,"RawContent":null},{"Id":"948635192490590211","CreatedAt":"2018-01-03T19:20:29+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/sV84us2Np4 https://t.co/tduUDgg9oS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":6,"RawContent":null},{"Id":"948604119945760768","CreatedAt":"2018-01-03T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/tuqMBJJWpq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"948294578192437248","CreatedAt":"2018-01-02T20:47:00+00:00","UserScreenname":"xamarinhq","Text":"Did your favorite make the cut? Get the full list of the top #Xamarin blog posts of 2017, and see the top post of t… https://t.co/dVcXEnCo7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"947216981937319938","CreatedAt":"2017-12-30T21:25:01+00:00","UserScreenname":"xamarinhq","Text":"The countdown is winding down! Post No. 2 in the #12DaysofXamarin walks you through implementing push notifications… https://t.co/uiyyYhL6zW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"946830183532724235","CreatedAt":"2017-12-29T19:48:01+00:00","UserScreenname":"xamarinhq","Text":"Just getting started with #XamarinForms? Let PM @davidortinau show you how to beat the learning curve in post No. 3… https://t.co/0y63QrYo5f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":20,"RawContent":null},{"Id":"946788653736583169","CreatedAt":"2017-12-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":15,"RawContent":null},{"Id":"946472572895588353","CreatedAt":"2017-12-28T20:07:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with C# 7 with @jamesmontemagno in the 4th post in our #12DaysofXamarin countdown: https://t.co/nWuAmDsr0R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":31,"RawContent":null},{"Id":"946430293401067521","CreatedAt":"2017-12-28T17:19:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/VlbopDlbd6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2018-01-11T05:30:37.1276135Z","RunDurationInMilliseconds":3984}