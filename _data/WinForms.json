{"Data":{"GitHub":{"Issues":[{"Id":"507544328","IsPullRequest":true,"CreatedAt":"2019-10-16T00:13:39","Actor":"zsd4yr","Number":"2092","RawContent":null,"Title":"Enable API Compat against Desktop Framework","State":"open","Body":"Fixes #1538 #1059\r\n\r\n## Proposed changes\r\n\r\n- share resources when possible with Gen Facades target\r\n- small cleanup of some targets files related to Gen Facades\r\n- plumb API Compat into build, test against 4.7.2 Framework assembleis\r\n- add baseline files for thorough review\r\n\r\n## Customer Impact\r\n- more reliable contract\r\n- likely discover api incompatibilities which may require servicing\r\n\r\n## Risk\r\n- minimal, no change to shipping product as of yet.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2092)","Url":"https://github.com/dotnet/winforms/pull/2092","RelatedDescription":"Open PR \"Enable API Compat against Desktop Framework\" (#2092)"},{"Id":"507543549","IsPullRequest":false,"CreatedAt":"2019-10-16T00:10:39","Actor":"RussKie","Number":"2091","RawContent":null,"Title":"Mark deprecated controls as obsolete","State":"open","Body":"\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nThe following types have been deprecated in .NET Framework:\r\n\r\n* https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/DataGrid.cs (e.g. [deprecation warning](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagrid?view=netframework-4.8))\r\n* https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/Menu.cs\r\n* https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/MenuItem.cs\r\n* https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/MainMenu.cs\r\n* https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/ContextMenu.cs\r\n\r\nHowever this fact was overlooked during the migration, and the types were brought into .NET Core 3.0.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThe types are marked as obsolete and force consumers to use supported alternatives.\r\n","Url":"https://github.com/dotnet/winforms/issues/2091","RelatedDescription":"Open issue \"Mark deprecated controls as obsolete\" (#2091)"},{"Id":"507103092","IsPullRequest":true,"CreatedAt":"2019-10-15T22:53:13","Actor":"v-zbsail","Number":"2086","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms release/3.1 | 20191015","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Loc update\r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2086)","Url":"https://github.com/dotnet/winforms/pull/2086","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms release/3.1 | 20191015\" (#2086)"},{"Id":"507511537","IsPullRequest":true,"CreatedAt":"2019-10-15T22:19:04","Actor":"M-Lipin","Number":"2090","RawContent":null,"Title":"WIP [Accessibility]: Adding MonthCalendar control UI Automation providers to improve calendar control accessibility","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1908, #1909, #1910, #1911 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding MonthCalendar control UIA providers as accessibility implementation;\r\n- Adding fragment navigation (Narrator caps navigation and announcing for each child);\r\n- Adding Grid and Table providers for calendar body;\r\n- Reworked accessibility implementation, hierarchy and overall accessibility providing patterns for control;\r\n- Temporarily disabled legacy accessibility providers for control (will restore in next commits). \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will be able to navigate, listen to correct announcement and fully interact with the calendar control using desktop assistive technologies and apps.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal (need to perform manual and automation verification to be sure that accessibility is correct for calendar control)\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n- Accessibility is provided only for the container (name) without navigation and no more info provided.\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/66873945-6b9a4400-efb2-11e9-903c-c951a9fb905e.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Automation UI and accessibility test.\r\n- Unit tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Need to perform tests including verification of accessible names, navigation and patterns provided correctly. Assistive technologies and accessibility client apps should work correctly with new accessibility.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview1-014044\r\n Commit:    dca04e7030\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014044\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19463.3\r\n  Commit:  1e35b022cb\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-012929 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview9-014004 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014044 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19351.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview9.19424.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc2.19462.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19463.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19463.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2090)","Url":"https://github.com/dotnet/winforms/pull/2090","RelatedDescription":"Open PR \"WIP [Accessibility]: Adding MonthCalendar control UI Automation providers to improve calendar control accessibility\" (#2090)"},{"Id":"507500759","IsPullRequest":true,"CreatedAt":"2019-10-15T21:48:58","Actor":"zsd4yr","Number":"2089","RawContent":null,"Title":"Port Drawing.Design Icon Editor","State":"open","Body":"Port Icon Editor for 3.1\r\n\r\nCloses #2020 \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2089)","Url":"https://github.com/dotnet/winforms/pull/2089","RelatedDescription":"Open PR \"Port Drawing.Design Icon Editor\" (#2089)"},{"Id":"507182919","IsPullRequest":false,"CreatedAt":"2019-10-15T21:38:18","Actor":"PDostalek","Number":"2087","RawContent":null,"Title":" [loc][Query][winforms] Localizability of 0; \"columnHeader1.Text\"","State":"closed","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\nColumnHeader1\r\n\r\nFile Name:\r\nSystem.Windows.Forms\\tests\\IntegrationTests\\WinformsControlsTest\\xlf\\ListViewTest.xlf\r\n\r\n==========================================\r\nQuery:\r\nIs this entry translatable? Same for following strings:\r\nColumnHeader2 0; \"columnHeader2.Text\"\r\nTableLayoutPanels 0; \"$this.Text\"","Url":"https://github.com/dotnet/winforms/issues/2087","RelatedDescription":"Closed issue \" [loc][Query][winforms] Localizability of 0; \"columnHeader1.Text\"\" (#2087)"},{"Id":"506762300","IsPullRequest":false,"CreatedAt":"2019-10-15T18:55:50","Actor":"jmarolf","Number":"2084","RawContent":null,"Title":"Incorrect position of controls when layout is suspended","State":"closed","Body":"* .NET Core Version: 3.0 RTW\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n\r\n**Problem description:**\r\n\r\nWhen a controls layout is suspended, if anchors are specified, changing the location of that control will cause incorrect positions to occur when layout is resumed\r\n\r\n**Actual behavior:**\r\n\r\n![](https://user-images.githubusercontent.com/9663150/65137205-32999e80-da09-11e9-80f8-852861f4f392.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2084","RelatedDescription":"Closed issue \"Incorrect position of controls when layout is suspended\" (#2084)"},{"Id":"506746646","IsPullRequest":true,"CreatedAt":"2019-10-15T18:28:24","Actor":"hughbe","Number":"2083","RawContent":null,"Title":"Remove duplicate GetCursor interop","State":"closed","Body":"## Proposed Changes\r\n- Remove duplicate GetCursor/GetCursorPos interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2083)","Url":"https://github.com/dotnet/winforms/pull/2083","RelatedDescription":"Closed or merged PR \"Remove duplicate GetCursor interop\" (#2083)"},{"Id":"507198828","IsPullRequest":true,"CreatedAt":"2019-10-15T16:41:44","Actor":"dotnet-maestro[bot]","Number":"2088","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191015.1\r\n- **Date Produced**: 10/15/2019 9:05 AM\r\n- **Commit**: a093b5b2bef24499239a2e9b4114db01fa19e446\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19515.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2088)","Url":"https://github.com/dotnet/winforms/pull/2088","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2088)"},{"Id":"507078454","IsPullRequest":false,"CreatedAt":"2019-10-15T08:09:04","Actor":"AustinWise","Number":"2085","RawContent":null,"Title":"When building winforms repo, global.json file is not fully respected","State":"open","Body":"I discovered this on the 3.1 branch. I'm not sure if this is a winforms problem or an arcade problem, or how big of a problem it really is.\r\n\r\nTo reproduce:\r\n1. Do a build.\r\n1. Switcher to an older branch whose global.json specifies an older SDK version.\r\n1. Do NOT clean the repo.\r\n1. Do a build.\r\n\r\nExpected: the precise SDK version specified in the global.json is used.\r\nActual: the `latestMajor` roll forward policy is applied and a newer SDK in the `.dotnet` folder of the repo is used.\r\n\r\nAn example build, where 3.1.100-preview1-014024 is the specified version in global.json and there is also a 3.1.100-preview2-999999 SDK in the .dotnet folder of the repo. Some parts elided with dots for brevity:\r\n\r\n```cmd\r\nC:\\externsrc\\dotnet\\winforms>set COREHOST_TRACE=1\r\n\r\nC:\\externsrc\\dotnet\\winforms>build.cmd\r\nProcessing C:\\externsrc\\dotnet\\winforms\\eng\\..\\global.json\r\n..........\r\n...........\\msbuild.exe ............ C:\\Users\\AustinWise\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\tools\\Build.proj\r\nTracing enabled @ Tue Oct 15 07:11:52 2019 GMT\r\n--- Invoked hostfxr_resolve_sdk2 [commit hash: 7d57652f33493fa022125b7f63aad0d70c52d810]\r\nProbing path [C:\\Users\\AustinWise\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\tools\\global.json] for global.json\r\nProbing path [C:\\Users\\AustinWise\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\global.json] for global.json\r\nProbing path [C:\\Users\\AustinWise\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\global.json] for global.json\r\nProbing path [C:\\Users\\AustinWise\\.nuget\\packages\\global.json] for global.json\r\nProbing path [C:\\Users\\AustinWise\\.nuget\\global.json] for global.json\r\nProbing path [C:\\Users\\AustinWise\\global.json] for global.json\r\nProbing path [C:\\Users\\global.json] for global.json\r\nProbing path [C:\\global.json] for global.json\r\nTerminating global.json search at [C:\\]\r\nResolving SDKs with version = 'latest', rollForward = 'latestMajor', allowPrerelease = true\r\nSearching for SDK versions in [C:\\externsrc\\dotnet\\winforms\\.dotnet\\sdk]\r\nVersion [3.1.100-preview1-014024] is a better match than [none]\r\nVersion [3.1.100-preview2-999999] is a better match than [3.1.100-preview1-014024]\r\nSDK path resolved to [C:\\externsrc\\dotnet\\winforms\\.dotnet\\sdk\\3.1.100-preview2-999999]\r\n```\r\n\r\nNote how the global.json is being search for in the Nuget packages folder.\r\n\r\nIt is possible to make the [SDK resolver respect the global.json file](https://github.com/dotnet/cli/blob/2f2f09d450887470a5f255f9496ae98b54994725/src/Microsoft.DotNet.MSBuildSdkResolver/MSBuildSdkResolver.cs#L293) by specifying the solution path:\r\n\r\n```cmd\r\nC:\\externsrc\\dotnet\\winforms>build.cmd /p:SolutionPath=%cd%\\Winforms.sln\r\n.............\r\n...........\\msbuild.exe ................. C:\\Users\\AustinWise\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\tools\\Build.proj\r\nTracing enabled @ Tue Oct 15 07:27:15 2019 GMT\r\n--- Invoked hostfxr_resolve_sdk2 [commit hash: 7d57652f33493fa022125b7f63aad0d70c52d810]\r\nProbing path [C:\\externsrc\\dotnet\\winforms\\global.json] for global.json\r\nFound global.json [C:\\externsrc\\dotnet\\winforms\\global.json]\r\n--- Resolving SDK information from global.json [C:\\externsrc\\dotnet\\winforms\\global.json]\r\nValue 'sdk/rollForward' is missing or null in [C:\\externsrc\\dotnet\\winforms\\global.json]\r\nValue 'sdk/allowPrerelease' is missing or null in [C:\\externsrc\\dotnet\\winforms\\global.json]\r\nResolving SDKs with version = '3.1.100-preview1-014024', rollForward = 'patch', allowPrerelease = true\r\nSearching for SDK versions in [C:\\externsrc\\dotnet\\winforms\\.dotnet\\sdk]\r\nFound requested SDK directory [C:\\externsrc\\dotnet\\winforms\\.dotnet\\sdk\\3.1.100-preview1-014024]\r\nSDK path resolved to [C:\\externsrc\\dotnet\\winforms\\.dotnet\\sdk\\3.1.100-preview1-014024]\r\n```\r\n\r\nI have some ideas about how this might be fixed:\r\n* Change the winforms build scripts or arcade build scripts to pass the solution path. At least for the winforms repo, it appears the file specified for `SolutionPath` does not have to exist.\r\n* Change the arcade SDK installation logic to delete the local .dotnet folder. Currently the scripts install the .NET SDK by extracting the correct version over any existing version. This leaves incorrect SDK versions in place.\r\n* Document that one should always do a clean build when switching branches.","Url":"https://github.com/dotnet/winforms/issues/2085","RelatedDescription":"Open issue \"When building winforms repo, global.json file is not fully respected\" (#2085)"},{"Id":"506408126","IsPullRequest":false,"CreatedAt":"2019-10-15T03:11:27","Actor":"Shadowblitz16","Number":"2076","RawContent":null,"Title":"translate winforms to use native calls on mac and linux?","State":"closed","Body":"right now winforms is the easiest to use but doesn't look native on other platforms.\r\nI think if someone with the know how was willing to support other platforms natively it would be a better alternative for cross platform development then say xwt and eto.\r\n\r\nI dislike the idea of anything related to wpf since its not native looking even on windows and is harder to use.","Url":"https://github.com/dotnet/winforms/issues/2076","RelatedDescription":"Closed issue \"translate winforms to use native calls on mac and linux?\" (#2076)"},{"Id":"505369351","IsPullRequest":true,"CreatedAt":"2019-10-14T23:59:20","Actor":"hughbe","Number":"2064","RawContent":null,"Title":"Rename and structify OLEINPLACEFRAMEINFO","State":"closed","Body":"## Proposed Changes\r\n- Rename tagOIFI to OLEINPLACEFRAMEINFO\r\n- Structify\r\n- Cleanup\r\n\r\nhttps://docs.microsoft.com/en-us/windows/win32/api/oleidl/ns-oleidl-oleinplaceframeinfo\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2064)","Url":"https://github.com/dotnet/winforms/pull/2064","RelatedDescription":"Closed or merged PR \"Rename and structify OLEINPLACEFRAMEINFO\" (#2064)"},{"Id":"506741107","IsPullRequest":true,"CreatedAt":"2019-10-14T23:48:47","Actor":"hughbe","Number":"2081","RawContent":null,"Title":"Cleanup NMTBHOTITEM","State":"closed","Body":"## Proposed Changes\r\n- Move NMTBHOTITEM to Interop\r\n- Cleanup enums\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2081)","Url":"https://github.com/dotnet/winforms/pull/2081","RelatedDescription":"Closed or merged PR \"Cleanup NMTBHOTITEM\" (#2081)"},{"Id":"506731394","IsPullRequest":true,"CreatedAt":"2019-10-14T23:24:15","Actor":"hughbe","Number":"2079","RawContent":null,"Title":"Structify REQRESIZE","State":"closed","Body":"## Proposed Changes\r\n- Structify REQRESIZE\r\n- Move to Richedit namespace\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2079)","Url":"https://github.com/dotnet/winforms/pull/2079","RelatedDescription":"Closed or merged PR \"Structify REQRESIZE\" (#2079)"},{"Id":"505370466","IsPullRequest":true,"CreatedAt":"2019-10-14T21:21:29","Actor":"hughbe","Number":"2065","RawContent":null,"Title":"Cleanup SendKeys interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup GetKeyboardState/SetKeyboardState\r\n- Cleanup BlockInput\r\n- Cleanup GetAsyncKeyState\r\n- Cleanup OemKeyScan\r\n- Structify EVENTMSG\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2065)","Url":"https://github.com/dotnet/winforms/pull/2065","RelatedDescription":"Closed or merged PR \"Cleanup SendKeys interop\" (#2065)"},{"Id":"505820764","IsPullRequest":true,"CreatedAt":"2019-10-14T18:51:33","Actor":"dotnet-maestro[bot]","Number":"2072","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191014.1\r\n- **Date Produced**: 10/14/2019 8:54 AM\r\n- **Commit**: 4ace84dbf94128b4825c76cdd09b46dba7473478\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19514.1\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2072)\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19513.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19513.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2072","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2072)"},{"Id":"506744436","IsPullRequest":true,"CreatedAt":"2019-10-14T16:03:41","Actor":"hughbe","Number":"2082","RawContent":null,"Title":"Structify NMVIEWCHANGE","State":"open","Body":"## Proposed Changes\r\n- Structify NMVIEWCHANGE\r\n- Cleanup NMVIEWCHANGE interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2082)","Url":"https://github.com/dotnet/winforms/pull/2082","RelatedDescription":"Open PR \"Structify NMVIEWCHANGE\" (#2082)"},{"Id":"506734642","IsPullRequest":true,"CreatedAt":"2019-10-14T15:45:32","Actor":"hughbe","Number":"2080","RawContent":null,"Title":"Structify SELCHANGE","State":"open","Body":"## Proposed Changes\r\n- Structify SELCHANGE\r\n- Correct definition to use `WORD` instead of `int`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2080)","Url":"https://github.com/dotnet/winforms/pull/2080","RelatedDescription":"Open PR \"Structify SELCHANGE\" (#2080)"},{"Id":"506694403","IsPullRequest":true,"CreatedAt":"2019-10-14T14:36:42","Actor":"vladimir-krestov","Number":"2078","RawContent":null,"Title":"Porting System.Windows.Forms.Design.ListControlStringCollectionEditor","State":"open","Body":"Fixes #1271 \r\nRelated issue: #1115\r\nHave you experienced this same bug with .NET Framework?: No\r\n\r\n## Proposed changes\r\n\r\n- Add System.Windows.Forms.Design.ListControlStringCollectionEditor class\r\n- Add resources for DataSourceLocksItem\r\n- Implement TypeForwardedTo method\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed collection editor for controls which use ListControlStringCollectionEditor (TextBox, ComboBox, ListBox, etc.) to compliance with .Net 4.8.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- ComboBox (and others) has ObjectCollectionEditor as Items editor\r\n![image](https://user-images.githubusercontent.com/49272759/66759214-81234700-eea8-11e9-9635-2ac442b7b29c.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n- ComboBox (and others) has ListControlStringCollectionEditor as Items editor \r\n![image](https://user-images.githubusercontent.com/49272759/66755564-e7a46700-eea0-11e9-8b2f-9d6f4eb1ae0c.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2078)","Url":"https://github.com/dotnet/winforms/pull/2078","RelatedDescription":"Open PR \"Porting System.Windows.Forms.Design.ListControlStringCollectionEditor\" (#2078)"},{"Id":"505380643","IsPullRequest":true,"CreatedAt":"2019-10-14T09:15:29","Actor":"hughbe","Number":"2066","RawContent":null,"Title":"Cleanup ChooseColor","State":"closed","Body":"## Proposed Changes\r\n- Cleanup and structify ChooseColor\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2066)","Url":"https://github.com/dotnet/winforms/pull/2066","RelatedDescription":"Closed or merged PR \"Cleanup ChooseColor\" (#2066)"},{"Id":"506531907","IsPullRequest":true,"CreatedAt":"2019-10-14T09:12:47","Actor":"RussKie","Number":"2077","RawContent":null,"Title":"Cleanup `LVM`","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- WindowMessage had a duplicate list of `LVM_` messages. \r\n    * Rename the dups, update callsites to use the existing enum.\r\n    * Add tests to confirm the correct behaviour\r\n- Remove few redundant `else`s to reduce nesting\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Internal plumbing changes, should be not visible to consumers\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal, behaviour was verified with tests\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2077)","Url":"https://github.com/dotnet/winforms/pull/2077","RelatedDescription":"Open PR \"Cleanup `LVM`\" (#2077)"},{"Id":"505811494","IsPullRequest":true,"CreatedAt":"2019-10-14T05:47:55","Actor":"dotnet-maestro[bot]","Number":"2071","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2071)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2071","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2071)"},{"Id":"505779372","IsPullRequest":true,"CreatedAt":"2019-10-14T00:05:53","Actor":"hughbe","Number":"2070","RawContent":null,"Title":"Structify NMTVDISPINFOW","State":"closed","Body":"## Proposed Changes\r\n- Turn NMTVDISPINFOW into a (blittable) struct\r\n- Rename to NMTVDISPINFOW\r\n- Move to interop\r\n\r\nhttps://docs.microsoft.com/en-us/windows/win32/api/commctrl/ns-commctrl-nmtvdispinfow\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2070)","Url":"https://github.com/dotnet/winforms/pull/2070","RelatedDescription":"Closed or merged PR \"Structify NMTVDISPINFOW\" (#2070)"},{"Id":"505929192","IsPullRequest":true,"CreatedAt":"2019-10-11T15:49:16","Actor":"hughbe","Number":"2075","RawContent":null,"Title":"Cleanup NMTOOLBARW/TBBUTTONINFOW/TBBUTTON","State":"open","Body":"## Proposed Changes\r\n- Cleanup NMTOOLBAR\r\n- Cleanup TBBUTTONINFOW\r\n- Cleanup TBBUTTON\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2075)","Url":"https://github.com/dotnet/winforms/pull/2075","RelatedDescription":"Open PR \"Cleanup NMTOOLBARW/TBBUTTONINFOW/TBBUTTON\" (#2075)"},{"Id":"505884509","IsPullRequest":true,"CreatedAt":"2019-10-11T14:24:50","Actor":"vladimir-krestov","Number":"2074","RawContent":null,"Title":"WIP: [Accessibility][ScreenReader]: Fixing tooltip text announcing by NVDA/Narrator","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2073\r\nOriginal bug: [987952](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/987952)\r\n\r\n## Proposed changes\r\n\r\n- Add AnnounceText method to raise UIA notification (ScreenReader says notification text) when a tooltip is shown\r\n\r\n<del>- Add IToolTip interface and implement it to unite elements (Control, ToolStripItem, DataGridViewElement) which can have a tooltip (this is necessary to the correct, simple and short implementation of raising UIA notification.)</del>\r\n\r\n> ScreenReader reads the tooltip text of elements of in turn.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A user can hear a text of a shown tooltip\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/66658882-11fce700-ec4b-11e9-95ab-769287de4313.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n- **A screen reader announces a text with a title of all tooltips (mouse and keyboard). &#x1F4D7;**\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/66658891-16c19b00-ec4b-11e9-91aa-47ad841fb406.png)\r\n\r\n![2](https://user-images.githubusercontent.com/49272759/66658939-2ccf5b80-ec4b-11e9-9cf2-8246ce386889.gif)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Using NVDA and Narrator\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core Version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.356]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2074)","Url":"https://github.com/dotnet/winforms/pull/2074","RelatedDescription":"Open PR \"WIP: [Accessibility][ScreenReader]: Fixing tooltip text announcing by NVDA/Narrator\" (#2074)"},{"Id":"505868040","IsPullRequest":false,"CreatedAt":"2019-10-11T13:55:14","Actor":"vladimir-krestov","Number":"2073","RawContent":null,"Title":"[Accessibility][ScreenReader]: NVDA/Narrator are not reading the ToolTip message","State":"open","Body":"* .NET Core Version: 3.1.0-preview1.19458.7\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Original bug:**\r\n- [Bug 987952](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/987952)\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n- A user can't hear a tooltip text using NVDA/Narrator\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n- NVDA/Narrator don't read a message from shown ToolTip\r\n\r\n**Expected behavior:**\r\n- NVDA/Narrator should announce ToolTip text\r\n![image](https://user-images.githubusercontent.com/49272759/66656755-453d7700-ec47-11e9-9ed1-9cb8c857e030.png)\r\n\r\n\r\n**Minimal repro:**\r\n- Create .Net Core app\r\n- Add some control and ToolTip\r\n- Connect the control with the ToolTip\r\n- Run the test app and NVDA/Narrator\r\n- Listen what NVDA/Narrator say\r\n\r\n**Test app:**\r\n- [[Core][NVDA]ToolTipError.zip](https://github.com/dotnet/winforms/files/3717915/Core.NVDA.ToolTipError.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2073","RelatedDescription":"Open issue \"[Accessibility][ScreenReader]: NVDA/Narrator are not reading the ToolTip message\" (#2073)"},{"Id":"505570305","IsPullRequest":false,"CreatedAt":"2019-10-11T00:09:00","Actor":"JeremyKuhne","Number":"2069","RawContent":null,"Title":"Consider using structs to wrap simple native typedefs","State":"open","Body":"We've been using enums to wrap `typedef`s from Windows. For example:\r\n\r\n``` C\r\ntypedef int BOOL;\r\n```\r\n\r\nWe're [wrapping as](https://github.com/dotnet/winforms/blob/master/src/Common/src/Interop/Interop.BOOL.cs):\r\n\r\n``` C#\r\npublic enum BOOL : int\r\n{\r\n    FALSE = 0,\r\n    TRUE = 1\r\n}\r\n```\r\n\r\nWhile enums are more directly aligned with `typedef`, they don't provide other advantages that C# can provide, such as implicit operators. This can be useful in the case of `BOOL`, where checking `if (b == BOOL.TRUE)` is **not** correct as anything other than `BOOL.FALSE` is true.\r\n\r\nWe mitigate this somewhat with extension methods and copious comments, but it still makes for less than ideal consumption. `if (SomeMethod().IsTrue())` isn't natural.\r\n\r\nUsing a struct with a single internal field is functionally equivalent from an interop perspective. It allows you to use operators with can make code much easier to write:\r\n\r\n``` C#\r\npublic readonly struct BOOL\r\n{\r\n    public int RawValue { get; }\r\n    public BOOL(bool b) => RawValue = b ? 1 : 0;\r\n    public BOOL(int b) => RawValue = b;\r\n    public bool IsTrue => RawValue != 0;\r\n    public bool IsFalse => RawValue == 0;\r\n    public static implicit operator bool(BOOL b) => b.IsTrue;\r\n    public static implicit operator BOOL(bool b) => new BOOL(b);\r\n}\r\n\r\n[DllImport]\r\nBOOL SomeMethod(BOOL value);\r\n\r\n// Can now be used like\r\nif (SomeMethod(true))\r\n\r\n// Instead of\r\nif (SomeMethod(BOOL.TRUE).IsTrue())\r\n```\r\n\r\nThe downsides are:\r\n\r\n1. It isn't technically correct, but .NET treats it the way we want\r\n2. It isn't as easy to optimize as `enum`, but the difference is trivial\r\n3. Core turned down the struct pattern, but doesn't have the volume of APIs WinForms does\r\n\r\nUpsides are:\r\n\r\n1. Natural code flow\r\n2. Less risk of misuse\r\n\r\nAnother thing that is possible with structs that _isn't_ with enums is wrapping pointers. Notably things like `HWND`, `HBITMAP`, etc. Using structs can allow us to strongly type our APIs:\r\n\r\n``` C#\r\npublic readonly struct HWND\r\n{\r\n    public IntPtr Value { get; }\r\n    public HWND(IntPtr handle) => Value = handle;\r\n}\r\n```\r\n\r\nWith pointer size objects added to the mix I'd argue that using structs for `typedef` is the best pattern to be using in WinForms.\r\n\r\nDiscussed [here](https://github.com/dotnet/winforms/pull/1978#pullrequestreview-299083926).\r\n\r\ncc: @hughbe, @zsd4yr, @russkie, @weltkante","Url":"https://github.com/dotnet/winforms/issues/2069","RelatedDescription":"Open issue \"Consider using structs to wrap simple native typedefs\" (#2069)"},{"Id":"505363968","IsPullRequest":true,"CreatedAt":"2019-10-11T00:08:00","Actor":"hughbe","Number":"2063","RawContent":null,"Title":"Cleanup NMLISTVIEW","State":"closed","Body":"## Proposed Changes\r\n- Move NMLISTVIEW to Interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2063)","Url":"https://github.com/dotnet/winforms/pull/2063","RelatedDescription":"Closed or merged PR \"Cleanup NMLISTVIEW\" (#2063)"},{"Id":"505547964","IsPullRequest":false,"CreatedAt":"2019-10-10T22:46:37","Actor":"AdamYoblick","Number":"2068","RawContent":null,"Title":"Port yaml cleanup from winforms-designer","State":"open","Body":"Specifically:\r\n\r\n- Making the variables easier to read\r\n- Only running debug on public builds\r\n\r\nSee https://github.com/dotnet/winforms-designer/pull/963","Url":"https://github.com/dotnet/winforms/issues/2068","RelatedDescription":"Open issue \"Port yaml cleanup from winforms-designer\" (#2068)"},{"Id":"505430098","IsPullRequest":false,"CreatedAt":"2019-10-10T18:13:45","Actor":"AdamYoblick","Number":"2067","RawContent":null,"Title":"Enable Roslyn Analyzers","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nPort the fixes for Roslyn Analyzer violations from the VS source to the winforms source. See https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/206917 for details.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n**Expected behavior:**\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/2067","RelatedDescription":"Open issue \"Enable Roslyn Analyzers\" (#2067)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-16T05:30:55.1694272Z","RunDurationInMilliseconds":854}