{"Data":{"Blog":{"FeedItems":[{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8417639241","Type":"IssuesEvent","CreatedAt":"2018-10-14T16:26:06","Actor":"tejas-ad","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2295","RelatedDescription":"Opened issue \"Tasks and ThreadPools stop working if the Android app was kept in the background for 4-5 days\" (#2295) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nThe app has a foreground service and the app is kept running in the background for 4-5 days. After some duration, the MvvmCross references get de-initialized but the foreground services keep running. When the app is brought back to the foreground after 4-5 days, MvvmCross initialization starts but gets stuck at the point that queues a work item in the threadpool. Here is the code snippet from MvxAndroidSetupSingleton class inside MvvmCross Framework, that tries to enqueue a work item:\r\n\r\n\r\n            _setup.InitializePrimary();\r\n            **ThreadPool.QueueUserWorkItem(ignored =>\r\n            {\r\n                _setup.InitializeSecondary();\r\n                lock (LockObject)\r\n                {\r\n                    _initialized = true;\r\n                    if (_currentSplashScreen != null)\r\n                    {\r\n                        _currentSplashScreen.InitializationComplete();\r\n                    }\r\n                }\r\n            });**\r\nThe code enqueued in the ThreadPool never seems to get executed if the app gets in this situation. As the foreground services are running, the only option is to force stop the app. We could only reproduce the exact scenario by removing the code segment in bold. Currently, there seems to be no other way to reproduce than to wait for 5 days to reproduce it. We have tried kicking the app out of memory by filling up the memory using a different app. The adb shell commands to put the device/app in doze/deep sleep have also been tried, without any success.\r\nA detailed search on ThreadPool shows people have had problems with it especially with Xamarin. For some, the issue was resolved by switching to Task.Run, but in our case, that did not help either. Here is a similar issue that was observed on iOS, but was never resolved by Xamarin. The developer ended up removing all the mono threadpools and Task.Run instances to get his app working. Link: https://bugzilla.xamarin.com/show_bug.cgi?id=58633 . See [comment #18](https://bugzilla.xamarin.com/show_bug.cgi?id=58633#c18) that confirms this.\r\n\r\nMore issues faced by people with ThreadPools on Xamarin:\r\n1. https://forums.xamarin.com/discussion/23818/threadpool-is-driving-me-nuts-how-do-i-diagnose-where-the-threads-are-started\r\n2. https://stackoverflow.com/a/42245625/2501621\r\n\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe work item should be queued in the threadpool and executed.\r\n\r\n### Actual Behavior\r\nThe work item never gets executed.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n \r\nVersion 7.5.1 (build 22)\r\nInstallation UUID: 60692d15-b5ef-4ab8-8316-035366dc3940\r\nRuntime:\r\n                Mono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n                GTK+ 2.24.23 (Raleigh theme)\r\n                Xamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n                Package version: 510010047\r\n \r\n=== NuGet ===\r\n \r\nVersion: 4.3.1.4445\r\n \r\n=== .NET Core ===\r\n \r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n                2.0.5\r\n                2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n                2.1.4\r\n                2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n \r\n=== Xamarin.Profiler ===\r\n \r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n \r\n=== Apple Developer Tools ===\r\n \r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n \r\n=== Xamarin.Mac ===\r\n \r\nVersion: 4.4.1.178 (Visual Studio Enterprise)\r\n \r\n=== Xamarin.iOS ===\r\n \r\nVersion: 11.10.1.178 (Visual Studio Enterprise)\r\nHash: 408d3574\r\nBranch: d15-7\r\nBuild date: 2018-05-08 18:56:30-0400\r\n \r\n=== Xamarin.Android ===\r\n \r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/.../Library/Developer/Xamarin/android-sdk-macosx\r\n                Supported Android versions:\r\n                                2.3   (API level 10)\r\n                                4.0.3 (API level 15)\r\n                                5.0   (API level 21)\r\n                                5.1   (API level 22)\r\n                                6.0   (API level 23)\r\n                                7.0   (API level 24)\r\n                                7.1   (API level 25)\r\n                                8.0   (API level 26)\r\n                                8.1   (API level 27)\r\n \r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.3\r\n \r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n \r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n \r\n=== Xamarin Inspector ===\r\n \r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n \r\n=== Build Information ===\r\n \r\nRelease ID: 705010022\r\nGit revision: 60442dd643a20c7a4ae1f8705b8d1de8972eee78\r\nBuild date: 2018-05-15 01:43:39+00\r\nXamarin addins: 4194ffe4868321e4c3477bd56aed579bda4c6fbb\r\n \r\n=== Operating System ===\r\n \r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n \r\n=== Enabled user installed addins ===\r\n \r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\nNot attaching a log file as the app needs to be in the background for 4-5 days for this issue to be seen.\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8415868904","Type":"IssuesEvent","CreatedAt":"2018-10-13T19:01:58","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2248","RelatedDescription":"Closed issue \"Start Debugging run 2 full builds if you open Android Designer\" (#2248) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Android project (Android App, Modern Development)\r\n2. Press Run. (1 full build happen)\r\n3. Open Main.axml (no need to save, just open it)\r\n4. Press Run. (2 full builds happen)\r\n\r\n[DuplicatedBuild.zip](https://github.com/xamarin/xamarin-android/files/2435141/DuplicatedBuild.zip)\r\n\r\n### Expected Behavior\r\n\r\nNo builds at all when there is no changes\r\nA single build when there is changes\r\n\r\n### Actual Behavior\r\n\r\n2 full sequencial builds happen\r\n\r\n### Investigated issues\r\n\r\nInitially I thought it was the same as https://github.com/xamarin/xamarin-android/issues/1394, but it seems it is not the case.\r\n\r\nThen I saw `Input file \"obj/Debug/build.props\" is newer than output file \"obj/Debug/libraryprojectimports.cache\".` and thought it could be related to https://github.com/xamarin/xamarin-macios/issues/3929, but it is not.\r\n\r\nThen looking the the **_CreatePropertiesCache** debug information I've noticed that its **WriteLinesToFile** is being executed due to the contents of `AdbTarget` being changed during the build.\r\n\r\n### Log File\r\n\r\nUsing the following command to observe the **obj/Debug/build.props** contents: \r\n`while true; do kqwait '/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props'; echo \"------------------------------------------------------\"; cat '/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props'; done`\r\n\r\nWhen you hit **Run** for the first time (step 2) it outputs:\r\n\r\n```\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=-s ce05171559d3cf0801\r\nAdbOptions=\r\n```\r\n\r\nAlso taking a look at Deploying to Device panel you will see the following output: \r\n\r\n```\r\nTarget \"_CreatePropertiesCache\" in file \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets\":\r\n  Task \"MakeDir\" skipped, due to false condition; (!Exists('$(IntermediateOutputPath)')) was evaluated as (!Exists('obj/Debug/')).\r\n  Task \"WriteLinesToFile\" skipped, due to false condition; ('@(_PropertiesCache)' != '@(_PropertyCacheItems)') was evaluated as ('BundleAssemblies=False;AotAssemblies=False;AndroidAotMode=;ExplicitCrunch=False;EnableProguard=;UseSharedRuntime=true;EmbedAssembliesIntoApk=False;AndroidLinkMode=None;AndroidLinkSkip=;AndroidSdkBuildToolsVersion=27.0.3;AndroidSdkPath=;AndroidNdkPath=;JavaSdkPath=;AndroidSequencePointsMode=None;XamarinAndroidVersion=9.0.0-20;MonoSymbolArchive=False;AndroidUseLatestPlatformSdk=true;TargetFrameworkVersion=v9.0;AndroidCreatePackagePerAbi=;OS=Unix;DesignTimeBuild=;AndroidIncludeDebugSymbols=True;AdbTarget=-s ce05171559d3cf0801;AdbOptions=' != 'BundleAssemblies=False;AotAssemblies=False;AndroidAotMode=;ExplicitCrunch=False;EnableProguard=;UseSharedRuntime=true;EmbedAssembliesIntoApk=False;AndroidLinkMode=None;AndroidLinkSkip=;AndroidSdkBuildToolsVersion=27.0.3;AndroidSdkPath=;AndroidNdkPath=;JavaSdkPath=;AndroidSequencePointsMode=None;XamarinAndroidVersion=9.0.0-20;MonoSymbolArchive=False;AndroidUseLatestPlatformSdk=true;TargetFrameworkVersion=v9.0;AndroidCreatePackagePerAbi=;OS=Unix;DesignTimeBuild=;AndroidIncludeDebugSymbols=True;AdbTarget=-s ce05171559d3cf0801;AdbOptions=').\r\nDone building target \"_CreatePropertiesCache\" in project \"DuplicatedBuild.csproj\".\r\n```\r\n\r\nWhen you open the Main.axml (step 3) it outputs:\r\n\r\n```\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=true\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=\r\nAdbOptions=\r\n```\r\n\r\nWhen you hit Run for the second time (step 4) it outputs: \r\n\r\n```\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=-s ce05171559d3cf0801\r\nAdbOptions=\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=true\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=\r\nAdbOptions=\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=-s ce05171559d3cf0801\r\nAdbOptions=\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=true\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=\r\nAdbOptions=\r\n```\r\n\r\nAdbTarget and AdbOptions is changing 4 times on the second Run, unlike the first Run.\r\nLooking at the Deploy to Device panel we find: \r\n\r\n```\r\nTarget \"_CreatePropertiesCache\" in file \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets\":\r\n  Task \"MakeDir\" skipped, due to false condition; (!Exists('$(IntermediateOutputPath)')) was evaluated as (!Exists('obj/Debug/')).\r\n  Task \"WriteLinesToFile\"\r\n  Done executing task \"WriteLinesToFile\".\r\nDone building target \"_CreatePropertiesCache\" in project \"DuplicatedBuild.csproj\".\r\n```\r\n\r\n### Version Information\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.6.7 (build 49)\r\nInstallation UUID: 9a5b91cf-e5ce-4027-8e14-daa7b5b84c3a\r\nRuntime:\r\n\tMono 5.14.0.177 (2018-04/f3a2216b65a) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 514000177\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.2\r\n\t2.0.0\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nXamarin.Android\r\nVersion: 9.0.0.20 (Visual Studio Community)\r\nAndroid SDK: /Users/flash/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t4.4   (API level 19)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 28.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nApple Developer Tools\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\nXamarin.Mac\r\nVersion: 4.6.0.14 (Visual Studio Community)\r\nHash: 1a6e2786\r\nBranch: \r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\nXamarin.iOS\r\nVersion: 12.0.0.15 (Visual Studio Community)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 706070049\r\nGit revision: 0b48ccfb376397678b3bc3653da2c6603d35357d\r\nBuild date: 2018-09-20 21:14:23+00\r\nBuild branch: release-7.6\r\nXamarin extensions: b25fd1e2b9a7859aff9536924e8edb6cbfb78637\r\n\r\nOperating System\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n\r\n### Related Question\r\nWhy does VS4M runs Build and then Install when I press Start Debugging? If I run ```msbuild /t:Install``` it is enough to deploy as Install depends on Build - the bug reported in here is still present, but at least we have only 1 full compilation, not 2."},{"Id":"8415356110","Type":"PullRequestEvent","CreatedAt":"2018-10-13T13:55:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2294","RelatedDescription":"Opened pull request \"Bump to mono/mono/2018-06@226e91a0\" (#2294) at xamarin/xamarin-android","RelatedBody":"Context: f970cd50d2c19dcb4b62cc1dd1198c31cc10a2df\r\nContext: 84952df685e0ab49c82df804b306bf53fe6e0610\r\n\r\nCommit f970cd50 included a mono bump, and subsequently broke the\r\nbuild, causing it to be reverted in 84952df6.\r\n\r\nA question: *which part* of f970cd50 is the problem: the changes to\r\nxamarin-android, or the mono bump *itself*?\r\n\r\nBump mono to verify that the mono bump itself still builds.\r\n\r\nMono bump contains various \"mono sdks\" archive fixes."},{"Id":"8415177345","Type":"PullRequestEvent","CreatedAt":"2018-10-13T11:53:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2288","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add `CopyResource` items to `FileWrites`.\" (#2288) at xamarin/xamarin-android","RelatedBody":"Not quite sure how we ever got away with this. As part\r\nof the build process we extract from `EmbeddedResource`\r\na bunch of `.java` files into the intermediate directory.\r\n\r\nThese are used for a number of things like multidex and\r\nbootstrapping mono. For some reason we NEVER added those\r\nto the `FileWrites` group. So there is a good chance these\r\nfiles will get deleted by an incremental clean.\r\n\r\nThis was picked up by a unit test in monodroid which\r\ndeals with fast deployment."},{"Id":"8415172990","Type":"PullRequestEvent","CreatedAt":"2018-10-13T11:50:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2293","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Ignore XA0115 for Shared Runtime builds.\" (#2293) at xamarin/xamarin-android","RelatedBody":"Fixes #2289\r\n\r\nWhen doing debug shared runtime builds the user generally does\r\nnot care what abi is used. As a result we should only be showing\r\nthe `XA0115` warning when they are NOT using the shared runtime."},{"Id":"8415172985","Type":"IssuesEvent","CreatedAt":"2018-10-13T11:50:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2289","RelatedDescription":"Closed issue \"The `armeabi` deprecation warning is displayed for default Debug builds in d15-9\" (#2289) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Find a project which does not override `<AndroidSupportedAbis>` and build it in Debug mode.\r\n(e.g. https://github.com/xamarin/monodroid-samples/blob/master/HelloWorld/HelloWorld.csproj)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe deprecation warning for `armeabi` should only be displayed when the user has explicitly chosen to support this ABI. Default debug builds should not display this warning, as no action needs to be taken. This scenario will automatically be resolved in a future release when the debug-specific default value for `AndroidSupportedAbis` is changed to exclude `armeabi`. \r\n\r\n### Actual Behavior\r\nDebug builds are displaying a warning about the usage of armeabi[0], because in d15-9, `armeabi` is still included in the debug-specific default value of `AndroidSupportedAbis`.\r\n\r\n[0] ```C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(503,2): warning XA0115: This ABI ('armeabi') is deprecated and will be removed\r\n in the next release. Please update your project properties.```\r\n### Version Information\r\nXamarin.Android.Sdk.9.1.0.35\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8414839392","Type":"IssuesEvent","CreatedAt":"2018-10-13T07:48:17","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1762","RelatedDescription":"Closed issue \"App not showing updated axml designer controls until I close VS \" (#1762) at xamarin/xamarin-android","RelatedBody":"Description\r\nWhen I am updating designer (Say changing margins, color of controls) it is not getting affected after executing app to the emulators until I close visual studio & it again.\r\n\r\nSteps to Reproduce\r\nCreated project try to make modifications in axml files & execute app.\r\n\r\nExpected Behavior\r\nActual Behavior\r\nBasic Information\r\nMicrosoft Visual Studio Enterprise 2017\r\nVersion 15.7.1\r\nVisualStudio.15.Release/15.7.1+27703.2000\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools 00369-60000-00001-AA519\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nApplication Insights Tools for Visual Studio Package 8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nC# Tools 2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nMerq 1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio 0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger 1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger 1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards 1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers 1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package 1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio 4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager 4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nResourcePackage Extension 1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools 2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package 1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps 15.0.27703.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac 1.0\r\nMac Extension for Visual Studio\r\n\r\nWeb Extension Pack 2017 15.0.4\r\nThe easiest way to set up Visual Studio for the ultimate web development experience.\r\n\r\nXamarin 4.10.0.442 (396b18cef)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer 4.12.264 (fc37cd02e)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK 8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n![xamandroidissue](https://user-images.githubusercontent.com/38238586/40780765-33483fd6-64f7-11e8-99e3-06cfc098419b.png)\n\n> VS bug [#624571](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/624571)"},{"Id":"8413245377","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:31:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2280","RelatedDescription":"Merged pull request \"Adds facades which might override default nuget version to framework list\" (#2280) at xamarin/xamarin-android","RelatedBody":"Supports https://github.com/mono/mono/issues/10768"},{"Id":"8413142134","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:09:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2285","RelatedDescription":"Merged pull request \" Revert \"[Xamarin.Android.Build.Tasks] deletebinobj fix for resources\" (#2285) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2216#issuecomment-428731234\r\n\r\nThis reverts commit fab260dfab1e2b7837e9c9e0e665007cb3156374.\r\n\r\nThis commit relies on other commits in master, which otherwise causes a regression as mentioned in #2216:\r\n\r\n```\r\nBuilding target \"_GenerateJavaDesignerForComponent\" completely.\r\nInput file \"obj\\Debug\\81\\R.cs.flag\" is newer than output file \"obj\\Debug\\81\\Component.R.cs.flag\".\r\n```\r\n\r\nThis target shouldn't be running in a build with no changes.\r\n\r\nI also incorporated test changes from master @ 647659e8, which catches the regression in #2216. It will be helpful to add this test in d15-9 going forward."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8419077910","Type":"IssuesEvent","CreatedAt":"2018-10-15T04:51:36","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4081","RelatedDescription":"Closed issue \"[Enhancement] Please include image sizes on AppIcon window for iOS assets\" (#4081) at xamarin/Xamarin.Forms","RelatedBody":"Visual Studio for Windows does not show image sizes required for AppIcon assets when we're adding app icons on iOS. Xamarin Studio for Mac had this functionality, so I'd like to see it implemented on Windows as well.\r\n\r\nMac\r\n\r\n![asset02](https://user-images.githubusercontent.com/16855542/46927604-d0b40600-cffb-11e8-9274-743b4da69703.png)\r\n\r\nWindows\r\n\r\n![capture](https://user-images.githubusercontent.com/16855542/46927620-ee816b00-cffb-11e8-80b8-cd8f98731300.PNG)\r\n\r\nNote that if you click a box above and look at the Properties window, then you could see the image size, but this information isn't easily discoverable as most people wouldn't think to look at this window right away. XCode also prints image sizes (in points) on the designer window."},{"Id":"8418802766","Type":"IssuesEvent","CreatedAt":"2018-10-15T02:59:13","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4081","RelatedDescription":"Opened issue \"[Enhancement] Please include image sizes on AppIcon window for iOS assets\" (#4081) at xamarin/Xamarin.Forms","RelatedBody":"Visual Studio for Windows does not show image sizes required for AppIcon assets when we're adding app icons on iOS. Xamarin Studio for Mac had this functionality, so I'd like to see it implemented on Windows as well.\r\n\r\nMac\r\n\r\n![asset02](https://user-images.githubusercontent.com/16855542/46927604-d0b40600-cffb-11e8-9274-743b4da69703.png)\r\n\r\nWindows\r\n\r\n![capture](https://user-images.githubusercontent.com/16855542/46927620-ee816b00-cffb-11e8-80b8-cd8f98731300.PNG)\r\n\r\nNote that if you click a box above and look at the Properties window, then you could see the image size, but this information isn't easily discoverable as most people wouldn't think to look at this window right away. XCode also prints image sizes (in points) on the designer window."},{"Id":"8418619907","Type":"PullRequestEvent","CreatedAt":"2018-10-15T01:47:19","Actor":"WonyoungChoi","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4080","RelatedDescription":"Opened pull request \"[Tizen] Cleanup XF.Platform.Tizen\" (#4080) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixes warnings detected by static code analyzers\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8418306701","Type":"PullRequestEvent","CreatedAt":"2018-10-14T22:45:42","Actor":"ionixjunior","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4079","RelatedDescription":"Opened pull request \"Added UI test to B45027\" (#4079) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded UI test to issue #2385 (Bugzilla 45027), but don't was tested using Xamarin.Forms 2.3.2 (where the problem occurs).\r\n\r\nA question: How I run this UI test using specific version of Xamarin.Forms in this project? Go back to the release-2.3.2 tag and create this test to certified that this UI test will fail?\r\n\r\n### Issues Resolved ### \r\n\r\n- #2385 \r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard"},{"Id":"8418287502","Type":"IssuesEvent","CreatedAt":"2018-10-14T22:33:07","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4078","RelatedDescription":"Opened issue \"[Enhancement] New solutions should use the Android namespace instead of Droid\" (#4078) at xamarin/Xamarin.Forms","RelatedBody":"When you create a new solution, the Android project is putting all native files under [AppName].Droid.*, but the project name is [AppName].Android. In order to match the behavior of iOS, the next release of VS XF templates should start using the Android name in namespaces. @pierceboggan, what do you think?"},{"Id":"8418171241","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:21:50","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3738","RelatedDescription":"Closed issue \"[Feedback] Xamarin Forms MultipartFormDataContent with StreamContent doesn't work on ios and android\" (#3738) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>In a Xamarin project I need to upload an image using a multipartformdatacontent. I know that the server works because we have a working app build in native iOS. \n\nWe ported that code to Xamarin Forms (3.0) using the System.Net.Httpclient and it looks like this:\n            using (var client = new HttpClient(GetClientHandler(), false))\n            {\n                var content = new MultipartFormDataContent(Guid.NewGuid().ToString());\n                var streamContent = new StreamContent(stream);\n                content.Add(streamContent, &quot;file&quot;, filename);\n\n                var response = await client.PostAsync(uri, content);\n   }\n\nWhen we use this code to upload a very small image (a 5x5 pixel square) the code works, but when we try to upload a photo (around 1mb) we get a server error. When we post the exact same photo with the old iOS implementation it does work.\n\nTo verify that the code should work I created a WPF app with the exact same code and also using the System.Net.HttpClient and now it also does work. \n\nI have tried a lot of different solutions provided on stackoverflow and the Xamarin forums, even created the complete postbody manually using a stringbuilder to be exactly the same as posts that are correct, but nothing worked so far.\n\nI have attached a repo of this issue that is connecting to a public demo server.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/254706/xamarin-forms-multipartformdatacontent-with-stream.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/617346\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678639](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678639)"},{"Id":"8418168385","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:20:02","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3739","RelatedDescription":"Closed issue \"[Feedback] Xamarin Forms custom renderer for DatePicker and TimePicker not working for UWP\" (#3739) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>I have a Xamarin forms project that supports UWP, iOS, and Android.  I have custom renderers for many controls including the DatePicker and the TimePicker.\n\nThe customer renderers work just fine on iOS and Android.  On UWP, the renderers run just fine, but setting Control.BorderBrush and Control.BorderThickness has no effect.\n\nSee the attached screenshots for the code I'm using as well as the output.  You can see other controls in the image whose rendering is controlled by custom renderers.  I also have a regular picker (not pictured) that works fine as well. \n\nThe picker isn't in the screenshot, but I do have the code in the screenshot.</p><p><br></p><span class=text style=\"box-sizing:border-box;color:rgb(33, 33, 33);display:inline-block;font-size:14px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;margin-left:0.9em;orphans:2;text-align:left;text-decoration:none;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;\"><p style=\"box-sizing:border-box;display:inline;margin-bottom:0.5em;margin-left:0px;margin-right:0px;margin-top:0px;\">I uploaded a sample.  You can get it at https://www.dropbox.com/s/nuhm596kkewkph3/UwpRenderer.zip?dl=0 </p><p>\n</p></span><p><b></b><i></i><u></u><sub></sub><sup></sup><strike></strike><br></p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/240063/xamarin-forms-custom-renderer-for-datepicker-and-t.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/606198\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678635](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678635)"},{"Id":"8418165303","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:18:01","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3445","RelatedDescription":"Closed issue \"Xamarin forms effects doesnt get attached to Pages or layouts\" (#3445) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n A lot of XF Pages and Layouts doesn't accept effects. You add the effects to the Effects collection and all but they doesn't get attached. Meaning that if you either attach the effect from XAML or code it doesn't get attached.\r\nIn Xaml you attach it using: \r\n```\r\n<Page.Effects>\r\n    <effects:UwpAcrylicBrush/>\r\n</Page.Effects>\r\n```\r\nIn code you attach it either using:\r\n`Page.Effects.Add(new Effects.UwpAcrylicPage);`\r\nor using:\r\n`Page.Effects.Add(Effects.Resolve(\"ResolutionGroupName.EffectName\"));`\r\n\r\nIn the first attempt (Adding the effect to the Effects collection) it doesn't do anything. However, in the second attempt(Resolving the effect), it jumps  to the constructor of the Effect in the platform specific project but then it jumps out. Even if you tried to call OnAttached() method in the constructor. The element initializes to null. \r\n\r\n### Steps to Reproduce\r\nI tried to inspect this error but i found that the Effects collection is declared in Element class. Which every XF control inherits  it whether a visual control or not. And the effect applies on every VisualElement except Pages and Layouts. So i hope the XF team or the contributors finds the bug if exists  \r\n### Expected Behavior\r\nThe effect attaches and runs the OnAttached() method.\r\n### Actual Behavior\r\nDoesn't get attached and doesn't call the OnAttached() method.\r\n### Basic Information\r\n\r\n- XamarinForms 3.1.0.637273\r\n- Visual Studio 2017 Enterprise edition version 15.7.5"},{"Id":"8418164524","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:17:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3716","RelatedDescription":"Closed issue \"[Feedback] Wierd colors after update to .fomrs 3.1 and VS 2017 (17.5)\" (#3716) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>I have updated my (shared) project from 2.3.x (under VS2015) to 3.1 (under Vs2017) and thereby had massive problems with the base colors - especially to the android project. \r\nWithout any change from my side, all back colors have e.g. changed to white (instead of black) in Android. \r\nAs I have set the text colors to white (and some other “bright” colors), the app becomes unusable.\r\nI don’t work with xaml principally yet (I do anything in code).\r\nTo be able to change the base colors back as they were in 2.3.x, I had to break up my app.cs in app.xaml and app.xaml.cs and define all colors (for each platform) in app.xaml.\r\nIn my app, I also use various pickers, where I also set a title (“Please chose....”).\r\nThe problem is, that the title text to the picker should be grey by default for Android, but is black now.\r\nSo I now have “black holes” in my app, where the titles (“Please...”) should be showed and there is no property to the Picker, where the color can be set (so I’m not able to set the title color in app.xaml on in code to grey again). \r\nSo I would have to change the back color to the picker to some other color (e.g. gray) only to enable the users to read the title text (what would break the look and feel of my app completely).\r\nTherefore my question:\r\nWhere are the base colors for Android in a .forms project defined and how can the base colors be reset (I don’t think, that the base color to the picker title has changed per default from grey to black)?\r\nThanks for a fast an clear answer.</p>\r\n<a href=\"https://developercommunity.visualstudio.com/content/problem/315706/wierd-colors-after-update-to-fomrs-31-and-vs-2017.html\">View on Developer Community</a>\r\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/666962\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[677724](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/677724)"},{"Id":"8418163590","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:17:03","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3669","RelatedDescription":"Closed issue \"In UWP : Scrollview not working or visible when added to scrollable tab control.\" (#3669) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWe have created custom scrollable tab control by extending tab control mentioned in below reference url https://www.codeguru.com/virtual-mobile/a-tab-control-in-xamarin.html\r\n\r\nScroll view control was rendering properly and visible till xamarin forms DLL : 3.1.0637273 and below. \r\nBut in xamarin forms DLL : 3.1.0.697729, their is some problem in rendering of scroll view hence my ui is getting disturbed. \r\n\r\nBut if i set scroll view \"is visible\" property set to false using 3.1.0.697729. Then UI other than scroll view is rendering properly. In mac scroll view rendering is fine with this 3.1.0.697729. So i believe their is some UWP specific issue in scroll view.\r\n\r\nAlso i have searched \"xamarin form\" code in github for above versions and found that many changes are done for visibility and rendering of scroll view in uwp by xamarin team.\r\n\r\nI believe due to those changes. My existing code either need more code configuration which you can suggest or their is some bug in DLL : 3.1.0.697729 for scroll view in UWP.\r\n\r\nIt will take lot of time for me to produce sample for your team. But if same person go through his code then probably he could suggest whether their is a bug or due to 3.1.0.697729 version more configuration is needed in scroll view.\r\n\r\n### Steps to Reproduce\r\n\r\nNA\r\n\r\n### Expected Behavior\r\n\r\nNA\r\n\r\n### Actual Behavior\r\n\r\nNA\r\n\r\n### Basic Information\r\n\r\n- Version with issue: xamarin.forms 3.1.0.697729\r\n- Last known good version: xamarin.forms 3.1.0637273\r\n- IDE: VS 2017 15.6.7\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  Microsoft.NETCore.UniversalWindowPlatform => 6.1.7\r\n- Affected Devices: window 10 , version 1803 , os build : 17134.228\r\n\r\n### Screenshots\r\n\r\nNA\r\n\r\n### Reproduction Link\r\n\r\nNA"},{"Id":"8418162923","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:16:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3677","RelatedDescription":"Closed issue \"Updating Xamarin app to Xamarin.Forms app from playstore crashes\" (#3677) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWe had an app in PlayStore which is developed in Xamarin.Android with code shared with Xamarin.iOS via Shared Project.\r\n\r\nNow we are switching to Xamarin.Forms. We have changed , Some UI Login mechanism with AutoLogin based on Token stored in local device.\r\n\r\nThe app working fine in Devices and Simulators.\r\n\r\nWe have uploaded our app to playstore. If the user have old version in their device, after update the app crashing after showing splashscreen for few seconds. If we uninstall the old version, it is working fine.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Have the Xamarin App in device \r\n2. Update the app to Xamarin.Forms app in Playstore \r\n3.  Update the app in device \r\n4. Open the app\r\n\r\n### Expected Behavior\r\nApp should be opened and show login screen\r\n### Actual Behavior\r\nApp crashing after showing splashscreen\r\n### Basic Information\r\nError in google console:\r\n\r\n    java.lang.RuntimeException:\r\n\r\nat android.app.ActivityThread.performLaunchActivity (ActivityThread.java:2955)\r\n\r\nat android.app.ActivityThread.handleLaunchActivity (ActivityThread.java030)\r\n\r\nat android.app.ActivityThread.-wrap11 (Unknown Source)\r\n\r\nat android.app.ActivityThread$H.handleMessage (ActivityThread.java:1696)\r\n\r\nat android.os.Handler.dispatchMessage (Handler.java:105)\r\n\r\nat android.os.Looper.loop (Looper.java:164)\r\n\r\nat android.app.ActivityThread.main (ActivityThread.java:6938)\r\n\r\nat java.lang.reflect.Method.invoke (Native Method)\r\n\r\nat com.android.internal.os.Zygote$MethodAndArgsCaller.run (Zygote.java27)\r\n\r\nat com.android.internal.os.ZygoteInit.main (ZygoteInit.java:1374)\r\n\r\nCaused by: java.lang.ClassCastException:\r\n\r\nat android.app.SharedPreferencesImpl.getLong (SharedPreferencesImpl.java:279)\r\n\r\nat md56c96bd185bfbb3ebebdd94ef17444e8f.MainActivity.n_onCreate (Native Method)\r\n\r\nat md56c96bd185bfbb3ebebdd94ef17444e8f.MainActivity.onCreate (MainActivity.java1)\r\n\r\nat android.app.Activity.performCreate (Activity.java:7174)\r\n\r\nat android.app.Instrumentation.callActivityOnCreate (Instrumentation.java:1220)\r\n\r\nat android.app.ActivityThread.performLaunchActivity (ActivityThread.java:2908)\r\n- Version with issue: \r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices: All devices in iOS and Android\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8418162097","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:16:08","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3435","RelatedDescription":"Closed issue \"ButtonRenderer causing crash in Xamarin forms app in android devices\" (#3435) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nApp is Crashed in all Android devices for Xamarin forms app\r\n\r\nSystem.ObjectDisposedException: Cannot access a disposed object. Object name: 'Xamarin.Forms.Platform.Android.AppCompat.ButtonRenderer'.\r\n\r\n### Steps to Reproduce\r\nI have app with 4 buttons and it navigates 4 pages, all 4 pages contains Skiasharp.\r\n1.  When i tap on pages multiple times(navigates between pages)\r\n2. App is crashing with below log.\r\n\r\nThe same thing works for iOS but it fails in Android..\r\n\r\nJniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self)\r\nSystem.ObjectDisposedException: Cannot access a disposed object. Object name: 'Xamarin.Forms.Platform.Android.AppCompat.ButtonRenderer'.\r\nJniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self)\r\nJniPeerMembers+JniInstanceMethods.InvokeNonvirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue parameters)\r\nView.get_Context ()\r\nButtonRenderer.UpdateBitmap ()\r\nButtonRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e)\r\n(wrapper delegate-invoke) .invoke_void_object_PropertyChangedEventArgs(object,System.ComponentModel.PropertyChangedEventArgs)\r\nBindableObject.OnPropertyChanged (System.String propertyName)\r\nElement.OnPropertyChanged (System.String propertyName)\r\nBindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent)\r\nBindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes)\r\nBindingExpression.ApplyCore (System.Object sourceObject, Xamarin.Forms.BindableObject target, Xamarin.Forms.BindableProperty property, System.Boolean fromTarget)\r\nBindingExpression.Apply (System.Boolean fromTarget)\r\nBindingExpression+BindingExpressionPart.b__49_0 ()\r\nThread+RunnableImplementor.Run ()\r\nIRunnableInvoker.n_Run (System.IntPtr jnienv, System.IntPtr native__this)\r\n(wrapper dynamic-method) System.Object.0fa052d2-505e-4538-a06d-cc6a7f2bcb69(intptr,intptr)*\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms 3.0.0.482510\r\n- Last known good version:\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: Target Version Android 8.1(API Level 27), Minimum Android Version is Android 5.0(API Level 21)\r\n\r\n- Nuget Packages:\r\nMicrochart v0.8.3 prerelease\r\n- Affected Devices: Attached screenshot from appcenter\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n![1](https://user-images.githubusercontent.com/35101591/43443754-6b5e5142-94bf-11e8-9c92-6d011379a60c.JPG)\r\n![2](https://user-images.githubusercontent.com/35101591/43443755-6b91cbe4-94bf-11e8-8432-acbd1a8cf021.JPG)\r\n![3](https://user-images.githubusercontent.com/35101591/43443756-6bc3b730-94bf-11e8-8fc3-aa9f1d2346e0.JPG)\r\n![5](https://user-images.githubusercontent.com/35101591/43443757-6beda932-94bf-11e8-9868-fcfeecb8e504.JPG)\r\n![6](https://user-images.githubusercontent.com/35101591/43443758-6c19abea-94bf-11e8-9727-98fc5eb82b34.JPG)\r\n![7](https://user-images.githubusercontent.com/35101591/43443759-6c42149a-94bf-11e8-80ab-dd71e4be7381.JPG)\r\n![8](https://user-images.githubusercontent.com/35101591/43443760-6c77e67e-94bf-11e8-9c15-9b9a0f44ac75.JPG)\r\n![9](https://user-images.githubusercontent.com/35101591/43443761-6ca392ec-94bf-11e8-871d-ffbcffdd07c8.JPG)\r\n![10](https://user-images.githubusercontent.com/35101591/43443762-6ccc6ffa-94bf-11e8-8272-ef71e9526ea7.JPG)\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->"},{"Id":"8418160021","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:14:59","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3631","RelatedDescription":"Closed issue \"Allow OnChildMeasureInvalidated(object sender, EventArgs e) to be overriden or a return method\" (#3631) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nStackpanels or the base layout is not very efficient, when a large number of child elements visibility changes, these cause unnecessary layout calculations. These should be done in bulk, with one calculation.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Have a stack panel or the new experimental items control with a large set of hidden children.\r\n2. Update all children to visible. Noticeable delay as the layout is done per child.\r\n\r\n### Expected Behavior\r\nSmooth transition.\r\n### Actual Behavior\r\nUI thread is blocked. Large delays.\r\n\r\nThis can be changed in the base layout or allow developers to ignore children raising invalidate measure to throttle changes for one layout pass.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Current\r\n- Last known good version: None\r\n- Affected Devices: All?\r\n\r\nThis will be an issue with the new ItemsControl. Having dynamic children will be a large use case for the new control.\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/1743\r\n"},{"Id":"8418159491","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:14:40","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3560","RelatedDescription":"Closed issue \"[Android] MonoBtlsObject.CheckThrow ()\" (#3560) at xamarin/Xamarin.Forms","RelatedBody":"### MOST AFFECTED OS\r\n- SDK 23: 85.7%\r\n- SDK 26: 14.3%\r\n\r\n<pre>\r\nXamarin Exception Stack:\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'MonoBtlsSsl'.\r\n  at Mono.Btls.MonoBtlsObject.CheckThrow () [0x00024] in <5a97d41d36694fb19855c17429527b10>:0\r\n  at Mono.Btls.MonoBtlsObject.get_Handle () [0x00000] in <5a97d41d36694fb19855c17429527b10>:0\r\n  at Mono.Btls.MonoBtlsSslCtx.get_Handle () [0x00000] in <5a97d41d36694fb19855c17429527b10>:0\r\n  at Mono.Btls.MonoBtlsSslCtx.SetSelectCallback (Mono.Btls.MonoBtlsSelectCallback callback) [0x0000d] in <5a97d41d36694fb19855c17429527b10>:0\r\n  at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () <0x97275f08 + 0x00033> in <f32579baafc1404fa37ba3ec1abdc0bd>:0\r\n\r\nThread 1:\r\n0   android.os.MessageQueue.nativePollOnce(MessageQueue.java:-2)\r\n1   android.os.MessageQueue.next(MessageQueue.java:323)\r\n2   android.os.Looper.loop(Looper.java:135)\r\n3   android.app.ActivityThread.main(ActivityThread.java:7329)\r\n4   java.lang.reflect.Method.invoke(Method.java:-2)\r\n5   com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\n6   com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\n\r\nThread 134840:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Daemons$ReferenceQueueDaemon.run(Daemons.java:162)\r\n2   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134841:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Object.wait(Object.java:423)\r\n2   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:101)\r\n3   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:72)\r\n4   java.lang.Daemons$FinalizerDaemon.run(Daemons.java:200)\r\n5   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134842:\r\n0   java.lang.Thread.sleep(Thread.java:-2)\r\n1   java.lang.Thread.sleep(Thread.java:1031)\r\n2   java.lang.Thread.sleep(Thread.java:985)\r\n3   java.lang.Daemons$FinalizerWatchdogDaemon.sleepFor(Daemons.java:288)\r\n4   java.lang.Daemons$FinalizerWatchdogDaemon.waitForFinalization(Daemons.java:299)\r\n5   java.lang.Daemons$FinalizerWatchdogDaemon.run(Daemons.java:247)\r\n6   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134843:\r\n0   dalvik.system.VMRuntime.runHeapTasks(VMRuntime.java:-2)\r\n1   java.lang.Daemons$HeapTaskDaemon.run(Daemons.java:370)\r\n2   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134847:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134865:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134871:\r\n0   android.os.MessageQueue.nativePollOnce(MessageQueue.java:-2)\r\n1   android.os.MessageQueue.next(MessageQueue.java:323)\r\n2   android.os.Looper.loop(Looper.java:135)\r\n3   android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\nThread 134873:\r\n0   android.os.MessageQueue.nativePollOnce(MessageQueue.java:-2)\r\n1   android.os.MessageQueue.next(MessageQueue.java:323)\r\n2   android.os.Looper.loop(Looper.java:135)\r\n3   android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\nThread 134876:\r\n0   dalvik.system.VMStack.getThreadStackTrace(VMStack.java:-2)\r\n1   java.lang.Thread.getStackTrace(Thread.java:580)\r\n2   java.lang.Thread.getAllStackTraces(Thread.java:522)\r\n3   com.microsoft.appcenter.crashes.Crashes.saveUncaughtException(Crashes.java:923)\r\n4   com.microsoft.appcenter.crashes.WrapperSdkExceptionManager.saveWrapperException(WrapperSdkExceptionManager.java:50)\r\n\r\nThread 134891:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134894:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134895:\r\n0   android.os.MessageQueue.nativePollOnce(MessageQueue.java:-2)\r\n1   android.os.MessageQueue.next(MessageQueue.java:323)\r\n2   android.os.Looper.loop(Looper.java:135)\r\n3   android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\nThread 134898:\r\n0   android.os.MessageQueue.nativePollOnce(MessageQueue.java:-2)\r\n1   android.os.MessageQueue.next(MessageQueue.java:323)\r\n2   android.os.Looper.loop(Looper.java:135)\r\n3   android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\nThread 134900:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134901:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   com.google.android.gms.internal.zzbge.run\r\n10  java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134905:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134907:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   com.google.android.gms.internal.zzbge.run\r\n10  java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134908:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   java.lang.Thread.parkFor$(Thread.java:1220)\r\n2   sun.misc.Unsafe.park(Unsafe.java:299)\r\n3   java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n4   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n5   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n6   java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1036)\r\n7   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n8   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n9   java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134910:\r\n0   java.lang.Object.wait(Object.java:-2)\r\n1   com.android.okhttp.okio.AsyncTimeout.awaitTimeout(AsyncTimeout.java:323)\r\n2   com.android.okhttp.okio.AsyncTimeout.access$000(AsyncTimeout.java:40)\r\n3   com.android.okhttp.okio.AsyncTimeout$Watchdog.run(AsyncTimeout.java:286)\r\n\r\nThread 134925:\r\n0   com.android.org.conscrypt.NativeCrypto.SSL_read(NativeCrypto.java:-2)\r\n1   com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:811)\r\n2   com.android.okhttp.okio.Okio$2.read(Okio.java:140)\r\n3   com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\r\n4   com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:316)\r\n5   com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:310)\r\n6   com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:206)\r\n7   com.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:239)\r\n8   com.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:104)\r\n9   com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:1151)\r\n10  com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:982)\r\n11  com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:482)\r\n12  com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:418)\r\n13  com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:540)\r\n14  com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\r\n15  com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\r\n16  com.microsoft.appcenter.http.DefaultHttpClient.doHttpCall(DefaultHttpClient.java:233)\r\n17  com.microsoft.appcenter.http.DefaultHttpClient.doCall(DefaultHttpClient.java:141)\r\n18  com.microsoft.appcenter.http.DefaultHttpClient.access$000(DefaultHttpClient.java:33)\r\n19  com.microsoft.appcenter.http.DefaultHttpClient$Call.doInBackground(DefaultHttpClient.java:326)\r\n20  com.microsoft.appcenter.http.DefaultHttpClient$Call.doInBackground(DefaultHttpClient.java:302)\r\n21  android.os.AsyncTask$2.call(AsyncTask.java:295)\r\n22  java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n23  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n24  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n25  java.lang.Thread.run(Thread.java:818)\r\n\r\nThread 134926:\r\n0   com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(NativeCrypto.java:-2)\r\n1   com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:353)\r\n2   com.android.okhttp.internal.http.SocketConnector.connectTls(SocketConnector.java:212)\r\n3   com.android.okhttp.Connection.connect(Connection.java:1322)\r\n4   com.android.okhttp.Connection.connectAndSetOwner(Connection.java:1410)\r\n5   com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:131)\r\n6   com.android.okhttp.internal.http.HttpEngine.nextConnection(HttpEngine.java:485)\r\n7   com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:466)\r\n8   com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:372)\r\n9   com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:476)\r\n10  com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:118)\r\n11  com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:249)\r\n12  com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\r\n13  com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:25)\r\n14  com.microsoft.appcenter.http.DefaultHttpClient.doHttpCall(DefaultHttpClient.java:227)\r\n15  com.microsoft.appcenter.http.DefaultHttpClient.doCall(DefaultHttpClient.java:141)\r\n16  com.microsoft.appcenter.http.DefaultHttpClient.access$000(DefaultHttpClient.java:33)\r\n17  com.microsoft.appcenter.http.DefaultHttpClient$Call.doInBackground(DefaultHttpClient.java:326)\r\n18  com.microsoft.appcenter.http.DefaultHttpClient$Call.doInBackground(DefaultHttpClient.java:302)\r\n19  android.os.AsyncTask$2.call(AsyncTask.java:295)\r\n20  java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n21  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n22  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n23  java.lang.Thread.run(Thread.java:818)\r\n</pre>\r\n\r\n---\r\n\r\nNo code to reproduce\r\nLatest XF"},{"Id":"8418157771","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:13:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3760","RelatedDescription":"Closed issue \"System.IndexOutOfRange: Index was outside the bounds of the array at Mono.Cecil.MetadataReader.ReadLocalConstant\" (#3760) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI am unable to debug my application. I am getting an \"IndexOutOfRangeException\" whenever the debugger hits one of my break points in android. The problem seems to go away if I avoid using linq or keep my code extremely simple. \r\n\r\nFor example:\r\n```\r\nif(someVariable == true)  ---> this does not break.\r\n{\r\n\r\n}\r\n\r\n```\r\ninstead of\r\n```\r\nif(someVariable) ----> This does.\r\n{\r\n}\r\n\r\n```\r\n### Steps to Reproduce\r\n\r\nI am unsure on the steps to reproduce this. I am running an emulator using haxm (I have tried multiple), Android 8.1 as target framework. Xamarin.forms version 3.1.0.697729.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: Unsure\r\n- IDE: Visual studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n\r\n  - Android: 8.1\r\n\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: \r\n\r\nAuth0.Oidc.Client.Android v2.3\r\nPlugin.CurrentActivity 2.1.04\r\nsqlite-net-pcl: 1.4.188\r\nXam.Plugin.Geolocator: 4.5.0.6\r\nXam.Plugin.Media: v4.0.1.5\r\nXam.Plugins.Forms.ImageCircle: v.3.0.0.5\r\nXamarin.Android.Support.Design: v.27.0.2.1\r\nXamarin.Android.Support.v4: v27.0.2.1\r\nXamarin.Android.Support.v7.AppCompat: v27.0.2.1\r\nXamarin.Android.Support.v7.CardView: v.27.0.2.1\r\nXamarin.Android.Support.v7.MediaRouter: v.27.0.2.1\r\nXamarin.Forms: v3.1.0.697729\r\nXamarin.Forms.Maps: v2.5.0.077107\r\nXamarin.GooglePlayServices.Maps: v60.1142.1\r\nXamarin.GooglePlayServices.Places: v60.1142.1\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/39644464/45380056-08492000-b602-11e8-9ccd-4ab1b7e7e8e7.png)\r\n\r\n### Reproduction Link\r\n\r\n"},{"Id":"8418156827","Type":"IssuesEvent","CreatedAt":"2018-10-14T21:13:08","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3697","RelatedDescription":"Closed issue \"[Android] popup menu moving top-left\" (#3697) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nIf I use a Secondary Toolbar-Item to push a new page through a ViewModel on to the Navigation stack, the popup menu item is moving to the top-left corner before disappearing. This only happens when a page is pushed, not when the page stays the same.\r\n\r\n### Steps to Reproduce\r\nI think it happens mostly with older projects.\r\n1. Create a secondary toolbar item\r\n2. Create a ViewModel with a command pushing a new Page onto the navigation stack\r\n3. Bind the command to the toolbar item\r\n\r\n### Expected Behavior\r\nPopup menu item disappering and new page opening\r\n\r\n### Actual Behavior\r\nPopup menu item moving to the top-left corner before disappearing and opening new page\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: don't know\r\n- IDE: MS Visual Studio 15.7.4\r\n- Platform Target Frameworks: \r\n  - Android: 8.0\r\n- Android Support Library Version: 27.0.2.1\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n![bug](https://user-images.githubusercontent.com/4274219/44986661-d3472880-af84-11e8-9f44-0f140893782b.gif)\r\n\r\n\r\n### Reproduction Link\r\nI used the MasterDetail Example to reproduce as it was the \"cleanest\" project I had around with this issue. I could not reproduce it with every project.\r\nhttps://drive.google.com/file/d/1kROvYO5C-tdNZKhaATnqaTbsMBqcBRs4/view?usp=sharing\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8416708559","Type":"IssuesEvent","CreatedAt":"2018-10-14T06:16:01","Actor":"kyurkchyan","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4984","RelatedDescription":"Opened issue \"Entity Framework crashes on Xamarin iOS Device when entity contains many columns\" (#4984) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a Xamarin.Forms project targeting iOS\r\n2. Install Entity Framework Core nuget for SQLite version 2.1.4\r\n3. Add the following class\r\n```\r\npublic class JobSetup\r\n{\r\n    [Key]\r\n    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]\r\n    public Guid ID { get; set; }\r\n    public int? MinimumCrewSize { get; set; }\r\n    public int? MaximumCrewSize { get; set; }\r\n    public int? ForemenForLoadDeliver { get; set; }\r\n    public int? ForemenForShuttle { get; set; }\r\n    public int? ForemenForPush { get; set; }\r\n    public int? TimeForCleanup { get; set; }\r\n    public int? TimeForSetup { get; set; }\r\n    public int? TimeForToFromJob { get; set; }\r\n    public int? TimeForOriginToDest { get; set; }\r\n    public int? TimeForMinShift { get; set; }\r\n    public int? TimeForNormalShift { get; set; }\r\n    public int? TimeForMaxShift { get; set; }\r\n    public int? CubesPerHourForPush { get; set; }\r\n    public double? AccessFactorPer100Feet { get; set; }\r\n    public double? AccessFactorPerElevatorFloor { get; set; }\r\n    public double? AccessFactorPerStairFlight { get; set; }\r\n    public double? AdjBldgToBldgPush { get; set; }\r\n    public double? AdjBldgToBldgTruck { get; set; }\r\n    public double? AdjLoadBldgToTruck { get; set; }\r\n    public double? AdjUnloadTruckToBldg { get; set; }\r\n    public double? AdjSameBldgSameFloor { get; set; }\r\n    public double? AdjSameBldgDiffFloor { get; set; }\r\n    public double? AdjStageReplaceSameFloor { get; set; }\r\n    public double? AdjStageReplaceDiffFloor { get; set; }\r\n}\r\n```\r\n4. Add the following app DB context\r\n```\r\npublic class AppDbContext : DbContext\r\n{\r\n    public AppDbContext(DbContextOptions<AppDbContext> options)\r\n        : base(options)\r\n    {\r\n\r\n    }\r\n    public DbSet<JobSetup> JobSetups { get; set; }\r\n}\r\n```\r\n\r\n5. Call this method in MainPage.xaml.cs\r\n```\r\nprivate async void Test()\r\n{\r\n    var path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), \"..\", \"Library\", \"Test.db\");\r\n    if (File.Exists(path))\r\n    {\r\n        File.Delete(path);\r\n    }\r\n    DbContextOptions<AppDbContext> options = new DbContextOptionsBuilder<AppDbContext>()\r\n                                             .UseSqlite($\"Filename={path}\")\r\n                                             .Options;\r\n    var dbContext = new AppDbContext(options);\r\n    await dbContext.Database.EnsureCreatedAsync();\r\n    var js = new JobSetup();\r\n    dbContext.JobSetups.Add(js);\r\n    await dbContext.SaveChangesAsync();\r\n}\r\n```\r\n6. Run the app on a iOS device. Mine is iPad Mini 2, with iOS 11.4.1\r\n7. Observe that application crashes at line `dbContext.JobSetups.Add(js);` with the following stack trace \r\n```\r\n\r\n2018-10-14 09:59:36.678 EFCoreTest.iOS[337:13033] error: * Assertion at ../../../../../mono/mini/mini-arm64.c:1818, condition `buffer_offset <= 256' not met\r\n2018-10-14 09:59:36.679 EFCoreTest.iOS[337:13033] critical: Stacktrace:\r\n\r\n2018-10-14 09:59:36.679 EFCoreTest.iOS[337:13033] critical:   at <unknown> <0xffffffff>\r\n2018-10-14 09:59:36.679 EFCoreTest.iOS[337:13033] critical:   at (wrapper managed-to-native) System.Reflection.MonoCMethod.InternalInvoke (System.Reflection.MonoCMethod,object,object[],System.Exception&) <0x00007>\r\n2018-10-14 09:59:36.681 EFCoreTest.iOS[337:13033] critical:   at System.Reflection.MonoCMethod.InternalInvoke (object,object[]) [0x00002] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/MonoMethod.cs:661\r\n2018-10-14 09:59:36.681 EFCoreTest.iOS[337:13033] critical:   at System.Reflection.MonoCMethod.DoInvoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x0007a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/MonoMethod.cs:652\r\n2018-10-14 09:59:36.681 EFCoreTest.iOS[337:13033] critical:   at System.Reflection.MonoCMethod.Invoke (System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/MonoMethod.cs:680\r\n2018-10-14 09:59:36.681 EFCoreTest.iOS[337:13033] critical:   at System.Reflection.ConstructorInfo.Invoke (object[]) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/ConstructorInfo.cs:62\r\n2018-10-14 09:59:36.685 EFCoreTest.iOS[337:13033] critical:   at System.Linq.Expressions.Interpreter.NewInstruction.Run (System.Linq.Expressions.Interpreter.InterpretedFrame) [0x00017] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/external/corefx/src/System.Linq.Expressions/src/System/Linq/Expressions/Interpreter/NewInstruction.cs:35\r\n2018-10-14 09:59:36.685 EFCoreTest.iOS[337:13033] critical:   at System.Linq.Expressions.Interpreter.Interpreter.Run (System.Linq.Expressions.Interpreter.InterpretedFrame) [0x00015] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/external/corefx/src/System.Linq.Expressions/src/System/Linq/Expressions/Interpreter/Interpreter.cs:63\r\n2018-10-14 09:59:36.685 EFCoreTest.iOS[337:13033] critical:   at System.Linq.Expressions.Interpreter.LightLambda.Run1<T0_REF, TRet_REF> (T0_REF) [0x0001c] in <41fdc0bc3c7345aebac34baf698c1a1e#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.685 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry/OriginalValues..ctor (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry) [0x00012] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.685 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EnsureOriginalValues () [0x0000f] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.686 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntrySubscriber.SnapshotAndSubscribe (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry) [0x00010] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.686 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry) [0x0009b] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.686 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState (Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState,bool) [0x00161] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.686 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState (Microsoft.EntityFrameworkCore.EntityState,bool,System.Nullable`1<Microsoft.EntityFrameworkCore.EntityState>) [0x00038] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.687 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintAction (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,bool) [0x0003f] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.687 EFCoreTest.iOS[337:13033] critical:   at (wrapper unknown) object.gsharedvt_out () <0x000db>\r\n2018-10-14 09:59:36.687 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraph<TState_GSHAREDVT> (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,TState_GSHAREDVT,System.Func`3<Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, TState_GSHAREDVT, bool>) [0x00003] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.687 EFCoreTest.iOS[337:13033] critical:   at (wrapper unknown) object.gsharedvt_in () <0x000db>\r\n2018-10-14 09:59:36.687 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraph (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,bool) [0x00028] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.688 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.DbContext.SetEntityState (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState) [0x00016] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.688 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.DbContext.SetEntityState<TEntity_REF> (TEntity_REF,Microsoft.EntityFrameworkCore.EntityState) [0x0000f] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.688 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.DbContext.Add<TEntity_REF> (TEntity_REF) [0x00012] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.688 EFCoreTest.iOS[337:13033] critical:   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1<TEntity_REF>.Add (TEntity_REF) [0x00000] in <9b2250d1fb7644b98af1ab5ed79e762f#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.688 EFCoreTest.iOS[337:13033] critical:   at EFCoreTest.MainPage/<Test>d__2.MoveNext () [0x00110] in /Users/gagik/Downloads/EFCoreTest/EFCoreTest/MainPage.xaml.cs:40\r\n2018-10-14 09:59:36.689 EFCoreTest.iOS[337:13033] critical:   at System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start<TStateMachine_REF> (TStateMachine_REF&) [0x0002c] in <7d5a05cfcb09432d8cc656b9d781e54b#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.689 EFCoreTest.iOS[337:13033] critical:   at EFCoreTest.MainPage.Test () [0x0002a] in <3deb7a24ad65446fa9b18ee64ba6d37b#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.689 EFCoreTest.iOS[337:13033] critical:   at EFCoreTest.MainPage.OnAppearing () [0x00008] in /Users/gagik/Downloads/EFCoreTest/EFCoreTest/MainPage.xaml.cs:24\r\n2018-10-14 09:59:36.691 EFCoreTest.iOS[337:13033] critical:   at Xamarin.Forms.Page.SendAppearing () [0x00024] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Page.cs:316\r\n2018-10-14 09:59:36.691 EFCoreTest.iOS[337:13033] critical:   at Xamarin.Forms.Platform.iOS.PageRenderer.ViewDidAppear (bool) [0x00025] in <02d849b2e21741169c7b5bbc798a23d0#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.691 EFCoreTest.iOS[337:13033] critical:   at (wrapper runtime-invoke) object.runtime_invoke_dynamic (intptr,intptr,intptr,intptr) [0x0001e] in <7d5a05cfcb09432d8cc656b9d781e54b#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.691 EFCoreTest.iOS[337:13033] critical:   at <unknown> <0xffffffff>\r\n2018-10-14 09:59:36.692 EFCoreTest.iOS[337:13033] critical:   at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain (int,string[],intptr,intptr) <0x00007>\r\n2018-10-14 09:59:36.693 EFCoreTest.iOS[337:13033] critical:   at UIKit.UIApplication.Main (string[],intptr,intptr) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/UIKit/UIApplication.cs:79\r\n2018-10-14 09:59:36.693 EFCoreTest.iOS[337:13033] critical:   at UIKit.UIApplication.Main (string[],string,string) [0x0002c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.0.0.15/src/Xamarin.iOS/UIKit/UIApplication.cs:63\r\n2018-10-14 09:59:36.693 EFCoreTest.iOS[337:13033] critical:   at EFCoreTest.iOS.Application.Main (string[]) [0x00001] in /Users/gagik/Downloads/EFCoreTest/EFCoreTest.iOS/Main.cs:17\r\n2018-10-14 09:59:36.693 EFCoreTest.iOS[337:13033] critical:   at (wrapper runtime-invoke) object.runtime_invoke_dynamic (intptr,intptr,intptr,intptr) [0x0001e] in <7d5a05cfcb09432d8cc656b9d781e54b#D5284A72-BBAF-2A6A-D43B-BF5066397725>:0\r\n2018-10-14 09:59:36.693 EFCoreTest.iOS[337:13033] critical: \r\n```\r\n\r\n### Expected Behavior\r\n`dbContext.JobSetups.Add(js);` should successfully add the item into the DB context\r\n\r\n### Actual Behavior\r\n`dbContext.JobSetups.Add(js);` throws an exception\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.9 (build 22)\r\nInstallation UUID: 21f35cb0-ffca-4f2b-b96d-fc41cb3325af\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Community)\r\nAndroid SDK: /Users/gagik/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 28.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Community)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.15 (Visual Studio Community)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706090022\r\nGit revision: 0a0ba3c4593e9adb1c6ff6324e641036146af376\r\nBuild date: 2018-10-05 16:38:51+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f7856b13f2c03a58e08381d3a5970bba18f5c7d7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nNuGet Package Explorer 0.2\r\nNuGet Package Management Extensions 0.12.6\r\nStraight8's SpecFlow Intergration 1.11.0.0\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nhttps://gist.github.com/kyurkchyan/37c377f8a0545837ebd9fe7d3311ade4\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[EFCoreTest 2.zip](https://github.com/xamarin/xamarin-macios/files/2476129/EFCoreTest.2.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8413701167","Type":"IssuesEvent","CreatedAt":"2018-10-12T21:12:14","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4972","RelatedDescription":"Closed issue \"Cannot build app with scanbot nuget with don't link linker behaviour\" (#4972) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone following repo: https://github.com/doo/scanbot-sdk-example-xamarin.git\r\n2. Put iOS linker behaviour to don't link\r\n3. build.\r\n\r\n### Expected Behaviour\r\niOS Project should build correctly\r\n\r\n### Actual Behaviour\r\niOS Project doesn't build and throws native linking errors. Errors can be found in build log below.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.9 (build 22)\r\nInstallation UUID: 168e1467-49ef-4a4e-9c41-e7c3f60701e5\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.1\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Enterprise)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.15 (Visual Studio Enterprise)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/michaelgobbers/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1 (API level 16)\r\n\t\t4.2 (API level 17)\r\n\t\t4.3 (API level 18)\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706090022\r\nGit revision: 0a0ba3c4593e9adb1c6ff6324e641036146af376\r\nBuild date: 2018-10-05 16:38:51+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f7856b13f2c03a58e08381d3a5970bba18f5c7d7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nMvvmCross Template pack 2.0.1\r\nStraight8's SpecFlow Integration 1.11.2.0\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/michaelgobbers/b525c2f1c892c886ffbd9fd0dabed812\r\n\r\n### Example Project (If Possible)\r\n\r\nhttps://github.com/doo/scanbot-sdk-example-xamarin.git\r\n"},{"Id":"8413689075","Type":"IssuesEvent","CreatedAt":"2018-10-12T21:09:28","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4558","RelatedDescription":"Closed issue \"NSView.NextKeyView is not allowed to be null\" (#4558) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1.\r\nSet NextKeyView to null\r\n\r\n`view.NextKeyView = null;`\r\n\r\n### Expected Behavior\r\n\r\nNextKeyView is allowed to be null. From https://developer.apple.com/documentation/appkit/nsview/1483465-nextkeyview?language=objc\r\n\r\n> The value in this property is nil if there is no next view in the key view loop.\r\n\r\n### Actual Behavior\r\n\r\n> System.ArgumentNullException: Value cannot be null.\r\n> Parameter name: value\r\n> at AppKit.NSView.set_NextKeyView (AppKit.NSView value)\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.7 Preview (7.7 build 557)\r\nInstallation UUID: f64c47d3-1a2d-4092-8fae-dc3309136470\r\nRuntime:\r\n\tMono 5.14.0.105 (2018-04/6d28c8f9621) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 514000105\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.1\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.14.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.0.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.178 (Visual Studio Enterprise)\r\nHash: eeaeb7e6\r\nBranch: master\r\nBuild date: 2018-05-14 17:36:06-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.5.0.92 (Visual Studio Enterprise)\r\nHash: d0bb1c5d\r\nBranch: master\r\nBuild date: 2017-09-27 11:43:16-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/iain/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1    (API level 16)\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 28\r\nSDK Build Tools Version: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.0.629.0\r\nHash: ccfe436f\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.2\r\nHash: 213565e\r\nBranch: 1.4-release\r\nBuild date: Thu, 05 Jul 2018 17:45:17 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707000557\r\nGit revision: b838dcbbb3a55cc2ef268020b2c99e661daa251e\r\nBuild date: 2018-07-09 12:18:08+00\r\nBuild branch: master\r\nXamarin extensions: f96a1e6f9b7806a813caeaec415d7ba33de3dcba\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n"},{"Id":"8413688635","Type":"PullRequestEvent","CreatedAt":"2018-10-12T21:09:21","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4979","RelatedDescription":"Merged pull request \"[appkit] Add missing `[NullAllowed]` on `NSView.NextKeyView`. Fixes #4558\" (#4979) at xamarin/xamarin-macios","RelatedBody":"Confirmed with headers.\n\nreference: https://github.com/xamarin/xamarin-macios/issues/4558"},{"Id":"8413330936","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:49:19","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4983","RelatedDescription":"Opened pull request \"[tests][mmp] Convert old mmp calendar regression tests to unit tests\" (#4983) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8413164878","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:14:14","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4982","RelatedDescription":"Opened pull request \"[uikit] Duplicate bindings for 'UIScrollView.ContentOffset' to get correct availability information. Fixes #4893\" (#4982) at xamarin/xamarin-macios","RelatedBody":"`ContentOffset` was moved to `UIFocusItemScrollableContainer` in iOS 12.\nSince it's a new protocol it's decorated as introduced in iOS 12 - but\nthe API was actually already available for a long time.\n\nThe _trick_ is to keep the original binding inside `UIScrollView`\nso it overrides the protocol and keeps the correct availability info.\nIt requires adding `new` to bindings to avoid compiler warnings.\n\nreference: https://github.com/xamarin/xamarin-macios/issues/4893"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":22,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":31,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":33,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":202,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":80,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null}]}},"RunOn":"2018-10-15T05:30:58.279232Z","RunDurationInMilliseconds":3717}