{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6601600593","Type":"IssuesEvent","CreatedAt":"2017-09-18T02:21:40","Actor":"vue-issue-bot","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1747","RelatedDescription":"Closed issue \"For API consistent and simplify, why not use `$router.to` instead of `$router.push`?\" (#1747) at vuejs/vue-router","RelatedBody":"Or combine `$router.go` with `push` and `to` is a good way I think, it's much simple to use and remember, when args is number just `go`, otherwise `to`, but `push` just confused me with `Array` method.\r\n"},{"Id":"6601600571","Type":"IssuesEvent","CreatedAt":"2017-09-18T02:21:39","Actor":"turnerguo","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1747","RelatedDescription":"Opened issue \"For API consistent and simplify, why not use `$router.to` instead of `$router.push`?\" (#1747) at vuejs/vue-router","RelatedBody":"Or combine `$router.go` with `push` and `to` is a good way I think, it's much simple to use and remember, when args is number just `go`, otherwise `to`, but `push` just confused me with `Array` method.\r\n"},{"Id":"6600820177","Type":"IssuesEvent","CreatedAt":"2017-09-17T16:54:49","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1746","RelatedDescription":"Closed issue \"Losing params open in new tab\" (#1746) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\ncodepen / jsfiddle don't support open in new tab. But for the idea:\r\nhttp://jsfiddle.net/yo62z2o5/\r\n\r\n### Steps to reproduce\r\n`ctrl   click` on a `router-link` with params.\r\nor right click -> open in tab / open in window.\r\n\r\n### What is expected?\r\nThe route opens in a new tab containing the params.\r\n\r\n### What is actually happening?\r\nthe params are empty.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6600811960","Type":"IssuesEvent","CreatedAt":"2017-09-17T16:48:35","Actor":"SnooHD","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1746","RelatedDescription":"Opened issue \"Losing params open in new tab\" (#1746) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\ncodepen / jsfiddle don't support open in new tab. But for the idea:\r\nhttp://jsfiddle.net/yo62z2o5/\r\n\r\n### Steps to reproduce\r\n`ctrl   click` on a `router-link` with params.\r\nor right click -> open in tab / open in window.\r\n\r\n### What is expected?\r\nThe route opens in a new tab containing the params.\r\n\r\n### What is actually happening?\r\nthe params are empty.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6599371453","Type":"IssuesEvent","CreatedAt":"2017-09-16T18:51:04","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1745","RelatedDescription":"Closed issue \"Async components and TypeScript\" (#1745) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/rhyek/aspnetmvccore-vuejs-boilerplate/blob/master/clients/web/src/router/index.ts#L13](https://github.com/rhyek/aspnetmvccore-vuejs-boilerplate/blob/master/clients/web/src/router/index.ts#L13)\r\n\r\n### Steps to reproduce\r\nScaffolded a new project using `vue-cli` and the webpack template. I'm trying to convert it to TypeScript following https://github.com/vuejs/vue-class-component/tree/master/example. Finally, I'm trying to assign an async component (written using `vue-class-component`) to a route config definition.\r\n\r\n### What is expected?\r\nTypeScript should understand what I'm trying to do.\r\n\r\n### What is actually happening?\r\nTypeScript complains with the following:\r\n\r\n```\r\n[ts]\r\nArgument of type '{ mode: \"history\"; routes: { path: string; component: () => Promise<typeof \"*.vue\">; }[]; }' is not assignable to parameter of type 'RouterOptions | undefined'.\r\n  Type '{ mode: \"history\"; routes: { path: string; component: () => Promise<typeof \"*.vue\">; }[]; }' is not assignable to type 'RouterOptions'.\r\n    Types of property 'routes' are incompatible.\r\n      Type '{ path: string; component: () => Promise<typeof \"*.vue\">; }[]' is not assignable to type 'RouteConfig[] | undefined'.\r\n        Type '{ path: string; component: () => Promise<typeof \"*.vue\">; }[]' is not assignable to type 'RouteConfig[]'.\r\n          Type '{ path: string; component: () => Promise<typeof \"*.vue\">; }' is not assignable to type 'RouteConfig'.\r\n            Types of property 'component' are incompatible.\r\n              Type '() => Promise<typeof \"*.vue\">' is not assignable to type 'typeof Vue | ComponentOptions<Vue> | undefined'.\r\n                Type '() => Promise<typeof \"*.vue\">' has no properties in common with type 'ComponentOptions<Vue>'.\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6601641289","Type":"PullRequestEvent","CreatedAt":"2017-09-18T02:44:44","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/956","RelatedDescription":"Merged pull request \"[zh-cn] http -> https\" (#956) at vuejs/vuex","RelatedBody":""},{"Id":"6601598864","Type":"PullRequestEvent","CreatedAt":"2017-09-18T02:20:40","Actor":"lanceli","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/pull/904","RelatedDescription":"Closed pull request \"[zh-hans] use zh-hans instead of zh-cn\" (#904) at vuejs/vuex","RelatedBody":"Currently the docs of simplified Chinese shown traditional Chinese by gitbook.\r\nUse zh-hans instead of zh-cn to fix it.\r\n\r\nRefs: \r\n- https://github.com/GitbookIO/gitbook/commit/5d1c4d2b9fabedaddaf271f1a5da19aacaaee6c9\r\n\r\n-\r\n https://github.com/GitbookIO/gitbook/blob/b48f8472d35b27d549d7c9a5b61f77f6b78e1908/CHANGES.md#260\r\n\r\n![WechatIMG17.jpeg](https://i.loli.net/2017/08/12/598e49cb9fc69.jpeg)\r\n"},{"Id":"6601022305","Type":"IssuesEvent","CreatedAt":"2017-09-17T19:20:34","Actor":"LinusBorg","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/957","RelatedDescription":"Closed issue \"Access to getters from namespaced modules\" (#957) at vuejs/vuex","RelatedBody":"### Version\r\n2.4.0\r\n\r\n### Reproduction link\r\n[https://github.com/yageek/vuex-reproduce](https://github.com/yageek/vuex-reproduce)\r\n\r\n### Steps to reproduce\r\n1. Create a project with vuex with one namespaced module `moduleA` and a router.\r\n2. Add a `isPositive` getter inside the store's module\r\n3. Try to access the getters with `store.moduleA.isPositive` from the router\r\n4. See the console log\r\n\r\n\r\n### What is expected?\r\nIt should be possible to access the getters with `store.moduleA.isPositive`\r\n\r\n### What is actually happening?\r\nWe get the error `Cannot read property 'isPositive' of undefined`.\r\n\r\nUsing the debugger pointed out that the `store`instance does not have a property `store.getters.moduleA.isPositive`but a property with `getters.moduleA/isPositive` (not the slash)\r\n<img width=\"673\" alt=\"capture d ecran 2017-09-17 a 21 10 57\" src=\"https://user-images.githubusercontent.com/170917/30524056-bfdabb6a-9bec-11e7-9de4-f6de53e58d66.png\">\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6601010001","Type":"IssuesEvent","CreatedAt":"2017-09-17T19:11:48","Actor":"yageek","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/957","RelatedDescription":"Opened issue \"Access to getters from namespace modules\" (#957) at vuejs/vuex","RelatedBody":"### Version\r\n2.4.0\r\n\r\n### Reproduction link\r\n[https://github.com/yageek/vuex-reproduce](https://github.com/yageek/vuex-reproduce)\r\n\r\n### Steps to reproduce\r\n1. Create a project with vuex with one namespaced module `moduleA` and a router.\r\n2. Add a `isPositive` getter inside the store's module\r\n3. Try to access the getters with `store.moduleA.isPositive` from the router\r\n4. See the console log\r\n\r\n\r\n### What is expected?\r\nIt should be possible to access the getters with `store.moduleA.isPositive`\r\n\r\n### What is actually happening?\r\nWe get the error `Cannot read property 'isPositive' of undefined`.\r\n\r\nUsing the debugger pointed out that the `store`instance does not have a property `store.getters.moduleA.isPositive`but a property with `getters.moduleA/isPositive` (not the slash)\r\n<img width=\"673\" alt=\"capture d ecran 2017-09-17 a 21 10 57\" src=\"https://user-images.githubusercontent.com/170917/30524056-bfdabb6a-9bec-11e7-9de4-f6de53e58d66.png\">\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6600770095","Type":"PullRequestEvent","CreatedAt":"2017-09-17T16:18:47","Actor":"Jinjiang","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/956","RelatedDescription":"Opened pull request \"[zh-cn] http -> https\" (#956) at vuejs/vuex","RelatedBody":""}],"ResultType":"GitHubEvent"}},"RunOn":"2017-09-18T05:30:27.3187312Z","RunDurationInMilliseconds":1897}