{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":143,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8617361997","Type":"IssuesEvent","CreatedAt":"2018-11-20T05:07:28","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21108","RelatedDescription":"Opened issue \"Running a simple 'HelloWorld' console app through the `protononjit.dll` on Windows causes various asserts\" (#21108) at dotnet/coreclr","RelatedBody":"### Repro\r\n\r\n1. Build a x64 Debug or Checked build of CoreCLR\r\n2. Create and build a simple \"Hello World\" console app (`dotnet new console` works)\r\n3. Enable the AltJit (`COMPlus_AltJit=*`, `COMPlus_AltJitName=protononjit.dll`) and attempt to run the console app\r\n\r\n### Results\r\n\r\n```\r\nAssert failure(PID 31916 [0x00007cac], Thread: 31256 [0x7a18]): Assertion failed 'tree->IsLocal() || (tree->OperGet() == GT_RET_EXPR) || (tree->OperGet() == GT_CALL) || ((tree->gtOper == GT_ADDR) && varTypeIsSIMD(tree->gtGetOp1()))' in 'System.SpanHelpers:IndexOf(byref,ushort,int):int' (IL size 460)\r\n\r\n    File: e:\\users\\tagoo\\repos\\coreclr_base\\src\\jit\\simd.cpp Line: 1130\r\n    Image: e:\\users\\tagoo\\repos\\coreclr_base\\bin\\tests\\windows_nt.x64.debug\\tests\\core_root\\corerun.exe\r\n```"},{"Id":"8617353902","Type":"IssuesEvent","CreatedAt":"2018-11-20T05:04:26","Actor":"danmosemsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/6977","RelatedDescription":"Closed issue \"Type.GetInterface(string, bool) - NullReferences to unguarded Type.Namespace call.\" (#6977) at dotnet/coreclr","RelatedBody":"Consider this simple test:\n\n```\n  using System;\n  using System.Reflection;\n  using System.Diagnostics;\n\n  internal class Foo : IFoo { }   // Must be in the global namespace for bug to repro.\n  internal interface IFoo { }\n  public class Program\n  {\n      public static void Main(string[] args)\n      {\n          Type t = typeof(Foo);\n          Type ifc = t.GetInterface(\"System.IFoo\", ignoreCase: false);\n          Debug.Assert(ifc == null);\n          return;\n      }\n  }\n\n```\n\nThis NullReferences due to <a href=\"https://github.com/dotnet/coreclr/blob/master/src/mscorlib/src/System/RtType.cs#L2387\">this check</a>.\n\n```\n private static bool FilterApplyType(Type type, BindingFlags bindingFlags, string name, bool prefixLookup, string ns)\n {\n        ...\n        if (ns != null && !type.Namespace.Equals(ns))\n            return false;\n        ...\n  }\n```\n\nThe repro conditions are:\n- The type \"Foo\" implements an interface defined in the global namespace.\n- The passed in pattern matches the interface <i>simple</i> name (\"IFoo\")\n- The passed in pattern includes a non-empty namespace portion (\"System\")\n\nNormally, this should cause a failed match and GetInterface() returning null.\n\nBut because the actual found interface lies in the global namespace, type.Namespace (correctly) returns <b>null</b>, but this code never checks for that case, so the attempt to invoke Equal() on it null-references.\n\nThe fix is to reverse the call to \"ns.Equals(type.Namespace)\"\n\nThis doesn't address all the other daft consequences of this check (namely that GetInterface() lets you match a non-global-namespace interface by passing in only its simple name, and that \"ignoreCase:true\" applies only to the simple-name part. But fixing the former is likely breaking, and the latter is actually documented in MSDN.\n\nOpening this issue for tracking since I don't intend to port this particular bug to corert.\n"},{"Id":"8617338229","Type":"IssuesEvent","CreatedAt":"2018-11-20T04:58:37","Actor":"aaabbbcccddd00001111","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21107","RelatedDescription":"Opened issue \".NET Core Need to Consume .NET Framework Assemblies\" (#21107) at dotnet/coreclr","RelatedBody":".NET Core needs to consume .NET Framework assemblies because there are too many assemblies in .NET Framework that have to be used.\r\n\r\nThird party packages most of the time are not in same quality as .NET Framework.\r\n"},{"Id":"8617253908","Type":"PullRequestEvent","CreatedAt":"2018-11-20T04:26:20","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21106","RelatedDescription":"Opened pull request \"Updating some test timeouts\" (#21106) at dotnet/coreclr","RelatedBody":"CC. @CarolEidt, @jkotas \r\n\r\nWe have a number of tests (especially on Unix) that are timing out in CI (and have been for some time).\r\n\r\nThis updates the \"Long GC tests\" to 30 minutes (which matches what we currently have in our `netci.groovy` file [here](https://github.com/dotnet/coreclr/blob/master/netci.groovy#L2182)) and the default test timeout (which appears to be what most of the failing tests are using) to 20m.\r\n\r\nFor reference:\r\n* https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x64_checked_ubuntu_gcstress0x3_tst/lastCompletedBuild/testReport/\r\n* https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x64_checked_ubuntu_gcstress0xc_tst/\r\n* etc"},{"Id":"8617213619","Type":"PullRequestEvent","CreatedAt":"2018-11-20T04:11:44","Actor":"danmosemsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20997","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx to preview1-03415-02, rtm-27110-04, servicing-27110-04, respectively (release/2.2)\" (#20997) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8617240081","Type":"PullRequestEvent","CreatedAt":"2018-11-20T04:21:16","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10366","RelatedDescription":"Opened pull request \"Bump SDK package to `3.0.100-preview.18569.3`.\" (#10366) at dotnet/cli","RelatedBody":"Bumping SDK package to `3.0.100-preview.18569.3`."},{"Id":"8616757436","Type":"IssuesEvent","CreatedAt":"2018-11-20T01:46:53","Actor":"Allann","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10365","RelatedDescription":"Opened issue \"401 Unautorized during build restore step\" (#10365) at dotnet/cli","RelatedBody":"I raised this issue in the community forum https://developercommunity.visualstudio.com/content/problem/386555/401-unauthorized-1.html but might have been the wrong place.  Delete this if not required.\r\n\r\n## Steps to reproduce\r\nInstall SDK 2.1.500 on build machine (or use the .Net Core Tools Installer step)\r\nQueue a build\r\nFails the restore step\r\n\r\n## Expected  behavior\r\nSuccessful build\r\n\r\n## Actual behavior\r\nReceive the following build error:\r\n```\r\n2018-11-19T22:30:07.7941715Z C:\\agent_work_tool\\dncs\\2.1.500\\x64\\sdk\\2.1.500\\NuGet.targets(114,5): error : Unable to load the service index for source https://jbsaustralia.pkgs.visualstudio.com/_packaging/34b4571c-020a-41d1-bc1d-9d0d009ca82c/nuget/v3/index.json. [C:\\agent_work\\9\\s\\tests\\Core.ExceptionTranslationTests\\Core.ExceptionTranslationTests.csproj] 2018-11-19T22:30:07.7942009Z C:\\agent_work_tool\\dncs\\2.1.500\\x64\\sdk\\2.1.500\\NuGet.targets(114,5): error : Response status code does not indicate success: 401 (Unauthorized). [C:\\agent_work\\9\\s\\tests\\Core.ExceptionTranslationTests\\Core.ExceptionTranslationTests.csproj] 2018-11-19T22:30:07.9077997Z ##[error]Error: C:\\agent_work_tool\\dncs\\2.1.500\\x64\\dotnet.exe failed with return code: 1 2018-11-19T22:30:07.9087019Z ##[error]Packages failed to restore\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.11 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n```\r\n\r\nI confirmed the SDK was the cause by removing it via the Add Remove Programs and reverting back to 2.1.403.  Successfully builds using 2.1.403.  Created a brand new Windows 10 machine, only added 2.1.403 and then installed the latest agent.  Ran a build, success, changed the tool installer step to use 2.1.500, and the same build failed.  Changing back to 403 again passed. \r\n\r\n\r\n"},{"Id":"8616686029","Type":"IssuesEvent","CreatedAt":"2018-11-20T01:26:05","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10363","RelatedDescription":"Closed issue \".NET Core SDK 3.0 breaks Azure Functions SDK build\" (#10363) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Install a recent .NET Core 3.0 SDK.\r\n2. Install the [Azure Functions core tools](https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local).\r\n3. Run `func init` and select the `dotnet`  runtime.\r\n4. Run `func start`.\r\n\r\n## Expected  behavior\r\n\r\nThe project should build and the Azure Functions host should start.\r\n\r\n## Actual behavior\r\n\r\nThe build fails:\r\n\r\n```\r\n$ func start\r\nMicrosoft (R) Build Engine version 16.0.225-preview+g5ebeba52a1 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 28.71 ms for /Users/peterhuene/tmp/azfunc/azfunc.csproj.\r\n/usr/local/share/dotnet/sdk/3.0.100-preview-009754/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(142,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/Users/peterhuene/tmp/azfunc/azfunc.csproj]\r\n/Users/peterhuene/.nuget/packages/microsoft.net.sdk.functions/1.0.23/build/netstandard1.0/Microsoft.NET.Sdk.Functions.Build.targets(163,5): error MSB4057: The target \"RunResolvePublishAssemblies\" does not exist in the project. [/Users/peterhuene/tmp/azfunc/azfunc.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/Users/peterhuene/.nuget/packages/microsoft.net.sdk.functions/1.0.23/build/netstandard1.0/Microsoft.NET.Sdk.Functions.Build.targets(163,5): error MSB4057: The target \"RunResolvePublishAssemblies\" does not exist in the project. [/Users/peterhuene/tmp/azfunc/azfunc.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.83\r\n\r\n\r\nError building project\r\n```\r\n\r\n## Environment data\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009754\r\n Commit:    775dda93ef\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview-009754/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27114-01\r\n  Commit:  3fd6793563\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009750 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009754 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10663 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10663 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27113-06 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27114-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8616396009","Type":"IssuesEvent","CreatedAt":"2018-11-20T00:00:07","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9918","RelatedDescription":"Closed issue \"Manifest serialization/deserialization \" (#9918) at dotnet/cli","RelatedBody":"- [x] Finalize manifest file format\r\n- [x] serialization\r\n- [x] deserialization\r\n\r\n\r\n\r\n"},{"Id":"8616394050","Type":"IssuesEvent","CreatedAt":"2018-11-19T23:59:32","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10101","RelatedDescription":"Closed issue \"tool install cannot install on culture \"en-US-POSIX\"  -- `dotnet tool install` cannot install on ubuntu 18.04\" (#10101) at dotnet/cli","RelatedBody":"https://github.com/NuKeeperDotNet/NuKeeper/issues/433\r\nhttps://github.com/dotnet/cli/issues/9974\r\n\r\non WSL ubuntu 18.04\r\n\r\nRun `dotnet tool install --global NuKeeper` on WSL ubuntu 18.04. Get error `The settings file in the tool's NuGet package is invalid: Settings file 'DotnetToolSettings.xml' was not found in the package.\r\nTool 'nukeeper' failed to install. Please contact the tool author for assistance.`\r\n\r\n\r\n"},{"Id":"8616391250","Type":"IssuesEvent","CreatedAt":"2018-11-19T23:58:42","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9917","RelatedDescription":"Closed issue \"dotnet tool install/uninstall <--local> dotnetsay packageID\" (#9917) at dotnet/cli","RelatedBody":"Experience to create/edit manifest file for local tools\r\n\r\n\r\n\r\n"},{"Id":"8616364837","Type":"IssuesEvent","CreatedAt":"2018-11-19T23:51:21","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10364","RelatedDescription":"Opened issue \"Remove flag `DOTNET_SKIP_FIRST_TIME_EXPERIENCE`\" (#10364) at dotnet/cli","RelatedBody":"Since LZMA cache expansion is no longer needed. The only thing `DOTNET_SKIP_FIRST_TIME_EXPERIENCE` controls is aspnet certification. But aspnet certification also has a separate flag `DOTNET_GENERATE_ASPNET_CERTIFICATE`."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8616736966","Type":"IssuesEvent","CreatedAt":"2018-11-20T01:40:49","Actor":"verb0se","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/976","RelatedDescription":"Opened issue \"Could not load file or assembly System.Configuration.ConfigurationManager\" (#976) at dotnet/standard","RelatedBody":"Upgrading some .NET Framework projects to Standard 2.0, I've installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet on all projects.  Getting the following error:\r\n\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'System.Configuration.ConfigurationManager, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n  \r\nJust to see if the issue might have been due to something with the current solution, I created a new Standard 2.0 console app, installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet as the only dependency, and got the same error.\r\n\r\nFrom the deps.json file:\r\n\r\n\"System.Configuration.ConfigurationManager/4.5.0\": {\r\n        \"dependencies\": {\r\n          \"System.Security.Cryptography.ProtectedData\": \"4.5.0\",\r\n          \"System.Security.Permissions\": \"4.5.0\"\r\n        },\r\n        \"runtime\": {\r\n          \"lib/netstandard2.0/System.Configuration.ConfigurationManager.dll\": {\r\n            \"assemblyVersion\": \"4.0.1.0\",\r\n            \"fileVersion\": \"4.6.26515.6\"\r\n          }\r\n        }\r\n      }\r\n\r\nWe would like to use System.Configuration.ConfigurationManager with our upgrade but I can't seem to load it from a project \r\n"},{"Id":"8616135429","Type":"PullRequestEvent","CreatedAt":"2018-11-19T22:52:13","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/951","RelatedDescription":"Merged pull request \"Import Arcade props/targets\" (#951) at dotnet/standard","RelatedBody":"Moves us closer to transitioning to the new Engineering system. Currently this builds, but has APICompat failures. Will remove WIP label when I think it's ready to merge\r\n\r\n@weshaggard @eerhardt @safern PTAL\r\n\r\nCC @danmosemsft @karelz "},{"Id":"8612708747","Type":"PullRequestEvent","CreatedAt":"2018-11-19T13:11:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/975","RelatedDescription":"Merged pull request \"Update dependency files\" (#975) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18568.1\r\n\r\n"},{"Id":"8612651774","Type":"PullRequestEvent","CreatedAt":"2018-11-19T13:01:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/975","RelatedDescription":"Opened pull request \"Update dependency files\" (#975) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18568.1\r\n\r\n"},{"Id":"8608544477","Type":"PullRequestEvent","CreatedAt":"2018-11-18T13:11:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/974","RelatedDescription":"Merged pull request \"Update dependency files\" (#974) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18567.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8617353911","Type":"PullRequestEvent","CreatedAt":"2018-11-20T05:04:26","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33569","RelatedDescription":"Merged pull request \"Cleanup and add Type.GetInterface tests\" (#33569) at dotnet/corefx","RelatedBody":"Depends on https://github.com/dotnet/coreclr/pull/21071\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/6977\r\nFixes https://github.com/dotnet/corefx/issues/33004"},{"Id":"8617353905","Type":"IssuesEvent","CreatedAt":"2018-11-20T05:04:26","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33004","RelatedDescription":"Closed issue \"Type.GetInterface with a same named interface throws a NullReferenceException\" (#33004) at dotnet/corefx","RelatedBody":"```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Reflection;\r\nusing Xunit;\r\n\r\nnamespace System.Tests\r\n{\r\n    public partial class TypeTests\r\n    {\r\n        [Fact]\r\n        public void GetInterface_SameNameInterfaces_ThrowsAmbiguousMatchException()\r\n        {\r\n            Assert.Throws<AmbiguousMatchException>(() => typeof(ClassWithTwoSameNameInterfaces).GetInterface(\"Interface1\", ignoreCase: true));\r\n            Assert.Throws<NullReferenceException>(() => typeof(ClassWithTwoSameNameInterfaces).GetInterface(\"System.Tests.Inner.Interface1\", ignoreCase: true));\r\n        }\r\n    }\r\n\r\n    public class ClassWithTwoSameNameInterfaces : Interface1, Inner.Interface1 { }\r\n\r\n    namespace Inner\r\n    {\r\n        public interface Interface1 { }\r\n    }\r\n}\r\n\r\npublic interface Interface1 { }\r\n```"},{"Id":"8617317093","Type":"IssuesEvent","CreatedAt":"2018-11-20T04:50:26","Actor":"aaabbbcccddd00001111","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33618","RelatedDescription":"Opened issue \".NET Core Missing System.Windows.Media.Imaging \" (#33618) at dotnet/corefx","RelatedBody":"Hi,\r\n.NET Core does not have System.Windows,Media.Imaging . I need the classes in System.Windows,Media.Imaging .\r\n"},{"Id":"8617059507","Type":"PullRequestEvent","CreatedAt":"2018-11-20T03:19:34","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33527","RelatedDescription":"Merged pull request \"share NetworkInformation implementation between OSX and FreeBSD\" (#33527) at dotnet/corefx","RelatedBody":"related to #24386 \r\n\r\nNetworkInformation is very similar between FreeBSD and OSX. In general, networking comes from same heritage. With that this change combines OSX and FreeBsd under Bsd (like) group. \r\nMost of this change is just renaming. \r\n\r\nNetworkAddressChange is still stubbed out and it will throw PNSP exception.\r\nI disabled related tests and all NetworkInformation tests pass now. \r\nThis also makes System.Net.Mail pass on FreeBSD (as they are dependent on NetworkInformation)  \r\n\r\nI verified that we get correct interface list and link status and socket info is covered with recently added tests.  \r\n\r\nThis depends on #33517 "},{"Id":"8616832695","Type":"PullRequestEvent","CreatedAt":"2018-11-20T02:09:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33617","RelatedDescription":"Opened pull request \"Update BuildTools, CoreClr to preview1-03420-01, preview-27120-01, respectively (master)\" (#33617) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8617182031","Type":"PullRequestEvent","CreatedAt":"2018-11-20T04:00:07","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31261","RelatedDescription":"Merged pull request \"Merge dev16.0.x-vs-deps to master-vs-deps\" (#31261) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0.x-vs-deps\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8617124309","Type":"PullRequestEvent","CreatedAt":"2018-11-20T03:40:14","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/28488","RelatedDescription":"Closed pull request \"make IOptionService to use AsyncServiceProvider\" (#28488) at dotnet/roslyn","RelatedBody":"for now, they still run on UI thread. but uses GetServiceAsync.\r\n\r\nnative service will take some time to be free-thread service\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8615513193","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:47:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6595","RelatedDescription":"Merged pull request \"Optimize when building retail shared framework\" (#6595) at dotnet/corert","RelatedBody":"Fixes the CI failure in my weekend project (#6557)."},{"Id":"8614288214","Type":"PullRequestEvent","CreatedAt":"2018-11-19T17:04:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6593","RelatedDescription":"Merged pull request \"[CppCodeGen] Support thread statics\" (#6593) at dotnet/corert","RelatedBody":"This patch fixes https://github.com/dotnet/corert/issues/6406"},{"Id":"8614288195","Type":"IssuesEvent","CreatedAt":"2018-11-19T17:04:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6406","RelatedDescription":"Closed issue \"[CppCodeGen] Thread statics don't work\" (#6406) at dotnet/corert","RelatedBody":"Following example produces incorrect output:\r\n```cs\r\nusing System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace Hello\r\n{\r\n    internal class Program\r\n    {\r\n        [ThreadStatic]\r\n        static int value;\r\n\r\n        static void M()\r\n        {\r\n            value++;\r\n            Console.WriteLine(\"T1: \" + value);\r\n        }\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            value = 25;\r\n\r\n            var t = new Thread(new ThreadStart(Program.M));\r\n            t.Start();\r\n            t.Join();\r\n\r\n            Console.WriteLine(\"Main Thread : \" + value);\r\n        }\r\n    }\r\n}\r\n```\r\n```\r\n$ ./Hello\r\nT1: 26\r\nAborted (core dumped)\r\n```\r\nExpected output:\r\n```\r\nT1: 1\r\nMain Thread : 25\r\n```\r\nAbort occurs due to multithreading https://github.com/dotnet/corert/issues/6405"},{"Id":"8614033761","Type":"PullRequestEvent","CreatedAt":"2018-11-19T16:26:59","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6595","RelatedDescription":"Opened pull request \"Optimize when building retail shared framework\" (#6595) at dotnet/corert","RelatedBody":"Fixes the CI failure in my weekend project (#6557)."},{"Id":"8612661763","Type":"PullRequestEvent","CreatedAt":"2018-11-19T13:03:13","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6594","RelatedDescription":"Merged pull request \"[CppCodeGen] Add support for Activator.DefaultConstructorOf<T> intrinsic\" (#6594) at dotnet/corert","RelatedBody":"This patch fixes https://github.com/dotnet/corert/issues/6403\r\n\r\nFollowing examples works fine with this changes:\r\n```cs\r\nusing System;\r\n\r\nnamespace Hello\r\n{\r\n    internal class Program\r\n    {\r\n        public class A\r\n        {\r\n           public static void M<T>() where T : new()\r\n           {\r\n               System.Console.WriteLine(\"Instance \" + new T());\r\n           }\r\n        }\r\n\r\n        public class B\r\n        {\r\n            public B()\r\n            {\r\n                System.Console.WriteLine(\"B ctor\");\r\n            }\r\n        }\r\n\r\n        public struct C\r\n        {\r\n\r\n        }\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            A.M<B>();\r\n            A.M<C>();\r\n        }\r\n    }\r\n}\r\n```\r\n```\r\n$ Hello\r\nB ctor\r\nInstance Hello.Program+B\r\nInstance Hello.Program+C\r\n```\r\n"},{"Id":"8612661739","Type":"IssuesEvent","CreatedAt":"2018-11-19T13:03:13","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6403","RelatedDescription":"Closed issue \"[CppCodeGen] Template instantiation in generic methods doesn't work\" (#6403) at dotnet/corert","RelatedBody":"Following example crashes in cpp codegen mode:\r\n```cs\r\nusing System;\r\n\r\nnamespace Hello\r\n{\r\n    internal class Program\r\n    {\r\n        public class A\r\n        {\r\n           public static void M<T>() where T : new()\r\n           {\r\n               System.Console.WriteLine(\"Instance \" + new T());\r\n           }\r\n        }\r\n\r\n        public class B\r\n        {\r\n\r\n        }\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            A.M<B>();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\ngdb --args /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/bin/Debug/x64/native/Hello \r\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n<http://www.gnu.org/software/gdb/documentation/>.\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\nReading symbols from /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/bin/Debug/x64/native/Hello...done.\r\n(gdb) r\r\nStarting program: /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/bin/Debug/x64/native/Hello \r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n[New Thread 0x7fffdeb41700 (LWP 9285)]\r\n\r\nThread 1 \"Hello\" received signal SIGSEGV, Segmentation fault.\r\nSystem_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n45\t                return CommonRuntimeTypes.Object.Assembly;\r\n(gdb) bt\r\n#0  System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#1  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#2  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#3  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#4  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#5  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n...\r\n(gdb) r\r\nThe program being debugged has been started already.\r\nStart it from the beginning? (y or n) y\r\nStarting program: /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/bin/Debug/x64/native/Hello \r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n[New Thread 0x7fffdeb41700 (LWP 9292)]\r\n\r\nThread 1 \"Hello\" hit Breakpoint 1, System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb49260)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:44\r\n44\t            {\r\n(gdb) c\r\nContinuing.\r\n\r\nThread 1 \"Hello\" hit Breakpoint 1, System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:44\r\n44\t            {\r\n(gdb) \r\nContinuing.\r\n\r\nThread 1 \"Hello\" hit Breakpoint 1, System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:44\r\n44\t            {\r\n(gdb) \r\nContinuing.\r\n\r\nThread 1 \"Hello\" hit Breakpoint 1, System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:44\r\n44\t            {\r\n(gdb) \r\nContinuing.\r\n\r\nThread 1 \"Hello\" hit Breakpoint 1, System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:44\r\n44\t            {\r\n(gdb) \r\nContinuing.\r\n\r\nThread 1 \"Hello\" hit Breakpoint 1, System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:44\r\n44\t            {\r\n(gdb) bt\r\n#0  System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:44\r\n#1  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#2  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#3  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#4  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb4ca78)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#5  0x00000000005cb74c in System_Private_Reflection_Core::System::Reflection::Runtime::TypeInfos::RuntimeBlockedTypeInfo::get_Assembly (___this=0x7fffdeb49260)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.Reflection.Core/src/System/Reflection/Runtime/TypeInfos/RuntimeBlockedTypeInfo.cs:45\r\n#6  0x0000000000922661 in System_Private_CoreLib::System::Resources::ResourceManager::_ctor_3 (___this=0x7fffdeb4ba40, resourceSource=0x7fffdeb49260)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.CoreLib/src/System/Resources/ResourceManager.cs:361\r\n#7  0x00000000008f36b1 in System_Private_CoreLib::System::SR::get_ResourceManager () at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/Common/src/System/SR.cs:24\r\n#8  0x00000000008ce11b in System_Private_CoreLib::System::SR::InternalGetResourceString (key=0x7fffdeb486c8) at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/Common/src/System/SR.cs:119\r\n#9  0x000000000089922a in System_Private_CoreLib::System::SR::GetResourceString_0 (resourceKey=0x7fffdeb486c8, defaultString=0x7fffdeb48710)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/Common/src/System/SR.cs:54\r\n#10 0x00000000008962ce in System_Private_CoreLib::System::SR::get_Arg_NotSupportedException ()\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/bin/obj/Linux.x64.Debug/System.Private.CoreLib/SR.cs:2959\r\n#11 0x0000000000890e59 in System_Private_CoreLib::System::NotSupportedException::_ctor (___this=0x7fffdeb48670)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.CoreLib/shared/System/NotSupportedException.cs:23\r\n#12 0x00000000008e0c35 in System_Private_CoreLib::System::Activator::DefaultConstructorOf_A__Hello_Hello_Program_B_V_ ()\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.CoreLib/src/System/Activator.cs:106\r\n#13 0x00000000008d5406 in System_Private_CoreLib::System::Activator::CreateInstance_A__Hello_Hello_Program_B_V_ ()\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/System.Private.CoreLib/src/System/Activator.cs:70\r\n#14 0x0000000000897aa0 in Hello::Hello::Program_A::M_A__Hello_Hello_Program_B_V_ () at /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/Hello.cs:17\r\n#15 0x0000000000890ca1 in Hello::Hello::Program::Main (args=0x7fffdeb48618) at /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/Hello.cs:28\r\n#16 0x0000000000875490 in Hello::_Module_::MainMethodWrapper (_a0=0x7fffdeb48618) at /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/obj/Debug/x64/native/Hello.cpp:16707566\r\n#17 0x0000000000875082 in Hello::_Module_::StartupCodeMain (_a0=1, _a1=140737488345864)\r\n    at /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/obj/Debug/x64/native/Hello.cpp:16707566\r\n#18 0x00000000008754fb in __managed__Main (_a0=1, _a1=140737488345864) at /media/kbaladurin/data/dotnet/forked/corert_1/corert/tests/src/Simple/Hello/obj/Debug/x64/native/Hello.cpp:16707569\r\n#19 0x0000000000e6f9bf in main (argc=1, argv=0x7fffffffdb08) at /media/kbaladurin/data/dotnet/forked/corert_1/corert/src/Native/Bootstrap/main.cpp:376\r\n```\r\nSeems like `NotSupportedException` occurs and it leads to infinite recursion."},{"Id":"8611905443","Type":"PullRequestEvent","CreatedAt":"2018-11-19T10:42:25","Actor":"kbaladurin","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6594","RelatedDescription":"Opened pull request \"[CppCodeGen] Add support for Activator.DefaultConstructorOf<T> intrinsic\" (#6594) at dotnet/corert","RelatedBody":"This patch fixes https://github.com/dotnet/corert/issues/6403\r\n\r\nFollowing examples works fine with this changes:\r\n```cs\r\nusing System;\r\n\r\nnamespace Hello\r\n{\r\n    internal class Program\r\n    {\r\n        public class A\r\n        {\r\n           public static void M<T>() where T : new()\r\n           {\r\n               System.Console.WriteLine(\"Instance \" + new T());\r\n           }\r\n        }\r\n\r\n        public class B\r\n        {\r\n            public B()\r\n            {\r\n                System.Console.WriteLine(\"B ctor\");\r\n            }\r\n        }\r\n\r\n        public struct C\r\n        {\r\n\r\n        }\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            A.M<B>();\r\n            A.M<C>();\r\n        }\r\n    }\r\n}\r\n```\r\n```\r\n$ Hello\r\nB ctor\r\nInstance Hello.Program+B\r\nInstance Hello.Program+C\r\n```\r\n"},{"Id":"8611399617","Type":"PullRequestEvent","CreatedAt":"2018-11-19T09:17:55","Actor":"kbaladurin","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6593","RelatedDescription":"Opened pull request \"[CppCodeGen] Support thread statics\" (#6593) at dotnet/corert","RelatedBody":"This patch fixes https://github.com/dotnet/corert/issues/6406"},{"Id":"8609540888","Type":"PullRequestEvent","CreatedAt":"2018-11-18T22:24:38","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6592","RelatedDescription":"Opened pull request \"WIP wasm: Fix callback to NativeCallable methods\" (#6592) at dotnet/corert","RelatedBody":"Fixes #6580. Previously when making the callback to a NativeCallable function, the wrong PInvoke method was used as described in #6580 .  This change fixes that, and also fixes a problem where the thread state was not being changed from Cooperative->Preemptive->Cooperative on managed->unmanaged->managed Pinvokes.  When calling back from unmanaged to the NativeCallable an asssert is made on the thread being in Preemptive mode, but the change from Cooperative->Preemptive was missing and hence the assert failed.  @morganbr I'm marking this as WIP because I needed to add some C++ function to get a simple test that exercised the callback, so I have this in a cpp file https://github.com/dotnet/corert/compare/master...yowl:callbackfromnative?expand=1#diff-380d7928db22ba701b6239aaf0c6d09c, but I'm not sure how to go about changing the build to get this included.  Do I just make the changes in https://github.com/dotnet/corert/blob/master/src/BuildIntegration/Microsoft.NETCore.Native.targets so that I can `emcc` the bitcode for the cpp and add it to the linker command?\r\n\r\n"},{"Id":"8609507826","Type":"PullRequestEvent","CreatedAt":"2018-11-18T22:06:11","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6590","RelatedDescription":"Merged pull request \"Further CPAOT infra fixes for release mode support\" (#6590) at dotnet/corert","RelatedBody":"1) Pass the proper configuration and architecture to msbuild when\r\nrestoring XUnitTooling so that it gets restored into the proper\r\nfolder - this fixes building the CoreCLR tests in release mode.\r\n\r\n2) Set the 'Optimize' property for Microsoft.NetCore.Native.targets\r\nin CoreCLR test and framework assembly build to actually make a\r\ndifference w.r.t. release codegen by passing '-O' to ILC.\r\n\r\n3) Update comments in the R2R test scripts to indicate we now\r\nsupport per-configuration output folders.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. Top200 tests have approximately the same pass rate in\r\ndebug and release mode (debug reports 6-8 errors, release 8-9 errors\r\nin my local testing).\r\n\r\nFramework assembly compilation in release mode has somewhat worse\r\npass rate, 110 out of the 152 assemblies build amounting to about\r\n72% pass rate."},{"Id":"8609487772","Type":"PullRequestEvent","CreatedAt":"2018-11-18T21:54:57","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6591","RelatedDescription":"Merged pull request \"Fixes to allow non-.NET base class libraries\" (#6591) at dotnet/corert","RelatedBody":"A couple fixes so that we can compile base class libraries that don't look like regular .NET base class libraries. This is for a weekend project, but general purpose enough."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8616686038","Type":"PullRequestEvent","CreatedAt":"2018-11-20T01:26:05","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2681","RelatedDescription":"Merged pull request \"Add back `RunResolvePublishAssemblies` target.\" (#2681) at dotnet/sdk","RelatedBody":"This commit adds the `RunResolvePublishAssemblies` target back as a no-op\r\ntarget.  The Azure Functions SDK relies on this target for making copy local\r\nwork for build.  However, since the 3.0 SDK behaves the same as publish for\r\nbuild copy local, this is no longer necessary.\r\n\r\nAdding the target back will prevent the Azure Functions SDK from breaking.\r\n\r\nFixes dotnet/cli#10363."},{"Id":"8616601646","Type":"IssuesEvent","CreatedAt":"2018-11-20T01:01:06","Actor":"jcouv","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2680","RelatedDescription":"Closed issue \"Roslyn no longer builds if I install .NET Core 3 SDK\" (#2680) at dotnet/sdk","RelatedBody":"I installed a preview of .NET Core  3 (from https://github.com/dotnet/core-sdk/blob/master/README.md#installers-and-binaries ).\r\nWhen I build I get the error below.\r\n\r\nUninstalling it fixes the issue.\r\n\r\n\r\n```C#\r\nD:\\repos\\roslyn>Restore.cmd\r\n…\r\nD:\\repos\\roslyn>msbuild /v:m /m Compilers.sln\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  RunTests -> D:\\repos\\roslyn\\Binaries\\Debug\\Exes\\RunTests\\RunTests.exe\r\n  Microsoft.CodeAnalysis -> D:\\repos\\roslyn\\Binaries\\Debug\\Dlls\\Microsoft.CodeAnalysis\\Microsoft.CodeAnalysis.dll\r\n  CSharpSyntaxGenerator -> D:\\repos\\roslyn\\Binaries\\Debug\\Exes\\CSharpSyntaxGenerator\\CSharpSyntaxGenerator.dll\r\n  CSharpErrorFactsGenerator -> D:\\repos\\roslyn\\Binaries\\Debug\\Exes\\CSharpErrorFactsGenerator\\CSharpErrorFactsGenerator.dll\r\n  VisualBasicErrorFactsGenerator -> D:\\repos\\roslyn\\Binaries\\Debug\\Exes\\VisualBasicErrorFactsGenerator\\VBErrorFactsGenerator.dll\r\n  CompilersBoundTreeGenerator -> D:\\repos\\roslyn\\Binaries\\Debug\\Exes\\CompilersBoundTreeGenerator\\BoundTreeGenerator.dll\r\n  VisualBasicSyntaxGenerator -> D:\\repos\\roslyn\\Binaries\\Debug\\Exes\\VisualBasicSyntaxGenerator\\VBSyntaxGenerator.dll\r\n  Microsoft.Build.Tasks.CodeAnalysis -> D:\\repos\\roslyn\\Binaries\\Debug\\Dlls\\Microsoft.Build.Tasks.CodeAnalysis\\net472\\Microsoft.Build.Tasks.CodeAnalysis.dll\r\n  Microsoft.CodeAnalysis.CodeStyle -> D:\\repos\\roslyn\\Binaries\\Debug\\Dlls\\Microsoft.CodeAnalysis.CodeStyle\\Microsoft.CodeAnalysis.CodeStyle.dll\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009762\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(220,5): error NETSDK1047: Assets file 'D:\\repos\\roslyn\\Binaries\\Obj\\CompilerBenchmarks\\project.assets.json' doesn't have a target for '.NETCoreApp,Version=v2.1/win-\r\nx64'. Ensure that restore has run and that you have included 'netcoreapp2.1' in the TargetFrameworks for your project. You may also need to include 'win-x64' in your project's RuntimeIdentifiers. [D:\\repos\\roslyn\\src\\Tools\\CompilerBenchmarks\\CompilerBenchmarks.csproj]\r\n  \r\n…\r\n```"},{"Id":"8616541334","Type":"IssuesEvent","CreatedAt":"2018-11-20T00:42:45","Actor":"jkotas","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2682","RelatedDescription":"Opened issue \" NETSDK1061: The project was restored using Microsoft.NETCore.App version 2.1.6, but with current settings, version 2.1.0 would be used instead. \" (#2682) at dotnet/sdk","RelatedBody":"_From @gpresland on November 19, 2018 21:38_\n\nCreating a simple project from scratch and attempting to build it throws multiple errors with SDK 2.1.500.\r\n\r\nCreate a new project with:\r\n\r\n```\r\ndotnet new webapi -o example\r\ncd example\r\ncode\r\n```\r\n\r\nInside Visual Studio Code run:\r\n\r\n```\r\ndotnet publish -c Release -r win10-x64\r\n```\r\n\r\nYou will be spammed with errors such as:\r\n\r\n```\r\n[fail]: OmniSharp.MSBuild.ProjectLoader\r\n        NETSDK1061: The project was restored using Microsoft.NETCore.App version 2.1.6, but with current settings, version 2.1.0 would be used instead. To resolve this issue, make sure the same settings are used for restore and for subsequent operations such as build or publish. Typically this issue can occur if the RuntimeIdentifier property is set during build or publish but not during restore. For more information, see https://aka.ms/dotnet-runtime-patch-selection.\r\n```\n\n_Copied from original issue: dotnet/coreclr#21095_"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":78,"FavoriteCount":40,"RawContent":null}]}},"RunOn":"2018-11-20T05:30:31.5900698Z","RunDurationInMilliseconds":8623}