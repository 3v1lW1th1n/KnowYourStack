{"Data":{"GitHub":{"Issues":[{"Id":"477649386","IsPullRequest":true,"CreatedAt":"2019-08-07T00:24:22","Actor":"SamBent","Number":"1557","RawContent":null,"Title":"WPF controls in a RowVirtualized DataGrid control lose their value after scrolling","State":"open","Body":"Addresses #1541 \r\n\r\nSelector should not change its selection properties, when reacting to being disconnected.","Url":"https://github.com/dotnet/wpf/pull/1557","RelatedDescription":"Open PR \"WPF controls in a RowVirtualized DataGrid control lose their value after scrolling\" (#1557)"},{"Id":"477647966","IsPullRequest":false,"CreatedAt":"2019-08-07T00:18:33","Actor":"nguerrera","Number":"1556","RawContent":null,"Title":"Restore failure on creation of wpflib template","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-013640\r\n Commit:    1d6c76dc2b\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-013640\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-28380-08\r\n  Commit:  c855ac7187\r\n\r\n.NET Core SDKs installed:\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013437 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013640 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19374.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19381.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28380-08 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28380-08 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n* Windows version: (`winver`)\r\n\r\nWindows 10, 1903 RTM\r\n\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n\r\nN/A\r\n \r\n **Problem description:**\r\n\r\nGet an error when running the following to create a new WPF library VB project:\r\n\r\n `dotnet new  wpflib --language VB -o repro`\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nRestore tries to run on Company.ClassLibrary1.csproj, instead of the created repro.vbproj.\r\nThe project doens't exist so it fails.\r\n \r\n```\r\nThe template \"WPF Class library\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on repro\\Company.ClassLibrary1.csproj...\r\nMSBUILD : error MSB1009: Project file does not exist.\r\nSwitch: repro\\Company.ClassLibrary1.csproj\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n```\r\n\r\n **Expected behavior:**\r\n\r\nNo errors from post-creation restore\r\n \r\n **Minimal repro:**\r\n \r\n `dotnet new  wpflib --language VB -o repro`\r\n\r\n@jmarolf @vatsan-madhavan \r\n\r\nFound while trying all the VB templates for something else.\r\n","Url":"https://github.com/dotnet/wpf/issues/1556","RelatedDescription":"Open issue \"Restore failure on creation of wpflib template\" (#1556)"},{"Id":"477647086","IsPullRequest":true,"CreatedAt":"2019-08-07T00:14:35","Actor":"rladuca","Number":"1555","RawContent":null,"Title":"Fix double free in calls to CreateTTFDelta(Ex).","State":"open","Body":"Addresses #1554 \r\n\r\nDuring execution of CreateTTFDeltaEx, the call-chain may re-allocate and move *ppuchDestBuffer.  If this happens and an error condition occurs, we will return the buffer that realloc de-allocated.  Callers may then double-free *ppuchDestBuffer.\r\n\r\nTo fix this, set *ppuchDestBuffer to NULL after it is stored in OutputBufferInfo.puchBuffer.  After this change, the non-error return will set *ppuchDestBuffer to OutputBufferInfo.puchBuffer as always, but the error case will de-allocate OutputBufferInfo.puchBuffer (as was intended) and return NULL in *ppuchDestBuffer.  Callers then cannot double-free the buffer.","Url":"https://github.com/dotnet/wpf/pull/1555","RelatedDescription":"Open PR \"Fix double free in calls to CreateTTFDelta(Ex).\" (#1555)"},{"Id":"477645438","IsPullRequest":false,"CreatedAt":"2019-08-07T00:06:56","Actor":"rladuca","Number":"1554","RawContent":null,"Title":"WPF XpsSerialization crashes intermittently caused by double free","State":"open","Body":"This is a port of a .NET Framework servicing bug:  https://devdiv.visualstudio.com/DevDiv/_workitems/edit/961349\n\nDuring execution of CreateTTFDeltaEx, the call-chain may re-allocate and move *ppuchDestBuffer.  If this happens and an error condition occurs, we will return the buffer that realloc de-allocated.  Callers may then double-free *ppuchDestBuffer.\n\nTo fix this, set *ppuchDestBuffer to NULL after it is stored in OutputBufferInfo.puchBuffer.  After this change, the non-error return will set *ppuchDestBuffer to OutputBufferInfo.puchBuffer as always, but the error case will de-allocate OutputBufferInfo.puchBuffer (as was intended) and return NULL in *ppuchDestBuffer.  Callers then cannot double-free the buffer.\n\n","Url":"https://github.com/dotnet/wpf/issues/1554","RelatedDescription":"Open issue \"WPF XpsSerialization crashes intermittently caused by double free\" (#1554)"},{"Id":"477633888","IsPullRequest":true,"CreatedAt":"2019-08-06T23:14:47","Actor":"SamBent","Number":"1553","RawContent":null,"Title":"Dev/sambent/speller1540","State":"open","Body":"Addresses #1540 \r\n\r\nEnsure that each spell-checking task makes progress before stopping for a timeout.","Url":"https://github.com/dotnet/wpf/pull/1553","RelatedDescription":"Open PR \"Dev/sambent/speller1540\" (#1553)"},{"Id":"477619806","IsPullRequest":false,"CreatedAt":"2019-08-06T22:20:45","Actor":"vatsan-madhavan","Number":"1552","RawContent":null,"Title":"Theme assemblies cannot be referenced from XAML in latest SDK","State":"open","Body":"This is related to #765, which primarily deals with the inability to reference theme assemblies for consumption in C#/VB etc. code. \r\n\r\nIn recent preview8 builds, XAML like this no longer builds because the WPF theme assembles are no longer referenced by default by `Microsoft.WindowsDesktop`.\r\n\r\n```XAML\r\n... xmlns:theme=\"clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero\"\r\n\r\n<theme:SystemDropShadowChrome>\r\n       <HeaderedContentControl Padding=\"10\" Foreground=\"#CCFFFFFF\">\r\n              <HeaderedContentControl.Header>\r\n\r\n```\r\n\r\nGiven there is no way to reference these directly at build-time,  the theme assemblies are not complete unusable. \r\n\r\nThis change was made by https://github.com/dotnet/core-setup/issues/7218, which was done in due to a miscommunication between the WPF and the SDK teams. We are working together to undo this change for .NET Core 3.0. \r\n\r\nAlso related: https://github.com/dotnet/sdk/issues/3265\r\nThis issue tracks work in dotnet/sdk: https://github.com/dotnet/sdk/issues/3512","Url":"https://github.com/dotnet/wpf/issues/1552","RelatedDescription":"Open issue \"Theme assemblies cannot be referenced from XAML in latest SDK\" (#1552)"},{"Id":"477563306","IsPullRequest":false,"CreatedAt":"2019-08-06T19:49:44","Actor":"chabiss","Number":"1551","RawContent":null,"Title":"Add support for design time discoverability of default style key.","State":"open","Body":"**Feature request:** add support for design time discoverability of default style key.\r\n**Goal:** VS XAML intellisense to support Copy Style/Template without running app. Mostly for platform controls like Button and 3rd party SDKs like Telerik.\r\n**Details:** when creating WPF Core Custom Control Library project in VS, the project contains following:\r\n  themes/generic.xaml\r\n  <ResourceDictionary . . .>\r\n    <Style TargetType=\"{x:Type local:MyControl}\">\r\n\r\n  MyControl.cs\r\n  public class MyControl : Control\r\n  {\r\n    static MyControl()\r\n    {\r\n        DefaultStyleKeyProperty.OverrideMetadata(typeof(MyControl), new FrameworkPropertyMetadata(typeof(MyControl)));\r\n    }\r\n  }\r\n\r\nThis is not design time friendly as we cannot find default style key via Roslyn INamedTypeSymbol for MyControl. One way to fix it is to add DefaultStyleKeyAttribute, e.g.\r\n  [DefaultStyleKey(typeof(MyControl))]\r\n  public class MyControl : Control\r\n\r\nNote that VS project and item templates should be updated to DefaultStyleKeyAttribute.\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1551","RelatedDescription":"Open issue \"Add support for design time discoverability of default style key.\" (#1551)"},{"Id":"477543477","IsPullRequest":false,"CreatedAt":"2019-08-06T18:59:49","Actor":"matt-entrekin","Number":"1550","RawContent":null,"Title":"Clicking a TreeView item while the tooltip is visible results in System.FormatException: 'Token is not valid.'","State":"open","Body":"* .NET Core Version: 3.0 Preview 7\r\n* Windows version: Windows 10\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nClicking on an item in a TreeView while a tooltip is visible causes an exception to be thrown.\r\n\r\n **Actual behavior:**\r\nSystem.FormatException\r\n  HResult=0x80131537\r\n  Message=Token is not valid.\r\n  Source=PresentationCore\r\n  StackTrace:\r\n   at MS.Internal.Parsers.ParseBrush(String brush, IFormatProvider formatProvider, ITypeDescriptorContext context) in /_/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/Parsers.cs:line 298\r\n   at System.Windows.Media.Brush.Parse(String value, ITypeDescriptorContext context) in /_/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/Brush.cs:line 84\r\n   at System.Windows.Media.BrushConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) in /_/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/Generated/BrushConverter.cs:line 124\r\n   at System.ComponentModel.TypeConverter.ConvertFromInvariantString(String text)\r\n   at Microsoft.VisualStudio.DesignTools.WpfTap.WpfVisualTreeService.TypeServices.PropertyValueHelper.GetValueAsConvertableString(Object value, TypeConverter converter, Type targetType)\r\n\r\n **Expected behavior:**\r\nThe user should be able to click tree items while a tooltip is visible without an exception being thrown.\r\n \r\n **Minimal repro:**\r\n1. Create a .NET Core WPF app with a TreeView that has an item with a tooltip\r\n```xaml\r\n<TreeView>\r\n  <TextBlock Text=\"text\" ToolTip=\"tooltip\"/>\r\n</TreeView>\r\n``` \r\n2. Hover over the item with the tooltip\r\n3. While the tooltip is visible, click on the tree item\r\n","Url":"https://github.com/dotnet/wpf/issues/1550","RelatedDescription":"Open issue \"Clicking a TreeView item while the tooltip is visible results in System.FormatException: 'Token is not valid.'\" (#1550)"},{"Id":"476996121","IsPullRequest":false,"CreatedAt":"2019-08-06T18:45:20","Actor":"SamBent","Number":"1539","RawContent":null,"Title":"Port Editing test fixes from .NET 4.8","State":"closed","Body":"Two changes to Editing tests made recently in .NET 4.8 need to be ported to .NETCore.\n1. \"TripleClick\" tests fail because they rely on the old behavior of Input.SendMouseInput, which implicitly did a mouse-move when the Absolute flag was present.\n2. Speller tests are missing correct version numbers.","Url":"https://github.com/dotnet/wpf/issues/1539","RelatedDescription":"Closed issue \"Port Editing test fixes from .NET 4.8\" (#1539)"},{"Id":"477478691","IsPullRequest":false,"CreatedAt":"2019-08-06T16:28:15","Actor":"AlexChuev","Number":"1549","RawContent":null,"Title":"WPF controls render slower on .NET Core 3 compared to .NET Framework 4.8","State":"open","Body":"* .NET Core 3.0 Preview 7\r\n* Windows version 1809\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**  \r\n According to our performance tests, visual operations take longer to execute in .NET Core 3 compared to .NET Framework 4.8. We were unable to narrow down the issue so far, but it is certainly not connected to the performance issue with the GetCustomAttributes method reported [here](https://github.com/dotnet/wpf/issues/94), since you can see the difference in performance even when all XAML has been parsed (e.g., when scrolling).\r\n \r\n **Minimal repro:**  \r\n You can find a small sample with the Data Grid control here: https://github.com/AlexChuev/NetCorePerformanceTest\r\nIn the sample, it takes about 30% more time to scroll the Data Grid vertically in a .NET Core 3 project compared to an identical .NET Framework 4.8 configuration.","Url":"https://github.com/dotnet/wpf/issues/1549","RelatedDescription":"Open issue \"WPF controls render slower on .NET Core 3 compared to .NET Framework 4.8\" (#1549)"},{"Id":"477368812","IsPullRequest":true,"CreatedAt":"2019-08-06T13:40:00","Actor":"dotnet-maestro[bot]","Number":"1548","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190805.18\r\n- **Date Produced**: 8/5/2019 11:43 PM\r\n- **Commit**: 46e92f2d724c7b5db807eac1092cb095ee46e147\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19405.18\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1548","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1548)"},{"Id":"477367091","IsPullRequest":true,"CreatedAt":"2019-08-06T13:31:40","Actor":"dotnet-maestro[bot]","Number":"1547","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190805.18\r\n- **Date Produced**: 8/5/2019 11:43 PM\r\n- **Commit**: 46e92f2d724c7b5db807eac1092cb095ee46e147\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19405.18\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1547","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1547)"},{"Id":"477341900","IsPullRequest":true,"CreatedAt":"2019-08-06T13:10:27","Actor":"dotnet-maestro[bot]","Number":"1545","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190805.9\r\n- **Date Produced**: 8/6/2019 12:26 AM\r\n- **Commit**: 44ccf0f527de559b07f9ad955a47ec97f03f2146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19405.9\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1545","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1545)"},{"Id":"477342266","IsPullRequest":true,"CreatedAt":"2019-08-06T13:05:16","Actor":"dotnet-maestro[bot]","Number":"1546","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190805.9\r\n- **Date Produced**: 8/6/2019 12:26 AM\r\n- **Commit**: 44ccf0f527de559b07f9ad955a47ec97f03f2146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19405.9\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1546","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1546)"},{"Id":"477113055","IsPullRequest":false,"CreatedAt":"2019-08-06T00:33:16","Actor":"rladuca","Number":"1544","RawContent":null,"Title":"Fix WPF JumpList support and re-enable JumpList tests","State":"open","Body":"The WPF JumpList support broke in Windows 8.1.  This is due to many changes to the shell underneath and the fact that WPF has old versions of Automation proxies that cause us to not be able to find certain items.\r\n\r\nHere are some explanations from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/126798:\r\n\r\n@miguep In case he has any input on this.\r\n```\r\nAfter investigating this issue, it seems that WPF is the one at fault for this, WPF provides some custom out-dated Proxy providers (for standard win32 controls) for UIAutomation to use, this causes UIAutomation to use those providers instead of its more up-to-date defaults (for win32, winforms, WPF), which results in some newer controls (or updated ones) to not be reported when querying UIAutomation.\r\n\r\nIt seems that the easiest solution to this problem would be to remove our call to UiaRegisterProviderCallback, and let UIAutomation use their proxy defaults, I've tested that approach and I've gotten the desired results. The problem is that we need the call to UiaRegisterProviderCallback in order to provide the users with the ability to create their own custom proxy providers.\r\n\r\nThe solution would be to forward the user's custom proxy providers to UIAutomation via IUIAutomationProxyFactory, the problem with this approach is that we need a CUIAutomation object, but creating one of our own does not work, since our stack uses the flat node API, which creates a CUIAutomation object internally, but does not expose it.\r\n\r\nThe other solution would be to re-work all our proxy providers and bring them up-to-date.\r\n\r\nThis issue is caused by the OS call GetWindow, the public call will by default ignore immersive windows (Metro/Universal apps), since the jumplist in Win10 is now a Universal window, all the automation lookups and traversals will ignore it, the only way so far to change this behavior is via the app manifest\r\n\r\n<asmv3:application>\r\n    <asmv3:windowsSettings xmlns=\"http://schemas.microsoft.com/SMI/2011/WindowsSettings\">\r\n      <disableWindowFiltering>true</disableWindowFiltering>\r\n    </asmv3:windowsSettings>\r\n  </asmv3:application>\r\n```","Url":"https://github.com/dotnet/wpf/issues/1544","RelatedDescription":"Open issue \"Fix WPF JumpList support and re-enable JumpList tests\" (#1544)"},{"Id":"477068402","IsPullRequest":false,"CreatedAt":"2019-08-05T21:33:55","Actor":"vsfeedback","Number":"1543","RawContent":null,"Title":"VS 2019 16.2 Hangs when connecting via Remote Desktop","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/661862/vs-2019-162-hangs-when-connecting-via-remote-deskt.html)._\n\n---\nWhen I reconnect to an existing Remote Desktop session on my development machine, the instance of Visual Studio that is already open will hang or become unresponsive. A &quot;Visual Studio is busy&quot; notification will appear after several seconds.\n\nThe development machine is running Visual Studio 2019 16.2 and Windows Server 2012 R2.\n\nI am connecting to the remote via Remote Desktop Connection 10.0.18362.1 on Windows 10.\n\n---\n### Original Comments\n\n#### Fiona Niu[MSFT] on 7/26/2019, 05:16 AM: \n\n<p>Thank you for taking the time to log this issue! Could you please provide more information via the Visual Studio Feedback Tool(Help -&gt; Send Feedback -&gt; Report A Problem)so that we can conduct further research?  The feedback tool  will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace).<br>\nSince this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool:</p>\n<pre><code>• Open Visual Studio Feedback tool.\n \n• Click the banner letting you know that you have problems requesting your attention.\n \n• Click this problem from the list\n\n• Click &quot;View their request and respond&quot; from the problem details banner\n\n• Add a comment, in the Attachments/Record: click Start Recording\n\n• When the Steps Recorder tool appears, perform the steps that reproduce the problem.\n\n• When you're done, choose the Stop Record button.\n \n• Wait a few minutes for Visual Studio to collect and package the information that you recorded.\n\n• Submit. You will be able to see the comment on Developer Community. For security reasons, your files come directly to us and don't appear on Developer Community.\n</code></pre>\n<p>For the full instructions, please see: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info</a> . For information about what data is collected, see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect\">https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect</a></p>\n<p>We look forward to hearing from you!</p>\n\n#### sjeynes on 7/26/2019, 06:09 AM: \n\nI tried recording the steps before, and it said nothing was recorded, even though the problem did occur. I'll give it another try. These are the steps that cause the issue in Visual Studio:<br>1. Open Visual Studio 2019 on the remote server<br>2. Exit the remote session (do not sign out)<br>3. Reconnect to the remote session<br>4. Visual Studio 2019 will consistently be unresponsive in the remote session, even after several minutes<br>This time, I tried the Steps Recorder again, and it became unresponsive after I clicked Stop (screenshot attached). After about 2 minutes, the Steps Recorder said there was an error trying to save the recorded steps.\n#### Fiona Niu[MSFT] on 7/28/2019, 07:41 PM: \n\n<p>Thanks a lot for providing the information. We’re sorry for the issues you’re experiencing. We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 7/30/2019, 06:00 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Visual Studio Feedback System on 7/31/2019, 06:59 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/1543","RelatedDescription":"Open issue \"VS 2019 16.2 Hangs when connecting via Remote Desktop\" (#1543)"},{"Id":"477053849","IsPullRequest":false,"CreatedAt":"2019-08-05T20:54:08","Actor":"SamBent","Number":"1542","RawContent":null,"Title":"Images not drawn by software rendering","State":"open","Body":"(Port of fix in the .NETFx servicing pipeline)\nSoftware rendering fails to draw images (or only partially draws them) when the image position and scaling are too large.  \n\nSoftware rendering does image-processing using integer arithmetic, representing points as \"16.16\" fixed-point numbers (16 bits of integer, 16 bits of fraction).  Thus it cannot deal with quantities whose magnitude exceeds 2^15=32768.   The translation components of the device-to-texture mapping can exceed this limit if the position and scaling of the image are large enough.  For example, the mapping for a 10x10 Image element, sourced to a 500x500 bitmap and positioned 700 pixels from the edge of the enclosing window, has scaling factor 500/10 = 50 and a desired translation of -50*700 = -35000 -- too big.\n\nIn this case the renderer uses the closest available number, -32768, causing it to sample the source bitmap too far to the right.  This produces a result equivalent to painting the image at the maximum \"working\" offset then clipping by the actual position of the Image.  In other words, as the Image moves to the right, the picture stops moving when the maximum offset is reached, and instead gets clipped on its left side until it eventually disappears altogether.\n\nFix:\nUse an adjusted mapping, relative to an \"origin\" point.  When mapping from device to texture, subtract the origin (in regular \"int\" coords), then apply the adjusted 16.16 mapping.  The adjusted mapping's translation components depend on the distance from the origin, rather than from the window-edge, so choosing an origin point that's close to the Image position will avoid the overflow.\n","Url":"https://github.com/dotnet/wpf/issues/1542","RelatedDescription":"Open issue \"Images not drawn by software rendering\" (#1542)"},{"Id":"477014840","IsPullRequest":false,"CreatedAt":"2019-08-05T19:13:58","Actor":"SamBent","Number":"1541","RawContent":null,"Title":"WPF controls in a RowVirtualized DataGrid control lose their value after scrolling","State":"open","Body":"(Port of recent .NETFx servicing fix)\nComboBox (or any Selector) displays the wrong value for SelectedValue (or any selection property) when\n1. ComboBox is declared in a cell template of a DataGrid\n2. Both ItemsSource and SelectedValue are bound to the row's data item via implicit DataContext (as opposed to explicit Source, ElementName, RelativeSource, etc.)\n3. DataGrid row virtualization is enabled.\n4. Item is re-virtualized, then de-virtualized.  E.g. scrolling it out of view, then back in.\n\nRoot cause:\nRe-virtualization causes the item's UI to be disconnected.  This sets DataContext to {DisconnectedItem}, which should set ItemsSource to null and leave SelectedValue unchanged, while removing property-changed listeners and other similar cleanup.  But if ItemsSource happens first, Selector tries to change SelectedValue (to null).   In a DataGrid, this records null as the \"proposed value\" of SelectedValue, (awaiting writing to the data item when the row-edit is committed).   When the item is later de-virtualized, the cell displays the proposed value (null).\n\nFix:  Selector should not change its selection properties, when reacting to being disconnected.","Url":"https://github.com/dotnet/wpf/issues/1541","RelatedDescription":"Open issue \"WPF controls in a RowVirtualized DataGrid control lose their value after scrolling\" (#1541)"},{"Id":"477004358","IsPullRequest":false,"CreatedAt":"2019-08-05T18:46:21","Actor":"SamBent","Number":"1540","RawContent":null,"Title":"Crash inserting text in front of Hyperlink when spelling is enabled","State":"open","Body":"Hard crash (FailFast) when inserting text in front of a Hyperlink in a RichTextBox, when spell-checking is enabled.\n\nThis is a port of a recent servicing fix in .NETFx.","Url":"https://github.com/dotnet/wpf/issues/1540","RelatedDescription":"Open issue \"Crash inserting text in front of Hyperlink when spelling is enabled\" (#1540)"},{"Id":"476845861","IsPullRequest":true,"CreatedAt":"2019-08-05T17:52:32","Actor":"dotnet-maestro[bot]","Number":"1536","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190804.11\r\n- **Date Produced**: 8/4/2019 11:44 PM\r\n- **Commit**: e60b98724b39748b7ceec0bd73f03cfe3ff49db2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19404.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1536","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1536)"},{"Id":"476956011","IsPullRequest":true,"CreatedAt":"2019-08-05T17:01:07","Actor":"dotnet-maestro[bot]","Number":"1538","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.4\r\n- **Date Produced**: 8/5/2019 4:00 PM\r\n- **Commit**: 1d51f96ffdedd2f506d92f18af4d67a17e382f6a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1538","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1538)"},{"Id":"476863552","IsPullRequest":true,"CreatedAt":"2019-08-05T14:06:14","Actor":"dotnet-maestro[bot]","Number":"1537","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.3\r\n- **Date Produced**: 8/5/2019 12:53 PM\r\n- **Commit**: 5b18e1741342e3f9b89d69f8bfafe224da419c9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1537","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1537)"},{"Id":"476845824","IsPullRequest":true,"CreatedAt":"2019-08-05T14:00:25","Actor":"dotnet-maestro[bot]","Number":"1535","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190804.11\r\n- **Date Produced**: 8/4/2019 11:44 PM\r\n- **Commit**: e60b98724b39748b7ceec0bd73f03cfe3ff49db2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19404.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1535","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1535)"},{"Id":"476822944","IsPullRequest":true,"CreatedAt":"2019-08-05T12:28:04","Actor":"dotnet-maestro[bot]","Number":"1534","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1534","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1534)"},{"Id":"476811946","IsPullRequest":true,"CreatedAt":"2019-08-05T12:16:14","Actor":"dotnet-maestro[bot]","Number":"1533","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.2\r\n- **Date Produced**: 8/5/2019 10:48 AM\r\n- **Commit**: f477b2a5e3ae17a4524339b6a81ba66f6ba60411\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1533","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1533)"},{"Id":"476783712","IsPullRequest":true,"CreatedAt":"2019-08-05T11:16:23","Actor":"dotnet-maestro[bot]","Number":"1532","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190805.1\r\n- **Date Produced**: 8/5/2019 9:52 AM\r\n- **Commit**: f2221a740df596fc526f6d9dfcfb7f5947b1f473\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19405.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1532","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1532)"},{"Id":"476590123","IsPullRequest":false,"CreatedAt":"2019-08-04T21:07:08","Actor":"rogalmic","Number":"1531","RawContent":null,"Title":"Generate xml documentation files for public WPF api","State":"closed","Body":"Would there be a possibity to include autogenerated C# xml documentation in github releases?\r\n\r\n![image](https://user-images.githubusercontent.com/23117003/62428759-ac99f080-b705-11e9-9998-38c9dae160cc.png)\r\n\r\nIt would be good to have those for public part of WPF API...","Url":"https://github.com/dotnet/wpf/issues/1531","RelatedDescription":"Closed issue \"Generate xml documentation files for public WPF api\" (#1531)"},{"Id":"476554774","IsPullRequest":true,"CreatedAt":"2019-08-04T14:01:06","Actor":"dotnet-maestro[bot]","Number":"1530","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 1:01 PM\r\n- **Commit**: 75f26eb8c2f1ab43dd0b202c2c54023b38856eec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19404.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1530","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1530)"},{"Id":"476551303","IsPullRequest":true,"CreatedAt":"2019-08-04T13:53:18","Actor":"dotnet-maestro[bot]","Number":"1529","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190803.11\r\n- **Date Produced**: 8/3/2019 10:00 PM\r\n- **Commit**: 3148ef691f39dba670f9e4767f21abf31c40541c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19403.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1529","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1529)"},{"Id":"476551237","IsPullRequest":true,"CreatedAt":"2019-08-04T13:42:33","Actor":"dotnet-maestro[bot]","Number":"1528","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190803.11\r\n- **Date Produced**: 8/3/2019 10:00 PM\r\n- **Commit**: 3148ef691f39dba670f9e4767f21abf31c40541c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19403.11\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1528","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1528)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-07T05:30:56.1467909Z","RunDurationInMilliseconds":885}