{"Data":{"GitHub":{"Issues":[{"Id":"573735309","IsPullRequest":true,"CreatedAt":"2020-03-03T04:14:19","Actor":"RussKie","Number":"2932","RawContent":null,"Title":"fix: Restore missing TF for `System.Windows.Forms.HighDpiMode`","State":"closed","Body":"Resolves #2925\r\n\r\n`System.Windows.Forms.HighDpiMode` was accidentally placed under `Internal` namespace, which caused a missing type-forward decoration.\r\nThis resulted in users receiving the following error when attempting to roll forward from .NET Core 3.x to .NET 5:\r\n\r\n```\r\nSystem.MissingMethodException : Method not found: 'Boolean System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode)'.\r\n```\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Move the type into the correct location and add the missing `TypeForward` decoration.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- User can now roll forward from .NET Core 3.x and use `Boolean System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode)`\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology\r\n* [Use the repro app](https://github.com/RussKie/Test-TypeForwards/commit/c5f76dca248dee7fd69d95fc9b5af0f76c32578e) or generate a new Windows Forms app targeting .NET Core 3.0 (or 3.1) and set it to rollforward:\r\n  ```json\r\n  {\r\n    \"sdk\": {\r\n      \"rollForward\": \"major\"\r\n    }\r\n  }\r\n  ```\r\n* Ensure no .NET Core 3.x runtime is installed. Best to run a VM with only .NET5 Preview1 installed\r\n* Run the app, observe the failure:\r\n  ![image](https://user-images.githubusercontent.com/4403806/75741880-12b02a00-5d60-11ea-9365-2042177f0eff.png)\r\n* Build the current commit with `pack` option:\r\n  ```powershell\r\n  PS> .\\build.ps1 -pack\r\n  ```\r\n* Copy and replace `System.Windows.Forms.dll` and `System.Windows.Forms.Primitives.dll`\r\n\t- from .\\artifacts\\packages\\Debug\\NonShipping\\Microsoft.Private.Winforms.5.0.0-dev.nupkg\\lib\\netcoreapp5.0 --> C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\5.0.0-preview.2.20119.5\r\n\t- from .\\artifacts\\packages\\Debug\\NonShipping\\Microsoft.Private.Winforms.5.0.0-dev.nupkg\\ref\\netcoreapp5.0 --> C:\\Program Files\\dotnet\\packs\\Microsoft.WindowsDesktop.App.Ref\\5.0.0-preview.2.20119.5\\ref\\netcoreapp5.0\r\n* Re-run the app, observe the app start\r\n  ![image](https://user-images.githubusercontent.com/4403806/75742168-eb0d9180-5d60-11ea-9b79-ad4ce33344e1.png)\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2932)","Url":"https://github.com/dotnet/winforms/pull/2932","RelatedDescription":"Closed or merged PR \"fix: Restore missing TF for `System.Windows.Forms.HighDpiMode`\" (#2932)"},{"Id":"572766872","IsPullRequest":false,"CreatedAt":"2020-03-03T04:14:19","Actor":"DotNetAppCompatFeiWang","Number":"2925","RawContent":null,"Title":"System.MissingMethodException at System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode) in GreenShot unit tests","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.1.20125.9\r\n Commit:    12e88ed2e5\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.1.20125.9\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.1.20120.5\r\n  Commit:  3c523a6a7a\r\n\r\n.NET Core SDKs installed:\r\n  5.0.100-preview.1.20125.9 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0-preview.1.20124.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.1.20120.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.1.20122.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nRepro steps:\r\n\r\nOn the repo machine (could be found at https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1075435)\r\n\r\n1) On CMD, go to C:\\Repro\\GreenshotTest09\r\n2)run command \"dotnet vstest Greenshot.Tests.dll\"\r\n\r\nExpected Result:\r\n\r\nTests should pass\r\n\r\nActual Result:\r\n\r\nTotal tests: 21\r\n     Passed: 16\r\n     Failed: 5\r\n\r\nFindings :\r\n\r\nTests return this exception :\r\n\r\n   System.MissingMethodException : Method not found: 'Boolean System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode)'.\r\n\r\nWhen we create/build winforms app with .net core sdk 3.1 and run it against .net core 5.0, we get this issue. It is fine when we run against 3.1.\r\n\r\nThis issue does not repro if we build the same with code .net core 5.0 SDK.\r\n\r\nThis line in program.cs causes this issue : \r\n\r\nApplication.SetHighDpiMode(HighDpiMode.SystemAware);\r\n\r\n**Expected behavior:**\r\nAll unites passed.\r\n\r\nApp Source on GitHub link: https://github.com/greenshot/greenshot\r\n\r\n**Minimal repro:**\r\n1. create winforms app ===> dotnet new winforms on machine has .NET Core 3.1 SDK installed.\r\n2. dotnet build\r\n3. Run the app only have .NET 5 installed.\r\n\r\n@dotnet-actwx-bot  FYI","Url":"https://github.com/dotnet/winforms/issues/2925","RelatedDescription":"Closed issue \"System.MissingMethodException at System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode) in GreenShot unit tests\" (#2925)"},{"Id":"573958668","IsPullRequest":true,"CreatedAt":"2020-03-02T13:21:34","Actor":"dotnet-maestro[bot]","Number":"2934","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200301.1\r\n- **Date Produced**: 3/1/2020 2:16 PM\r\n- **Commit**: 8ccad075bbb0db445e03eed0a6073d27bdd4f31a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20151.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2934)","Url":"https://github.com/dotnet/winforms/pull/2934","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2934)"},{"Id":"573748064","IsPullRequest":false,"CreatedAt":"2020-03-02T06:26:45","Actor":"Marie-Shi","Number":"2933","RawContent":null,"Title":"[Accessibility]Narrator cannot announce localized control type of TextBox/MaskedTextBox","State":"open","Body":"* .NET Core Version: \r\n.Net Core 5.0.100-preview.2.20151.5 from 5.0 master branch + VISX inserted in the Dev16 16.6.0 [29901.3.master]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info:**\r\n1.\tThis issue can reproduce on TextBox/MaskedTextBox/TextBox with MultiLine=true.\r\n2.\tThis issue can also reproduce on .Net Core 3.1 release branch.\r\n\r\n**Steps to reproduce:**\r\n1.\tOpen the attached app “Narrator_Not_Annouce_control_type.zip” in VS.\r\n[Narrator_Not_Annouce_control_type.zip](https://github.com/dotnet/winforms/files/4273713/Narrator_Not_Annouce_control_type.zip)\r\n\r\n2.\tBuild and run this application. \r\n3.\tStart Narrator and focus on TextBox, observe Narrator behavior.\r\n\r\n**Actual behavior:**\r\nNarrator cannot announce localized control type of TextBox, it just announces “edit”, missing “TextBox”.\r\n![Actual](https://user-images.githubusercontent.com/45864017/75650624-6738a400-5c91-11ea-9e7e-83b9848fb1b7.png)\r\n\r\n**Expected behavior:**\r\nNarrator should announce localized control type of TextBox. The behavior should be like below:\r\n![Expected](https://user-images.githubusercontent.com/45864017/75650725-c0a0d300-5c91-11ea-94dd-b9d535de8d38.png)","Url":"https://github.com/dotnet/winforms/issues/2933","RelatedDescription":"Open issue \"[Accessibility]Narrator cannot announce localized control type of TextBox/MaskedTextBox\" (#2933)"},{"Id":"573731841","IsPullRequest":false,"CreatedAt":"2020-03-02T05:39:30","Actor":"dehghani-mehdi","Number":"2931","RawContent":null,"Title":"Typo in winforms designer doc","State":"open","Body":"At [winforms-designer](https://github.com/dotnet/winforms/blob/master/Documentation/winforms-designer.md#option-1)\r\n\r\nDoc says:\r\n\r\n```\r\n<TargetFrameworks>net472;netcoreapp5.0</TargetFrameworks>\r\n```\r\n\r\nBut in picture below it, the value of `TargetFrameworks` is `net472;netcoreapp3.0`.","Url":"https://github.com/dotnet/winforms/issues/2931","RelatedDescription":"Open issue \"Typo in winforms designer doc\" (#2931)"},{"Id":"573563458","IsPullRequest":true,"CreatedAt":"2020-03-01T15:14:43","Actor":"gpetrou","Number":"2930","RawContent":null,"Title":"Add DTN enum to Interop ComCtl32","State":"open","Body":"## Proposed changes\r\n\r\n- Add DTN enum to Interop ComCtl32.\r\n- Remove DTN constants and replace their usages with the above enum values.\r\n- Remove usused LPSTR_TEXTCALLBACK, STATUS_PENDING, FRERR_BUFFERLENGTHZERO and HDS_FULLDRAG constants.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2930)","Url":"https://github.com/dotnet/winforms/pull/2930","RelatedDescription":"Open PR \"Add DTN enum to Interop ComCtl32\" (#2930)"},{"Id":"573560104","IsPullRequest":true,"CreatedAt":"2020-03-01T14:53:24","Actor":"gpetrou","Number":"2929","RawContent":null,"Title":"Add NIN enum to Interop Shell32","State":"open","Body":"## Proposed changes\r\n\r\n- Add NIN enum to Interop Shell32.\r\n- Remove NIN constants and replace their usages with the above enum values.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2929)","Url":"https://github.com/dotnet/winforms/pull/2929","RelatedDescription":"Open PR \"Add NIN enum to Interop Shell32\" (#2929)"},{"Id":"573542714","IsPullRequest":true,"CreatedAt":"2020-03-01T13:21:21","Actor":"dotnet-maestro[bot]","Number":"2928","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200229.1\r\n- **Date Produced**: 2/29/2020 2:10 PM\r\n- **Commit**: 86e54fb5076d46a6f959f0329d53c1c72e2280df\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20129.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2928)","Url":"https://github.com/dotnet/winforms/pull/2928","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2928)"},{"Id":"573290306","IsPullRequest":true,"CreatedAt":"2020-02-29T13:16:22","Actor":"dotnet-maestro[bot]","Number":"2927","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200228.3\r\n- **Date Produced**: 2/29/2020 12:26 AM\r\n- **Commit**: 5966c5dd9deb5aca8fd8183eec454cf6cf864d14\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20128.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2927)","Url":"https://github.com/dotnet/winforms/pull/2927","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2927)"},{"Id":"572988125","IsPullRequest":false,"CreatedAt":"2020-02-28T20:29:39","Actor":"weltkante","Number":"2926","RawContent":null,"Title":"Tests always run x64 in VS (even when selecting x86)","State":"open","Body":"### Problem ###\r\n\r\nPR #2851 will introduce tests specific to x86/x64 environments but winforms build infrastructure is broken and always runs tests in x64 when running within Visual Studio, even when explicitly selecting x86 in the VS test explorer toolbar.\r\n\r\n### Workaround ###\r\nrun tests from console via `.\\build.cmd -platform x86 -test`\r\n\r\n### Root Cause / Fix ###\r\n* this was a bug in VS which has been fixed in 16.4\r\n* you [need to update](https://github.com/xunit/visualstudio.xunit/issues/148#issuecomment-579156956) the nuget package `Microsoft.Net.Test.Sdk` to version 16.4 or newer\r\n  * currently this package is pulled in by the SDK in version 16.1.1, so you either need to update the SDK or override the nuget package import\r\n* even when importing the package with the fix you'll still run into an error because winforms only installs the x64 sdk when running the build scripts; you also need to install the x86 sdk or VS complains\r\n  * according to [this log](https://github.com/dotnet/aspnetcore/issues/16664#issuecomment-553601518) it looks like aspnetcore already is able to install both sdks, so you should be able to do something similar\r\n\r\n### Proof of Concept ###\r\n* edit `System.Windows.Forms.Primitives.Tests.csproj` and add an explicit package reference `<PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.4\" />`\r\n* download and install the [x86 sdk](https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.0-alpha1-19514/dotnet-sdk-5.0.0-alpha1-19514-win-x64.exe) manually\r\n* observe that you can now run both `PRINTDLGW_32_ensure_layout` and `PRINTDLGW_64_ensure_layout` from PR #2851 inside VS (you can switch the bitness of the test runner in the test explorer toolbar)","Url":"https://github.com/dotnet/winforms/issues/2926","RelatedDescription":"Open issue \"Tests always run x64 in VS (even when selecting x86)\" (#2926)"},{"Id":"572741671","IsPullRequest":true,"CreatedAt":"2020-02-28T13:16:24","Actor":"dotnet-maestro[bot]","Number":"2924","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200227.9\r\n- **Date Produced**: 2/27/2020 11:49 PM\r\n- **Commit**: 9c66925c608f3c0ee3e1f66c05943865b64590e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20127.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2924)","Url":"https://github.com/dotnet/winforms/pull/2924","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2924)"},{"Id":"572561868","IsPullRequest":true,"CreatedAt":"2020-02-28T06:46:55","Actor":"RussKie","Number":"2923","RawContent":null,"Title":"fix: Fail roll forward .NET Core 3.x -> .NET 5.0","State":"open","Body":"As part of consolidation initiative (refer to #2781) we have merged System.Windows.Forms.Design.Editors.dll into System.Windows.Forms.Design.dll.\r\n\r\nHowever doing so we broke roll-forward upgrades for any app depending on types declared in System.Windows.Forms.Design.Editors.dll.\r\n\r\n\r\n\r\nResolves #2921.\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Create a facade assembly that forwards types from original assembly.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers can roll forward from .NET Core 3.x to .NET 5.0\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Test methodology\r\n* [Use the repro app](https://github.com/RussKie/Test-TypeForwards/commit/c5f76dca248dee7fd69d95fc9b5af0f76c32578e) or generate a new Windows Forms app targeting .NET Core 3.0 (or 3.1) and set it to rollforward:\r\n  ```json\r\n  {\r\n    \"sdk\": {\r\n      \"rollForward\": \"major\"\r\n    }\r\n  }\r\n  ```\r\n* Add the following line to `Form1`:\r\n  ```cs\r\n  AnchorEditor editor = new AnchorEditor();\r\n  ```\r\n* Ensure no .NET Core 3.x runtime is installed. Best to run a VM with only .NET5 Preview1 installed\r\n* Run the app, observe the failure:\r\n  ![image](https://user-images.githubusercontent.com/4403806/75743892-ba305b00-5d66-11ea-9601-d91ea8bb78de.png)\r\n* Build the current commit with `pack` option:\r\n  ```powershell\r\n  PS> .\\build.ps1 -pack\r\n  ```\r\n* Copy `System.Windows.Forms.Design.Editors.dll`\r\n\t- from .\\artifacts\\packages\\Debug\\NonShipping\\Microsoft.Private.Winforms.5.0.0-dev.nupkg\\lib\\netcoreapp5.0 --> C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\5.0.0-preview.2.20119.5\r\n\t- from .\\artifacts\\packages\\Debug\\NonShipping\\Microsoft.Private.Winforms.5.0.0-dev.nupkg\\ref\\netcoreapp5.0 --> C:\\Program Files\\dotnet\\packs\\Microsoft.WindowsDesktop.App.Ref\\5.0.0-preview.2.20119.5\\ref\\netcoreapp5.0\r\n* Update the WindowsDesktop manifest to include the new assembly:\r\n  ```diff\r\n  --- a/C:/Program Files/dotnet/shared/Microsoft.WindowsDesktop.App/5.0.0-preview.2.20119.5/Microsoft.WindowsDesktop.App.runtimeconfig.json\r\n  +++ b/C:/Program Files/dotnet/shared/Microsoft.WindowsDesktop.App/5.0.0-preview.2.20119.5/Microsoft.WindowsDesktop.App.runtimeconfig.json\r\n            \"runtimes/win-x64/lib/netcoreapp5.0/System.Windows.Forms.Design.dll\": {\r\n              \"assemblyVersion\": \"5.0.0.0\",\r\n              \"fileVersion\": \"5.0.20.11805\"\r\n            },\r\n  +         \"runtimes/win-x64/lib/netcoreapp5.0/System.Windows.Forms.Design.Editors.dll\": {\r\n  +           \"assemblyVersion\": \"5.0.0.0\",\r\n  +           \"fileVersion\": \"5.0.20.11805\"\r\n  +         },\r\n            \"runtimes/win-x64/lib/netcoreapp5.0/System.Windows.Forms.Primitives.dll\": {\r\n              \"assemblyVersion\": \"5.0.0.0\",\r\n              \"fileVersion\": \"5.0.20.11805\"\r\n            },\r\n  ```\r\n* Re-run the app, observe the app start\r\n  ![image](https://user-images.githubusercontent.com/4403806/75742168-eb0d9180-5d60-11ea-9b79-ad4ce33344e1.png)\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2923)","Url":"https://github.com/dotnet/winforms/pull/2923","RelatedDescription":"Open PR \"fix: Fail roll forward .NET Core 3.x -> .NET 5.0\" (#2923)"},{"Id":"571663364","IsPullRequest":true,"CreatedAt":"2020-02-28T00:50:01","Actor":"dotnet-maestro[bot]","Number":"2918","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 4fa59404-cc5b-4313-dd47-08d72a4caef5\r\n- **Build**: 20200220.1\r\n- **Date Produced**: 2/21/2020 6:54 AM\r\n- **Commit**: 2d163b87b605fd23ceebfb04484e5ec5f2bffc32\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.3-servicing.20120.1\r\n\r\n[marker]: <> (End:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.1.0 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.7.0 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2918)","Url":"https://github.com/dotnet/winforms/pull/2918","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#2918)"},{"Id":"572444259","IsPullRequest":true,"CreatedAt":"2020-02-28T00:28:28","Actor":"RussKie","Number":"2922","RawContent":null,"Title":"Add missing template identity version information","State":"open","Body":"\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add missing template identity version information\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customer would not be able to create 3.x templates, because the VS Template Engine Host will only install the highest versioned package for any given identity.\r\nGiven that the identity lacked the version, the new template package targeting netcoreapp5.0 would supersede the ones targeting netcoreapp3.x.\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Medium to large\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2922)","Url":"https://github.com/dotnet/winforms/pull/2922","RelatedDescription":"Open PR \"Add missing template identity version information\" (#2922)"},{"Id":"572027956","IsPullRequest":true,"CreatedAt":"2020-02-28T00:14:39","Actor":"hughbe","Number":"2919","RawContent":null,"Title":"Improve DataGridViewElement testing","State":"closed","Body":"## Proposed Changes\r\n- Improve DataGridViewElement testing\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2919)","Url":"https://github.com/dotnet/winforms/pull/2919","RelatedDescription":"Closed or merged PR \"Improve DataGridViewElement testing\" (#2919)"},{"Id":"571386409","IsPullRequest":true,"CreatedAt":"2020-02-27T23:54:21","Actor":"hughbe","Number":"2917","RawContent":null,"Title":"Remove references to Whidbey/Everett","State":"closed","Body":"## Proposed Changes\r\n- Remove references to Whidbey/Everett\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2917)","Url":"https://github.com/dotnet/winforms/pull/2917","RelatedDescription":"Closed or merged PR \"Remove references to Whidbey/Everett\" (#2917)"},{"Id":"572217512","IsPullRequest":false,"CreatedAt":"2020-02-27T16:56:20","Actor":"DustinCampbell","Number":"2921","RawContent":null,"Title":".NET Core 3.1 WindowsDesktop application can fail when rolled forward to .NET 5 preview","State":"open","Body":"* .NET Core Version: \r\n.NET Core 3.x -> .NET 5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nThe `System.Windows.Forms.Design.Editors.dll` assembly has been removed in .NET 5, which can cause applications built with .NET Core 3.x to fail if they used a type from that assembly and are permitted to roll forward on major versions.\r\n\r\n**Expected behavior:**\r\n\r\nThe application should not fail. Instead, a `System.WinForms.Forms.Design.Editors.dll` should be included that contains type forwards for all of the types that were moved out of that assembly. In this way, WinForms on .NET 5 remains binary compatible.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a .NET Core 3 application.\r\n2. Add code that references a public type from `System.Windows.Forms.Design.Editors.dll`, e.g. `AnchorEditor`.\r\n3. Build it\r\n4. Run it\r\n5. Copy the app to a VM with only .NET5 SDK installed (or remove .NET Core 3.x SDK form your workstation)\r\n6. Modify a `<app name>.runtimeconfig.json` with the following content (update the .NET5 SDK version as necessary):\r\n\t```JSON\r\n\t{\r\n\t  \"runtimeOptions\": {\r\n\t\t\"tfm\": \"netcoreapp3.0\",\r\n\t\t\"rollForward\": \"LatestMajor\",\r\n\t\t\"framework\": {\r\n\t\t  \"name\": \"Microsoft.WindowsDesktop.App\",\r\n\t\t  \"version\": \"5.0.0-preview.2.20119.5\"\r\n\t\t}\r\n\t  }\r\n\t}\r\n\t```\r\n6. Run the application and ensure that the code that used the type from `System.Windows.Forms.Design.Editors.dll` executes.\r\n\r\n\r\n[EDIT] updated the repro steps","Url":"https://github.com/dotnet/winforms/issues/2921","RelatedDescription":"Open issue \".NET Core 3.1 WindowsDesktop application can fail when rolled forward to .NET 5 preview\" (#2921)"},{"Id":"572068674","IsPullRequest":true,"CreatedAt":"2020-02-27T13:16:41","Actor":"dotnet-maestro[bot]","Number":"2920","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200226.7\r\n- **Date Produced**: 2/27/2020 12:44 AM\r\n- **Commit**: cd4164e1f3f7daf2a6f8dbd012210c93521bd82f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20126.7\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2920)","Url":"https://github.com/dotnet/winforms/pull/2920","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2920)"},{"Id":"571340923","IsPullRequest":true,"CreatedAt":"2020-02-26T13:16:45","Actor":"dotnet-maestro[bot]","Number":"2916","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200225.9\r\n- **Date Produced**: 2/26/2020 2:30 AM\r\n- **Commit**: e6c7061dacf795792aa7d1213dba0e532bbd85bd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20125.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2916)","Url":"https://github.com/dotnet/winforms/pull/2916","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2916)"},{"Id":"571321614","IsPullRequest":false,"CreatedAt":"2020-02-26T12:38:22","Actor":"Jessie-Zhang01","Number":"2915","RawContent":null,"Title":"The value of ScrollBar has be changed automatically when release the mouse","State":"open","Body":"* .NET Core Version: 5.0.100-preview.2.20120.11\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes \r\n\r\n**More info**\r\n\r\n1. This issue can reproduce in the framework application, and it's not a regression issue, it can reproduce on .Net framework 4.0.\r\n2. This issue cannot reproduce on TrackBar.\r\n3. The value of the scrollbar increases by one depending on the right/down drag.\r\n4. The value of the scrollbar decreases by one depending on the left/up drag.\r\n5. When sliding the wheel with the mouse, the right / left values do not reach the maximum / minimum value. It will only be reached when the mouse is released.\r\n\r\n**Minimal repro:**\r\n\r\n1. Open the attached ‘WindowsFormsApp3’ .NET Core app in VS.\r\n2. Build and run this application, use the mouse to slide the scroll wheel of the HScrollBar/VScrollBar  to the right/down.\r\n3. Observe the change of the label value when you release the mouse.\r\n[WindowsFormsApp3.zip](https://github.com/dotnet/winforms/files/4255567/WindowsFormsApp3.zip)\r\n\r\n**Expected behavior:**\r\nThe value of ScrollBar cannot be changed automatically when release the mouse.\r\n\r\n**Actual behavior:**\r\nThe value of ScrollBar has be changed automatically when release the mouse.\r\n![Scrollbar](https://user-images.githubusercontent.com/45864649/75343845-2b937980-584e-11ea-977d-bc5d682daf3b.gif)\r\n","Url":"https://github.com/dotnet/winforms/issues/2915","RelatedDescription":"Open issue \"The value of ScrollBar has be changed automatically when release the mouse\" (#2915)"},{"Id":"571265835","IsPullRequest":false,"CreatedAt":"2020-02-26T11:50:45","Actor":"Thea-Zhao","Number":"2914","RawContent":null,"Title":"VS crashed when clicking the smart tag in the ImageList control","State":"closed","Body":"\r\n\r\n**.NET Core Version:** \r\n.Net Core 5.0.100-preview.1.20125.9 from 5.0 Release branch + VISX inserted in the Dev16 16.6.0 [29825.171.master]\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nNo\r\n\r\n**More info:**\r\nThis issue can reproduce when targeting .NET Core 3.1.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a Winforms core app.\r\n2. Drag and drop a ImageList to the form.\r\n3. Click the smart tag in the top right corner of the ImageList.\r\n\r\n**Current behavior:**\r\nVS crashed when clicking the smart tag.\r\n![issue3-Actual](https://user-images.githubusercontent.com/53589182/75340359-339beb00-5847-11ea-93fd-cae92534486a.png)\r\n\r\n\r\n**Expected behavior:**\r\nNo VS crashing and  the ImageList Tasks Dialog can show successfully.\r\n![issue3-Expected](https://user-images.githubusercontent.com/53589182/75340395-46162480-5847-11ea-90a3-191f06c3d513.png)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2914","RelatedDescription":"Closed issue \"VS crashed when clicking the smart tag in the ImageList control\" (#2914)"},{"Id":"571263947","IsPullRequest":false,"CreatedAt":"2020-02-26T11:50:27","Actor":"Thea-Zhao","Number":"2913","RawContent":null,"Title":"An error dialog pops up when clicking the smart tag in the ListView control","State":"closed","Body":"\r\n**.NET Core Version:** \r\n.Net Core 5.0.100-preview.1.20125.9 from 5.0 Release branch + VISX inserted in the Dev16 16.6.0 [29825.171.master]\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\n  No\r\n\r\n**More info:**\r\n\r\n1. This issue cannot reproduce when targeting .NET Core 3.1.\r\n2. This issue also can reproduce with the TreeView/PictureBox controls.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a Winforms core app.\r\n2. Drag and drop a ListView control to the form.\r\n3. Click the smart tag in the top right corner of the ListView.\r\n\r\n\r\n**Current behavior:**\r\nThere is an error dialog popping up when clicking the smart tag.\r\n![issue2-Actual](https://user-images.githubusercontent.com/53589182/75339866-30542f80-5846-11ea-8091-f6262e6763f9.png)\r\n\r\n\r\n**Expected behavior:**\r\nNo error dialog pop up and the ListView Tasks Dialog can show successfully.\r\n![issue2-Expected](https://user-images.githubusercontent.com/53589182/75339919-46fa8680-5846-11ea-872e-927f4cea3702.png)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2913","RelatedDescription":"Closed issue \"An error dialog pops up when clicking the smart tag in the ListView control\" (#2913)"},{"Id":"571211462","IsPullRequest":false,"CreatedAt":"2020-02-26T10:03:17","Actor":"Jessie-Zhang01","Number":"2912","RawContent":null,"Title":"An exception occurred when MonthCalendar switched dates","State":"open","Body":"* .NET Core Version: 5.0.100-preview.1.20125.9\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More Info**\r\n\r\n1. This issue cannot reproduce on DateTimePicker.\r\n2. This issue cannot reproduce on .Net 3.1.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a Winforms Core application. \r\n2. Drag and drop a MonthCalendar to the form designer. \r\n3. Build and run this application, then double click other date.\r\n\r\n**Expected behavior:**\r\nThe date is switched successfully.\r\n\r\n**Actual behavior:**\r\nAn exception occurred when MonthCalendar switched dates.\r\n![image](https://user-images.githubusercontent.com/45864649/75332442-3bed2980-5839-11ea-9377-f88b9a1689b1.png)\r\nSystem.ArgumentOutOfRangeException\r\n  HResult=0x80131502\r\n  Message=Year, Month, and Day parameters describe an un-representable DateTime.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.ThrowHelper.ThrowArgumentOutOfRange_BadYearMonthDay()\r\n   at System.DateTime..ctor(Int32 year, Int32 month, Int32 day, Int32 hour, Int32 minute, Int32 second)\r\n   at System.Windows.Forms.MonthCalendar.MonthCalendarAccessibleObject.GetCalendarRow(Int32 calendarIndex, AccessibleObject parentAccessibleObject, Int32 rowIndex)\r\n   at System.Windows.Forms.MonthCalendar.MonthCalendarAccessibleObject.GetCalendarChildAccessibleObject(Int32 calendarIndex, CalendarChildType calendarChildType, AccessibleObject parentAccessibleObject, Int32 index)\r\n   at System.Windows.Forms.MonthCalendar.MonthCalendarAccessibleObject.GetCalendarChildAccessibleObject(DateTime selectionStart, DateTime selectionEnd)\r\n   at System.Windows.Forms.MonthCalendar.WmDateChanged(Message& m)\r\n   at System.Windows.Forms.MonthCalendar.WmReflectCommand(Message& m)\r\n   at System.Windows.Forms.MonthCalendar.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, WM msg, IntPtr wparam, IntPtr lparam)\r\n   at Interop.User32.SendMessageW(IHandle hWnd, WM Msg, IntPtr wParam, IntPtr lParam)\r\n   at System.Windows.Forms.Control.ReflectMessage(IntPtr hWnd, Message& m)\r\n   at System.Windows.Forms.Control.WmNotify(Message& m)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(Message& m)\r\n   at System.Windows.Forms.Form.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, WM msg, IntPtr wparam, IntPtr lparam)\r\n   at Interop.User32.CallWindowProcW(IntPtr wndProc, IntPtr hWnd, WM msg, IntPtr wParam, IntPtr lParam)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(Message& m)\r\n   at System.Windows.Forms.Control.WmMouseDown(Message& m, MouseButtons button, Int32 clicks)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, WM msg, IntPtr wparam, IntPtr lparam)\r\n   at Interop.User32.DispatchMessageW(MSG& msg)\r\n   at System.Windows.Forms.Application.ComponentManager.Interop.Mso.IMsoComponentManager.FPushMessageLoop(UIntPtr dwComponentID, msoloop uReason, Void* pvLoopData)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(msoloop reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(msoloop reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.Run(Form mainForm)\r\n   at WindowsFormsApp2.Program.Main() in C:\\Users\\v-ruizha\\source\\repos\\WindowsFormsApp2\\WindowsFormsApp2\\Program.cs:line 20\r\n \r\n  This exception was originally thrown at this call stack:\r\n    [External Code]\r\n    WindowsFormsApp2.Program.Main() in Program.cs\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2912","RelatedDescription":"Open issue \"An exception occurred when MonthCalendar switched dates\" (#2912)"},{"Id":"571176697","IsPullRequest":true,"CreatedAt":"2020-02-26T09:07:34","Actor":"vladimir-krestov","Number":"2911","RawContent":null,"Title":"WIP: [Accessibility] Fixing MonthCalendar AccessibleObject","State":"open","Body":"Fixes #2475\r\n\r\n## Proposed changes\r\n\r\n- Guard variables against incorrect values to avoid exceptions\r\n- Edit MCGRIDINFO to avoid SYSTEMTIME value errors\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A user can get a correct MantCalendarAccessibleObject\r\n\r\n## Regression? \r\n\r\n- Yes, from PR #2090\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- There is no opportunity to get MonthCalendar body accessible objects\r\n![image](https://user-images.githubusercontent.com/49272759/75328792-9b762400-588f-11ea-9fba-45a6fe5dbbf9.png)\r\n\r\n- Incorrect SYSTEMTIME value\r\n![image](https://user-images.githubusercontent.com/49272759/75328598-4fc37a80-588f-11ea-8d66-b3ae2c0d2c6a.png)\r\n\r\n\r\n### After\r\n- MonthCalendar body accessible objects work well\r\n![image](https://user-images.githubusercontent.com/49272759/75328030-61f0e900-588e-11ea-9a70-9722c7a4c4c4.png)\r\n\r\n- Correct SYSTEMTIME value\r\n![image](https://user-images.githubusercontent.com/49272759/75327702-e8f19180-588d-11ea-90ff-13f42117c7f2.png)\r\n\r\n\r\n## Test methodology\r\n\r\n- CTI\r\n- Manual UI testing\r\n\r\n## Accessibility testing \r\n- Using Inspect and Narrator tools\r\n \r\n\r\n## Test environment(s) \r\n\r\n- .NET Core SDK: 5.0.0-alpha.1.20072.3\r\n- Microsoft Windows [Version 10.0.18363.592]\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2911)","Url":"https://github.com/dotnet/winforms/pull/2911","RelatedDescription":"Open PR \"WIP: [Accessibility] Fixing MonthCalendar AccessibleObject\" (#2911)"},{"Id":"571176608","IsPullRequest":false,"CreatedAt":"2020-02-26T09:07:23","Actor":"Marie-Shi","Number":"2910","RawContent":null,"Title":"Double-clicking the text in the custom webbrowser component that put into SplitContainer cannot be selected","State":"open","Body":"* .NET Core Version: \r\n.Net Core 3.1.200-preview-015002 from 3.1 Release branch + VISX inserted in the Dev16 16.6.0 [29825.171.master]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info:**\r\n1.\tThis issue cannot reproduce without SplitContainer.\r\n2.\tThis issue cannot reproduce on WebBrowser from Winforms control that put into SplitContainer.\r\n3.\tThis issue cannot reproduce on custom webbrowser component that put into other containers(Panel, TabControl, GroupBox..).\r\n\r\n**Steps to reproduce:**\r\n1.\tOpen the attached app “Custom_component_WebBrowser_issue.zip” in VS.\r\n[Custom_component_WebBrowser_issue.zip](https://github.com/dotnet/winforms/files/4254514/Custom_component_WebBrowser_issue.zip)\r\n\r\n2.\tBuild and run this application. \r\n3.\tDouble-clicking the text in the custom webbrowser component and observe the behavior.\r\n\r\n**Actual behavior:**\r\nDouble-clicking the text in the custom webbrowser component that put into SplitContainer cannot be selected.\r\n\r\n**Expected behavior:**\r\nDouble-clicking the text in the custom webbrowser component that put into SplitContainer should be selected. The behavior should be like below:\r\n![custom_webbrowser_issue_expected](https://user-images.githubusercontent.com/45864017/75329167-24a25080-58ba-11ea-8c21-d4f8dea43d8f.gif)","Url":"https://github.com/dotnet/winforms/issues/2910","RelatedDescription":"Open issue \"Double-clicking the text in the custom webbrowser component that put into SplitContainer cannot be selected\" (#2910)"},{"Id":"571092381","IsPullRequest":true,"CreatedAt":"2020-02-26T07:14:22","Actor":"RussKie","Number":"2909","RawContent":null,"Title":"fix: WebBrowser_AttachInterfaces_Invoke_Success fails if IE browser not installed","State":"closed","Body":"IE browser is now an optional Windows component, and it may not be present in all environments we run tests.\r\n\r\n`Type.GetTypeFromCLSID` returns `System.__ComObject` regardless of whether the CLSID is valid. Which leaves us checking whether an IE browser is installed and handling the exception.\r\nFurther xUnit does not support dynamic skipping of tests https://github.com/xunit/xunit/issues/2073 that forces us to abandon the test if the IE browser is not detected, marking the test as success.\r\n\r\nRelates to #2889 and dotnet/core-eng#9068\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2909)","Url":"https://github.com/dotnet/winforms/pull/2909","RelatedDescription":"Closed or merged PR \"fix: WebBrowser_AttachInterfaces_Invoke_Success fails if IE browser not installed\" (#2909)"},{"Id":"570553754","IsPullRequest":true,"CreatedAt":"2020-02-25T13:16:37","Actor":"dotnet-maestro[bot]","Number":"2908","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200224.3\r\n- **Date Produced**: 2/24/2020 10:18 PM\r\n- **Commit**: 03bd0e0cefb81d33d08c4853fa5d6a8057c34d94\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20124.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20124.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20124.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20124.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20124.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2908)","Url":"https://github.com/dotnet/winforms/pull/2908","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2908)"},{"Id":"570001079","IsPullRequest":false,"CreatedAt":"2020-02-24T17:18:12","Actor":"guybark","Number":"2907","RawContent":null,"Title":"A form resulting from a call to Form.ShowDialog() should be exposed programmatically as a dialog.","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nAccording to https://docs.microsoft.com/en-us/windows/win32/winauto/uiauto-automation-element-propids, UIA providers can set UIA_IsDialogPropertyId true on UI that's semantically a dialog. Based on that property, an assistive technology such as a screen reader can decide how best to convey the dialog's information to the customer. In the case of Narrator, today Narrator can decide to convey some contents of a dialog window when the window appears, beyond announcing only the focused control and the name of the dialog. When Form.ShowDialog() is called, the resulting window is not exposed as having a UIA IsDialog property of true, and so it is not being semantically exposed through UIA as being a dialog.\r\n\r\n**Describe the solution you'd like**\r\nThe UIA Window element associated with the form that appears in response to the Form.ShowDialog() call has a UIA IsDialog property of true.\r\n\r\n**Describe alternatives you've considered**\r\nAs far as I know, there's no straightforward and robust way for an app to get the IsDialog property set true on the form.\r\n\r\n**Will this feature affect UI controls?**\r\nYes.\r\n- Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\nNo.\r\n- What impact will it have on accessibility?\r\nThe form will programmatically be exposed as a dialog, which is the correct match for its semantics.\r\n- Will this feature need to be localized or be localizable?\r\nNo.\r\n","Url":"https://github.com/dotnet/winforms/issues/2907","RelatedDescription":"Open issue \"A form resulting from a call to Form.ShowDialog() should be exposed programmatically as a dialog.\" (#2907)"},{"Id":"569841531","IsPullRequest":true,"CreatedAt":"2020-02-24T13:21:48","Actor":"dotnet-maestro[bot]","Number":"2906","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/23/2020 2:05 PM\r\n- **Commit**: 85d76351b1f0245c9f331f72219d12e8e2d48e72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20123.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2906)","Url":"https://github.com/dotnet/winforms/pull/2906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2906)"},{"Id":"569676043","IsPullRequest":true,"CreatedAt":"2020-02-24T09:45:29","Actor":"gpetrou","Number":"2905","RawContent":null,"Title":"Move IProvideClassInfo to Interop OleAut32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move IProvideClassInfo to Interop OleAut32.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2905)","Url":"https://github.com/dotnet/winforms/pull/2905","RelatedDescription":"Closed or merged PR \"Move IProvideClassInfo to Interop OleAut32\" (#2905)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-03T05:30:59.087593Z","RunDurationInMilliseconds":713}