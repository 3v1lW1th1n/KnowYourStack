{"Data":{"GitHub":{"Issues":[{"Id":"499571365","IsPullRequest":true,"CreatedAt":"2019-10-03T03:25:35","Actor":"hughbe","Number":"1988","RawContent":null,"Title":"Cleanup Caret interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup `ShowCaret`\r\n- Cleanup `HideCaret`\r\n- Cleanup `GetCaretBlinkTime`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1988)","Url":"https://github.com/dotnet/winforms/pull/1988","RelatedDescription":"Closed or merged PR \"Cleanup Caret interop\" (#1988)"},{"Id":"500413351","IsPullRequest":false,"CreatedAt":"2019-10-03T01:10:13","Actor":"scalablecory","Number":"1995","RawContent":null,"Title":"Text is longer than 43679 and its contents cannot be displayed in DataGridView","State":"closed","Body":"_From @15092368540 on Friday, August 23, 2019 10:38:07 PM_\r\n\r\nwith NET Core 3.0.0-preview8, the point is that can't show, not long enough.\r\n![88759-abug](https://user-images.githubusercontent.com/49462433/63627269-7d5a0d80-c639-11e9-82b6-9997a8c186f0.png)\r\n\r\n\r\n_Copied from original issue: dotnet/core#3242_","Url":"https://github.com/dotnet/winforms/issues/1995","RelatedDescription":"Closed issue \"Text is longer than 43679 and its contents cannot be displayed in DataGridView\" (#1995)"},{"Id":"501667729","IsPullRequest":true,"CreatedAt":"2019-10-02T23:50:20","Actor":"Sousa125","Number":"2010","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2010)","Url":"https://github.com/dotnet/winforms/pull/2010","RelatedDescription":"Closed or merged PR \"Update README.md\" (#2010)"},{"Id":"501706055","IsPullRequest":false,"CreatedAt":"2019-10-02T20:22:02","Actor":"qwertyuiopA1234","Number":"2012","RawContent":null,"Title":"بيتا","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n**Expected behavior:**\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/2012","RelatedDescription":"Open issue \"بيتا\" (#2012)"},{"Id":"501686424","IsPullRequest":false,"CreatedAt":"2019-10-02T19:40:44","Actor":"theam1977","Number":"2011","RawContent":null,"Title":"testing","State":"closed","Body":"hi how are you...","Url":"https://github.com/dotnet/winforms/issues/2011","RelatedDescription":"Closed issue \"testing\" (#2011)"},{"Id":"501455836","IsPullRequest":true,"CreatedAt":"2019-10-02T12:23:14","Actor":"dotnet-maestro[bot]","Number":"2009","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191002.2\r\n- **Date Produced**: 10/2/2019 10:19 AM\r\n- **Commit**: ba2095a5755a040850bdc4b423fab1ca26da4025\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19502.2\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha1.19501.13 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2009)","Url":"https://github.com/dotnet/winforms/pull/2009","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#2009)"},{"Id":"501446248","IsPullRequest":true,"CreatedAt":"2019-10-02T12:02:39","Actor":"dotnet-maestro[bot]","Number":"2008","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191001.4\r\n- **Date Produced**: 10/1/2019 10:24 PM\r\n- **Commit**: c21a409f11386d22c6083198176868d3974de832\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19501.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2008)","Url":"https://github.com/dotnet/winforms/pull/2008","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#2008)"},{"Id":"500056223","IsPullRequest":true,"CreatedAt":"2019-10-02T05:47:13","Actor":"dotnet-maestro[bot]","Number":"1990","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191001.1\r\n- **Date Produced**: 10/1/2019 9:05 AM\r\n- **Commit**: b51799c4f5cee439b248310a17d7edaddfbee8af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19501.1\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha1.19480.12 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19480.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19480.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1990)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1990","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1990)"},{"Id":"501251153","IsPullRequest":true,"CreatedAt":"2019-10-02T04:18:21","Actor":"RussKie","Number":"2006","RawContent":null,"Title":"Disable the flaky tests","State":"closed","Body":"The issues are tracked in\r\n* https://github.com/dotnet/winforms/issues/2002\r\n* https://github.com/dotnet/winforms/issues/2003\r\n* https://github.com/dotnet/winforms/issues/2004\r\n* https://github.com/dotnet/winforms/issues/2005\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2006)","Url":"https://github.com/dotnet/winforms/pull/2006","RelatedDescription":"Closed or merged PR \"Disable the flaky tests\" (#2006)"},{"Id":"501253918","IsPullRequest":false,"CreatedAt":"2019-10-02T03:27:43","Actor":"weltkante","Number":"2007","RawContent":null,"Title":"IFont port is missing methods","State":"open","Body":"* .NET Core Version: master branch\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nThe [port](https://github.com/dotnet/winforms/commit/18a20a2a1c85f3881995bafe03993c7454259beb#diff-9365ef061cf5ed914236af3a98d800c1) of [`IFont`](https://github.com/dotnet/winforms/blob/master/src/Common/src/Interop/Ole32/Interop.IFont.cs) seems to be missing two interface methods [QueryTextMetrics](https://github.com/dotnet/winforms/commit/18a20a2a1c85f3881995bafe03993c7454259beb#r35321370) and [SetHdc](https://github.com/dotnet/winforms/commit/18a20a2a1c85f3881995bafe03993c7454259beb#r35321371). This causes the two methods in-between to be offset from their method index and be unusable as well. I could not find any usage of these methods so this probably will not result in a regression, but it would be nice to fix anyways.\r\n\r\n(Also note that the original declaration of QueryTextMetrics before the port was wrong, [it is pointing to a struct](https://docs.microsoft.com/de-de/windows/win32/api/ocidl/nf-ocidl-ifont-querytextmetrics) so it needs to be `IntPtr` instead of `out IntPtr`.)\r\n\r\n**Actual behavior:**\r\nNo observable effects since these methods are never called (nor the ones declared after), but the interface declaration doesn't match the native API\r\n\r\n**Expected behavior:**\r\nInterface declaration should match native API\r\n\r\n**Minimal repro:**\r\nCompare interface declaration of `IFont` with native interface specification\r\n\r\n<details><summary>OCIdl.h</summary>\r\n\r\n```C++\r\n    MIDL_INTERFACE(\"BEF6E002-A874-101A-8BBA-00AA00300CAB\")\r\n    IFont : public IUnknown\r\n    {\r\n    public:\r\n        virtual HRESULT STDMETHODCALLTYPE get_Name( \r\n            /* [out] */ __RPC__deref_out_opt BSTR *pName) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Name( \r\n            /* [in] */ __RPC__in BSTR name) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_Size( \r\n            /* [out] */ __RPC__out CY *pSize) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Size( \r\n            /* [in] */ CY size) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_Bold( \r\n            /* [out] */ __RPC__out BOOL *pBold) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Bold( \r\n            /* [in] */ BOOL bold) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_Italic( \r\n            /* [out] */ __RPC__out BOOL *pItalic) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Italic( \r\n            /* [in] */ BOOL italic) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_Underline( \r\n            /* [out] */ __RPC__out BOOL *pUnderline) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Underline( \r\n            /* [in] */ BOOL underline) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_Strikethrough( \r\n            /* [out] */ __RPC__out BOOL *pStrikethrough) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Strikethrough( \r\n            /* [in] */ BOOL strikethrough) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_Weight( \r\n            /* [out] */ __RPC__out SHORT *pWeight) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Weight( \r\n            /* [in] */ SHORT weight) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_Charset( \r\n            /* [out] */ __RPC__out SHORT *pCharset) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE put_Charset( \r\n            /* [in] */ SHORT charset) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE get_hFont( \r\n            /* [out] */ __RPC__deref_out_opt HFONT *phFont) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE Clone( \r\n            /* [out] */ __RPC__deref_out_opt IFont **ppFont) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE IsEqual( \r\n            /* [in] */ __RPC__in_opt IFont *pFontOther) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE SetRatio( \r\n            /* [in] */ LONG cyLogical,\r\n            /* [in] */ LONG cyHimetric) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE QueryTextMetrics( \r\n            /* [out] */ __RPC__out TEXTMETRICOLE *pTM) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE AddRefHfont( \r\n            /* [in] */ __RPC__in HFONT hFont) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE ReleaseHfont( \r\n            /* [in] */ __RPC__in HFONT hFont) = 0;\r\n        \r\n        virtual HRESULT STDMETHODCALLTYPE SetHdc( \r\n            /* [in] */ __RPC__in HDC hDC) = 0;\r\n        \r\n    };\r\n```\r\n\r\n</details>","Url":"https://github.com/dotnet/winforms/issues/2007","RelatedDescription":"Open issue \"IFont port is missing methods\" (#2007)"},{"Id":"501250081","IsPullRequest":false,"CreatedAt":"2019-10-02T03:10:29","Actor":"RussKie","Number":"2005","RawContent":null,"Title":"Flaky test: `AxHost_GetIPictureDispFromPicture_InvokeEnhancedMetafile_Roundtrips`","State":"open","Body":"* .NET Core Version: master @ 3750c43d5d9b5161be967e39fd848c89d6479ff5\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\n`AxHost_GetIPictureDispFromPicture_InvokeEnhancedMetafile_Roundtrips` test fails on CI but is passing locally.\r\nE.g.\r\n- https://dev.azure.com/dnceng/public/_build/results?buildId=371654&view=ms.vss-test-web.build-test-results-tab&runId=11320176&resultId=113727&paneView=debug\r\n- https://dev.azure.com/dnceng/public/_build/results?buildId=371508&view=ms.vss-test-web.build-test-results-tab&runId=11308766&resultId=113727&paneView=debug\r\n\r\n```\r\n\r\nError message\r\nSystem.Runtime.InteropServices.ExternalException : A generic error occurred in GDI+.\r\n\r\nStack trace\r\n   at System.Drawing.SafeNativeMethods.Gdip.CheckStatus(Int32 status)\r\n   at System.Drawing.Imaging.Metafile..ctor(IntPtr henhmetafile, Boolean deleteEmf)\r\n   at System.Windows.Forms.AxHost.GetPictureFromParams(UInt32 handle, PICTYPE type, UInt32 paletteHandle, Int32 width, Int32 height) in D:\\a\\1\\s\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\AxHost.cs:line 5085\r\n   at System.Windows.Forms.AxHost.GetPictureFromIPicture(Object picture) in D:\\a\\1\\s\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\AxHost.cs:line 5029\r\n   at System.Windows.Forms.Tests.AxHostTests.SubAxHost.GetPictureFromIPicture(Object picture) in D:\\a\\1\\s\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\AxHostTests.cs:line 1370\r\n   at System.Windows.Forms.Tests.AxHostTests.AxHost_GetIPictureDispFromPicture_InvokeEnhancedMetafile_Roundtrips() in D:\\a\\1\\s\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\AxHostTests.cs:line 1210\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nThe test pass\r\n\r\n\r\n/cc: @hughbe ","Url":"https://github.com/dotnet/winforms/issues/2005","RelatedDescription":"Open issue \"Flaky test: `AxHost_GetIPictureDispFromPicture_InvokeEnhancedMetafile_Roundtrips`\" (#2005)"},{"Id":"501249603","IsPullRequest":false,"CreatedAt":"2019-10-02T03:08:05","Actor":"RussKie","Number":"2004","RawContent":null,"Title":"Flaky test: `AxHost_GetIPictureFromPicture_InvokeEnhancedMetafile_Roundtrips`","State":"open","Body":"* .NET Core Version: master @ 3750c43d5d9b5161be967e39fd848c89d6479ff5\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\n`AxHost_GetIPictureFromPicture_InvokeEnhancedMetafile_Roundtrips` test fails on CI but is passing locally.\r\nE.g.\r\n- https://dev.azure.com/dnceng/public/_build/results?buildId=371654&view=ms.vss-test-web.build-test-results-tab&runId=11320176&resultId=113686&paneView=debug\r\n\r\n```\r\nError message\r\nSystem.Runtime.InteropServices.ExternalException : A generic error occurred in GDI+.\r\n\r\nStack trace\r\n   at System.Drawing.SafeNativeMethods.Gdip.CheckStatus(Int32 status)\r\n   at System.Drawing.Imaging.Metafile..ctor(IntPtr henhmetafile, Boolean deleteEmf)\r\n   at System.Windows.Forms.AxHost.GetPictureFromParams(UInt32 handle, PICTYPE type, UInt32 paletteHandle, Int32 width, Int32 height) in D:\\a\\1\\s\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\AxHost.cs:line 5085\r\n   at System.Windows.Forms.AxHost.GetPictureFromIPicture(Object picture) in D:\\a\\1\\s\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\AxHost.cs:line 5029\r\n   at System.Windows.Forms.Tests.AxHostTests.SubAxHost.GetPictureFromIPicture(Object picture) in D:\\a\\1\\s\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\AxHostTests.cs:line 1370\r\n   at System.Windows.Forms.Tests.AxHostTests.AxHost_GetIPictureFromPicture_InvokeEnhancedMetafile_Roundtrips() in D:\\a\\1\\s\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\AxHostTests.cs:line 1265\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nThe test pass\r\n\r\n\r\n/cc: @hughbe ","Url":"https://github.com/dotnet/winforms/issues/2004","RelatedDescription":"Open issue \"Flaky test: `AxHost_GetIPictureFromPicture_InvokeEnhancedMetafile_Roundtrips`\" (#2004)"},{"Id":"500849980","IsPullRequest":true,"CreatedAt":"2019-10-02T03:00:20","Actor":"dotnet-maestro[bot]","Number":"2001","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190930.3\r\n- **Date Produced**: 9/30/2019 8:25 PM\r\n- **Commit**: 238f1bbb23ba67616818d0b242c5b55a18edec55\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19480.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19480.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2001)","Url":"https://github.com/dotnet/winforms/pull/2001","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2001)"},{"Id":"501239008","IsPullRequest":false,"CreatedAt":"2019-10-02T02:21:48","Actor":"RussKie","Number":"2003","RawContent":null,"Title":"Flaky test: `AxHost_GetIFontFromFont_InvokeSimpleStyle_Roundtrips`","State":"open","Body":"* .NET Core Version: master @ 3750c43d5d9b5161be967e39fd848c89d6479ff5\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\n`AxHost_GetIFontDispFromFont_InvokeSimpleStyle_Roundtrips` test fails locally from cli and VS:\r\n\r\n```\r\n  Message: \r\n    Assert.Equal() Failure\r\n    Expected: 0\r\n    Actual:   254\r\n  Stack Trace: \r\n    AxHostTests.AxHost_GetIFontFromFont_InvokeSimpleStyle_Roundtrips() line 1083\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nThe test pass\r\n\r\n\r\n/cc: @hughbe ","Url":"https://github.com/dotnet/winforms/issues/2003","RelatedDescription":"Open issue \"Flaky test: `AxHost_GetIFontFromFont_InvokeSimpleStyle_Roundtrips`\" (#2003)"},{"Id":"501232311","IsPullRequest":false,"CreatedAt":"2019-10-02T01:54:24","Actor":"RussKie","Number":"2002","RawContent":null,"Title":"Flaky test: `AxHost_GetIFontDispFromFont_InvokeSimpleStyle_Roundtrips`","State":"open","Body":"* .NET Core Version: master @ 3750c43d5d9b5161be967e39fd848c89d6479ff5\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\n`AxHost_GetIFontDispFromFont_InvokeSimpleStyle_Roundtrips` test fails locally from cli and VS:\r\n\r\n```\r\n  Message: \r\n    Assert.Equal() Failure\r\n    Expected: 0\r\n    Actual:   254\r\n  Stack Trace: \r\n    AxHostTests.AxHost_GetIFontDispFromFont_InvokeSimpleStyle_Roundtrips() line 993\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/66012598-26ced180-e50b-11e9-81aa-e73d6b082e70.png)\r\n\r\n`disp` doesn't appear to be cast-able to `Ole32.IFontDisp`.\r\n\r\n**Expected behavior:**\r\n\r\nThe test pass\r\n\r\n\r\n/cc: @hughbe ","Url":"https://github.com/dotnet/winforms/issues/2002","RelatedDescription":"Open issue \"Flaky test: `AxHost_GetIFontDispFromFont_InvokeSimpleStyle_Roundtrips`\" (#2002)"},{"Id":"500712874","IsPullRequest":true,"CreatedAt":"2019-10-01T07:22:15","Actor":"RussKie","Number":"2000","RawContent":null,"Title":"Scope `EnsureSerializableAttribute` tests to user-generated types","State":"open","Body":"\r\n\r\n## Proposed changes\r\n\r\nAs discovered in #1133, our tests checking types with `SerializableAttribute` were made a little too greedy and considered compiler-generated types.\r\n\r\nRelax the tests to only verify no `SerializableAttribute` applied to user-generated types\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None, tests related changes\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n/cc: @kpreisser\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2000)","Url":"https://github.com/dotnet/winforms/pull/2000","RelatedDescription":"Open PR \"Scope `EnsureSerializableAttribute` tests to user-generated types\" (#2000)"},{"Id":"500676446","IsPullRequest":false,"CreatedAt":"2019-10-01T05:46:43","Actor":"RussKie","Number":"1999","RawContent":null,"Title":"Tests deadlock","State":"open","Body":"* .NET Core Version: 5.0\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nRunning tests from the master branch locally I got tests hung. I have attached a debugger and there was a dozen of hung threads.\r\n\r\n9 threads were stuck unable to acquire the lock in `NativeWindow.CreateHandle()` method (originating stacks were slightly different, but they all ended in the same critical section):\r\n![image](https://user-images.githubusercontent.com/4403806/65936205-37297280-e45f-11e9-88f1-bceed2dee9a7.png)\r\n\r\n1 thread was stuck restoring the default trace listener:\r\n![image](https://user-images.githubusercontent.com/4403806/65936554-570d6600-e460-11e9-9c15-77b331d5fe41.png)\r\n\r\n2 thread were stuck while writing a trace:\r\n![image](https://user-images.githubusercontent.com/4403806/65936617-7e643300-e460-11e9-85b9-c80a33254db5.png)\r\n![image](https://user-images.githubusercontent.com/4403806/65936653-9cca2e80-e460-11e9-9661-8eb754b89cff.png)\r\n\r\n\r\nWhat appears to have happened is that one test was in a middle of creating a handle and attempted to add a trace, which was locked by another thread, that was restoring the default trace listener:\r\n![image](https://user-images.githubusercontent.com/4403806/65937120-25959a00-e462-11e9-8900-9984cb95047a.png)\r\n\r\n**Expected behavior:**\r\n\r\nNo deadlock\r\n\r\n**Minimal repro:**\r\n\r\nThis is very intermittent...","Url":"https://github.com/dotnet/winforms/issues/1999","RelatedDescription":"Open issue \"Tests deadlock\" (#1999)"},{"Id":"500230856","IsPullRequest":true,"CreatedAt":"2019-10-01T02:51:09","Actor":"dotnet-maestro[bot]","Number":"1993","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190927.2\r\n- **Date Produced**: 9/27/2019 6:33 PM\r\n- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19477.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19477.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1993)","Url":"https://github.com/dotnet/winforms/pull/1993","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1993)"},{"Id":"500575185","IsPullRequest":true,"CreatedAt":"2019-09-30T23:22:58","Actor":"M-Lipin","Number":"1998","RawContent":null,"Title":"PropertyGrid Accessibility: Adding test changed item for null before announcement","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1997 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding test for null before announcement changed item details as changed item can be disposed in case Property grid is recreated on new value submit.\r\n- Announcement is not broken and this case is rare. It is ok to not announce the value of disposed and recreated PropertyGrid.\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not experience application crash in case the PropertyGrid control can be recreated in Form lifecycle.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes (before introducing announcements for PropertyGrid value updates there was no issue)\r\n\r\n## Risk\r\n\r\n- None (just one additional null value test)\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nCrash stack:\r\n```cs\r\n  System.Windows.Forms.dll!System.Windows.Forms.PropertyGridInternal.PropertyGridView.GridViewEdit.ProcessDialogKey(System.Windows.Forms.Keys keyData) Line 6808 C# Symbols loaded.\r\n  System.Windows.Forms.dll!System.Windows.Forms.PropertyGridInternal.PropertyGridView.GridViewEdit.OnKeyDown(System.Windows.Forms.KeyEventArgs ke) Line 6693 C# Symbols loaded.\r\n  System.Windows.Forms.dll!System.Windows.Forms.Control.ProcessKeyEventArgs(ref System.Windows.Forms.Message m) Line 10649 C# Symbols loaded.\r\n  System.Windows.Forms.dll!System.Windows.Forms.Control.ProcessKeyMessage(ref System.Windows.Forms.Message m) Line 10695 C# Symbols loaded.\r\n  System.Windows.Forms.dll!System.Windows.Forms.Control.WmKeyChar(ref System.Windows.Forms.Message m) Line 13328 C# Symbols loaded.\r\n```\r\n\r\n### After\r\n\r\nNo crash.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Automation testing (to be run)\r\n- Unit tests (to be implemented)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 3.1.100-preview1-014044\r\nCommit: dca04e7030\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18362\r\nOS Platform: Windows\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1998)","Url":"https://github.com/dotnet/winforms/pull/1998","RelatedDescription":"Open PR \"PropertyGrid Accessibility: Adding test changed item for null before announcement\" (#1998)"},{"Id":"500561681","IsPullRequest":false,"CreatedAt":"2019-09-30T22:36:03","Actor":"M-Lipin","Number":"1997","RawContent":null,"Title":"Application crash on submitting new value to PropertyGrid item","State":"open","Body":"**Note:** Issue can be reproduced in case PropertyGrid is recreated on the moment of submitting new cell value.\r\n\r\n**Repro steps:**\r\n1. Create .NET Core Winforms app with PropertyGrid control.\r\n2. Bind data value changing with PropertyGrid recreating.\r\n3. Run the app and try access some properties.\r\n\r\n**Actual:** application crash with null-reference exception.\r\n**Expected:** no crash.\r\n\r\nDevDiv bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/962676","Url":"https://github.com/dotnet/winforms/issues/1997","RelatedDescription":"Open issue \"Application crash on submitting new value to PropertyGrid item\" (#1997)"},{"Id":"500433740","IsPullRequest":false,"CreatedAt":"2019-09-30T18:07:37","Actor":"livarcocc","Number":"1996","RawContent":null,"Title":"Settings for a self-contained WinForms goes into new folders for every publish","State":"open","Body":"_From @felizk on Saturday, September 28, 2019 9:41:57 PM_\r\n\r\n## Steps to reproduce\r\n * Publish a self contained WinForms app. \r\n * Run it.\r\n * Change and save some Settings (using the WinForms style .settings)\r\n * Notice settings are saved in LocalAppData ultimately in a folder with this kind of postfix: \"_Url_2z3wslwxp2unr2f2llkyxtrbrq3rb5cd\"\r\n * Repeat, notice the postfix has changed and settings are not reused\r\n\r\n## Expected  behavior\r\nTo be able to persist settings between versions of the application.\r\n\r\n## Actual behavior\r\nEvery time you publish, settings are effectively wiped.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/cli#12749_","Url":"https://github.com/dotnet/winforms/issues/1996","RelatedDescription":"Open issue \"Settings for a self-contained WinForms goes into new folders for every publish\" (#1996)"},{"Id":"500240232","IsPullRequest":true,"CreatedAt":"2019-09-30T12:20:18","Actor":"M-Lipin","Number":"1994","RawContent":null,"Title":"Adding test for null for PropertyGridView's SelectedGridEntry","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1986 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding tests SelectedGridEntry property and selectedGridEntry field for null before accessing their properties.\r\n- In some conditions (recreating PropertyGrid) slectedGridEntry may be null and accessing its property leads to NullReference exception. Added the tests where this is necessary.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Before the fix customers may experience application crash in case there are the conditions leading to accessing null-value selected grid entry (submitting new value to the field by enter-press)\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nApp crash with the following stack:\r\nCallsatcks:\r\n```cs\r\n  System.Windows.Forms.dll!System.Windows.Forms.PropertyGridInternal.PropertyGridView.GridViewEdit.ProcessDialogKey(System.Windows.Forms.Keys keyData) Unknown\r\n  System.Windows.Forms.dll!System.Windows.Forms.PropertyGridInternal.PropertyGridView.GridViewEdit.OnKeyDown(System.Windows.Forms.KeyEventArgs ke) Unknown\r\n  System.Windows.Forms.dll!System.Windows.Forms.Control.ProcessKeyEventArgs(ref System.Windows.Forms.Message m) Unknown\r\n```\r\n\r\n### After\r\n\r\nNo crash\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Automation tests (to be performed)\r\n- Unit tests (to be implemented)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 3.1.100-preview1-014044\r\nCommit: dca04e7030\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18362\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014044\\\r\nHost (useful for support):\r\nVersion: 3.1.0-preview1.19463.3\r\nCommit: 1e35b022cb\r\n.NET Core SDKs installed:\r\n2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.100-preview8-012929 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.100-preview9-014004 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.100-preview1-014044 [C:\\Program Files\\dotnet\\sdk]\r\n.NET Core runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.0.0-preview8.19351.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.0.0-preview9.19424.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.0.0-rc2.19462.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.0-preview1.19463.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 3.1.0-preview1.19463.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1994)","Url":"https://github.com/dotnet/winforms/pull/1994","RelatedDescription":"Open PR \"Adding test for null for PropertyGridView's SelectedGridEntry\" (#1994)"},{"Id":"500199753","IsPullRequest":true,"CreatedAt":"2019-09-30T10:52:17","Actor":"M-Lipin","Number":"1992","RawContent":null,"Title":"WIP: [Accessibility] Adding announcement for PropertyGrid ComboBox Expand and Collapse actions","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1987\r\n\r\n## Proposed changes\r\n\r\n- Adding support for UI Automation ExpandCollapse pattern (added ExpandCollapse pattern provider) to PropertyDescriptorGridEntryAccessibleObject.\r\n- Implementing Expand and Collapse action accessible UI and API via Expand and Collapse methods and via exposing ExpandCollapseState property.\r\n- Refactoring accessible navigation methods to get parent PropertyGridView accessible object easier.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Visually impaired customers will be able to distinguish expanded and collapsed ComboBox within the PropertyGrid control.\r\n- Narrator and NVDA accessibility cline apps will announce expand and collapse actions of PropertyGrid ComboBox and the state of ComboBox.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/65872691-d11eeb80-e389-11e9-8828-9a7d9c480ffa.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/65871952-2d810b80-e388-11e9-832e-0300ee0d2cea.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing with Screen readers.\r\n- Automation testing (to be performed)\r\n- Unit tests (to be implemented)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Verified with Accessibility Insights.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview1-014044\r\n Commit:    dca04e7030\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014044\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19463.3\r\n  Commit:  1e35b022cb\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-012929 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview9-014004 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014044 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19351.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview9.19424.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc2.19462.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19463.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19463.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1992)","Url":"https://github.com/dotnet/winforms/pull/1992","RelatedDescription":"Open PR \"WIP: [Accessibility] Adding announcement for PropertyGrid ComboBox Expand and Collapse actions\" (#1992)"},{"Id":"500196245","IsPullRequest":false,"CreatedAt":"2019-09-30T10:44:33","Actor":"RussKie","Number":"1991","RawContent":null,"Title":"[Clean up] Remove SA1408 suppressions","State":"open","Body":"* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nAfter enabling [SA1408](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md) rule a number of suspicious conditional expressions have been identified. A number of these expressions are far from obvious and require investigation/repro/testing in order to resolve each one.\r\nThese behaviours have been present in the codebase for a very long time, and whilst these are likely to affect specific corner cases, they are possible bugs in waiting.\r\n\r\nAs part of #1985 to get the build pass these issues have been decorated with suppressions - https://github.com/dotnet/winforms/commit/0a93d726ee55cb801a720a5b831f5f5d8406556c.\r\n\r\n**Expected behavior:**\r\n\r\nAll suppressions are removed and no SA1408 warnings emitted during the build.\r\n","Url":"https://github.com/dotnet/winforms/issues/1991","RelatedDescription":"Open issue \"[Clean up] Remove SA1408 suppressions\" (#1991)"},{"Id":"499999319","IsPullRequest":false,"CreatedAt":"2019-09-30T00:53:22","Actor":"RussKie","Number":"1989","RawContent":null,"Title":"Conditional order of precedence (possible) bug in `AxHost.CanAccessProperties`","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nDiscovered as part of a review of https://github.com/dotnet/winforms/issues/1955.\r\nHaving enabled [SA1408](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md) the analyser flagged the following issue:\r\n\r\n```cs\r\n        // NB: the snippet is re-formatted to increase readability\r\n\r\n        internal override bool CanAccessProperties\r\n        {\r\n            get\r\n            {\r\n                int ocState = GetOcState();\r\n                return axState[fOwnWindow] && (ocState > OC_RUNNING || (IsUserMode() && ocState >= OC_RUNNING)) || ocState >= OC_INPLACE;\r\n            }\r\n        }\r\n```\r\nhttps://github.com/dotnet/winforms/blob/7019e1414309d820bc377e987cd1efcf9c17a12d/src/System.Windows.Forms/src/System/Windows/Forms/AxHost.cs#L526-L535\r\n\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nThe intent is unclear.\r\n\r\n* Is the following a correct expectation: `ocState >= OC_INPLACE` - OR - `axState[fOwnWindow] && (ocState > OC_RUNNING || (IsUserMode() && ocState >= OC_RUNNING))`?\r\n* In `ocState > OC_RUNNING || (IsUserMode() && ocState >= OC_RUNNING)` condition the second `>` is redundant, as if `ocState > OC_RUNNING` the condition will be `true` on the first operand\r\n\r\n**Expected behavior:**\r\n\r\nThe code is written in a manner that clearly communicates the intent and a desired outcome.","Url":"https://github.com/dotnet/winforms/issues/1989","RelatedDescription":"Open issue \"Conditional order of precedence (possible) bug in `AxHost.CanAccessProperties`\" (#1989)"},{"Id":"499514444","IsPullRequest":false,"CreatedAt":"2019-09-27T15:36:16","Actor":"M-Lipin","Number":"1987","RawContent":null,"Title":"Screen reader does not announce expanding and collapsing action for Open button in PropertyGrid ComboBox","State":"open","Body":"**Repro steps:**\r\n1. Create WinForms app with PropertyGrid control and target it to any object where one of the properties is the list that can be represented as ComboBox.\r\n2. Run the app and Switch ON screen reader.\r\n3. Try to expand and collapse the \"Open\" button and check whether the screen reader announces the Expanding or Collapsing action.\r\n\r\n**Actual Result:**\r\nNarrator/ NVDA is not reading Expanding or Collapsing action for the \"Open\" button.\r\n\r\n**Expected Result:**\r\nNarrator should read the Expanding or Collapsing action for the \"Open\" button while user tries to expand or collapse the list.","Url":"https://github.com/dotnet/winforms/issues/1987","RelatedDescription":"Open issue \"Screen reader does not announce expanding and collapsing action for Open button in PropertyGrid ComboBox\" (#1987)"},{"Id":"499440306","IsPullRequest":false,"CreatedAt":"2019-09-27T13:16:59","Actor":"M-Lipin","Number":"1986","RawContent":null,"Title":"Error when entering new value to PropertyGridView row","State":"open","Body":"In case the PropertyGrid is being recreated (or other conditions when selected grid entry is set to null) the application execution can fail with NullReferenceException.\r\n\r\nCorresponding DevDiv issue: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/960781","Url":"https://github.com/dotnet/winforms/issues/1986","RelatedDescription":"Open issue \"Error when entering new value to PropertyGridView row\" (#1986)"},{"Id":"499395452","IsPullRequest":true,"CreatedAt":"2019-09-27T11:37:27","Actor":"RussKie","Number":"1985","RawContent":null,"Title":"Fix conditional order of precedence","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- fix warning SA1408: Conditional expressions should declare precedence\r\nAs per docs `&&` operator has precedence over `||` and thus the following changes are to increase readability and make SCA happy. The code was correct, it could not have been interpreted any different. \r\n- `ScrollableControl.SetDisplayRectLocation` had an incorrect order of precedence by which a `ScrollWindowEx` message could get sent to the control even though the control did not have a valid handle.\r\nFixes #1955\r\n- `COM2PropertyDescriptor.SetValue` had an incorrect order of precedence that would lead to IOORE if error info string was empty.\r\nExtract the code in question in a standalone method so it could be tested. After the tests, the implementation is rewritten to reduce allocations.\r\nAn alternative and significantly shorter implementation is considered: `strMessage.ToString().TrimEnd('\\r', '\\n')` however uses significantly more memory, though it is slightly more performant.\r\n    ```\r\n    |      Method |       Mean |      Error |     StdDev | Ratio |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\r\n    |------------ |-----------:|-----------:|-----------:|------:|-------:|-------:|------:|----------:|\r\n    |    Original | 1,923.3 ns | 13.6586 ns | 12.1080 ns |  1.00 | 3.0899 | 0.0076 |     - |   19384 B |\r\n    |    Proposed |   207.7 ns |  0.8548 ns |  0.7995 ns |  0.11 | 0.0725 |      - |     - |     456 B |\r\n    |    Alt trim |   165.8 ns |  1.3424 ns |  1.1900 ns |  0.09 | 0.1631 | 0.0005 |     - |    1024 B |\r\n    ```\r\n*  `ComboBox.WndProc` appears to may have handled `WM_PRINTCLIENT` incorrectly in cases a combo had `FlatStyle.Popup` but with `UserPaint` style applied.\r\nFix the logic by handling `WM_PRINTCLIENT` message only if \r\n    * the control is painted by the system, and\r\n    * the control has flat style set to `Flat` or `Popup`\r\n* `SplitContainer.OnKeyDown`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- We did not have any reported issues directly attributable to the updated code. \r\nThe issue #1955 was found by @hughbe while developing unit tests. \r\nOther cases were discovered after [SCA SA1408 rule](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md) was enabled.\r\n\r\n## Regression? \r\n\r\n- No, it is likely the code had issues for a long time\r\n\r\n## Risk\r\n\r\n- Consumers who may have developed workarounds for the issues discovered may now be getting unexpected results.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual\r\n- CTI\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1985)","Url":"https://github.com/dotnet/winforms/pull/1985","RelatedDescription":"Open PR \"Fix conditional order of precedence\" (#1985)"},{"Id":"499311293","IsPullRequest":true,"CreatedAt":"2019-09-27T10:26:07","Actor":"v-zbsail","Number":"1983","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms release/3.1 | 20190927","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Loc update\r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1983)","Url":"https://github.com/dotnet/winforms/pull/1983","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms release/3.1 | 20190927\" (#1983)"},{"Id":"499342412","IsPullRequest":true,"CreatedAt":"2019-09-27T09:37:12","Actor":"hughbe","Number":"1984","RawContent":null,"Title":"Remove unused interop interfaces","State":"open","Body":"Extracted from https://github.com/dotnet/winforms/pull/1961\r\n\r\n## Proposed Changes\r\n- `IEnumConnectionPoints` is unused\r\n- `ITypeComp` is unused\r\n- `ITypeLib` is unused\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1984)","Url":"https://github.com/dotnet/winforms/pull/1984","RelatedDescription":"Open PR \"Remove unused interop interfaces\" (#1984)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-03T05:31:00.6259251Z","RunDurationInMilliseconds":838}