{"Data":{"Vue-Issues":{"Issues":[{"Id":"430192302","IsPullRequest":false,"CreatedAt":"2019-04-07T21:54:36","Actor":"halfpastfive","Number":"9844","RawContent":null,"Title":"assetsPath config option ignored when building with --watch ","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/halfpastfive/assetspath](https://github.com/halfpastfive/assetspath)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin the example project, outputDir and assetsDir are defined in vue.config.js\r\n\r\n1. build the project with `npm run build` and browse the `web` directory:  js files are copied in the `assets/` subdirectory\r\n\r\n2. build the project with `npm run watch` (which is only an alias for `vue-cli-service build --watch` in the package.json)  and browse the `web` directory: js files are copied at the root of the directory, ignoring the `assetsPath` option of the vue.config.js \r\n\r\n### What is expected?\r\nassets are copied in the directory defined by the `assetsPath` option from the vue.config.js file\r\n\r\n### What is actually happening?\r\nassets are copied in the directory defined by the outputPath directory, ignoring the `assetsPath` option\r\n\r\n---\r\nIn my real-world use case, the html files are templates for a server-side application. In this application, assets need to be in a subfolder in order to be considered as assets by our server. \r\n\r\nWithout it, I need to build for production, making debugging more difficult.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9844","RelatedDescription":"Closed issue \"assetsPath config option ignored when building with --watch \" (#9844)"},{"Id":"429936208","IsPullRequest":false,"CreatedAt":"2019-04-07T19:52:06","Actor":"patrickdavey","Number":"9832","RawContent":null,"Title":"Firefox context menu event also fires click handler.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/v63jz95o37](https://codesandbox.io/s/v63jz95o37)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the sandbox link, using Firefox, right click on the text, you'll see both the `contextmenu` click handler called, and the body `click` handler setup in the mounted hook.\r\n\r\n\r\n### What is expected?\r\nIt is expected that only the `contextmenu` handler should be called.\r\n\r\n### What is actually happening?\r\nThe contextmenu _and_ body \"click\" handler are called. This only happens in Firefox.\r\n\r\n---\r\nThere is a bug listed against Mozilla for this -> https://bugzilla.mozilla.org/show_bug.cgi?id=184051 but, it's 17 years old so perhaps it's a hard one to fix.  Other frameworks (I looked at Rails -> https://github.com/rails/rails/pull/34573 and Inferno -> https://github.com/infernojs/inferno/issues/1273 ) seem to have put a fix in place for this behavior.\r\n\r\nTotally fair enough if this is a \"won't fix\" as it really is a Firefox issue, but, if Vue could prevent it somehow, that would be great!\r\n\r\nI ran into this bug as I was creating a contexemenu component and I attached a click handler to the body to dismiss the contexemenu, unfortunately, in Firefox, this meant that the menu was shown and then immediately hidden again as the click handler was fired on the document.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9832","RelatedDescription":"Closed issue \"Firefox context menu event also fires click handler.\" (#9832)"},{"Id":"430166253","IsPullRequest":false,"CreatedAt":"2019-04-07T18:15:51","Actor":"johannes-z","Number":"9843","RawContent":null,"Title":"Passed attributes without a value should have undefined value in $attrs","State":"closed","Body":"### What problem does this feature solve?\r\nRight now, Vue `$attrs` does not differentiate if you pass an attribute with a value or without. For example all of these three options `<some-component checked checked=\"\" :checked=\"''\"/>` provide the same `$attrs` object: `{ \"checked\": \"\" }`. This makes it impossible for higher order components to differentiate between an attribute that's supposed to have a value, and an attribute that simple acts like a switch (e.g. disabled or checked). \r\n\r\nSee the repro: https://codesandbox.io/s/130p8ry4nj\r\n\r\n### What does the proposed API look like?\r\nInstead of assigning a default value, `\"\"` to it, the value should simply be `undefined` (`null` wouldn't work, since non-required props can be passed `null` to).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nEdit: I know that per definition there is no way of determining if an attribute is a boolean attribute or not.  Maybe this would have to be done by the vue compiler?","Url":"https://github.com/vuejs/vue/issues/9843","RelatedDescription":"Closed issue \"Passed attributes without a value should have undefined value in $attrs\" (#9843)"},{"Id":"430147996","IsPullRequest":false,"CreatedAt":"2019-04-07T13:50:03","Actor":"Aaron-Bird","Number":"9842","RawContent":null,"Title":"Memory leak when using \"transition\" and \"keep-alive\"","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/aaronbird/pen/JVRKwa](https://codepen.io/aaronbird/pen/JVRKwa)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI wrote a demo:  \r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n    <title>demo</title>\r\n    <style>\r\n      .link {\r\n        cursor: pointer;\r\n        user-select: none;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\r\n\r\n    <div id=\"app\">\r\n      <transition>\r\n        <keep-alive include=\"foo\">\r\n          <component :is=\"target\" @change=\"onChange\"></component>\r\n        </keep-alive>\r\n      </transition>\r\n    </div>\r\n    <script>\r\n      const Foo = {\r\n        name: \"foo\",\r\n        template: `<div class=\"link\" @click=\"$emit('change', 'bar')\">Go to Bar</div>`\r\n      };\r\n      const Bar = {\r\n        name: \"bar\",\r\n        template: `<div class=\"link\" @click=\"$emit('change', 'foo')\">Go to Foo</div>`\r\n      };\r\n      Vue.component(\"foo\", Foo);\r\n      Vue.component(\"bar\", Bar);\r\n      const app = new Vue({\r\n        data: {\r\n          target: \"foo\"\r\n        },\r\n        methods: {\r\n          onChange(target) {\r\n            this.target = target;\r\n          }\r\n        }\r\n      }).$mount(\"#app\");\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\n\r\nThe debugging process is as follows:  \r\n1 Click \"Collect garbage\" and \"Take heap snapshot\"(snapshot 1)  \r\n2 Click the routing button on the left 10 times, then click \"Collect garbage\" and \"Take heap snapshot\"(snapshot 2)   \r\n3 Click the routing button on the left 10 times, then click \"Collect garbage\" and \"Take heap snapshot\"(snapshot 3)   \r\n![](https://i.imgur.com/FCe40P6.gif)  \r\n\r\nThe generated \"snapshot\" is as follows:\r\n\r\nsnapshot 1:\r\n![](https://i.imgur.com/S49oSJo.png)  \r\nsnapshot 2:\r\n![](https://i.imgur.com/X1bbOgU.png)  \r\nsnapshot 3:\r\n![](https://i.imgur.com/lLD8z7Y.png)\r\nAfter clicking 100 times:  \r\n![](https://i.imgur.com/E0bjppJ.png)  \r\n\r\nVueComponent is not being recycled, is this a bug?  \r\n\r\n### What is expected?\r\nWhy is this happening, is this a bug?\r\n\r\n### What is actually happening?\r\nComponent will not be cleared when switching components.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9842","RelatedDescription":"Open issue \"Memory leak when using \"transition\" and \"keep-alive\"\" (#9842)"},{"Id":"430146782","IsPullRequest":false,"CreatedAt":"2019-04-07T13:37:57","Actor":"adityaraval","Number":"9841","RawContent":null,"Title":"Style not getting updated after computed property is called next time","State":"closed","Body":"We want the background-image of a cover to be updated after an api call.\r\n\r\nBelow is the code for template :\r\n\r\n`<div class=\"hero-image\" v-bind:style=\"{ 'background-image': 'url(' + getPhotoUrl + ')' }\">\r\n      <div class=\"trailer\" v-if=\"movie.TrailerLink\">\r\n        <a href>\r\n          <img src=\"static/images/trailer-btn.png\" alt>\r\n        </a>\r\n      </div>\r\n      <div class=\"image-overlay\"></div>\r\n    </div>`\r\n\r\nBelow is the code for computed api and computed :\r\n\r\n```<script>\r\nimport instance from \"../../api/axios-config\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"Details\",\r\n  data() {\r\n    return {\r\n      imageUrl: null,\r\n      movie: {\r\n        PeopleInMovies: []\r\n      },\r\n      index: 0,\r\n      selected: {}\r\n    };\r\n  },\r\n\r\n  computed: { \r\n    getPhotoUrl() {\r\n        let result = this.movie && this.movie.Photos ? this.GOOGLE_BUCKET_ENDPOINT + this.movie.Photos[0] : '';\r\n        return result\r\n    }\r\n  },\r\n\r\n  created() {\r\n    instance\r\n      .get(\"api/getmovie/?movieId=\" + this.$route.params.id)\r\n      .then(movie => {\r\n        this.movie = movie.data;\r\n      });\r\n  }\r\n};\r\n<script>````\r\n\r\nEven computed is called after api call but the result is not getting reflected in dom and background-image isn't set.","Url":"https://github.com/vuejs/vue/issues/9841","RelatedDescription":"Closed issue \"Style not getting updated after computed property is called next time\" (#9841)"},{"Id":"430142283","IsPullRequest":false,"CreatedAt":"2019-04-07T12:50:20","Actor":"Aaron-Bird","Number":"9840","RawContent":null,"Title":"Memory leak when using \"transition\" and \"keep-alive\"","State":"closed","Body":"Why are some \"Vue Component\" not cleared when using \"transition\" and \"keep-alive\"?\r\n\r\nI wrote a demo:\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n    <title>demo</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\r\n    <script src=\"https://unpkg.com/vue-router/dist/vue-router.js\"></script>\r\n\r\n    <div id=\"app\">\r\n      <transition>\r\n        <keep-alive include=\"foo\">\r\n          <router-view></router-view>\r\n        </keep-alive>\r\n      </transition>\r\n    </div>\r\n    <script>\r\n      const Foo = {\r\n        name: \"foo\",\r\n        template: `<div><router-link to=\"/bar\">Go to Bar</router-link></div>`\r\n      };\r\n      const Bar = {\r\n        name: \"bar\",\r\n        template: `<div><router-link to=\"/foo\">Go to Foo</router-link></div>`\r\n      };\r\n      const routes = [\r\n        { path: \"/foo\", component: Foo, alias: \"/\" },\r\n        { path: \"/bar\", component: Bar }\r\n      ];\r\n      const router = new VueRouter({\r\n        routes\r\n      });\r\n      const app = new Vue({\r\n        router\r\n      }).$mount(\"#app\");\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\nThe debugging process is as follows:  \r\n1 Click \"Collect garbage\" and \"take heap snapshot\"(snapshot 1)  \r\n2 Click the routing button on the left 10 times, then click \"Collect garbage\" and \"take heap snapshot\"(snapshot 2)  \r\n3 Click the routing button on the left 10 times, then click \"Collect garbage\" and \"take heap snapshot\"(snapshot 3)  \r\n![](https://i.imgur.com/Kk8LhAK.gif)  \r\n\r\nThe generated \"snapshot\" is as follows:\r\n\r\nsnapshot 1:\r\n![](https://i.imgur.com/9iO7gqD.png)  \r\nsnapshot 2:\r\n![](https://i.imgur.com/CvkAGS6.png)  \r\nsnapshot 3:\r\n![](https://i.imgur.com/HURrvNz.png)  \r\n\r\nVueComponent is not being recycled, is this a bug?","Url":"https://github.com/vuejs/vue/issues/9840","RelatedDescription":"Closed issue \"Memory leak when using \"transition\" and \"keep-alive\"\" (#9840)"},{"Id":"430051629","IsPullRequest":false,"CreatedAt":"2019-04-07T12:28:28","Actor":"d-ph","Number":"9838","RawContent":null,"Title":"$watch an Object using strict equality","State":"closed","Body":"### What problem does this feature solve?\r\nHi,\r\n\r\nI'd like to request a new option to the $watch() function that, in case of watching an instance of an Object or an Array, would make the watch callback be called only when the old instance is strictly unequal the new instance. This would offer an alternative to the current behaviour of always calling the watch callback when watching a non-primitive variable ([as per the following comment](https://github.com/vuejs/vue/blob/4f111f9225f938f7a2456d341626dbdfd210ff0c/src/core/observer/watcher.js#L184)).\r\n\r\nThe new option might be called something like: `strictObjectComparison: boolean;`.\r\n\r\nThe use case is a situation when a dev knows exactly what they're doing (i.e. watching an instance of a value object) and they want their watch callbacks to be called only if the instance changes.\r\n\r\nThis is somewhat related to this bug report: #6616. By adding the requested feature, the problem wouldn't occur. Frankly, I'm also affected by this idiosyncrasy of the framework and would really appreciate if I could just tell the framework that I know what I'm doing and that I'd like the watched Object to be compared strictly (i.e. with `===`) and nothing more.\r\n\r\nThank you.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nclass Person {\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nconst vm = new Vue({\r\n  data: {\r\n    people: [\r\n      new Person('Phil'),\r\n      new Person('Rob'),\r\n      new Person('Tom'),\r\n    ],\r\n    selectedPerson: null,\r\n  }\r\n});\r\n\r\nvm.$watch(\r\n  'selectedPerson', \r\n  () => { console.log(vm.selectedPerson); }, \r\n  { strictObjectCompare: true }\r\n);\r\n\r\n// should trigger the watch callback\r\nvm.selectedPerson = vm.people[0];\r\n\r\n// should not trigger the watch callback\r\nvm.selectedPerson = vm.people[0];\r\n\r\n// should trigger the watch callback\r\nvm.selectedPerson = vm.people[1];\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9838","RelatedDescription":"Closed issue \"$watch an Object using strict equality\" (#9838)"},{"Id":"430049178","IsPullRequest":false,"CreatedAt":"2019-04-07T11:08:56","Actor":"d-ph","Number":"9837","RawContent":null,"Title":"Shallow $watch()","State":"closed","Body":"### What problem does this feature solve?\r\nHi,\r\n\r\nI'd like to request a new option for the $watch() function: `shallow: boolean;`. This option would make watch callback function fire only if any of the first level values in an Array (a tuple) or on Object change. This would offer an alternative to the current behaviour of always calling the watch callback when watching a non-primitive variable (as per [the following comment](https://github.com/vuejs/vue/blob/4f111f9225f938f7a2456d341626dbdfd210ff0c/src/core/observer/watcher.js#L184)). It would also be a natural expansion of the `deep: boolean;` option.\r\n\r\nMoreover, the first level properties of the watched Arrays and Objects would _always_ be compared used strict equality comparison `===`, regardless of whether they are primitive values or Arrays/Objects. This is so that the same instances of a class would not trigger the watch callback, as nothing has changed (the use case is: observing an immutable value object).\r\n\r\nUse case 1: Watching a tuple, aka. watching many variables and having a single callback when any of the variables change. With the `shallow: true` option, it would be a very clean solution to current necessity of having to hash the tuple somehow (the easiest way is to `.join(',')` the tuple to produce a string, but not all tuples are made of primitive values, so that's not always this easy). Two tuples should evaluate equal, when all indexes of the old tuple are set to the same values in the new tuple, under the same indexes. It'd be a simple for-each loop that short-circuits on the first inequality in the old and the new tuple.\r\n\r\nUse case 2: Watching all keys in an Object. This is a very common use case and using `deep: true` for it is very often not ideal (especially, if the values in the watched Object are also Objects). As in use case 1, here the old and the new Objects would evaluate unequal (and therefore trigger the watch callback), when any of the keys in the old Object doesn't strict-equal the same key in the new Object. Also, if keys are missing or there are extra keys in the new Object, this should also be treated as a change and therefore trigger the watch callback. A common context for this use case is when the watched Object is a hashmap behaving as a \"form\", whose keys are form keys and values are either primitive variables or value objects. Watching such a hashmap with the proposed `shallow: true` option would be _a massive_ convenience (e.g. to run validation on every change in the form and enable/disable the submit button).\r\n\r\nIn angular 1, this feature is called [$watchCollection](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watchCollection).\r\n\r\nThank you.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nclass Person {\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nconst vm = new Vue({\r\n  data: {\r\n    dataHashmap: {\r\n      bartender: new Person('Phil'),\r\n      bouncer: new Person('Rob'),\r\n      janitor: new Person('Tom'),\r\n    }\r\n  }\r\n});\r\n\r\nvm.$watch(\r\n  'dataHashmap', \r\n  () => { console.log(vm.dataHashmap); }, \r\n  { shallow: true }\r\n);\r\n\r\nvm.$watch(\r\n  (vm) => { return [vm.dataHashmap.bartender, vm.dataHashmap.janitor]; }, \r\n  () => { console.log(vm.dataHashmap); }, \r\n  { shallow: true }\r\n);\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9837","RelatedDescription":"Closed issue \"Shallow $watch()\" (#9837)"},{"Id":"430075495","IsPullRequest":false,"CreatedAt":"2019-04-06T21:39:25","Actor":"fancydev18","Number":"9839","RawContent":null,"Title":"Please support \"productionTip\" in vue.config.js too","State":"closed","Body":"### What problem does this feature solve?\r\n Please support \"productionTip\" in vue.config.js too. Now it gives:\r\n\r\n ERROR  Invalid options in vue.config.js: \"productionTip\" is not allowed\r\n\r\nRelated issue: https://github.com/vuejs/vue/issues/7562\r\n\r\n### What does the proposed API look like?\r\nvue.config.js new property\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9839","RelatedDescription":"Closed issue \"Please support \"productionTip\" in vue.config.js too\" (#9839)"},{"Id":"430018175","IsPullRequest":false,"CreatedAt":"2019-04-06T12:39:43","Actor":"rightaway","Number":"9836","RawContent":null,"Title":"document.activeElement is wrong","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ktsLp3n0/](https://jsfiddle.net/ktsLp3n0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGo to the fiddle and open the console, and click between the form inputs and the page body.\r\n\r\n### What is expected?\r\nAnytime the blur event happens the console will show which element is active by printing `A` or `B` for the two form fields or `nothing` when the page body is active. The fiddle shows correct behavior because it's using Vue 2.5.22\r\n\r\n### What is actually happening?\r\nChange 2.5.22 to 2.6.0 in the `script` tag and you'll see the console always prints `nothing` which is incorrect.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9836","RelatedDescription":"Closed issue \"document.activeElement is wrong\" (#9836)"},{"Id":"429996573","IsPullRequest":false,"CreatedAt":"2019-04-06T04:39:56","Actor":"unickhow","Number":"9835","RawContent":null,"Title":"Is any possible to add mounted access in beforeMount ?","State":"closed","Body":"### What problem does this feature solve?\r\nI fetch api mostly in 'created' hook, but sometimes it took times while the DOM has already rendered, therefore I have to set a boolean data to determine whether the promise done (and v-if on the DOM ofc), so I wonder is there any way like vue router doning the beforeEach method, I have to next() once I set the beforeEach, otherwise I can't enter the router, just curious is there any concern or side effect this way ?\r\n\r\n### What does the proposed API look like?\r\nwithout beforeMount: \r\ncreated (fetch api) => mounted (no matter if the api done)\r\n\r\nwith beforeMount: \r\ncreated (do something else but fetch api) => beforeMount (fetch api and then call a function something like next()) => mounted (start render DOM after the promise done)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9835","RelatedDescription":"Closed issue \"Is any possible to add mounted access in beforeMount ?\" (#9835)"},{"Id":"429986981","IsPullRequest":true,"CreatedAt":"2019-04-06T02:19:12","Actor":"vue-bot","Number":"9834","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9834","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9834)"},{"Id":"429940224","IsPullRequest":false,"CreatedAt":"2019-04-06T01:07:31","Actor":"joakimbugge","Number":"9833","RawContent":null,"Title":"Class based component with JSX causes TS2322 error","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/b5z23ohp/1/](https://jsfiddle.net/b5z23ohp/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Create a new project using @vue/cli, choose class based components and enable Typescript.\r\n2) Create a simple component using JSX, e.g.\r\n\r\n```\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class Button extends Vue {\r\n  public render() {\r\n    return <button class=\"button\" type=\"button\">{this.$slots.default}</button>;\r\n  }\r\n}\r\n```\r\n\r\n3) Create another component and import the first component\r\n\r\n```\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport Button from './Button';\r\n\r\n@Component\r\nexport default class PrimaryButton extends Vue {\r\n  public render() {\r\n    return <Button class=\"primary-button\">{this.$slots.default}</Button>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nNo errors\r\n\r\n### What is actually happening?\r\nTypescript reports error TS2322. Any property will cause this error, event built-in properties like `class` and `style`.\r\n\r\n```\r\n Type '{ class: string; }' is not assignable to type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Record<string, any>>, Record<string, any>>'.\r\n  Property 'class' does not exist on type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Record<string, any>>, Record<string, any>>'.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/2697311/55657068-608f7b80-57f9-11e9-9b4d-44f840b96502.png)\r\n\r\n---\r\n* TypeScript: v3.4.1\r\n* Vue: v2.6.10\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9833","RelatedDescription":"Closed issue \"Class based component with JSX causes TS2322 error\" (#9833)"},{"Id":"429912347","IsPullRequest":false,"CreatedAt":"2019-04-05T20:01:03","Actor":"jwanggggg","Number":"9831","RawContent":null,"Title":"npm Install Failed","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue](https://github.com/vuejs/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n$ git clone https://github.com/vuejs/vue.git\r\n\r\n$ cd vue\r\n\r\n$ npm install\r\n\r\n$ npm test\r\n\r\n  97:15  error  Parsing error: Export 'SimpleSet' is not defined\r\n\r\n  95 | \r\n  96 | export { _Set }\r\n> 97 | export type { SimpleSet }\r\n     |               ^\r\n  98 | \r\n\r\n✖ 1 problem (1 error, 0 warnings)\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! vue@2.6.10 lint: `eslint src scripts test`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the vue@2.6.10 lint script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n```\r\n\r\n### What is expected?\r\nTests complete successfully.\r\n\r\n### What is actually happening?\r\nTests fail due to Export 'SimpleSet' not being defined.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9831","RelatedDescription":"Closed issue \"npm Install Failed\" (#9831)"},{"Id":"429865702","IsPullRequest":false,"CreatedAt":"2019-04-05T17:41:54","Actor":"carlos00027","Number":"9830","RawContent":null,"Title":"Property or method \"_isBuffer\" is not defined on the instance but referenced during render. ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\nvue.common.dev.js?e87b:630 [Vue warn]: Property or method \"_isBuffer\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\nthis happened today suddenly, only when in debug mode I enter the VUE tab, the rest is ok, I use laravel + npm run watch with modular vue\r\n","Url":"https://github.com/vuejs/vue/issues/9830","RelatedDescription":"Closed issue \"Property or method \"_isBuffer\" is not defined on the instance but referenced during render. \" (#9830)"},{"Id":"429831531","IsPullRequest":true,"CreatedAt":"2019-04-05T16:09:58","Actor":"jansiegel","Number":"9829","RawContent":null,"Title":"fix(core): fix casting symbol values to strings in the prop type chec…","State":"open","Body":"…k warning\r\n\r\nIf the default value of the prop in the prop definition doesn't match the type of the prop, it should throw a warning, but instead it throws a `TypeError` when the default value is defined as a `Symbol`, e.g.:\r\n```\r\ntestProp: {\r\n    type: Number,\r\n    default: Symbol('foo')\r\n};\r\n```\r\n*expected*: `Invalid prop: type check failed for prop \"testProp\". Expected Number, got Symbol`\r\n*currently*: `TypeError: Cannot convert a Symbol value to a number`\r\n\r\nThis PR changes the symbol->string casting from `\"\" + value` to `String(value)`, as the first approach doesn't work well with symbols.\r\nAlso, I've added an `isSymbol` check, so it doesn't try to read the \"value\" of the symbol in the message warning + tests.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9829","RelatedDescription":"Open PR \"fix(core): fix casting symbol values to strings in the prop type chec…\" (#9829)"},{"Id":"429778016","IsPullRequest":true,"CreatedAt":"2019-04-05T14:18:07","Actor":"vue-bot","Number":"9828","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9828","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9828)"},{"Id":"429777927","IsPullRequest":true,"CreatedAt":"2019-04-05T14:17:50","Actor":"vue-bot","Number":"9827","RawContent":null,"Title":"[automated] Patreon backers update (Apr 2019","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9827","RelatedDescription":"Closed or merged PR \"[automated] Patreon backers update (Apr 2019\" (#9827)"},{"Id":"429705288","IsPullRequest":false,"CreatedAt":"2019-04-05T11:32:50","Actor":"berkansivri","Number":"9825","RawContent":null,"Title":"Object prop watcher with ES6 syntax (cannot reach vue instance)","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8rdwvute/](https://jsfiddle.net/8rdwvute/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm newbie in vue (love it) and also js world. I realized a bug (if it is) when I try to watch my object's property.\r\n\r\nI could not reach my vue instance in watcher, in ES6 syntax.\r\n\r\n```\r\nwatch:{\r\n    \"obj.foo\": function() {\r\n    \tconsole.log(this.obj)   //No problem\r\n    },\r\n    \"obj.bar\": () => {\r\n    \tconsole.log(this.obj)  //Undefined\r\n    },\r\n},\r\n\r\n```\r\n\r\n### What is expected?\r\nReach to vue instance\r\n\r\n### What is actually happening?\r\nVue instance undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9825","RelatedDescription":"Closed issue \"Object prop watcher with ES6 syntax (cannot reach vue instance)\" (#9825)"},{"Id":"429707844","IsPullRequest":false,"CreatedAt":"2019-04-05T11:29:46","Actor":"luneice","Number":"9826","RawContent":null,"Title":"跨平台解决方案","State":"closed","Body":"### What problem does this feature solve?\r\n有没有一个基于Vue的框架可以做到专注于前端的开发，但同时可以生成小程序的代码？\r\n\r\n### What does the proposed API look like?\r\n比如滴滴开源的变色龙框架\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9826","RelatedDescription":"Closed issue \"跨平台解决方案\" (#9826)"},{"Id":"429396023","IsPullRequest":false,"CreatedAt":"2019-04-04T17:25:15","Actor":"andrewgorpenko","Number":"9824","RawContent":null,"Title":"v-bind disabled boolean not reactive","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/dcmyr724/](https://jsfiddle.net/dcmyr724/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate the input with the type \"number\" and the button. Add disabled prop to the button with the check (if number === 1).\r\n\r\n### What is expected?\r\nThe button must be disabled is the input equals 1. Note that the value can be changed by the num-pad, arrow keys or input scroll buttons.\r\n\r\n### What is actually happening?\r\nThe button is disabled only when the page is loaded. Further changes do not add disabled prop to the button.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9824","RelatedDescription":"Closed issue \"v-bind disabled boolean not reactive\" (#9824)"},{"Id":"429291561","IsPullRequest":false,"CreatedAt":"2019-04-04T13:51:23","Actor":"nathnolt","Number":"9823","RawContent":null,"Title":"Option tag with v-for causing DOM nodes memory leak","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/rcmo2Lwx/1/](https://jsfiddle.net/rcmo2Lwx/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPress the toggle button.\r\n\r\n### What is expected?\r\nThat the garbage collector clears all the nodes\r\n\r\n### What is actually happening?\r\nNot all nodes are cleared\r\n\r\n---\r\nHow to see the garbage collection\r\nOpen the fiddle in  https://fiddle.jshell.net/rcmo2Lwx/1/show/light/ (single view of the jsFiddle, so you can open devtools)\r\n\r\nOpen dev tools -> performance tab->record\r\n\r\nPress toggle a bunch of times (or hold enter to keep activating it)\r\n\r\nStop recording\r\n\r\nKeyed version\r\nhttps://fiddle.jshell.net/rcmo2Lwx/2/\r\nhttps://fiddle.jshell.net/rcmo2Lwx/2/show/light/\r\n\r\nThe same issue is still happening\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9823","RelatedDescription":"Open issue \"Option tag with v-for causing DOM nodes memory leak\" (#9823)"},{"Id":"429253719","IsPullRequest":false,"CreatedAt":"2019-04-04T12:34:56","Actor":"Akryum","Number":"9822","RawContent":null,"Title":"Transition   Functional comp causes error in Jest tests: Cannot read property '_isDestroyed' of undefined","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/Akryum/vue-issue-test-transition-functional](https://github.com/Akryum/vue-issue-test-transition-functional)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUsing a `<transition>` on a stubbed functional component is throwing an error during the unit tests with Jest (using `shallowMount`).\r\n\r\nExamples: [Component](https://github.com/Akryum/vue-issue-test-transition-functional/blob/master/src/components/Test.vue) | [Test](https://github.com/Akryum/vue-issue-test-transition-functional/blob/master/tests/unit/Test.spec.js)\r\n\r\nIn the reprod, run:\r\n\r\n```\r\nyarn install\r\nyarn run test:unit\r\n```\r\n\r\n### What is expected?\r\nNo error in the console\r\n\r\n### What is actually happening?\r\nThe tests pass but an error is displayed in the console:\r\n\r\n```\r\n[Vue warn]: Error in nextTick: \"TypeError: Cannot read property '_isDestroyed' of undefined\"\r\n```\r\n\r\n[Position of the error](https://github.com/vuejs/vue/blob/b9de23b1008b52deca7e7df40843e318a42f3f53/src/core/vdom/create-component.js#L89)\r\n\r\n---\r\nNot sure if this should be fixed in Vue core or Vue test utils.\r\n\r\nIn Vue core, a quick fix would be to check if `componentInstance` is defined on the vnode [here](https://github.com/vuejs/vue/blob/b9de23b1008b52deca7e7df40843e318a42f3f53/src/core/vdom/create-component.js#L89).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9822","RelatedDescription":"Open issue \"Transition   Functional comp causes error in Jest tests: Cannot read property '_isDestroyed' of undefined\" (#9822)"},{"Id":"429229829","IsPullRequest":false,"CreatedAt":"2019-04-04T11:55:57","Actor":"ehsanbagherzadegan","Number":"9821","RawContent":null,"Title":"props is available just in <template>","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/boilerplate/vue](https://jsfiddle.net/boilerplate/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nparent  :\r\n\r\n<child-comp :user=\"user\"></child-comp>\r\n\r\nchild :\r\nprops:['user']\r\n<template>\r\n{{user}}  ----->work correctly\r\n</template>\r\n<script>\r\nmethods:{\r\nx(){\r\n     console.log(this.user); ---->dont work\r\n   }\r\n}\r\nmounted(){\r\n       console.log(this.user); ---->dont work\r\n   },\r\ncreated(){\r\n      console.log(this.user); ---->dont work\r\n}\r\n}\r\n</script>\r\n\r\n### What is expected?\r\ni pass data from parent component into child component and its available in template by {{}} but when i try use this props in methods or created or mounted this props is undifined its not really useable if just props available by {{}} in template i think it must available in created mounted and any methods\r\n\r\nparent  :\r\n\r\n>  child-comp :user='user'  /child-comp   \r\n\r\nchild :\r\nprops:['user']\r\n<template>\r\n{{user}}  ----->work correctly\r\n</template>\r\n<script>\r\nmethods:{\r\nx(){\r\n     console.log(this.user); ---->dont work\r\n   }\r\n}\r\nmounted(){\r\n       console.log(this.user); ---->dont work\r\n   },\r\ncreated(){\r\n      console.log(this.user); ---->dont work\r\n}\r\n}\r\n</script>\r\n\r\n\r\nbest regards\r\n\r\n### What is actually happening?\r\nprops just available by {{}} and just into <template>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9821","RelatedDescription":"Closed issue \"props is available just in <template>\" (#9821)"},{"Id":"429063779","IsPullRequest":false,"CreatedAt":"2019-04-04T03:39:51","Actor":"sumancholleti","Number":"9820","RawContent":null,"Title":"how to add Css and template dynamically from string with vue.comonent","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nbkhqvf9/](https://jsfiddle.net/nbkhqvf9/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nlet cssCode =`My css which is coming from backend api as a string`\r\n var MyComponent = Vue.extend({\r\n            template: `<div>My HTML CODE</div>`,\r\n           \r\n          })\r\n\r\n          Vue.component('my-component', MyComponent);\r\n\r\n### What is expected?\r\nMy style should get appended to mycomponent\r\n\r\n### What is actually happening?\r\nstyle doesn't get applied\r\n\r\n---\r\nHow do i add <style tag scoped> with my css to mycomponent\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9820","RelatedDescription":"Closed issue \"how to add Css and template dynamically from string with vue.comonent\" (#9820)"},{"Id":"429047191","IsPullRequest":false,"CreatedAt":"2019-04-04T01:53:18","Actor":"hardphp","Number":"9819","RawContent":null,"Title":"前后端完全分离--管理员端基于vue+element-ui+vue-cli3解决方案https://github.com/hardphp/vue-admin","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n前后端完全分离--管理员端基于vue+element-ui+vue-cli3解决方案https://github.com/hardphp/vue-admin\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9819","RelatedDescription":"Closed issue \"前后端完全分离--管理员端基于vue+element-ui+vue-cli3解决方案https://github.com/hardphp/vue-admin\" (#9819)"},{"Id":"429046769","IsPullRequest":false,"CreatedAt":"2019-04-04T01:51:19","Actor":"hardphp","Number":"9818","RawContent":null,"Title":"前后端完全分离--管理员端基于vue+vue-cli3解决方案","State":"closed","Body":"地址：https://github.com/hardphp/vue-admin","Url":"https://github.com/vuejs/vue/issues/9818","RelatedDescription":"Closed issue \"前后端完全分离--管理员端基于vue+vue-cli3解决方案\" (#9818)"},{"Id":"428945404","IsPullRequest":false,"CreatedAt":"2019-04-03T21:57:14","Actor":"theianjohnson","Number":"9817","RawContent":null,"Title":"Vue removing <style> tags, but not <script> tags","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/RObpZb](https://codepen.io/anon/pen/RObpZb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nYou may need to delete/retype a character to trigger the CodePen to refresh the console\r\n\r\n### What is expected?\r\nThe text color should be orange (because Vue shouldn't be stripping the <style> tag out)\r\n\r\n### What is actually happening?\r\nThe text color is black\r\n\r\n---\r\nWe ran into this bug while converting an enterprise SaaS app to Vue - it's a slow migration with tons of old inline <script> and <style> tags, and while I understand it's bad practice (and Vue complains about that) it seems like Vue should at least be consistent in not _removing_ <style> tags just as it doesn't remove <script> tags\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9817","RelatedDescription":"Closed issue \"Vue removing <style> tags, but not <script> tags\" (#9817)"},{"Id":"428626123","IsPullRequest":false,"CreatedAt":"2019-04-03T08:21:48","Actor":"aarongeorge","Number":"9816","RawContent":null,"Title":"Issue binding namespaced actions with @click","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/AaronGeorge/pen/KYdvaL?editors=1010](https://codepen.io/AaronGeorge/pen/KYdvaL?editors=1010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have two buttons, one is labelled \"Working todoToggle\" the other \"Broken todoToggle\"\r\n\r\nClicking \"Working todoToggle\" will toggle the first item in the store, however clicking \"Broken todoToggle\" throws an error in console.\r\n\r\n### What is expected?\r\nBinding a namespaced action with `@click=\"namespace/action\"` should call the action\r\n\r\n### What is actually happening?\r\nBinding a namespaced action with `@click=\"namespace/action\"` is throwing an error\r\n\r\n---\r\nI know that I can call a namespaced action, but it requires passing the namespace to `mapActions` and I am wondering why I can't actually include the namespace in the `@click` handler.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9816","RelatedDescription":"Closed issue \"Issue binding namespaced actions with @click\" (#9816)"},{"Id":"428527960","IsPullRequest":false,"CreatedAt":"2019-04-03T02:13:19","Actor":"yulei745","Number":"9815","RawContent":null,"Title":"是否支持es6 class 语法定义组件","State":"closed","Body":"### What problem does this feature solve?\r\n是否支持es6 class 语法定义组件\r\n\r\n### What does the proposed API look like?\r\n```\r\nclass MyComponent {\r\n   render() {\r\n   }\r\n}\r\n```\r\n类似这种形式的。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9815","RelatedDescription":"Closed issue \"是否支持es6 class 语法定义组件\" (#9815)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"429297868","IsPullRequest":false,"CreatedAt":"2019-04-04T14:03:06","Actor":"surplus-cat","Number":"2694","RawContent":null,"Title":"路由采用require方式引入正常显示，但是采用懒加载的形式引入，组件无法显示在页面。","State":"closed","Body":"HomeMain: require('@/views/index/mainIndex.vue'), 这种形式引入可以正常访问；\r\n\r\nconst view = (path) => {\r\n  return r => require.ensure([], () => r(require(`@/views/${path}.vue`)), 'thunk')\r\n}；\r\n\r\nAddArticle: view('article/addArticle'), 而这种类型的引入 却无法显示，通过开发者工具查看无Dom元素\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2694","RelatedDescription":"Closed issue \"路由采用require方式引入正常显示，但是采用懒加载的形式引入，组件无法显示在页面。\" (#2694)"},{"Id":"429168317","IsPullRequest":false,"CreatedAt":"2019-04-04T09:18:22","Actor":"sarkiroka","Number":"2693","RawContent":null,"Title":"How can I use multiple, or parameterized baseurl?","State":"closed","Body":"### What problem does this feature solve?\r\nI have a page with many many (near 100) routes, and every route depends on a parameter. So my router config something like that:\r\n\r\nbase: '/static'\r\n...\r\npath: '/:productId/x' -> for module x\r\npath: '/:productId/y' -> for module y\r\n...\r\nCan I use the base for store parameter?\r\nFor example something like this:\r\n\r\nbase: '/static/:productId'\r\n...\r\npath: '/x' -> for module x\r\npath: '/y' -> for module y\r\n...\r\nBecause less code less errors :)\r\n\r\n### What does the proposed API look like?\r\n```\r\n{\r\n...\r\nbase: '/static/:productId'\r\n...\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2693","RelatedDescription":"Closed issue \"How can I use multiple, or parameterized baseurl?\" (#2693)"},{"Id":"429143387","IsPullRequest":false,"CreatedAt":"2019-04-04T08:20:57","Actor":"sarkiroka","Number":"2692","RawContent":null,"Title":"How can I use multiple, or parameterized baseurl?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI have a page with many many (near 100) routes, and every route depends on a parameter. So my router config something like that:\r\n```\r\nbase: '/static'\r\n...\r\npath: '/:productId/x' -> for module x\r\npath: '/:productId/y' -> for module y\r\n...\r\n```\r\nCan I use the base for store parameter?\r\nFor example something like this:\r\n```\r\nbase: '/static/:productId'\r\n...\r\npath: '/x' -> for module x\r\npath: '/y' -> for module y\r\n...\r\n```\r\nBecause less code less errors :)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2692","RelatedDescription":"Closed issue \"How can I use multiple, or parameterized baseurl?\" (#2692)"},{"Id":"427593960","IsPullRequest":false,"CreatedAt":"2019-04-01T09:13:09","Actor":"jacobp100","Number":"2691","RawContent":null,"Title":"[Docs/Examples] Data Fetching Example has Race Condition","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/advanced/data-fetching.html#fetching-after-navigation](https://router.vuejs.org/guide/advanced/data-fetching.html#fetching-after-navigation)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nLoad the page with `?id=abc`\r\nHave the initial `getPost` request take 3 seconds to complete\r\nAfter 1 second, navigate to the page again, but with `?id=def`\r\nHave the subsequent `getPost` request take 1 second to complete\r\nWait 2 seconds\r\n\r\n### What is expected?\r\nWe show the data for id=def\r\n\r\n### What is actually happening?\r\nWe show the data for id=abc\r\n\r\n---\r\nI'm not sure what the correct fix is\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2691","RelatedDescription":"Open issue \"[Docs/Examples] Data Fetching Example has Race Condition\" (#2691)"},{"Id":"427499160","IsPullRequest":false,"CreatedAt":"2019-04-01T07:08:22","Actor":"trandaison","Number":"2690","RawContent":null,"Title":"Expose a way to get route string from a router object.","State":"closed","Body":"### What problem does this feature solve?\r\nI think it would be nice if there is a helper function that parse an object to an URL based on matched route from routers list. \r\n\r\nCurrently, we have to use `<router-link>` and bind that object to `:to`, but what if I want to bind a `<a :href=\"\">`?\r\n\r\n```html\r\n<a :href=\"`/video/${video.id}`?t=${video.t}`\">\r\n```\r\nThis is ok. However, sometimes, the route path changes (for example: `/videos` instead of `/video`), in that case we have to find all the `<a>` and replace with the new path, I don't think it's a good idea.\r\n\r\nBut if we use the route name instead of the path, it will work despite of changing route path.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nthis.$router.parseURL({ name: 'Video', params: { id: 'funny-video' }, query: { t: 200 } })\r\n\r\n// /video/funny-video?t=200\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2690","RelatedDescription":"Closed issue \"Expose a way to get route string from a router object.\" (#2690)"},{"Id":"427248544","IsPullRequest":true,"CreatedAt":"2019-03-30T06:13:24","Actor":"zrh122","Number":"2689","RawContent":null,"Title":"fix(router-view): register instance in init hook (fix #2561)","State":"open","Body":"close #2561\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2689","RelatedDescription":"Open PR \"fix(router-view): register instance in init hook (fix #2561)\" (#2689)"},{"Id":"426632596","IsPullRequest":false,"CreatedAt":"2019-03-28T17:58:02","Actor":"posva","Number":"2688","RawContent":null,"Title":"Support array syntax for guards","State":"open","Body":"### What problem does this feature solve?\r\nThis will allow splitting guard logic in smaller functions and making it easy to chain them. It's similar to express middlewares\r\n\r\n### What does the proposed API look like?\r\n```js\r\n{ path: '/some', beforeEach: [authGuard, adminGuard], afterEach: [after1, after2] }\r\n\r\n// in component\r\nbeforeRouteEnter: [authGuard, adminGuard],\r\nbeforeRouteUpdate: [authGuard, adminGuard],\r\nbeforeRouteLeave: [confirmGuard, doubleConfirmGuard]\r\n```\r\n\r\ncurrent solution to this: https://www.npmjs.com/package/vue-router-multiguard\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2688","RelatedDescription":"Open issue \"Support array syntax for guards\" (#2688)"},{"Id":"426630857","IsPullRequest":false,"CreatedAt":"2019-03-28T17:54:19","Actor":"ColinLaws","Number":"2687","RawContent":null,"Title":"Multiple guards on one route","State":"closed","Body":"### What problem does this feature solve?\r\nMy application contains routes that require multiple layers of validation to run before proceeding to them. Some of my routes must have an 'Organization' selected. If a user attempts to hit the route without having an organization selected, they are redirected to another route to set up an organization. All of my routes require that a user is authenticated, or else they are redirected to my auth server.\r\n\r\nI understand that it is possible to nest each of my guards in one single guard; however, I have unique combinations of guards per route (not all routes have the same guards), which makes it difficult to express the requirements of a route without writing a guard to contain each guard the route requires (versus something easier and more expressive, such as an array).\r\n\r\nIn my opinion, this is clearly a responsibility of the framework to support this. I have heard the arguments that you can write one guard that contains each guard inside of it, but is that really a solution when we have multiple people asking for this feature? If many consumers of Vue require this feature, and they're all writing their own implementations to support this functionality, it should be absorbed into the framework.\r\n\r\nThe problem is common enough to justify given the strong support demonstrated by Issue #721\r\n\r\n### What does the proposed API look like?\r\n```\r\nlet router = new VueRouter({\r\n    routes: [\r\n        {\r\n            path: '/dashboard',\r\n            name: 'dashboard',\r\n            component: ...,\r\n            beforeEach: [guard1, guard2],    // Each guard is a function accepting (to, from, next)\r\n        }\r\n});\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2687","RelatedDescription":"Closed issue \"Multiple guards on one route\" (#2687)"},{"Id":"426629856","IsPullRequest":false,"CreatedAt":"2019-03-28T17:52:08","Actor":"ColinLaws","Number":"2686","RawContent":null,"Title":"Feature request: Multiple Route Guards","State":"closed","Body":"What problem does this feature solve?\r\nMy application contains routes that require multiple layers of validation to run before proceeding to them. Some of my routes must have an 'Organization' selected. If a user attempts to hit the route without having an organization selected, they are redirected to another route to set up an organization. All of my routes require that a user is authenticated, or else they are redirected to my auth server.\r\n\r\nI understand that it is possible to nest each of my guards in one single guard; however, I have unique combinations of guards per route (not all routes have the same guards), which makes it difficult to express the requirements of a route without writing a guard to contain each guard the route requires (versus something easier and more expressive, such as an array).\r\n\r\nIn my opinion, this is clearly a responsibility of the framework to support this. I have heard the arguments that you can write one guard that contains each guard inside of it, but is that really a solution when we have multiple people asking for this feature? If many consumers of Vue require this feature, and they're all writing their own implementations to support this functionality, it should be absorbed into the framework.\r\n\r\nThe problem is common enough to justify given the strong support demonstrated by Issue #721\r\n\r\nWhat does the proposed API look like?\r\n```\r\nlet router = new VueRouter({\r\n    routes: [\r\n        {\r\n            path: '/dashboard',\r\n            name: 'dashboard',\r\n            component: ...,\r\n            beforeEach: [guard1, guard2],    // Each guard is a function accepting (to, from, next)\r\n        }\r\n});\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2686","RelatedDescription":"Closed issue \"Feature request: Multiple Route Guards\" (#2686)"},{"Id":"426629377","IsPullRequest":false,"CreatedAt":"2019-03-28T17:50:58","Actor":"ColinLaws","Number":"2685","RawContent":null,"Title":"Feature request: Multiple Route Guards","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  \r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2685","RelatedDescription":"Closed issue \"Feature request: Multiple Route Guards\" (#2685)"},{"Id":"426266910","IsPullRequest":true,"CreatedAt":"2019-03-28T08:28:18","Actor":"songzeng2016","Number":"2681","RawContent":null,"Title":"docs(zn): fix wrong characters in","State":"closed","Body":"fix wrong characters in zh-cn doc.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2681","RelatedDescription":"Closed or merged PR \"docs(zn): fix wrong characters in\" (#2681)"},{"Id":"426348821","IsPullRequest":false,"CreatedAt":"2019-03-28T07:57:59","Actor":"tanglianghong","Number":"2684","RawContent":null,"Title":"How to cache iframe for emergency help <keep-alive>?","State":"closed","Body":"This is one of my iframe components. When I switch to other tabs, I load iframe again when I switch back. How can I not load it?\r\n\r\n![20190328155535](https://user-images.githubusercontent.com/23239894/55140098-3ba06600-5172-11e9-987f-5bc075e8593b.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2684","RelatedDescription":"Closed issue \"How to cache iframe for emergency help <keep-alive>?\" (#2684)"},{"Id":"426346570","IsPullRequest":false,"CreatedAt":"2019-03-28T07:51:46","Actor":"tanglianghong","Number":"2683","RawContent":null,"Title":"紧急求助 <keep-alive> 怎么缓存iframe?","State":"closed","Body":"<template>\r\n  <keep-alive>\r\n    <iframe id=\"show-iframe\" width='100%' frameborder=0 name=\"showHere\" scrolling=auto :src='src'></iframe>\r\n  </keep-alive>\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      src: '@/FS_WEB_AGENT/test_foss.html?workno=1036&pwd=123456&isOpen=developmentTest'\r\n    }\r\n  },\r\n  mounted() {\r\n    const oIframe = document.getElementById('show-iframe')\r\n    const deviceHeight = document.documentElement.clientHeight\r\n    oIframe.style.height = (deviceHeight - 88) + 'px'\r\n  }\r\n}\r\n</script>\r\n\r\n这是我某个iframe组件。当我切换到其他tab的时候，再切换回来 又会加载一遍iframe，怎么样不加载呢","Url":"https://github.com/vuejs/vue-router/issues/2683","RelatedDescription":"Closed issue \"紧急求助 <keep-alive> 怎么缓存iframe?\" (#2683)"},{"Id":"426332498","IsPullRequest":false,"CreatedAt":"2019-03-28T07:09:42","Actor":"cyanwin","Number":"2682","RawContent":null,"Title":"Vue Router History mode can't save query params","State":"closed","Body":"Some router path use query params.\r\nFor example 'localhost: 8080?aaa=1' it can't work, refresh page query will be empty","Url":"https://github.com/vuejs/vue-router/issues/2682","RelatedDescription":"Closed issue \"Vue Router History mode can't save query params\" (#2682)"},{"Id":"426263940","IsPullRequest":true,"CreatedAt":"2019-03-28T02:26:44","Actor":"songzeng2016","Number":"2680","RawContent":null,"Title":" fix wrong characters in zh-cn doc.","State":"closed","Body":"fix wrong characters in zh-cn doc.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2680","RelatedDescription":"Closed or merged PR \" fix wrong characters in zh-cn doc.\" (#2680)"},{"Id":"426067373","IsPullRequest":false,"CreatedAt":"2019-03-27T17:01:29","Actor":"claudiolcastro","Number":"2679","RawContent":null,"Title":"Error on decoding ISO-8859-1 words","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/ZPdOxa?editors=1010](https://codepen.io/anon/pen/ZPdOxa?editors=1010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFirst click on the \"Test Ok\" link and see the route populate the $this.route.query.q. Then, click on the \"Test fail\" and see the route chash and not populate the $this.route.query.q.\r\n\r\n### What is expected?\r\nIt was expected that the router converted the \"test%E9\" to \"testé\" and populate the this.$route.query.q. \r\n\r\n### What is actually happening?\r\nVue-router is failing to populate the this.$route.query.q.\r\n\r\n---\r\nBy debugging the code,  I realized  that the `decodeURIComponent` does not work properly with  ISO-8859-1 words. In other hand, the `unescape` method works well.\r\n\r\nExample below:\r\n\r\n```\r\ntext = 'test%E9'\r\n> \"test%E9\"\r\n\r\ndecodeURIComponent(text)\r\n> VM568:1 Uncaught URIError: URI malformed\r\n    at decodeURIComponent (<anonymous>)\r\n    at <anonymous>:1:1\r\n\r\nunescape(text)\r\n> \"testé\"\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2679","RelatedDescription":"Closed issue \"Error on decoding ISO-8859-1 words\" (#2679)"},{"Id":"426045309","IsPullRequest":false,"CreatedAt":"2019-03-27T15:58:00","Actor":"claudiolcastro","Number":"2678","RawContent":null,"Title":"Error on decoding ISO-8859-1 words","State":"closed","Body":"Hey,\r\n\r\nI'm having an error when a pass a word encoded in  ISO-8859-1 as query to the router.\r\n\r\nIt's seems that `var decode = decodeURIComponent;` can not handle iso words. It's crash the entire route, and does not return any error.\r\n\r\nBy debbunging the code i saw that the `decodeURIComponent` return `\"Uncaught URIError: URI malformed\"`\r\n\r\nA solution for this, i think would be replace the `decodeURIComponent`  for `unescape` method, that i've tested and it worked well. **But i realise that `unescape` method is deprecated**\r\n\r\nSo, anyone have any idea how to solve this problem?\r\n\r\nThanks\r\n\r\nhttps://github.com/vuejs/vue-router/blob/b8e7b7a7bc61d853c581af5541925e388f36fcd0/src/util/query.js#L46","Url":"https://github.com/vuejs/vue-router/issues/2678","RelatedDescription":"Closed issue \"Error on decoding ISO-8859-1 words\" (#2678)"},{"Id":"426004468","IsPullRequest":false,"CreatedAt":"2019-03-27T14:50:09","Actor":"EvanBurbidge","Number":"2677","RawContent":null,"Title":"Page refresh after addRoutes method fails to load the new route","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/EvanBurbidge/vue-router-tester](https://github.com/EvanBurbidge/vue-router-tester)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Clone the project\r\n- Install dependencies\r\n- Run the project\r\n- Navigate to /testing\r\n- reload the page\r\n- then navigate to the about page\r\n- navigate to the foo link\r\n- reload the page\r\n\r\n### What is expected?\r\nWhen I reload the page the tester component is fetched for the /testing route. Or when I navigate to the foo component and reload the page I should see the same component load. \r\n\r\n### What is actually happening?\r\nWhen we reload the page I expect the component assigned to that route to be present, however it does not load on page refresh, the router is setup within a parent component and on page refresh this data is lost. Looking at the router.options.routes I can see that it is not modified with a new route when we call the addRoutes method. When trying to store the configuration in localStorage / sessionStorage we lose the import part of the component.\r\n\r\n---\r\nWhile this method is handy for adding new routes to the router, you will never know when a user is going to reload their browser, if some data goes wrong or something like that, therefore we should probably ensure that this method allows us to easily add new routes that will persist through a page refresh, if I am 2/ 3 child levels deep into a set of components then when I refresh I should see those components not a blank screen.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2677","RelatedDescription":"Closed issue \"Page refresh after addRoutes method fails to load the new route\" (#2677)"},{"Id":"426004367","IsPullRequest":false,"CreatedAt":"2019-03-27T14:48:24","Actor":"EvanBurbidge","Number":"2676","RawContent":null,"Title":"Page refresh after addRoutes method fails to load the new route and components","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/EvanBurbidge/vue-router-tester](https://github.com/EvanBurbidge/vue-router-tester)\r\n\r\n### Steps to reproduce\r\n- Clone the project\r\n- Install dependencies\r\n- Run the project\r\n- Navigate to /testing\r\n- reload the page\r\n- then navigate to the about page\r\n- navigate to the foo link\r\n- reload the page\r\n\r\n### What is expected?\r\nWhen I reload the page the tester component is fetched for the /testing route. Or when I navigate to the foo component and reload the page I should see the same component load. \r\n\r\n### What is actually happening?\r\nWhen we reload the page I expect the component assigned to that route to be present, however it does not load on page refresh, the router is setup within a parent component and on page refresh this data is lost. Looking at the router.options.routes I can see that it is not modified with a new route when we call the addRoutes method. When trying to store the configuration in localStorage / sessionStorage we lose the import part of the component.\r\n\r\n---\r\nWhile this method is handy for adding new routes to the router, you will never know when a user is going to reload their browser, if some data goes wrong or something like that, therefore we should probably ensure that this method allows us to easily add new routes that will persist through a page refresh, if I am 2/ 3 child levels deep into a set of components then when I refresh I should see those components not a blank screen.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2676","RelatedDescription":"Closed issue \"Page refresh after addRoutes method fails to load the new route and components\" (#2676)"},{"Id":"425994013","IsPullRequest":false,"CreatedAt":"2019-03-27T14:32:41","Actor":"OnlyBreak","Number":"2675","RawContent":null,"Title":"SSR cannot get matched component (router.getMatchedComponents())","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsbin.com/qiduticizu/edit?html,js,output](https://jsbin.com/qiduticizu/edit?html,js,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSSR gets matched component  is function when I use router redirect.\r\n\r\n(by router.getMatchedComponents())\r\n\r\n\r\n### What is expected?\r\nThe matched is a component,  and component.asyncData isn't undefined when asyncData was set in logic components.\r\n\r\n### What is actually happening?\r\nmatched components is function and  asyncData is undefined.\r\n\r\nfunction is:\r\n```\r\nfunction VueComponent (options) {\r\n      this._init(options);\r\n    }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2675","RelatedDescription":"Closed issue \"SSR cannot get matched component (router.getMatchedComponents())\" (#2675)"},{"Id":"425266084","IsPullRequest":false,"CreatedAt":"2019-03-26T09:15:44","Actor":"Richard-Choooou","Number":"2674","RawContent":null,"Title":"请问vue router 4 会做成 react router 4的模式吗？","State":"closed","Body":"### What problem does this feature solve?\r\n感觉目前集中式的管理，路由一旦很多就有点不利于维护，可能是我的使用方式不对吧，不知道能不能提供最佳实践。\r\n\r\n### What does the proposed API look like?\r\n-\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2674","RelatedDescription":"Closed issue \"请问vue router 4 会做成 react router 4的模式吗？\" (#2674)"},{"Id":"425265372","IsPullRequest":false,"CreatedAt":"2019-03-26T07:32:29","Actor":"Richard-Choooou","Number":"2673","RawContent":null,"Title":"请问vue router 4 会做成 react router 4的模式吗？","State":"closed","Body":"感觉目前集中式的管理，路由一旦很多就有点不利于维护，可能是我的使用方式不对吧，不知道能不能提供最佳实践。","Url":"https://github.com/vuejs/vue-router/issues/2673","RelatedDescription":"Closed issue \"请问vue router 4 会做成 react router 4的模式吗？\" (#2673)"},{"Id":"425255976","IsPullRequest":false,"CreatedAt":"2019-03-26T07:00:34","Actor":"AndreKR","Number":"2672","RawContent":null,"Title":"router.app.$data undefined in beforeEach on first load","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/q574co12/](https://jsfiddle.net/q574co12/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the minimal reproduction link, check console output\r\n\r\n### What is expected?\r\nBrowser shows \"Hello\"\r\nConsole output: \"Joe\"\r\n\r\n### What is actually happening?\r\nBrowser shows \"Please log in\"\r\nConsole output: undefined\r\n\r\n---\r\nIn the example I want to check if someone is logged in and otherwise redirect to a login route. However, this solution always redirects to the login route, even if someone is logged in, because the loggedInUser is not available in `router.app`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2672","RelatedDescription":"Open issue \"router.app.$data undefined in beforeEach on first load\" (#2672)"},{"Id":"424578780","IsPullRequest":false,"CreatedAt":"2019-03-24T22:04:03","Actor":"timelights","Number":"2671","RawContent":null,"Title":"vue-router not working when accessed directly on URL address of the browser","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/2668](https://github.com/vuejs/vue-router/issues/2668)\r\nAlso logged issue on [https://github.com/zeit/serve/issues/515](https://github.com/zeit/serve/issues/515)\r\nbecause I do not know where the root cause of issue is (either on ```npm run build``` or ```serve -s```). But it seems working when running on ```npm run serve```.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. npm run build\r\n2. npm install -g serve\r\n3. serve dist\r\n4. visit localhost:5000\r\n5. click the router-link to /route/to/login = component correctly displayed\r\n6. access the route directly in URL address (or just refresh the page) localhost:5000/route/to/login = this shows issue, 404 page is displayed\r\n\r\n### What is expected?\r\nAccess the route directly in the URL (localhost:5000/route/to/login) to display the Login component\r\n\r\n### What is actually happening?\r\n404 page is displayed.\r\n**Important to read notes below for more understanding of the issue.**\r\n\r\n---\r\n# Important Notes\r\n\r\nCompare:\r\nWhen clicking on a ```<router-link to=\"/route/to/login\">Login</router-link>```\r\nThe Login component is displayed\r\n\r\n**BUT** when refreshing the page **OR**\r\nWhen accessing the URL directly in the browser (localhost:5000/route/to/login)\r\n404 page is displayed. (**Note** that this is working on ```npm run serve``` but not on ```serve``` at dist folder)\r\n\r\nSee issue #2668 for more details of the code.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2671","RelatedDescription":"Closed issue \"vue-router not working when accessed directly on URL address of the browser\" (#2671)"},{"Id":"424525745","IsPullRequest":false,"CreatedAt":"2019-03-24T22:02:13","Actor":"thayannevls","Number":"2670","RawContent":null,"Title":"Translate docs to PT-BR","State":"closed","Body":"### What problem does this feature solve?\r\nhttps://vuejs.org/ and https://vuex.vuejs.org/ docs already are translated to PT-BR, would be interesting to Vue-Router be translated to Brazil Portuguese too.\r\n\r\n### What does the proposed API look like?\r\nI want to start translating, can I make a fork and start working on this? I can start translating the `docs/README.md`, `docs/installation.md` and the `docs/api/README.md`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2670","RelatedDescription":"Closed issue \"Translate docs to PT-BR\" (#2670)"},{"Id":"424493574","IsPullRequest":true,"CreatedAt":"2019-03-23T12:10:17","Actor":"posva","Number":"2669","RawContent":null,"Title":"chore(deps): update deps to fix netlify deploy","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2669","RelatedDescription":"Closed or merged PR \"chore(deps): update deps to fix netlify deploy\" (#2669)"},{"Id":"424480244","IsPullRequest":false,"CreatedAt":"2019-03-23T09:43:32","Actor":"timelights","Number":"2668","RawContent":null,"Title":"vue-router is redirected to 404 page instead of the correct component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/BbMByN](https://codepen.io/anon/pen/BbMByN)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. vue create my-app (choose default)\r\n2. npm install vue-router\r\n3. add neccesarry code to create basic routing\r\n\r\n### What is expected?\r\n```npm run serve```\r\n-- localhost:8080/my/route/to/login\r\nLogin component is displayed\r\n\r\n```npm run build```\r\non cli, enter \"serve\" to run the build under dist folder\r\n-- localhost:5000/my/route/to/login\r\nLogin component is displayed\r\n\r\n### What is actually happening?\r\n```npm run serve```\r\n-- localhost:8080/my/route/to/login\r\nLogin component is displayed\r\n\r\n```npm run build```\r\non cli, enter \"serve\" to run the build under dist folder\r\n-- localhost:5000/my/route/to/login\r\n404 | The requested path could not be found\r\n\r\n---\r\nnpm install -g serve\r\nserve --version = 10.1.2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2668","RelatedDescription":"Closed issue \"vue-router is redirected to 404 page instead of the correct component\" (#2668)"},{"Id":"424383693","IsPullRequest":false,"CreatedAt":"2019-03-22T20:18:17","Actor":"josendulip","Number":"2667","RawContent":null,"Title":"Hi! Is there another way to open user page? I tried router.go, router.replace but they are not working., what should I do?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n`export default {\r\n  name: \"NavBar\",\r\ncomponents:{...},\r\ndata() {\r\n    return {\r\n      name: null,\r\n      email: null,\r\n      pwd: null,\r\n    };\r\n  },\r\n  methods: {\r\n    logInner(){\r\n          fb.auth().signInWithEmailAndPassword(this.email, this.pwd)\r\n              .then(function() { //then((user) O User esta caso voce care guardar alguma info do utilizador ao fazer login. Cookies ou redirecionar artigo personalizados.\r\n               this.$router.push({\r\n                    path: 'users'\r\n                })\r\n              })\r\n              .catch(function(error) {\r\n                  // Handle Errors here.\r\n                  var errorCode = error.code;\r\n                  var errorMessage = error.message;\r\n                  if (errorCode === 'auth/wrong-password') {\r\n                      alert('Wrong password.');\r\n                  } else {\r\n                      alert(errorMessage);\r\n                  }\r\n                  console.log(error);\r\n          });\r\n\r\n      },`\r\n","Url":"https://github.com/vuejs/vue-router/issues/2667","RelatedDescription":"Closed issue \"Hi! Is there another way to open user page? I tried router.go, router.replace but they are not working., what should I do?\" (#2667)"},{"Id":"424262456","IsPullRequest":true,"CreatedAt":"2019-03-22T15:21:19","Actor":"Scrum","Number":"2666","RawContent":null,"Title":"docs: fix typo","State":"closed","Body":"\r\n","Url":"https://github.com/vuejs/vue-router/pull/2666","RelatedDescription":"Closed or merged PR \"docs: fix typo\" (#2666)"},{"Id":"424261945","IsPullRequest":true,"CreatedAt":"2019-03-22T15:21:06","Actor":"Scrum","Number":"2665","RawContent":null,"Title":"docs: fix typo","State":"closed","Body":"\r\n","Url":"https://github.com/vuejs/vue-router/pull/2665","RelatedDescription":"Closed or merged PR \"docs: fix typo\" (#2665)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"429592125","IsPullRequest":true,"CreatedAt":"2019-04-05T05:46:49","Actor":"wjw99830","Number":"1530","RawContent":null,"Title":"Genericity for mutations and actions.","State":"open","Body":"Add genericity for mutations and actions to hint the commit and dispatch methods.","Url":"https://github.com/vuejs/vuex/pull/1530","RelatedDescription":"Open PR \"Genericity for mutations and actions.\" (#1530)"},{"Id":"424233038","IsPullRequest":true,"CreatedAt":"2019-03-25T12:47:59","Actor":"brunossn","Number":"1527","RawContent":null,"Title":"Correção de erro de digitação","State":"closed","Body":"Mudança de \"argumetos\" para \"argumentos\"","Url":"https://github.com/vuejs/vuex/pull/1527","RelatedDescription":"Closed or merged PR \"Correção de erro de digitação\" (#1527)"},{"Id":"424461016","IsPullRequest":true,"CreatedAt":"2019-03-25T12:45:48","Actor":"tomouchi","Number":"1528","RawContent":null,"Title":"docs(ja): Fix code part","State":"closed","Body":"コード部分が間違っているようだったので他の言語と同じくなるように修正しました。","Url":"https://github.com/vuejs/vuex/pull/1528","RelatedDescription":"Closed or merged PR \"docs(ja): Fix code part\" (#1528)"},{"Id":"424779602","IsPullRequest":true,"CreatedAt":"2019-03-25T12:44:05","Actor":"Jinjiang","Number":"1529","RawContent":null,"Title":"docs(zh): updated","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/665455f...b58d3d6\r\n/ping @justineo\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1529","RelatedDescription":"Closed or merged PR \"docs(zh): updated\" (#1529)"},{"Id":"410145165","IsPullRequest":true,"CreatedAt":"2019-03-25T12:31:54","Actor":"parth67","Number":"1508","RawContent":null,"Title":"Fixed issue#1507 : Memory leak happening while using registerModule/u…","State":"closed","Body":"Fixes #1507 \r\n\r\nClosure function was fixed with helper function partial which doesn't retain oldVm in environment.","Url":"https://github.com/vuejs/vuex/pull/1508","RelatedDescription":"Closed or merged PR \"Fixed issue#1507 : Memory leak happening while using registerModule/u…\" (#1508)"},{"Id":"409797501","IsPullRequest":false,"CreatedAt":"2019-03-25T12:31:54","Actor":"skkart","Number":"1507","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mrj8spu0/](https://jsfiddle.net/mrj8spu0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the JSFiddle link mentioned as part of this issue.\r\n2. Check and record the heap memory in the browser on initial stage.\r\n3. Click on the \"Register\" button to dynamically register Module B 100 times\r\n4. Now we will see an increase in heap memory on account of registering module 100 times.\r\n5. Click on \"Un-Register\" button to dynamically un-register Module B 100 times\r\n6. Check the heap memory again, at this point will see an jump in memory usage on account of un-registering 100 module. \r\n\r\n### What is expected?\r\nHeap memory generated on step 3 & 5 must be cleared after step 6. (Final stage)\r\n\r\n### What is actually happening?\r\nHeap memory of the browser is not getting cleared.\r\n\r\n---\r\nWe are observing memory leak of Store._vm while using registerModule/unregisterModule extensively.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n\r\noldVm.$destroy(); \r\noldVm = null; // This is the missing code\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52727462-4ac0bf80-2fdb-11e9-91ce-7dd012cba4b5.png)\r\n\r\n[Heap-20190213T220212.heaptimeline.zip](https://github.com/vuejs/vuex/files/2861246/Heap-20190213T220212.heaptimeline.zip)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1507","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1507)"},{"Id":"422808526","IsPullRequest":false,"CreatedAt":"2019-03-19T15:46:29","Actor":"FlorentinBurgeat","Number":"1526","RawContent":null,"Title":"Unused callback parameter in registerAction method causing trouble when testing mapActions","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/4c0d0ae0abcd48f1df2c0c263402a94a214168b2/src/store.js#L434](https://github.com/vuejs/vuex/blob/4c0d0ae0abcd48f1df2c0c263402a94a214168b2/src/store.js#L434)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a component with method using mapActions\r\n2. Test call of the method\r\n3. Notice that the store action is called with 3 parameters: the store, the payload, and a unused callback always set to undefined.\r\n\r\n### What is expected?\r\nThe action must be called with only the 2 first parameters.\r\n\r\n### What is actually happening?\r\nThe action is called with a third parameters (cb) set to undefined.\r\n\r\n---\r\nI think this is an error. I don't see where it can be used.\r\nI did not do a JSFiddle but linked you directly to the line where the potentially unused callback is.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1526","RelatedDescription":"Open issue \"Unused callback parameter in registerAction method causing trouble when testing mapActions\" (#1526)"},{"Id":"422588972","IsPullRequest":true,"CreatedAt":"2019-03-19T13:40:45","Actor":"Styx11","Number":"1524","RawContent":null,"Title":"docs(zh): fixed a sentence into bold","State":"closed","Body":"there is a sentence which should be bold instead of wrapping with double asterisk\r\n\r\n中文文档的 *严格模式* 一章有个句子应该是加粗格式，但它显示为被双星号包裹。","Url":"https://github.com/vuejs/vuex/pull/1524","RelatedDescription":"Closed or merged PR \"docs(zh): fixed a sentence into bold\" (#1524)"},{"Id":"422698596","IsPullRequest":true,"CreatedAt":"2019-03-19T13:39:44","Actor":"banderson623","Number":"1525","RawContent":null,"Title":"docs(en) Small phrase improvement: silly","State":"closed","Body":"Replace \"dumb\" with \"silly\", since dumb [is defined as mute or unable to speak](https://www.dictionary.com/browse/dumb). Let's clarify this a bit, what the doc is implying is this function call may seem to be a bit extra and non obvious at first glance. \r\n\r\nThe whimsical word \"silly\" is a nice stand in for this.\r\n\r\n![](https://media0.giphy.com/media/ujzJFRYbyjZe0/giphy.gif)","Url":"https://github.com/vuejs/vuex/pull/1525","RelatedDescription":"Closed or merged PR \"docs(en) Small phrase improvement: silly\" (#1525)"},{"Id":"421852602","IsPullRequest":true,"CreatedAt":"2019-03-17T04:44:46","Actor":"dollinad","Number":"1523","RawContent":null,"Title":"Fix minor errors in README.md","State":"closed","Body":"Changes involve:\r\n- Removal of dead links: data flow.png and vuex.png\r\n- Removal of discourse markers (although, also, in addition) to make sentences precise","Url":"https://github.com/vuejs/vuex/pull/1523","RelatedDescription":"Closed or merged PR \"Fix minor errors in README.md\" (#1523)"},{"Id":"420554353","IsPullRequest":true,"CreatedAt":"2019-03-13T15:10:35","Actor":"duyanpeng","Number":"1522","RawContent":null,"Title":"Add  subscribeAction  unit","State":"open","Body":"Add  subscribeAction api unit\r\nthank you","Url":"https://github.com/vuejs/vuex/pull/1522","RelatedDescription":"Open PR \"Add  subscribeAction  unit\" (#1522)"},{"Id":"420548516","IsPullRequest":true,"CreatedAt":"2019-03-13T15:06:18","Actor":"duyanpeng","Number":"1521","RawContent":null,"Title":"add subscribeAction unit","State":"closed","Body":"add subscribeAction api unit ","Url":"https://github.com/vuejs/vuex/pull/1521","RelatedDescription":"Closed or merged PR \"add subscribeAction unit\" (#1521)"},{"Id":"418608570","IsPullRequest":false,"CreatedAt":"2019-03-10T18:15:17","Actor":"zzzgit","Number":"1518","RawContent":null,"Title":"Why can’t I assign a socketio object to state in strict mode? ","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/1060733/54004291-023a9300-4190-11e9-8112-17f8814c1fd1.png)\r\n![image](https://user-images.githubusercontent.com/1060733/54004314-154d6300-4190-11e9-808f-b28bf5396181.png)\r\n![image](https://user-images.githubusercontent.com/1060733/54004330-226a5200-4190-11e9-896e-765daa3626c8.png)\r\n\r\n\r\n### What is expected?\r\n\r\n\r\n### What is actually happening?\r\nin strict mode, I can't assign socket object to state.\r\nis there a solution?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1518","RelatedDescription":"Closed issue \"Why can’t I assign a socketio object to state in strict mode? \" (#1518)"},{"Id":"418332613","IsPullRequest":true,"CreatedAt":"2019-03-10T13:44:16","Actor":"davidsandoz","Number":"1517","RawContent":null,"Title":"Make mutation and action payload optional in definition file","State":"closed","Body":"When testing a mutation without payload in TypeScript, it complains that about the missing payload, even though it's not mandatory.\r\n\r\nThis PR simply makes the payload optional.\r\n\r\nFixes #1491","Url":"https://github.com/vuejs/vuex/pull/1517","RelatedDescription":"Closed or merged PR \"Make mutation and action payload optional in definition file\" (#1517)"},{"Id":"418852210","IsPullRequest":false,"CreatedAt":"2019-03-08T16:11:11","Actor":"jcupps","Number":"1520","RawContent":null,"Title":"Feature Request: Private State","State":"open","Body":"### What problem does this feature solve?\r\nI would like the ability to make certain state private to the store, i.e. accessible within store getters, actions, and mutations, but not directly accessible by consumers (e.g. components). This would prevent unintended reading or manipulation of state which should be done through getters or actions/mutations respectively. As far as I know, there is no good way to achieve this today in Vuex.\r\n\r\n### What does the proposed API look like?\r\nThe API could look something like this:\r\n\r\nA store:\r\n```javascript\r\n{\r\n  state() {\r\n    return {\r\n      somethingPublic: ''\r\n    };\r\n  },\r\n\r\n  privateState() {\r\n    return {\r\n      somethingPrivate: []\r\n    };\r\n  },\r\n\r\n  getters: {\r\n    filtered: (state, getters, privateState) => privateState.somethingPrivate.filter(...)\r\n  }\r\n}\r\n```\r\n\r\nIn a component:\r\n```javascript\r\n// works:\r\nthis.$store.state.somethingPublic\r\nthis.$store.getters.filtered\r\n// doesn't work:\r\nthis.$store.state.somethingPrivate\r\nthis.$store.privateState.somethingPrivate\r\n```\r\n\r\nThanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1520","RelatedDescription":"Open issue \"Feature Request: Private State\" (#1520)"},{"Id":"418840190","IsPullRequest":true,"CreatedAt":"2019-03-08T15:42:49","Actor":"vaga","Number":"1519","RawContent":null,"Title":"docs(fr): Fix typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1519","RelatedDescription":"Open PR \"docs(fr): Fix typo\" (#1519)"},{"Id":"413266987","IsPullRequest":true,"CreatedAt":"2019-03-07T18:10:47","Actor":"jennyliang220","Number":"1514","RawContent":null,"Title":"doc: change ECMASCript into ECMAScript","State":"closed","Body":"![image](https://user-images.githubusercontent.com/8498677/53224814-fa1f2580-36b0-11e9-8f4c-28f387d6161b.png)\r\n","Url":"https://github.com/vuejs/vuex/pull/1514","RelatedDescription":"Closed or merged PR \"doc: change ECMASCript into ECMAScript\" (#1514)"},{"Id":"418113903","IsPullRequest":false,"CreatedAt":"2019-03-07T03:36:37","Actor":"zzzgit","Number":"1516","RawContent":null,"Title":"Why can’t I assign a socketio object to state in strict mode","State":"closed","Body":"```javacript\r\nexport default {\r\n\tstate: {\r\n\t\tsocket: null,\r\n\t},\r\n\tmutations: {\r\n\t\tkeepSocket: (state, payload)=>{\r\n\t\t\tstate.socket = payload\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t}\r\n}\r\n```\r\n\r\nI am using `vuex`, if I try to set a [socket-io](https://socket.io/) client object to state in strict mode, I will get an error like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1060733/53930690-35681e00-40cd-11e9-966f-33e86f37044f.png)\r\n","Url":"https://github.com/vuejs/vuex/issues/1516","RelatedDescription":"Closed issue \"Why can’t I assign a socketio object to state in strict mode\" (#1516)"},{"Id":"417789787","IsPullRequest":false,"CreatedAt":"2019-03-06T12:56:21","Actor":"hezhuojie","Number":"1515","RawContent":null,"Title":"Bug: getters of a dynamic module will lose after unregistering other module","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsbin.com/bejenutewi/edit?js,console](https://jsbin.com/bejenutewi/edit?js,console)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njust one the page [https://jsbin.com/bejenutewi/edit?js,console](https://jsbin.com/bejenutewi/edit?js,console)\r\n\r\n### What is expected?\r\nresult of `store.getters['mod/getOne']` should always be 1\r\n\r\n### What is actually happening?\r\ngetter `mod/getOne` is missing, return `undefined`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1515","RelatedDescription":"Open issue \"Bug: getters of a dynamic module will lose after unregistering other module\" (#1515)"},{"Id":"410330210","IsPullRequest":false,"CreatedAt":"2019-02-23T15:17:55","Actor":"djam90","Number":"1509","RawContent":null,"Title":"Unit tests do not run when importing router into store and store into router","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/djam90/vuex-vue-router-issue](https://github.com/djam90/vuex-vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm run test:unit` and see the failure. To get the tests to run again, do not import the store into the router and the router into the store.\r\n\r\n### What is expected?\r\nThe tests should run fine and circular imports should work. They *DO* work in the browser just not in Mocha testing environment. \r\n\r\n### What is actually happening?\r\nError as follows:\r\n\r\n```\r\nTypeError: Cannot read property 'getters' of undefined\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:261:1\r\n    at Array.forEach (<anonymous>)\r\n    at assertRawModule (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:260:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:186:1)\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:200:1\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1\r\n    at Array.forEach (<anonymous>)\r\n    at forEachValue (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:199:1)\r\n    at new ModuleCollection (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:160:1)\r\n    at new Store (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:311:1)\r\n```\r\n\r\n---\r\nMy VueX store needs to be able to import the router so it can do routing things like navigate to another page.\r\nMy router needs to be able to access state from VueX to determine what to do in a `router.beforeEach` handler.\r\n\r\nI have asked for help on Stack Overflow:\r\nhttps://stackoverflow.com/questions/54691789/unable-to-import-vuex-store-into-router-and-router-into-store-in-mocha-tests\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1509","RelatedDescription":"Closed issue \"Unit tests do not run when importing router into store and store into router\" (#1509)"},{"Id":"412632780","IsPullRequest":true,"CreatedAt":"2019-02-21T19:16:28","Actor":"perborgen","Number":"1512","RawContent":null,"Title":"Added Scrimba lessons","State":"closed","Body":"Here are the Scrimba lessons localized and with an `override.styl` file for the styling. Did I do it right?","Url":"https://github.com/vuejs/vuex/pull/1512","RelatedDescription":"Closed or merged PR \"Added Scrimba lessons\" (#1512)"},{"Id":"412637975","IsPullRequest":false,"CreatedAt":"2019-02-20T21:31:16","Actor":"tleeaf","Number":"1513","RawContent":null,"Title":"Naming store state array 'queue' results in one dropped array member","State":"closed","Body":"I named one of my store state members 'queue', which resulted in unexpected behavior, namely that one member of the array would disappear when testing the app in-browser. This occurs independently of any other actions or mutations. I confirmed this by checking the result in vue devtools for chrome, in the vuex tab, and also by adding a v-for that produced simple tags dependent on the data in the 'queue' array.\r\n\r\n`export const store = new Vuex.Store({\r\n  state: {\r\n     queue: [ \r\n      {id: 1333333333}, //one of these members will be dropped \r\n      {id: 1222222222},\r\n      {id: 1111111111}\r\n    ],\r\n    vocabulary: [],\r\n    lessons: [],    \r\n  },\r\n  mutations, actions, getters\r\n})`","Url":"https://github.com/vuejs/vuex/issues/1513","RelatedDescription":"Closed issue \"Naming store state array 'queue' results in one dropped array member\" (#1513)"},{"Id":"409173630","IsPullRequest":false,"CreatedAt":"2019-02-18T18:56:17","Actor":"visualjerk","Number":"1505","RawContent":null,"Title":"Infinite Loop With Error Handler And Vuex","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/z6ww1zp2q4](https://codesandbox.io/s/z6ww1zp2q4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- open browser console\r\n\r\n### What is expected?\r\nNot getting an infinite render loop:\r\n[Vue warn]: You may have an infinite update loop in a component render function.\r\n\r\n### What is actually happening?\r\nGetting an infinite render loop\r\n\r\n---\r\nThis happens when you handle an error that was caused during rendering and try to commit it to the store.\r\n\r\nIt looks like a component that throws an error tries to rerender after the store is updated, even so it doesn't use the store's state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1505","RelatedDescription":"Closed issue \"Infinite Loop With Error Handler And Vuex\" (#1505)"},{"Id":"411557104","IsPullRequest":true,"CreatedAt":"2019-02-18T17:28:27","Actor":"Jinjiang","Number":"1511","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/a6973fa...31e4fbc\r\n/ping @Justineo","Url":"https://github.com/vuejs/vuex/pull/1511","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1511)"},{"Id":"411250556","IsPullRequest":true,"CreatedAt":"2019-02-17T23:34:11","Actor":"brophdawg11","Number":"1510","RawContent":null,"Title":"Add support for namespace functions in mapXXX helpers","State":"open","Body":"This is a stab at adding the functionality requested by https://github.com/vuejs/vuex/issues/863.\r\n\r\nI also noticed that there was another attempt at this in https://github.com/vuejs/vuex/pull/924, but the diff seems to be beyond the scope of just the change.\r\n\r\nUnit tests have been added, but no changes have yet been made to TypeScript types or documentation, etc.","Url":"https://github.com/vuejs/vuex/pull/1510","RelatedDescription":"Open PR \"Add support for namespace functions in mapXXX helpers\" (#1510)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-13T15:21:16","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Closed or merged PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"409792179","IsPullRequest":false,"CreatedAt":"2019-02-13T12:56:14","Actor":"skkart","Number":"1506","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"We are observing memory leak of Store._vm while using registerModule/unregisterModule.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nI have created an demo link to illustrate the above mentioned problem\r\n[jsFiddle link](https://jsfiddle.net/mrj8spu0/)\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n**_oldVm.$destroy(); \r\noldVm = null;      // This is the missing code_**\r\n```\r\nfunction resetStoreVM (store, state, hot) {\r\n    var oldVm = store._vm;\r\n\r\n    ...\r\n\t...\r\n\r\n    if (oldVm) {\r\n      if (hot) {\r\n        // dispatch changes in all subscribed watchers\r\n        // to force getter re-evaluation for hot reloading.\r\n        store._withCommit(function () {\r\n          oldVm._data.$$state = null;\r\n        });\r\n      }\r\n\r\n      // Existing Code\r\n      Vue.nextTick(function () { return oldVm.$destroy(); });\r\n       \r\n      // The OldVm Object is still in heap even after destroy\r\n      // Appropriate Code\r\n      oldVm.$destroy(); \r\n      oldVm = null;\r\n    }\r\n  }\r\n```\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52712275-1983c780-2fba-11e9-8c67-43b24afe56e1.png)\r\n\r\n[Heap-20190213T172945.heapsnapshot.zip](https://github.com/vuejs/vuex/files/2860354/Heap-20190213T172945.heapsnapshot.zip)\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1506","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1506)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-13T11:12:36","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Closed issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-08T05:30:43.8711049Z","RunDurationInMilliseconds":1561}