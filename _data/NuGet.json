{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11610145333","Type":"IssuesEvent","CreatedAt":"2020-02-26T02:05:58","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Closed issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11609736510","Type":"IssuesEvent","CreatedAt":"2020-02-26T00:57:24","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Opened issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11607150819","Type":"IssuesEvent","CreatedAt":"2020-02-25T19:21:31","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7853","RelatedDescription":"Opened issue \"\"Contact owners\" link should not appear on a package details page when there are no owners\" (#7853) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nA package details page for a package without any owners still shows the \"Contact owners\" link on the right. It is unclear what will happen when the message is sent.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Find a package with no owners ([example](https://www.nuget.org/packages/bar/))\r\n2. Look at its package details page\r\n3. See the \"Contact owners\" link on the right\r\n\r\n### Expected behavior\r\nNo \"Contact owners\" link.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/102933/75279548-a1510400-57c0-11ea-8acd-a6d230eb3f83.png)\r\n"},{"Id":"11599455192","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:18:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4973","RelatedDescription":"Closed issue \"Gallery accepts packages containing floating version ranges in dependencies\" (#4973) at NuGet/NuGetGallery","RelatedBody":"The following packages have floating versions in their dependency version ranges:\r\n\r\nID | Version\r\n-- | --\r\nScissorhands.Helpers | 1.0.0-alpha-17\r\nScissorhands.Helpers | 1.0.0-alpha-16\r\nPInvokeCompiler | 1.0.0-rc1\r\nJWT | 2.3.1\r\n\r\nThese should be rejected on upload and V3 registrations should strip the floating-ness, as client does:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/bdd8626c0e5c6ee0b505ea8a1274c5fe941fb6d1/src/NuGet.Core/NuGet.Protocol/DependencyInfo/RegistrationUtility.cs#L26\r\n\r\n/cc @emgarten "},{"Id":"11599448801","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:17:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7836","RelatedDescription":"Closed issue \"Remove the SemVer 2.0.0 warning from nuget.org\" (#7836) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nWhen the SemVer 2.0.0 changes were introduced to the V2 and V3 protocol, they are intended to mitigate the impact of SemVer 2.0.0 packages breaking old clients, e.g. suppose a very popular package released a SemVer 2.0.0 version. In such a case a 2.x customer would fail to restore a package because the version parsing would explode. So we make SemVer 2.0.0 packages \"opt-in\". \r\n\r\nThis protocol change meant that SemVer 2.0.0 packages were hidden in most of our APIs for clients that predate NuGet version 4.3. 4.3 is when the SemVer 2.0.0 protocol was implemented. At that same time we put a warning banner on nuget.org.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73881689-a223f500-4815-11ea-8717-653f6302cc65.png)\r\nhttps://www.nuget.org/packages/NuGet.Versioning/5.5.0-preview.2.6382\r\n\r\nA similar warning is also visible during UI upload and during package push. And during pack (NU5105).\r\n\r\nSince 4.3 was shipped so long ago, most clients now support the SemVer 2.0.0 protocol and this warning is more noisy than helpful.\r\n\r\nRange | Percent | Note\r\n-- | -- | --\r\n≥ 4.3 | ~96.4% | Supports SemVer 2.0.0 protocol\r\n≥ 3.0 && < 4.3 | ~3.6% | Partial SemVer 2.0.0 but not SemVer 2.0.0 protocol `*`\r\n< 3.0 | ~0.0% | Does not support SemVer 2.0.0\r\n\r\n`*` =\r\n- Anything before 4.3 will not see SemVer 2.0.0 in search or in the PM UI.\r\n- 3.5.0 and on supported SemVer 2.0.0 restore in packages.config so people can hand edit to work-around.\r\n- PackageReference always supported SemVer 2.0.0 from what I can tell so people could hard-code a SemVer 2.0.0 package in their .csproj and still restore.\r\n- V3 feeds always return SemVer 2.0.0 packages from flat container so packages can be found prior to SemVer 2.0.0. protocol support\r\n\r\n### Describe the solution you'd like\r\n\r\nRemove these warnings entirely.\r\n\r\n### Additional details\r\n\r\nPrompted by https://twitter.com/SimonCropp/status/1169447145939685376, https://github.com/NuGet/NuGetGallery/pull/7772, and https://github.com/NuGet/Home/issues/5201.\r\n\r\n/cc @nkolev92 @SimonCropp @agr @karann-msft \r\n"},{"Id":"11581895546","Type":"PullRequestEvent","CreatedAt":"2020-02-22T00:15:25","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7852","RelatedDescription":"Merged pull request \"[NuGetGallery] FI master to Dev\" (#7852) at NuGet/NuGetGallery","RelatedBody":"pulling my hotfix changes to dev for consistency and convenience for next RI whenever."},{"Id":"11581837337","Type":"PullRequestEvent","CreatedAt":"2020-02-22T00:01:39","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7852","RelatedDescription":"Opened pull request \"[NuGetGallery] FI master to Dev\" (#7852) at NuGet/NuGetGallery","RelatedBody":"pulling my hotfix changes to dev for consistency and convenience for next RI whenever."},{"Id":"11581543994","Type":"IssuesEvent","CreatedAt":"2020-02-21T22:58:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7741","RelatedDescription":"Closed issue \"[C2R] Implement registration comparer to detect differences between new and old\" (#7741) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11581433661","Type":"PullRequestEvent","CreatedAt":"2020-02-21T22:37:42","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7851","RelatedDescription":"Merged pull request \"[HOTFIX] Fix GalleryAccount deleter job DI issue\" (#7851) at NuGet/NuGetGallery","RelatedBody":"This job threw exception when deleting a user due to DI issues. \r\n\r\n@ryuyu provided the fix, I am going to deploy it.\r\n\r\nThis was tested on DEV with the private branch."},{"Id":"11581408401","Type":"PullRequestEvent","CreatedAt":"2020-02-21T22:33:14","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7851","RelatedDescription":"Opened pull request \"[HOTFIX] Fix GalleryAccount deleter job DI issue\" (#7851) at NuGet/NuGetGallery","RelatedBody":"This job threw exception when deleting a user due to DI issues. \r\n\r\n@ryuyu provided the fix, I am going to deploy it.\r\n\r\nThis was tested on DEV with the private branch."},{"Id":"11569695851","Type":"IssuesEvent","CreatedAt":"2020-02-20T18:03:22","Actor":"anangaur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7850","RelatedDescription":"Opened issue \"Add fuget.org link to package details page\" (#7850) at NuGet/NuGetGallery","RelatedBody":"This is the issue tracking the community PR: https://github.com/NuGet/NuGetGallery/pull/7832 as it needs some UX and messaging work before going live.\r\n\r\nRationale for the feature: \r\nfuget.org shows API level data for the packages and lets you compare the APIs across versions. This has been super useful for developers and they have already been using this. It would make sense for developers to directly explore their package on fuget.org from nuget.org's package details page."},{"Id":"11561559355","Type":"PullRequestEvent","CreatedAt":"2020-02-19T23:39:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7000","RelatedDescription":"Closed pull request \"[PROPOSAL] Tool to determine if a .nupkg has valid Microsoft metadata\" (#7000) at NuGet/NuGetGallery","RelatedBody":"This is minimal effort to make a tool that will allow teams to check the metadata of their package before pushing it to nuget.org. This is optional but will help teams catch metadata problems before shipping.\r\n\r\nWe can formalize the tool later, perhaps with `nuget.exe verify` and some kind of rules abstraction. But this is the cheap first step.\r\n\r\nIt's a old style tools package and requires .NET Framework 4.6.2. The .exe is here inside the package:\r\n\r\n```\r\ntools\\NuGet.VerifyMicrosoftPackage.exe\r\n```\r\n\r\nIn other words, it can be used like `NuGet.CommandLine` or `xunit.runner.console` where the user just hard codes the path inside the package of where the .exe is.\r\n\r\nTeams with non-standard rules can specify a path to their custom rule set using `--rule-set`. We can communicate in a doc what owners have non-standard rule sets and what they are. There are 4 non-standard 4 rule sets in the PROD DB today.\r\n\r\nWe should also document that this does not cover author signature verification. This can easily be done with `nuget.exe verify -Signatures -CertificateFingerprint`.\r\n\r\n## Open Questions\r\n\r\n- How to know if the rules compiled into the tool are out of date?\r\n   - We would release a new package to nuget.org after every master merge. Customers would just take latest package version\r\n- Wouldn't a verify endpoint be easier? 🐱 \r\n\r\n## Example output - invalid\r\n\r\nExit code is 1 (the number of bad packages).\r\n\r\n```\r\nUsing the following package path argument:\r\nC:\\Users\\jver\\AppData\\Local\\Temp\\NuGetTestFolder\\5fda8093-4158-463b-b41e-de3e3b1fa2a1\\inner\\testA.nupkg\r\n\r\nINVALID.\r\nC:\\Users\\jver\\AppData\\Local\\Temp\\NuGetTestFolder\\5fda8093-4158-463b-b41e-de3e3b1fa2a1\\inner\\testA.nupkg\r\nThe package TestPackage-65ed825e-dd81-4964-9599-f6a28d67171d 1.0.0 is not compliant.\r\nThere is 1 problem.\r\n  - The package metadata defines 'Not Microsoft' as one of the authors which is not allowed by policy.\r\n\r\nValid package count: 0\r\nInvalid package count: 1\r\n\r\nThe metadata validation used the following property names and JSON ruleset.\r\n\r\nReadable .NET Name      | JSON Name\r\n----------------------- | ----------\r\nAllowedAuthors          | authors\r\nAllowedCopyrightNotices | copy\r\nErrorMessageFormat      | error\r\nIsLicenseUrlRequired    | licUrlReq\r\nIsProjectUrlRequired    | projUrlReq\r\nRequiredCoOwnerUsername | u\r\n\r\nIf question marks ('?') or weird characters appear below, consider using --write-default-rule-set.\r\n\r\n{\r\n  \"u\": \"Microsoft\",\r\n  \"copy\": [\r\n    \"(c) Microsoft Corporation. All rights reserved.\",\r\n    \"&#169; Microsoft Corporation. All rights reserved.\",\r\n    \"© Microsoft Corporation. All rights reserved.\",\r\n    \"© Microsoft Corporation. Tüm hakları saklıdır.\",\r\n    \"© Microsoft Corporation. Todos os direitos reservados.\",\r\n    \"© Microsoft Corporation. Alle Rechte vorbehalten.\",\r\n    \"© Microsoft Corporation. Všechna práva vyhrazena.\",\r\n    \"© Microsoft Corporation. Todos los derechos reservados.\",\r\n    \"© Microsoft Corporation. Wszelkie prawa zastrzeżone.\",\r\n    \"© Microsoft Corporation. Tous droits réservés.\",\r\n    \"© Microsoft Corporation。 保留所有权利。\",\r\n    \"© Microsoft Corporation. Tutti i diritti riservati.\",\r\n    \"© корпорация Майкрософт. Все права защищены.\",\r\n    \"© Microsoft Corporation。 著作權所有，並保留一切權利。\"\r\n  ],\r\n  \"authors\": [\r\n    \"Microsoft\"\r\n  ],\r\n  \"licUrlReq\": true,\r\n  \"projUrlReq\": true,\r\n  \"error\": \"The package is not compliant with metadata requirements for Microsoft packages on NuGet.org. Go to https://aka.ms/Microsoft-NuGet-Compliance for more information.\\r\\nPolicy violations: {0}\"\r\n}\r\n```\r\n\r\n## Example output - all valid\r\n\r\nExit code is 0.\r\n\r\n```\r\nUsing the following package path argument:\r\nC:\\Users\\jver\\AppData\\Local\\Temp\\NuGetTestFolder\\e5b7857c-2e25-42e2-9875-bc4eb26fcd94\\inner\\testA.nupkg\r\n\r\nVALID.\r\nC:\\Users\\jver\\AppData\\Local\\Temp\\NuGetTestFolder\\e5b7857c-2e25-42e2-9875-bc4eb26fcd94\\inner\\testA.nupkg\r\nThe package TestPackage-9be3d65e-7aa0-40e5-9cdb-6f5dc2fd8318 1.0.0 is compliant.\r\n\r\nValid package count: 1\r\nInvalid package count: 0\r\n```\r\n\r\n## Help text\r\n\r\nExit code is -1.\r\n\r\n```\r\nNuGet.VerifyMicrosoftPackage 0.0.1-jver-verify\r\n\r\nUsage: NuGet.VerifyMicrosoftPackage [arguments] [options]\r\n\r\nArguments:\r\n  PATHS  One or more file paths to a package (.nupkg).\r\n\r\nOptions:\r\n  -v | --version            Show version information.\r\n  -? | -h | --help          Show help information.\r\n  --recursive               Evaluate wildcards recursively into child directories.\r\n  --rule-set                A path to a JSON rule set file. See the default below.\r\n  --write-default-rule-set  Write the default rule set to the provided --rule-set file path.\r\n\r\nThis tool determines if a .nupkg meets the metadata requirements for Microsoft packages\r\non nuget.org. Relative paths and wildcards in the file name are supported. Globbing and\r\nwildcards in the directory are not supported.\r\n\r\nThe default rule set used for validation is the following:\r\n\r\nReadable .NET Name      | JSON Name\r\n----------------------- | ----------\r\nAllowedAuthors          | authors\r\nAllowedCopyrightNotices | copy\r\nErrorMessageFormat      | error\r\nIsLicenseUrlRequired    | licUrlReq\r\nIsProjectUrlRequired    | projUrlReq\r\nRequiredCoOwnerUsername | u\r\n\r\nIf question marks ('?') or weird characters appear below, consider using --write-default-rule-set.\r\n\r\n{\r\n  \"u\": \"Microsoft\",\r\n  \"copy\": [\r\n    \"(c) Microsoft Corporation. All rights reserved.\",\r\n    \"&#169; Microsoft Corporation. All rights reserved.\",\r\n    \"© Microsoft Corporation. All rights reserved.\",\r\n    \"© Microsoft Corporation. Tüm hakları saklıdır.\",\r\n    \"© Microsoft Corporation. Todos os direitos reservados.\",\r\n    \"© Microsoft Corporation. Alle Rechte vorbehalten.\",\r\n    \"© Microsoft Corporation. Všechna práva vyhrazena.\",\r\n    \"© Microsoft Corporation. Todos los derechos reservados.\",\r\n    \"© Microsoft Corporation. Wszelkie prawa zastrzeżone.\",\r\n    \"© Microsoft Corporation. Tous droits réservés.\",\r\n    \"© Microsoft Corporation。 保留所有权利。\",\r\n    \"© Microsoft Corporation. Tutti i diritti riservati.\",\r\n    \"© корпорация Майкрософт. Все права защищены.\",\r\n    \"© Microsoft Corporation。 著作權所有，並保留一切權利。\"\r\n  ],\r\n  \"authors\": [\r\n    \"Microsoft\"\r\n  ],\r\n  \"licUrlReq\": true,\r\n  \"projUrlReq\": true,\r\n  \"error\": \"The package is not compliant with metadata requirements for Microsoft packages on NuGet.org. Go to https://aka.ms/Microsoft-NuGet-Compliance for more information.\\r\\nPolicy violations: {0}\"\r\n}\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11610687539","Type":"IssuesEvent","CreatedAt":"2020-02-26T03:56:17","Actor":"snopywithchary","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9223","RelatedDescription":"Opened issue \"Could not load file or assembly 'MiCrosoft.VisualStudio.ProjectSystem.v140nly,version=14.1.0.0' or one of its dependencies. The system cannot find the file specified\" (#9223) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11609695518","Type":"IssuesEvent","CreatedAt":"2020-02-26T00:51:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9193","RelatedDescription":"Closed issue \"Clarification regarding Standard 2.0 vs 2.1 as NuGet\" (#9193) at NuGet/Home","RelatedBody":"We have multiple applications that are written in .NET 4.8 and a few that are written in .Net Core 3.1.\r\n\r\nWe currently have a private library of NuGet packages that we've written in .Net Standard 2.0 that are consumed by both the 4.8 and Core 3.1 applications.  However, we want to start to leverage .Net Standard 2.1 so that we can use nullables etc.\r\n\r\nSo if I were to set the TargetFrameworks to be \"netstandard2.0;netstandard2.1\" and package this up as a NuGet package, then what will happen the 4.8 and Core 3.1 apps try to consume it?  Will the 4.8 one use the Standard 2.0 flavour, and the Core 3.1 use the Standard 2.1 flavour, or both use the Standard 2.0?\r\n\r\nIs the the best approach for creating a NuGet package available in 2.0 and 2.1?"},{"Id":"11609596367","Type":"IssuesEvent","CreatedAt":"2020-02-26T00:35:31","Actor":"KeltarHelviett","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9222","RelatedDescription":"Opened issue \"Nuget restore doesn't work with msbuild 16\" (#9222) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nOn MacOS nuget.exe version 5.4, 5.3.1, 5.2 etc.\r\n\r\n`mono nuget.exe restore -MSBuildPath /path/to/msbuild16v or /path/to/vstool/that/use/msbuild16`. Using nuget without mono provides the same result.\r\n\r\nWorks with msbuild 15 or 14.\r\n\r\n### Verbose Logs\r\n`nuget restore Launcher.Mac.sln -MSBuildPath \"/Library/Frameworks/Mono.framework/Versions/Current/Commands\" -Verbosity detailed`\r\n\r\n```\r\nUsing Msbuild from '/Library/Frameworks/Mono.framework/Versions/Current/Commands'.\r\nNuGet Version: 5.2.0.6090\r\nError parsing solution file at /Users/gameforest/dev/Citrus/Orange/Launcher/Launcher.Mac.sln: Invalid Image\r\nNuGet.CommandLine.CommandLineException: Error parsing solution file at /Users/gameforest/dev/Citrus/Orange/Launcher/Launcher.Mac.sln: Invalid Image\r\n  at NuGet.CommandLine.MsBuildUtility.GetAllProjectFileNamesWithMsBuild (System.String solutionFile, System.String msbuildPath) [0x000a1] in <86071b8d89ed441c8bd0686989227b79>:0\r\n  at NuGet.CommandLine.MsBuildUtility.GetAllProjectFileNames (System.String solutionFile, System.String msbuildPath) [0x00021] in <86071b8d89ed441c8bd0686989227b79>:0\r\n  at NuGet.CommandLine.RestoreCommand.ProcessSolutionFile (System.String solutionFileFullPath, NuGet.CommandLine.RestoreCommand+PackageRestoreInputs restoreInputs) [0x00056] in <86071b8d89ed441c8bd0686989227b79>:0\r\n  at NuGet.CommandLine.RestoreCommand.GetInputsFromFile (System.String projectFilePath, NuGet.CommandLine.RestoreCommand+PackageRestoreInputs packageRestoreInputs) [0x00072] in <86071b8d89ed441c8bd0686989227b79>:0\r\n  at NuGet.CommandLine.RestoreCommand.DetermineRestoreInputsAsync () [0x00080] in <86071b8d89ed441c8bd0686989227b79>:0\r\n  at NuGet.CommandLine.RestoreCommand.ExecuteCommandAsync () [0x000be] in <86071b8d89ed441c8bd0686989227b79>:0\r\n  at NuGet.CommandLine.Command.Execute () [0x000ea] in <86071b8d89ed441c8bd0686989227b79>:0\r\n  at NuGet.CommandLine.Program.MainCore (System.String workingDirectory, System.String[] args) [0x001c1] in <86071b8d89ed441c8bd0686989227b79>:0\r\n```\r\n\r\n\r\n### System details\r\n\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.3.10 (build 2)\r\nInstallation UUID: 7bd83e47-a735-4ff0-89ea-d6d6c4bb5bfe\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.16.1.24 (d16-3 / 08809f5b)\r\n\r\n\tPackage version: 604000208\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.4.0.208 (2019-06/07c23f2ca43) (64-bit)\r\n\tPackage version: 604000208\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.3.0.6192\r\n\r\n=== .NET Core SDK ===\r\n\r\nSDK: /usr/local/share/dotnet/sdk/3.0.100/Sdks\r\nSDK Versions:\r\n\t3.0.100\r\n\t2.1.700\r\n\t2.1.505\r\n\t2.1.504\r\n\t2.1.302\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/6.4.0/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== .NET Core Runtime ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.0.0\r\n\t2.1.13\r\n\t2.1.11\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.2\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.12.29\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 11.2 (15526)\r\nBuild 11B52\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 6.6.0.12 (Visual Studio Community)\r\nHash: e3c2b406d\r\nBranch: xcode11.2\r\nBuild date: 2019-11-01 00:12:07-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 13.6.0.12 (Visual Studio Community)\r\nHash: e3c2b406d\r\nBranch: xcode11.2\r\nBuild date: 2019-11-01 00:12:08-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 10.0.6.2 (Visual Studio Community)\r\nCommit: xamarin-android/d16-3/c407838\r\nAndroid SDK: /Users/gameforest/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2019-06@476d72b9e32\r\nJava.Interop: xamarin/java.interop/d16-3@5836f58\r\nLibZipSharp: grendello/LibZipSharp/d16-3@71f4a94\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3fd\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-3@cb41333\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/gameforest/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android SDK Manager ===\r\n\r\nVersion: 1.4.0.65\r\nHash: c33b107\r\nBranch: remotes/origin/d16-3\r\nBuild date: 2019-11-19 20:33:22 UTC\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.116\r\nHash: d2b2af0\r\nBranch: remotes/origin/d16-3\r\nBuild date: 2019-11-19 20:33:42 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.3.0.256\r\nHash: 8a223bfd7\r\nBranch: remotes/origin/d16-3\r\nBuild date: 2019-11-01 21:02:02 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 803100002\r\nGit revision: add3a4998a5cb5b081e0404e1fe13acfecb7801d\r\nBuild date: 2019-11-20 13:35:15+00\r\nBuild branch: release-8.3\r\nXamarin extensions: 79c69708816813b498283eeda7bcb4d464433a04\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.5\r\nDarwin 18.6.0 Darwin Kernel Version 18.6.0\r\n    Thu Apr 25 23:16:27 PDT 2019\r\n    root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n\r\n\r\n\r\n"},{"Id":"11609486773","Type":"IssuesEvent","CreatedAt":"2020-02-26T00:19:13","Actor":"ProgrammerAI","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9221","RelatedDescription":"Opened issue \"Toolbox and Nuget error\" (#9221) at NuGet/Home","RelatedBody":"I have added a nuget package to my wpf (.NET Core 3.1) application and I am trying to add the components in the package to the Visual Studio 2019 Toolbox. The problem is that it says that the .dll file doesn't contain any objects that can be added into the Toolbox, even though there should be something! \r\n\r\nFor anyone curious, I added the MaterialDesignThemes (v3.1.0-ci981) package, and I am trying to add MaterialDesignThemes.Wpf.dll."},{"Id":"11609227295","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:41:57","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9199","RelatedDescription":"Closed issue \"EvaluateCacheFile is causing restore crashes on Linux\" (#9199) at NuGet/Home","RelatedBody":"# Details about Problem\r\nRestore during build using `dotnet msbuild` is crashing with an unhandled exception on Unix operating systems. The problem appears to be a simple unhandled exception. \r\n\r\n```\r\n/__w/1/s/.dotnet/sdk/5.0.100-preview.1.20112.7/MSBuild.dll /nologo -maxcpucount /m -verbosity:m /v:minimal /bl:/__w/1/s/artifacts/log/Release/ToolsetRestore.binlog /clp:Summary /clp:ErrorsOnly;NoSummary /nr:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=true /p:__ToolsetLocationOutputFile=/__w/1/s/artifacts/toolset/5.0.0-beta.20117.3.txt /t:__WriteToolsetLocation /warnaserror /__w/1/s/artifacts/toolset/restore.proj\r\nClearing NuGet HTTP cache: /home/helixbot_azpcontainer/.local/share/NuGet/v3-cache\r\nLocal resources cleared.\r\n/__w/1/s/.dotnet/sdk/5.0.100-preview.1.20112.7/MSBuild.dll /nologo -logger:/__w/1/s/.packages/microsoft.dotnet.arcade.sdk/5.0.0-beta.20117.3/tools/netcoreapp2.1/Microsoft.DotNet.Arcade.Sdk.dll -maxcpucount /m -verbosity:m /v:minimal /bl:/__w/1/s/artifacts/log/Release/Build.binlog /clp:Summary /nr:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=true /p:Configuration=Release /p:RepoRoot=/__w/1/s /p:Restore=true /p:Build=true /p:Rebuild=false /p:Test=false /p:Pack=false /p:IntegrationTest=false /p:PerformanceTest=false /p:Sign=false /p:Publish=false /p:SubsetCategory=mono /p:ConfigurationGroup=Release /p:ArchGroup=x64 /p:TargetArchitecture=x64 /p:CMakeArgs= /p:MonoEnableLLVM=false /warnaserror /__w/1/s/.packages/microsoft.dotnet.arcade.sdk/5.0.0-beta.20117.3/tools/Build.proj\r\n  Restore completed in 16.48 sec for /__w/1/s/tools-local/tasks/installer.tasks/installer.tasks.csproj.\r\n  installer.tasks -> /__w/1/s/artifacts/bin/installer.tasks/Debug/netstandard2.0/installer.tasks.dll\r\n  Tool 'coverlet.console' (version '1.7.0') was restored. Available commands: coverlet\r\n  Tool 'dotnet-reportgenerator-globaltool' (version '4.4.2') was restored. Available commands: reportgenerator\r\n  Tools restore was successful.\r\n  Restore completed in 5.11 sec for /__w/1/s/.packages/microsoft.dotnet.arcade.sdk/5.0.0-beta.20117.3/tools/Tools.proj.\r\n  Restore completed in 11.44 ms for /__w/1/s/src/mono/netcore/System.Private.CoreLib/System.Private.CoreLib.csproj.\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error : System.AggregateException: One or more errors occurred. (Could not find a part of the path '/tmp/NuGetScratch/fddf3c7a91d54497a7b711c945fe60d3/b8178b951e2f4151a1758acd7ba7326f.proj.nuget.dgspec.json'.)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :  ---> System.IO.DirectoryNotFoundException: Could not find a part of the path '/tmp/NuGetScratch/fddf3c7a91d54497a7b711c945fe60d3/b8178b951e2f4151a1758acd7ba7326f.proj.nuget.dgspec.json'.\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at System.IO.FileStream..ctor(String path, FileMode mode)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at NuGet.ProjectModel.DependencyGraphSpec.Save(String path)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at NuGet.Commands.NoOpRestoreUtilities.PersistDGSpecFile(DependencyGraphSpec spec, String dgPath, ILogger log)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at NuGet.Commands.RestoreCommand.EvaluateCacheFile()\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at NuGet.Commands.RestoreRunner.RunWithoutCommit(IEnumerable`1 restoreRequests, RestoreArgs restoreContext)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    --- End of inner exception stack trace ---\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n/__w/1/s/src/mono/netcore/nuget/packages.builds : error :    at Microsoft.Build.NuGetSdkResolver.NuGetSdkResolver.NuGetAbstraction.GetSdkResult(SdkReference sdk, Object nuGetVersion, SdkResolverContext context, SdkResultFactory factory)\r\n##[error]src/mono/netcore/nuget/packages.builds(0,0): error : System.AggregateException: One or more errors occurred. (Could not find a part of the pa\r\n```\r\n\r\nBuilds where this has occurred\r\n|Build|Kind|Timeline Record|\r\n|---|---|---|\r\n|[534074](https://dev.azure.com/dnceng/public/_build/results?buildId=534074)|PR https://github.com/dotnet/runtime/pull/32736|Restore|\r\n|[533781](https://dev.azure.com/dnceng/public/_build/results?buildId=533781)|PR https://github.com/dotnet/runtime/pull/32716|Send tests to Helix|\r\n|[533729](https://dev.azure.com/dnceng/public/_build/results?buildId=533729)|PR https://github.com/dotnet/runtime/pull/32697|Build product|\r\n|[533526](https://dev.azure.com/dnceng/public/_build/results?buildId=533526)|PR https://github.com/dotnet/runtime/pull/32538|Build managed test components|   |[531845](https://dev.azure.com/dnceng/public/_build/results?buildId=531845)|PR https://github.com/dotnet/runtime/pull/32612|Build product|\r\n|[533303](https://dev.azure.com/dnceng/public/_build/results?buildId=533303)|PR https://github.com/dotnet/runtime/pull/32595|Build product|\r\n|[532918](https://dev.azure.com/dnceng/public/_build/results?buildId=532918)|Rolling|Send to Helix|\r\n|[532832](https://dev.azure.com/dnceng/public/_build/results?buildId=532832)|Rolling|Build product|\r\n|[531845](https://dev.azure.com/dnceng/public/_build/results?buildId=531845)|PR https://github.com/dotnet/runtime/pull/32612|Mono LLVM Product Build Linux x64 debug|\r\n|[531845](https://dev.azure.com/dnceng/public/_build/results?buildId=531845)|PR https://github.com/dotnet/runtime/pull/32612|Build product|\r\n|[531649](https://dev.azure.com/dnceng/public/_build/results?buildId=531649)|Rolling|Build native test components|\r\n|[531649](https://dev.azure.com/dnceng/public/_build/results?buildId=531649)|Rolling|CoreCLR Product Build OSX x64 checked|\r\n|[531548](https://dev.azure.com/dnceng/public/_build/results?buildId=531548)|PR https://github.com/dotnet/runtime/pull/32603|Build product|\r\n|[531548](https://dev.azure.com/dnceng/public/_build/results?buildId=531548)|PR https://github.com/dotnet/runtime/pull/32603|Mono LLVM Product Build OSX x64 release|\r\n|[531315](https://dev.azure.com/dnceng/public/_build/results?buildId=531315)|Rolling|Libraries Test Build OSX x64 Release|\r\n|[530973](https://dev.azure.com/dnceng/public/_build/results?buildId=530973)|PR https://github.com/dotnet/runtime/pull/32587|Libraries Build OSX x64 Debug|\r\n|[530946](https://dev.azure.com/dnceng/public/_build/results?buildId=530946)|PR https://github.com/dotnet/runtime/pull/32636|Mono LLVM Product Build Linux x64 debug|\r\n|[530946](https://dev.azure.com/dnceng/public/_build/results?buildId=530946)|PR https://github.com/dotnet/runtime/pull/32636|Build product|\r\n|[530196](https://dev.azure.com/dnceng/public/_build/results?buildId=530196)|PR https://github.com/dotnet/runtime/pull/32609|Build product|\r\n|[530196](https://dev.azure.com/dnceng/public/_build/results?buildId=530196)|PR https://github.com/dotnet/runtime/pull/32609|Mono Product Build Linux arm64 debug|\r\n|[529996](https://dev.azure.com/dnceng/public/_build/results?buildId=529996)|PR https://github.com/dotnet/runtime/pull/32149|CoreCLR Product Build OSX x64 checked|\r\n|[529996](https://dev.azure.com/dnceng/public/_build/results?buildId=529996)|PR https://github.com/dotnet/runtime/pull/32149|Build product|\r\n|[529965](https://dev.azure.com/dnceng/public/_build/results?buildId=529965)|PR https://github.com/dotnet/runtime/pull/32612|Mono Product Build Linux x64 release|\r\n|[529965](https://dev.azure.com/dnceng/public/_build/results?buildId=529965)|PR https://github.com/dotnet/runtime/pull/32612|Build product|\r\n\r\nThis is starting to become a bit of a blocking issue for the dotnet/runtime repository. Started showing up yesterday and now I'm seeing it across a number of builds. \r\n\r\nThe runs do have binlogs available from the restores but they don't really seem to have helpful information in them. Example\r\n\r\nhttps://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/build/builds/529965/artifacts?artifactName=BuildLogs_Mono_Linux_x64_release&fileId=50260E1C6BB8177752CB6690A24F7D636CC8A076F6FB6CC6FAB6F5DB3AED4BC502&fileName=Build.binlog&api-version=5.0-preview.3\r\n\r\n"},{"Id":"11608164839","Type":"IssuesEvent","CreatedAt":"2020-02-25T21:25:45","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9211","RelatedDescription":"Closed issue \"Restore:  PackageSpec.Clone() creates unequal clone\" (#9211) at NuGet/Home","RelatedBody":"`PackageSpec.Clone()` can create a clone which fails an equality test with the original.\r\n\r\nTrivial example:\r\n```C#\r\nvar packageSpec = new PackageSpec();\r\nvar clone = packageSpec.Clone();\r\n\r\nAssert.True(packageSpec.Equals(clone));\r\n```\r\nThe issue is that while `PackageSpec.Clone()` creates a new `PackageSpec` and copies all properties from the original in the cloning process creates a clone which results in the clone being unequal with the original.  In particular, `Clone()` [first copies the `IsDefaultVersion` value](https://github.com/NuGet/NuGet.Client/blob/f67a6083f8a49502f52f0c50492db03452785359/src/NuGet.Core/NuGet.ProjectModel/PackageSpec.cs#L198) and [then copies the `Version` value](https://github.com/NuGet/NuGet.Client/blob/f67a6083f8a49502f52f0c50492db03452785359/src/NuGet.Core/NuGet.ProjectModel/PackageSpec.cs#L211).  However, [the `Version` setter forces `IsDefaultVersion` to `false`](https://github.com/NuGet/NuGet.Client/blob/f67a6083f8a49502f52f0c50492db03452785359/src/NuGet.Core/NuGet.ProjectModel/PackageSpec.cs#L49), so the original value of `IsDefaultVersion` is overwritten.  The order of `IsDefaultVersion` and `Version` copies is significant.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/1796/files#diff-843a4408facaa3334000363c6e10e45dR197-R210 introduced this."},{"Id":"11608153463","Type":"IssuesEvent","CreatedAt":"2020-02-25T21:24:20","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9210","RelatedDescription":"Closed issue \"Restore:  regression in DependencyGraphSpec.AddProject(...)\" (#9210) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/commit/db388741dd500eeb94b9b87dead77753de22e702#diff-55e5297d6b228b707c6eb441dc1573c3 introduced a regression to `DependencyGraphSpec.AddProject(…)`.  [A `NullReferenceException` is thrown if `packageSpec.RestoreMetadata` is `null`](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.ProjectModel/DependencyGraphSpec.cs#L210).\r\n\r\nAn [earlier statement is careful about the possibility of `packageSpec.RestoreMetadata` being `null`](https://github.com/NuGet/NuGet.Client/commit/db388741dd500eeb94b9b87dead77753de22e702#diff-55e5297d6b228b707c6eb441dc1573c3R204), so the possibility seems real.\r\n\r\nA trivial repro is:\r\n```C#\r\nvar dgSpec = new DependencyGraphSpec();\r\nvar packageSpec = new PackageSpec(); // RestoreMetadata is null by default\r\n\r\ndgSpec.AddProject(packageSpec);\r\n```\r\n\r\nCC @cristinamanum"},{"Id":"11607347066","Type":"IssuesEvent","CreatedAt":"2020-02-25T19:44:30","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9160","RelatedDescription":"Reopened issue \"Code Analysis spec work\" (#9160) at NuGet/Home","RelatedBody":""},{"Id":"11607302911","Type":"IssuesEvent","CreatedAt":"2020-02-25T19:39:19","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8939","RelatedDescription":"Closed issue \"Broken test in SigningUtilityTests(unit test)\" (#8939) at NuGet/Home","RelatedBody":"In  SigningUtilityTests(unit test),  3 tests  failed on Linux and Mac.\r\nThey're:\r\n```\r\nSignAsync_WhenChainBuildingFails_ThrowsAsync\r\nSignAsync_WhenPackageEntryCountWouldRequireZip64_FailsAsync\r\nSignAsync_WithUntrustedSelfSignedCertificate_SucceedsAsync\r\n```\r\n"},{"Id":"11606825429","Type":"IssuesEvent","CreatedAt":"2020-02-25T18:43:18","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9077","RelatedDescription":"Closed issue \"Review Accessibility bugs\" (#9077) at NuGet/Home","RelatedBody":"Query: https://devdiv.visualstudio.com/DevDiv/_queries/query/db727d15-1a7a-41dc-b8ab-5c813706be26/\r\n\r\n- [x] Bug 1: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049204\r\n- [x] Bug 2: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049209\r\n- [x] Bug 3: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049251\r\n- [x] Bug 4: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049191\r\n- [x] Bug 5: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994497\r\n- [ ] Bug 6: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994446"},{"Id":"11606773359","Type":"IssuesEvent","CreatedAt":"2020-02-25T18:37:06","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9220","RelatedDescription":"Opened issue \"Is the error message correct\" (#9220) at NuGet/Home","RelatedBody":"The intent of this error is that the nuget task was unable to find the icon.  Is it really about unable to find it *in the package* or *during* packaging?  I get this error when the path is invalid during ```dotnet pack``` -- I feel the message is wrong in this case because I don't yet have a package, but I'm trying to create one...and the message should say something along those lines \"The file 'icon.png' could not be located at path blah\"\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 92cecadd-38f4-fa74-9c48-6c2fe8bf88e2\n* Version Independent ID: f7b2b30d-6212-e66c-158c-2053419464e4\n* Content: [NuGet Error NU5046](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5046)\n* Content Source: [docs/reference/errors-and-warnings/NU5046.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/reference/errors-and-warnings/NU5046.md)\n* Product: **nuget**\n* GitHub Login: @dominoFire\n* Microsoft Alias: **feaguila**"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-26T05:30:44.7788737Z","RunDurationInMilliseconds":1823}