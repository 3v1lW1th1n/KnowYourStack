{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null},{"Title":".NET Core Source Code Analysis with Intel® VTune™ Amplifier","PublishedOn":"2018-10-23T21:04:49+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"This post was written by Varun Venkatesan, Li Tian, Denis Pravdin, who are engineers at Intel. They are excited to share .NET Core-specific enhancements that Intel has made to VTune Amplifier...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/net-core-source-code-analysis-with-intel-vtune-amplifier/","RawContent":null},{"Title":"Call For Participation: .NET and TypeScript at FOSDEM conference","PublishedOn":"2018-10-23T20:16:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The organizers of the FOSDEM 2019 conference have allocated a “Developer Room” on Saturday February 2nd 2019 for .NET and TypeScript discussions in Brussels Belgium.   FOSDEM is one of Europe’s most...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/call-for-participation-net-and-typescript-at-fosdem-conference/","RawContent":null},{"Title":".NET Framework October 2018 Preview of Quality Rollup","PublishedOn":"2018-10-18T20:44:34+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the October 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated Japanese dates that...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/18/net-framework-october-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 3","PublishedOn":"2018-10-18T01:03:01+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 3. We have made more improvements to the overall release that we would love to get your feedback on, either in the comments or at dotnet/core #2004....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-net-core-2-2-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 3","PublishedOn":"2018-10-17T20:10:48+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 3 available, together with a new preview of our data provider for Cosmos DB and updated spatial extensions for various providers. Preview 3 is going to be the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-entity-framework-core-2-2-preview-3/","RawContent":null},{"Title":"Automating Release Notes with Azure Functions","PublishedOn":"2018-10-16T15:00:44+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We can all agree that tracking the progress of a project enhances productivity and is an effective way to keep everyone involved of its progress. When it comes to managing your project in Azure DevOps...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/16/automating-release-notes-with-azure-functions/","RawContent":null},{"Title":"Guidance for library authors","PublishedOn":"2018-10-15T15:00:05+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We&#8217;ve just published our first cut of the .NET Library Guidance. It&#8217;s brand new set of articles for .NET developers who want to create high-quality libraries for .NET. The guidance...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/15/guidance-for-library-authors/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8540273297","Type":"PullRequestEvent","CreatedAt":"2018-11-06T04:56:08","Actor":"mikem8361","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20830","RelatedDescription":"Opened pull request \"Enable SyncBlk for xplat SOS\" (#20830) at dotnet/coreclr","RelatedBody":""},{"Id":"8539984795","Type":"IssuesEvent","CreatedAt":"2018-11-06T03:10:22","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20829","RelatedDescription":"Opened issue \"JIT: consider running finally cloning (and perhaps other EH opts) before inlining\" (#20829) at dotnet/coreclr","RelatedBody":"Currently we do finally cloning after inlining, which means that if we inline into the finally we may end up duplicating the inlined code when we clone the finally. We could avoid this by running finally cloning earlier, before inlining, and then teaching the inliner not to inline calls in fault handler regions.\r\n\r\nSince we don't currently inline methods with EH this shouldn't add any real complexity...?"},{"Id":"8539927998","Type":"PullRequestEvent","CreatedAt":"2018-11-06T02:51:51","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20828","RelatedDescription":"Opened pull request \"fix corefx folder\" (#20828) at dotnet/coreclr","RelatedBody":""},{"Id":"8539863520","Type":"PullRequestEvent","CreatedAt":"2018-11-06T02:31:12","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20827","RelatedDescription":"Opened pull request \"[WIP] Combine ExcludeList in AltJit scenarios for both host and altjit archs\" (#20827) at dotnet/coreclr","RelatedBody":"**NO MERGE**"},{"Id":"8539822932","Type":"IssuesEvent","CreatedAt":"2018-11-06T02:18:37","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20813","RelatedDescription":"Closed issue \"[release/2.2] TestSpanIndexVariantString Performance Regression\" (#20813) at dotnet/coreclr","RelatedBody":"While doing a comparison of release/2.2 to release/2.1 I found a regression in the TestSpanIndexVariantString test on Windows x64 of about 12.5%.\r\n\r\nI have not dug too far into the traces, but can share them and a repro upon request."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8540320100","Type":"PullRequestEvent","CreatedAt":"2018-11-06T05:14:32","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10265","RelatedDescription":"Merged pull request \"Move cli to arcade\" (#10265) at dotnet/cli","RelatedBody":"This is a huge change, sorry for that. For those reviewing it, I would recommend reviewing by commit. You can follow how I went about getting things working here."},{"Id":"8540314879","Type":"IssuesEvent","CreatedAt":"2018-11-06T05:12:32","Actor":"iskiselev","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10282","RelatedDescription":"Opened issue \"Passing parameters with semicolon in msbuild\" (#10282) at dotnet/cli","RelatedBody":"There is no way to pass properties with semicolon inside msbuild using dotnet CLI.\r\nConsider sample projectfile:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project DefaultTargets=\"Main\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" ToolsVersion=\"4.0\">    \r\n  <PropertyGroup>\r\n    <build_configurations>test1;test2;test3</build_configurations>\r\n  </PropertyGroup>    \r\n  <ItemGroup>\r\n    <BuildConfigurations Include=\"$(build_configurations)\" />\r\n  </ItemGroup>    \r\n  <Target Name=\"Main\">    \r\n    <Message Text=\"Running with args: %(BuildConfigurations.Identity)\" Importance=\"High\" />\r\n  </Target>\r\n</Project>\r\n```\r\nWe can pass semicolon-separated properties using call directly to msbuild: `msbuild test.csproj /p:build_configurations=\"test5;test6;test7\"`, but it is not possible with dotnet CLI.\r\n\r\n## Steps to reproduce\r\n1. Save sample project file as test.csproj\r\n2. Run `dotnet msbuild test.csproj /p:build_configurations=\"test5;test6;test7\"`\r\n\r\n## Expected  behavior\r\nOutput:\r\n  Running with args: test5\r\n  Running with args: test6\r\n  Running with args: test7\r\n\r\n## Actual behavior\r\nOutput: \r\nMSBUILD : error MSB1006: Property is not valid.\r\nSwitch: test6\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nFor reference:\r\nhttps://stackoverflow.com/questions/6051054/how-do-i-pass-a-property-to-msbuild-via-command-line-that-could-be-parsed-into-a\r\nAlso, this issue is root cause for: NuGet/Home#7413\r\n\r\n\r\n\r\n\r\n"},{"Id":"8540294074","Type":"PullRequestEvent","CreatedAt":"2018-11-06T05:04:19","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10279","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.9.0-rtm.5658 into cli\" (#10279) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.9.0-rtm.5658 into cli release/2.1.5xx branch"},{"Id":"8539985944","Type":"PullRequestEvent","CreatedAt":"2018-11-06T03:10:44","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10263","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.9.0-preview5.5646 into cli\" (#10263) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.9.0-preview5.5646 into cli release/2.1.5xx branch"},{"Id":"8539686202","Type":"IssuesEvent","CreatedAt":"2018-11-06T01:37:16","Actor":"BruceForstall","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10281","RelatedDescription":"Opened issue \"dotnet-install.sh download progress with wget is super verbose\" (#10281) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nDownload https://dot.net/v1/dotnet-install.sh and run it. I'm running on an arm32 cross-build Docker container: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-e435274-20180426002420.\r\n\r\nLog of Jenkins job that is using this:\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_corefx_baseline/36/consoleFull#-1957045196a82fefab-f698-416f-8fca-58544c94cd4e\r\n\r\nI see 3200 lines of progress output, like:\r\n```\r\n06:50:39 157050K .......... .......... .......... .......... .......... 98% 71.8M 0s\r\n06:50:39 157100K .......... .......... .......... .......... .......... 98%  175M 0s\r\n06:50:39 157150K .......... .......... .......... .......... .......... 98%  191M 0s\r\n```\r\n\r\n## Expected  behavior\r\n\r\nEither no progress or very limited progress output.\r\n\r\nCan you use a wget option like `--progress=dot:giga`?\r\n\r\n## Actual behavior\r\n\r\nas described\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n"},{"Id":"8539524584","Type":"PullRequestEvent","CreatedAt":"2018-11-06T00:50:01","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10280","RelatedDescription":"Opened pull request \"Add win arm\" (#10280) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8539700044","Type":"IssuesEvent","CreatedAt":"2018-11-06T01:41:16","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/859","RelatedDescription":"Closed issue \"Support .Net Framework (4.8?) for netstandard 2.1\" (#859) at dotnet/standard","RelatedBody":"There is currently no mention here about which platforms will be supported apart from .net core. So adding this issue to track the framework support.\r\n\r\nNetstandard is a good way to target all the major .net platforms. As such it should continue to support the .Net Framework which is still very much used."},{"Id":"8538657034","Type":"IssuesEvent","CreatedAt":"2018-11-05T21:32:02","Actor":"khellang","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/956","RelatedDescription":"Opened issue \"Include System.Globalization.ISOWeek\" (#956) at dotnet/standard","RelatedBody":"I'd like to propose the inclusion of the new `System.Globalization.ISOWeek` APIs, added in https://github.com/dotnet/corefx/pull/30386.\r\n\r\nI would consider this a pretty fundamental API that could be useful on all the current .NET platforms.\r\n\r\nThe implementation doesn't have a lot of dependencies and could probably be (more or less) copied to other platforms.\r\n\r\n```patch\r\ndiff --git a/netstandard/ref/System.Globalization.cs b/netstandard/ref/System.Globalization.cs\r\nindex 995ce25..4214d5a 100644\r\n--- a/netstandard/ref/System.Globalization.cs\r\n+++ b/netstandard/ref/System.Globalization.cs\r\n@@ -446,6 +446,15 @@ namespace System.Globalization\r\n         public string GetUnicode(string ascii, int index) { throw null; }\r\n         public string GetUnicode(string ascii, int index, int count) { throw null; }\r\n     }\r\n+    public static partial class ISOWeek\r\n+    {\r\n+        public static int GetWeekOfYear(System.DateTime date) { throw null; }\r\n+        public static int GetWeeksInYear(int year) { throw null; }\r\n+        public static int GetYear(System.DateTime date) { throw null; }\r\n+        public static System.DateTime GetYearEnd(int year) { throw null; }\r\n+        public static System.DateTime GetYearStart(int year) { throw null; }\r\n+        public static System.DateTime ToDateTime(int year, int week, System.DayOfWeek dayOfWeek) { throw null; }\r\n+    }\r\n     public partial class JapaneseCalendar : System.Globalization.Calendar\r\n     {\r\n         public JapaneseCalendar() { }\r\n```"},{"Id":"8529449203","Type":"PullRequestEvent","CreatedAt":"2018-11-03T12:26:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/955","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181102.21 of https://github.com/dotnet/arcade\" (#955) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18552.21\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18552.21.symbols.nupkg - 2.2.0-beta.18552.21\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18552.21.symbols.nupkg - 2.4.0-beta.18552.21\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18552.21\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18552.21\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18552.21\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18552.21\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18552.21\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Darc - 1.0.0-beta.18552.21\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18552.21\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18552.21\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18552.21\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18552.21\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18552.21"},{"Id":"8529414893","Type":"PullRequestEvent","CreatedAt":"2018-11-03T12:01:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/955","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181102.21 of https://github.com/dotnet/arcade\" (#955) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18552.21\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18552.21.symbols.nupkg - 2.2.0-beta.18552.21\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18552.21.symbols.nupkg - 2.4.0-beta.18552.21\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18552.21.symbols.nupkg - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18552.21\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18552.21\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18552.21\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18552.21\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18552.21\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Darc - 1.0.0-beta.18552.21\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18552.21\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18552.21\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18552.21\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18552.21\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18552.21\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18552.21\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18552.21"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8540173048","Type":"IssuesEvent","CreatedAt":"2018-11-06T04:16:52","Actor":"JamesNK","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33266","RelatedDescription":"Opened issue \"Update strong-name-signing.md\" (#33266) at dotnet/corefx","RelatedBody":"There is a conflict between this two documents:\r\n* https://docs.microsoft.com/en-ca/dotnet/standard/library-guidance/strong-naming#create-strong-named-net-libraries\r\n* https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/strong-name-signing.md#faq\r\n\r\nUpdate [strong-name-signing.md](https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/strong-name-signing.md#faq) to include the viral nature of strong naming and why publically distributed .NET libraries should be strong named.\r\n\r\n// @terrajobst "},{"Id":"8539888437","Type":"PullRequestEvent","CreatedAt":"2018-11-06T02:39:16","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33265","RelatedDescription":"Merged pull request \"ignore msbuild warnings  for now\" (#33265) at dotnet/corefx","RelatedBody":"This mimics #33229 for freebsd.\r\n"},{"Id":"8539867674","Type":"PullRequestEvent","CreatedAt":"2018-11-06T02:32:32","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33265","RelatedDescription":"Opened pull request \"ignore msbuild warnings  for now\" (#33265) at dotnet/corefx","RelatedBody":"This mimics #33229 for freebsd.\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8539953470","Type":"PullRequestEvent","CreatedAt":"2018-11-06T03:00:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30928","RelatedDescription":"Merged pull request \"Merge dev16.0.x to master\" (#30928) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-to-master\ngit reset --hard upstream/master\ngit merge upstream/dev16.0.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8539242949","Type":"PullRequestEvent","CreatedAt":"2018-11-05T23:32:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6532","RelatedDescription":"Merged pull request \"Increase WebAssembly test timeout\" (#6532) at dotnet/corert","RelatedBody":"Raise the timeout in the WebAssembly test to account for slow Firefoxfirst starts on CI machines. Hopefully this will stop the intermittent WebAssembly CI failures."},{"Id":"8538501049","Type":"PullRequestEvent","CreatedAt":"2018-11-05T21:03:27","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6532","RelatedDescription":"Opened pull request \"Increase WebAssembly test timeout\" (#6532) at dotnet/corert","RelatedBody":"Raise the timeout in the WebAssembly test to account for slow Firefoxfirst starts on CI machines. Hopefully this will stop the intermittent WebAssembly CI failures."},{"Id":"8535877265","Type":"PullRequestEvent","CreatedAt":"2018-11-05T14:02:12","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6531","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#6531) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"8532773920","Type":"PullRequestEvent","CreatedAt":"2018-11-05T00:42:20","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6530","RelatedDescription":"Opened pull request \"Initial support for running tests against CPAOT-built framework\" (#6530) at dotnet/corert","RelatedBody":"The pass rate is not super high right now, I'm seeing 109 failing\r\ntests or about 13% pass rate but the main point is that the pass\r\nrate is not zero, we can build on that.\r\n\r\nIn the AVAILABLE_TYPES R2R node, I added provisions for emitting\r\nexported types. This was one of the issues we were hitting - the\r\npartial facade System.Runtime wasn't properly exporting its type\r\nforwards.\r\n\r\nIn the PE builder, I dropped copying of all directories per JanK's\r\nsuggestion, the latest impulse being a mismatch between the debug\r\ndirectory and the CPAOT-compiled executable.\r\n\r\nThanks\r\n\r\nTomas"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8539724876","Type":"PullRequestEvent","CreatedAt":"2018-11-06T01:48:43","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2646","RelatedDescription":"Opened pull request \"Implement copy-local of package dependencies for 3.0 targeted projects. \" (#2646) at dotnet/sdk","RelatedBody":"This PR implements some of the unification of the `dotnet build` and\r\n`dotnet publish` experiences.\r\n\r\nFor 3.0 targeted projects, `dotnet build` will now copy the package\r\ndependencies locally into the output directory instead of relying on the NuGet\r\ncache.  It behaves the same as `dotnet publish`, only copying what is not\r\nprovided by the shared frameworks.\r\n\r\nAdditionally, `dotnet publish` will now copy the build outputs rather than\r\nregenerating a deps file or resolving package dependencies, provided there are\r\nno package references excluded from publishing or packages are coming from a\r\nruntime store.\r\n\r\nThe `CopyLocalLockFileAssemblies` property can be set to `false` to revert to\r\nthe previous behavior for `dotnet build`.\r\n\r\nFixes dotnet/cli#10061.\r\nFixes #933.\r\n\r\n"},{"Id":"8539362917","Type":"IssuesEvent","CreatedAt":"2018-11-06T00:04:27","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2599","RelatedDescription":"Closed issue \"CreateAppHost runs and fails during VS design time build if project isn't already built\" (#2599) at dotnet/sdk","RelatedBody":"## Repro steps\r\n\r\n1. Install .NET Core 3.0 SDK (I had 3.0.100-alpha1-009697)\r\n2. `dotnet new wpf`\r\n3. Open VS.\r\n4. Open the project created in 2.\r\n\r\n## Result\r\n\r\n```\r\nError    MSB4018    The \"CreateAppHost\" task failed unexpectedly.\r\nMicrosoft.NET.Build.Tasks.ResourceUpdater+HResultException: 80070002\r\n   at Microsoft.NET.Build.Tasks.ResourceUpdater.AddResourcesFromPEImage(String peFile)\r\n   at Microsoft.NET.Build.Tasks.AppHost.Create(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String intermediateAssembly, Logger log)\r\n   at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\n(from C:\\Program Files\\dotnet\\sdk\\3.0.100-alpha1-009697\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets Line 293)\r\n```\r\n\r\n## Expected\r\nWe probably shouldn't run this target if the assemblies it's going to work on don't exist.\r\n"},{"Id":"8538890525","Type":"PullRequestEvent","CreatedAt":"2018-11-05T22:15:47","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2645","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.9.0-rtm.5658 into sdk\" (#2645) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.9.0-rtm.5658 into sdk release/2.1.5xx branch"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1055215025982398465","CreatedAt":"2018-10-24T21:50:41+00:00","UserScreenname":"dotnet","Text":"Bringing .NET application performance analysis to Linux https://t.co/jivjRwPVBM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":60,"RawContent":null},{"Id":"1054879096981704704","CreatedAt":"2018-10-23T23:35:50+00:00","UserScreenname":"dotnet","Text":".NET Core Source Code Analysis with Intel® VTune™ Amplifier https://t.co/2I1YLWYbKb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":27,"RawContent":null},{"Id":"1054829662738608128","CreatedAt":"2018-10-23T20:19:24+00:00","UserScreenname":"dotnet","Text":"Call For Participation: .NET and TypeScript at FOSDEM conference https://t.co/xjDh49lbko","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-11-06T05:30:35.6312771Z","RunDurationInMilliseconds":8390}