{"Data":{"GitHub":{"Issues":[{"Id":"559437530","IsPullRequest":true,"CreatedAt":"2020-02-04T01:47:08","Actor":"najeeb-kazmi","Number":"4775","RawContent":null,"Title":"Add Seed property to MLContext and use as default for data splits","State":"open","Body":"Fixes #4752 \r\n\r\nAddresses leftover feedback from #4764 ","Url":"https://github.com/dotnet/machinelearning/pull/4775","RelatedDescription":"Open PR \"Add Seed property to MLContext and use as default for data splits\" (#4775)"},{"Id":"559391287","IsPullRequest":true,"CreatedAt":"2020-02-03T23:14:13","Actor":"LittleLittleCloud","Number":"4774","RawContent":null,"Title":"fix recommendation Bug","State":"open","Body":"add code for handle enum case in CodeGen","Url":"https://github.com/dotnet/machinelearning/pull/4774","RelatedDescription":"Open PR \"fix recommendation Bug\" (#4774)"},{"Id":"559379667","IsPullRequest":false,"CreatedAt":"2020-02-03T22:44:04","Actor":"frank-dong-ms","Number":"4773","RawContent":null,"Title":"async code will cause dead lock with xunit","State":"open","Body":"https://github.com/xunit/xunit/issues/864\r\nhttps://github.com/xunit/xunit/issues/1935\r\n\r\nCalling .Wait() causes deadlocks.\r\nCalling .Result causes deadlocks.\r\nCalling .GetAwaiter().GetResult() causes deadlocks.\r\n\r\nwe need to fix the way we use in async to prevent dead lock with xunit","Url":"https://github.com/dotnet/machinelearning/issues/4773","RelatedDescription":"Open issue \"async code will cause dead lock with xunit\" (#4773)"},{"Id":"559348320","IsPullRequest":true,"CreatedAt":"2020-02-03T22:33:07","Actor":"frank-dong-ms","Number":"4770","RawContent":null,"Title":"try enable test parallel between assembly","State":"closed","Body":"RT.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4770","RelatedDescription":"Closed or merged PR \"try enable test parallel between assembly\" (#4770)"},{"Id":"559368196","IsPullRequest":true,"CreatedAt":"2020-02-03T22:17:50","Actor":"frank-dong-ms","Number":"4772","RawContent":null,"Title":"trouble shoot issue","State":"open","Body":"trouble shoot SdcaTrainerBase related issue, take memory dump at failure point:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=505404&view=logs&j=41509eb4-74ce-5e57-61b4-bdf74b39e7c1&t=dbdc2969-5b98-5c39-1328-31d4a2fdc45e","Url":"https://github.com/dotnet/machinelearning/pull/4772","RelatedDescription":"Open PR \"trouble shoot issue\" (#4772)"},{"Id":"559351636","IsPullRequest":true,"CreatedAt":"2020-02-03T21:41:23","Actor":"frank-dong-ms","Number":"4771","RawContent":null,"Title":"set max thread to unlimited to avoid dead lock","State":"open","Body":"Related to: https://github.com/dotnet/machinelearning/issues/4773: \r\nSet max threads to unlimited is mitigation for dead lock issue in xunit tests, we should change the way we are using async code to prevent dead lock in future.\r\n\r\nCollection of test hanging are collected at: https://microsoft.sharepoint.com/teams/ML.NET/_layouts/OneNote.aspx?id=%2Fteams%2FML.NET%2FSiteAssets%2FML.NET%20Notebook&wd=target%28Tests.one%7C5E713C2E-6DCF-4AA3-9071-69CBBAF48985%2FLong%20running%20tests%7C54A981BE-BFF2-4188-9520-7DE3E2DF0EDF%2F%29\r\nonenote:https://microsoft.sharepoint.com/teams/ML.NET/SiteAssets/ML.NET%20Notebook/Tests.one#Long%20running%20tests&section-id={5E713C2E-6DCF-4AA3-9071-69CBBAF48985}&page-id={54A981BE-BFF2-4188-9520-7DE3E2DF0EDF}&end \r\n\r\nRunned 7 builds, no test hanging found.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4771","RelatedDescription":"Open PR \"set max thread to unlimited to avoid dead lock\" (#4771)"},{"Id":"558886255","IsPullRequest":false,"CreatedAt":"2020-02-03T19:36:05","Actor":"Vijay27anand","Number":"4768","RawContent":null,"Title":"KMean clustering ML.Net vs scikit-learn (Python)","State":"closed","Body":"### System information\r\n\r\nML.NET version is 1.4.0\r\n[PresentationMatrix.xlsx](https://github.com/dotnet/machinelearning/files/4146625/PresentationMatrix.xlsx)\r\n\r\n\r\n\r\n### Issue\r\n\r\nWe try to do KMean clustering for the attached data (PresentationMatrix.csv) while doing so seeing a difference in behavior between ML.Net and scikit-learn (Python).  With ML.net i am keep getting error \"Failed to initialize clusters: too few examples\", when i try number of clusters as 60 or above, sometimes even with lesser number of clusters, where as with Scikit-learn able to proceed with out any error for more than 60 Clusters.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4768","RelatedDescription":"Closed issue \"KMean clustering ML.Net vs scikit-learn (Python)\" (#4768)"},{"Id":"558998101","IsPullRequest":false,"CreatedAt":"2020-02-03T18:21:15","Actor":"hectorcubillos","Number":"4769","RawContent":null,"Title":"Issue on MacOs","State":"closed","Body":"There's an issue on MacOs while trying to replicate the example.\n\nException has occurred: CLR/System.DllNotFoundException\nAn unhandled exception of type 'System.DllNotFoundException' occurred in Microsoft.ML.TimeSeries.dll: 'Unable to load shared library 'MklImports' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libMklImports, 1): image not found'\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: be5ae8c9-5caa-4f64-8587-d8f8910ce911\n* Version Independent ID: 0810e529-6f15-d64d-94a3-7e93c1b67daa\n* Content: [TimeSeriesCatalog.ForecastBySsa(ForecastingCatalog, String, String, Int32, Int32, Int32, Int32, Boolean, Single, RankSelectionMethod, Nullable&lt;Int32&gt;, Nullable&lt;Int32&gt;, Boolean, Boolean, Nullable&lt;GrowthRatio&gt;, String, String, Single, Boolean) Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.timeseriescatalog.forecastbyssa?view=ml-dotnet#feedback)\n* Content Source: [dotnet/xml/Microsoft.ML/TimeSeriesCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TimeSeriesCatalog.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4769","RelatedDescription":"Closed issue \"Issue on MacOs\" (#4769)"},{"Id":"558430966","IsPullRequest":true,"CreatedAt":"2020-02-03T18:02:27","Actor":"frank-dong-ms","Number":"4761","RawContent":null,"Title":"add read share to all file read operation","State":"closed","Body":"address file lock issue in test like below:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=501414&view=logs&j=11c3dbcc-a5f4-5edd-335b-a8af5aa47d46&t=42ea9add-ee54-581f-d033-310ec15a7ff0\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=502370&view=logs&j=11c3dbcc-a5f4-5edd-335b-a8af5aa47d46&t=42ea9add-ee54-581f-d033-310ec15a7ff0\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=503598&view=logs&j=9dffbc46-9322-5a58-fb37-6d66c044e90d&t=11098bf6-eb78-583b-8eab-f14f48444a6b\r\n\r\nallow other reader to read file when file is opened by file stream only for read\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4761","RelatedDescription":"Closed or merged PR \"add read share to all file read operation\" (#4761)"},{"Id":"558815683","IsPullRequest":false,"CreatedAt":"2020-02-03T03:16:35","Actor":"actopozipc","Number":"4767","RawContent":null,"Title":"SDCA seems to contain a livelock","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 4.6.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** I tried to call the SDCA method and fit the model.\r\n- **What happened?**  When I call the SDCA method in the pipeline, the code wont get past the Fit method. Noticeable is the fact that the CPU percentage wont go down, so its still calculating\r\n\r\nHowever there is no exception. The program just freezes\r\n\r\n### Source code / logs\r\n![grafik](https://user-images.githubusercontent.com/48481041/73623012-b14f4b00-463b-11ea-9531-7d7390a4980f.png)\r\n\r\nCPU usage:\r\n![grafik](https://user-images.githubusercontent.com/48481041/73623037-cd52ec80-463b-11ea-9ed8-3f6a0122564d.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4767","RelatedDescription":"Open issue \"SDCA seems to contain a livelock\" (#4767)"},{"Id":"558652933","IsPullRequest":true,"CreatedAt":"2020-02-02T06:52:21","Actor":"harishsk","Number":"4766","RawContent":null,"Title":"Branch to test current state of outer loop builds","State":"open","Body":"This is a test branch to test the current state of builds when all test run including the disabled test.","Url":"https://github.com/dotnet/machinelearning/pull/4766","RelatedDescription":"Open PR \"Branch to test current state of outer loop builds\" (#4766)"},{"Id":"558456511","IsPullRequest":true,"CreatedAt":"2020-02-02T06:46:06","Actor":"najeeb-kazmi","Number":"4764","RawContent":null,"Title":"Data splits to default to MLContext seed when not specified","State":"closed","Body":"Fixes #4752 ","Url":"https://github.com/dotnet/machinelearning/pull/4764","RelatedDescription":"Closed or merged PR \"Data splits to default to MLContext seed when not specified\" (#4764)"},{"Id":"557862530","IsPullRequest":true,"CreatedAt":"2020-02-02T05:47:01","Actor":"harishsk","Number":"4750","RawContent":null,"Title":"Added Shuffle=false for all the Sdca related tests","State":"closed","Body":"See discussion [here](https://github.com/dotnet/machinelearning/pull/4736)\r\n\r\nReviewers please check if any of them need to have to Shuffle=true.","Url":"https://github.com/dotnet/machinelearning/pull/4750","RelatedDescription":"Closed or merged PR \"Added Shuffle=false for all the Sdca related tests\" (#4750)"},{"Id":"558335123","IsPullRequest":true,"CreatedAt":"2020-02-01T21:43:37","Actor":"sharwell","Number":"4754","RawContent":null,"Title":"Remove incorrectly-coded finalizer in DnnRetrainTransformer","State":"closed","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4754","RelatedDescription":"Closed or merged PR \"Remove incorrectly-coded finalizer in DnnRetrainTransformer\" (#4754)"},{"Id":"558602279","IsPullRequest":true,"CreatedAt":"2020-02-01T21:42:18","Actor":"sharwell","Number":"4765","RawContent":null,"Title":"Enable MSML_SingleVariableDeclaration for the full solution","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4765","RelatedDescription":"Open PR \"Enable MSML_SingleVariableDeclaration for the full solution\" (#4765)"},{"Id":"558434003","IsPullRequest":true,"CreatedAt":"2020-02-01T21:40:53","Actor":"sharwell","Number":"4762","RawContent":null,"Title":"Enable MSML_TypeParamName for the full solution","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4762","RelatedDescription":"Closed or merged PR \"Enable MSML_TypeParamName for the full solution\" (#4762)"},{"Id":"558388405","IsPullRequest":true,"CreatedAt":"2020-02-01T19:09:53","Actor":"frank-dong-ms","Number":"4759","RawContent":null,"Title":"enlarge cancelTimeout from 5 minutes to 10 minute","State":"closed","Body":"RT.\r\n\r\nSeeing this build: https://dev.azure.com/dnceng/public/_build/results?buildId=503424&view=logs&j=11c3dbcc-a5f4-5edd-335b-a8af5aa47d46\r\n\r\nTest run times out and artifact is not uploaded as cancel timeout exceeds with below message:\r\n##[warning]Agent NetCorePublic-Pool 114 did not respond to a cancelation request with 00:05:00\r\n\r\nset this cancel time to 10 minutes to ensure we upload artifact for investigation\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4759","RelatedDescription":"Closed or merged PR \"enlarge cancelTimeout from 5 minutes to 10 minute\" (#4759)"},{"Id":"558444240","IsPullRequest":true,"CreatedAt":"2020-02-01T19:02:27","Actor":"Lynx1820","Number":"4763","RawContent":null,"Title":"Fix for ColumnSelecting issue","State":"closed","Body":"There was an issue found when there's a transform prior to ColumnSelect that gets rid of the selected input variables in the ONNX graph. \r\n\r\nI modified the existing test to demonstrate this issue.\r\n\r\nA (possibly temporary) fix is to not remove any of the input variables from the ONNX graph. \r\n   \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4763","RelatedDescription":"Closed or merged PR \"Fix for ColumnSelecting issue\" (#4763)"},{"Id":"558404588","IsPullRequest":false,"CreatedAt":"2020-02-01T00:11:44","Actor":"najeeb-kazmi","Number":"4760","RawContent":null,"Title":"Set seed in PredictorTests","State":"closed","Body":"All the tests in [TestPredictors.cs](https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs) call some combination of `RunAllTests`, `RunOneAllTests`, `Run_TrainTest`, and `Run_CV`.\r\nhttps://github.com/dotnet/machinelearning/blob/76777592cf7e094f5361285bc64111d09d5bdb7c/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs#L95\r\nwhere `ctx.ExtraArgs` is used to add additional arguments when building the `maml` command to be run\r\nhttps://github.com/dotnet/machinelearning/blob/76777592cf7e094f5361285bc64111d09d5bdb7c/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs#L143-L147\r\n\r\nThis can be used to set the seed for `maml`. All calls to `Run*` in `TestPredictiors.cs` should pass `extraSettings: new[] { \"seed=1\" }` to set the seed.\r\n\r\ncc: @harishsk  ","Url":"https://github.com/dotnet/machinelearning/issues/4760","RelatedDescription":"Closed issue \"Set seed in PredictorTests\" (#4760)"},{"Id":"558341394","IsPullRequest":true,"CreatedAt":"2020-01-31T22:10:48","Actor":"harishsk","Number":"4758","RawContent":null,"Title":"Updating onnx baseline files for regression tests","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4758","RelatedDescription":"Closed or merged PR \"Updating onnx baseline files for regression tests\" (#4758)"},{"Id":"557944784","IsPullRequest":true,"CreatedAt":"2020-01-31T20:32:20","Actor":"frank-dong-ms","Number":"4753","RawContent":null,"Title":"can_reload_model test issue","State":"closed","Body":"Increase wait time for can_reload_model test as we are observing some failures recently:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=502691&view=logs&j=5aa5c7df-492a-5eaf-973a-62b7b0f0ee3b&t=ffdbd604-f3e2-5332-cf61-c8dd00799b47\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=502647&view=logs&j=5aa5c7df-492a-5eaf-973a-62b7b0f0ee3b&t=ffdbd604-f3e2-5332-cf61-c8dd00799b47\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=502589&view=logs&j=5aa5c7df-492a-5eaf-973a-62b7b0f0ee3b&t=ffdbd604-f3e2-5332-cf61-c8dd00799b47\r\n\r\ntried several run with this fix, no can_reload_model failed again","Url":"https://github.com/dotnet/machinelearning/pull/4753","RelatedDescription":"Closed or merged PR \"can_reload_model test issue\" (#4753)"},{"Id":"558337211","IsPullRequest":true,"CreatedAt":"2020-01-31T19:48:34","Actor":"sharwell","Number":"4757","RawContent":null,"Title":"Disable test parallelization in TimeSeries tests","State":"open","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4757","RelatedDescription":"Open PR \"Disable test parallelization in TimeSeries tests\" (#4757)"},{"Id":"558336853","IsPullRequest":true,"CreatedAt":"2020-01-31T19:47:49","Actor":"sharwell","Number":"4756","RawContent":null,"Title":"Update test baseline for TimeSeries tests","State":"open","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4756","RelatedDescription":"Open PR \"Update test baseline for TimeSeries tests\" (#4756)"},{"Id":"558336729","IsPullRequest":true,"CreatedAt":"2020-01-31T19:47:35","Actor":"sharwell","Number":"4755","RawContent":null,"Title":"Check exception status even if TF_SessionRun throws an exception","State":"open","Body":"Extracted from #4569","Url":"https://github.com/dotnet/machinelearning/pull/4755","RelatedDescription":"Open PR \"Check exception status even if TF_SessionRun throws an exception\" (#4755)"},{"Id":"557873637","IsPullRequest":true,"CreatedAt":"2020-01-31T17:48:49","Actor":"pieths","Number":"4751","RawContent":null,"Title":"Add double initializer to the OptionalColumnTransform onnx export.","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4751","RelatedDescription":"Closed or merged PR \"Add double initializer to the OptionalColumnTransform onnx export.\" (#4751)"},{"Id":"557819604","IsPullRequest":true,"CreatedAt":"2020-01-31T16:24:14","Actor":"sharwell","Number":"4746","RawContent":null,"Title":"Implement MSML_ExtendBaseTestClass (Test classes should be derived from BaseTestClass)","State":"closed","Body":"All current violations are excluded from analysis via **.editorconfig**. After this is merged, someone can enable the diagnostic in one project at a time and ensure there are no violations.","Url":"https://github.com/dotnet/machinelearning/pull/4746","RelatedDescription":"Closed or merged PR \"Implement MSML_ExtendBaseTestClass (Test classes should be derived from BaseTestClass)\" (#4746)"},{"Id":"557825889","IsPullRequest":true,"CreatedAt":"2020-01-31T06:49:52","Actor":"frank-dong-ms","Number":"4747","RawContent":null,"Title":"Can reload model issue","State":"closed","Body":"troubleshoot can_reload_model issue, might be caused by deadlock, try loosen max thread number:\r\n\r\nfailure sample:\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=500380&view=logs&j=ac97a0ee-ee90-5a55-af17-a5a589fa545f&t=b52ada90-72fa-5cd6-fc24-3dd2e707ecb9\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4747","RelatedDescription":"Closed or merged PR \"Can reload model issue\" (#4747)"},{"Id":"557885514","IsPullRequest":false,"CreatedAt":"2020-01-31T03:10:53","Actor":"najeeb-kazmi","Number":"4752","RawContent":null,"Title":"Default seed is not propagated from MLContext","State":"open","Body":"In theory, the seed set in `MLContext` is intended to provide the global seed for all components and operations requiring randomness, e.g. sampling, permutation, etc. In practice, this doesn't always hold true.\r\n\r\n`TrainTestSplit`, `CrossValidationSplit`, and `CrossValidate` all have a user specified seed and call `EnsureGroupPreservationColumn`, which in turn uses `GenerateNumberTransform` and `HashingEstimator`.\r\n\r\nWhen the seed is not specified by the user, it is not derived from `MLContext`. Instead, `GenerateNumberTransform` and `HashingEstimator` use their own defaults, so that if a user doesn't specify a seed to `TrainTestSplit`, `CrossValidationSplit`, or `CrossValidate`, they will always get a deterministic split regardless of the seed in `MLContext`.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/24c827416d23a6a74f16f71ec9123ca15e0e12fd/src/Microsoft.ML.Data/DataLoadSave/DataOperationsCatalog.cs#L496-L505\r\nhttps://github.com/dotnet/machinelearning/blob/24c827416d23a6a74f16f71ec9123ca15e0e12fd/src/Microsoft.ML.Data/DataLoadSave/DataOperationsCatalog.cs#L521-L525\r\n\r\ncc: @harishsk @justinormont ","Url":"https://github.com/dotnet/machinelearning/issues/4752","RelatedDescription":"Open issue \"Default seed is not propagated from MLContext\" (#4752)"},{"Id":"557845624","IsPullRequest":false,"CreatedAt":"2020-01-31T00:50:34","Actor":"najeeb-kazmi","Number":"4749","RawContent":null,"Title":"[Meta Issue] Changing defaults","State":"open","Body":"First of all, is this a breaking change? @terrajobst suggested it is an acceptable breaking change https://github.com/dotnet/machinelearning/issues/2305#issuecomment-508197927, @eerhardt commented that is was decided that changing defaults is acceptable https://github.com/dotnet/machinelearning/issues/2305#issuecomment-509289908\r\n\r\n- Change the following defaults based on results from @justinormont:\r\n\r\n  - #2870 `FeatirizeText` default n-grams lengths to match default text recipe:\r\n    - word: 1 -> 2\r\n    - char: no change\r\n    - @justinormont correct me if I am wrong: was the default weighting TF-IDF in TLC? It is currently TF\r\n\r\n  - #2305 `AveragedPerceptron` default iterations from 1 to 10\r\n\r\n- #3365 `RowGroupColumnName` in `FastTree` and `LightGbm` ranking trainer `Options` classes: `null` -> `'GroupId'`\r\n  - This won't actually break anything since a ranking trainer would throw anyway if there was no group ID column specified https://github.com/dotnet/machinelearning/issues/3365#issuecomment-497775736\r\n  - This would make it consistent with the API for the rankers without the `Options` class, where the default is `'GroupId'`\r\n  - They should be consistent, at least. Either `null` everywhere or `'GroupId'` everywhere.\r\n\r\ncc: @harishsk @justinormont @gvashishtha @eerhardt ","Url":"https://github.com/dotnet/machinelearning/issues/4749","RelatedDescription":"Open issue \"[Meta Issue] Changing defaults\" (#4749)"},{"Id":"557833624","IsPullRequest":false,"CreatedAt":"2020-01-31T00:12:01","Actor":"najeeb-kazmi","Number":"4748","RawContent":null,"Title":"[Meta Issue] LDA topic word summary and other enhancements","State":"open","Body":"This issue summarizes many user requests for exposing or adding functionality to Latent Dirichlet Allocation (LDA) model, as well as some nits.\r\n\r\n## P1: Topic Word Summary\r\nAlready existing functionality not working as advertised.\r\n\r\nThe `LatentDirichletAllocation` transform provides a popular topic modeling algorithm. It learns a model to categorize a document into `n` topics, and outputs an n-dimensional topic vector for each document, with scores for the document belonging to each topic.\r\n```\r\nTopic1  Topic2  Topic3\r\n0.6364  0.2727  0.0909\r\n0.5455  0.1818  0.2727\r\n```\r\nThere are two use cases for this:\r\n\r\n1. Use the topic vector as a featurizer for a trainer.\r\n2. Predict which topic a document belongs to directly from the LDA model, for example \"Cat related\", \"Dog related\", \"Tech news\", etc.\r\n\r\n(1) works fine as is, but (2) has usability issues related to interpretibility of the learned topics. The topic vector doesn't actually name the topics so it is not possible to tell what a topic actually is.\r\n\r\nLDA has a parameter `numberOfSummaryTermsPerTopic`, which in theory is supposed to provide a list of most important terms for each topic. These terms would identify what a topic learned by the model actually is. However, there is no way to get this summary from the model currently, as the model parameters are not exposed, and is therefore misleading the user into thinking that this is possible.\r\n\r\nIt used to be accessible in the old PigSty API (#1411) but that has since been removed. It was also present in TLC as a text file in the model.zip, which wasn't a particularly user friendly way anyway https://github.com/dotnet/machinelearning/issues/4322#issuecomment-572333759. This should be made accessible to the user by extracting the parameters from `LdaState` https://github.com/dotnet/machinelearning/issues/1411#issue-374603754.\r\n\r\nMain issue containing the discussion: #4322 \r\nDuplicate issues with the same ask: #1411 #2197 #3092 #4328 #4735 \r\n\r\n## P2: Export Full Model\r\nNew feature request: #3092 \r\n\r\nThis ask is to expose more model parameters than just topic word summary.\r\n\r\n## P2: Seeded LDA\r\nNew feature request: #4143 \r\n\r\nSeed each topic with a list of words, which will make the topic words converge in that direction. May not be present in [LightLDA](https://github.com/microsoft/LightLDA), which ML.NET wraps.\r\n\r\n## P3: Nits\r\nLDA always prints to console: #3192\r\n\r\nThank you to our users who have brought these to our attention:\r\n@hobbsa @IvanAntipov @MagicMaxxx @nukeandserve @PaulDMendoza\r\n\r\ncc: @harishsk @justinormont @yaeldekel @antoniovs1029 @gvashishtha ","Url":"https://github.com/dotnet/machinelearning/issues/4748","RelatedDescription":"Open issue \"[Meta Issue] LDA topic word summary and other enhancements\" (#4748)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-04T05:30:39.6270138Z","RunDurationInMilliseconds":708}