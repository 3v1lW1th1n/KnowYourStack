{"Data":{"Blog":{"FeedItems":[{"Title":"Porting desktop apps to .NET Core","PublishedOn":"2019-05-28T16:00:55+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Since I&#8217;ve been working with the community on porting desktop applications from .NET Framework to .NET Core, I&#8217;ve noticed that there are two camps of folks: some want a very simple and...","Href":"https://devblogs.microsoft.com/dotnet/porting-desktop-apps-to-net-core/","RawContent":null},{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":43,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":37,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9768389701","Type":"PullRequestEvent","CreatedAt":"2019-06-06T04:57:34","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24995","RelatedDescription":"Opened pull request \"Exclude tests that do not work without tail calls on arm32 Unix.\" (#24995) at dotnet/coreclr","RelatedBody":""},{"Id":"9768327810","Type":"PullRequestEvent","CreatedAt":"2019-06-06T04:38:10","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24982","RelatedDescription":"Merged pull request \"Delete TwoKeywords test.\" (#24982) at dotnet/coreclr","RelatedBody":"https://github.com/dotnet/coreclr/issues/23224#issuecomment-499270788"},{"Id":"9768325539","Type":"PullRequestEvent","CreatedAt":"2019-06-06T04:37:24","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24984","RelatedDescription":"Merged pull request \"Merge two equal exclusion groups for arm32 All OS.\" (#24984) at dotnet/coreclr","RelatedBody":"There were two:\r\n```\r\n<!-- Arm32 All OS -->\r\n    <ItemGroup Condition=\"'$(XunitTestBinBase)' != '' and ('$(BuildArch)' == 'arm' or '$(AltJitArch)' == 'arm')\">\r\n```\r\nand\r\n```\r\n<!-- arm32 All OS specific excludes -->\r\n    <ItemGroup Condition=\"'$(XunitTestBinBase)' != '' and  ('$(BuildArch)' == 'arm' or '$(AltJitArch)' == 'arm')\">\r\n```"},{"Id":"9767835236","Type":"IssuesEvent","CreatedAt":"2019-06-06T02:07:41","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24994","RelatedDescription":"Opened issue \"[arm] Assert failure: currentProcessCpuCount == g_processAffinitySet.Count()\" (#24994) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-all-testing/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190528.79/workItem/JIT/analysis/xunit/JIT_Performance._CodeQuality_V8_Crypto_Crypto_Crypto_~2F_CodeQuality_V8_Crypto_Crypto_Crypto_sh\r\n\r\n**Failed tests:**\r\nUbuntu.1404.Arm32.Open-arm-Checked-no_tiered_compilation\r\nUbuntu.1404.Arm32.Open-arm:Checked\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 5981 [0x0000175d], Thread: 5981 [0x175d]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n    File: /__w/4/s/src/vm/gcenv.os.cpp Line: 113\r\n    Image: /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload/corerun\r\n\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh: line 252:  5981 Aborted                 $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/Reports/JIT.Performance/CodeQuality/V8/Crypto/Crypto/Crypto.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload/corerun Crypto.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload\r\n> /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"9767824005","Type":"PullRequestEvent","CreatedAt":"2019-06-06T02:04:20","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24993","RelatedDescription":"Opened pull request \"Send tiered compilation settings rundown event on EventPipe detach\" (#24993) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9768436250","Type":"PullRequestEvent","CreatedAt":"2019-06-06T05:11:58","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11496","RelatedDescription":"Merged pull request \"Update SDK to 2.2.400-preview-64205-02\" (#11496) at dotnet/cli","RelatedBody":""},{"Id":"9768435561","Type":"PullRequestEvent","CreatedAt":"2019-06-06T05:11:46","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11495","RelatedDescription":"Merged pull request \"Updating SDK to 2.1.800-preview-64205-01\" (#11495) at dotnet/cli","RelatedBody":""},{"Id":"9768305141","Type":"PullRequestEvent","CreatedAt":"2019-06-06T04:30:38","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11488","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/templating\" (#11488) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 12:51 PM\r\n- **Commit**: 778af19c2c7f99320fe33d38b18003483ebed559\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19304.1\r\n\r\n"},{"Id":"9768304232","Type":"PullRequestEvent","CreatedAt":"2019-06-06T04:30:21","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11487","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/sdk\" (#11487) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 10:24 AM\r\n- **Commit**: f9a338d041118637890869bba587b82557947f8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19305.1\r\n\r\n"},{"Id":"9767468395","Type":"PullRequestEvent","CreatedAt":"2019-06-06T00:16:37","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11496","RelatedDescription":"Opened pull request \"Update SDK to 2.2.400-preview-64205-02\" (#11496) at dotnet/cli","RelatedBody":""},{"Id":"9767463716","Type":"PullRequestEvent","CreatedAt":"2019-06-06T00:15:20","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11495","RelatedDescription":"Opened pull request \"Updating SDK to 2.1.800-preview-64205-01\" (#11495) at dotnet/cli","RelatedBody":""},{"Id":"9767420988","Type":"IssuesEvent","CreatedAt":"2019-06-06T00:03:14","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11494","RelatedDescription":"Opened issue \"A new option to allow dotnet tool install should return exit code 0 if tool is already installed\" (#11494) at dotnet/cli","RelatedBody":"Continue of https://github.com/dotnet/cli/issues/11259 to make the topic more specific. Even thought \"dotnet update\" with \"--version\" could solve the similar issue, but it is hard to discover."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9768417006","Type":"PullRequestEvent","CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Merged pull request \"Add HttpResponseMessage.TrailingHeaders\" (#1219) at dotnet/standard","RelatedBody":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz "},{"Id":"9768416990","Type":"IssuesEvent","CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1144","RelatedDescription":"Closed issue \"Add HttpResponseMessage.TrailingHeaders to netstandard\" (#1144) at dotnet/standard","RelatedBody":"https://github.com/dotnet/corefx/blob/4fa6319fb590b046ba4c962088b960a31749f245/src/System.Net.Http/src/System/Net/Http/HttpResponseMessage.cs#L119-L130\r\n\r\nDiscussion: https://github.com/dotnet/corefx/issues/34912#issuecomment-482777355"},{"Id":"9763173564","Type":"PullRequestEvent","CreatedAt":"2019-06-05T13:16:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1231) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n"},{"Id":"9763098158","Type":"PullRequestEvent","CreatedAt":"2019-06-05T13:06:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1231) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n"},{"Id":"9762746653","Type":"PullRequestEvent","CreatedAt":"2019-06-05T12:14:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1230","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1230) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.23\r\n\r\n"},{"Id":"9762685270","Type":"PullRequestEvent","CreatedAt":"2019-06-05T12:04:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1230","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1230) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.23\r\n\r\n"},{"Id":"9759528118","Type":"PullRequestEvent","CreatedAt":"2019-06-05T00:46:33","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#1224) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9768489573","Type":"IssuesEvent","CreatedAt":"2019-06-06T05:28:10","Actor":"liu123456789","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38295","RelatedDescription":"Opened issue \"aspnetcore linux docker X509Certificate2 error not enough data\" (#38295) at dotnet/corefx","RelatedBody":"error: 0D06B08E:asn1 encoding routines:ASN1_D2I_READ_BIO:not enough data\r\n\r\nWho can help me?"},{"Id":"9768247119","Type":"PullRequestEvent","CreatedAt":"2019-06-06T04:11:33","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38287","RelatedDescription":"Merged pull request \"Re-generate System.Memory ref assembly against implementation\" (#38287) at dotnet/corefx","RelatedBody":"cc: @ahsonkhan @danmosemsft @stephentoub @jkotas "},{"Id":"9768246165","Type":"PullRequestEvent","CreatedAt":"2019-06-06T04:11:13","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38286","RelatedDescription":"Merged pull request \"Re-generate System.Runtime.Loader ref assembly against implementation\" (#38286) at dotnet/corefx","RelatedBody":"cc: @stephentoub @ahsonkhan @danmosemsft @jkotas "},{"Id":"9768075227","Type":"IssuesEvent","CreatedAt":"2019-06-06T03:18:45","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/38285","RelatedDescription":"Closed issue \"SafeAccessTokenHandle is missing from .Net Core\" (#38285) at dotnet/corefx","RelatedBody":"I've just noticed that you provide a SafeHandle [implementation](https://docs.microsoft.com/en-us/dotnet/api/microsoft.win32.safehandles.safeaccesstokenhandle?view=netcore-2.2) for thread access tokens, however, this doesn't seem to be part of the Microsoft.Win32.SafeHandles namespace on .Net Core. \r\n\r\nAny insight into why this wasn't included?"},{"Id":"9768067376","Type":"IssuesEvent","CreatedAt":"2019-06-06T03:16:21","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38294","RelatedDescription":"Opened issue \"Writing large JsonElement via JsonSerializer.WriteAsync hangs\" (#38294) at dotnet/corefx","RelatedBody":"There's a bug in the writing loop that causes writing a JsonElement to hang forever. Here's the sample code:\r\n\r\n```C#\r\nvar json = await new HttpClient().GetStringAsync(\"https://raw.githubusercontent.com/davidfowl/AspNetCoreDiagnosticScenarios/master/Scenarios/pokemon.json\");\r\nvar root = JsonSerializer.Parse<JsonElement>(json);\r\nvar ms = new MemoryStream();\r\nawait JsonSerializer.WriteAsync(root, root.GetType(), ms);\r\n```\r\n\r\ncc @rynowak @steveharter @ahsonkhan @JeremyKuhne "},{"Id":"9767942310","Type":"IssuesEvent","CreatedAt":"2019-06-06T02:39:08","Actor":"JamesNK","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38293","RelatedDescription":"Opened issue \"HTTP/2 cancellation and object null reference\" (#38293) at dotnet/corefx","RelatedBody":"HttpClient is throwing NullReferenceException when it gets RST_STREAM INTERNAL_ERROR from the server.\r\n\r\nWireshark log attached.\r\n\r\n```\r\nC:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient [jamesnk/deadline-safety ≡ +0 ~3 -0 !]> dotnet run --use\r\n_tls false --server_port 50052 --client_type httpclient --test_case timeout_on_sleeping_server\r\nUse TLS: False\r\nUse Test CA: False\r\nClient type: httpclient\r\nServer host: localhost\r\nServer port: 50052\r\nrunning timeout_on_sleeping_server\r\ntrce: Grpc.Net.Client.Internal.GrpcCall[5]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Starting deadline timeout. Duration: 00:00:00.0804225.\r\ndbug: Grpc.Net.Client.Internal.GrpcCall[1]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Starting gRPC call. Method type: 'DuplexStreaming', URI: '/grpc.testing.TestService/FullDuplexCall'.\r\ndbug: Grpc.Net.Client.Internal.GrpcCall[6]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Sending message.\r\ntrce: Grpc.Net.Client.Internal.GrpcCall[9]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Serialized 'Grpc.Testing.StreamingOutputCallRequest' to 27190 byte message.\r\ntrce: Grpc.Net.Client.Internal.GrpcCall[7]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Message sent.\r\nfail: Grpc.Net.Client.Internal.GrpcCall[6]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Error starting gRPC call.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Net.Http.RedirectHandler.GetUriForRedirect(Uri requestUri, HttpResponseMessage response)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.SendAsync(HttpClient client, HttpRequestMessage message) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 432\r\n\r\ndbugUnhandled Exception: : Grpc.Net.Client.Internal.GrpcCall[8]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      gRPC call canceled.\r\nSystem.AggregateException: One or more errors occurred. (Object reference not set to an instance of an object.) ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Net.Http.RedirectHandler.GetUriForRedirect(Uri requestUri, HttpResponseMessage response)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.SendAsync(HttpClient client, HttpRequestMessage message) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 432\r\n   at Grpc.Net.Client.Internal.HttpContentClientStreamReader`2.MoveNextCore(CancellationToken cancellationToken) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\HttpContentClientStreamReader.cs:line 113\r\n   at InteropTestsClient.InteropClient.RunTimeoutOnSleepingServerAsync(TestServiceClient client) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 562\r\n   at InteropTestsClient.InteropClient.RunTestCaseAsync(IChannel channel, ClientOptions options) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 265\r\n   at InteropTestsClient.InteropClient.Run() in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 129\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at InteropTestsClient.InteropClient.<>c.<Run>b__5_1(ClientOptions options) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 122\r\n   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)\r\n   at InteropTestsClient.InteropClient.Run(String[] args) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 111\r\n   at InteropTestsClient.Program.Main(String[] args) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\Program.cs:line 25\r\n---> (Inner Exception #0) System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Net.Http.RedirectHandler.GetUriForRedirect(Uri requestUri, HttpResponseMessage response)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.SendAsync(HttpClient client, HttpRequestMessage message) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 432\r\n   at Grpc.Net.Client.Internal.HttpContentClientStreamReader`2.MoveNextCore(CancellationToken cancellationToken) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\HttpContentClientStreamReader.cs:line 113\r\n   at InteropTestsClient.InteropClient.RunTimeoutOnSleepingServerAsync(TestServiceClient client) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 562\r\n   at InteropTestsClient.InteropClient.RunTestCaseAsync(IChannel channel, ClientOptions options) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 265\r\n   at InteropTestsClient.InteropClient.Run() in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 129<---\r\n```\r\n[httpclient-nre.zip](https://github.com/dotnet/corefx/files/3259733/httpclient-nre.zip)\r\n\r\n"},{"Id":"9767924638","Type":"PullRequestEvent","CreatedAt":"2019-06-06T02:34:06","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/38280","RelatedDescription":"Closed pull request \"Enable tracing context propagation without listener in presence of parent Activity\" (#38280) at dotnet/corefx","RelatedBody":"Fixes #36954\r\n\r\nWith this change, if there was a parent Activity (created by ASP.NET Core, for example), instrumentation for HttpClient lights-up not requiring an active diagnostics listener for System.Net.Http events.\r\n\r\n2 new APIs are introduced to control this behavior.\r\n\r\n* static `HttpClientHandler.SuppressGlobalActivityPropagation`. Turns off propagation for AppDomain (even when there is a DiagnosticListener).\r\n* instance `HttpclientHandler.SuppressActivityPropagaion`. Turns off propagation for a specific client (even when there is a DiagnosticListener). \r\n* For request-level control, users can set parent Activity to null (and even implement handler with this behavior). If we'll find that this is actively used, we may come up with better API for it:\r\n\r\n```csharp\r\nawait Task.Run (() =>\r\n{\r\n    Activity.Current = null;\r\n    return client.SendAsync(request);\r\n});\r\n```\r\n\r\nAPI review issue #38292\r\n\r\ncc @davidfowl @SergeyKanzhelev\r\n"},{"Id":"9767858526","Type":"IssuesEvent","CreatedAt":"2019-06-06T02:14:49","Actor":"lmolkova","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38292","RelatedDescription":"Opened issue \"API review: Allow suppressing Activity creation in System.Net.HttpClient\" (#38292) at dotnet/corefx","RelatedBody":"# Background \r\n\r\nSee  #36954:  it enables propagation of Activity in HttpClient if there is a parent Activity. I.e. allows ASP.NET Core (or other incoming layer instrumentation) to control distributed tracing.\r\n\r\nEnd-to-end distributed tracing requires Activity creating on incoming (ASP.NET Core) layer and outgoing. Incoming instrumentation gets context from request headers, outgoing request instrumentation propagates tracing context further.\r\n\r\nNow It is controlled with DiagnosticListener: user app needs to listen to both: ASP.NET Core and HttpClient sources to enable end-to-end and enable Activity creation (and propagation).\r\n\r\nASP.NET Core wants to support distributed tracing by default. Using DiagnosticListener for HttpClient is not desirable:\r\n- events with payloads are not needed, only propagation is needed - it also affects perf\r\n- listening to DiagnosticListener is complicated and may interfere with user app or tracing system\r\n\r\nIn the absence of parent Activity instrumentation is still enabled with DiagnosticListener.\r\n\r\nWe also want to **allow users to disable the feature at various levels as we expect some scenarios where propagation is not desirable because of trust boundaries, CORS configuration, etc.**  \r\n\r\n\r\n# Proposal\r\n\r\n```diff\r\npublic partial class HttpClientHandler : System.Net.Http.HttpMessageHandler\r\n {\r\n+  public bool SuppressActivityPropagation { get { ... } set { ... } }\r\n+  public static bool SuppressGlobalActivityPropagation { get { ... } set { ... } }\r\n}\r\n```\r\n- static `HttpClientHandler.SuppressGlobalActivityPropagation`. Turns off propagation for AppDomain (even if there is an active DiagnosticListener).\r\n- instance `HttpclientHandler.SuppressActivityPropagaion`. Turns off propagation for a specific client (even if there is an active  DiagnosticListener).\r\n\r\n\r\n- For request-level control, users can set parent Activity to null (and even implement handler with this behavior). If we'll find that this is actively used, we may come up with better API for it:\r\n\r\n\r\n\r\nDraft PR with implementation #38280\r\n\r\n"},{"Id":"9767783504","Type":"PullRequestEvent","CreatedAt":"2019-06-06T01:51:59","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38291","RelatedDescription":"Opened pull request \"Open pdb files with FileShare.Read and FileShare.Delete (#38214)\" (#38291) at dotnet/corefx","RelatedBody":"#### Description\r\nWe've been getting reports of locked pdb files (aspnet/AspNetCore#3269) when deploying ASP.NET Core applications (but not locked dlls) and we assumed that it was application insights locking the pdb. Turns out, the runtime opens pdb files (once somebody accesses something like Exception.StackTrace) it can't be renamed/deleted until the process ends. This interrupts the deployment process on azure app service. It turns out we need to pass the right FileShare permissions when opening the file pdb file.\r\n\t\t\r\n#### Customer Impact\r\n\r\nCustomers that experience any exception today cannot easily re-deploy their site without going to the azure portal and restarting the site. The same goes for a server on premises (the admin needs to go restart the IIS application pool to upgrade the site).\r\n\r\n#### Regression?\r\nNo.\r\n\r\n#### Risk\r\nVery small, it's a very small tweak to the code that opens the file.\r\n\r\ncc: @tmat @danmosemsft @stephentoub @DamianEdwards "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9768494422","Type":"IssuesEvent","CreatedAt":"2019-06-06T05:29:38","Actor":"Therzok","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36202","RelatedDescription":"Opened issue \"IDE0059 wrong span for unused assignment\" (#36202) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n3.1.0-beta4-19261-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\n\t\tvoid StreamCopy (Stream source, Stream destination, int start, int length)\r\n\t\t{\r\n\t\t\tvar buffer = new byte[1024 * 8];\r\n\t\t\tvar read = 0;\r\n\t\t\tvar left = length;\r\n\t\t\twhile ((read = source.Read (buffer, 0, Math.Min (left, buffer.Length))) != 0) {\r\n\t\t\t\tdestination.Write (buffer, 0, read);\r\n\t\t\t\tleft -= read;\r\n\t\t\t}\r\n\t\t}\r\n```\r\n\r\n**Expected Behavior**:\r\n`= 0` or `0` is highlighted as unused.\r\n\r\n**Actual Behavior**:\r\n<img width=\"314\" alt=\"Screenshot 2019-06-06 at 08 28 50\" src=\"https://user-images.githubusercontent.com/109974/59009148-24968800-8835-11e9-9f9a-7ab2c712107e.png\">\r\n\r\nWe can see the analyzer knows what's redundant here:\r\n<img width=\"331\" alt=\"Screenshot 2019-06-06 at 08 26 15\" src=\"https://user-images.githubusercontent.com/109974/59009157-2d875980-8835-11e9-82ed-62efa6b3cb0a.png\">\r\n"},{"Id":"9768258342","Type":"IssuesEvent","CreatedAt":"2019-06-06T04:15:17","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36201","RelatedDescription":"Closed issue \"Problem with C# lambda expression auto-formatting\" (#36201) at dotnet/roslyn","RelatedBody":"VSF_TYPE_MARKDOWNI'm writing a C# lambda expression somewhat like this:\r\n\r\n```csharp\r\n    static Action action(() =>\r\n    {\r\n        doThings();\r\n    });\r\n```\r\nAt least that's how I meant it. I had typed it like this:\r\n```csharp\r\n    static Action action( () => // with a space right here\r\n    {\r\n        doThings();\r\n    });\r\n```\r\nWhen I deleted and retyped the semicolon at the end to auto format it, this happened:\r\n```csharp\r\n    static Action action(() =>\r\n   {\r\n       doThings();\r\n   });\r\n```\r\nIt shifts all of the text over by as many spaces as there are between the two `(`s, I tested it. This wasn't a difficult bug to deal with, but I thought I'd report it, because I'm fairly sure this is unintended.\r\n\r\nThanks to whoever read through this.\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/597221/problem-with-c-lambda-expression-auto-formatting.html\r\nVSTS ticketId: 909893_\r\n_These are the original issue comments:_\r\n(no comments)\r\n_These are the original issue solutions:_\r\n(no solutions)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9767540288","Type":"PullRequestEvent","CreatedAt":"2019-06-06T00:37:38","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7490","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7490) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9767534875","Type":"PullRequestEvent","CreatedAt":"2019-06-06T00:35:58","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7489","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7489) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern"},{"Id":"9766843251","Type":"PullRequestEvent","CreatedAt":"2019-06-05T21:49:13","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7489","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7489) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9766198611","Type":"PullRequestEvent","CreatedAt":"2019-06-05T20:05:27","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7488","RelatedDescription":"Opened pull request \"Diagnostic improvements in CPAOT section builder\" (#7488) at dotnet/corert","RelatedBody":"I've been debugging CPAOT for almost a year. One recurring hard\r\nproblem has always been diagnosing missing items in the symbol\r\nmap that manifest as \"key not found\" exceptions during the\r\nrelocation phase.\r\n\r\nI have hit this again while debugging the constrained calls and\r\nI have realized I can mitigate the situation by slightly\r\nrearranging things - instead of the straight array of relocations\r\nthere is mostly no harm in storing directly the ObjectData refs\r\n(except for the presumably small perf penalty of one extra\r\nindirection in accessing the array of relocations). ObjectData\r\nis usually much easier to analyze in the debugger as it typically\r\ncontains a symbol definition.\r\n\r\nI have applied minor mechanical renames to put the naming in sync\r\nwith the new semantics; please let me know if you spot an omission\r\non my part.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9759245775","Type":"PullRequestEvent","CreatedAt":"2019-06-04T23:26:43","Actor":"tannergooding","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Merged pull request \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486) at dotnet/corert","RelatedBody":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257"},{"Id":"9758787306","Type":"IssuesEvent","CreatedAt":"2019-06-04T21:43:22","Actor":"timmydo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7487","RelatedDescription":"Opened issue \"Process crashes on Linux when catching a null pointer exception from managed code\" (#7487) at dotnet/corert","RelatedBody":"I have a program that does something like this:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            // this loads a corert native library\r\n            var blah= NativeMethods.DoSomething(IntPtr.Zero, IntPtr.Zero, 10_000);\r\n            try\r\n            {\r\n                string x = null;\r\n                Console.WriteLine($\"{x.Length}\");\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n            }\r\n            Console.WriteLine(\"done\");\r\n        }\r\n```\r\n\r\nwhen the null pointer exception is thrown, the corert sigsegv handler is invoked. https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/Native/Runtime/unix/HardwareExceptions.cpp#L582\r\n\r\nAround L582, the processess crashes with sigabort:\r\n\r\n```\r\ndotnet TestConsoleApp.dll\r\n*** stack smashing detected ***: dotnet terminated\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7fe006ea4bfb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7fe006f2d437]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x0)[0x7fe006f2d400]\r\n/root/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.2.4/runtimes/linux-x64/native/libcoreclr.so(+0x4e15c7)[0x7fe00656b5c7]\r\n```\r\n"},{"Id":"9758571298","Type":"PullRequestEvent","CreatedAt":"2019-06-04T21:05:55","Actor":"tannergooding","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Opened pull request \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486) at dotnet/corert","RelatedBody":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257"},{"Id":"9757714887","Type":"PullRequestEvent","CreatedAt":"2019-06-04T18:54:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Merged pull request \"Avoid custom attributes when resolving lazy pinvokes\" (#7484) at dotnet/corert","RelatedBody":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled."},{"Id":"9757713190","Type":"PullRequestEvent","CreatedAt":"2019-06-04T18:53:49","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7485) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @adamsitnik @Youssef1313"},{"Id":"9756985253","Type":"PullRequestEvent","CreatedAt":"2019-06-04T17:04:18","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7485) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9756607137","Type":"PullRequestEvent","CreatedAt":"2019-06-04T16:10:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Opened pull request \"Avoid custom attributes when resolving lazy pinvokes\" (#7484) at dotnet/corert","RelatedBody":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9768141951","Type":"IssuesEvent","CreatedAt":"2019-06-06T03:38:51","Actor":"kkwpsv","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3307","RelatedDescription":"Opened issue \"dotnet publish problems\" (#3307) at dotnet/sdk","RelatedBody":"I have two projects. One is a ConsoleApp, the other is WebApplication. And the WebApplication has a `ProjectReference` to reference the ConsoleApp.\r\n\r\nWhen I publish the WebApplication with `--runtime`, it has an error like below:\r\n\r\n> /home/lsj/test/ConsoleApp2/ConsoleApp2.csproj : error : NETSDK1061: The project was restored using Microsoft.NETCore.App version 2.1.9, but with current settings, version 2.1.0 would be used instead. To resolve this issue, make sure the same settings are used for restore and for subsequent operations such as build or publish. Typically this issue can occur if the RuntimeIdentifier property is set during build or publish but not during restore. For more information, see https://aka.ms/dotnet-runtime-patch-selection.\r\n\r\nBut when I remove the `<OutputType>Exe</OutputType>` line from the csproj of ConsoleApp, it succeeds.\r\n\r\n\r\nI have done many tests:\r\n\r\n- If I only publish the ConsoleApp with `--runtime` and `<OutputType>Exe</OutputType>`, it will success.\r\n\r\n- If I publish the WebApplication with `--runtime` and `<OutputType>Exe</OutputType>`, it will fail, no matter on Linux or Windows, no matter with .net core 2.1 or 2.2. But it will succeed with .net core 3.0. (I think it's because that there's no any .net core 3.0.x)\r\n\r\n- If I publish the WebApplication with `--runtime` and without `<OutputType>Exe</OutputType>`, it will always succeed.\r\n\r\n- If I publish the WebApplication without `--runtime` and with `<OutputType>Exe</OutputType>`, it will always succeed.\r\n"},{"Id":"9767522342","Type":"PullRequestEvent","CreatedAt":"2019-06-06T00:32:15","Actor":"cdmihai","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3306","RelatedDescription":"Opened pull request \"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject\" (#3306) at dotnet/sdk","RelatedBody":""},{"Id":"9767466517","Type":"PullRequestEvent","CreatedAt":"2019-06-06T00:16:07","Actor":"elinor-fung","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3305","RelatedDescription":"Opened pull request \"Add property for building a library as a component\" (#3305) at dotnet/sdk","RelatedBody":""},{"Id":"9767453883","Type":"PullRequestEvent","CreatedAt":"2019-06-06T00:12:32","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3304","RelatedDescription":"Merged pull request \"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\" (#3304) at dotnet/sdk","RelatedBody":"- Update stage 0, and remove code that added information that wasn't yet in bundled versions .props file.\r\n- Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\r\n"},{"Id":"9767208657","Type":"PullRequestEvent","CreatedAt":"2019-06-05T23:07:11","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3303","RelatedDescription":"Merged pull request \"Resolve runtime target assets without copying for non-netcoreapp targets.\" (#3303) at dotnet/sdk","RelatedBody":"A [previous change](https://github.com/peterhuene/sdk/commit/545410772bb7c41d26b22dd9f3ba0cd3e8acd63e) disabled the resolution of runtime target assets when not\r\ntargeting netcoreapp by default. However, some users may want to be able to\r\ninspect the runtime target assets from their package dependencies without\r\nhaving them copied locally by default when not targeting netcoreapp.\r\n\r\nThis commit changes the previous fix by resolving the runtime target assets to\r\npopulate the `RuntimeTargetsCopyLocalItems` group, but sets the `CopyLocal`\r\nmetadata to false which prevents the items from ultimately being included in\r\nthe copy local files.  The property `CopyLocalRuntimeTargetAssets` now controls\r\nthis behavior, which defaults to `true` only when netcoreapp is the target TFM.\r\n\r\nFixes #3261."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"452832013","IsPullRequest":true,"CreatedAt":"2019-06-06T04:57:34","Actor":"sandreenko","Number":"24995","RawContent":null,"Title":"Exclude tests that do not work without tail calls on arm32 Unix.","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24995","RelatedDescription":"Open PR \"Exclude tests that do not work without tail calls on arm32 Unix.\" (#24995)"},{"Id":"452737393","IsPullRequest":true,"CreatedAt":"2019-06-06T04:38:09","Actor":"sandreenko","Number":"24982","RawContent":null,"Title":"Delete TwoKeywords test.","State":"closed","Body":"https://github.com/dotnet/coreclr/issues/23224#issuecomment-499270788","Url":"https://github.com/dotnet/coreclr/pull/24982","RelatedDescription":"Closed or merged PR \"Delete TwoKeywords test.\" (#24982)"},{"Id":"452739323","IsPullRequest":true,"CreatedAt":"2019-06-06T04:37:24","Actor":"sandreenko","Number":"24984","RawContent":null,"Title":"Merge two equal exclusion groups for arm32 All OS.","State":"closed","Body":"There were two:\r\n```\r\n<!-- Arm32 All OS -->\r\n    <ItemGroup Condition=\"'$(XunitTestBinBase)' != '' and ('$(BuildArch)' == 'arm' or '$(AltJitArch)' == 'arm')\">\r\n```\r\nand\r\n```\r\n<!-- arm32 All OS specific excludes -->\r\n    <ItemGroup Condition=\"'$(XunitTestBinBase)' != '' and  ('$(BuildArch)' == 'arm' or '$(AltJitArch)' == 'arm')\">\r\n```","Url":"https://github.com/dotnet/coreclr/pull/24984","RelatedDescription":"Closed or merged PR \"Merge two equal exclusion groups for arm32 All OS.\" (#24984)"},{"Id":"452796636","IsPullRequest":false,"CreatedAt":"2019-06-06T02:07:40","Actor":"VincentBu","Number":"24994","RawContent":null,"Title":"[arm] Assert failure: currentProcessCpuCount == g_processAffinitySet.Count()","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-all-testing/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190528.79/workItem/JIT/analysis/xunit/JIT_Performance._CodeQuality_V8_Crypto_Crypto_Crypto_~2F_CodeQuality_V8_Crypto_Crypto_Crypto_sh\r\n\r\n**Failed tests:**\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 5981 [0x0000175d], Thread: 5981 [0x175d]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n    File: /__w/4/s/src/vm/gcenv.os.cpp Line: 113\r\n    Image: /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload/corerun\r\n\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh: line 252:  5981 Aborted                 $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/Reports/JIT.Performance/CodeQuality/V8/Crypto/Crypto/Crypto.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload/corerun Crypto.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Payload\r\n> /ssd/dotnetbuild/work/2367ed72-8b8b-452b-9f40-22f574dfbfd6/Work/db8a41c0-d1d0-4153-8818-f8e9ff222f23/Exec/JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24994","RelatedDescription":"Open issue \"[arm] Assert failure: currentProcessCpuCount == g_processAffinitySet.Count()\" (#24994)"},{"Id":"452795854","IsPullRequest":true,"CreatedAt":"2019-06-06T02:04:19","Actor":"kouvel","Number":"24993","RawContent":null,"Title":"Send tiered compilation settings rundown event on EventPipe detach","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24993","RelatedDescription":"Open PR \"Send tiered compilation settings rundown event on EventPipe detach\" (#24993)"},{"Id":"452791633","IsPullRequest":true,"CreatedAt":"2019-06-06T01:43:51","Actor":"VSadov","Number":"24992","RawContent":null,"Title":"Clear syncblock early when `VERIFY_HEAP && DEBUG` to prevent verification asserts.","State":"open","Body":"Fixes:#24879","Url":"https://github.com/dotnet/coreclr/pull/24992","RelatedDescription":"Open PR \"Clear syncblock early when `VERIFY_HEAP && DEBUG` to prevent verification asserts.\" (#24992)"},{"Id":"452787784","IsPullRequest":true,"CreatedAt":"2019-06-06T01:26:01","Actor":"tannergooding","Number":"24991","RawContent":null,"Title":"Marking Vector128<T>.Count and Vector256<T>.Count as [Intrinsic]","State":"open","Body":"CC. @CarolEidt.\r\n\r\nThe `Vector128<T>.Count` and `Vector256<T>.Count` methods weren't marked as intrinsic so they:\r\n1. Don't get inlined in some complex methods\r\n2. Don't always get handled efficiently by the JIT\r\n\r\nThis PR marks them as `[Intrinsic]` and hooks it up to the same handling as `Vector<T>.Count`.","Url":"https://github.com/dotnet/coreclr/pull/24991","RelatedDescription":"Open PR \"Marking Vector128<T>.Count and Vector256<T>.Count as [Intrinsic]\" (#24991)"},{"Id":"452785298","IsPullRequest":true,"CreatedAt":"2019-06-06T01:14:06","Actor":"jkoritzinsky","Number":"24990","RawContent":null,"Title":"Move COM object lifetime control tests to CoreCLR.","State":"open","Body":"Move the tests for COM object lifetime control tests that are non threadsafe to CoreCLR. The parallel nature of CoreFX test runs makes testing these methods there unstable and prone to spurious failures (see dotnet/corefx#38252)","Url":"https://github.com/dotnet/coreclr/pull/24990","RelatedDescription":"Open PR \"Move COM object lifetime control tests to CoreCLR.\" (#24990)"},{"Id":"452783783","IsPullRequest":true,"CreatedAt":"2019-06-06T01:06:01","Actor":"andy-ms","Number":"24989","RawContent":null,"Title":"Fall back to CpuId if failed to get cache size from OS","State":"open","Body":"It's possible for GetLogicalProcessorCacheSizeFromOS() to fail;\r\nthis happens on alpine linux where it compiles to just `return 0;`.\r\n\r\nAs a fallback, we can get the cache size from CpuId. Previously that\r\nwas specific to x86; this PR preserves the behavior that we never call\r\nGetLogicalProcessorCacheSizeFromOS on x86.\r\n\r\nCpuId only works on x86 and amd64; on other systems we may still return\r\n0 from here. Then GC defaults to a cache size of only 0.25MB.","Url":"https://github.com/dotnet/coreclr/pull/24989","RelatedDescription":"Open PR \"Fall back to CpuId if failed to get cache size from OS\" (#24989)"},{"Id":"452374778","IsPullRequest":true,"CreatedAt":"2019-06-06T00:30:46","Actor":"davmason","Number":"24968","RawContent":null,"Title":"APIs to allow DoStackSnapshot on Linux","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24968","RelatedDescription":"Closed or merged PR \"APIs to allow DoStackSnapshot on Linux\" (#24968)"},{"Id":"452774500","IsPullRequest":true,"CreatedAt":"2019-06-06T00:21:39","Actor":"sywhang","Number":"24988","RawContent":null,"Title":"Explicitly set permission on the socket file created by DiagnosticServer","State":"open","Body":"This changes the permission set on the diagnostics IPC socket file from 775 to 700.","Url":"https://github.com/dotnet/coreclr/pull/24988","RelatedDescription":"Open PR \"Explicitly set permission on the socket file created by DiagnosticServer\" (#24988)"},{"Id":"452772429","IsPullRequest":true,"CreatedAt":"2019-06-06T00:12:55","Actor":"sandreenko","Number":"24987","RawContent":null,"Title":"Reenable StackTracePreserveTests.","State":"open","Body":"I was not able to repro any failures, maybe they were fixed already. Lets see what ci thinks.\r\n\r\nCloses #20322","Url":"https://github.com/dotnet/coreclr/pull/24987","RelatedDescription":"Open PR \"Reenable StackTracePreserveTests.\" (#24987)"},{"Id":"452767252","IsPullRequest":true,"CreatedAt":"2019-06-05T23:52:10","Actor":"fadimounir","Number":"24986","RawContent":null,"Title":"Shortenning /Platform_Assemblies_Paths to just /p for convenience","State":"open","Body":"Leaving the original switch name for compatibility reasons.\r\n\r\nI found myself frequently running crossgen.exe manually, and the full /platform_assemblies_paths parameter was becoming tedious to type every time.","Url":"https://github.com/dotnet/coreclr/pull/24986","RelatedDescription":"Open PR \"Shortenning /Platform_Assemblies_Paths to just /p for convenience\" (#24986)"},{"Id":"452763733","IsPullRequest":false,"CreatedAt":"2019-06-05T23:37:56","Actor":"echesakovMSFT","Number":"24985","RawContent":null,"Title":"Follow-up on renaming suggestions in #24371","State":"open","Body":"This issue is about `pInitRegZeroed` parameter used across many functions in CodeGen\r\n\r\n> This method is not zero-ing initReg so it sounds strange to me that an out-parameter is named pInitRegZeroed. It also doesn't know or check that it holds zero on input. IMO, it would be clearer to name the argument pInitRegUsed and set it to true if initReg is used for setting the cookie.\r\n\r\n_Originally posted by @erozenfeld in https://github.com/dotnet/coreclr/pull/24371_\r\n\r\n> I agree that it's confusing. I might rename it `pInitRegModified`. Theoretically it wouldn't have to set it to false if it had actually zero'd the register, but that doesn't actually happen anywhere. It might be worth a comment here in the header to note that the caller is passing in the `initReg` that it uses in the prolog and therefore it needs to know whether it has been set to a non-zero value (or something to that effect).\r\n\r\n_Originally posted by @CarolEidt in https://github.com/dotnet/coreclr/pull/24371_\r\n\r\n> While I don't disagree about it being potentially confusing, note that `pInitRegZeroed` is the name used in many functions that do the same thing.\r\n\r\n_Originally posted by @BruceForstall in https://github.com/dotnet/coreclr/pull/24371_","Url":"https://github.com/dotnet/coreclr/issues/24985","RelatedDescription":"Open issue \"Follow-up on renaming suggestions in #24371\" (#24985)"},{"Id":"452737814","IsPullRequest":true,"CreatedAt":"2019-06-05T22:03:56","Actor":"jkoritzinsky","Number":"24983","RawContent":null,"Title":"Add IJW native varargs tests.","State":"open","Body":"Add some tests for some interesting simple native varargs cases.\r\n\r\nRefactor IJW test infrastructure to share code/configuration between the IJW projects. ","Url":"https://github.com/dotnet/coreclr/pull/24983","RelatedDescription":"Open PR \"Add IJW native varargs tests.\" (#24983)"},{"Id":"452737313","IsPullRequest":true,"CreatedAt":"2019-06-05T22:02:18","Actor":"sywhang","Number":"24981","RawContent":null,"Title":"Add DisplayUnits property to DiagnosticCounter","State":"open","Body":"API review: https://github.com/dotnet/corefx/issues/37510\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24981","RelatedDescription":"Open PR \"Add DisplayUnits property to DiagnosticCounter\" (#24981)"},{"Id":"452732881","IsPullRequest":true,"CreatedAt":"2019-06-05T21:49:01","Actor":"davidwrighton","Number":"24980","RawContent":null,"Title":"Reduce indirect function calls","State":"open","Body":"- Reduce indirect vtable dispatch in readonly metadata reader\r\n  - Mark CMiniMd as final\r\n  - Move a SearchTableForMultipleRows to be a function on the MiniMDTemplate. This allows the implementation to directly perform function calls instead of indirecting. This also allows some useful inlining\r\n  - Add a GetStringReadOnly function in StgPoolReadOnly. This allows inlining of string reading from metadata rows where appropriate in the read only metadata reader.\r\n- Reduce allocation indirection cost\r\n  - The runtime used to have replaceable implementations of allocating memory from the OS heap. It doesn't have this support anymore, so remove that + some other dead code using the same mechanism\r\n- Reduce MethodData indirection cost\r\n  - The MethodData GetImplMethodTable+GetDeclMethodTable functionsa are called quite a lot as part of the MethodDataCache. This replaces the implementations with logic which simply uses some precomputed fields. There is a small extra size cost, but as the MethodData structures are short lived (Or in a very small global cache) I do not believe the few extra bytes are a problem.","Url":"https://github.com/dotnet/coreclr/pull/24980","RelatedDescription":"Open PR \"Reduce indirect function calls\" (#24980)"},{"Id":"452731085","IsPullRequest":true,"CreatedAt":"2019-06-05T21:43:55","Actor":"CarolEidt","Number":"24979","RawContent":null,"Title":"Fix blr printing","State":"open","Body":"A blr instruction may have a result that is not a pointer size, but its target register is always EA_PTRSIZE.\r\n\r\nFix #24940","Url":"https://github.com/dotnet/coreclr/pull/24979","RelatedDescription":"Open PR \"Fix blr printing\" (#24979)"},{"Id":"452706281","IsPullRequest":true,"CreatedAt":"2019-06-05T20:40:29","Actor":"VSadov","Number":"24978","RawContent":null,"Title":"[WIP][Test]trying to force the race","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24978","RelatedDescription":"Open PR \"[WIP][Test]trying to force the race\" (#24978)"},{"Id":"452681244","IsPullRequest":false,"CreatedAt":"2019-06-05T19:40:20","Actor":"rvhelden","Number":"24976","RawContent":null,"Title":"Unnecessary instructions after generic specialization optimization of struct","State":"open","Body":"When looking at this sample in [sharplab](https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEBDAzgWwB8ABABgAJiBGAOgCUBXAOwwEt8YaBhCfAB1YAbGFADKIgG6swMXAG4AsAChiAJirLlxAMyVVlKgHZlAb3Lnyyi+T5RWE7BhjkAgoIDu2AJ64AChEFpL3JccgBecgATGAAzbAZBDAAKN08ff0CwLwBKRSVrW3tHZy5sMAALGAAeVO8/AKCAPhCwcPImGHdyUorq2vSGrMak3KsLMfMdclYWcgAVWQwAITwYEYnyM2sN62JDcgwoBmcAfnJ1chBzvOsAXw2NqZmMecWqdfyLLfHP60n93A0UTlCAJSIjchnC5XVQ3Cz3X6WRFPWYLXAYVQfazfcw7Cx7FrcbBMCFQqiXa4bBEIrS6NTdMqVKpzDJNDbuSqweasrIUgCSPK8pmUAEhCg4nNzBsE+NK2tE4gkMHkNgBtACyMAwIMifP4giSmu1EF1+oA8nw2BAmICXABzO2wXC4ewwPlMQJMGZ27IAXUeumAEACDJJ2Q2Jjx5lYMXISW1rEBssyXiBILBI3DiOxUb+BMOxzhf3ICOL5hgglwMFzkezZYJcUrMCLf1uIpFVOUNKUtJCBbAL369RT/MFwqUIqmQZDwNBgnB2XCzQLza7mhUumeIjiMnIAul45F08E5FnGdGSluQA==) It looks like the first 2 instructions (MOV & CMP) for the method Program.Test2 are not needed. Also the first CMP instruction of Test1 seems unnecessary","Url":"https://github.com/dotnet/coreclr/issues/24976","RelatedDescription":"Open issue \"Unnecessary instructions after generic specialization optimization of struct\" (#24976)"},{"Id":"452625290","IsPullRequest":false,"CreatedAt":"2019-06-05T17:28:09","Actor":"martincostello","Number":"24975","RawContent":null,"Title":"InvalidProgramException with message \"JIT Compiler encountered an internal limitation.\" thrown during HTTP calls","State":"open","Body":"This morning when a new EC2 instance was launched for an ASP.NET Core 2.2.5 application of ours in a production environment, all outbound HTTP requests to dependent services failed with the following exception:\r\n\r\n```\r\nSystem.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.IO.IOException: Unable to write data to the transport connection: JIT Compiler encountered an internal limitation.. ---> System.InvalidProgramException: JIT Compiler encountered an internal limitation.\r\n   at T System.Threading.LazyInitializer.EnsureInitialized<T>(ref T target)\r\n   at ValueTask System.Net.Sockets.Socket.SendAsyncForNetworkStream(ReadOnlyMemory<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken)\r\n   at ValueTask System.Net.Sockets.NetworkStream.WriteAsync(ReadOnlyMemory<byte> buffer, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at ValueTask System.Net.Sockets.NetworkStream.WriteAsync(ReadOnlyMemory<byte> buffer, CancellationToken cancellationToken)\r\n   at ValueTask System.Net.Http.HttpConnection.WriteToStreamAsync(ReadOnlyMemory<byte> source)\r\n   at ValueTask System.Net.Http.HttpConnection.FlushAsync()\r\n   at async Task<HttpResponseMessage> System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at async Task<HttpResponseMessage> System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at async Task<HttpResponseMessage> System.Net.Http.HttpConnectionPool.SendWithNtConnectionAuthAsync(HttpConnection connection, HttpRequestMessage request, bool doRequestAuth, CancellationToken cancellationToken)\r\n   at async Task<HttpResponseMessage> System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, bool doRequestAuth, CancellationToken cancellationToken)\r\n   at async Task<HttpResponseMessage> System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at async Task<HttpResponseMessage> System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at async Task<HttpResponseMessage> Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n<snip>\r\n```\r\n\r\nThe inner-most exception appears to indicate a JIT issue.\r\n\r\nThis is the first time we've ever seen this issue, but it seemed to be unrecoverable. Exceptions were thrown for all HTTP requests made by the application until it was removed from our application load balancer and stopped receiving user traffic.\r\n\r\nWe've captured two full dumps of the `dotnet.exe` from the instance before it was terminated which we can share with your privately if it helps diagnose the issue.\r\n\r\nLet me know if there's any further information I can share with you other than the dump files.","Url":"https://github.com/dotnet/coreclr/issues/24975","RelatedDescription":"Open issue \"InvalidProgramException with message \"JIT Compiler encountered an internal limitation.\" thrown during HTTP calls\" (#24975)"},{"Id":"452478723","IsPullRequest":true,"CreatedAt":"2019-06-05T17:14:44","Actor":"dotnet-maestro[bot]","Number":"24971","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190604.03\r\n- **Date Produced**: 6/5/2019 4:08 AM\r\n- **Commit**: a620d0dba57cd18e49fa686e28e18369be23d067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27804-03\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24971","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#24971)"},{"Id":"452476907","IsPullRequest":true,"CreatedAt":"2019-06-05T17:14:32","Actor":"dotnet-maestro[bot]","Number":"24970","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces** -> 1.0.0-preview7.19305.1\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19305.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24970","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#24970)"},{"Id":"452485273","IsPullRequest":true,"CreatedAt":"2019-06-05T15:21:47","Actor":"dotnet-maestro[bot]","Number":"24972","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:01 AM\r\n- **Commit**: 700011a9e2a3493d99985e48b6790032cf1b6a2c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190605.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190605.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24972","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#24972)"},{"Id":"452503494","IsPullRequest":false,"CreatedAt":"2019-06-05T13:38:21","Actor":"shaggygi","Number":"24974","RawContent":null,"Title":"System.Runtime.Remoting Support","State":"closed","Body":"There has been many mentions of System.Runtime.Remoting APIs not being ported to .NET Core.  I understand the reasoning, but want to understand a little more before continuing with other options.\r\n\r\nI have an older API that depends on System.Runtime.Remoting.  I was trying to port it to a .NET Core v3 library and use with a .NET Core console app.  When it reaches the code that references Remoting code, I get the following error.\r\n\r\n> System.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Channels.IChannel' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'\r\n\r\nI also get the message when adding the Windows Compatibility package to the project.  The code is intended to only run on Windows.  I wanted to know if System.Runtime.Remoting should/will be able to run within a .NET Core project using the Windows Compatibility package and only on Windows?\r\n\r\nAny help is appreciated.\r\n","Url":"https://github.com/dotnet/coreclr/issues/24974","RelatedDescription":"Closed issue \"System.Runtime.Remoting Support\" (#24974)"},{"Id":"452500141","IsPullRequest":true,"CreatedAt":"2019-06-05T13:25:39","Actor":"adamsitnik","Number":"24973","RawContent":null,"Title":"don't acquire lock if the collator has been already created","State":"open","Body":"This PR solves the problem mentioned in https://github.com/dotnet/corefx/issues/37691 . It was laso reported offline by one of our customers.\r\n\r\nThe simplest app that exhibits the lock issue:\r\n\r\n```cs\r\nusing System;\r\nusing System.Threading;\r\n\r\nnamespace cmLinuxStartsWithpstr\r\n{\r\n    class Program\r\n    {\r\n        static void BackgroundTask(Object stateInfo)\r\n        {\r\n            String str1 = \"a\";\r\n            String str2 = \"b\";\r\n            while (true)\r\n            {\r\n                string.Compare(str1, str2, true);\r\n            }\r\n        }\r\n        static void Main(string[] args)\r\n        {\r\n            for (int i = 0; i < Environment.ProcessorCount; i++)\r\n            {\r\n                ThreadPool.QueueUserWorkItem(BackgroundTask);\r\n            }\r\n\r\n            Console.WriteLine(\"press any key to exit...\\n\");\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe trace captured with [perfcollect](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/linux-performance-tracing.md) on Ubuntu:\r\n\r\n![obraz](https://user-images.githubusercontent.com/6011991/58972018-e3fb2800-87bc-11e9-98a4-e606eac057c5.png)\r\n\r\nI just moved the lock out of the happy path (collatorsPerOption[options] is initialized).\r\n\r\nThe new trace (please look at the inclusive times, I did not run the app for exactly the same period of time to compare exclusive times):\r\n\r\n![obraz](https://user-images.githubusercontent.com/6011991/58972366-b82c7200-87bd-11e9-9605-3ab5771b37f1.png)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24973","RelatedDescription":"Open PR \"don't acquire lock if the collator has been already created\" (#24973)"},{"Id":"452471698","IsPullRequest":true,"CreatedAt":"2019-06-05T12:23:34","Actor":"dotnet-maestro[bot]","Number":"24969","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24969","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#24969)"},{"Id":"452312341","IsPullRequest":true,"CreatedAt":"2019-06-05T04:42:13","Actor":"kouvel","Number":"24967","RawContent":null,"Title":"Add optimization tiers to the Linux perf maps for perfcollect","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/23222:\r\n- It looks like module unloads are currently not taken into account. Once they would be taken into account, Although we have method JIT events from `lttng` with the code address and optimization tier, samples can only be associated with method JIT events by associating the time range when the module is loaded with times of samples, and the event times from `lttng` would not necessarily correspond with times from samples taken by `perf`.\r\n- Updated to include the optimization tier in the perf map for each jitted or R2R method code address","Url":"https://github.com/dotnet/coreclr/pull/24967","RelatedDescription":"Open PR \"Add optimization tiers to the Linux perf maps for perfcollect\" (#24967)"},{"Id":"452309083","IsPullRequest":false,"CreatedAt":"2019-06-05T04:24:22","Actor":"kouvel","Number":"24966","RawContent":null,"Title":"[Linux / perfcollect] R2R image perf map offsets don't correspond with offsets collected in perf trace","State":"open","Body":"I see stacks like this:\r\n\r\n```\r\nName\r\n test.dll!unknown\r\n+ System.Private.CoreLib.dll!unknown\r\n|+ libcoreclr.so!CallDescrWorkerInternal\r\n```\r\n\r\nThis is with test.dll crossgen'ed with R2R. Sometimes it says \"unknown\" and sometimes (often in System.Private.CoreLib), it shows an incorrect method.\r\n\r\ntest.ni.{guid}.map - these are the only methods that show up in the perf trace, and the first two are the lowest offsets in the map:\r\n\r\n```\r\n00028450 147 void [test] PerfViewTierEventsTest::Main()[ReadyToRun]\r\n000285a0 3a void [test] PerfViewTierEventsTest::Run(bool)[ReadyToRun]\r\n...\r\n0002ba80 16 instance void [test] PerfViewTierEventsTest+<>c::<Main>b__0_0()[ReadyToRun]\r\n```\r\n\r\nperf.data.txt - code offsets recorded for test.dll are lower than the lowest entries in test.ni.{guid}.map and don't correspond with methods in the map:\r\n\r\n```\r\n\t          250e7e DelayLoad_MethodCall (/home/kount/temp/dotnet/test/libcoreclr.so)\r\n\t            84ea [unknown] (/home/kount/test/code.r2r/test.dll)\r\n\t          250cbf CallDescrWorkerInternal (/home/kount/temp/dotnet/test/libcoreclr.so)\r\n```\r\n\r\n```\r\n\t            85cf [unknown] (/home/kount/test/code.r2r/test.dll)\r\n\t            ba90 [unknown] (/home/kount/test/code.r2r/test.dll)\r\n```\r\n\r\nLooks like the map is using a different base for calculating the offset than the base being used for code offsets that are collected in the trace.","Url":"https://github.com/dotnet/coreclr/issues/24966","RelatedDescription":"Open issue \"[Linux / perfcollect] R2R image perf map offsets don't correspond with offsets collected in perf trace\" (#24966)"},{"Id":"452705387","IsPullRequest":false,"CreatedAt":"2019-05-02T20:27:16","Actor":"markusmobius","Number":"24977","RawContent":null,"Title":"memory on Ubuntu","State":"open","Body":"We have been running a server command line program that uses about 80GB of memory (scraping and data processing) with lots of concurrent threads.\r\n\r\nThe programs run on both Ubuntu and Windows server under Netcore 3.0 preview (same size of VM on Azure with 120GB of memory). Until preview 3 everything worked flawlessly with similar resource consumption on both Windows and Ubuntu. \r\n\r\nBut with Preview 4 the Ubuntu version regularly runs out of memory while the Windows version seems to work as before. \r\n\r\nWe now reverted back to Preview 3 and the program now runs fine again.\r\n\r\nThe program runs with server garbage collection:\r\n\r\n ` <PropertyGroup>\r\n    <ServerGarbageCollection>true</ServerGarbageCollection>\r\n    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>\r\n  </PropertyGroup>`\r\n\r\nWere there any changes in memory management from Preview 3 to 4 that could cause these problems and any way to mitigate them?\r\n\r\nPS: I might have answered my own question. When running with ConcurrentGarbageCollection=false the memory consumption on Preview 3 decreases a lot. I'll try Preview 4 with that setting next.\r\n\r\nUpdate: Yes memory consumption is much reduced with ConcurrentGarbageCollection=false. It would be great to have this information more easily available (I don't really know what this settings does either  way).","Url":"https://github.com/dotnet/coreclr/issues/24977","RelatedDescription":"Open issue \"memory on Ubuntu\" (#24977)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"452773345","IsPullRequest":true,"CreatedAt":"2019-06-06T05:11:58","Actor":"livarcocc","Number":"11496","RawContent":null,"Title":"Update SDK to 2.2.400-preview-64205-02","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11496","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.400-preview-64205-02\" (#11496)"},{"Id":"452773026","IsPullRequest":true,"CreatedAt":"2019-06-06T05:11:46","Actor":"livarcocc","Number":"11495","RawContent":null,"Title":"Updating SDK to 2.1.800-preview-64205-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11495","RelatedDescription":"Closed or merged PR \"Updating SDK to 2.1.800-preview-64205-01\" (#11495)"},{"Id":"452467345","IsPullRequest":true,"CreatedAt":"2019-06-06T04:30:38","Actor":"dotnet-maestro[bot]","Number":"11488","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 12:51 PM\r\n- **Commit**: 778af19c2c7f99320fe33d38b18003483ebed559\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19304.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11488","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11488)"},{"Id":"452465223","IsPullRequest":true,"CreatedAt":"2019-06-06T04:30:21","Actor":"dotnet-maestro[bot]","Number":"11487","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 10:24 AM\r\n- **Commit**: f9a338d041118637890869bba587b82557947f8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11487","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11487)"},{"Id":"452770195","IsPullRequest":false,"CreatedAt":"2019-06-06T00:03:14","Actor":"wli3","Number":"11494","RawContent":null,"Title":"A new option to allow dotnet tool install should return exit code 0 if tool is already installed","State":"open","Body":"Continue of https://github.com/dotnet/cli/issues/11259 to make the topic more specific. Even thought \"dotnet update\" with \"--version\" could solve the similar issue, but it is hard to discover.","Url":"https://github.com/dotnet/cli/issues/11494","RelatedDescription":"Open issue \"A new option to allow dotnet tool install should return exit code 0 if tool is already installed\" (#11494)"},{"Id":"452626424","IsPullRequest":true,"CreatedAt":"2019-06-05T22:29:47","Actor":"livarcocc","Number":"11492","RawContent":null,"Title":"Updating MSBuild and Roslyn in release/2.2.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11492","RelatedDescription":"Closed or merged PR \"Updating MSBuild and Roslyn in release/2.2.4xx\" (#11492)"},{"Id":"452625162","IsPullRequest":true,"CreatedAt":"2019-06-05T22:29:30","Actor":"livarcocc","Number":"11491","RawContent":null,"Title":"Updating MSBuild and Roslyn in release/2.1.8xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11491","RelatedDescription":"Closed or merged PR \"Updating MSBuild and Roslyn in release/2.1.8xx\" (#11491)"},{"Id":"452662861","IsPullRequest":true,"CreatedAt":"2019-06-05T18:55:02","Actor":"peterhuene","Number":"11493","RawContent":null,"Title":"Remove unused variables from BundledVersions.props.","State":"open","Body":"This commit removes the unused (2.1 SDK) patch level variables from\r\n`Microsoft.NETCoreSdk.BundledVersions.props`.\r\n\r\nThese variables were superseded by the `ImplicitPackageVariable` item group in\r\nthe 2.2 SDK.\r\n\r\nTheir presence is unnecessary and the values are out of date.\r\n\r\nFixes #10908.","Url":"https://github.com/dotnet/cli/pull/11493","RelatedDescription":"Open PR \"Remove unused variables from BundledVersions.props.\" (#11493)"},{"Id":"452465050","IsPullRequest":true,"CreatedAt":"2019-06-05T18:45:09","Actor":"dotnet-maestro[bot]","Number":"11486","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11486","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11486)"},{"Id":"452613032","IsPullRequest":false,"CreatedAt":"2019-06-05T16:59:12","Actor":"Thraka","Number":"11490","RawContent":null,"Title":"the -d parameter doesn't provide me with diagnostic information","State":"open","Body":"Any time I use the -d parameter I get a message about telemetry is turned on, but I get no error/warning/trace output in the console. I can't figure out why my nuget template package will not install with `dotnet -d new -i c:\\path\\to\\nupkg`\r\n\r\n## Steps to reproduce\r\n\r\nRun a command with `dotnet -d` and no extra information is displayed.\r\n\r\n## Expected  behavior\r\n\r\nI get more debug output to understand what the command is doing.\r\n\r\n## Actual behavior\r\n\r\nOnly `Telemetry is: Enabled` is displayed.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   c:\\program files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [c:\\program files\\dotnet\\sdk]\r\n  2.1.502 [c:\\program files\\dotnet\\sdk]\r\n  2.1.504 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [c:\\program files\\dotnet\\sdk]\r\n  2.1.600 [c:\\program files\\dotnet\\sdk]\r\n  2.1.602 [c:\\program files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [c:\\program files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [c:\\program files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [c:\\program files\\dotnet\\sdk]\r\n  2.2.101 [c:\\program files\\dotnet\\sdk]\r\n  2.2.300-preview-010046 [c:\\program files\\dotnet\\sdk]\r\n  2.2.300-preview-010067 [c:\\program files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [c:\\program files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [c:\\program files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [c:\\program files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/dotnet/cli/issues/11490","RelatedDescription":"Open issue \"the -d parameter doesn't provide me with diagnostic information\" (#11490)"},{"Id":"452473022","IsPullRequest":true,"CreatedAt":"2019-06-05T12:26:53","Actor":"dotnet-maestro[bot]","Number":"11489","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11489","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11489)"},{"Id":"452382871","IsPullRequest":false,"CreatedAt":"2019-06-05T08:47:30","Actor":"LightVolk","Number":"11485","RawContent":null,"Title":"Add solution folder argument to dotnet-sln show-folders  (show solution folders)","State":"open","Body":"Feature request:\r\n\r\nIf possible, can this fucntionality be added: list of solution folders?\r\nUse case:\r\n\r\n1. List of solution folders (dotnet sln show folders)\r\n2. Add new project under on of this solution folder.  (dotnet sln add project)\r\n\r\nIt must be related to PR: [https://github.com/dotnet/cli/pull/11000](url)\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11485","RelatedDescription":"Open issue \"Add solution folder argument to dotnet-sln show-folders  (show solution folders)\" (#11485)"},{"Id":"452255633","IsPullRequest":false,"CreatedAt":"2019-06-04T23:48:49","Actor":"wli3","Number":"11482","RawContent":null,"Title":"ToolManifestEditor should catch FormatException ","State":"open","Body":"https://github.com/dotnet/cli/blob/8ab442a668e63d902d03715b84f0764a92ee13eb/src/dotnet/ToolManifest/ToolManifestEditor.cs#L218-L223\r\n\r\nThe TryGetInt32Value API could throw FormatException if the JSON payload had \"version\" property with a non-int32 value (like double - e.g. 1.23 or (u)int64 - e.g. 4294967296).\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11482","RelatedDescription":"Open issue \"ToolManifestEditor should catch FormatException \" (#11482)"},{"Id":"452226944","IsPullRequest":true,"CreatedAt":"2019-06-04T23:12:22","Actor":"nguerrera","Number":"11481","RawContent":null,"Title":"Remove dotnet migrate","State":"closed","Body":"`dotnet migrate` will not be supported in .NET Core SDK 3.0.100+\r\n\r\nThis removes it.\r\n\r\nFix https://github.com/dotnet/cli/issues/11458","Url":"https://github.com/dotnet/cli/pull/11481","RelatedDescription":"Closed or merged PR \"Remove dotnet migrate\" (#11481)"},{"Id":"451958308","IsPullRequest":true,"CreatedAt":"2019-06-04T22:45:27","Actor":"dotnet-maestro[bot]","Number":"11476","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190603.5\r\n- **Date Produced**: 6/4/2019 4:11 AM\r\n- **Commit**: 69d51538bdbdb03c758b924f887a6f596e590c7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19303.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11476)"},{"Id":"452139304","IsPullRequest":false,"CreatedAt":"2019-06-04T18:19:23","Actor":"spartanroger","Number":"11480","RawContent":null,"Title":"Support custom scripts","State":"open","Body":"My project has some micro-services written with DotNet Core C# and we have some scripts that we use very often and are very long to remind, so we have to put them in a README.MD file and copy every time, which isn't very productive.\r\n\r\nExample: \r\n\r\n```\r\ndotnet test --no-build /p:CollectCoverage=true /p:Exclude=\\\"[Crosscutting.*]*,[xunit.*]*\\\" /p:CoverletOutputFormat=cobertura /p:CoverletOutput='../'\r\n```\r\n\r\nAnd would be very nice if we could just have a JSON file in the project root folder and add some shortcuts. Just like npm-scripts (but without installing anything other than dotnet cli).\r\n\r\n```\r\n{\r\ntests: dotnet test --no-build /p:CollectCoverage=true /p:Exclude=\\\"[Crosscutting.*]*,[xunit.*]*,[*]*.Models*,[*]*.DTO*\\\" /\r\n}\r\n```","Url":"https://github.com/dotnet/cli/issues/11480","RelatedDescription":"Open issue \"Support custom scripts\" (#11480)"},{"Id":"451654883","IsPullRequest":true,"CreatedAt":"2019-06-04T17:11:08","Actor":"dotnet-maestro[bot]","Number":"11474","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 7:39 PM\r\n- **Commit**: 9a92095d8ad0112291573385dc8f67adfdfe9322\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19303.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11474","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11474)"},{"Id":"452107950","IsPullRequest":false,"CreatedAt":"2019-06-04T17:03:34","Actor":"ardove","Number":"11479","RawContent":null,"Title":"dotnet global tool exe product version should match product version of dll","State":"open","Body":"## Steps to reproduce\r\n* Create a dotnet global tool\r\n* In the assembly properties of the csproj specify the version to be 0.0.1\r\n* Install the global tool on a windows host\r\n* Inspect the executable generated by installation in C:\\Users\\<userName>\\.dotnet\\tools\r\n\r\n## Expected  behavior\r\nProduct version should be 0.0.1 and file version should be 0.0.1.0\r\n\r\n## Actual behavior\r\nProduct version and file version are blank\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11479","RelatedDescription":"Open issue \"dotnet global tool exe product version should match product version of dll\" (#11479)"},{"Id":"452087196","IsPullRequest":false,"CreatedAt":"2019-06-04T16:14:42","Actor":"ardove","Number":"11478","RawContent":null,"Title":"dotnet tool install/uninstall should support post-install/uninstall action","State":"open","Body":"In dotnet templates, you can run a set of specific, standardized actions or even a custom script after a template is executed. It'd be great if the dotnet tool install supported something similar as part of the distributed nuget package. \r\n\r\nA good use case for this is that we have a dotnet global tool which uses a specific set of templates. It supports a command to install/update the templates, but it means that any user of the CLI needs to either have already installed the template via the dotnet cli or installed the global tool and run the update/install command. \r\n\r\nFurthermore, when troubleshooting our global tool, I think a user would be confused if they ran a dotnet tool uninstall and there were still leftover artifacts (even if those artifacts are just dependencies). \r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                       etCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                       etCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shar                                                                       ed\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared                                                                       \\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore                                                                       .App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\                                                                       Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\                                                                       shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11478","RelatedDescription":"Open issue \"dotnet tool install/uninstall should support post-install/uninstall action\" (#11478)"},{"Id":"451961368","IsPullRequest":true,"CreatedAt":"2019-06-04T12:49:48","Actor":"dotnet-maestro[bot]","Number":"11477","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 1:06 PM\r\n- **Commit**: a59c4747634fcbfa08493b7348ad9ba07b5599dc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19303.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11477)"},{"Id":"451958119","IsPullRequest":true,"CreatedAt":"2019-06-04T12:42:09","Actor":"dotnet-maestro[bot]","Number":"11475","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11475","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11475)"},{"Id":"451619975","IsPullRequest":true,"CreatedAt":"2019-06-03T18:50:56","Actor":"dotnet-maestro[bot]","Number":"11473","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190603.2\r\n- **Date Produced**: 6/3/2019 6:06 PM\r\n- **Commit**: 3f2e65dd99395dfb5741d943158243bc77c4ac80\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19303.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11473","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#11473)"},{"Id":"451269077","IsPullRequest":true,"CreatedAt":"2019-06-03T18:15:52","Actor":"wli3","Number":"11469","RawContent":null,"Title":"Update branding to preview 7","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11469","RelatedDescription":"Closed or merged PR \"Update branding to preview 7\" (#11469)"},{"Id":"451266397","IsPullRequest":true,"CreatedAt":"2019-06-03T18:14:47","Actor":"wli3","Number":"11468","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview6","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11468","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview6\" (#11468)"},{"Id":"451447576","IsPullRequest":true,"CreatedAt":"2019-06-03T12:45:58","Actor":"dotnet-maestro[bot]","Number":"11472","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190602.1\r\n- **Date Produced**: 6/2/2019 12:45 PM\r\n- **Commit**: 6e7805d201f2fe43d7205101c238419dcef74fac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19302.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11472","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11472)"},{"Id":"451445808","IsPullRequest":true,"CreatedAt":"2019-06-03T12:41:32","Actor":"dotnet-maestro[bot]","Number":"11471","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11471","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11471)"},{"Id":"451444151","IsPullRequest":true,"CreatedAt":"2019-06-03T12:02:05","Actor":"dotnet-bot","Number":"11470","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11470","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11470)"},{"Id":"451136746","IsPullRequest":true,"CreatedAt":"2019-06-03T02:13:21","Actor":"dotnet-bot","Number":"11466","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11466","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11466)"},{"Id":"451249554","IsPullRequest":true,"CreatedAt":"2019-06-03T00:01:15","Actor":"dotnet-bot","Number":"11467","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11467","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#11467)"},{"Id":"451078917","IsPullRequest":true,"CreatedAt":"2019-06-02T12:44:56","Actor":"dotnet-maestro[bot]","Number":"11465","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 1:08 PM\r\n- **Commit**: 7359a18d42369a6e078a76370ed904f90589d1ea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19281.1\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190601.1\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 1b687f22bef2ba1ec7d4ff2f8c080b5c833e077c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19301.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11465","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11465)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"450570292","IsPullRequest":true,"CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Number":"1219","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders","State":"closed","Body":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz ","Url":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Closed or merged PR \"Add HttpResponseMessage.TrailingHeaders\" (#1219)"},{"Id":"452490563","IsPullRequest":true,"CreatedAt":"2019-06-05T13:16:16","Actor":"dotnet-maestro[bot]","Number":"1231","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1231)"},{"Id":"452464354","IsPullRequest":true,"CreatedAt":"2019-06-05T12:14:49","Actor":"dotnet-maestro[bot]","Number":"1230","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1230","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1230)"},{"Id":"451078421","IsPullRequest":true,"CreatedAt":"2019-06-05T00:46:32","Actor":"dotnet-maestro[bot]","Number":"1224","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1224)"},{"Id":"451983344","IsPullRequest":true,"CreatedAt":"2019-06-04T13:12:14","Actor":"dotnet-maestro[bot]","Number":"1229","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 8:34 AM\r\n- **Commit**: 6d5959cbc7d489406f8f85dba0a42f06d4a0ea9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1229","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1229)"},{"Id":"451725417","IsPullRequest":false,"CreatedAt":"2019-06-03T23:00:31","Actor":"wpatter6","Number":"1228","RawContent":null,"Title":"Hosting environment or server.mappath in .net framework","State":"open","Body":"Hi, I'm building a nuget package that will be used in both .NET Framework 4.6.2+ and dotnet core MVC type applications.\r\n\r\nThere is some functionality I'm providing that requires knowing the web root path.  Within the dotnet core world, I'm able to access the hosting environment and get the web root from there. \r\n\r\nBut how can this be done for framework 4.6.2+ applications, without the hosting environment, Server.MapPath or some equivalent?  Is it possible?  \r\n\r\nI'm currently using `Directory.GetCurrentDirectory() + @\"..\\..\\\";` but this is obviously quite hacky and only supports the default hosting configuration.\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1228","RelatedDescription":"Open issue \"Hosting environment or server.mappath in .net framework\" (#1228)"},{"Id":"449369049","IsPullRequest":false,"CreatedAt":"2019-06-03T13:58:00","Actor":"llolic","Number":"1214","RawContent":null,"Title":"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.","State":"closed","Body":"I am getting \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.'\"\r\nI have made an application in vs 2019 that currently just has a textbox, a textblock, and a button. When I run it, the error is shown for the following line: \"rootFrame.Navigate(typeof(MainPage), e.Arguments);\"\r\n\r\nDoes anyone know how to fix this error?","Url":"https://github.com/dotnet/standard/issues/1214","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\" (#1214)"},{"Id":"451464633","IsPullRequest":true,"CreatedAt":"2019-06-03T12:58:57","Actor":"dotnet-maestro[bot]","Number":"1227","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 10:38 AM\r\n- **Commit**: 0eed4042f056b4d9f6f4d1bf2918e234d67a6f88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1227","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1227)"},{"Id":"451188035","IsPullRequest":true,"CreatedAt":"2019-06-02T12:49:02","Actor":"dotnet-maestro[bot]","Number":"1226","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1226)"},{"Id":"451082070","IsPullRequest":true,"CreatedAt":"2019-06-01T12:54:30","Actor":"dotnet-maestro[bot]","Number":"1225","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1225)"},{"Id":"450941804","IsPullRequest":true,"CreatedAt":"2019-05-31T22:52:40","Actor":"dotnet-maestro-bot","Number":"1221","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @wtgodbe\n* @dotnet-maestro[bot]\n* @ericstj\n* @terrajobst\n* @ViktorHofer\n* @JohnTortugo\n* @joperezr\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1221","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1221)"},{"Id":"450951486","IsPullRequest":true,"CreatedAt":"2019-05-31T19:59:28","Actor":"safern","Number":"1222","RawContent":null,"Title":"Revert \"Add bulk operations to Collection<T>\"","State":"closed","Body":"Due to: https://github.com/dotnet/corefx/issues/38085\r\n\r\ncc: @terrajobst @wtgodbe @karelz ","Url":"https://github.com/dotnet/standard/pull/1222","RelatedDescription":"Closed or merged PR \"Revert \"Add bulk operations to Collection<T>\"\" (#1222)"},{"Id":"450955142","IsPullRequest":true,"CreatedAt":"2019-05-31T19:49:00","Actor":"wtgodbe","Number":"1223","RawContent":null,"Title":"Update branding to preview7 in master","State":"closed","Body":"CC @terrajobst @mmitche ","Url":"https://github.com/dotnet/standard/pull/1223","RelatedDescription":"Closed or merged PR \"Update branding to preview7 in master\" (#1223)"},{"Id":"449798213","IsPullRequest":true,"CreatedAt":"2019-05-31T17:00:11","Actor":"dotnet-maestro[bot]","Number":"1216","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190528.7\r\n- **Date Produced**: 5/29/2019 4:03 AM\r\n- **Commit**: c7d48ca7732b7717e84d8375588d83866104ef58\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19278.7\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190529.8\r\n- **Date Produced**: 5/30/2019 8:05 AM\r\n- **Commit**: e23119d577e644d2c2a25419c88c1181681358e0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19279.8\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 9:51 AM\r\n- **Commit**: 82408cd90f4d4573d502e8df2ca437b35e6a37f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19281.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1216","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1216)"},{"Id":"450765638","IsPullRequest":true,"CreatedAt":"2019-05-31T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1220","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1220","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1220)"},{"Id":"450273832","IsPullRequest":true,"CreatedAt":"2019-05-30T12:36:19","Actor":"dotnet-maestro[bot]","Number":"1218","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1218)"},{"Id":"450026795","IsPullRequest":true,"CreatedAt":"2019-05-29T22:45:51","Actor":"ericstj","Number":"1217","RawContent":null,"Title":"Source build fixes","State":"closed","Body":"Use GenFacades instead of GenAPI and remove GenAPI and APICompat from source build.","Url":"https://github.com/dotnet/standard/pull/1217","RelatedDescription":"Closed or merged PR \"Source build fixes\" (#1217)"},{"Id":"449768348","IsPullRequest":true,"CreatedAt":"2019-05-29T12:16:21","Actor":"dotnet-maestro[bot]","Number":"1215","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1215","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1215)"},{"Id":"449247865","IsPullRequest":true,"CreatedAt":"2019-05-28T12:54:12","Actor":"dotnet-maestro[bot]","Number":"1213","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190527.2\r\n- **Date Produced**: 5/27/2019 11:45 PM\r\n- **Commit**: d58a8ade31b4731759c92df00d0f6398c52f3d83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19277.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1213","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1213)"},{"Id":"448751215","IsPullRequest":false,"CreatedAt":"2019-05-27T09:16:48","Actor":"KexyBiscuit","Number":"1212","RawContent":null,"Title":"NETSDK1073 occurs on netcoreapp3.0 projects","State":"open","Body":"```\r\n>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012085\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(194,5): error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\r\n```\r\n\r\n```\r\n<TargetFramework>netcoreapp3.0</TargetFramework>\r\n\r\n<ItemGroup>\r\n  <PackageReference Include=\"System.Text.Encoding.CodePages\" Version=\"4.6.0-preview5.19224.8\" /> <!--It doesn't matter what's referenced-->\r\n</ItemGroup>\r\n```","Url":"https://github.com/dotnet/standard/issues/1212","RelatedDescription":"Open issue \"NETSDK1073 occurs on netcoreapp3.0 projects\" (#1212)"},{"Id":"448462812","IsPullRequest":true,"CreatedAt":"2019-05-25T13:11:36","Actor":"dotnet-maestro[bot]","Number":"1211","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19274.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1211","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1211)"},{"Id":"448458458","IsPullRequest":true,"CreatedAt":"2019-05-25T12:20:56","Actor":"dotnet-maestro[bot]","Number":"1210","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1210","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1210)"},{"Id":"448225868","IsPullRequest":false,"CreatedAt":"2019-05-24T15:20:02","Actor":"dagood","Number":"1209","RawContent":null,"Title":"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup","State":"open","Body":"(See https://github.com/dotnet/standard/issues/1106)\r\n\r\nThe netstandard targeting pack may not version completely in sync with .NET Core Runtime, so producing it in Core-Setup via a transport package is not ideal. These artifacts should be produced in dotnet/standard itself.\r\n\r\nI don't think it makes sense to work on this until targeting pack infra is shared. (https://github.com/dotnet/core-setup/issues/4773)","Url":"https://github.com/dotnet/standard/issues/1209","RelatedDescription":"Open issue \"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup\" (#1209)"},{"Id":"448158285","IsPullRequest":true,"CreatedAt":"2019-05-24T13:09:47","Actor":"dotnet-maestro[bot]","Number":"1208","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19273.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1208","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1208)"},{"Id":"448135323","IsPullRequest":true,"CreatedAt":"2019-05-24T12:21:08","Actor":"dotnet-maestro[bot]","Number":"1207","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1207","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1207)"},{"Id":"447649294","IsPullRequest":true,"CreatedAt":"2019-05-23T13:11:12","Actor":"dotnet-maestro[bot]","Number":"1206","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1206)"},{"Id":"447620634","IsPullRequest":true,"CreatedAt":"2019-05-23T12:15:47","Actor":"dotnet-maestro[bot]","Number":"1205","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1205)"},{"Id":"447122667","IsPullRequest":true,"CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Number":"1204","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1204)"},{"Id":"446749048","IsPullRequest":true,"CreatedAt":"2019-05-21T19:26:08","Actor":"ericstj","Number":"1203","RawContent":null,"Title":"Fix public key of ns2.0 shims","State":"closed","Body":"System.Buffers, System.Memory, and System.Threading.Tasks.Extensions all use\r\nthe open key.  Ensure we use the same key here.","Url":"https://github.com/dotnet/standard/pull/1203","RelatedDescription":"Closed or merged PR \"Fix public key of ns2.0 shims\" (#1203)"},{"Id":"446608759","IsPullRequest":true,"CreatedAt":"2019-05-21T14:48:22","Actor":"dotnet-maestro[bot]","Number":"1202","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/21/2019 9:31 AM\r\n- **Commit**: 51a1f16ee2aaded4ce1fca6847471b58f7ffa160\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1202","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1202)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"452838168","IsPullRequest":false,"CreatedAt":"2019-06-06T05:28:09","Actor":"liu123456789","Number":"38295","RawContent":null,"Title":"aspnetcore linux docker X509Certificate2 error not enough data","State":"open","Body":"error: 0D06B08E:asn1 encoding routines:ASN1_D2I_READ_BIO:not enough data\r\n\r\n`X509Certificate2 cert = new X509Certificate2(path, \"password\", X509KeyStorageFlags.PersistKeySet | X509KeyStorageFlags.MachineKeySet);`\r\n\r\nWho can help me?","Url":"https://github.com/dotnet/corefx/issues/38295","RelatedDescription":"Open issue \"aspnetcore linux docker X509Certificate2 error not enough data\" (#38295)"},{"Id":"452771948","IsPullRequest":true,"CreatedAt":"2019-06-06T04:11:32","Actor":"safern","Number":"38287","RawContent":null,"Title":"Re-generate System.Memory ref assembly against implementation","State":"closed","Body":"cc: @ahsonkhan @danmosemsft @stephentoub @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38287","RelatedDescription":"Closed or merged PR \"Re-generate System.Memory ref assembly against implementation\" (#38287)"},{"Id":"452766625","IsPullRequest":true,"CreatedAt":"2019-06-06T04:11:12","Actor":"safern","Number":"38286","RawContent":null,"Title":"Re-generate System.Runtime.Loader ref assembly against implementation","State":"closed","Body":"cc: @stephentoub @ahsonkhan @danmosemsft @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38286","RelatedDescription":"Closed or merged PR \"Re-generate System.Runtime.Loader ref assembly against implementation\" (#38286)"},{"Id":"452764896","IsPullRequest":false,"CreatedAt":"2019-06-06T03:18:45","Actor":"Akaion","Number":"38285","RawContent":null,"Title":"SafeAccessTokenHandle is missing from .Net Core","State":"closed","Body":"I've just noticed that you provide a SafeHandle [implementation](https://docs.microsoft.com/en-us/dotnet/api/microsoft.win32.safehandles.safeaccesstokenhandle?view=netcore-2.2) for thread access tokens, however, this doesn't seem to be part of the Microsoft.Win32.SafeHandles namespace on .Net Core. \r\n\r\nAny insight into why this wasn't included?","Url":"https://github.com/dotnet/corefx/issues/38285","RelatedDescription":"Closed issue \"SafeAccessTokenHandle is missing from .Net Core\" (#38285)"},{"Id":"452811451","IsPullRequest":false,"CreatedAt":"2019-06-06T03:16:20","Actor":"davidfowl","Number":"38294","RawContent":null,"Title":"Writing large JsonElement via JsonSerializer.WriteAsync hangs","State":"open","Body":"There's a bug in the writing loop that causes writing a JsonElement to hang forever. Here's the sample code:\r\n\r\n```C#\r\nvar json = await new HttpClient().GetStringAsync(\"https://raw.githubusercontent.com/davidfowl/AspNetCoreDiagnosticScenarios/master/Scenarios/pokemon.json\");\r\nvar root = JsonSerializer.Parse<JsonElement>(json);\r\nvar ms = new MemoryStream();\r\nawait JsonSerializer.WriteAsync(root, root.GetType(), ms);\r\n```\r\n\r\ncc @rynowak @steveharter @ahsonkhan @JeremyKuhne ","Url":"https://github.com/dotnet/corefx/issues/38294","RelatedDescription":"Open issue \"Writing large JsonElement via JsonSerializer.WriteAsync hangs\" (#38294)"},{"Id":"452803735","IsPullRequest":false,"CreatedAt":"2019-06-06T02:39:08","Actor":"JamesNK","Number":"38293","RawContent":null,"Title":"HTTP/2 cancellation and object null reference","State":"open","Body":"HttpClient is throwing NullReferenceException when it gets RST_STREAM INTERNAL_ERROR from the server.\r\n\r\nWireshark log attached.\r\n\r\n```\r\nC:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient [jamesnk/deadline-safety ≡ +0 ~3 -0 !]> dotnet run --use\r\n_tls false --server_port 50052 --client_type httpclient --test_case timeout_on_sleeping_server\r\nUse TLS: False\r\nUse Test CA: False\r\nClient type: httpclient\r\nServer host: localhost\r\nServer port: 50052\r\nrunning timeout_on_sleeping_server\r\ntrce: Grpc.Net.Client.Internal.GrpcCall[5]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Starting deadline timeout. Duration: 00:00:00.0804225.\r\ndbug: Grpc.Net.Client.Internal.GrpcCall[1]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Starting gRPC call. Method type: 'DuplexStreaming', URI: '/grpc.testing.TestService/FullDuplexCall'.\r\ndbug: Grpc.Net.Client.Internal.GrpcCall[6]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Sending message.\r\ntrce: Grpc.Net.Client.Internal.GrpcCall[9]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Serialized 'Grpc.Testing.StreamingOutputCallRequest' to 27190 byte message.\r\ntrce: Grpc.Net.Client.Internal.GrpcCall[7]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Message sent.\r\nfail: Grpc.Net.Client.Internal.GrpcCall[6]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      Error starting gRPC call.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Net.Http.RedirectHandler.GetUriForRedirect(Uri requestUri, HttpResponseMessage response)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.SendAsync(HttpClient client, HttpRequestMessage message) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 432\r\n\r\ndbugUnhandled Exception: : Grpc.Net.Client.Internal.GrpcCall[8]\r\n      => GrpcMethodType:DuplexStreaming GrpcUri:/grpc.testing.TestService/FullDuplexCall\r\n      gRPC call canceled.\r\nSystem.AggregateException: One or more errors occurred. (Object reference not set to an instance of an object.) ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Net.Http.RedirectHandler.GetUriForRedirect(Uri requestUri, HttpResponseMessage response)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.SendAsync(HttpClient client, HttpRequestMessage message) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 432\r\n   at Grpc.Net.Client.Internal.HttpContentClientStreamReader`2.MoveNextCore(CancellationToken cancellationToken) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\HttpContentClientStreamReader.cs:line 113\r\n   at InteropTestsClient.InteropClient.RunTimeoutOnSleepingServerAsync(TestServiceClient client) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 562\r\n   at InteropTestsClient.InteropClient.RunTestCaseAsync(IChannel channel, ClientOptions options) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 265\r\n   at InteropTestsClient.InteropClient.Run() in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 129\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at InteropTestsClient.InteropClient.<>c.<Run>b__5_1(ClientOptions options) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 122\r\n   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)\r\n   at InteropTestsClient.InteropClient.Run(String[] args) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 111\r\n   at InteropTestsClient.Program.Main(String[] args) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\Program.cs:line 25\r\n---> (Inner Exception #0) System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Net.Http.RedirectHandler.GetUriForRedirect(Uri requestUri, HttpResponseMessage response)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.SendAsync(HttpClient client, HttpRequestMessage message) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 432\r\n   at Grpc.Net.Client.Internal.HttpContentClientStreamReader`2.MoveNextCore(CancellationToken cancellationToken) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\HttpContentClientStreamReader.cs:line 113\r\n   at InteropTestsClient.InteropClient.RunTimeoutOnSleepingServerAsync(TestServiceClient client) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 562\r\n   at InteropTestsClient.InteropClient.RunTestCaseAsync(IChannel channel, ClientOptions options) in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 265\r\n   at InteropTestsClient.InteropClient.Run() in C:\\Development\\Source\\grpc-dotnet\\testassets\\InteropTestsClient\\InteropClient.cs:line 129<---\r\n```\r\n[httpclient-nre.zip](https://github.com/dotnet/corefx/files/3259733/httpclient-nre.zip)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38293","RelatedDescription":"Open issue \"HTTP/2 cancellation and object null reference\" (#38293)"},{"Id":"452742871","IsPullRequest":true,"CreatedAt":"2019-06-06T02:34:05","Actor":"lmolkova","Number":"38280","RawContent":null,"Title":"Enable tracing context propagation without listener in presence of parent Activity","State":"closed","Body":"Fixes #36954\r\n\r\nWith this change, if there was a parent Activity (created by ASP.NET Core, for example), instrumentation for HttpClient lights-up not requiring an active diagnostics listener for System.Net.Http events.\r\n\r\n2 new APIs are introduced to control this behavior.\r\n\r\n* static `HttpClientHandler.SuppressGlobalActivityPropagation`. Turns off propagation for AppDomain (even when there is a DiagnosticListener).\r\n* instance `HttpclientHandler.SuppressActivityPropagaion`. Turns off propagation for a specific client (even when there is a DiagnosticListener). \r\n* For request-level control, users can set parent Activity to null (and even implement handler with this behavior). If we'll find that this is actively used, we may come up with better API for it:\r\n\r\n```csharp\r\nawait Task.Run (() =>\r\n{\r\n    Activity.Current = null;\r\n    return client.SendAsync(request);\r\n});\r\n```\r\n\r\nAPI review issue #38292\r\n\r\ncc @davidfowl @SergeyKanzhelev\r\n","Url":"https://github.com/dotnet/corefx/pull/38280","RelatedDescription":"Closed or merged PR \"Enable tracing context propagation without listener in presence of parent Activity\" (#38280)"},{"Id":"452798078","IsPullRequest":false,"CreatedAt":"2019-06-06T02:14:47","Actor":"lmolkova","Number":"38292","RawContent":null,"Title":"API review: Allow suppressing Activity creation in System.Net.HttpClient","State":"open","Body":"# Background \r\n\r\nSee  #36954:  it enables propagation of Activity in HttpClient if there is a parent Activity. I.e. allows ASP.NET Core (or other incoming layer instrumentation) to control distributed tracing.\r\n\r\nEnd-to-end distributed tracing requires Activity creating on incoming (ASP.NET Core) layer and outgoing. Incoming instrumentation gets context from request headers, outgoing request instrumentation propagates tracing context further.\r\n\r\nNow It is controlled with DiagnosticListener: user app needs to listen to both: ASP.NET Core and HttpClient sources to enable end-to-end and enable Activity creation (and propagation).\r\n\r\nASP.NET Core wants to support distributed tracing by default. Using DiagnosticListener for HttpClient is not desirable:\r\n- events with payloads are not needed, only propagation is needed - it also affects perf\r\n- listening to DiagnosticListener is complicated and may interfere with user app or tracing system\r\n\r\nIn the absence of parent Activity instrumentation is still enabled with DiagnosticListener.\r\n\r\nWe also want to **allow users to disable the feature at various levels as we expect some scenarios where propagation is not desirable because of trust boundaries, CORS configuration, etc.**  \r\n\r\n\r\n# Proposal\r\n\r\n```diff\r\npublic partial class HttpClientHandler : System.Net.Http.HttpMessageHandler\r\n {\r\n+  public bool SuppressActivityPropagation { get { ... } set { ... } }\r\n+  public static bool SuppressGlobalActivityPropagation { get { ... } set { ... } }\r\n}\r\n```\r\n- static `HttpClientHandler.SuppressGlobalActivityPropagation`. Turns off propagation for AppDomain (even if there is an active DiagnosticListener).\r\n- instance `HttpclientHandler.SuppressActivityPropagaion`. Turns off propagation for a specific client (even if there is an active  DiagnosticListener).\r\n\r\n\r\n- For request-level control, users can set parent Activity to null (and even implement handler with this behavior). If we'll find that this is actively used, we may come up with better API for it:\r\n\r\n\r\n\r\nDraft PR with implementation #38280\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38292","RelatedDescription":"Open issue \"API review: Allow suppressing Activity creation in System.Net.HttpClient\" (#38292)"},{"Id":"452793291","IsPullRequest":true,"CreatedAt":"2019-06-06T01:51:59","Actor":"davidfowl","Number":"38291","RawContent":null,"Title":"Open pdb files with FileShare.Read and FileShare.Delete (#38214)","State":"open","Body":"#### Description\r\nWe've been getting reports of locked pdb files (aspnet/AspNetCore#3269) when deploying ASP.NET Core applications (but not locked dlls) and we assumed that it was application insights locking the pdb. Turns out, the runtime opens pdb files (once somebody accesses something like Exception.StackTrace) it can't be renamed/deleted until the process ends. This interrupts the deployment process on azure app service. It turns out we need to pass the right FileShare permissions when opening the file pdb file.\r\n\t\t\r\n#### Customer Impact\r\n\r\nCustomers that experience any exception today cannot easily re-deploy their site without going to the azure portal and restarting the site. The same goes for a server on premises (the admin needs to go restart the IIS application pool to upgrade the site).\r\n\r\n#### Regression?\r\nNo.\r\n\r\n#### Risk\r\nVery small, it's a very small tweak to the code that opens the file.\r\n\r\ncc: @tmat @danmosemsft @stephentoub @DamianEdwards ","Url":"https://github.com/dotnet/corefx/pull/38291","RelatedDescription":"Open PR \"Open pdb files with FileShare.Read and FileShare.Delete (#38214)\" (#38291)"},{"Id":"452785827","IsPullRequest":true,"CreatedAt":"2019-06-06T01:16:26","Actor":"jkoritzinsky","Number":"38290","RawContent":null,"Title":"Delete CoreFX tests of COM lifetime control methods.","State":"open","Body":"These tests are not always stable on multi-threaded test runs and can cause spurious failures. https://github.com/dotnet/coreclr/pull/24990 adds tests of these methods in CoreCLR, where we can have stable test runs of their functionality.\r\n\r\nFixes #38252 ","Url":"https://github.com/dotnet/corefx/pull/38290","RelatedDescription":"Open PR \"Delete CoreFX tests of COM lifetime control methods.\" (#38290)"},{"Id":"452784319","IsPullRequest":false,"CreatedAt":"2019-06-06T01:09:04","Actor":"davidfowl","Number":"38289","RawContent":null,"Title":"Handle portable PDBs in System.Diagnostics.StackTrace tests","State":"open","Body":"See the discussion here https://github.com/dotnet/corefx/pull/38214#discussion_r290842837. We can either skip this test when test pdbs are embedded or write a trickier test 😄 \r\n\r\ncc @tmat ","Url":"https://github.com/dotnet/corefx/issues/38289","RelatedDescription":"Open issue \"Handle portable PDBs in System.Diagnostics.StackTrace tests\" (#38289)"},{"Id":"452774419","IsPullRequest":true,"CreatedAt":"2019-06-06T00:21:21","Actor":"safern","Number":"38288","RawContent":null,"Title":"Add nullable annotations to System.Diagnostics.Contracts ref assembly","State":"open","Body":"Yet to be reviewed in API Review.\r\n\r\ncc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/corefx/pull/38288","RelatedDescription":"Open PR \"Add nullable annotations to System.Diagnostics.Contracts ref assembly\" (#38288)"},{"Id":"452764286","IsPullRequest":true,"CreatedAt":"2019-06-05T23:40:03","Actor":"safern","Number":"38284","RawContent":null,"Title":"Add nullable annotations to System.Threading.Timer ref assembly","State":"open","Body":"Yet to be reviewed in API Review\r\n\r\ncc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/corefx/pull/38284","RelatedDescription":"Open PR \"Add nullable annotations to System.Threading.Timer ref assembly\" (#38284)"},{"Id":"452758401","IsPullRequest":true,"CreatedAt":"2019-06-05T23:16:52","Actor":"JeremyKuhne","Number":"38283","RawContent":null,"Title":"Expose SecurityDescriptor as protected","State":"open","Body":"Classes derived from ObjectSecurity depended on seeing the _securityDescriptor field, which is marked internal. Internal visibility no longer works as types have split into different assemblies and is causing failures.\r\n\r\nThis change also ran the UpdateVSConfigurations target on the changed libraries.\r\n\r\nFixes: #34151","Url":"https://github.com/dotnet/corefx/pull/38283","RelatedDescription":"Open PR \"Expose SecurityDescriptor as protected\" (#38283)"},{"Id":"452758172","IsPullRequest":true,"CreatedAt":"2019-06-05T23:16:04","Actor":"safern","Number":"38282","RawContent":null,"Title":"Re-generate System.Threading.Overlapped ref assembly against implementation","State":"open","Body":"cc: @stephentoub @ahsonkhan @danmosemsft @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38282","RelatedDescription":"Open PR \"Re-generate System.Threading.Overlapped ref assembly against implementation\" (#38282)"},{"Id":"452745328","IsPullRequest":true,"CreatedAt":"2019-06-05T22:27:48","Actor":"baulig","Number":"38281","RawContent":null,"Title":"Disable some Calendars when using GlobalizationMode.Invariant.","State":"open","Body":"When using `GlobalizationMode.Invariant`, disable the Japanese, Taiwan and Hebrew calendars and make the code more linker friendly.\r\n\r\nSince the linker does not currently support dead code elimination, it cannot break down any conditionals inside method bodies. One trick that we use to work around this is to move those conditional pieces into separate methods; then we can give the linker a list of those methods and tell it to replace their bodies with exceptions.","Url":"https://github.com/dotnet/corefx/pull/38281","RelatedDescription":"Open PR \"Disable some Calendars when using GlobalizationMode.Invariant.\" (#38281)"},{"Id":"452669128","IsPullRequest":true,"CreatedAt":"2019-06-05T21:50:00","Actor":"ahsonkhan","Number":"38270","RawContent":null,"Title":"Update JsonSerializer and JsonElement APIs - drop \"As\" and parameter re-ordering","State":"closed","Body":"Update the existing APIs according to latest review: https://github.com/dotnet/corefx/issues/36714#issuecomment-497417558\r\n\r\ncc @bartonjs, @steveharter, @rynowak, @BrennanConroy, @pranavkm, @KrzysztofCwalina, @wli3, @adamsitnik, @billwert ","Url":"https://github.com/dotnet/corefx/pull/38270","RelatedDescription":"Closed or merged PR \"Update JsonSerializer and JsonElement APIs - drop \"As\" and parameter re-ordering\" (#38270)"},{"Id":"452732516","IsPullRequest":false,"CreatedAt":"2019-06-05T21:48:00","Actor":"nguerrera","Number":"38279","RawContent":null,"Title":"Consider putting System.Text.Encoding.CodePages in the shared framework","State":"open","Body":"There are currently 6 copies in SDK. See below.\r\n\r\nIt seems to be used quite a lot, and it seems to be purpose defeating that every app/component is carrying it. I think we're making apps significantly bigger more than we're benefiting from shared framework being approximately 1% smaller.\r\n\r\nAlso, it seems when you deploy as portable (no RID), you get 3 copies so 2.4 MB instead if 800 KB. \r\n\r\n(Now there's an architectural issue in the SDK where we're publishing portable components into the toolset, then crossgening everything. This is causing excess copies of dlls like this in the SDK, which is actually tied to a single TFM and RID when all is said and done. This is hard to fix though we could hack it by deleting some files.)\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012271>dir /s System.Text.Encoding.CodePages.dll\r\n Volume in drive C is C\r\n Volume Serial Number is F0AA-6065\r\n\r\n Directory of C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012271\r\n\r\n06/05/2019  08:52 PM           876,624 System.Text.Encoding.CodePages.dll\r\n               1 File(s)        876,624 bytes\r\n\r\n Directory of C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012271\\Roslyn\\bincore\r\n\r\n06/05/2019  08:52 PM           877,160 System.Text.Encoding.CodePages.dll\r\n               1 File(s)        877,160 bytes\r\n\r\n Directory of C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012271\\Roslyn\\bincore\\runtimes\\win\\lib\\netcoreapp2.0\r\n\r\n06/05/2019  08:52 PM           880,720 System.Text.Encoding.CodePages.dll\r\n               1 File(s)        880,720 bytes\r\n\r\n Directory of C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012271\\runtimes\\win\\lib\\netcoreapp2.0\r\n\r\n06/05/2019  08:52 PM           882,248 System.Text.Encoding.CodePages.dll\r\n               1 File(s)        882,248 bytes\r\n\r\n Directory of C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012271\\Sdks\\Microsoft.NET.Sdk.Razor\\tools\\netcoreapp3.0\r\n\r\n05/15/2018  01:29 PM           758,928 System.Text.Encoding.CodePages.dll\r\n               1 File(s)        758,928 bytes\r\n\r\n Directory of C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012271\\Sdks\\Microsoft.NET.Sdk.Razor\\tools\\netcoreapp3.0\\runtimes\\win\\lib\\netcoreapp2.0\r\n\r\n05/15/2018  01:29 PM           761,488 System.Text.Encoding.CodePages.dll\r\n               1 File(s)        761,488 bytes\r\n\r\n     Total Files Listed:\r\n               6 File(s)      5,037,168 bytes\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38279","RelatedDescription":"Open issue \"Consider putting System.Text.Encoding.CodePages in the shared framework\" (#38279)"},{"Id":"452715297","IsPullRequest":false,"CreatedAt":"2019-06-05T21:34:28","Actor":"Anipik","Number":"38277","RawContent":null,"Title":"Add back StandardOleMarshalObject and IMarshal","State":"closed","Body":"These are used by Winforms to ensure that COM calls are marshalled to UI thread. It's used by the webrowser control and in the base type for accessible controls (to permit external automation). See https://referencesource.microsoft.com/#System/compmod/System/Runtime/InteropServices/StandardOleMarshalObject.cs,9cc1693e68a2dac7,references I've temporarily implemented this as a copy where I need it, but it probably belongs in CoreFx since it is part of System.\r\n\r\n\r\nDonot add label to this issue. this is for testing purpose","Url":"https://github.com/dotnet/corefx/issues/38277","RelatedDescription":"Closed issue \"Add back StandardOleMarshalObject and IMarshal\" (#38277)"},{"Id":"452695712","IsPullRequest":true,"CreatedAt":"2019-06-05T21:19:04","Actor":"dotnet-maestro-bot","Number":"38274","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @wtgodbe\n* @joperezr\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/38274","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#38274)"},{"Id":"452720356","IsPullRequest":false,"CreatedAt":"2019-06-05T21:15:00","Actor":"Anipik","Number":"38278","RawContent":null,"Title":"Add back StandardOleMarshalObject and IMarshal ","State":"closed","Body":"These are used by Winforms to ensure that COM calls are marshalled to UI thread. It's used by the webrowser control and in the base type for accessible controls (to permit external automation). See https://referencesource.microsoft.com/#System/compmod/System/Runtime/InteropServices/StandardOleMarshalObject.cs,9cc1693e68a2dac7,references I've temporarily implemented this as a copy where I need it, but it probably belongs in CoreFx since it is part of System.\r\nDonot add label to this issue. this is for testing purpose","Url":"https://github.com/dotnet/corefx/issues/38278","RelatedDescription":"Closed issue \"Add back StandardOleMarshalObject and IMarshal \" (#38278)"},{"Id":"452707684","IsPullRequest":false,"CreatedAt":"2019-06-05T20:44:26","Actor":"Anipik","Number":"38276","RawContent":null,"Title":"Long running test hang: System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext","State":"closed","Body":"`System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext` hangs randomly on `OSX.1013.Amd64.Open-x64:Release`:\r\n\r\n```\r\n  Discovering: System.Net.Mail.Functional.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Net.Mail.Functional.Tests (found 135 of 136 test cases)\r\n  Starting:    System.Net.Mail.Functional.Tests (parallel test collections = on, max threads = 4)\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext', Elapsed: 00:02:00\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext', Elapsed: 00:04:01\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext', Elapsed: 00:06:02\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext', Elapsed: 00:08:03\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext', Elapsed: 00:10:04\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext', Elapsed: 00:12:06\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext', Elapsed: 00:14:07\r\n```\r\n\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190518.8/workItem/System.Net.Mail.Functional.Tests/wilogs\r\n\r\n@stephentoub maybe `SmtpClient.SendMailAsync` happens before the `TcpListener.AcceptTcpClient` (SmtpServer) blocking call?","Url":"https://github.com/dotnet/corefx/issues/38276","RelatedDescription":"Closed issue \"Long running test hang: System.Net.Mail.Tests.SmtpClientTest.TestCredentialsCopyInAsyncContext\" (#38276)"},{"Id":"452698058","IsPullRequest":true,"CreatedAt":"2019-06-05T20:21:42","Actor":"JeremyKuhne","Number":"38275","RawContent":null,"Title":"Add [DebuggerDisplay] to Json types","State":"open","Body":"Note that there is an issue with turning the TokenType to string in Utf8JsonReader. Probably reflection related? I've been unable to create a more focused repro.","Url":"https://github.com/dotnet/corefx/pull/38275","RelatedDescription":"Open PR \"Add [DebuggerDisplay] to Json types\" (#38275)"},{"Id":"452695020","IsPullRequest":true,"CreatedAt":"2019-06-05T20:15:04","Actor":"dotnet-maestro-bot","Number":"38273","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'release/2.1'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to release/2.1. I'm a robot and am configured to help you automatically keep release/2.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @wtgodbe\n* @stephentoub\n* @tarekgh\n* @ViktorHofer\n* @dotnet-bot\n* @danmosemsft\n* @dotnet-maestro-bot\n* @rmkerr\n* @davidsh\n* @bartonjs\n* @AfsanehR\n* @JeremyKuhne\n* @mmitche\n* @safern\n* @weshaggard\n* @karelz\n* @DrewScoggins\n* @joshfree\n* @kouvel\n* @maryamariyan\n* @brianrob\n* @joperezr\n* @mikem8361\n* @Anipik\n* @riarenas\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.2\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.2-to-release/2.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.2-to-release/2.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-release/2.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-release/2.1 release/2.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.2-to-release/2.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/release/2.2-to-release/2.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-release/2.1 release/2.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.2-to-release/2.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/release/2.2-to-release/2.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/38273","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'release/2.1'\" (#38273)"},{"Id":"452688067","IsPullRequest":true,"CreatedAt":"2019-06-05T19:57:50","Actor":"ericstj","Number":"38272","RawContent":null,"Title":"Move type to last argument in order to meet fx design guidelines for overloads ","State":"open","Body":"Addresses feedback from API-review","Url":"https://github.com/dotnet/corefx/pull/38272","RelatedDescription":"Open PR \"Move type to last argument in order to meet fx design guidelines for overloads \" (#38272)"},{"Id":"452679325","IsPullRequest":true,"CreatedAt":"2019-06-05T19:35:20","Actor":"Wraith2","Number":"38271","RawContent":null,"Title":"SqlClient Fix managed command cancellation","State":"open","Body":"fixes https://github.com/dotnet/SqlClient/issues/109\r\n\r\nWhen using the managed implementation of the sql network interface (unix an uap) any attempt to cancel a request waits until the request completes naturally before the cancellation packet is sent and processed. This results in cancellation taking as long as the query lasts and then acting as if it has been correctly cancelled instead of being cancelled as soon as possible.\r\n\r\nThis PR modifies the locking used in Send and Receive functions so that packets marked as out-of-band (only attention packets) can bypass the normal lock and be sent immediately. The locking has been changed from a single lock serializing all Send and Receive operations to a pair of locks. Normal in-band packets follow the current behaviour. Out-of-band packets will attempt to take the send-receive lock if possible but continue if it is not. An inner send lock has been added which prevents multiple send operations sending interleaved data, each packet is sent completely.\r\n\r\nAll tests pass. New tests are added which check that cancellation doesn't just wait for the query to finish.\r\n/cc @afsanehr, @Gary-Zh , @david-engel , reporter @roji and @saurabh500 from discussion in the issue","Url":"https://github.com/dotnet/corefx/pull/38271","RelatedDescription":"Open PR \"SqlClient Fix managed command cancellation\" (#38271)"},{"Id":"452658389","IsPullRequest":true,"CreatedAt":"2019-06-05T18:44:14","Actor":"safern","Number":"38269","RawContent":null,"Title":"Update Reflection.Emit and String tests after changes due to nullable review","State":"open","Body":"Depends on: https://github.com/dotnet/coreclr/pull/24937\r\n\r\nAfter some API Reviews we decided to fix/change some nullable annotations impacting the behavior in some reflection emit APIs (found incomplete implementation) and some string comparison and manipulation APIs when passing down a null CultureInfo to instead of throwing an `ArgumentNullException` to default to `CurrentCulture`. \r\n\r\nStill need to apply the string changes to MemoryExtensions, but since we haven't gotten to that ref assembly I rather not make my PR in coreclr larger and will do it in another round of fixing feedback.\r\n\r\ncc: @stephentoub @jkotas @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/38269","RelatedDescription":"Open PR \"Update Reflection.Emit and String tests after changes due to nullable review\" (#38269)"},{"Id":"452654902","IsPullRequest":false,"CreatedAt":"2019-06-05T18:35:57","Actor":"KSchlobohm","Number":"38268","RawContent":null,"Title":"System.PlatformNotSupportedException from NameObjectCollectionBase","State":"open","Body":"This unsupported method was discovered while working to port the Enterprise Library Composite UI Application block. I'm receiving a System.PlatformNotSupportedException from the NameObjectCollectionBase class and can see that the corefx implementation has [three platform not supported exception scenarios](https://github.com/dotnet/corefx/blob/1fd3717d73da3ae7440841e8fded4adbba5b0770/src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs).\r\n\r\nIt looks like a reference implementation for this is also available https://referencesource.microsoft.com/#System/compmod/system/collections/specialized/nameobjectcollectionbase.cs,80d0316befb424f2,references\r\n\r\nIt would be great if we could migrate at least the (GetObjectData) method which is the current blocker.","Url":"https://github.com/dotnet/corefx/issues/38268","RelatedDescription":"Open issue \"System.PlatformNotSupportedException from NameObjectCollectionBase\" (#38268)"},{"Id":"452645792","IsPullRequest":false,"CreatedAt":"2019-06-05T18:15:13","Actor":"stephentoub","Number":"38267","RawContent":null,"Title":"Lots of 1st-chance exceptions from HTTP/2 requests","State":"open","Body":"I made 100 serial HTTP/2 requests to https://www.microsoft.com:\r\n```C#\r\n            using (var client = new HttpClient())\r\n            {\r\n                client.DefaultRequestVersion = new Version(2, 0);\r\n                for (int i = 0; i < 100; i++)\r\n                {\r\n                    await client.GetStringAsync(\"https://www.microsoft.com\");\r\n                }\r\n            }\r\n```\r\nAll the requests completed but incurred 28 first-chance exceptions, all of the form:\r\n```\r\nSystem.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request.. ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.\r\n     --- End of inner exception stack trace ---\r\n     at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken) in D:\\repos\\corefx\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\Socket.Tasks.cs:line 1107\r\n     at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.GetResult(Int16 token) in D:\\repos\\corefx\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\Socket.Tasks.cs:line 1073\r\n     at System.Net.Security.SslStream.<FillBufferAsync>g__InternalFillBufferAsync|215_0[TReadAdapter](TReadAdapter adap, ValueTask`1 task, Int32 min, Int32 initial) in D:\\repos\\corefx\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStream.Implementation.cs:line 1478\r\n     at System.Net.Security.SslStream.ReadAsyncInternal[TReadAdapter](TReadAdapter adapter, Memory`1 buffer) in D:\\repos\\corefx\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStream.Implementation.cs:line 1356\r\n     at System.Net.Http.Http2Connection.ReadAtLeastAsync(Stream stream, Memory`1 buffer, Int32 minReadBytes) in D:\\repos\\corefx\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 1520\r\n     at System.Net.Http.Http2Connection.EnsureIncomingBytesAsync(Int32 minReadBytes) in D:\\repos\\corefx\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 154\r\n     at System.Net.Http.Http2Connection.ReadFrameAsync(Boolean initialFrame) in D:\\repos\\corefx\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 180\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /_/src/System.Private.CoreLib/shared/System/Runtime/ExceptionServices/ExceptionDispatchInfo.cs:line 63\r\n```\r\ncc: @geoffkizer, @wfurt ","Url":"https://github.com/dotnet/corefx/issues/38267","RelatedDescription":"Open issue \"Lots of 1st-chance exceptions from HTTP/2 requests\" (#38267)"},{"Id":"452640394","IsPullRequest":true,"CreatedAt":"2019-06-05T18:02:45","Actor":"Wraith2","Number":"38266","RawContent":null,"Title":"SqlClient fix managed MARS timeout cancellation","State":"open","Body":"fixes https://github.com/dotnet/SqlClient/issues/108\r\n\r\nWhen a disconnection event occurs using the managed sql network interface (unix and uwp) the error is incorrectly propagated to the receive completion callback which causes an assertion in debug mode and possible unknown bad things in release mode which may contribute to the observed instability of the unix version. This PR adds a check for a property on the packet which is only set when the connection is in a correct state for receiving packets.\r\n\r\nThird attempt at this fix now with enhanced knowledge from the SQL team so hopefully this one is the last one. Manual and functional tests pass including those re-enabled in this PR.\r\n\r\n/cc @afsanehr, @Gary-Zh , @david-engel and @saurabh500 (whose implementation and knowlege this is based on)","Url":"https://github.com/dotnet/corefx/pull/38266","RelatedDescription":"Open PR \"SqlClient fix managed MARS timeout cancellation\" (#38266)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"452838468","IsPullRequest":false,"CreatedAt":"2019-06-06T05:29:37","Actor":"Therzok","Number":"36202","RawContent":null,"Title":"IDE0059 wrong span for unused assignment","State":"open","Body":"**Version Used**: \r\n3.1.0-beta4-19261-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nvoid StreamCopy (Stream source, Stream destination, int start, int length)\r\n{\r\n\tvar buffer = new byte[1024 * 8];\r\n\tvar read = 0;\r\n\tvar left = length;\r\n\twhile ((read = source.Read (buffer, 0, Math.Min (left, buffer.Length))) != 0) {\r\n\t\tdestination.Write (buffer, 0, read);\r\n\t\tleft -= read;\r\n\t}\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n`= 0` or `0` is highlighted as unused.\r\n\r\n**Actual Behavior**:\r\n<img width=\"314\" alt=\"Screenshot 2019-06-06 at 08 28 50\" src=\"https://user-images.githubusercontent.com/109974/59009148-24968800-8835-11e9-9f9a-7ab2c712107e.png\">\r\n\r\nWe can see the analyzer knows what's redundant here:\r\n<img width=\"331\" alt=\"Screenshot 2019-06-06 at 08 26 15\" src=\"https://user-images.githubusercontent.com/109974/59009157-2d875980-8835-11e9-82ed-62efa6b3cb0a.png\">\r\n","Url":"https://github.com/dotnet/roslyn/issues/36202","RelatedDescription":"Open issue \"IDE0059 wrong span for unused assignment\" (#36202)"},{"Id":"452816479","IsPullRequest":false,"CreatedAt":"2019-06-06T04:15:16","Actor":"vsfeedback","Number":"36201","RawContent":null,"Title":"Problem with C# lambda expression auto-formatting","State":"closed","Body":"VSF_TYPE_MARKDOWNI'm writing a C# lambda expression somewhat like this:\r\n\r\n```csharp\r\n    static Action action(() =>\r\n    {\r\n        doThings();\r\n    });\r\n```\r\nAt least that's how I meant it. I had typed it like this:\r\n```csharp\r\n    static Action action( () => // with a space right here\r\n    {\r\n        doThings();\r\n    });\r\n```\r\nWhen I deleted and retyped the semicolon at the end to auto format it, this happened:\r\n```csharp\r\n    static Action action(() =>\r\n   {\r\n       doThings();\r\n   });\r\n```\r\nIt shifts all of the text over by as many spaces as there are between the two `(`s, I tested it. This wasn't a difficult bug to deal with, but I thought I'd report it, because I'm fairly sure this is unintended.\r\n\r\nThanks to whoever read through this.\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/597221/problem-with-c-lambda-expression-auto-formatting.html\r\nVSTS ticketId: 909893_\r\n_These are the original issue comments:_\r\n(no comments)\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36201","RelatedDescription":"Closed issue \"Problem with C# lambda expression auto-formatting\" (#36201)"},{"Id":"452743179","IsPullRequest":true,"CreatedAt":"2019-06-06T03:23:23","Actor":"sharwell","Number":"36190","RawContent":null,"Title":"Disable TypingHelpDirectiveWorks for legacy completion","State":"closed","Body":"This test is flaky in legacy completion, but legacy completion is slated for removal so the test failures were not fully investigated.\r\n\r\nThis change addresses failures of this test with the following message:\r\n\r\n```\r\nSystem.Exception : Unable to find expected content in REPL within 10000 milliseconds and no exceptions were thrown. Actual content:\\r\\n[[Resetting execution engine.\\r\\nLoading context from 'CSharpInteractive.rsp'.]]\r\n\r\nServer stack trace: \r\n   at Microsoft.VisualStudio.IntegrationTest.Utilities.InProcess.InteractiveWindow_InProc.WaitForPredicate(Func`1 getValue, Func`2 isExpectedValue)\r\n   at Microsoft.VisualStudio.IntegrationTest.Utilities.InProcess.InteractiveWindow_InProc.WaitForLastReplOutputContains(String outputText)\r\n   at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]& outArgs)\r\n   at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage msg)\r\n\r\nException rethrown at [0]: \r\n   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)\r\n   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)\r\n   at Microsoft.VisualStudio.IntegrationTest.Utilities.InProcess.InteractiveWindow_InProc.WaitForLastReplOutputContains(String outputText)\r\n   at Roslyn.VisualStudio.IntegrationTests.CSharp.CSharpInteractive.TypingHelpDirectiveWorks() in /_/src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractive.cs:line 101\r\n```\r\n\r\nDuring the investigation, I observed that each of the failure cases was preceded by an exception thrown in `ChainTaskAndNotifyControllerWhenFinished` in the awaiter's `GetResult` on this line:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/c78f1e594997b0dae930551101f690708b4db764/src/EditorFeatures/Core/Implementation/IntelliSense/ModelComputation.cs#L150\r\n\r\nThe failure does not appear to be caused by an _unhandled_ exception, but rather the exception appears to be an observable symptom of a race condition which occurs only when this test is going to fail.","Url":"https://github.com/dotnet/roslyn/pull/36190","RelatedDescription":"Closed or merged PR \"Disable TypingHelpDirectiveWorks for legacy completion\" (#36190)"},{"Id":"452799370","IsPullRequest":true,"CreatedAt":"2019-06-06T02:19:50","Actor":"ivanbasov","Number":"36200","RawContent":null,"Title":"filter tests for async completion","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/29110","Url":"https://github.com/dotnet/roslyn/pull/36200","RelatedDescription":"Open PR \"filter tests for async completion\" (#36200)"},{"Id":"452769538","IsPullRequest":true,"CreatedAt":"2019-06-06T01:30:19","Actor":"dotnet-bot","Number":"36196","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36196","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36196)"},{"Id":"452769559","IsPullRequest":true,"CreatedAt":"2019-06-06T01:30:14","Actor":"dotnet-bot","Number":"36197","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36197","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36197)"},{"Id":"452769598","IsPullRequest":true,"CreatedAt":"2019-06-06T01:30:06","Actor":"dotnet-bot","Number":"36199","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36199","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36199)"},{"Id":"452769574","IsPullRequest":true,"CreatedAt":"2019-06-06T00:00:56","Actor":"dotnet-bot","Number":"36198","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36198","RelatedDescription":"Open PR \"Merge master-vs-deps to features/razorSupport2\" (#36198)"},{"Id":"452763743","IsPullRequest":true,"CreatedAt":"2019-06-05T23:37:58","Actor":"RikkiGibson","Number":"36195","RawContent":null,"Title":"Consider a field assigned if it is not equal to its default value","State":"open","Body":"This is a possible way to resolve #33391. Will need to consider whether the assumption in this solution is sound and if we're alright with its implications.","Url":"https://github.com/dotnet/roslyn/pull/36195","RelatedDescription":"Open PR \"Consider a field assigned if it is not equal to its default value\" (#36195)"},{"Id":"452755180","IsPullRequest":false,"CreatedAt":"2019-06-05T23:04:34","Actor":"rchande","Number":"36194","RawContent":null,"Title":"`this` not recommended between parens in incomplete code","State":"open","Body":"```csharp\r\n        public void something()\r\n        {\r\n            int z = (t$$)\r\n            object o = new object();\r\n        }\r\n```\r\n\r\n`this` is not recommended at the caret. It is recommended if I add a semicolon at the end of the line.\r\n","Url":"https://github.com/dotnet/roslyn/issues/36194","RelatedDescription":"Open issue \"`this` not recommended between parens in incomplete code\" (#36194)"},{"Id":"452297684","IsPullRequest":false,"CreatedAt":"2019-06-05T22:59:47","Actor":"davidhunter22","Number":"36175","RawContent":null,"Title":"'CS8629: Nullable value type may be null' reported when it can not be null after HasValue","State":"closed","Body":"This occurs with C# 8\r\n\r\n```\r\npublic struct Foo\r\n{\r\n    int get_value( )\r\n   {\r\n        int? value = get_value_from_somewhere( );\r\n\r\n        // This test will not generate a 'Nullable value type may be null' \r\n        // if( value == null ) return 0;\r\n\r\n        // This test will not generate a 'Nullable value type may be null' \r\n        // if( !value.HasValue ) return 0;\r\n\r\n        // This test will generate a 'Nullable value type may be null' \r\n        if( value.HasValue == false ) return 0;\r\n\r\n        return value.Value; // Warning on this line\r\n    }\r\n\r\n    // In reality do something that may or may not return a value\r\n    int? get_value_from_somewhere( ) => 0; \r\n}\r\n```\r\nI think the last test is simple enough that it should not generate a warning\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/36175","RelatedDescription":"Closed issue \"'CS8629: Nullable value type may be null' reported when it can not be null after HasValue\" (#36175)"},{"Id":"452752006","IsPullRequest":true,"CreatedAt":"2019-06-05T22:52:21","Actor":"RikkiGibson","Number":"36193","RawContent":null,"Title":"Test inferred tuple type for default expression","State":"open","Body":"Resolves #33344 by adding a test. It seems similar to the `Tuple_Default_03` test.\r\n\r\nWould like to know if this covers what we were concerned about in the issue or if more work is needed.","Url":"https://github.com/dotnet/roslyn/pull/36193","RelatedDescription":"Open PR \"Test inferred tuple type for default expression\" (#36193)"},{"Id":"452750586","IsPullRequest":true,"CreatedAt":"2019-06-05T22:46:45","Actor":"sharwell","Number":"36192","RawContent":null,"Title":"Simplify x64 configuration for AnalyzerRunner","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36192","RelatedDescription":"Open PR \"Simplify x64 configuration for AnalyzerRunner\" (#36192)"},{"Id":"452745219","IsPullRequest":false,"CreatedAt":"2019-06-05T22:27:24","Actor":"jasonmalinowski","Number":"36191","RawContent":null,"Title":"QuickInfo should display null-state and declared type","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/36191","RelatedDescription":"Open issue \"QuickInfo should display null-state and declared type\" (#36191)"},{"Id":"452694667","IsPullRequest":false,"CreatedAt":"2019-06-05T22:21:24","Actor":"gafter","Number":"36185","RawContent":null,"Title":"Incorrect semantic model type information for converted tuple literal","State":"closed","Body":"The following proposed test fails where marked:\r\n\r\n``` c#\r\n        [Fact]\r\n        [WorkItem(36185, \"https://github.com/dotnet/roslyn/issues/36185\")]\r\n        public void GetTypeInfo_03()\r\n        {\r\n            var source = @\"\r\nclass C\r\n{\r\n    static void Main()\r\n    {\r\n        M((1, \"\"hello\"\"));\r\n        M((2, null));\r\n    }\r\n    public static void M((short, string) x) { }\r\n}\r\n\" + trivial2uple + trivial3uple + tupleattributes_cs;\r\n\r\n            var tree = Parse(source, options: TestOptions.Regular);\r\n            var comp = CreateCompilation(tree);\r\n            comp.VerifyDiagnostics();\r\n\r\n            var model = comp.GetSemanticModel(tree, ignoreAccessibility: false);\r\n            var nodes = tree.GetCompilationUnitRoot().DescendantNodes();\r\n\r\n            var n1 = nodes.OfType<TupleExpressionSyntax>().ElementAt(0);\r\n\r\n            Assert.Equal(@\"(1, \"\"hello\"\")\", n1.ToString());\r\n            Assert.Equal(\"(System.Int32, System.String)\", model.GetTypeInfo(n1).Type.ToTestDisplayString());\r\n            Assert.Equal(\"(System.Int16, System.String)\", model.GetTypeInfo(n1).ConvertedType.ToTestDisplayString());\r\n            Assert.Equal(ConversionKind.ImplicitTupleLiteral, model.GetConversion(n1).Kind);\r\n\r\n            var n2 = nodes.OfType<TupleExpressionSyntax>().ElementAt(1);\r\n\r\n            Assert.Equal(@\"(2, null)\", n2.ToString());\r\n            Assert.Null(model.GetTypeInfo(n2).Type);\r\n            Assert.Equal(\"(System.Int16, System.String)\", model.GetTypeInfo(n2).ConvertedType.ToTestDisplayString());\r\n            Assert.Equal(ConversionKind.ImplicitTupleLiteral, model.GetConversion(n2).Kind);\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/36185","RelatedDescription":"Closed issue \"Incorrect semantic model type information for converted tuple literal\" (#36185)"},{"Id":"452733213","IsPullRequest":false,"CreatedAt":"2019-06-05T21:50:00","Actor":"mattscheffer","Number":"36189","RawContent":null,"Title":"Duplicate CA1822 warnings after installing installing fxcop and building","State":"open","Body":"**Version Used**: \r\n29004.99\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new C# .net core Console app\r\n2. Add a new class file\r\n3. Adjust the code for the class to include:\r\n```\r\npublic class Class1\r\n    {\r\n        public int Method1()\r\n        {\r\n            return 22;\r\n        }\r\n    }\r\n```\r\n4. Install latest Microsoft.CodeAnalysis.FxCopAnalyzers NuGet package\r\n5. Observe CA1822 in the error list for Method1()\r\n6. Build\r\n**Expected Behavior**:\r\nOnly one entry for CA1822 appears\r\n**Actual Behavior**:\r\n2 entries appear. 1 from Intellisense and 1 from Build\r\n\r\n![image](https://user-images.githubusercontent.com/10537189/58993012-26167080-87a1-11e9-952b-1e1a282ed44e.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/36189","RelatedDescription":"Open issue \"Duplicate CA1822 warnings after installing installing fxcop and building\" (#36189)"},{"Id":"452727723","IsPullRequest":true,"CreatedAt":"2019-06-05T21:34:21","Actor":"chsienki","Number":"36188","RawContent":null,"Title":"Dont try and check tuple conversions in error cases:","State":"open","Body":"- When checking an identity converison, also check for a bound tuple if the type isn't a tuple (as we might have a bound tuple with an error type)\r\n- When checking a tuple conversion, don't call GenerateConversion in the error case, as we don't have a target type to generate against\r\n- Update tests\r\n\r\nFixes #35157","Url":"https://github.com/dotnet/roslyn/pull/36188","RelatedDescription":"Open PR \"Dont try and check tuple conversions in error cases:\" (#36188)"},{"Id":"452717895","IsPullRequest":false,"CreatedAt":"2019-06-05T21:07:57","Actor":"vsfeedback","Number":"36187","RawContent":null,"Title":"Odd IntelliSense Behavior with Overloaded Methods","State":"open","Body":"VSF_TYPE_MARKDOWNWhen you type the following code:\n\n```\nprivate enum A\n{\n\tA,\n\tB,\n}\n\nprivate void Get(A a) { }\nprivate void Get(string a) { }\n\nprivate void Test()\n{\n\tGet(\n}\n```\n\nWhen you type the `(` after the `Get` in the `Test` method, VS suggests to autocomplete the first parameter of type `A`, which is exactly expected.\n\nSee this picture: https://cdn.discordapp.com/attachments/369794346142269441/577795445443657728/unknown.png\n\nBut when you change the declaration order of the two `Get` methods, like this:\n\n```\nprivate enum A\n{\n\tA,\n\tB,\n}\n\nprivate void Get(string a) { }\nprivate void Get(A a) { }\n\nprivate void Test()\n{\n\tGet(\n}\n```\n\nAnd now if you type `(`, you get no suggestions. Notice that the first overloaded method that shows up is still the one with the `A` parameter, and not the `string` one.\n\nSee this picture: https://cdn.discordapp.com/attachments/369794346142269441/577795671596335124/unknown.png\n\nPressin the default `Ctrl+Space` does not help either.\n\n**Expected behavior:** When the `Get(A a)` method is selected as the current overload, pressing `Ctrl+Space` should suggest to complete that given parameter.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/567651/odd-intellisense-behavior-with-overloaded-methods.html\nVSTS ticketId: 892502_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/14/2019, 09:42 PM (21 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVatsalya Agrawal [MSFT] on 5/15/2019, 00:11 PM (21 days ago): <p>Thank you for providing feedback, and we're sorry to hear it's not behaving as you expect. Based on your description so far, we were unable to reproduce the issue. Pressing Ctrl + Space seems to be suggesting the right parameter. If possible please provide a sample project where this issue is occurring.</p>\n\nmatej.zajacik on 5/15/2019, 00:33 PM (21 days ago): <strong>(private comment)</strong><p>Thank you for the reply!</p><p>When the declaration order is `Get(A a)` and then `Get(string a)`, everything works okay. Right after typing `(`, it does the expected thing, that is suggesting the enum `A` (the first picture). But when the order is `Get(string a)` and then `Get(A a)`, I get no suggestion at all (the second picture). When I press `Ctrl+Space`, it suggests to use the `ToString()` method:</p><p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/73607-intellisenseissue00.png\">intellisenseissue00.png</a></p><p>The project: <a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/73608-intellisenseissue.zip\">intellisenseissue.zip</a></p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36187","RelatedDescription":"Open issue \"Odd IntelliSense Behavior with Overloaded Methods\" (#36187)"},{"Id":"452707360","IsPullRequest":true,"CreatedAt":"2019-06-05T20:43:03","Actor":"gafter","Number":"36186","RawContent":null,"Title":"Update some LDM champs from 7.3","State":"open","Body":"/cc @jaredpar ","Url":"https://github.com/dotnet/roslyn/pull/36186","RelatedDescription":"Open PR \"Update some LDM champs from 7.3\" (#36186)"},{"Id":"452690777","IsPullRequest":true,"CreatedAt":"2019-06-05T20:04:42","Actor":"sharwell","Number":"36184","RawContent":null,"Title":"Syntax tree benchmarks","State":"open","Body":"Add a run profile for benchmarking SyntaxTreeInfoIncrementalAnalyzerProvider.","Url":"https://github.com/dotnet/roslyn/pull/36184","RelatedDescription":"Open PR \"Syntax tree benchmarks\" (#36184)"},{"Id":"452574560","IsPullRequest":true,"CreatedAt":"2019-06-05T19:42:25","Actor":"JoeRobich","Number":"36179","RawContent":null,"Title":"Write Roslyn assembly version to DependentAssemblyVersions file","State":"closed","Body":"Writing the Roslyn assembly version to this file allows the RIT to automatically update binding redirects during insertion.\r\n\r\nI ran a fake insertion with the Roslyn version set to 9.9.0 and the files where updated accordingly - https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/184921?_a=files","Url":"https://github.com/dotnet/roslyn/pull/36179","RelatedDescription":"Closed or merged PR \"Write Roslyn assembly version to DependentAssemblyVersions file\" (#36179)"},{"Id":"452640741","IsPullRequest":true,"CreatedAt":"2019-06-05T18:03:32","Actor":"josh-127","Number":"36183","RawContent":null,"Title":"Fix typo in task namespace in docs","State":"open","Body":"Task docs has `Sytem.Threading.Tasks` instead of `System.Threading.Tasks`.","Url":"https://github.com/dotnet/roslyn/pull/36183","RelatedDescription":"Open PR \"Fix typo in task namespace in docs\" (#36183)"},{"Id":"452608981","IsPullRequest":false,"CreatedAt":"2019-06-05T16:50:21","Actor":"CreateAndInject","Number":"36182","RawContent":null,"Title":"The debugger is unable to evaluate this expression","State":"open","Body":"**Version Used**: 16.1.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. \r\n```\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        var demos = new[] { new Demo() };\r\n        demos = new[] { new Demo(), new Demo() };\r\n    }\r\n}\r\n\r\nclass Demo\r\n{\r\n    public override string ToString() => \"Test\";\r\n}\r\n```\r\n2. Add a breakpoint in the line: `demos = new[] { new Demo(), new Demo() };`\r\n3. F5\r\n4. Expand `demos` in Autos window: there's no problem\r\n5. F10\r\n6. Expand `demos` in Autos window: `The debugger is unable to evaluate this expression`\r\n\r\n![pic](https://user-images.githubusercontent.com/2529999/58974457-001abb80-87f5-11e9-92ae-1e4ef5a1eaa9.gif)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/36182","RelatedDescription":"Open issue \"The debugger is unable to evaluate this expression\" (#36182)"},{"Id":"452601811","IsPullRequest":false,"CreatedAt":"2019-06-05T16:34:38","Actor":"Harry5S5","Number":"36181","RawContent":null,"Title":"Missing compilation error CS0165 with unassigned ImmutableArray","State":"open","Body":"**Version Used**: \r\nVisual Studio 2017 + 2019, .NET Core 2.1 + Framework 4.7.2 tested\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create C# Console project with  System.Collections.Immutable 1.5.0 nugget package\r\n2. \r\n```\r\nusing System;\r\nusing System.Collections.Immutable;\r\n\r\nnamespace ImmutableArrayRoslyn\r\n{\r\n    class NotInitiliazedVariableTest\r\n    {\r\n        public void M()\r\n        {\r\n            ImmutableArray<int> notInitializedVariable;\r\n            Console.WriteLine(notInitializedVariable.Length);\r\n        }\r\n    }\r\n}\r\n```\r\n3. Build\r\n\r\n**Expected Behavior**:\r\nThe compiler should raise the error CS0165\t\"Use of unassigned local variable 'notInitializedVariable'\" to be raised\r\n\r\nFor example that error is correctly raised if we add the following method\r\n```\r\npublic void OK() {\r\n            int notInitializedVariable;\r\n            Console.WriteLine(notInitializedVariable);\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\nNo error is shown and behavior during runtime can be unexpected\r\n\r\nThe following file shows another sample using a function\r\n[SampleBug.zip](https://github.com/dotnet/roslyn/files/3258054/SampleBug.zip)\r\n","Url":"https://github.com/dotnet/roslyn/issues/36181","RelatedDescription":"Open issue \"Missing compilation error CS0165 with unassigned ImmutableArray\" (#36181)"},{"Id":"452594264","IsPullRequest":false,"CreatedAt":"2019-06-05T16:18:47","Actor":"donnie-msft","Number":"36180","RawContent":null,"Title":"Auto-Restore sometimes causes invisible unhandled exception in SDK-style projects","State":"open","Body":"## Details about Problem\r\nSometimes when opening an SDK-style project, while loading into VS, an unhandled exception occurs during the NuGet auto-restore (seemingly caused by a race condition with the project loading). It is not visible to the user, but shows up while debugging the Experimental VS and opening an SDK project. Concern is whether this could cause a future hard-to-find bug during auto-restore, and perhaps work is happening on the Project before project loading is complete.\r\n\r\n\r\n\r\nAn exception of type 'System.InvalidOperationException' occurred in mscorlib.dll but was not handled in user code\r\nSystem.InvalidOperationException: 'The operation failed as details for project ConsoleApp7 could not be loaded.'\r\nat NuGet.PackageManagement.VisualStudio.NetCorePackageReferenceProject.GetPackageSpecsAsync(DependencyGraphCacheContext context) in C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Projects\\NetCorePackageReferenceProject.cs:line 144\r\nat NuGet.VisualStudio.VsPackageInstallerServices.d__8.MoveNext() in C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.VisualStudio.Implementation\\Extensibility\\VsPackageInstallerServices.cs:line 116\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter1.GetResult() at NuGet.VisualStudio.VsPackageInstallerServices.<>c__DisplayClass10_0.<<GetInstalledPackages>b__0>d.MoveNext() in C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.VisualStudio.Implementation\\Extensibility\\VsPackageInstallerServices.cs:line 193 at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread() at Microsoft.VisualStudio.Threading.JoinableTask1.CompleteOnCurrentThread()\r\nat Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func1 asyncMethod, JoinableTaskCreationOptions creationOptions) at Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func1 asyncMethod)\r\nat NuGet.VisualStudio.VsPackageInstallerServices.GetInstalledPackages(Project project) in C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.VisualStudio.Implementation\\Extensibility\\VsPackageInstallerServices.cs:line 166\r\nat Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessProjectChange(Solution solution, ProjectId projectId)\r\n\r\n## Detailed repro steps so we can see the same problem\r\nRepro for both @donnie-msft (on VS 16.2.0 prev3) and @dominoFire, but is inconsistent, and may take a few attempts.:\r\n\r\n1. Launch experimental VS.\r\n\r\n2. Ensure Exception Handling settings will break on any unhandled exception.\r\n\r\n3. Open an SDK-style solution (preferably new and un-compiled which seems to more consistently repro).\r\n\r\n4. If the race condition occurs, then the Restore will cause the above exception while the solution is loading and restoring. \r\n","Url":"https://github.com/dotnet/roslyn/issues/36180","RelatedDescription":"Open issue \"Auto-Restore sometimes causes invisible unhandled exception in SDK-style projects\" (#36180)"},{"Id":"452486974","IsPullRequest":false,"CreatedAt":"2019-06-05T12:58:27","Actor":"Tragetaschen","Number":"36178","RawContent":null,"Title":"Missing intellisense error and weird diagnostic when indexing ReadOnlyMemory<T>","State":"open","Body":"**Version Used**: \r\n16.1.1, netcoreapp2.2, LangVersion=latest\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\npublic class C\r\n{\r\n    public void M()\r\n    {\r\n        System.ReadOnlyMemory<int> a = default;\r\n        var b = a[0];\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nThere should be an IntelliSense diagnostic and a compiler diagnostic that `ReadOnlyMemory<T>` doesn't have an indexer.\r\n\r\n**Actual Behavior**:\r\nThere's no IntelliSense error, b is typed as `ReadOnlyMemory<int>`. When compiling, there's  diagnostic `CS0656: Missing compiler required member 'System.Range.get_Start'`.\r\n\r\nIt looks like some C# 8 features are leaking.\r\n","Url":"https://github.com/dotnet/roslyn/issues/36178","RelatedDescription":"Open issue \"Missing intellisense error and weird diagnostic when indexing ReadOnlyMemory<T>\" (#36178)"},{"Id":"452438517","IsPullRequest":false,"CreatedAt":"2019-06-05T10:57:42","Actor":"drewnoakes","Number":"36177","RawContent":null,"Title":"IDE0016 codefix can change behaviour","State":"open","Body":"**Version Used**: 16.1.1+28922.388\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nobject _o;\r\nbool _b;\r\nvoid M(object o)\r\n{\r\n    if (o == null)\r\n        throw new ArgumentNullException(nameof(o));\r\n    _b = true;\r\n    _o = o;\r\n}\r\n```\r\n\r\nIDE0016 fires and wants to change the code to:\r\n\r\n```csharp\r\nobject _o;\r\nbool _b;\r\nvoid M(object o)\r\n{\r\n    _b = true;\r\n    _o = o ?? throw new ArgumentNullException(nameof(o));\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo change in behaviour.\r\n\r\n**Actual Behavior**:\r\n\r\nPotential change in behaviour due to throw being moved after side effecty code.","Url":"https://github.com/dotnet/roslyn/issues/36177","RelatedDescription":"Open issue \"IDE0016 codefix can change behaviour\" (#36177)"},{"Id":"452358822","IsPullRequest":true,"CreatedAt":"2019-06-05T07:47:32","Actor":"heejaechang","Number":"36176","RawContent":null,"Title":"pass in cancellation token to bail out early in HasReferenceToAssembly","State":"open","Body":"this particular code path can take a long time if metadata reference hasn't created its symbols yet.\r\n\r\nthis can get really bad if we try to show code lens for something like IDispose.Dipose and it tries to create all metdata references in the solution.\r\n\r\nsince it is not cancellable, just passing by a Dipose method can cause this to occupy CPU 100% for several seconds and there is no way to make it go away.\r\n\r\nnow we pass in cancellation token so that we can bail out  sooner.","Url":"https://github.com/dotnet/roslyn/pull/36176","RelatedDescription":"Open PR \"pass in cancellation token to bail out early in HasReferenceToAssembly\" (#36176)"},{"Id":"452295999","IsPullRequest":true,"CreatedAt":"2019-06-05T03:12:24","Actor":"codetriage-readme-bot","Number":"36174","RawContent":null,"Title":"Add CodeTriage badge to dotnet/roslyn","State":"open","Body":"Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/dotnet/roslyn/badges/users.svg)](https://www.codetriage.com/dotnet/roslyn)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 3 years ago, [The-Q](https://github.com/The-Q) added this project to CodeTriage in order to start contributing. Since then, 266 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated.","Url":"https://github.com/dotnet/roslyn/pull/36174","RelatedDescription":"Open PR \"Add CodeTriage badge to dotnet/roslyn\" (#36174)"},{"Id":"452288207","IsPullRequest":true,"CreatedAt":"2019-06-05T02:31:29","Actor":"jasonmalinowski","Number":"36173","RawContent":null,"Title":"Fix generate field nullability handling","State":"open","Body":"\"Fixes\" generate field in that this really just fixes up the rest of the TypeInferrer -- at this point once that was fixed the feature just lit up. Added some basic tests to cover.","Url":"https://github.com/dotnet/roslyn/pull/36173","RelatedDescription":"Open PR \"Fix generate field nullability handling\" (#36173)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"452778010","IsPullRequest":true,"CreatedAt":"2019-06-06T00:37:37","Actor":"Dotnet-GitSync-Bot","Number":"7490","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7490","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7490)"},{"Id":"452732949","IsPullRequest":true,"CreatedAt":"2019-06-06T00:35:58","Actor":"Dotnet-GitSync-Bot","Number":"7489","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7489","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7489)"},{"Id":"452691082","IsPullRequest":true,"CreatedAt":"2019-06-05T20:05:26","Actor":"trylek","Number":"7488","RawContent":null,"Title":"Diagnostic improvements in CPAOT section builder","State":"open","Body":"I've been debugging CPAOT for almost a year. One recurring hard\r\nproblem has always been diagnosing missing items in the symbol\r\nmap that manifest as \"key not found\" exceptions during the\r\nrelocation phase.\r\n\r\nI have hit this again while debugging the constrained calls and\r\nI have realized I can mitigate the situation by slightly\r\nrearranging things - instead of the straight array of relocations\r\nthere is mostly no harm in storing directly the ObjectData refs\r\n(except for the presumably small perf penalty of one extra\r\nindirection in accessing the array of relocations). ObjectData\r\nis usually much easier to analyze in the debugger as it typically\r\ncontains a symbol definition.\r\n\r\nI have applied minor mechanical renames to put the naming in sync\r\nwith the new semantics; please let me know if you spot an omission\r\non my part.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7488","RelatedDescription":"Open PR \"Diagnostic improvements in CPAOT section builder\" (#7488)"},{"Id":"452208062","IsPullRequest":true,"CreatedAt":"2019-06-04T23:26:43","Actor":"tannergooding","Number":"7486","RawContent":null,"Title":"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07","State":"closed","Body":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257","Url":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Closed or merged PR \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486)"},{"Id":"452221551","IsPullRequest":false,"CreatedAt":"2019-06-04T21:43:21","Actor":"timmydo","Number":"7487","RawContent":null,"Title":"Process crashes on Linux when catching a null pointer exception from managed code","State":"open","Body":"I have a program that does something like this:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            // this loads a corert native library\r\n            var blah= NativeMethods.DoSomething(IntPtr.Zero, IntPtr.Zero, 10_000);\r\n            try\r\n            {\r\n                string x = null;\r\n                Console.WriteLine($\"{x.Length}\");\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n            }\r\n            Console.WriteLine(\"done\");\r\n        }\r\n```\r\n\r\nwhen the null pointer exception is thrown, the corert sigsegv handler is invoked. https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/Native/Runtime/unix/HardwareExceptions.cpp#L582\r\n\r\nAround L582, the processess crashes with sigabort:\r\n\r\n```\r\ndotnet TestConsoleApp.dll\r\n*** stack smashing detected ***: dotnet terminated\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7fe006ea4bfb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7fe006f2d437]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x0)[0x7fe006f2d400]\r\n/root/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.2.4/runtimes/linux-x64/native/libcoreclr.so(+0x4e15c7)[0x7fe00656b5c7]\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7487","RelatedDescription":"Open issue \"Process crashes on Linux when catching a null pointer exception from managed code\" (#7487)"},{"Id":"452085003","IsPullRequest":true,"CreatedAt":"2019-06-04T18:54:04","Actor":"MichalStrehovsky","Number":"7484","RawContent":null,"Title":"Avoid custom attributes when resolving lazy pinvokes","State":"closed","Body":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled.","Url":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Closed or merged PR \"Avoid custom attributes when resolving lazy pinvokes\" (#7484)"},{"Id":"452108239","IsPullRequest":true,"CreatedAt":"2019-06-04T18:53:48","Actor":"Dotnet-GitSync-Bot","Number":"7485","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @adamsitnik @Youssef1313","Url":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7485)"},{"Id":"451695299","IsPullRequest":true,"CreatedAt":"2019-06-04T13:26:04","Actor":"Dotnet-GitSync-Bot","Number":"7483","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7483","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7483)"},{"Id":"450157595","IsPullRequest":false,"CreatedAt":"2019-06-04T12:01:14","Actor":"lukaszorg","Number":"7468","RawContent":null,"Title":"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error ","State":"closed","Body":"Creating an App Package for publication in the store results in the following errors:\r\n\r\nError: NUTC300F:Internal Compiler Error: Native compilation failed due to out of memory error <our>.App\r\nError ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\1.7.6\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\myself\\<path>\\<to>\\<our>.App\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\<our>.App.rsp\"' returned exit code 1 <our>.App\r\n\r\nWe are targeting Surface Hub (Creators Update 1703) so we cannot use newer version of microsoft.net.native.compiler.  \r\nWe have found not documented parameter for nutc_driver (/d2threads1) that helps building the solution on local machines. \r\nIs there any way to pass this flag on build agents? \r\nAre there any other workarounds?\r\n","Url":"https://github.com/dotnet/corert/issues/7468","RelatedDescription":"Closed issue \"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error \" (#7468)"},{"Id":"451675402","IsPullRequest":true,"CreatedAt":"2019-06-04T06:28:15","Actor":"trylek","Number":"7482","RawContent":null,"Title":"CPAOT: token context cleanup in JIT interface","State":"closed","Body":"One of the remaining debts in CPAOT I noticed during my recent\r\ninvestigations was the notion of input module token context. This\r\nis just wrong in the presence of inlining as we may never presume\r\nthat a token originated in the input module. This simple change\r\nchanges token resolution to resolve token context modules based on\r\nthe token scope instead.\r\n\r\nWith this change we no longer need to create a dictionary of\r\nper-module CorInfoImpl instances so that we can get by with just\r\na singleton; this is the gist of the additional cleanup in\r\nReadyToRunCodegenCompilation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7482","RelatedDescription":"Closed or merged PR \"CPAOT: token context cleanup in JIT interface\" (#7482)"},{"Id":"451647153","IsPullRequest":true,"CreatedAt":"2019-06-03T21:16:27","Actor":"Dotnet-GitSync-Bot","Number":"7481","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7481","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7481)"},{"Id":"451615942","IsPullRequest":true,"CreatedAt":"2019-06-03T19:46:23","Actor":"MichalStrehovsky","Number":"7480","RawContent":null,"Title":"Merge nmirror to master","State":"closed","Body":"I guess we could also do a cherry pick. I mostly want to get ebc91d6 into master.","Url":"https://github.com/dotnet/corert/pull/7480","RelatedDescription":"Closed or merged PR \"Merge nmirror to master\" (#7480)"},{"Id":"451194717","IsPullRequest":true,"CreatedAt":"2019-06-02T19:30:13","Actor":"Dotnet-GitSync-Bot","Number":"7479","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft","Url":"https://github.com/dotnet/corert/pull/7479","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7479)"},{"Id":"451144350","IsPullRequest":true,"CreatedAt":"2019-06-02T05:00:00","Actor":"Suchiman","Number":"7478","RawContent":null,"Title":"Port GC changes from coreclr - 12","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)","Url":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 12\" (#7478)"},{"Id":"451016904","IsPullRequest":true,"CreatedAt":"2019-06-02T00:51:41","Actor":"Dotnet-GitSync-Bot","Number":"7476","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7476","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7476)"},{"Id":"451020527","IsPullRequest":true,"CreatedAt":"2019-06-02T00:50:41","Actor":"Suchiman","Number":"7477","RawContent":null,"Title":"Port GC changes from coreclr - 11","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7473\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c):**\r\n- https://github.com/dotnet/coreclr/commit/571d469cef5d41dcb460e650bb04b738675abdd8 ([already merged](https://github.com/dotnet/corert/commit/f9bf1fc506347c30357a0d708bf69459f142eee4))\r\n- https://github.com/dotnet/coreclr/commit/7f9230129f047bfa6a5fd9e4be734b9e9fe2c93e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c755e3b7f5d597c8d192675dbaaa337268d93f1c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/a37369ab73d49d9957034d8accbdfba4e7f59367 (skipped due to getting reverted)\r\n- https://github.com/dotnet/coreclr/commit/c2331126c1963a81c70943a9530e0a8f823b21ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3a295a078701f72edc18a4404cab7b7e1bc104c7 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/8df01f50ca980ab8840124c74037782f75702032 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/bc5a76d93f21392acbdfb8ec820fa287b31f09e4 (skipped revert of revert)\r\n- https://github.com/dotnet/coreclr/commit/8b8b3b95adada2a9cb2b00876c6d11ef3e4438f7 (skipped due to lacking cgroup)\r\n- https://github.com/dotnet/coreclr/commit/59714b683f40fac869050ca08acc5503e84dc776 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/facdc8b97f73973fb416ed13e4b9dd9a255864bf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/f3f12666c822d8b4db8a9ca051618b6dc2420c68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/145cfe19f9e4f3e8a84b75a3048fe98fffb59a68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/951222555cbc4155f171180bee78da7631f03b20 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb73944d6d159bd02adc29f0588b97f0f76da1a1 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/338b9fa5c5216bdaa4f6c66fc36aea7bb19276b7 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da (manual port)","Url":"https://github.com/dotnet/corert/pull/7477","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 11\" (#7477)"},{"Id":"450927985","IsPullRequest":false,"CreatedAt":"2019-05-31T18:31:30","Actor":"VSadov","Number":"7475","RawContent":null,"Title":"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert","State":"open","Body":"\r\nOne result of this is a significant behavior differences between Release and Debug in UWP apps.\r\n\r\nI think coreclr version is more intuitive. We should make corert version to match that.\r\n\r\n=== coreclr:\r\n\r\n```C#\r\nSTDMETHODIMP CLRServicesImpl::GarbageCollect(DWORD dwFlags)\r\n{\r\n    CONTRACTL\r\n    {\r\n        NOTHROW;\r\n        GC_TRIGGERS;\r\n        MODE_PREEMPTIVE;\r\n    }\r\n    CONTRACTL_END;\r\n\r\n    HRESULT hr = S_OK;\r\n    BEGIN_EXTERNAL_ENTRYPOINT(&hr)\r\n    {\r\n        GCX_COOP_THREAD_EXISTS(GET_THREAD());\r\n        if (dwFlags & GC_FOR_APPX_SUSPEND) {\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect(2, true, collection_blocking | collection_optimized);\r\n        }\r\n        else\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect();      unconditional collect\r\n    }\r\n    END_EXTERNAL_ENTRYPOINT;\r\n    return hr;\r\n}\r\n```\r\n\r\n=== corert:\r\n\r\n```C#\r\n        [NativeCallable]\r\n        static int GarbageCollect__STUB(System.IntPtr pComThis, int flags)\r\n        {\r\n            try\r\n            {\r\n                GC.Collect(2, GCCollectionMode.Optimized, /* blocking = */ true);    optimized collect\r\n\r\n                if (InteropEventProvider.IsEnabled())\r\n                    InteropEventProvider.Log.TaskJupiterGarbageCollect();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // If we set IErrorInfo/IRestrictedErrorInfo, Jupiter might leak\r\n                return ex.HResult;\r\n            }\r\n\r\n            return Interop.COM.S_OK;\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7475","RelatedDescription":"Open issue \"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert\" (#7475)"},{"Id":"450547580","IsPullRequest":true,"CreatedAt":"2019-05-31T18:24:33","Actor":"Suchiman","Number":"7473","RawContent":null,"Title":"Port GC changes from coreclr - 10","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7434\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882):**\r\n- https://github.com/dotnet/coreclr/commit/6a1c28f05642ac0420b78f35ad32a00b6aef0488 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73ef3c13c9b710cb04b67a904b098fb196c224c7 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00e7aa00a42debda47a7dbe2b54e924670eaefdd ([already merged](https://github.com/dotnet/corert/pull/4627))\r\n- https://github.com/dotnet/coreclr/commit/5b10f0eb85d8e8ccdcf9b5e38e5dd372e241e24e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7d801aa30e40c6e01536dd0355199842ee5e4c8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/165ffa6a0bb2d8b57e83aa95a395a798ad5f5f4f (manual port)\r\n- https://github.com/dotnet/coreclr/commit/bd3424913138d10f9c4fdb6176fb471e8d1ba1d7 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5b02b0104f3ceba491b7b25fcb4d997e477d2840 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/558f8e99680ab5b6ea9d4796236e12439363657f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0b86feb1d2830cc1de5db16ee86c0998c01ca30a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c (manual port)","Url":"https://github.com/dotnet/corert/pull/7473","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 10\" (#7473)"},{"Id":"450701509","IsPullRequest":true,"CreatedAt":"2019-05-31T13:00:36","Actor":"MichalStrehovsky","Number":"7474","RawContent":null,"Title":"Emit all symbols as global on Windows","State":"closed","Body":"Symbols don't end up in the PDB otherwise and the only things with symbols are methods with debug information and things that have a non-null `_nodeFactory.GetSymbolAlternateName`.\r\n\r\nThis regressed in #7249.","Url":"https://github.com/dotnet/corert/pull/7474","RelatedDescription":"Closed or merged PR \"Emit all symbols as global on Windows\" (#7474)"},{"Id":"450408735","IsPullRequest":true,"CreatedAt":"2019-05-31T04:21:41","Actor":"Dotnet-GitSync-Bot","Number":"7471","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7471","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7471)"},{"Id":"449790158","IsPullRequest":true,"CreatedAt":"2019-05-30T20:47:37","Actor":"trylek","Number":"7465","RawContent":null,"Title":"CPAOT fixes for Linux","State":"closed","Body":"I found out that the R2R I was producing with CPAOT\r\nwas crashing in CoreCLR PAL during memory mapping and\r\nit silently switched over to runtime JIT without any\r\nindications of doing so.\r\n\r\nThe problem is that the relative offset of all section\r\nstart RVA's within a page must match the corresponding\r\nfile offsets. As PEBuilder doesn't support this logic,\r\nI ended up copying a bunch of enumerations from the\r\nrelated CoreFX code and I added logic to patch the\r\nsection headers manually. At some point we might want\r\nto flow some of these changes back to the CoreFX repo.\r\n\r\nI have also moved the machine OS override logic to\r\nR2RPEBuilder for better encapsulation. As a side effect\r\nof the TargetBuilder propagatioin I have fixed code\r\npadding to select the proper instruction on all\r\narchitectures.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7465","RelatedDescription":"Closed or merged PR \"CPAOT fixes for Linux\" (#7465)"},{"Id":"450411333","IsPullRequest":true,"CreatedAt":"2019-05-30T17:09:07","Actor":"MichalStrehovsky","Number":"7472","RawContent":null,"Title":"Selective integration to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7472","RelatedDescription":"Closed or merged PR \"Selective integration to nmirror\" (#7472)"},{"Id":"450353364","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:27","Actor":"MichalStrehovsky","Number":"7469","RawContent":null,"Title":"Enable devirtualization/stackalloc optimization with RyuJIT","State":"closed","Body":"(Implementation for both CPAOT and full AOT, since the non-shared parts are just a couple lines)\r\n\r\nWe've had a TODO for a while that disabled devirtualization on valuetype methods because we didn't have a representation of unboxing thunks in the type system (the result of a devirtualization that lands on a valuetype method is an unboxing thunk).\r\n\r\nWith this, I'm adding an unboxing thunk `MethodDesc` _within the JitInterface only_. Unboxing thunks are weird enough that we don't want them to roam around the whole system, but if they're just something we hand to RyuJIT when needed and convert them back to the real thing when we're done, it's less of a trouble. I'm fully expecting that we're going to see these escaping into the dependency system from time to time, causing bugs. But that's life.\r\n\r\n* Most of the commit is a general purpose `MethodDelegator` class that delegates calls to a different `MethodDesc`.\r\n* We use the `MethodDelegator` within the JitInterface to create a wrapper for non-unboxing methods to represent an unboxing thunk.\r\n* We make it so that the unboxing wrapper is returned from `resolveVirtualMethod` when the result of resolution is a valuetype method.\r\n* We then make it possible for RyuJIT to unwrap it with `getUnboxedEntry`\r\n* We also unwrap it in `getCallInfo` so that it doesn't get into the dependency system.\r\n\r\nFixes #7463.","Url":"https://github.com/dotnet/corert/pull/7469","RelatedDescription":"Closed or merged PR \"Enable devirtualization/stackalloc optimization with RyuJIT\" (#7469)"},{"Id":"449590916","IsPullRequest":false,"CreatedAt":"2019-05-30T16:55:26","Actor":"jkotas","Number":"7463","RawContent":null,"Title":"Missing devirtualization + conversion to stackallocation optimization","State":"closed","Body":"```\r\nusing System;\r\n\r\ninterface IMyInterface\r\n{\r\n    void foo();\r\n}\r\n\r\nstruct MyStruct : IMyInterface\r\n{\r\n    public void foo() { }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Work<T>(T s)\r\n    {\r\n        if (s is IMyInterface) ((IMyInterface)s).foo();\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        for (int i = 0; i < 10000000; i++)\r\n            Work<MyStruct>(default);\r\n        Console.WriteLine(GC.CollectionCount(0));\r\n    }\r\n}\r\n```\r\n\r\n`dotnet publish -c Release -r win-x64`\r\nActual result: 57\r\nExpected result: 0","Url":"https://github.com/dotnet/corert/issues/7463","RelatedDescription":"Closed issue \"Missing devirtualization + conversion to stackallocation optimization\" (#7463)"},{"Id":"450358407","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:17","Actor":"stephentoub","Number":"7470","RawContent":null,"Title":"Expose Environment.TickCount64","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/35499","Url":"https://github.com/dotnet/corert/pull/7470","RelatedDescription":"Closed or merged PR \"Expose Environment.TickCount64\" (#7470)"},{"Id":"449918770","IsPullRequest":true,"CreatedAt":"2019-05-30T12:32:49","Actor":"Dotnet-GitSync-Bot","Number":"7467","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7467","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7467)"},{"Id":"449916034","IsPullRequest":true,"CreatedAt":"2019-05-29T20:01:50","Actor":"MichalStrehovsky","Number":"7466","RawContent":null,"Title":"Delete netci.groovy","State":"closed","Body":"Bye Jenkins.","Url":"https://github.com/dotnet/corert/pull/7466","RelatedDescription":"Closed or merged PR \"Delete netci.groovy\" (#7466)"},{"Id":"449601675","IsPullRequest":true,"CreatedAt":"2019-05-29T11:55:19","Actor":"jkotas","Number":"7464","RawContent":null,"Title":"Print descriptive error for GeneratePackageOnBuild","State":"closed","Body":"Fixes #7460","Url":"https://github.com/dotnet/corert/pull/7464","RelatedDescription":"Closed or merged PR \"Print descriptive error for GeneratePackageOnBuild\" (#7464)"},{"Id":"449495977","IsPullRequest":false,"CreatedAt":"2019-05-29T11:55:19","Actor":"timmydo","Number":"7460","RawContent":null,"Title":"Publish native shared library fails because project.deps.json not found","State":"closed","Body":"csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Library</OutputType>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\nprogram.cs:\r\n```\r\nusing System;\r\n\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    [AttributeUsage(AttributeTargets.Method)]\r\n    public sealed class NativeCallableAttribute : Attribute\r\n    {\r\n        public string EntryPoint;\r\n        public CallingConvention CallingConvention;\r\n        public NativeCallableAttribute() { }\r\n    }\r\n}\r\n\r\nnamespace BlahBlah\r\n{\r\n    using System;\r\n    using System.Runtime.InteropServices;\r\n\r\n    public static class NativeMethods\r\n    {\r\n        [NativeCallable(EntryPoint = \"Blah\", CallingConvention = CallingConvention.StdCall)]\r\n        public static void Blah(IntPtr blah)\r\n        {\r\n        }\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n\r\n```\r\nC:\\Users\\timmydo\\source\\repos\\corert1\\corert1\r\nλ  dotnet publish /p:NativeLib=Shared -r win-x64 -c Debug\r\nMicrosoft (R) Build Engine version 16.2.0-preview-19274-01+7708b265e for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 758.81 ms for C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\corert1.csproj.\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n     Creating library bin\\Debug\\netstandard2.0\\win-x64\\native\\corert1.lib and object bin\\Debug\\netstandard2.0\\win-x64\\native\\corert1.exp\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012078\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(152,5): error MSB3030: Could not copy the file \"C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\bin\\Debug\\netstandard2.0\\win-x64\\corert1.deps.json\" because it was not found. [C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\corert1.csproj]\r\n```\r\n\r\nIt seems the culprit is GeneratePackagesOnBuild. If you remove that, it works.","Url":"https://github.com/dotnet/corert/issues/7460","RelatedDescription":"Closed issue \"Publish native shared library fails because project.deps.json not found\" (#7460)"},{"Id":"449548102","IsPullRequest":true,"CreatedAt":"2019-05-29T04:33:43","Actor":"Dotnet-GitSync-Bot","Number":"7461","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7461","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7461)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"452816272","IsPullRequest":false,"CreatedAt":"2019-06-06T03:38:50","Actor":"kkwpsv","Number":"3307","RawContent":null,"Title":"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype","State":"open","Body":"I have two projects. One is a ConsoleApp, the other is WebApplication. And the WebApplication has a `ProjectReference` to reference the ConsoleApp.\r\n\r\nWhen I publish the WebApplication with `--runtime`, it has an error like below:\r\n\r\n> /home/lsj/test/ConsoleApp2/ConsoleApp2.csproj : error : NETSDK1061: The project was restored using Microsoft.NETCore.App version 2.1.9, but with current settings, version 2.1.0 would be used instead. To resolve this issue, make sure the same settings are used for restore and for subsequent operations such as build or publish. Typically this issue can occur if the RuntimeIdentifier property is set during build or publish but not during restore. For more information, see https://aka.ms/dotnet-runtime-patch-selection.\r\n\r\nBut when I remove the `<OutputType>Exe</OutputType>` line from the csproj of ConsoleApp, it succeeds.\r\n\r\n\r\nI have done many tests:\r\n\r\n- If I only publish the ConsoleApp with `--runtime` and `<OutputType>Exe</OutputType>`, it will success.\r\n\r\n- If I publish the WebApplication with `--runtime` and `<OutputType>Exe</OutputType>`, it will fail, no matter on Linux or Windows, no matter with .net core 2.1 or 2.2. But it will succeed with .net core 3.0. (I think it's because that there's no any .net core 3.0.x)\r\n\r\n- If I publish the WebApplication with `--runtime` and without `<OutputType>Exe</OutputType>`, it will always succeed.\r\n\r\n- If I publish the WebApplication without `--runtime` and with `<OutputType>Exe</OutputType>`, it will always succeed.\r\n","Url":"https://github.com/dotnet/sdk/issues/3307","RelatedDescription":"Open issue \"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype\" (#3307)"},{"Id":"452776840","IsPullRequest":true,"CreatedAt":"2019-06-06T00:32:14","Actor":"cdmihai","Number":"3306","RawContent":null,"Title":"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3306","RelatedDescription":"Open PR \"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject\" (#3306)"},{"Id":"452773212","IsPullRequest":true,"CreatedAt":"2019-06-06T00:16:07","Actor":"elinor-fung","Number":"3305","RawContent":null,"Title":"Add property for building a library as a component","State":"open","Body":"SDK support for the hosting scenario of loading a managed component and calling into it from a native application: https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/native-hosting.md#scenarios\r\n\r\nSetting `IsComponent=true` should result in:\r\n- `.runtimeconfig.json` being generated\r\n- `rollForward` being set to `LatestMinor` by default","Url":"https://github.com/dotnet/sdk/pull/3305","RelatedDescription":"Open PR \"Add property for building a library as a component\" (#3305)"},{"Id":"452682263","IsPullRequest":true,"CreatedAt":"2019-06-06T00:12:31","Actor":"dsplaisted","Number":"3304","RawContent":null,"Title":"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding","State":"closed","Body":"- Update stage 0, and remove code that added information that wasn't yet in bundled versions .props file.\r\n- Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\r\n","Url":"https://github.com/dotnet/sdk/pull/3304","RelatedDescription":"Closed or merged PR \"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\" (#3304)"},{"Id":"452651511","IsPullRequest":true,"CreatedAt":"2019-06-05T23:07:11","Actor":"peterhuene","Number":"3303","RawContent":null,"Title":"Resolve runtime target assets without copying for non-netcoreapp targets.","State":"closed","Body":"A [previous change](https://github.com/peterhuene/sdk/commit/545410772bb7c41d26b22dd9f3ba0cd3e8acd63e) disabled the resolution of runtime target assets when not\r\ntargeting netcoreapp by default. However, some users may want to be able to\r\ninspect the runtime target assets from their package dependencies without\r\nhaving them copied locally by default when not targeting netcoreapp.\r\n\r\nThis commit changes the previous fix by resolving the runtime target assets to\r\npopulate the `RuntimeTargetsCopyLocalItems` group, but sets the `CopyLocal`\r\nmetadata to false which prevents the items from ultimately being included in\r\nthe copy local files.  The property `CopyLocalRuntimeTargetAssets` now controls\r\nthis behavior, which defaults to `true` only when netcoreapp is the target TFM.\r\n\r\nFixes #3261.","Url":"https://github.com/dotnet/sdk/pull/3303","RelatedDescription":"Closed or merged PR \"Resolve runtime target assets without copying for non-netcoreapp targets.\" (#3303)"},{"Id":"452583102","IsPullRequest":false,"CreatedAt":"2019-06-05T15:56:25","Actor":"sbomer","Number":"3302","RawContent":null,"Title":"Mark assets from nuget packages as trimmable","State":"open","Body":"https://github.com/dotnet/sdk/pull/3231 flows `IsTrimmable` metadata from `FrameworkRefrence`s to the resolved assets. We could consider doing the same for `PackageReference`s to enable users to easily opt in to trimming assets that come from packages. Since the metadata was not originally intended as a customer-facing option, we may want to revisit this to see if it's the right way to expose such an option.\r\n\r\nFrom https://github.com/mono/linker/issues/595#issuecomment-498951483:\r\n\r\n> one of the assemblies I really would like to see reduced MahApps.Metro.IconPacks.dll is not. This DLL is 14MB but I probably use around 500KB... any way to see what happened and influence this?\r\n\r\nThis would come with the usual caveats: packages with logic that is activated by reflection, or that themselves use reflection, will likely be incompatible with trimming.","Url":"https://github.com/dotnet/sdk/issues/3302","RelatedDescription":"Open issue \"Mark assets from nuget packages as trimmable\" (#3302)"},{"Id":"451422781","IsPullRequest":true,"CreatedAt":"2019-06-05T08:52:38","Actor":"vitek-karas","Number":"3296","RawContent":null,"Title":"Add support for RollForward property","State":"closed","Body":"The `GenerateRuntimeConfigurationFiles` task now recognizes `RollForward` parameter (and it's passed from the `RollForward` property). It writes its value into the .runtimeconfig.json as the `rollForward` setting.\r\n\r\nThis implements the SDK side of the roll forward feature as described in the [runtime binding](https://github.com/dotnet/designs/blob/master/accepted/runtime-binding.md#rollforward).","Url":"https://github.com/dotnet/sdk/pull/3296","RelatedDescription":"Closed or merged PR \"Add support for RollForward property\" (#3296)"},{"Id":"451028964","IsPullRequest":true,"CreatedAt":"2019-06-04T21:18:26","Actor":"MSLukeWest","Number":"3289","RawContent":null,"Title":"Adding ResolveReferences target to PublishItemsOutputGroup dependencies","State":"closed","Body":"This is needed in order for this output group to contain output from referenced projects.","Url":"https://github.com/dotnet/sdk/pull/3289","RelatedDescription":"Closed or merged PR \"Adding ResolveReferences target to PublishItemsOutputGroup dependencies\" (#3289)"},{"Id":"451739279","IsPullRequest":true,"CreatedAt":"2019-06-04T02:30:22","Actor":"dotnet-bot","Number":"3298","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3298","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3298)"},{"Id":"451268345","IsPullRequest":true,"CreatedAt":"2019-06-03T18:15:49","Actor":"wli3","Number":"3294","RawContent":null,"Title":"Update branding to preview 7","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3294","RelatedDescription":"Closed or merged PR \"Update branding to preview 7\" (#3294)"},{"Id":"451262824","IsPullRequest":true,"CreatedAt":"2019-06-03T18:14:34","Actor":"wli3","Number":"3293","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview6","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3293","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview6\" (#3293)"},{"Id":"451585629","IsPullRequest":true,"CreatedAt":"2019-06-03T16:49:19","Actor":"sbomer","Number":"3297","RawContent":null,"Title":"Update link (aka.ms/illink -> aka.ms/dotnet-illink)","State":"open","Body":"Received feedback from @richlander that we usually use links of the form dotnet-*.\r\n\r\n@nguerrera PTAL","Url":"https://github.com/dotnet/sdk/pull/3297","RelatedDescription":"Open PR \"Update link (aka.ms/illink -> aka.ms/dotnet-illink)\" (#3297)"},{"Id":"451127590","IsPullRequest":false,"CreatedAt":"2019-06-03T15:30:58","Actor":"AntonPlotnikov","Number":"3291","RawContent":null,"Title":"DotNetAppHost's version info and icon","State":"closed","Body":"Hello. I need to add a version info and custom icon for DotNetAppHost? We use potable mode (Framework-dependent deployment), and there are some branding and security requirements. Unfortunately, I can add version info only to application's main assembly file (dll), not to exe file (we use RID win7-x64) during building in Visual Studio 2019. Is it any way to do this during MSBuild process?\r\n![2019-06-01_23-57-09](https://user-images.githubusercontent.com/18666703/58753548-558b5b80-84c9-11e9-9deb-c51f6890484b.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3291","RelatedDescription":"Closed issue \"DotNetAppHost's version info and icon\" (#3291)"},{"Id":"451374216","IsPullRequest":false,"CreatedAt":"2019-06-03T09:14:09","Actor":"ViktorHofer","Number":"3295","RawContent":null,"Title":"TargetExt conflicts with UseAppHost","State":"open","Body":"`TargetExt` defaults to \".dll\" on .NETCore and .NETStandard even if the `OutputType` is \".exe\": https://github.com/dotnet/sdk/blob/90e8a529be026d06fc8965d460927193aca5b005/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.BeforeCommon.targets#L74-L75\r\n\r\nStarting with \".NETCoreApp, Version=3.0\", `UseAppHost` defaults to true: https://github.com/dotnet/sdk/blob/372e67d51167792db2fdaeebf48b6d8fb962e713/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L110\r\n\r\nThe `_NativeExecutableExtension` defaults to true as the `DefaultAppHostRuntimeIdentifier` on Windows is \"win-x64\":\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L67\r\n\r\nThe `_GetAppHostPaths` target sets the `AppHostIntermediatePath` property (based on `_NativeExecutableExtension` which defaults to \".exe\" because auf `UseAppHost` is true) which then is added to the `None` ItemGroup determined to be copied to the output directory:\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L491-L497\r\n\r\n![image](https://user-images.githubusercontent.com/7412651/58790220-35a28780-85f0-11e9-9e2c-7e55d80d66e6.png)\r\n\r\nThe issue is that such a file is never produced as the TargetExt defaults to \".dll\". If I got this right this means that every app \".NETCoreApp, Version=3.0\" with `OutputType` \"Exe\" fails to copy its content to the output directory. This would be big break and I'm sure this would have already been caught. I assume I'm missing something here. \r\n\r\ncc @nguerrera @dsplaisted @ericstj ","Url":"https://github.com/dotnet/sdk/issues/3295","RelatedDescription":"Open issue \"TargetExt conflicts with UseAppHost\" (#3295)"},{"Id":"451078446","IsPullRequest":true,"CreatedAt":"2019-06-01T12:04:11","Actor":"dotnet-maestro[bot]","Number":"3290","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19304.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3290","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3290)"},{"Id":"450415518","IsPullRequest":true,"CreatedAt":"2019-05-31T23:21:24","Actor":"sbomer","Number":"3279","RawContent":null,"Title":"Set ILLink defaults","State":"closed","Body":"These defaults root the non-framework assemblies.\r\n@nguerrera @fadimounir @swaroop-sridhar PTAL","Url":"https://github.com/dotnet/sdk/pull/3279","RelatedDescription":"Closed or merged PR \"Set ILLink defaults\" (#3279)"},{"Id":"450799201","IsPullRequest":false,"CreatedAt":"2019-05-31T18:06:56","Actor":"DustinCampbell","Number":"3287","RawContent":null,"Title":"Getting package assets cache messages on build with the latest master bits","State":"closed","Body":"@nguerrera, @dsplaisted: I started getting loads of messages during build in the winforms-designer repo after updating to the most recent SDK:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012135\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5):\r\nmessage NETSDK1062: Unable to use package assets cache due to I/O error . This can occur when the\r\nsame project is built more than once in parallel. Performance may be degraded,  but the build result will \r\nnot be impacted. [D:\\Projects\\winforms-designer\\src\\WinFormsSurface\\WinFormsS urface.csproj]\r\n```\r\n\r\nAre these messages possibly related to https://github.com/dotnet/sdk/pull/3268? It looks like this error comes from ResolvePackageAssets.cs and those are the most recent changes around the code that triggers this message. Setting `<DisablePackageAssetsCache>true</DisablePackageAssetsCache>` makes the messages go away, but it doesn't seem like the right fix.","Url":"https://github.com/dotnet/sdk/issues/3287","RelatedDescription":"Closed issue \"Getting package assets cache messages on build with the latest master bits\" (#3287)"},{"Id":"450641573","IsPullRequest":true,"CreatedAt":"2019-05-31T18:06:56","Actor":"dsplaisted","Number":"3284","RawContent":null,"Title":"Fix failure to read assets cache file the first time it's written","State":"closed","Body":"Fixes issue reported by @nguerrera, introduced in #3268:\r\n\r\n> Seeing message NETSDK1062: Unable to use package assets cache due to I/O error. This can occur when the same project is built more than once in parallel. Performance may be degraded, but the build result will not be impacted. [D:\\Temp\\demo\\demo.csproj]\r\n>\r\n> Looks like the change you made has the file still open for write when we try to read it back on first build.\r\n>\r\n> Can you take a look, this will be a significant perf regression in preview 6\r\n\r\nFix #3287","Url":"https://github.com/dotnet/sdk/pull/3284","RelatedDescription":"Closed or merged PR \"Fix failure to read assets cache file the first time it's written\" (#3284)"},{"Id":"450472482","IsPullRequest":true,"CreatedAt":"2019-05-31T17:54:26","Actor":"fadimounir","Number":"3281","RawContent":null,"Title":"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects","State":"closed","Body":"Packaging projects depend on ComputeFilesToPublish only instead of ComputeAndCopyFilesToPublishDirectory, so this refactoring will enable R2R and ILLinker to execute.","Url":"https://github.com/dotnet/sdk/pull/3281","RelatedDescription":"Closed or merged PR \"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects\" (#3281)"},{"Id":"450829429","IsPullRequest":false,"CreatedAt":"2019-05-31T14:33:34","Actor":"atanasa","Number":"3288","RawContent":null,"Title":"dotnet publish does not warn on version conflicts with packages in the store manifest","State":"open","Body":"I have a project that depends on the `Newtonsoft.Json` package version **10.0.1**.\r\nI have a store manifest file that includes `Newtonsoft.Json` package version **10.0.3**.\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n### Steps to reproduce:\r\n1. Create a store manifest file:\r\n```xml\r\n<StoreArtifacts>\r\n   <Package Id=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n</StoreArtifacts>\r\n```\r\n1. Create an executable project that specifies that manifest:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.1\" />\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <TargetManifestFiles>manifest.xml</TargetManifestFiles>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n1. Run `dotnet publish` and observe the output of the publish\r\n\r\n### Expected:\r\nWhen I run `dotnet publish` the output should not contain Newtonsoft.Json.dll (as the version in the \"store\" is higher).\r\n\r\n**Edit by nguerrera** Above is by design as there is no unification to higher version when a package is resolved from the store at runtime. But we should have a warning when this case is triggered since it can be surprising. Changed title of bug appropriate.\r\n\r\n### Actual:\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n**Edit by nguerrera** And there is no diagnostic that a different version is in the manifest.\r\n\r\nI've created a simple repro solution:\r\n[ReproResolvePublishedAssemblies.zip](https://github.com/dotnet/sdk/files/3241624/ReproResolvePublishedAssemblies.zip)\r\n\r\n`dotnet --info`:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3288","RelatedDescription":"Open issue \"dotnet publish does not warn on version conflicts with packages in the store manifest\" (#3288)"},{"Id":"450787725","IsPullRequest":false,"CreatedAt":"2019-05-31T13:00:19","Actor":"davkean","Number":"3286","RawContent":null,"Title":"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds","State":"open","Body":"Create a project with the following:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>foobar</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nExpected: Friendly error similar to command-line:\r\n\r\n```\r\n  C:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(96,\r\n5): error NETSDK1013: The TargetFramework value 'foobar' was not recognized. It may be misspelled. If not, then the Tar\r\ngetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly. [C:\\Users\\davkean\\Source\\\r\nRepos\\ConsoleApp424\\ConsoleApp424\\ConsoleApp424.csproj]\r\n```\r\n\r\nActual:\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4018\tThe \"ResolvePackageAssets\" task failed unexpectedly.\r\nNuGet.Frameworks.FrameworkException: Invalid framework identifier ''.\r\n   at NuGet.Frameworks.NuGetFramework.GetShortFolderName(IFrameworkNameProvider mappings)\r\n   at Microsoft.NET.Build.Tasks.LockFileExtensions.GetTargetAndThrowIfNotFound(LockFile lockFile, NuGetFramework framework, String runtime)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task, Stream stream)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tConsoleApp424\tC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t208\t\r\n```\r\n\r\nWhat's worse is that you have lots of TFMs you have no idea which is the broken one as the error doesn't include it.","Url":"https://github.com/dotnet/sdk/issues/3286","RelatedDescription":"Open issue \"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds\" (#3286)"},{"Id":"450765833","IsPullRequest":true,"CreatedAt":"2019-05-31T12:04:31","Actor":"dotnet-maestro[bot]","Number":"3285","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3285","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3285)"},{"Id":"450273987","IsPullRequest":true,"CreatedAt":"2019-05-31T12:04:04","Actor":"dotnet-maestro[bot]","Number":"3278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3278)"},{"Id":"450571724","IsPullRequest":true,"CreatedAt":"2019-05-31T06:07:03","Actor":"peterhuene","Number":"3283","RawContent":null,"Title":"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.","State":"closed","Body":"This PR fixes filtering of satellite assemblies when publishing an\r\napplication targeting netcoreapp3.0.\r\n\r\nAn incorrect property name in the `_FilterSatelliteResourcesForPublish` target\r\nwas causing the satellite filtering done for publish to have no effect.\r\n\r\nThis was only a problem when not reusing the build output for publish;\r\nunfortunately this is currently the case for netcoreapp3.0 targeted\r\napplications due to references that are marked as `PrivateAssets=\"all\"`.\r\n\r\nThis PR fixes the property name and adds test coverage for publishing\r\nwhen targeting netcoreapp3.0 with filtered satellite assemblies.\r\n\r\nFixes #3277.","Url":"https://github.com/dotnet/sdk/pull/3283","RelatedDescription":"Closed or merged PR \"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.\" (#3283)"},{"Id":"450115097","IsPullRequest":false,"CreatedAt":"2019-05-31T06:07:03","Actor":"dsplaisted","Number":"3277","RawContent":null,"Title":"SatelliteResourceLanguages doesn't filter resources from Publish output when targeting .NET Core 3.0","State":"closed","Body":"Publish the following project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <SatelliteResourceLanguages>en;de;pt</SatelliteResourceLanguages>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Humanizer\" Version=\"2.6.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n## Expected\r\n\r\nPublish folder should only have resource subfolders for `de` and `pt`.\r\n\r\n## Actual\r\n\r\nThe publish folder will include the Humanizer resources for all languages the package supports:\r\n\r\n![image](https://user-images.githubusercontent.com/145043/58606671-4f8b4580-8251-11e9-9e22-593e29ceab4d.png)\r\n\r\n## Notes\r\n\r\nWhen targeting .NET Core 2.2, the publish output is correctly filtered.  Also, when targeting .NET Core 3.0, the build output is correctly filtered, but the publish output is not.\r\n\r\nFYI @peterhuene @livarcocc, we should fix this for 3.0","Url":"https://github.com/dotnet/sdk/issues/3277","RelatedDescription":"Closed issue \"SatelliteResourceLanguages doesn't filter resources from Publish output when targeting .NET Core 3.0\" (#3277)"},{"Id":"450525123","IsPullRequest":true,"CreatedAt":"2019-05-31T04:37:01","Actor":"dsplaisted","Number":"3282","RawContent":null,"Title":"Better test logging","State":"closed","Body":"This PR removes all direct uses of the CLI Utils `Command` class, and instead routes them through the SDK's `TestCommand`.  This will log the start info, STDOUT, and STDERR.\r\n\r\nThis will, for example, make it a lot easier to see what the problem is from the test logs when a test fails because the right shared framework isn't installed.  The error information in that case goes to STDERR, which a lot of the tests which used `Command.Create` weren't capturing.\r\n\r\nFYI @dotnet/dotnet-cli, we should continue to follow the new pattern of using `DotnetCommand` and `RunExeCommand` instead of `Command.Create` in future tests.","Url":"https://github.com/dotnet/sdk/pull/3282","RelatedDescription":"Closed or merged PR \"Better test logging\" (#3282)"},{"Id":"450457056","IsPullRequest":true,"CreatedAt":"2019-05-30T21:22:34","Actor":"fadimounir","Number":"3280","RawContent":null,"Title":"Fix property name in error messages","State":"closed","Body":"Change `ReadyToRun` to `PublishReadyToRun` in error messages","Url":"https://github.com/dotnet/sdk/pull/3280","RelatedDescription":"Closed or merged PR \"Fix property name in error messages\" (#3280)"},{"Id":"452362994","IsPullRequest":false,"CreatedAt":"2019-03-22T10:08:51","Actor":"tommy86r","Number":"3300","RawContent":null,"Title":"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”","State":"open","Body":"# Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\r\n\r\nWhen I publish my asp.net core application as self-contained I succesfully get the myproject.exe. This exe file doesn't work if I double click on it and doesn't work if I try to run it from the cmd console. The project has been update from .net core 2.0 to 2.2\r\nThe exception is:\r\n\r\n> This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\n> A fatal error was encountered. This executable was not bound to load a managed DLL.\r\n\r\nI tried to publish throught Visual Studio (using Method: File System - Target Framework: netcoreapp2.2 - Deployment Mode: self-contained - Target Runtime: win-x64) and also throught cmd console \"dotnet publish -r win-x64\". But I get the same error.\r\n\r\nI added a repo to replicate the issue (I removed almost everythings from the project, it contains only the skeleton, but it seems sufficient to replicate the issue) https://github.com/tommy86r/TempProject\r\n\r\nAl last, this is my .net core configuration:\r\n![dot-net-info](https://user-images.githubusercontent.com/12224568/54815641-c1b03e80-4c92-11e9-805d-639ce9162e64.PNG)\r\n","Url":"https://github.com/dotnet/sdk/issues/3300","RelatedDescription":"Open issue \"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\" (#3300)"},{"Id":"452364411","IsPullRequest":false,"CreatedAt":"2019-03-13T07:55:02","Actor":"pavlexander","Number":"3301","RawContent":null,"Title":"Wrong assembly is being referenced in solution","State":"open","Body":"# Wrong assembly is being referenced in solution\r\n\r\nWhen trying to reference 1.0.4. version of an assembly - 1.0.1 version of file is being used.. Despite the fact, that project settings are pointing to the correct DLL. As the result - the solution is still compiled with 1.0.1 version.\r\n\r\n# General\r\n## Specs\r\n\r\nOS:\r\n\r\n* OS Name\tMicrosoft Windows 10 Enterprise\r\n* Version 10.0.16299 Build 16299\r\n\r\nVS:\r\n\r\n* Microsoft Visual Studio Professional 2017 \r\n* Version 15.9.7\r\n* VisualStudio.15.Release/15.9.7+28307.423\r\n* Microsoft .NET Framework\r\n* Version 4.7.02556\r\n\r\ndotnet --version\r\n\r\n* 2.2.104\r\n\r\n## Prerequisites\r\n\r\nCheckout the solution from my repo: \r\n\r\nhttps://github.com/pavlexander/dotnetbugs/tree/master/Bugs/12032019_WrongAssemblyLoaded\r\n\r\n## Steps to reproduce\r\n\r\n1. Open the solution in VisualStudio\r\n2. Right click on project, \"Add -> Reference\".\r\n3. Browse for file in directory: \"..12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll\"\r\nProceed with adding of a reference.\r\n**Note that file from 1.0.4 is selected.** \r\n4. Right click on project, click \"Edit WrongAssemblyLoaded.csproj\"\r\n5. Verify that correct assembly is specified:\r\n\r\n```\r\n  <ItemGroup>\r\n    <Reference Include=\"DebugTests.Common.NugetWithPdb\">\r\n      <HintPath>DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n```\r\n\r\n6. Now, in VisualStudio, expand the tree of the project -> Dependencies -> Assemblies, find the assembly that you referenced and check the path.\r\n\r\n**Expected result:**\r\n\r\nAssembly from 1.0.4 folder is used\r\n\r\n**Actual result:**\r\n\r\n..\\dotnetbugs\\Bugs\\12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.1\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb.dll\r\n\r\nAnd this is the issue. Assembly of version \"1.0.1\" is used in project, despite even the fact that in project settings \"1.0.4\" version is specified. If you try and build the solution now, in the output folder you will also see the \"1.0.1\" version. I don't think this is related to Visual Studio in any way. Because, even if you try to use the `dotnet build` command directly - it will also put the same wrong dll into an output directory. \r\n","Url":"https://github.com/dotnet/sdk/issues/3301","RelatedDescription":"Open issue \"Wrong assembly is being referenced in solution\" (#3301)"},{"Id":"451752075","IsPullRequest":false,"CreatedAt":"2018-06-29T10:44:56","Actor":"petroemil","Number":"3299","RawContent":null,"Title":"Define InternalsVisibleTo \"attributes\" in the csproj file","State":"open","Body":"Many of the AssemblyInfo.cs file's content are already generated from the project file, meaning in many (or more like most) cases we don't need to have an AssemblyInfo.cs file in our projects. \r\n\r\nThere is one quite frequently used assembly level attribute though that still has to be defined as a traditional attribute - the `InternalsVisibleToAttribute`.\r\n\r\nIt would be nice if this could also be defined from the project file, which would also mean we could easily define it in a solution level props file, enabling all projects implicitly to see their `internal`s from the test project(s).","Url":"https://github.com/dotnet/sdk/issues/3299","RelatedDescription":"Open issue \"Define InternalsVisibleTo \"attributes\" in the csproj file\" (#3299)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1136485660875878400","CreatedAt":"2019-06-06T04:11:11+00:00","UserScreenname":"dotnet","Text":"Are you a Visual Basic developer? Are you interested in compilers? Make sure to watch @DualBrain's live stream wher… https://t.co/kcXhvWp7yZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1136040221730934785","CreatedAt":"2019-06-04T22:41:10+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1135955901439971328","CreatedAt":"2019-06-04T17:06:06+00:00","UserScreenname":"dotnet","Text":"A Microsoft Build 2019, @LadyNaggaga showed us a new way to learn .NET using Try .NET\n\nhttps://t.co/KnbAuDyRzr #dotnet #dotnetcore","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":8,"RawContent":null},{"Id":"1134142130094346245","CreatedAt":"2019-05-30T16:58:49+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":5,"FavoriteCount":1,"RawContent":null},{"Id":"1133749843564740608","CreatedAt":"2019-05-29T15:00:01+00:00","UserScreenname":"dotnet","Text":"ML .NET Model Lifecycle with Azure DevOps CI/CD pipelines\nhttps://t.co/zlCqa4I8vn https://t.co/K17nKopaZn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":37,"FavoriteCount":25,"RawContent":null},{"Id":"1133746063792205826","CreatedAt":"2019-05-29T14:45:00+00:00","UserScreenname":"dotnet","Text":"In 15 minutes, watch @terrajobst adding return statements and control flow analysis to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1133416391522918401","CreatedAt":"2019-05-28T16:55:00+00:00","UserScreenname":"dotnet","Text":"Porting desktop apps to .NET Core by @oliagavrysh. https://t.co/XV5Ed3Nku8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":44,"RawContent":null},{"Id":"1131606214717116418","CreatedAt":"2019-05-23T17:02:00+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/mHsIdILy7f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1131209353829052418","CreatedAt":"2019-05-22T14:45:01+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he'll be adding break and continue statements to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2019-06-06T05:30:38.0338468Z","RunDurationInMilliseconds":14831}