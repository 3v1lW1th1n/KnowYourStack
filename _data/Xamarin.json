{"Data":{"Blog":{"FeedItems":[{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8085748049","Type":"IssuesEvent","CreatedAt":"2018-08-08T18:33:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1845","RelatedDescription":"Closed issue \"Cannot build projects with latest mono 2018-04\" (#1845) at xamarin/xamarin-android","RelatedBody":"Either a normal build or invoking `msbuild /restore` will error-out with the following:\r\n\r\n> /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(654,2): error MSB3644: The reference assemblies for framework \"MonoAndroid,Version=v1.0\" were not found. To resolve this, install the SDK or Targeting Pack for this framework version or retarget your application to a version of the framework for which you have the SDK or Targeting Pack installed. Note that assemblies will be resolved from the Global Assembly Cache (GAC) and will be used in place of reference assemblies. Therefore your assembly may not be correctly targeted for the framework you intend.\r\n\r\nThis issue is reproducible with build from https://github.com/mono/mono/commit/07c8f25fe536dbb7e244f965aa3f9a871f41e953  but not with earlier build https://github.com/mono/mono/commit/33a9dca4932ab793ff4a3c644e3a332f0e04af14 which could suggest https://github.com/mono/mono/commit/543b6872febade4b06429269eb40eeba0ad16a5a is the culprit"},{"Id":"8085746851","Type":"PullRequestEvent","CreatedAt":"2018-08-08T18:33:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1503","RelatedDescription":"Merged pull request \"Bump to mono/2018-04\" (#1503) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8085674023","Type":"IssuesEvent","CreatedAt":"2018-08-08T18:19:35","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2049","RelatedDescription":"Opened issue \"ObjectDisposedException caused by GC\" (#2049) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone Xamarin.Forms: https://github.com/xamarin/Xamarin.Forms.git\r\n1. Switch to the `handle-testing` branch: https://github.com/xamarin/Xamarin.Forms/compare/handle-testing\r\n1. Build `Xamarin.Forms.sln`, you can open in the IDE and build or `nuget restore Xamarin.Forms.sln` + `msbuild Xamarin.Forms.sln` _should_ work\r\n1. Open `.Xamarin.Forms.Android.sln` in an IDE and set `Xamarin.Forms.ControlGallery.Android` as the startup project\r\n1. Debug the app\r\n\r\nAfter a few screens fly by on the device, you will get a crash on this line: https://github.com/xamarin/Xamarin.Forms/compare/handle-testing#diff-cfe75ccaa32b145fd9a96b49cb931d1dR72\r\n\r\n```\r\nandroid.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Android.Graphics.Bitmap'.\r\n  at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <e8c0e16a54534fa885244f0ad837c79e>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualInt32Method (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <e8c0e16a54534fa885244f0ad837c79e>:0 \r\n  at Android.Graphics.Bitmap.get_Height () [0x0000a] in <848bbd7c681a4975918c72f17d2f5144>:0 \r\n  at Xamarin.Forms.Platform.Android.ButtonDrawable.Draw (Android.Graphics.Canvas canvas) [0x00021] in D:\\agent_work\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ButtonDrawable.cs:55 \r\n  at Android.Graphics.Drawables.Drawable.n_Draw_Landroid_graphics_Canvas_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_canvas) [0x0000f] in <848bbd7c681a4975918c72f17d2f5144>:0 \r\n```\r\n\r\nWhile the debugger has paused, `this.Handle` has recently changed, and `_normalBitmap.Handle` is inexplicably `IntPtr.Zero`!\r\n\r\nTo solve the problem, add an `environment.txt` to the project with a build action of `AndroidEnvironment`:\r\n```\r\nMONO_GC_PARAMS=bridge-implementation=old\r\n```\r\n\r\nUsing the old GC implementation, the crash doesn't occur!\r\n\r\n### Expected Behavior\r\n\r\nAlthough a lot of objects and memory are in use, a crash should not occur here.\r\n\r\n### Actual Behavior\r\n\r\nThe app crashes with `ObjectDisposedException`. I think this issue has plagued various Xamarin.Forms apps (maybe others).\r\n\r\n### Version Information\r\n\r\nI used VS Windows 15.7.6, but this likely will occur with any recent version of Xamarin.Android.\r\n\r\n### Log File\r\n\r\nTODO (coming soon)"},{"Id":"8085161239","Type":"PullRequestEvent","CreatedAt":"2018-08-08T16:40:48","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2048","RelatedDescription":"Opened pull request \"Bump to mono:2018-08\" (#2048) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8084958245","Type":"IssuesEvent","CreatedAt":"2018-08-08T16:04:04","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2047","RelatedDescription":"Opened issue \"[AAPT2] Encountering build errors due to missing Resource.* fields which aren't actually missing when aapt2 is enabled\" (#2047) at xamarin/xamarin-android","RelatedBody":"I've got a handful of projects which are failing during CoreCompile due to Resource related errors when enabling aapt2. These errors appear to be falsely reported however, and don't occur when using aapt. There is also perhaps some relation with the issue described in #1983.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build [ApiDemo](https://github.com/xamarin/monodroid-samples/tree/master/ApiDemo) and/or any of the other 4 projects shown in the \"Actual Behavior\" section with aapt2 enabled.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThese projects should build successfully with aapt2 enabled.\r\n\r\n### Actual Behavior\r\nhttp://xqa.blob.core.windows.net/gist/report-3c94cd9125164b8c89c5b1dafc5fab60.txt\r\n\r\n```\r\n  Activities/LoggingActivity.cs(122,46): error CS0117: 'Resource.Id' does not contain a definition for 'scrollview' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/android-n/MultiWindowPlayground/MultiWindowPlayground/MultiWindowPlayground.csproj]\r\n```\r\n\r\nhttp://xqa.blob.core.windows.net/gist/report-1e247c7717ac496891b088764c29eddc.txt\r\n```\r\n  View/ContentBrowserActivity.cs(155,41): error CS0117: 'Resource.Id' does not contain a definition for 'seekbar' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/ApiDemo/ApiDemo.csproj]\r\n  View/ContentBrowserNavActivity.cs(158,41): error CS0117: 'Resource.Id' does not contain a definition for 'seekbar' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/ApiDemo/ApiDemo.csproj]\r\n```\r\nhttp://xqa.blob.core.windows.net/gist/report-85670af60ea046d48d66409f4442f0ee.txt\r\n\r\n```\r\n  MainActivity.cs(24,44): error CS0117: 'Resource.Layout' does not contain a definition for 'Main' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MainActivity.cs(25,58): error CS0117: 'Resource.Id' does not contain a definition for 'msgText' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MainActivity.cs(42,67): error CS0117: 'Resource.Id' does not contain a definition for 'logTokenButton' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MainActivity.cs(44,68): error CS0117: 'Resource.Id' does not contain a definition for 'subscribeButton' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MyFirebaseMessagingService.cs(41,71): error CS0117: 'Resource.Drawable' does not contain a definition for 'ic_stat_ic_notification' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n```\r\n\r\nhttp://xqa.blob.core.windows.net/gist/report-827877f595704e708224b2a8802d0c53.txt\r\n\r\n```\r\n  MainActivity.cs(60,58): error CS0117: 'Resource.Id' does not contain a definition for 'alt' [/Users/xamarinqa/myagent/_work/r5/a/mobile-samples/BackgroundLocationDemo/location.Android/Location.Droid.csproj]\r\n```\r\n\r\nhttp://xqa.blob.core.windows.net/gist/report-aee90b21f9e440108a605cd8dac73567.txt\r\n```\r\n  MainActivity.cs(15,49): error CS0117: 'Resource.Layout' does not contain a definition for 'Tabbar' [/Users/xamarinqa/myagent/_work/r5/a/xamarin-forms-samples/WebServices/TodoAzurePush/Droid/TodoAzure.Droid.csproj]\r\n  MainActivity.cs(16,47): error CS0117: 'Resource.Layout' does not contain a definition for 'Toolbar' [/Users/xamarinqa/myagent/_work/r5/a/xamarin-forms-samples/WebServices/TodoAzurePush/Droid/TodoAzure.Droid.csproj]\r\n  Services/FirebaseNotificationService.cs(36,49): error CS0117: 'Resource.Drawable' does not contain a definition for 'ic_stat_ic_notification' [/Users/xamarinqa/myagent/_work/r5/a/xamarin-forms-samples/WebServices/TodoAzurePush/Droid/TodoAzure.Droid.csproj]\r\n```\r\n\r\n### Version Information\r\nxamarin-android/d15-9\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8084942287","Type":"IssuesEvent","CreatedAt":"2018-08-08T16:01:22","Actor":"gm666q","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2046","RelatedDescription":"Opened issue \"Shouldn't Resource.designer.cs be Resource.Designer.cs?\" (#2046) at xamarin/xamarin-android","RelatedBody":"Visual Studio generates those files as \"Resource.Designer.cs\" but build target generates \"Resource.designer.cs\". This becomes an issue on systems that are case sensitive and besides isn't that incompliant with C#'s naming convention."},{"Id":"8084632820","Type":"PullRequestEvent","CreatedAt":"2018-08-08T15:12:29","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2045","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Process 'raw' items from R.txt\" (#2045) at xamarin/xamarin-android","RelatedBody":"Our `ManagedResourceParser` was not processing `raw` items\r\nwhen processing an `R.txt` file. As a result you get the\r\nfollowing error\r\n\r\n\tResource' does not contain a definition for 'Raw'\r\n\r\nThis commit adds code to ensure we process the items."},{"Id":"8079802709","Type":"IssuesEvent","CreatedAt":"2018-08-07T19:41:01","Actor":"Petiephant","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2044","RelatedDescription":"Opened issue \"RecyclerView SpanSizeLookup performance issues with a large data set\" (#2044) at xamarin/xamarin-android","RelatedBody":"### Background\r\n\r\n[Xamarin Forum Thread](https://forums.xamarin.com/discussion/129533/recyclerview-spansizelookup-horrible-performance-with-a-large-data-set)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build and Run - [XamarinCode.zip](https://github.com/xamarin/xamarin-android/files/2267711/XamarinCode.zip) (basic example, please read the comments in the code)\r\n2. Start scrolling through the list\r\n3. Notice the slowness/stuttering/jank\r\n\r\n### Expected Behavior\r\n\r\nYou are able to comfortably scroll smoothly up and down the whole list.\r\n\r\nThe native java version seems to run fine on my device (Nexus 5, v6.0.1) - [JavaCode.zip](https://github.com/xamarin/xamarin-android/files/2267712/JavaCode.zip)\r\nSee here - [JavaScreenRecord.mp4](https://drive.google.com/file/d/1snrFNOSs5qavor-jz4SewKki1wrxvj2D/view?usp=sharing)\r\n\r\n### Actual Behavior\r\n\r\nSlowness/stuttering/jank when scrolling through the list. This is with a basic SpanSizeLookup that returns 1 (my custom implementation is obviously different). However, even using the default GridLayoutManager.DefaultSpanSizeLookup, things run nice and fast/smooth, but with a basic custom version, things are super slow.\r\n\r\nSee here - [XamarinScreenRecord.mp4](https://drive.google.com/file/d/1FvWZIOdrUu_TZM07dEhLudBjCfe2xFzD/view?usp=sharing)\r\n\r\nProfiling this shows it's because of getSpanSize. It's seem to be called (unnecessarily?) thousands upon thousands of times whenever you scroll the list.\r\n\r\n![xamarinprofiler](https://user-images.githubusercontent.com/42078613/43796674-d3a41076-9a7c-11e8-9983-ebb7fdaee220.png)\r\n\r\n### Version Information\r\n\r\n[VisualStudio.txt](https://github.com/xamarin/xamarin-android/files/2267770/VisualStudio.txt)"},{"Id":"8079713951","Type":"IssuesEvent","CreatedAt":"2018-08-07T19:23:04","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2043","RelatedDescription":"Opened issue \"Occasionally encountering strange race condition or timing issue in `ConvertResourcesCases`\" (#2043) at xamarin/xamarin-android","RelatedBody":"We're running in to a seemingly rare bug on one particular environment where the `ConvertResourcesCases` task will fail during various file operations. These appear to have some sort of threading, race, or timing aspect, as the exact error or reproduction is not consistent.\r\n\r\nI've managed to narrow things down _slightly_ on a single test machine where this seems to be happening more frequently. Using the steps below, I can somewhat consistently cause this task to fail when attempting to process items from `lp/*/jl`, all of which correspond to various `Xamarin.Android.Support.*` NuGet references in these templates.\r\n\r\nGiven the results we have seen so far, this appears to be a regression introduced somewhere in xamarin-android/d15-9 + mono/2018-06 + monodevelop/release-7.7\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Android App -> Max Compatibility project in VS Mac. This should include version 27.0.2 of `Xamarin.Android.Support.Compat`.\r\n2. Click on Build -> Build All. The initial build should succeed).\r\n3. Right click on Packages -> Update. A minor version bump for these packages should be available (e.g. 27.0.2 -> 27.0.2.1).\r\n4. Click on Build -> Build All. This build attempt is failing for me during `ConvertResourcesCases` pretty consistently on a mac mini running Sierra.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n`ConvertResourcesCases` successfully completes on build and subsequent build attempts after changing various references or project options.\r\n\r\n### Actual Behavior\r\n`ConvertResourcesCases` fails intermittently when attempting certain file operations. The \"culprit\" file in question varies from repro to repro, and the exception does not always reflect the state of my intermediate output directory (e.g. FileNotFoundException thrown when the file _does_ exist).\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: The \"ConvertResourcesCases\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: System.IO.FileNotFoundException: Could not find file \"/Users/xamarinqa/agent/_work/r15/a/XQA.VSMac/XQA.VisualStudioMac/TestResults/f6a9104b/TestAndroidEnableAOTEnterprise/Temp/DroidApp/DroidApp/obj/Release/lp/6/jl/res/layout/notification_template_custom_big.xml\"\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: File name: '/Users/xamarinqa/agent/_work/r15/a/XQA.VSMac/XQA.VisualStudioMac/TestResults/f6a9104b/TestAndroidEnableAOTEnterprise/Temp/DroidApp/DroidApp/obj/Release/lp/6/jl/res/layout/notification_template_custom_big.xml'\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean anonymous, System.IO.FileOptions options) [0x00259] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:274 \r\n```\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: The \"ConvertResourcesCases\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: System.IO.IOException: Could not create file \"/var/folders/44/n482q3wx171dnj8b6165rync0000gn/T/tmp5964ed16.tmp\" or \"/Users/xamarinqa/Projects/TestFin/TestFin/obj/Debug/lp/6/jl/res/values-en-rIN/values-en-rIN.xml\". File already exists.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at System.IO.File.Copy (System.String sourceFileName, System.String destFileName, System.Boolean overwrite) [0x00193] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:111 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at Xamarin.Android.Tools.Files.CopyIfChanged (System.String source, System.String destination) [0x00027] in <85b0a2338aa04872b3b64fcf0b67c0bd>:0 \r\n```\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: The \"ConvertResourcesCases\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: System.IO.FileNotFoundException: /var/folders/zz/xvp_v21d0_qgnjn2xd4kqsrh0000gn/T/tmp3b73f1d.tmp does not exist\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: File name: '/var/folders/zz/xvp_v21d0_qgnjn2xd4kqsrh0000gn/T/tmp3b73f1d.tmp'\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at System.IO.File.Copy (System.String sourceFileName, System.String destFileName, System.Boolean overwrite) [0x00193] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:111 \r\n```\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/2dbe0b3beb7a61ffb84b7f6e8a2e712a\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/f758cbbca74519af957fcaca5f4dc957\r\nhttp://xqa.blob.core.windows.net/gist/log-0ae5db3450514d0d8dfc2f41a17141fc.txt\r\nhttps://gist.github.com/pjcollins/c987b9044fbb556cf68dcbc3c7d22495\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8087084005","Type":"IssuesEvent","CreatedAt":"2018-08-08T23:32:30","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3517","RelatedDescription":"Closed issue \"Editor's IsTextPredictionEnabled\" (#3517) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nIn Xamarin Forms 3.1, the IsTextPredictionEnabled is great but is it available only for Entry or I can use it for Editor? because it seems I am not able to get for the Editor control\r\n\r\nThanks,\r\nJassim"},{"Id":"8087046156","Type":"IssuesEvent","CreatedAt":"2018-08-08T23:20:40","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3500","RelatedDescription":"Closed issue \"NullRefrence Exception thrown from Dispose calls of ScrollViewRenderer.cs on UWP\" (#3500) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\n\r\nHi Team,\r\n\r\nWe at Syncfusion develop data visualization controls for Xamarin and we have more than 90 controls spread across all platforms of Xamarin. Please refer the below link for a description about us.\r\nUserGuide: https://help.syncfusion.com/xamarin/sfdatagrid/overview\r\nFeatureTour: https://www.syncfusion.com/products/xamarin\r\n\r\nWe would like to bring to your notice a bug that we encountered recently after updating to Xamarin.Forms 3.0.0.446417 that was released on May 7th 2018. The same sample and use case was working fine with your previous version of Xamarin.Forms 2.5.1.527436 nuget which was released on May 3rd 2018.\r\n\r\nIn the attached sample, we have a simple MasterDetailPage using FreshMVVM architecture, where in the details page we have loaded a SfDataGrid in a tab. Upon clicking the close icon of the FreshMVVM toolbar, the datagrid's dispose will be called. We have a custom renderer in UWP for the SfDataGrid PCL view and our dispose implementation in the renderer is as shown below. \r\n\r\n  protected override void Dispose(bool disposing)\r\n        {\r\n            if (disposing)\r\n            {\r\n                this.UnWireEvents();\r\n            }\r\n            **base.Dispose(disposing);**\r\n        }\r\n\r\nException has been thrown from the framework's ScrollViewRenderer.cs file when we call the base.Dispose() method as shown above. Please find the exception details below.\r\n\r\n**at Xamarin.Forms.Platform.UWP.ScrollViewRenderer.<OnScrollToRequested>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<>c.<ThrowAsync>b__6_0(Object state)\r\n   at System.Threading.WinRTSynchronizationContextBase.Invoker.InvokeCore()**\r\n\r\nThe same use case was working fine in the Xamarin forms version 2.5.1.527436 which is released on 03/May/2018, But after updating the version of 3.0.0.446417 which is released on 07/May/2018.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample in Xamarin.Forms.UWP\r\n2. Navigate to the Grid\r\n3. Close the Control by using Close button\r\n\r\n### Expected Behavior\r\nCrash should not have occurred\r\n\r\n### Actual Behavior\r\n\r\nException has been thrown at ScrollViewRenderer.cs\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  3.0.0.446417\r\n- Last known good version: 2.5.1.527436 \r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  16299\r\n- Nuget Packages: 3.0.0.446417\r\n- Affected Devices: All windows devices\r\n\r\n### VideoLink\r\n\r\n[ScreenCapture_8-7-2018 5.39.05 PM.zip](https://github.com/xamarin/Xamarin.Forms/files/2266315/ScreenCapture_8-7-2018.5.39.05.PM.zip)\r\n\r\n\r\n### Reproduction Sample Link\r\n\r\n[FreshMVVMSFDataGrid_3V.zip](https://github.com/xamarin/Xamarin.Forms/files/2266163/FreshMVVMSFDataGrid_3V.zip)\r\n"},{"Id":"8086850786","Type":"PullRequestEvent","CreatedAt":"2018-08-08T22:21:48","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3518","RelatedDescription":"Opened pull request \" [iOS] Unsubscribe CellPropertyChanged when SwitchCellRenderer is disposed\" (#3518) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSwitchCellRenderer wasn't unsubscribing when disposed. \r\nThe best way would be to just use the event exposed by our `CellTableViewCell` \r\n\r\nWe should use this in other cell renderers. \r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #3408 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nDoesn't crash with SwitchCells go away\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8086794545","Type":"IssuesEvent","CreatedAt":"2018-08-08T22:07:22","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3517","RelatedDescription":"Opened issue \"Editor's IsTextPredictionEnabled\" (#3517) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nIn Xamarin Forms 3.1, the IsTextPredictionEnabled is great but is it available only for Entry or I can use it for Editor? because it seems I am not able to get for the Editor control\r\n\r\nThanks,\r\nJassim"},{"Id":"8086672883","Type":"IssuesEvent","CreatedAt":"2018-08-08T21:39:17","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3243","RelatedDescription":"Closed issue \"Entry.Focus() Has Issues With External / Physical Keyboards\" (#3243) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nIf the completed action of an entry field is handled by setting focus to another entry, this will change focus twice when hitting the return/enter key of an external keyboard. Pressing done on the soft keyboard works as expected.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a method for entry \"Completed\".\r\n2. Set focus to another entry in this method (e.g. nextEntry.Focus() ).\r\n3. Run app, focus on the first entry and hit return on an external/physical keyboard\r\n\r\n### Expected Behavior\r\nFocus should advance to nextEntry (as it does when pressing done on the soft keyboard).\r\n\r\n### Actual Behavior\r\nFocus advances to nextEntry and then immediately on to another control.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.2805555\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.0 \r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8087498308","Type":"IssuesEvent","CreatedAt":"2018-08-09T02:09:42","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4603","RelatedDescription":"Opened issue \"Designer Feature: Import Xcode storyboard\" (#4603) at xamarin/xamarin-macios","RelatedBody":"Bringing an Xcode storyboard into Xamarin poses a couple of problems:\r\n\r\n* Generally, outlets and connections are not surfaced to user code and can be difficult to diagnose from the generated errors.\r\n\r\n* Swift module name is embedded into the storyboard which is not mapped in .NET, leading to difficult to diagnose problems (just a crash on the console showing a mangled type)\r\n\r\nIt would be nice if we could validate the storyboards that are added in this way, or to have either an analyzer step, or a validation process that guides the user through solving the problem (in this case, remove all outlet connections, inform the user of what to do, and drop the module name)"},{"Id":"8087492275","Type":"IssuesEvent","CreatedAt":"2018-08-09T02:07:05","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4602","RelatedDescription":"Opened issue \"Designer Feature: Regenerate the generated bindings\" (#4602) at xamarin/xamarin-macios","RelatedBody":"Today when you use the iOS designer, there is no way of generating the classes that are referenced.   This can happen when you copy a storyboard from one project to another, or when you bring an Xcode storyboard into Visual Studio.\r\n\r\nProposal: add a contextual option to regenerate the backing code \"Regenerate Bindings\".\r\n\r\n# Background\r\n\r\nThere are some workarounds, that include modifying every bound class in the designer to force the generation and then renaming things back - this will usually do the trick.\r\n\r\nYou can see that this is an issue that our users have struggled for a while:\r\n\r\nhttps://forums.xamarin.com/discussion/7681/how-to-regenerate-a-view-controllers-designer-cs-file\r\n\r\nI did try some of those, and while they can be made to work, they require some trial and error until one of those things triggers the change, plus manual cleanup after that."},{"Id":"8086335317","Type":"IssuesEvent","CreatedAt":"2018-08-08T20:30:00","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4525","RelatedDescription":"Closed issue \"[ARKit] different 'Transform' matrix presentation\" (#4525) at xamarin/xamarin-macios","RelatedBody":"After I set the `Position` property `Transform` matrixes look differently. Position vector is located under different indexes:\r\n- xamarin - position is under `Row3`\r\n- swift - position is under `Column3`\r\n\r\nIt looks like the same matrix, but one of them isn’t transposed. \r\n\r\n### Steps to Reproduce\r\n\r\n1. Open attached projects (swift and xamarin)\r\n2. Run them and looked to the output \r\n\r\nTest code is located:\r\n- xamarin - `GameViewController.cs` - between 30 and 46 lines of code\r\n- swift -  `ViewController.swift` - between 22 and 35 lines of code\r\n\r\n### Expected Behavior\r\nThe `Transform` matrixes are the same.\r\n\r\n### Actual Behavior\r\nThe `Transform` matrixes look differently. \r\n\r\n### Environment\r\n\r\n1. VSfM 7.6 Preview (7.6 build 2109)\r\nhttps://gist.github.com/mykyta-bondarenko-gl/aa42dcf103eb3a9b1259d6d67e0de428\r\n\r\n### Example Project \r\n\r\n1. [Xamarin](https://github.com/xamarin/xamarin-macios/files/2241190/XamarinGame.zip)\r\n2. [Swift](https://github.com/xamarin/xamarin-macios/files/2241204/SwiftGame.zip)"},{"Id":"8086006602","Type":"PullRequestEvent","CreatedAt":"2018-08-08T19:23:59","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4601","RelatedDescription":"Opened pull request \"[msbuild] Update 'metal' binary path for Xcode 10\" (#4601) at xamarin/xamarin-macios","RelatedBody":"- Fixes #4576: [xcode10] 'Metal Game' fails to build. (https://github.com/xamarin/xamarin-macios/issues/4576)\n\nIn Xcode 10 Apple moved the \"metal\" binary from `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/usr/bin/metal` to `/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/metal`."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":80,"FavoriteCount":44,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":164,"FavoriteCount":82,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":43,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":56,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":260,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":28,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null}]}},"RunOn":"2018-08-09T05:30:54.1903676Z","RunDurationInMilliseconds":5010}