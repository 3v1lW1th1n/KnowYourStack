{"Data":{"Blog":{"FeedItems":[{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Appleâ€™s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8291765912","Type":"PullRequestEvent","CreatedAt":"2018-09-19T21:31:55","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2201","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for readonly files on MacOS\" (#2201) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2198\r\n\r\nIn 970da9efb, I fixed various issues with incremental builds.\r\n\r\nBut one scenario has a regression on MacOS:\r\n- Add the `Xamarin.Android.Wear` NuGet to a new project\r\n- Build\r\n\r\nEncounter an error such as:\r\n\r\n    error MSB4018: The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\n    error MSB4018: System.UnauthorizedAccessException: Access to the path \"/Users/peter/Projects/TestWearab/TestWearab/obj/Debug/lp/15/jl/proguard.txt\" is denied.\r\n    error MSB4018:   at System.IO.File.SetLastWriteTime (System.String path, System.DateTime lastWriteTime) [0x0002b] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:488\r\n    error MSB4018:   at System.IO.File.SetLastWriteTimeUtc (System.String path, System.DateTime lastWriteTimeUtc) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:493\r\n    error MSB4018:   at Xamarin.Android.Tools.Files.ExtractAll (Xamarin.Tools.Zip.ZipArchive zip, System.String destination, System.Action`2[T1,T2] progressCallback, System.Func`2[T,TResult] modifyCallback, System.Func`2[T,TResult] deleteCallback, System.Boolean forceUpdate) [0x00152] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0\r\n    error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract (Java.Interop.Tools.Cecil.DirectoryAssemblyResolver res, System.Collections.Generic.ICollection`1[T] jars, System.Collections.Generic.ICollection`1[T] resolvedResourceDirectories, System.Collections.Generic.ICollection`1[T] resolvedAssetDirectories, System.Collections.Generic.ICollection`1[T] resolvedEnvironments) [0x00528] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0\r\n    error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute () [0x000fc] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0\r\n\r\nI could resolve the issue with at the cmd line such as:\r\n\r\n    chmod 770 obj/Debug/lp/15/jl/proguard.txt\r\n\r\nWhat is likely happening is that files in\r\n`__AndroidLibraryProjects__.zip` are marked readonly, and so they are\r\ngetting extracted that way.\r\n\r\nThen this code is failing on MacOS with readonly files:\r\n\r\n    var utcNow = DateTime.UtcNow;\r\n    File.SetLastWriteTimeUtc (outfile, utcNow);\r\n    File.SetLastAccessTimeUtc (outfile, utcNow);\r\n\r\nAdding a call to make the file writeable solves the issue:\r\n\r\n    MonoAndroidHelper.SetWriteable (outfile);"},{"Id":"8291548327","Type":"IssuesEvent","CreatedAt":"2018-09-19T20:48:08","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2200","RelatedDescription":"Opened issue \"\"\"ResolveAndroidTooling\" task failed unexpectedly.\" with Visual Studio 2017 version 15.9 Preview if `$(AndroidUseLatestPlatformSdk)` is `true` and `$(AndroidSdkDirectory)` is set to a nonexistent directory\" (#2200) at xamarin/xamarin-android","RelatedBody":"This is a different way of looking at https://github.com/xamarin/xamarin-android/issues/2195. This might be the more important scenario because it can potentially affect end-user Xamarin.Android app builds.\r\n\r\nThis is a regression in behavior between Visual Studio 2017 version 15.8.3 and Visual Studio 2017 version 15.9 Preview 2. Admittedly, it only affects a narrow scenario: when the old `$(AndroidUseLatestPlatformSdk)` property is set to `true` and `$(AndroidSdkDirectory)` is explicitly set to a nonexistent directory. This *could* affect some users who have been using a custom value for `$(AndroidSdkDirectory)` and who haven't updated their projects to remove `$(AndroidUseLatestPlatformSdk)`, but it does seem somewhat unlikely. On the other hand, maybe the simple fact that `$(AndroidUseLatestPlatformSdk)` is not currently *ignored* is enough reason to preserve the original behavior for a nonexistent `$(AndroidSdkDirectory)` for now.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new **Visual C# > Android > Android App (Xamarin) > Blank App**.\r\n\r\n2. Set **Project Properties > Application > Compile using Android version** to the latest Android SDK version you have installed.\r\n\r\n3. Also set **Project Properties > Android Manifest > Target Android version** to that same version.\r\n\r\n4. Using a Developer Command Prompt (for Visual Studio 2017 version 15.9 Preview 2), attempt to build the solution from the command line. Set `/p:AndroidUseLatestPlatformSdk=true` and specify a nonexistent `$(AndroidSdkDirectory)`:\r\n\r\n        msbuild /t:Build /p:AndroidUseLatestPlatformSdk=true /p:AndroidSdkDirectory=\"C:\\DoesNotExist\" CsharpAndroidApp1.sln\r\n\r\n### Results with Visual Studio 2017 version 15.9 Preview 2\r\n\r\nThe build fails because the new `ResolveAndroidTooling` task attempts to use the `$(AndroidSdkDirectory)` unmodified.\r\n\r\nExcerpt from the MSBuild output:\r\n\r\n```\r\nBuild FAILED.\r\n\r\n\"C:\\source\\CsharpAndroidApp1\\CsharpAndroidApp1.sln\" (Build target) (1) ->\r\n\"C:\\source\\CsharpAndroidApp1\\CsharpAndroidApp1\\CsharpAndroidApp1.csproj\" (default target) (2) ->\r\n(_SetLatestTargetFrameworkVersion target) ->\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(712,2): error MSB4018: The \"ResolveAndroidTooling\" task failed unexpectedly.\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(712,2): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\DoesNotExist\\platforms'.\r\n```\r\n\r\n### Results with Visual Studio 2017 version 15.8.3\r\n\r\nThe build succeeds."},{"Id":"8291329051","Type":"PullRequestEvent","CreatedAt":"2018-09-19T20:06:25","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2199","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] deletebinobj fix for resources\" (#2199) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2193\r\n\r\nI have been able to reproduce a #deletebinobj bug with the following\r\nsteps:\r\n1. `File | New Project | Android App (Xamarin) | Tabbed App`, set\r\n   `Minimum Android Version` to `Android 5.0 (Lollipop)`\r\n2. Build\r\n3. Add a new `TextView` to `Resources\\layout\\activity_main.axml`, with\r\n   an id of `textView1`\r\n4. Build and Deploy\r\n\r\nGet a crash at runtime:\r\n\r\n    Android.Views.InflateException: Binary XML file line #1: Error inflating class android.support.design.widget.BottomNavigationView occurred\r\n\r\nA `Rebuild` fixes the problem, and the app starts correctly again.\r\n\r\nAfter comparing `obj` directories from before and after, I noticed\r\n`obj\\Debug\\android\\src\\android\\support\\compat\\R.java` was missing the\r\nfield for `R.id.textView1`!\r\n\r\n    public static int textView1=0x7f080091;\r\n\r\nThis doesn't match the error message we are getting here at all... But\r\nthis file is updated by the `_GenerateJavaDesignerForComponent`\r\nMSBuild target. Further research showed that this target was getting\r\nskipped at step no. 4 above, because it was found to be up to date\r\naccording to its inputs and outputs.\r\n\r\nTo verify this was the case, I could delete\r\n`obj\\Debug\\Component.R.cs.flag` which would also resolve the runtime\r\nexception (instead of a full `Rebuild`).\r\n\r\nFirst, I created a new test:\r\n- `CustomViewAddResourceId` builds a project with\r\n  `<android.support.design.widget.BottomNavigationView />`\r\n- Adds a `textView1` layout, builds again\r\n- Verifies that `obj\\Debug\\android\\src\\android\\support\\compat\\R.java`\r\n  contains `textView1`\r\n\r\nTo fix the problem, I did the following:\r\n- Added `$(_AndroidResgenFlagFile)` as an input to\r\n  `_GenerateJavaDesignerForComponent`, so it will run again when\r\n  `_UpdateAndroidResgen` runs\r\n- Removed\r\n  `AndroidComponentResgenFlagFile=\"$(_AndroidComponentResgenFlagFile)\"`\r\n  from the call to the `<Aapt />` MSBuild task, so it will re-run\r\n  `aapt` and generate `R.java`.\r\n\r\nHowever, things are still breaking when `$(AndroidUseAapt2)` is\r\nenabled. Removing `AndroidComponentResgenFlagFile` from the\r\n`<Aapt2Link />` MSBuild task did not solve the problem here...\r\nI'm not seeing exactly what generates `R.java` when\r\n`$(AndroidUseAapt2)` is enabled? Perhaps another target that calls\r\n`<Aapt2Compile />`?\r\n\r\nThis PR isn't quite complete until we also get this new test passing\r\nunder aapt2."},{"Id":"8290623950","Type":"IssuesEvent","CreatedAt":"2018-09-19T17:56:18","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2198","RelatedDescription":"Opened issue \"ResolveLibraryProjectImports fails due to file permission issue when building a project with Xamarin.Android.Wear NuGet reference on macOS\" (#2198) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Android template in VSMac.\r\n2. Add a reference to the Xamarin.Android.Wear NuGet (version 2.2.0).\r\n3. Build the project.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nXA projects with reference Xamarin.Android.Wear compile successfully on macOS.\r\n\r\n### Actual Behavior\r\nA `System.UnauthorizedAccessException` is thrown during `ResolveLibraryProjectImports` when building on macOS, however the same error does not occur on Windows. This appears to be a regression between 15.9 Preview 2 and 15.9 Preview 3 RCs.\r\n\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018: The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018: System.UnauthorizedAccessException: Access to the path \"/Users/peter/Projects/TestWearab/TestWearab/obj/Debug/lp/15/jl/proguard.txt\" is denied.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at System.IO.File.SetLastWriteTime (System.String path, System.DateTime lastWriteTime) [0x0002b] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:488 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at System.IO.File.SetLastWriteTimeUtc (System.String path, System.DateTime lastWriteTimeUtc) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:493 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at Xamarin.Android.Tools.Files.ExtractAll (Xamarin.Tools.Zip.ZipArchive zip, System.String destination, System.Action`2[T1,T2] progressCallback, System.Func`2[T,TResult] modifyCallback, System.Func`2[T,TResult] deleteCallback, System.Boolean forceUpdate) [0x00152] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract (Java.Interop.Tools.Cecil.DirectoryAssemblyResolver res, System.Collections.Generic.ICollection`1[T] jars, System.Collections.Generic.ICollection`1[T] resolvedResourceDirectories, System.Collections.Generic.ICollection`1[T] resolvedAssetDirectories, System.Collections.Generic.ICollection`1[T] resolvedEnvironments) [0x00528] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute () [0x000fc] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0 \r\n```\r\n\r\n### Version Information\r\nXA 9.1.0.29\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/14f88095057f1ba84b4ffa5a603f1192\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8289357938","Type":"IssuesEvent","CreatedAt":"2018-09-19T14:30:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2197","RelatedDescription":"Opened issue \"We should have a test which builds with ProGuard enabled!\" (#2197) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8289203122","Type":"PullRequestEvent","CreatedAt":"2018-09-19T14:07:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2196","RelatedDescription":"Merged pull request \"[tests] fix the Windows build for DSO tests\" (#2196) at xamarin/xamarin-android","RelatedBody":"Getting a compiler error on Windows for `obj\\Debug\\Config.cs`, the\r\ngenerated code is:\r\n\r\n    public static readonly string ZipAlignPath = Path.Combine (\"C:\\Users\\myuser\\android-toolchain\\sdk\", \"build-tools\", \"28.0.0\", \"zipalign.exe\");\r\n\r\nFixes include:\r\n- Use the `@` symbol before the base path in `Config.cs.in`\r\n- Use `Inputs` and `Outputs` on the `Prepare` target so it doesn't run\r\n  all the time\r\n- Fix the double slash, since `$(IntermediateOutputPath)` always has a\r\n  trailing slash after the core MSBuild targets are imported\r\n- Fixed a tab character"},{"Id":"8287635113","Type":"IssuesEvent","CreatedAt":"2018-09-19T09:26:43","Actor":"xufeipyxis","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1760","RelatedDescription":"Closed issue \"`Build -> Archive` command hangs, \"Please ensure that you are using a release configuration and that \"Use Shared Mono Runtime\" option unchecked.\"\" (#1760) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Set a project to release and build, and then Build -> Archive\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nCreate an archive\r\n### Actual Behavior\r\nIt never completes.\r\n\r\n![capture](https://user-images.githubusercontent.com/33150084/40775792-82015028-64fb-11e8-9d21-cfe709a4d25e.PNG)\r\n\r\nI'm using release configuration and \"Use Shared Mono Runtime\" option is unchecked\r\n```\r\n    <BundleAssemblies>true</BundleAssemblies>\r\n    <AotAssemblies>false</AotAssemblies>\r\n```\r\nThis is my release configuration. I know this options are not available in the community verison of VS2017, but I can change it manually and reloade the project. It used to compile ok in April and earlier. I'm not sure if something changed in recent VS update.\r\n\r\n### Version Information\r\n15.7.1\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Community 2017  (VS2017)\r\nVersion 15.7.1\r\nVisualStudio.15.Release/15.7.1+27703.2000\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA302\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40501.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDotfuscator Community Edition   5.34.0.6830-9173b9a63\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nGorillaPlayerPackage Extension   1.0\r\nGorillaPlayerPackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.2.2    Build 109.0.20171006.122324\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright Â© 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOzCode   1.0\r\nYour road to Magical Debugging. http://www.oz-code.com\r\n\r\nOzCodePackage Extension   1.0\r\nOzCodePackage Visual Studio Extension Detailed Info\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 16ecf5a30ad868d183c58e4a71a71c23d4ed3ba9.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Unity   3.7.0.1\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nXamarin   4.10.0.442 (396b18cef)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.264 (fc37cd02e)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.177 (7e782c1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8293202768","Type":"IssuesEvent","CreatedAt":"2018-09-20T05:26:59","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3849","RelatedDescription":"Opened issue \"Enhancement Xamarin Forms tvOS\" (#3849) at xamarin/Xamarin.Forms","RelatedBody":"It would be great to start application (.net standard library) from tvOS project"},{"Id":"8292993780","Type":"PullRequestEvent","CreatedAt":"2018-09-20T04:07:06","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3823","RelatedDescription":"Merged pull request \"[Core] Propagate BindingContext changes to TitleView\" (#3823) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nIf the BindingContext on the Page changes, the new BindingContext isn't propagated to the TitleView. These changes propagate that BindingContext to the TitleView in much the same way that it gets propagated to Menu Items\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #3596 \r\n- fixes #3763\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Testing Procedure ###\r\n-Run Issue3763 in the control gallery and the instructions will indicate what you should see\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8292993201","Type":"PullRequestEvent","CreatedAt":"2018-09-20T04:06:52","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3835","RelatedDescription":"Merged pull request \"[UITests] replace awaits with more reliable WaitForElement\" (#3835) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nReworked Issue1733 UITest to be more deterministic and less prone to failure based on device speed\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8292275776","Type":"PullRequestEvent","CreatedAt":"2018-09-19T23:52:05","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3793","RelatedDescription":null,"RelatedBody":"### Description of Change ###\r\n\r\nThere is precedent in Xamarin.Forms for allowing Android to temporarily \"resurrect\" an object in C# simply to call it's dispose methods. While I'm not entirely sure why this happens, its seems innocuous if all that happens is invocation of the dispose function which then does nothing. \r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3603\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAs described in resolved issue.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8292219570","Type":"PullRequestEvent","CreatedAt":"2018-09-19T23:32:23","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3793","RelatedDescription":"Closed pull request \"Fixes failed activation of ListViewAdapter when using nested ListViews and DataTemplateSelector\" (#3793) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThere is precedent in Xamarin.Forms for allowing Android to temporarily \"resurrect\" an object in C# simply to call it's dispose methods. While I'm not entirely sure why this happens, its seems innocuous if all that happens is invocation of the dispose function which then does nothing. \r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3603\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAs described in resolved issue.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8292204035","Type":"PullRequestEvent","CreatedAt":"2018-09-19T23:27:14","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3789","RelatedDescription":"Closed pull request \"[Android] Fix dispose of Listview renderer\" (#3789) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen navigating back from issue 3408 on the controll Gallery we were getting a crash because of missing constructor on our renderer. \r\n\r\nThis seems to be related with this **https://stackoverflow.com/questions/10593022/monodroid-error-when-calling-constructor-of-custom-view-twodscrollview/10603714#comment59366780_10603714**\r\n\r\nBy  forcing the dispsoe to happen on the Main thread we might fix the issues related with accessing the same object via otherad threads. \r\n\r\n### Issues Resolved ### \r\n\r\nUITests 3408 navigating back\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nGo to test 3408 and navigate back , shouldn't crash \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8292165534","Type":"PullRequestEvent","CreatedAt":"2018-09-19T23:14:39","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3848","RelatedDescription":"Opened pull request \"Ensure that the ListViewAdapter is no longer being used by the ListViâ€¦\" (#3848) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen a `ListViewRenderer` is re-used with a new `ListView` element, the old `ListViewAdapter` is disposed of. But the `ListView` still holds a reference to it and attempts to use it, resulting in a Disposed object access exception.\r\n\r\nThis change unhooks the `ListViewAdapter` from the `ListView` before disposing of it.\r\n\r\nThis change also fixes potential double-disposal issues with `ListViewAdapter`.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes problem with the UI Test for 3408 crashing\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nRun UI Test 3408. Push a lot of buttons. If the application doesn't crash, there's a chance the bug is fixed.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8292004885","Type":"IssuesEvent","CreatedAt":"2018-09-19T22:27:58","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3847","RelatedDescription":"Opened issue \"[Enhancement] Add support for RelativeSource binding\" (#3847) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nhttps://forums.xamarin.com/discussion/20179/databinding-to-a-command-inside-a-datatemplate#latest\r\n\r\nhttp://xamarin.uservoice.com/forums/258559/suggestions/6451625\r\n\r\n## Implementation\r\n\r\nLike UWP? https://docs.microsoft.com/en-us/windows/uwp/xaml-platform/relativesource-markup-extension\r\n\r\n## API\r\n"},{"Id":"8291982977","Type":"IssuesEvent","CreatedAt":"2018-09-19T22:22:10","Actor":"MaxHampton","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3846","RelatedDescription":"Opened issue \"Android InputTransparency With Nested Layouts\" (#3846) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI am creating a menu for an app I am working on. It is working as expected on iOS. On Android, I am having issues interacting with the menu. Basic XAML layout below. I have tried a number of combinations for InputTransparent and CascadeInputTransparent to make it so the nested buttons are tappable, while content behind the menu is still scrollable. The ContentViews are added dynamically in response to a bound items property. \r\n\r\nBefore I say \"it's not working,\" what's the correct setup for input transparency to get this working? The code below shows how I've configured it. I reported the same issue prior to 3.2, thought a fix was coming with the new version.\r\n\r\n    <StackLayout InputTransparent=True CascadeInputTransparent=False>\r\n      <ContentView InputTransparent=True CascadeInputTransparent=False> \r\n        <Grid InputTransparent=True CascadeInputTransparent=False>\r\n          <Label Grid.Column=0 InputTransparent=True />\r\n          <Button Grid.Column=1 InputTransparent=False />\r\n        </Grid>\r\n      </ContentView>\r\n      <ContentView>\r\n        <Grid>\r\n          <Label Grid.Column=0 />\r\n          <Button Grid.Column=1 />\r\n        </Grid>\r\n      </ContentView>\r\n      <ContentView>\r\n        <Grid>\r\n          <Label Grid.Column=0 />\r\n          <Button Grid.Column=1 />\r\n        </Grid>\r\n      </ContentView>\r\n      <Button />\r\n    </StackLayout>\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.2.0.839982\r\n- Last known good version: N/A\r\n- IDE: Visual Studio 2017 Enterprise\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n\r\n  - Android: Latest (8.1)\r\n\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8291957714","Type":"IssuesEvent","CreatedAt":"2018-09-19T22:15:37","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3805","RelatedDescription":"Closed issue \"MasterDetailPage navigation is not aligned to RTL\" (#3805) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n###Description\r\nCreated a MasterDetailPage app in xamarin forms as PCL application which supports android.\r\nDid the RTL changes and changed the device language and region to Arabic.\r\nTested the app in android device, the hamburger menu and navigation title is still left aligned.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Change the device language and region to Arabic.\r\n2. Open the app \r\n3. Check the alignment\r\n\r\n### Expected Behavior\r\n\r\nThe Hamburger menu and navigation title should align from right side\r\n\r\n### Actual Behavior\r\n\r\nThe Hamburger menu and navigation title is still left aligned.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:xamarin forms : 3.0.0.561731\r\n- Affected Devices: Android devices\r\n\r\n### Screenshots\r\n![settings](https://user-images.githubusercontent.com/23097051/45620852-d28db680-ba9b-11e8-808c-a88dc6fc6642.png)\r\n![masterdetailopen](https://user-images.githubusercontent.com/23097051/45620910-05d04580-ba9c-11e8-9216-7d571e9b7b58.png)\r\n![masterdetail](https://user-images.githubusercontent.com/23097051/45620861-d7526a80-ba9b-11e8-898a-cd141a8f7aa0.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n[Masterdetail.zip](https://github.com/xamarin/Xamarin.Forms/files/2388151/Masterdetail.zip)"},{"Id":"8291893532","Type":"IssuesEvent","CreatedAt":"2018-09-19T22:00:18","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3845","RelatedDescription":"Opened issue \"[Enhancement] Make AutomationID Bindable\" (#3845) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nSee https://xamarin.uservoice.com/forums/144858/suggestions/13865469\r\n\r\n## Implementation\r\n\r\nTBD\r\n\r\n## API\r\n\r\nTBD\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8292691265","Type":"PullRequestEvent","CreatedAt":"2018-09-20T02:19:00","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4845","RelatedDescription":"Opened pull request \"[apidiff] Update API diff to be based on XI 12.0\" (#4845) at xamarin/xamarin-macios","RelatedBody":"* XI references updated from `xcode10` (XI 12.0)\n* XM references are not updated, we continue to compare with `d15.8`\n* references_/* were temporary files that should not have been committed (old mistake)"},{"Id":"8292502384","Type":"PullRequestEvent","CreatedAt":"2018-09-20T01:13:41","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4844","RelatedDescription":"Opened pull request \"[apidiff] Update API diff to be based on XI 12.0\" (#4844) at xamarin/xamarin-macios","RelatedBody":"* XI references updated from `xcode10` (XI 12.0)\n* XM references are not updated, we continue to compare with `d15.8`\n* references_/* were temporary files that should not have been committed (old mistake)"},{"Id":"8291973097","Type":"PullRequestEvent","CreatedAt":"2018-09-19T22:19:36","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4833","RelatedDescription":"Merged pull request \"Merge branch 'xcode10' into master\" (#4833) at xamarin/xamarin-macios","RelatedBody":"Includes bump of `maccore`."},{"Id":"8290799273","Type":"PullRequestEvent","CreatedAt":"2018-09-19T18:27:43","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4843","RelatedDescription":"Opened pull request \"[apidiff] Update API diff to be based on XI 12.0\" (#4843) at xamarin/xamarin-macios","RelatedBody":"* XI references updated from xcode10 (XI 12.0)\n* XM references are not updated, we continue 4.99.x previews\n* references_/* were temporary files that should not have been committed (old mistake)"},{"Id":"8290372785","Type":"IssuesEvent","CreatedAt":"2018-09-19T17:10:00","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4840","RelatedDescription":"Closed issue \"imessage icon archiving - missing icons\" (#4840) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. create a new app and a corresponding iMessage extension\r\n2. set all iMessage app icons in the asset catalog\r\n3. archive for publishing\r\n4. validate archive with xcode / try to upload\r\n\r\nAll the icon files are there in the project under Assets.xassets. They are also referenced in content.json.\r\n\r\n### Expected Behavior\r\n\r\nAll the icon png files should be in the extension appex, also listed in the Info.plist and successful validation.\r\n\r\n### Actual Behavior\r\n\r\nThe icon files \r\n - `iMessage App Icon27x20@2x.png`\r\n - `iMessage App Icon27x20@3x.png`\r\n - `iMessage App Icon32x24@2x.png`\r\n - `iMessage App Icon32x24@3x.png`\r\n\r\nare not present after archiving, also the Info.plist does not contain them.\r\n```\r\n  - Icon files (iOS 5)\r\n    - Primary Icon\r\n      - Icon files\r\n        - Item 0 : iMessage App Icon60x45\r\n        - Item 1 : iMessage App Icon67x50\r\n        - Item 2 : iMessage App Icon74x55\r\n<<< should be there but missing\r\n        - Item 3 : iMessage App Icon27x20\r\n        - Item 4 : iMessage App Icon32x24\r\n>>>\r\n```\r\nThe other 6 files are ok.\r\nXcode validation results in an error stating that these four files above are missing.\r\n\r\n### Further Details / Workaround / Solution suggestion\r\nCopy the missing 4 files directly in the *.xarchive/Products/Applications/*.app/Plugins/*.appex/\r\nand also edit the Info.plist file at the location.\r\n\r\nI am 100% that #3955 is related.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.3 (build 1)\r\nInstallation UUID: c50a0e4a-372e-4281-aafb-96cdcaa708f6\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.14 (Visual Studio Community)\r\nHash: 1a6e2786\r\nBranch: \r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.14 (Visual Studio Community)\r\nHash: 1a6e2786\r\nBranch: HEAD\r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Community)\r\nAndroid SDK: /Users/bb/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home\r\njava version \"1.8.0_181\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_181-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706030001\r\nGit revision: 18a828b090fb6d2cfb0b3576cd6d7eb764f29753\r\nBuild date: 2018-08-30 15:12:59+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f4aee57d7b72fa4be6b6d585ac90d614f20fa426\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackleâ€¦ https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":187,"FavoriteCount":102,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft isâ€¦ https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":93,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objecâ€¦ https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":44,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.â€¦ https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9â€¦ https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/â€¦ https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized byâ€¦ https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolutâ€¦ https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarinâ€¦ https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":87,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This yearâ€™s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learnâ€¦ https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes anâ€¦ https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;â€¦ https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this feâ€¦ https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-20T05:30:55.3645863Z","RunDurationInMilliseconds":3870}