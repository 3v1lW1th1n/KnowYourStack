{"Data":{"GitHub":{"Issues":[{"Id":"481173854","IsPullRequest":true,"CreatedAt":"2019-08-17T04:36:24","Actor":"ganik","Number":"4117","RawContent":null,"Title":"Rename LabelColumn to LabelColumnName for MutualInformationSelector","State":"closed","Body":"To follow existing practice and match all other transforms need to rename LabelColumn to LabelColumnName. Currently in NimbusML parsing logic needs to handle LabelColumn for MI, while for rest of transformers form manifest its LabelColumnName","Url":"https://github.com/dotnet/machinelearning/pull/4117","RelatedDescription":"Closed or merged PR \"Rename LabelColumn to LabelColumnName for MutualInformationSelector\" (#4117)"},{"Id":"481818296","IsPullRequest":true,"CreatedAt":"2019-08-16T23:24:10","Actor":"pieths","Number":"4124","RawContent":null,"Title":"[WIP] Convert variable length columns in tree summaries to constant length. (Do not review)","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4124","RelatedDescription":"Open PR \"[WIP] Convert variable length columns in tree summaries to constant length. (Do not review)\" (#4124)"},{"Id":"481750529","IsPullRequest":true,"CreatedAt":"2019-08-16T19:21:51","Actor":"CESARDELATORRE","Number":"4123","RawContent":null,"Title":"ML.NET home page readme updated with getting started resources","State":"open","Body":"ML.NET home page readme updated with additional getting started resources such as, Sample apps, community sample apps, ML.NET videos playlist at YouTube, Documentation, etc. plus some refactoring of the page so the info is clearer.\r\n\r\nThis is important info to be seen upfront for new .NET users coming to the ML.NET repo.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4123","RelatedDescription":"Open PR \"ML.NET home page readme updated with getting started resources\" (#4123)"},{"Id":"481422665","IsPullRequest":false,"CreatedAt":"2019-08-16T03:13:16","Actor":"eerhardt","Number":"4122","RawContent":null,"Title":"Using the wrong type with OnnxSequenceType throws an non-helpful message","State":"open","Body":"We should give the user a better exception message when they use the wrong type in their class vs. the type in an ONNX model. The current exception doesn't help point them in the right direction and only confuses them.\r\n\r\nIf you pull the following code:\r\n\r\nhttps://github.com/sethjuarez/SeeSharp/tree/c864892252880d4ef87006008823dee3b29adf9c\r\n\r\nAnd change the code to be:\r\n\r\n```C#\r\n    public class ImagePrediction\r\n    {\r\n        [ColumnName(\"classLabel\")]\r\n        [VectorType]\r\n        public string[] Prediction;\r\n\r\n        [OnnxSequenceType(typeof(IEnumerable<float>))]\r\n        public IEnumerable<float> loss;\r\n    }\r\n\r\n    public class ImageInput\r\n    {\r\n        [ImageType(224, 224)]\r\n        public Bitmap Image { get; set; }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var modelFile = Directory.EnumerateFiles(\".\", \"*.onnx\").FirstOrDefault();\r\n            Console.WriteLine($\"Attempting to load {modelFile}...\");\r\n            var predictor = LoadModel(modelFile);\r\n\r\n\r\n            Console.WriteLine(\"\\n\\nReading Folder...\");\r\n            foreach (var file in Directory.EnumerateFiles(\"images\", \"*.jpg\"))\r\n            {\r\n                Console.WriteLine(file);\r\n                var output = predictor.Predict(new ImageInput { Image = (Bitmap)Image.FromFile(file) });\r\n                Console.WriteLine($\"Label: {output.Prediction[0]}\");\r\n                var loss = output.loss.FirstOrDefault();\r\n                Console.WriteLine($\"\\t{loss}\");\r\n                Console.WriteLine(\"------------------------------------\\n\\n\");\r\n            }\r\n            \r\n            Console.ReadKey();\r\n        }\r\n```\r\n\r\nYou get the following exception:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentOutOfRangeException: Could not determine an IDataView type for member loss\r\nParameter name: rawType\r\n   at Microsoft.ML.Data.InternalSchemaDefinition.GetVectorAndItemType(String name, Type rawType, IEnumerable`1 attributes, Boolean& isVector, Type& itemType)\r\n   at Microsoft.ML.Data.SchemaDefinition.Create(Type userType, Direction direction)\r\n   at Microsoft.ML.Data.TypedCursorable`1.Create(IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.PredictionEngineBase`2.PredictionEngineCore(IHostEnvironment env, InputRow`1 inputRow, IRowToRowMapper mapper, Boolean ignoreMissingColumns, SchemaDefinition outputSchemaDefinition, Action& disposer, IRowReadableAs`1& outputRow)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at SeeSharp.Program.LoadModel(String onnxModelFilePath) in /Users/eerhardt/git/SeeSharp/SeeSharp/Program.cs:line 72\r\n   at SeeSharp.Program.Main(String[] args) in /Users/eerhardt/git/SeeSharp/SeeSharp/Program.cs:line 38\r\n```\r\n\r\nWhen the error here is that the Onnx model expects the `loss` property to be \r\n```C#\r\n        [OnnxSequenceType(typeof(IDictionary<string, float>))]\r\n        public IEnumerable<IDictionary<string, float>> loss;\r\n```\r\n\r\nBut when you use the wrong type (like I did above), you get this unhelpful exception.\r\n\r\nInstead the message should tell you that \"The expected type `IEnumerable<IDictionary<string, float>>` does not match the type of the `loss` property: `IEnumerable<float>`. Please change the loss property to `IEnumerable<IDictionary<string, float>>`\"\r\n\r\n/cc @wschin ","Url":"https://github.com/dotnet/machinelearning/issues/4122","RelatedDescription":"Open issue \"Using the wrong type with OnnxSequenceType throws an non-helpful message\" (#4122)"},{"Id":"481420620","IsPullRequest":false,"CreatedAt":"2019-08-16T03:02:04","Actor":"eerhardt","Number":"4121","RawContent":null,"Title":"Using OnnxSequenceType and ColumnName attributes together doesn't work","State":"open","Body":"If you have both `OnnxSequenceType` and `ColumnName` attributes on a property, ML.NET gets confused and throws an exception.\r\n\r\nFor example, if you pull the following code: \r\n\r\nhttps://github.com/sethjuarez/SeeSharp/tree/c864892252880d4ef87006008823dee3b29adf9c\r\n\r\nAnd change the ImagePrediction class to be:\r\n\r\n```\r\n    public class ImagePrediction\r\n    {\r\n        [ColumnName(\"classLabel\")]\r\n        [VectorType]\r\n        public string[] Prediction;\r\n\r\n        [ColumnName(\"loss\")]\r\n        [OnnxSequenceType(typeof(IDictionary<string, float>))]\r\n        public IEnumerable<IDictionary<string, float>> Loss;\r\n    }\r\n```\r\n\r\n(You will also need to change 1 place in the `Main` method to change from `output.loss.FirstOrDefault();` to `output.Loss.FirstOrDefault();` from the rename.)\r\n\r\nYou get an error:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentOutOfRangeException: Could not determine an IDataView type for member Loss\r\nParameter name: rawType\r\n   at Microsoft.ML.Data.InternalSchemaDefinition.GetVectorAndItemType(String name, Type rawType, IEnumerable`1 attributes, Boolean& isVector, Type& itemType)\r\n   at Microsoft.ML.Data.SchemaDefinition.Create(Type userType, Direction direction)\r\n   at Microsoft.ML.Data.TypedCursorable`1.Create(IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.PredictionEngineBase`2.PredictionEngineCore(IHostEnvironment env, InputRow`1 inputRow, IRowToRowMapper mapper, Boolean ignoreMissingColumns, SchemaDefinition outputSchemaDefinition, Action& disposer, IRowReadableAs`1& outputRow)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at SeeSharp.Program.LoadModel(String onnxModelFilePath) in /Users/eerhardt/git/SeeSharp/SeeSharp/Program.cs:line 76\r\n   at SeeSharp.Program.Main(String[] args) in /Users/eerhardt/git/SeeSharp/SeeSharp/Program.cs:line 39\r\n```\r\n\r\nThis should work. The program works if you remove the `ColumnName` attribute.  And fails with the above as soon as you add the `ColumnName` attribute.\r\n\r\n/cc @wschin ","Url":"https://github.com/dotnet/machinelearning/issues/4121","RelatedDescription":"Open issue \"Using OnnxSequenceType and ColumnName attributes together doesn't work\" (#4121)"},{"Id":"481418348","IsPullRequest":false,"CreatedAt":"2019-08-16T02:49:40","Actor":"eerhardt","Number":"4120","RawContent":null,"Title":"Using default OnnxSequenceType attribute throws meaningless exception","State":"open","Body":"Pull the code at this commit and run the application - https://github.com/sethjuarez/SeeSharp/tree/b6a7e8a0094b99af05bc72528a2c6e306abbf7cd\r\n\r\nThe code of interest is:\r\n\r\n```C# \r\n    public class ImagePrediction\r\n    {\r\n        [ColumnName(\"classLabel\")]\r\n        [VectorType]\r\n        public string[] Prediction;\r\n\r\n\r\n        [ColumnName(\"loss\")]\r\n        [OnnxSequenceType]\r\n        public List<float> Loss;\r\n    }\r\n```\r\n\r\nYou get the following error:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentNullException: Value cannot be null.\r\n   at System.RuntimeType.MakeGenericType(Type[] instantiation)\r\n   at Microsoft.ML.Transforms.Onnx.OnnxSequenceTypeAttribute.Register()\r\n   at Microsoft.ML.Data.SchemaDefinition.Create(Type userType, Direction direction)\r\n   at Microsoft.ML.Data.TypedCursorable`1.Create(IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.PredictionEngineBase`2.PredictionEngineCore(IHostEnvironment env, InputRow`1 inputRow, IRowToRowMapper mapper, Boolean ignoreMissingColumns, SchemaDefinition outputSchemaDefinition, Action& disposer, IRowReadableAs`1& outputRow)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at SeeSharp.Program.LoadModel(String onnxModelFilePath) in /Users/eerhardt/git/SeeSharp/SeeSharp/Program.cs:line 70\r\n   at SeeSharp.Program.Main(String[] args) in /Users/eerhardt/git/SeeSharp/SeeSharp/Program.cs:line 39\r\n```\r\n\r\nIt looks like the code here:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/0c0789f8eba1e47f6fa759de01f99588e560935c/src/Microsoft.ML.OnnxTransformer/OnnxSequenceType.cs#L95-L100\r\n\r\nIs expecting `_elemType` to never be null.  However, that is exactly what happens when you use the default attribute:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/0c0789f8eba1e47f6fa759de01f99588e560935c/src/Microsoft.ML.OnnxTransformer/OnnxSequenceType.cs#L57-L64\r\n\r\nI don't think having a default constructor is right with this attribute - you can't use this sequence attribute without specifying an element type.\r\n\r\n/cc @wschin ","Url":"https://github.com/dotnet/machinelearning/issues/4120","RelatedDescription":"Open issue \"Using default OnnxSequenceType attribute throws meaningless exception\" (#4120)"},{"Id":"481268942","IsPullRequest":false,"CreatedAt":"2019-08-15T18:06:57","Actor":"cookt","Number":"4119","RawContent":null,"Title":"Does this only apply to numeric columns?","State":"open","Body":"It would be good to call out which column types this applies to and for each column type what could be considered a 'missing' value (empty string, 0, null, etc.)\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 3725a2c2-9121-a125-a2c1-ffa5bb799e17\n* Version Independent ID: d5e97e37-927e-5f3a-f219-78f972d6e371\n* Content: [DataOperationsCatalog.FilterRowsByMissingValues(IDataView, String\\[\\]) Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.dataoperationscatalog.filterrowsbymissingvalues?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML/DataOperationsCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/DataOperationsCatalog.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/4119","RelatedDescription":"Open issue \"Does this only apply to numeric columns?\" (#4119)"},{"Id":"481258796","IsPullRequest":true,"CreatedAt":"2019-08-15T17:40:43","Actor":"PranovD","Number":"4118","RawContent":null,"Title":"Added caching for Training Transfer Learning","State":"open","Body":"\r\n1. Added caching for featurized data when Training\r\n2. Added callback parameter for metrics when Training\r\n3. Added ability to buffer custom batch size tensors\r\n4. Added parameter for validation set\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4118","RelatedDescription":"Open PR \"Added caching for Training Transfer Learning\" (#4118)"},{"Id":"481150441","IsPullRequest":true,"CreatedAt":"2019-08-15T13:27:41","Actor":"ganik","Number":"4116","RawContent":null,"Title":"draft","State":"closed","Body":"online learning","Url":"https://github.com/dotnet/machinelearning/pull/4116","RelatedDescription":"Closed or merged PR \"draft\" (#4116)"},{"Id":"480927197","IsPullRequest":true,"CreatedAt":"2019-08-14T23:10:01","Actor":"eerhardt","Number":"4115","RawContent":null,"Title":"Update to .NET Core 3.0 preview8","State":"open","Body":".NET Core preview 8 shipped yesterday. We should use it in our CI to ensure ML.NET runs correctly on the latest bits.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4115","RelatedDescription":"Open PR \"Update to .NET Core 3.0 preview8\" (#4115)"},{"Id":"480917982","IsPullRequest":false,"CreatedAt":"2019-08-14T22:33:23","Actor":"Dmitry-A","Number":"4114","RawContent":null,"Title":"[AutoML] refactor internal benchmarking so it doesn't need internalsvisible AutoML","State":"open","Body":"The reason we use internalsvisible currently is to be able to see what pipleline did an iteration run, including all the details like hyperparam values.  It is present in an internal AutoML structure.\r\n\r\nIdeal solution to this is if ML.NET starts supporting an interface that allows exploring an istantiated pipeline.\r\n\r\nSecond best, we can come up with some logging or ToString() solutions that will expose what we need.","Url":"https://github.com/dotnet/machinelearning/issues/4114","RelatedDescription":"Open issue \"[AutoML] refactor internal benchmarking so it doesn't need internalsvisible AutoML\" (#4114)"},{"Id":"480847294","IsPullRequest":false,"CreatedAt":"2019-08-14T19:23:44","Actor":"CESARDELATORRE","Number":"4113","RawContent":null,"Title":"ML.NET API for Explainability and Interpretability targeting Deep Learning models","State":"open","Body":"Our current model explainability APIs targets ML classic algorithms in ML.NET.\r\n\r\nWe'll need something comparable for deep learning models where explainability and interpretability is a lot harder since deep learning models are much more \"black boxes\" than classic ML models. (Note that [explainability and interpretability are related but are not the same concepts](https://www.kdnuggets.com/2018/12/machine-learning-explainability-interpretability-ai.html))\r\n\r\nDeep Learning models can achieve high accuracy but at the expense of high abstraction (i.e. accuracy vs interpretability problem), however, modern research is enabling interpretability for deep learning models, see related article:\r\n\r\nhttps://towardsdatascience.com/interpretability-of-deep-learning-models-9f52e54d72ab \r\n\r\nAfter our deep learning training approaches are in place through transfer-learning, this is an area to explore and implement for the users.","Url":"https://github.com/dotnet/machinelearning/issues/4113","RelatedDescription":"Open issue \"ML.NET API for Explainability and Interpretability targeting Deep Learning models\" (#4113)"},{"Id":"478919172","IsPullRequest":true,"CreatedAt":"2019-08-14T17:44:17","Actor":"SnakyBeaky","Number":"4098","RawContent":null,"Title":"Fix LogLossReduction (RIG) example values","State":"closed","Body":"Adjusting LogLossReduction (RIG) example values in code as well.\r\n\r\nFixes #4097","Url":"https://github.com/dotnet/machinelearning/pull/4098","RelatedDescription":"Closed or merged PR \"Fix LogLossReduction (RIG) example values\" (#4098)"},{"Id":"478914494","IsPullRequest":false,"CreatedAt":"2019-08-14T17:44:16","Actor":"SnakyBeaky","Number":"4097","RawContent":null,"Title":"Wrong example values in LogLossReduction documentation","State":"closed","Body":"The RIG value given by the `LogLossReduction` would be `0.20` and not `20` in the example:\r\n\r\n`For example, if the RIG equals 20, it can be interpreted as \"the probability of a correct prediction is 20% better than random guessing\". `\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: be840507-df5f-8980-3d02-a7765eef1af3\r\n* Version Independent ID: 46c925d8-7d87-5f9c-5e3d-9d88bae26be1\r\n* Content: [MulticlassClassificationMetrics.LogLossReduction Property (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.multiclassclassificationmetrics.loglossreduction?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @sfilipi\r\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/4097","RelatedDescription":"Closed issue \"Wrong example values in LogLossReduction documentation\" (#4097)"},{"Id":"480400988","IsPullRequest":true,"CreatedAt":"2019-08-14T15:41:33","Actor":"eerhardt","Number":"4108","RawContent":null,"Title":"Update official build and CI to run on macOS 10.13.","State":"closed","Body":"The official build is currently broken because it uses macOS 10.12, which is not supported with .NET Core 3.0. I also updated the CI to run on macOS 10.13, since that is supported and our tests are currently running on 10.14.\r\n\r\nAlso update the building instructions to reflect the new requirement to build for .NET Core 3.0.\r\n\r\nSince we are building for .NET Core 3.0, we now require VS 2019 Update 3, which is in preview right now. It can be downloaded from https://visualstudio.microsoft.com/vs/preview/.","Url":"https://github.com/dotnet/machinelearning/pull/4108","RelatedDescription":"Closed or merged PR \"Update official build and CI to run on macOS 10.13.\" (#4108)"},{"Id":"480659002","IsPullRequest":false,"CreatedAt":"2019-08-14T12:46:32","Actor":"RussellKirkwood","Number":"4112","RawContent":null,"Title":"Get Error when Loading Model. System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow' or one of its dependencies","State":"open","Body":"- Azure Function App: runtime version 2.0.12625.0\r\n- .NET Core 2.1: \r\n\r\nITransformer trainedModel = mlContext.Model.Load(stream, out modelInputSchema);\r\nWhen loading Model into ITransformer I get the following error:\r\n\r\n\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow' or one of its dependencies: The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.Transforms.Dnn.DnnUtils.LoadTFSession(IExceptionContext ectx, Byte[] modelBytes, String modelFile)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Create(IHostEnvironment env, ModelLoadContext ctx)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo.CreateInstanceCore(Object[] ctorArgs)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo.CreateInstance(IHostEnvironment env, Object args, Object[] extra)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes](IHostEnvironment env, Type signatureType, TRes& result, String name, String options, Object[] extra)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes,TSig](IHostEnvironment env, TRes& result, String name, String options, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.TryLoadModelCore[TRes,TSig](IHostEnvironment env, TRes& result, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.TryLoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, Entry ent, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, Entry ent, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModelOrNull[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModelOrNull[TRes,TSig](IHostEnvironment env, TRes& result, String name, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModel[TRes,TSig](IHostEnvironment env, TRes& result, String name, Object[] extra)\r\n   at Microsoft.ML.Data.TransformerChain`1..ctor(IHostEnvironment env, ModelLoadContext ctx)\r\n   at Microsoft.ML.Data.TransformerChain.Create(IHostEnvironment env, ModelLoadContext ctx)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4112","RelatedDescription":"Open issue \"Get Error when Loading Model. System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow' or one of its dependencies\" (#4112)"},{"Id":"480553841","IsPullRequest":false,"CreatedAt":"2019-08-14T08:41:31","Actor":"nfnpmc","Number":"4111","RawContent":null,"Title":"ImageDataViewType produces different outputs","State":"open","Body":"In one program I have\nvar builder = new DataViewSchema.Builder();\n                builder.AddColumn(\"Label\", TextDataViewType.Instance);\n                ImageDataViewType imDT = new ImageDataViewType();\n                builder.AddColumn(\"Image\", imDT);\n                lSchema = builder.ToSchema();\nand the imDT.Rawtype is {System.Drawing.Bitmap}. This works perfectly when the lSchema is used in  CreatePredictionEngine.\nIn another program I have\n                DataViewSchema.Builder builder = new DataViewSchema.Builder();\n                builder.AddColumn(\"Label\", TextDataViewType.Instance);\n                ImageDataViewType imDT = new ImageDataViewType();\n                builder.AddColumn(\"Image\", imDT);\n                lSchema = builder.ToSchema();\nwhere inDT RawType is {Name = \"Bitmap\" FullName = \"System.Drawing.Bitmap\"}\nwhich preduces the error {\"Could not determine an IDataView type for member Image\\r\\nParameter name: rawType\"}.\nI am trying to eliminate the original exception of {\"Could not determine an IDataView type for member Image\\r\\nParameter name: rawType\"}\n\n\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 78deb193-fc79-6814-c8e8-30ab50febfa9\n* Version Independent ID: 9c3da030-2aef-37b3-40da-c63ff9c85780\n* Content: [ImageDataViewType Class (Microsoft.ML.Transforms.Image)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.image.imagedataviewtype?view=ml-dotnet-1.0.0)\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms.Image/ImageDataViewType.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms.Image/ImageDataViewType.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/4111","RelatedDescription":"Open issue \"ImageDataViewType produces different outputs\" (#4111)"},{"Id":"480415398","IsPullRequest":true,"CreatedAt":"2019-08-13T23:32:56","Actor":"najeeb-kazmi","Number":"4110","RawContent":null,"Title":"Load TransformerChain model file in ModelFileUtils","State":"open","Body":"Fixes #4109 \r\n\r\nRelated to microsoft/NimbusML#201\r\n\r\nEnables loading TransformerChain models from entrypoints. This is needed so that models trained in ML.NET can be scored in NimbusML.\r\n\r\nNimbusML models could be loaded and scored in ML.NET, but we never tested it the other way around.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4110","RelatedDescription":"Open PR \"Load TransformerChain model file in ModelFileUtils\" (#4110)"},{"Id":"480413666","IsPullRequest":false,"CreatedAt":"2019-08-13T23:25:19","Actor":"najeeb-kazmi","Number":"4109","RawContent":null,"Title":"Enable loading TransformerChain models in EntryPoint graphs","State":"open","Body":"Related to microsoft/NimbusML#201\r\n\r\nThe new `TransformerChain` model format cannot be used to score a dataset in NimbusML. This is because this model format cannot be loaded by `TransformModelImpl`, which is a field of `PredictorModelImpl`, which in turn is used in constructing the inputs for the entry point  graph passed by NimbusML.\r\n\r\n cc: @eerhardt @ganik ","Url":"https://github.com/dotnet/machinelearning/issues/4109","RelatedDescription":"Open issue \"Enable loading TransformerChain models in EntryPoint graphs\" (#4109)"},{"Id":"478730295","IsPullRequest":true,"CreatedAt":"2019-08-13T21:03:16","Actor":"eerhardt","Number":"4096","RawContent":null,"Title":"Enabling building ML.NET for .NET Core 3.0 in the official builds.","State":"closed","Body":"This allows for the [C# hardware intrinsics code written last summer](https://github.com/dotnet/machinelearning/pulls?q=is%3Apr+author%3Abriancylui) to be used in official builds.\r\n\r\nIt also allows us to take advantage of other new APIs in .NET Core 3.0 in the future.","Url":"https://github.com/dotnet/machinelearning/pull/4096","RelatedDescription":"Closed or merged PR \"Enabling building ML.NET for .NET Core 3.0 in the official builds.\" (#4096)"},{"Id":"480307575","IsPullRequest":true,"CreatedAt":"2019-08-13T18:40:54","Actor":"harishsk","Number":"4107","RawContent":null,"Title":"Updated docs to include PredictedLabel member","State":"open","Body":"Fixes #4024 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/4107","RelatedDescription":"Open PR \"Updated docs to include PredictedLabel member\" (#4107)"},{"Id":"480019528","IsPullRequest":false,"CreatedAt":"2019-08-13T08:13:45","Actor":"MaxAkbar","Number":"4106","RawContent":null,"Title":"Cluster Documents","State":"open","Body":"Is there a way to cluster documents\\text. Looking at the documentation [KMeansTrainer Class](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.kmeanstrainer?view=ml-dotnet) is using single as the input type. Is there a way to extend or perhaps something in a future version?\r\n\r\nI know that I can use classification but that requires a lot of work as I have many documents.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4106","RelatedDescription":"Open issue \"Cluster Documents\" (#4106)"},{"Id":"479923367","IsPullRequest":false,"CreatedAt":"2019-08-13T01:56:12","Actor":"CESARDELATORRE","Number":"4105","RawContent":null,"Title":"[ImageClassification Transfer Learning] Support additional DNN architectures","State":"open","Body":"Just a reminder that we'll need to support more powerful architectures and specialized architectures in order to cover most customer scenarios.\r\n\r\nFor instance, NASNet (notably nasnet_large and pnasnet_large), which can provide extra precision. Or for lighter models targeting slower processors,  MobileNet V1 or V2 architectures, or  nasnet_mobile.\r\n\r\nSee:\r\nhttps://www.tensorflow.org/hub/tutorials/image_retraining#other_model_architectures\r\n\r\nI wonder if we should try to make a generic catalog based on \"needs\" or \"image types\" instead of architecture names that most .NET developers won't be familiar with such as the previous names or Inceptionv3, ResNet, etc. Those names don't mean anything to most .NET developers.\r\n\r\nOPEN PRE-TRAINED MODEL:\r\nThe other feature is to be able for the user to provide their own model, but for that, we'd probably need an API with many more details, such as tensor names?","Url":"https://github.com/dotnet/machinelearning/issues/4105","RelatedDescription":"Open issue \"[ImageClassification Transfer Learning] Support additional DNN architectures\" (#4105)"},{"Id":"479901701","IsPullRequest":true,"CreatedAt":"2019-08-13T00:04:54","Actor":"harishsk","Number":"4104","RawContent":null,"Title":"Changed code path to ensure threshold is changed","State":"open","Body":"Fixes #4076 ","Url":"https://github.com/dotnet/machinelearning/pull/4104","RelatedDescription":"Open PR \"Changed code path to ensure threshold is changed\" (#4104)"},{"Id":"479567857","IsPullRequest":false,"CreatedAt":"2019-08-12T10:16:19","Actor":"nfnpmc","Number":"4103","RawContent":null,"Title":"Load/save in  Microsoft.ML from 1.3.1","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nMicrosoft Windows 10 Enterprise\r\n10.0.17763 Build 17763\r\n- **.NET Version (eg., dotnet --info)**: \r\nMicrosoft Windows [Version 10.0.17763.379]\r\n(c) 2018 Microsoft Corporation. All rights reserved.\r\n\r\n>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.508\r\n Commit:    9ba8583e91\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.508\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.12\r\n  Commit:  ccea2e606d\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nSaved trained model\r\n context.Model.Save(model, data.Schema, modelLocation);\r\nin the same class\r\nITransformer model = context.Model.Load(modelLocation, out DataViewSchema schema);\r\nworks OK.\r\n\r\nIn a different class\r\nmodel = context.Model.Load(modelLocation, out DataViewSchema schema);\r\n- **What happened?**\r\nGot exception \r\nCould not load zip, something missing at the end of zip file, apparently.\r\n- **What did you expect?**\r\nA loaded model.\r\n### Source code / logs\r\nThen after 3 days I manually changed the csproj file as NuGet could not change the versions!\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <LangVersion>7.1</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ML\" Version=\"1.3.1\" />\r\n    <PackageReference Include=\"Microsoft.ML.CpuMath\" Version=\"1.3.1\" />\r\n    <PackageReference Include=\"Microsoft.ML.DataView\" Version=\"1.3.1\" />\r\n    <PackageReference Include=\"Microsoft.ML.Dnn\" Version=\"0.15.1\" />\r\n    <PackageReference Include=\"Microsoft.ML.ImageAnalytics\" Version=\"1.3.1\" />\r\n    <PackageReference Include=\"Microsoft.ML.TensorFlow\" Version=\"1.3.1\" />\r\n    <PackageReference Include=\"Microsoft.ML.TensorFlow.Redist\" Version=\"0.14.0\" />\r\n    <PackageReference Include=\"OpenCvSharp4\" Version=\"4.1.0.20190416\" />\r\n    <PackageReference Include=\"OpenCvSharp4.runtime.win\" Version=\"4.1.0.20190416\" />\r\n  </ItemGroup>\r\n\r\nReplace 1.3.1 by 1.1.0\r\n\r\nRetest - all worked\r\nChanged them back to try to get the exact exception again.\r\nAll worked!\r\n\r\nIn a separate program, Loading the model originally saved before I changed the csproj file in the training program\r\nNodeDef mentions attr 'explicit_paddings' not in Op<name=Conv2D; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=[\"SAME\", \"VALID\"]; attr=data_format:string,default=\"NHWC\",allowed=[\"NHWC\", \"NCHW\"]; attr=dilations:list(int),default=[1, 1, 1, 1]>; NodeDef: {{node conv2d0_pre_relu/conv}}. (Check whether your GraphDef-interpreting binary is up to date with your GraphDef-generating binary.).\r\nError during class instantiation\r\nException has been thrown by the target of an invocation.\r\n\r\nLoading the new model works fine.\r\nSo I could not reproduce the issue I have been tring to solve for ages.\r\nOh, be joyful!\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4103","RelatedDescription":"Open issue \"Load/save in  Microsoft.ML from 1.3.1\" (#4103)"},{"Id":"479366523","IsPullRequest":false,"CreatedAt":"2019-08-11T12:47:46","Actor":"time888","Number":"4102","RawContent":null,"Title":" DnnEstimator.Architecture.InceptionV3  classification incorrect.","State":"open","Body":"The tensorflow_inception_graph.pb classification correct。But image size only 224.\r\nI tested. DnnEstimator.Architecture.InceptionV3\r\nDrawString \"0\" to Graphics Save to file 0.gif, and The other is the same 1.gif,2.gif,3.gif .\r\n\r\n       public static IEnumerable<ImageNetDigData> LoadImagesFromDirectory(string folder)\r\n        {\r\n\r\n            var files = Directory.GetFiles(folder, \"*.gif\",\r\n    searchOption: SearchOption.TopDirectoryOnly);\r\n            foreach (var file in files)\r\n            {\r\n                //0.gif,1.gif,2.gif.3.gif      a0.gif,a1.gif, x1.gif,x2.gif\r\n                var name = Path.GetFileName(file).Split(new char[] { '.' })[0];\r\n                var label = name.Substring(name.Length - 1, 1);\r\n\r\n                var nd = new ImageNetDigData()\r\n                {\r\n                    ImagePath = file,\r\n                    Label = label\r\n                };\r\n                yield return nd;\r\n            }\r\n        }\r\n\r\nBut classification incorrect。\r\nHow to configure parameters？\r\nGive me a sample.Thanks.","Url":"https://github.com/dotnet/machinelearning/issues/4102","RelatedDescription":"Open issue \" DnnEstimator.Architecture.InceptionV3  classification incorrect.\" (#4102)"},{"Id":"478654757","IsPullRequest":false,"CreatedAt":"2019-08-09T22:27:05","Actor":"CESARDELATORRE","Number":"4095","RawContent":null,"Title":"[ImageClassification Transfer Learning] Training crashes with no clear exception but this error code from dotnet: dotnet.exe (process 11108) exited with code -1073740791","State":"closed","Body":"When training a model with the new **'ImageClassification Transfer Learning'** component (v0.15.1) and only around **200 images**, after a couple of hours working/training, the program crashes and exist by only showing the following error (no any particular ML.NET exception to search for): \r\n\r\n`C:\\Program Files\\dotnet\\dotnet.exe (process 11108) exited with code -1073740791.`\r\n\r\n![image](https://user-images.githubusercontent.com/1712635/62732281-d3437a00-b9d8-11e9-9129-3093c39e3eb9.png)\r\n\r\nIt might be related to a low level issue such as memory leaks, not sure..\r\n\r\nHere's the code (with image dataset) I'm running:\r\n\r\nhttps://github.com/dotnet/machinelearning-samples/blob/migration/v1.3/samples/csharp/getting-started/DeepLearning_TensorFlow_TransferLearning/ImageClassification.Train/Program.cs\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4095","RelatedDescription":"Closed issue \"[ImageClassification Transfer Learning] Training crashes with no clear exception but this error code from dotnet: dotnet.exe (process 11108) exited with code -1073740791\" (#4095)"},{"Id":"478948089","IsPullRequest":false,"CreatedAt":"2019-08-09T12:24:36","Actor":"lsaintmaxent","Number":"4101","RawContent":null,"Title":"[Question] access on TrainingLabelValues to display N-Best labels","State":"closed","Body":"### System information\r\n\r\n- **Windows**:\r\n- **ML.Net version 1.3.1)**: \r\n\r\n### Issue\r\n\r\nHello,\r\n\r\nI'm trying to display N-Best Label in mulitclass text classification.\r\nSo i was trying to access to TrainingLabelValues from score column annotations by doing \r\n`var trainedClassLabels = _predictionEngine.OutputSchema.GetColumnOrNull(\"Score\").Value.Annotations.Schema.GetColumnOrNull(\"TrainingLabelValues\");`\r\n\r\nI can't figure out how am i supposed to get labels from the string vector.\r\n\r\nA little bit later, i found sfilipi's example of accessing this field in https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Tests/Scenarios/Api/Estimators/PredictAndMetadata.cs\r\n\r\ni was trying to do the same but AnnotationUtils is internal, and I can't access to `AnnotationUtils.Kinds.TrainingLabelValues`\r\n\r\n\r\nShould I Do something else to get this thing done ?\r\n\r\nThans a lot fro your time,\r\n\r\nLouis","Url":"https://github.com/dotnet/machinelearning/issues/4101","RelatedDescription":"Closed issue \"[Question] access on TrainingLabelValues to display N-Best labels\" (#4101)"},{"Id":"478938095","IsPullRequest":false,"CreatedAt":"2019-08-09T11:26:00","Actor":"nfnpmc","Number":"4100","RawContent":null,"Title":"Everything is a var type","State":"open","Body":"You are trying to explain what an IDataView is, but all the variable are of type var.\nSo is\nvar dataView = new InputObjectDataView(inputArray);\nof type IDataView or what?\nGiven that VS easily converts to the correct type why is every example in the entire website filled with 'var's so we cannot determine what's going on.\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: cebd0074-01d3-d048-305a-cfea8b4083de\n* Version Independent ID: 7f1aaf72-e345-e334-6237-d92abd3aa6d3\n* Content: [IDataView Interface (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.idataview?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML/IDataView.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/IDataView.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/4100","RelatedDescription":"Open issue \"Everything is a var type\" (#4100)"},{"Id":"478927303","IsPullRequest":false,"CreatedAt":"2019-08-09T10:56:25","Actor":"jaehyok","Number":"4099","RawContent":null,"Title":"cannot extract MaximumEntropyModelParameters from pre-trained model, for using LbfgsMaximumEntropyMulticlassTrainer.Fit(IDataView, MaximumEntropyModelParameters) Method","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: windows 10 enterprise\r\n- **.NET Version (eg., dotnet --info)**:  .Net Core 2.2\r\n- **Microsoft.ML Version**:  1.3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI want to re-train multi-class (`LbfgsMaximumEntropyMulticlassTrainer`).\r\n- **What happened?**\r\nso, I train and load model, but i cannot extract `MaximumEntropyModelParameters`.\r\n- **What did you expect?**\r\nI want to extract `MaximumEntropyModelParameters` my pre-trained model.\r\nI want to sample code using `LbfgsMaximumEntropyMulticlassTrainer.Fit(IDataView, MaximumEntropyModelParameters)` method.\r\n\r\n### Source code / logs\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n**code:**\r\n```c#\r\nMLContext _mlContext = new MLContext(seed: 0);\r\nvar pipeline = _mlContext.Transforms.Conversion.MapValueToKey(inputColumnName: \"Area\", outputColumnName: \"Label\")\r\n    .Append(_mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"Keyword\", outputColumnName: \"KeywordFeaturized\"))\r\n    .Append(_mlContext.Transforms.Concatenate(\"Features\", \"KeywordFeaturized\"));\r\nvar trainingPipeline_LbfgsMaximumEntropy = pipeline\r\n    .Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\"))\r\n    .Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\nvar trainingPipeline_LbfgsMaximumEntropy = pipeline\r\n    .Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\"))\r\n    .Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\nTrainTestData dataSplit = _mlContext.Data.TrainTestSplit(data, testFraction: 0.1);\r\nIDataView _trainingDataView = dataSplit.TrainSet;\r\nIDataView _testDataView = dataSplit.TestSet;\r\nITransformer _trainedModel2 = trainingPipeline_LbfgsMaximumEntropy.Fit(trainingDataView);\r\n_mlContext.Model.Save(_trainedModel2, _trainingDataView.Schema, _modelPath);\r\n\r\nDataViewSchema dataPrepPipelineSchema;\r\nvar dataPrepPipeline = _mlContext.Model.Load(_modelPath2, out dataPrepPipelineSchema);\r\nvar loadedModel2 = _mlContext.Model.Load(_modelPath2, out DataViewSchema modelInputSchema2);\r\nMaximumEntropyModelParameters originalModelParameters = ((IPredictionTransformer<object>)loadedModel2).Model as MaximumEntropyModelParameters;\r\n```\r\n\r\n**log:**\r\n```log\r\nSystem.InvalidCastException: Unable to cast object of type 'Microsoft.ML.Data.TransformerChain`1[Microsoft.ML.ITransformer]' to type 'Microsoft.ML.Data.TransformerChain`1[Microsoft.ML.Transforms.KeyToValueMappingTransformer]'.\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4099","RelatedDescription":"Open issue \"cannot extract MaximumEntropyModelParameters from pre-trained model, for using LbfgsMaximumEntropyMulticlassTrainer.Fit(IDataView, MaximumEntropyModelParameters) Method\" (#4099)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-17T05:30:36.7023852Z","RunDurationInMilliseconds":690}