{"Data":{"GitHub":{"Issues":[{"Id":"475365891","IsPullRequest":true,"CreatedAt":"2019-08-01T00:07:35","Actor":"vatsan-madhavan","Number":"1493","RawContent":null,"Title":"Embed Commit SHA as a string resource in native DLLs","State":"closed","Body":"Fixes #1491 \r\n\r\nEmbeds a new RC file containing a string table for any native DLL or EXE project. This string table will contain **two** pieces of information:\r\n- Commit SHA\r\n- Repo name that built this assembly. \r\n\r\n![image](https://user-images.githubusercontent.com/20246435/62249278-dfa75180-b39e-11e9-97b6-81c88652c539.png)\r\n\r\n![image](https://user-images.githubusercontent.com/20246435/62249303-efbf3100-b39e-11e9-96af-155879c82c11.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1493","RelatedDescription":"Closed or merged PR \"Embed Commit SHA as a string resource in native DLLs\" (#1493)"},{"Id":"475259085","IsPullRequest":false,"CreatedAt":"2019-08-01T00:07:34","Actor":"grubioe","Number":"1491","RawContent":null,"Title":"Add SHA in native assemblies resource files","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/issues/1491","RelatedDescription":"Closed issue \"Add SHA in native assemblies resource files\" (#1491)"},{"Id":"475409255","IsPullRequest":false,"CreatedAt":"2019-08-01T00:06:04","Actor":"vatsan-madhavan","Number":"1495","RawContent":null,"Title":"Workaround for build-failures caused by ResXCodeFileGenerator regression in dotnet-wpf-int","State":"open","Body":"Related: #1492 \r\n\r\n> WPF uses `ResXFileCodeGenerator `it its builds. We have a resx with entries like this (Documents.resx)\r\n> \r\n> ```\r\n>   <data name=\"Invalid_35x35\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\">\r\n>     <value>Invalid_35x35.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>\r\n>   </data>\r\n> ```\r\n> \r\n> It generates getters that should look like this:\r\n> \r\n> ```cs\r\n>         internal static System.Drawing.Bitmap Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((System.DrawingBitmap)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Suddenly, as of some recent VS build, `ResXFileCodeGenerator `is starting to emit files with getters that are instead like this (not the return type – they are plain `object`).\r\n> \r\n> ```cs\r\n>         /// <summary>\r\n>         ///   Looks up a localized resource of type System.Object similar to Microsoft.Build.Tasks.ResourceHandling.LiveObjectResource.\r\n>         /// </summary>\r\n>         internal static object Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((object)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Here is a standalone repro that illustrates the problem. Build with commandline msbuild (not `dotnet`, use `msbuild`, VS version dev16.3p2 29128.8.master, Int Preview).\r\n> \r\n> After building, open `obj\\Debug\\netcoreapp3.0\\MS.Internal.Documents.Resources.cs` and you can see getters that return `object` instead of specifc types.\r\n> \r\n> [resx-codegen-issue.zip](https://github.%60com/dotnet/wpf/files/3453868/resx-codegen-issue.zip)\r\n\r\n\r\n\r\n> WPF uses `ResXFileCodeGenerator `it its builds. We have a resx with entries like this (Documents.resx)\r\n> \r\n> ```\r\n>   <data name=\"Invalid_35x35\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\">\r\n>     <value>Invalid_35x35.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>\r\n>   </data>\r\n> ```\r\n> \r\n> It generates getters that should look like this:\r\n> \r\n> ```cs\r\n>         internal static System.Drawing.Bitmap Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((System.DrawingBitmap)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Suddenly, as of some recent VS build, `ResXFileCodeGenerator `is starting to emit files with getters that are instead like this (not the return type – they are plain `object`).\r\n> \r\n> ```cs\r\n>         /// <summary>\r\n>         ///   Looks up a localized resource of type System.Object similar to Microsoft.Build.Tasks.ResourceHandling.LiveObjectResource.\r\n>         /// </summary>\r\n>         internal static object Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((object)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Here is a standalone repro that illustrates the problem. Build with commandline msbuild (not `dotnet`, use `msbuild`, VS version dev16.3p2 29128.8.master, Int Preview).\r\n> \r\n> After building, open `obj\\Debug\\netcoreapp3.0\\MS.Internal.Documents.Resources.cs` and you can see getters that return `object` instead of specifc types.\r\n> \r\n> [resx-codegen-issue.zip](https://github.%60com/dotnet/wpf/files/3453868/resx-codegen-issue.zip)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1495","RelatedDescription":"Open issue \"Workaround for build-failures caused by ResXCodeFileGenerator regression in dotnet-wpf-int\" (#1495)"},{"Id":"475377357","IsPullRequest":false,"CreatedAt":"2019-07-31T22:40:09","Actor":"acemod13","Number":"1494","RawContent":null,"Title":"Missing PlatformTarget tags breaks Ready2Run","State":"closed","Body":"* .NET Core Version: 3.0.100-preview7-012821\r\n* Windows version: Windows 10 (1903, Build 18362.267)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nI noticed an issue where if the <PlatformTarget> tag is missing for one of the build configurations in the csproj file (usually, it's on projects that migrated from .NET Framework by hand) will break the Publishing Ready2Run option. An example of how it could cause it is attempting to make a self-contained win-x64 package (with the <PublishReady2Run> tag set to true) using the Release | Any CPU build configuration. If the PlatformTarget tag is missing, it assumes that it has to compile to x86. This causes an issue where 32-bit binaries have the wrong R2R image (the Ahead-Of-Time compiler requires that the binary and the image to match, so 32-bit binary must have a 32-bit R2R image), causing a crash.\r\n \r\n **Actual behavior:**\r\nThe app will start, taking up some RAM, but the usage will go to 1MB (or lower) before closing.\r\n \r\n **Expected behavior:**\r\nThe app loads up as normal.\r\n \r\n **Minimal repro:**\r\nI have a repo that is affected by the bug and it's pretty small (it's a small wrapper for a compiler): https://github.com/acemod13/RMMVCookTool\r\n\r\nI'll see if I can make an even smaller repro app.\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/1494","RelatedDescription":"Closed issue \"Missing PlatformTarget tags breaks Ready2Run\" (#1494)"},{"Id":"475356330","IsPullRequest":false,"CreatedAt":"2019-07-31T21:03:10","Actor":"vatsan-madhavan","Number":"1492","RawContent":null,"Title":"dotnet-wpf-int builds fail due to ResXCodeFileGenerator regression in recent dev16.3p2 builds","State":"open","Body":"\r\nWPF uses `ResXFileCodeGenerator `it its builds. We have a resx with entries like this (Documents.resx)\r\n\r\n```xml\r\n  <data name=\"Invalid_35x35\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\">\r\n    <value>Invalid_35x35.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>\r\n  </data>\r\n```\r\n\r\nIt generates getters that should look like this: \r\n\r\n``` C#\r\n        internal static System.Drawing.Bitmap Invalid_35x35 {\r\n            get {\r\n                object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n                return ((System.DrawingBitmap)(obj));\r\n            }\r\n        }\r\n```\r\n\r\nSuddenly, as of some recent VS build, `ResXFileCodeGenerator `is starting to emit files with getters that are instead like this (not the return type – they are plain `object`). \r\n\r\n``` C#\r\n        /// <summary>\r\n        ///   Looks up a localized resource of type System.Object similar to Microsoft.Build.Tasks.ResourceHandling.LiveObjectResource.\r\n        /// </summary>\r\n        internal static object Invalid_35x35 {\r\n            get {\r\n                object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n                return ((object)(obj));\r\n            }\r\n        }\r\n```\r\n\r\nHere is a standalone repro that illustrates the problem. Build with commandline msbuild (not `dotnet`, use `msbuild`, VS version dev16.3p2 29128.8.master, Int Preview). \r\n\r\nAfter building, open `obj\\Debug\\netcoreapp3.0\\MS.Internal.Documents.Resources.cs` and you can see getters that return `object` instead of specifc types. \r\n\r\n[resx-codegen-issue.zip](https://github.`com/dotnet/wpf/files/3453868/resx-codegen-issue.zip)","Url":"https://github.com/dotnet/wpf/issues/1492","RelatedDescription":"Open issue \"dotnet-wpf-int builds fail due to ResXCodeFileGenerator regression in recent dev16.3p2 builds\" (#1492)"},{"Id":"475258354","IsPullRequest":false,"CreatedAt":"2019-07-31T17:05:10","Actor":"grubioe","Number":"1490","RawContent":null,"Title":"A11y_.NETCore3.0(WPF)_WPFAnnotationsStyling_Screenreader: The options present in the \"StickyNote Style\" combo box is not announced to the screen reader users.","State":"open","Body":"Copied from VSO [957351](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/957351)\r\n\r\n\r\nEnvironment Details:\r\nApplication Name: .NET Core 3.0 (WPF)\r\n\r\n\r\nApplication version: VS 2019 Preview 4.7.03190\r\n\r\nWindows Version: Windows10\r\n\r\nScreenReader Version: Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n\r\n\r\nRepro Steps:\r\n\r\n\r\n1) Run exe file for \"AnnotationsStyling\" from the build app folder provided.\r\n2) Main Window for \"AnnotationsStyling\" solution will appear.\r\n3) Start screen reader.\r\n4) Navigate to the \"StickyNote Style\" combo box and navigate through it's options.\r\n5) Listen how are they announced.\r\n\r\n\r\nActual:\r\n\r\nWhen screen reader users navigates through the options of the  \"StickyNote Style\" combo box and the option names are not announced as per it's visual appearance on the screen. \r\n\r\n\r\n\r\nThe same issue is observed using the both the screen readers i.e. Narrator and NVDA.\r\n\r\n\r\n\r\nExpected:\r\n\r\nThe options of the  \"StickyNote Style\" combo box should be announced properly to the screen reader users as per it's visual appearance.\r\n\r\n\r\n\r\nUser Impact:\r\n\r\nIf the options of a combo box is not announced correctly to the screen reader users then they might not understand which option should be selected and they will also get confused whether the option which they are selecting is correct or not.\r\n\r\n\r\n\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS 1.3.1\r\n\r\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}","Url":"https://github.com/dotnet/wpf/issues/1490","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF)_WPFAnnotationsStyling_Screenreader: The options present in the \"StickyNote Style\" combo box is not announced to the screen reader users.\" (#1490)"},{"Id":"475191589","IsPullRequest":true,"CreatedAt":"2019-07-31T15:11:11","Actor":"dotnet-maestro[bot]","Number":"1489","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190731.3\r\n- **Date Produced**: 7/31/2019 2:40 PM\r\n- **Commit**: 733090b305bc66e34affe64e938dfe3c08dcaa03\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19381.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1489","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1489)"},{"Id":"475152033","IsPullRequest":true,"CreatedAt":"2019-07-31T14:01:05","Actor":"dotnet-maestro[bot]","Number":"1488","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190731.2\r\n- **Date Produced**: 7/31/2019 12:58 PM\r\n- **Commit**: 3a383a329c1f785a981997c16105ed5816e8d25e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19381.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1488","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1488)"},{"Id":"475105395","IsPullRequest":true,"CreatedAt":"2019-07-31T12:54:09","Actor":"dotnet-maestro[bot]","Number":"1487","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190730.3\r\n- **Date Produced**: 7/30/2019 6:57 PM\r\n- **Commit**: def377f94747dac91482aad67b33a1c011ffc770\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19380.3\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1487","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1487)"},{"Id":"475099931","IsPullRequest":true,"CreatedAt":"2019-07-31T12:41:20","Actor":"dotnet-maestro[bot]","Number":"1486","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190731.1\r\n- **Date Produced**: 7/31/2019 11:48 AM\r\n- **Commit**: bc832c4ad6ad4729dac716d4486f9f2fd4c99e64\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19381.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1486","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1486)"},{"Id":"474929253","IsPullRequest":false,"CreatedAt":"2019-07-31T04:27:13","Actor":"Berrysoft","Number":"1485","RawContent":null,"Title":"Feature: new WPF style for Windows 10","State":"open","Body":"The WPF style now used on Windows 10 doesn't match the legacy controls, which is created by WinForms. Here is a screenshot to compare some of them:\r\n\r\n![image](https://user-images.githubusercontent.com/37586447/62183882-73245680-b38e-11e9-9975-84a097a38be2.png)\r\n\r\nI suggest we should write a set of new style to match Windows 10 WinForms style, and also another new style for dark mode in Windows 10.","Url":"https://github.com/dotnet/wpf/issues/1485","RelatedDescription":"Open issue \"Feature: new WPF style for Windows 10\" (#1485)"},{"Id":"474812673","IsPullRequest":true,"CreatedAt":"2019-07-30T21:16:45","Actor":"dotnet-maestro[bot]","Number":"1484","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.7\r\n- **Date Produced**: 7/30/2019 8:02 PM\r\n- **Commit**: 3621a26c7f0e62d798cedc4d19299509416f7f5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.7\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1484","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1484)"},{"Id":"474799174","IsPullRequest":true,"CreatedAt":"2019-07-30T20:38:59","Actor":"dotnet-maestro[bot]","Number":"1483","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.6\r\n- **Date Produced**: 7/30/2019 8:00 PM\r\n- **Commit**: 1a147e1081cc5f172ff6bb60e66e0d997cd6e8ae\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.6\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1483","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1483)"},{"Id":"474742714","IsPullRequest":false,"CreatedAt":"2019-07-30T18:29:47","Actor":"vsfeedback","Number":"1482","RawContent":null,"Title":"MSBuilds fail from BC2012 error.. Can't open file for writing: Access to the path … is denied.","State":"open","Body":"<p>VSF_TYPE_MARKDOWNI’ve put up with this error for over a year now because I couldn’t fix it but I could work around it. However, now that the error is happening on the Build Server it is essential that I get a remedy. There are a lot of discussions on the forums about this, including mine. None of the recommended solutions have worked for me.</p><p>What happens is that when I run a clean-and-build or a rebuild the error happens. However, a subsequent build will work. That’s how I worked around it all that time; I just pressed Ctrl-Shift-B over and over until all the offending errors went away. I can’t do that repetitive build scheme on the build server, so this needs to be addressed.</p><p>It only happens with projects that contain xaml files, but not all projects that contain xaml files are affected. It may be due to the first pass of the markup compiler locking the DLL such that the second pass can’t unlock it. There seems to be a correspondence between projects that produce a [[name]_[random]_wpftmp.[proj]](https://developercommunity.visualstudio.com/content/problem/210156/msbuild-is-adding-a-random-hash-and-wpftmp-to-my-a.html) file.  It happens in both VS 2017 and VS 2019. I attached a simple single project solution that will reproduce it; just do a **re**build each time. Additionally, the diagnostic build log is attached.</p><p>Mark</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/549296/msbuiilds-fail-from-bc2012-error-cant-open-file-fo.html\nVSTS ticketId: 857501_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/28/2019, 01:51 AM (93 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/1482","RelatedDescription":"Open issue \"MSBuilds fail from BC2012 error.. Can't open file for writing: Access to the path … is denied.\" (#1482)"},{"Id":"474685062","IsPullRequest":true,"CreatedAt":"2019-07-30T16:51:21","Actor":"dotnet-maestro[bot]","Number":"1481","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.5\r\n- **Date Produced**: 7/30/2019 3:50 PM\r\n- **Commit**: 1fb126fad97d5293b71c1c8d64f643aa4a00cfff\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.5\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1481","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1481)"},{"Id":"474671114","IsPullRequest":true,"CreatedAt":"2019-07-30T16:14:29","Actor":"dotnet-maestro[bot]","Number":"1478","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.4\r\n- **Date Produced**: 7/30/2019 3:49 PM\r\n- **Commit**: f8c3968d5cc0602e4f6e3343d334d585da468fb3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview8.19380.4\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview8-28379-05 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1478","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1478)"},{"Id":"474674931","IsPullRequest":false,"CreatedAt":"2019-07-30T16:09:01","Actor":"grubioe","Number":"1480","RawContent":null,"Title":"Port LocBaml WPF application localization tool to .NET core","State":"open","Body":"Transferred from WPF Samples Repo [#85](https://github.com/microsoft/WPF-Samples/issues/85)\r\n\r\nhe LocBaml tool is now available in the Wpf-Samples repo: https://github.com/Microsoft/WPF-Samples/tree/master/Tools/LocBaml. The current version of the source matches the .NET Framework version, with additional code sanitziation, header updates, and a new SDK-style project file. The tool still needs to be ported to .NET core, and the project file sould be updated to target both netcoreapp3.0 and net472.\r\n\r\nCc: @ryalanms @vatsan-madhavan ","Url":"https://github.com/dotnet/wpf/issues/1480","RelatedDescription":"Open issue \"Port LocBaml WPF application localization tool to .NET core\" (#1480)"},{"Id":"474673678","IsPullRequest":false,"CreatedAt":"2019-07-30T16:06:24","Actor":"Thraka","Number":"1479","RawContent":null,"Title":"Thickness should support ctor of all three common ways to create a thickness.","State":"open","Body":"Related to https://github.com/dotnet/dotnet-api-docs/pull/2569\r\n\r\nSince the ThicknessConverter is one of the most common ways of creating a Thickness object, the Thickness object should support the 3 types of conversion on the ctor.\r\n\r\n| | |\r\n| --- | --- |\r\n| `int` | same value for all four sides |\r\n| `int, int` | values for leftright and topbottom |\r\n| `int, int, int, int` | values for each individual side |","Url":"https://github.com/dotnet/wpf/issues/1479","RelatedDescription":"Open issue \"Thickness should support ctor of all three common ways to create a thickness.\" (#1479)"},{"Id":"474604141","IsPullRequest":true,"CreatedAt":"2019-07-30T14:22:15","Actor":"dotnet-maestro[bot]","Number":"1477","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.1\r\n- **Date Produced**: 7/30/2019 1:05 PM\r\n- **Commit**: 54a8123b18fa83469961269ea30fb20f478a3392\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1477)"},{"Id":"474581638","IsPullRequest":true,"CreatedAt":"2019-07-30T13:57:00","Actor":"dotnet-maestro[bot]","Number":"1476","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.2\r\n- **Date Produced**: 7/30/2019 1:09 PM\r\n- **Commit**: 8844ce90338c5c637f5d59722e8de250f2cd71c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1476)"},{"Id":"474566605","IsPullRequest":true,"CreatedAt":"2019-07-30T13:36:49","Actor":"dotnet-maestro[bot]","Number":"1475","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190729.20\r\n- **Date Produced**: 7/29/2019 7:21 PM\r\n- **Commit**: 5661e1f6587b4793365a4762dbda973a6547ad17\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19379.20\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1475","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1475)"},{"Id":"474546599","IsPullRequest":true,"CreatedAt":"2019-07-30T13:03:34","Actor":"dotnet-maestro[bot]","Number":"1474","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190729.29\r\n- **Date Produced**: 7/29/2019 10:51 PM\r\n- **Commit**: 84d9a013b66c3e14a67ace0a99ae84e6eb8b6a7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19379.29\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1474","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1474)"},{"Id":"474403972","IsPullRequest":false,"CreatedAt":"2019-07-30T06:46:26","Actor":"vsfeedback","Number":"1473","RawContent":null,"Title":"Potentially spurious warning  'IsChecked' property not found on 'object' ''RibbonMenuButton' ?","State":"open","Body":"<p>It seems like  will throw a spurious warning at runtime. I've noticed this and also found it discussed here:</p><p><a href=\"https://stackoverflow.com/questions/10462167/wpf-and-ribboncontrolslibrary-throws-a-bindingexpression-path-error-without-even\">https://stackoverflow.com/questions/10462167/wpf-and-ribboncontrolslibrary-throws-a-bindingexpression-path-error-without-even</a></p><p>My own example is:</p><p>System.Windows.Data Warning: 40 : BindingExpression path error: 'IsChecked' property not found on 'object' '' RibbonMenuButton' (Name='NavRotate2DButton')'. BindingExpression:Path=IsChecked; DataItem='RibbonMenuButton' (Name='NavRotate2DButton'); target element is 'RibbonToggleButton' (Name='PART_ToggleButton'); target property is 'NoTarget' (type 'Object')</p><p>I'm not use any IsChecked properly with the NavRotate2DButton object in my code.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/665487/potentially-spurious-warning-ischecked-property-no.html\nVSTS ticketId: 956791_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/1473","RelatedDescription":"Open issue \"Potentially spurious warning  'IsChecked' property not found on 'object' ''RibbonMenuButton' ?\" (#1473)"},{"Id":"474296331","IsPullRequest":false,"CreatedAt":"2019-07-29T23:10:33","Actor":"grubioe","Number":"1472","RawContent":null,"Title":"July Update for WPF on .NET Core","State":"open","Body":"# July Update for WPF on .NET Core \r\n\r\nPreview 7 was [released last week](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-7/) and with that we are now on the final two months before the official release in September. This next month we are planning on open sourcing the final set of managed assemblies and continuing to close all 3.0 bugs. \r\n\r\n\r\nLast month we [shared](https://github.com/dotnet/wpf/issues/1113) all the great progress from the team and even though Summer is here we've kept fixing bugs and closing on the final set of release work.  Here are a few callouts:\r\n\r\n* Improved Visual Studio templates and experience: @jmarolf from the Visual Studio team [added](https://github.com/dotnet/wpf/issues/1297) VS support to add WPF Class Library projects and [control library templates](https://github.com/dotnet/wpf/pull/1005) and [improve](https://github.com/dotnet/wpf/pull/1007) the experience when creating a new WPF .NET Core 3.0 app \r\n  * This is available in `dotnet new` in the latest core-sdk builds and will become available in Visual Studio 2019 soon. \r\n* @vatsan-madhavan [Open Sourced](https://github.com/microsoft/WPF-Samples/tree/master/Tools/BamlReflector) our test tool that allows BAML to XAML decompilation.  Check it out! \r\n* @rladuca fixed behavior changes that derived from missing functionality [#585](https://github.com/dotnet/wpf/issues/585) by converting non-seekable PackagePart streams to seekable.  @rladuca also [cleaned up](https://github.com/dotnet/wpf/pull/1098) unused source code from PresentationFramework. \r\n* @arpitmathur [resolved](https://github.com/dotnet/wpf/pull/1278) various accessibility issues. \r\n* @stevenbrix resolved various test failures([1111](https://github.com/dotnet/wpf/pull/1111), [1301](https://github.com/dotnet/wpf/pull/1301)).\r\n* @ojhad and @vatsan-madhavan finalized all the work related to removing deprecated security features ([1093](https://github.com/dotnet/wpf/pull/1093), [1286](https://github.com/dotnet/wpf/pull/1286)). \r\n* @ojhad fixed various crashes ([664](https://github.com/dotnet/wpf/issues/664),[579](https://github.com/dotnet/wpf/issues/579)) and issues ([1141](https://github.com/dotnet/wpf/issues/1141), [848](https://github.com/dotnet/wpf/issues/848)).\r\n* @ryalanms fixed a [localization issue](https://github.com/dotnet/wpf/pull/1285) and resolved various issues ([1300](https://github.com/dotnet/wpf/pull/1300), [1098](https://github.com/dotnet/wpf/pull/1098)) related to our build infrastructure. \r\n* @vatsan-madhavan on-boarded a new [C++ compiler toolset](https://github.com/dotnet/wpf/pull/1375) to help with crossgen issues and [enabled SplashScreen build-action](https://github.com/dotnet/wpf/pull/1276).\r\n\r\n\r\nAlso, you'll notice a [pinned issue](https://github.com/dotnet/wpf/issues/1378) related to providing feedback to the Windows Template Studio Team.  Please review and provide feedback as they are scoping adding WPF project templates to their WTS Visual Studio extension. \r\n\r\nThank again for your engagement, contributions and feedback. If you have questions, suggestions, or concerns, please let us know.","Url":"https://github.com/dotnet/wpf/issues/1472","RelatedDescription":"Open issue \"July Update for WPF on .NET Core\" (#1472)"},{"Id":"474250976","IsPullRequest":false,"CreatedAt":"2019-07-29T20:52:03","Actor":"grubioe","Number":"1471","RawContent":null,"Title":"A11y_.NETCore3.0(WPF)_WPFAnnotationsStyling_Keyboard: The keyboard users are not able to perform various actions using keyboard","State":"open","Body":"Copied from VSO [956777](https://devdiv.visualstudio.com/DevDiv/_queries/edit/956777/)\r\n\r\nCheck out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.”\r\n\r\nEnvironment Details:\r\nApplication Name: .NET Core 3.0 (WPF)\r\n\r\n\r\nApplication version: VS 2019 Preview 4.7.03190\r\n\r\nWindows Version: Windows10\r\n\r\nScreenReader Version: Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n\r\n\r\nRepro Steps:\r\n\r\n\r\n1) Run exe file for \"AnnotationsStyling\" from the build app folder provided.\r\n2) Main Window for \"AnnotationsStyling\" solution will appear.\r\n3) Start screen reader.\r\n4) Navigate to the contents in the main window.\r\n\r\n\r\nActual:\r\n\r\nIssue 1:\r\n\r\nWhen keyboard users navigate using the \"Tab\" key within the main window they are unable to access the \"Next Page\",  \"Decrease Zoom\" and \"Increase Zoom\" buttons.\r\n\r\n\r\n\r\nThe same issue is observed using the both the screen readers i.e. Narrator and NVDA.\r\n\r\n\r\n\r\nIssue 2:\r\n\r\nWhen users selects any text content then the user can either highlight it with different colors, remove the color or change the color of the highlighted text, provide a description to a certain text and even can provide link to the text. But these all the actions cannot be performed using keyboard and a mouse user can per these functions.\r\n\r\n\r\n\r\nThe same issue is observed using the both the screen readers i.e. Narrator and NVDA.\r\n\r\n\r\n\r\nExpected:\r\n\r\nAll the actions that a mouse users is able to perform the same action keyboard and screen reader users  should be available to perform using keyboard.\r\n\r\n\r\n\r\n\r\nUser Impact:\r\n\r\nIf the screen reader and keyboard users are not able to interact with the interactive elements using the keyboard then they might not be able to perform all the functions as a mouse user is able to access.\r\n\r\n\r\n\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS 1.3.1\r\n\r\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}\r\n\r\nMAS 2.1.1\r\n\r\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={8492c4eb-c179-40ae-8777-cd044ed725a2}","Url":"https://github.com/dotnet/wpf/issues/1471","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF)_WPFAnnotationsStyling_Keyboard: The keyboard users are not able to perform various actions using keyboard\" (#1471)"},{"Id":"474250512","IsPullRequest":false,"CreatedAt":"2019-07-29T20:50:58","Actor":"grubioe","Number":"1470","RawContent":null,"Title":"A11y_.NETCore3.0(WPF)_WPF ControlsAndLayout_Layout Dock panel_ScreenReader: Screen reader focus is not moving in proper logical order. ","State":"open","Body":"Copied from VSO [956760](https://devdiv.visualstudio.com/DevDiv/_queries/edit/956760/)\r\n\r\nCheck out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.”\r\n\r\nEnvironment Details:\r\n\r\nApplication Name: .NET Core 3.0 (WPF)\r\n\r\n\r\n.NET Core SDK version:  3.0.100-preview8-013442\r\nWindows Version: Windows10\r\n\r\n\r\nScreenReader Version: Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n\r\n\r\nRepro Steps:\r\n\r\n1) Download the latest .NET Core 3 daily build given on .NET Core daily builds page. \r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n3) Run exe file for \"ControlsAndLayout\" from the build app folder provided. \r\n4) Main Window for \"ControlsAndLayout\" solution will appear. \r\n5) From the Sample Library pane under Layout, select \"DockPanel\". \r\n6) Turn on screen reader\r\n7) Navigate to main content.\r\n\r\nActual:\r\n\r\nScreen reader focus is not moving in proper logical order. i.e. from left to right and then Top to bottom.\r\n\r\n\r\nExpected:\r\n\r\nScreen reader focus should move in proper logical order/\r\n\r\n\r\nUser Impact:\r\n\r\nThe screen reader user will get confused  for content ordering.\r\n\r\n\r\n\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS 1.3.2:\r\n\r\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={1ee227a7-e3c5-47b8-ab18-48ca8595077b}\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1470","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF)_WPF ControlsAndLayout_Layout Dock panel_ScreenReader: Screen reader focus is not moving in proper logical order. \" (#1470)"},{"Id":"474250090","IsPullRequest":false,"CreatedAt":"2019-07-29T20:50:00","Actor":"grubioe","Number":"1469","RawContent":null,"Title":"A11y_.NETCore3.0(WPF)_WPFBrush_LinearGradient-InteractiveExample_ScreenReader: screen reader  focus is not going on the text which is inside the Markup expandable group.","State":"open","Body":"Copied from VSO [956749](https://devdiv.visualstudio.com/DevDiv/_queries/edit/956749/)\r\n\r\nCheck out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.”\r\n\r\nEnvironment Details:\r\n\r\nApplication Name: .NET Core 3.0 WPF\r\n\r\n\r\n.NET Core SDK version:  3.0.100-preview8-013442\r\nWindows Version: Windows10\r\n\r\nScreen Reader Vesion : Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n\r\n\r\nRepro Steps:\r\n\r\n\r\n1) Run exe file for \"Brushes\" from the build app folder provided.\r\n2) Main Window for \"Brush Examples\" solution will appear.​\r\n3) Navigate to \"Gradient Examples\" option from left navigation and hit enter key.​\r\n4) Navigate to \"Linear Gradient Brush Example\" option and hit enter key.​\r\n5) Navigate to \"Interactive Examples\" option and hit enter key.  ​\r\n6) Main window for \"Interactive Examples\" option will appear.\r\n7) Start screen reader.\r\n8) Navigate Markup expandable group\r\n\r\n\r\nActual:\r\n\r\nNvda Focus is not going on the text which is inside the Markup expandable group.\r\n\r\n\r\n\r\nExpected:\r\n\r\nScreen reader should read the inside text of the Markup expandable group\r\n\r\nUser Impact:\r\n\r\nScreen reader user may not able to access this information.\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS 1.3.1\r\n\r\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}","Url":"https://github.com/dotnet/wpf/issues/1469","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF)_WPFBrush_LinearGradient-InteractiveExample_ScreenReader: screen reader  focus is not going on the text which is inside the Markup expandable group.\" (#1469)"},{"Id":"474249681","IsPullRequest":false,"CreatedAt":"2019-07-29T20:49:00","Actor":"grubioe","Number":"1468","RawContent":null,"Title":"A11y_.NETCore3.0(WPF)_WPF ControlsAndLayout_Controls TabControl_Keyboard: Tab get selected when keyboard focus moves from one tab to other.","State":"open","Body":"Copied fro,m VSO [956741](https://devdiv.visualstudio.com/DevDiv/_queries/edit/956741/)\r\n\r\nCheck out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.”\r\n\r\nEnvironment Details:\r\nApplication Name: .NET Core 3.0 WPF\r\n\r\n.NET Core SDK version:  3.0.100-preview8-013442\r\n\r\nWindows Version: Windows10\r\nScreenReader Version: Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link. \r\n\r\n\r\nRepro Steps:\r\n\r\n1) Open Visual Studio.\r\n\r\n2) Hit on File and select Open->Project/Solution.\r\n\r\n3) Run exe file for \"ControlsAndLayout\" from the build app folder provided. \r\n4)Main Window for \"ControlsAndLayout\" solution will appear. \r\n5)From the Sample Library pane under Controls, select \"TabControl\". \r\n6) Navigate to any menu item using keyboard.\r\n\r\n\r\nActual:\r\n\r\nTab get selected when keyboard focus moves from one tab to other.\r\nImage\r\n\r\n\r\nExpected:\r\nOnly On focus any item should not get selected.\r\n\r\n\r\n\r\nUser Impact:\r\n\r\nKeyboard only user will get confused while navigating as it is directly get selected.\r\n\r\n\r\n\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS 3.2.1:\r\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={a4bbd37d-ee11-485e-b5c8-0539f0ac94b2}\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1468","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF)_WPF ControlsAndLayout_Controls TabControl_Keyboard: Tab get selected when keyboard focus moves from one tab to other.\" (#1468)"},{"Id":"474249320","IsPullRequest":false,"CreatedAt":"2019-07-29T20:48:03","Actor":"grubioe","Number":"1467","RawContent":null,"Title":"A11y_.NETCore3.0(WPF)_WPFConcepts_MenuSample_Screenreader: Screen reader is announcing wrong ordering for the file /edit / Project menuitem ","State":"open","Body":"Copied from VSO[ 956410](https://devdiv.visualstudio.com/DevDiv/_queries/edit/956410/)\r\n\r\nCheck out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.”\r\n\r\nEnvironment Details:\r\n\r\nApplication Name: .NET Core 3.0 WPF\r\n\r\n\r\n.NET Core SDK version:  3.0.100-preview8-013442\r\nWindows Version: Windows10\r\n\r\nScreen Reader Vesion : Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n\r\n\r\nRepro Steps:\r\n\r\n\r\n1) Run exe file for \"Concepts\" from the build app folder provided. \r\n2) Main Window for \"Concepts\" solution will appear. \r\n3) Select \"Samples\" tab item. \r\n4) From right navigation under \"Controls\" select \"Menu Sample\". \r\n5) Navigate to the preview tab and the to \"File\"/\"Edit\" menu item.\r\n6) start screen reader and observe the screen reader announcement.\r\n\r\nActual:\r\n\r\nScreen reader is announcing wrong ordering for the file /edit / Project menu item.\r\nfor example there are four sub menu inside the Edit menu item but screen reader is announcing for first sub menu item as 1 of 5.\r\nExpected:\r\n\r\nScreen reader should announce proper ordering for sub menu item.\r\n\r\nUser Impact:\r\n\r\nScreen reader user may get confuse with ordering inside the menuitem.\r\n\r\n\r\n\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS1.3.1\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}","Url":"https://github.com/dotnet/wpf/issues/1467","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF)_WPFConcepts_MenuSample_Screenreader: Screen reader is announcing wrong ordering for the file /edit / Project menuitem \" (#1467)"},{"Id":"474248927","IsPullRequest":false,"CreatedAt":"2019-07-29T20:47:07","Actor":"grubioe","Number":"1466","RawContent":null,"Title":"A11y_.NETCore3.0(WPF )_WPFConcepts_MenuSample_Screenreader: Screen reader is announcing the wrong name of the drop down menu item \"Project\"","State":"open","Body":"Copied from VSO: [956407](https://devdiv.visualstudio.com/DevDiv/_queries/edit/956407/)\r\nCheck out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.”\r\n\r\nEnvironment Details:\r\n\r\nApplication Name: .NET Core 3.0 WPF\r\n\r\n\r\n.NET Core SDK version:  3.0.100-preview8-013442\r\nWindows Version: Windows10\r\n\r\nScreen Reader Vesion : Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n\r\n\r\nRepro Steps:\r\n\r\n\r\n1) Run exe file for \"Concepts\" from the build app folder provided. \r\n2) Main Window for \"Concepts\" solution will appear. \r\n3) Select \"Samples\" tab item. \r\n4) From right navigation under \"Controls\" select \"Menu Sample\". \r\n5) Navigate to the preview tab and the to Project menu item.\r\n6) start screen reader and observe the screen reader announcement.\r\n\r\nActual:\r\n\r\nScreen reader is announcing the wrong name of the menu item \"Project\" and sub menu item inside \"Project\".\r\n\r\nExpected:\r\n\r\nScreen reader should announce proper name of the controls.\r\n\r\nUser Impact:\r\n\r\nScreen reader user may not identify the control as name is incorrect.\r\n\r\n\r\n\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS1.3.1\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}\r\n","Url":"https://github.com/dotnet/wpf/issues/1466","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF )_WPFConcepts_MenuSample_Screenreader: Screen reader is announcing the wrong name of the drop down menu item \"Project\"\" (#1466)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-01T05:30:57.1777077Z","RunDurationInMilliseconds":570}