{"Data":{"Blog":{"FeedItems":[{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"},{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7439213938","Type":"PullRequestEvent","CreatedAt":"2018-03-27T05:15:34","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17245","RelatedDescription":"Opened pull request \"Delete MemoryExtensions.AsBytes\" (#17245) at dotnet/coreclr","RelatedBody":"Moved to MemoryMarshal"},{"Id":"7439166883","Type":"PullRequestEvent","CreatedAt":"2018-03-27T04:56:36","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17219","RelatedDescription":"Merged pull request \"New chunk should be equal/larger than the one it replaces\" (#17219) at dotnet/coreclr","RelatedBody":"Fixes #17205\r\n\r\nIn PR dotnet/coreclr#16926 we changed the behavior on a non-empty StringBuilder such that it will **not** always grow the last chunk array length on `sb.Length=value` operation where value is smaller than current Length.\r\n\r\nThe goal for this change was to keep Capacity within finite range as we loop multiple times to Clear and Append and Insert into the StringBuilder.\r\n\r\nThis PR removes the assertion that makes sure we always grow it's last chunk array.\r\n\r\n\r\n\r\ncc: @jkotas @danmosemsft  @benaadams "},{"Id":"7439166879","Type":"IssuesEvent","CreatedAt":"2018-03-27T04:56:36","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17205","RelatedDescription":"Closed issue \"Failure: StringBuilder.set_Length: The new chunk should be larger than the one it is replacing.\" (#17205) at dotnet/coreclr","RelatedBody":"For `Windows_NT x64 Checked corefx_baseline` and `Ubuntu x64 Checked corefx_baseline` https://github.com/dotnet/coreclr/pull/17204 also https://github.com/dotnet/coreclr/pull/17196#issuecomment-375945569\r\n\r\nUbuntu x64 Checked Build and Test (Jit - CoreFx) failure:\r\n```\r\nDiscovering: System.Security.SecureString.Tests\r\nDiscovered:  System.Security.SecureString.Tests\r\nStarting:    System.Security.SecureString.Tests\r\nAssertion Failed\r\nThe new chunk should be larger than the one it is replacing.\r\n\r\n   at System.Text.StringBuilder.set_Length(Int32 value)\r\n   at System.Text.StringBuilder.Remove(Int32 startIndex, Int32 length)\r\n   at System.Security.Tests.SecureStringTests.GrowAndContract_Small() in /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline_prtest/_/fx/src/System.Security.SecureString/tests/SecureStringTests.cs:line 426\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Xunit.Sdk.TestInvoker`1.<>c__DisplayClass46_1.<<InvokeTestMethodAsync>b__1>d.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at ...\r\n```\r\n\r\nPerhaps related to https://github.com/dotnet/coreclr/pull/16926?\r\n\r\n/cc @maryamariyan @danmosemsft @jkotas "},{"Id":"7439127458","Type":"PullRequestEvent","CreatedAt":"2018-03-27T04:39:57","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16641","RelatedDescription":"Closed pull request \"Update ILLink to version 0.1.4-preview-1421602\" (#16641) at dotnet/coreclr","RelatedBody":"This build has a support for SHA256 source checksum algorithm. Previously Mono.Cecil didn't write correct algorithm GUID into the PDBs, which resulted in bad PDBs.\r\nSee jbevain/cecil#488"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7438599609","Type":"PullRequestEvent","CreatedAt":"2018-03-27T01:23:09","Actor":"mairaw","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8906","RelatedDescription":"Opened pull request \"added in use info to the --version option\" (#8906) at dotnet/cli","RelatedBody":"To make it more clear that --version displays the version in use. Might need to say on the current path too. Thoughts?\r\n\r\n/cc @KathleenDollard @Rick-Anderson "},{"Id":"7438269486","Type":"PullRequestEvent","CreatedAt":"2018-03-26T23:24:37","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8905","RelatedDescription":"Merged pull request \"Better error message to guide user when there is only preview version in the feed\" (#8905) at dotnet/cli","RelatedBody":"fix https://github.com/dotnet/cli/issues/8762"},{"Id":"7438054744","Type":"PullRequestEvent","CreatedAt":"2018-03-26T22:21:54","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8904","RelatedDescription":"Merged pull request \"Update test SDK for 2.0 templates in the 15.7 SDK\" (#8904) at dotnet/cli","RelatedBody":"Updates the Test SDK used in the 2.0 templates for the 15.7 SDK (carries the changes from https://github.com/dotnet/templating/pull/1483)\r\n\r\ncc @mayankbansal018"},{"Id":"7437945479","Type":"PullRequestEvent","CreatedAt":"2018-03-26T21:54:32","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8905","RelatedDescription":"Opened pull request \"Preview failed install need version\" (#8905) at dotnet/cli","RelatedBody":"fix https://github.com/dotnet/cli/issues/8762"},{"Id":"7437883329","Type":"PullRequestEvent","CreatedAt":"2018-03-26T21:40:11","Actor":"mlorbetske","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8904","RelatedDescription":"Opened pull request \"Update test SDK for 2.0 templates in the 15.7 SDK\" (#8904) at dotnet/cli","RelatedBody":"Updates the Test SDK used in the 2.0 templates for the 15.7 SDK (carries the changes from https://github.com/dotnet/templating/pull/1483)\r\n\r\ncc @mayankbansal018"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7438650960","Type":"PullRequestEvent","CreatedAt":"2018-03-27T01:42:29","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/692","RelatedDescription":"Merged pull request \"Simplify apiExcludeList.txt for Xamarin platforms\" (#692) at dotnet/standard","RelatedBody":"Now that excluding namespaces is supported (dotnet/buildtools#1962) we can trim down the list.\r\n\r\n/cc @weshaggard "},{"Id":"7438376889","Type":"PullRequestEvent","CreatedAt":"2018-03-27T00:00:51","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/694","RelatedDescription":"Opened pull request \"Update BuildTools to preview3-02627-01 (master)\" (#694) at dotnet/standard","RelatedBody":""},{"Id":"7436105403","Type":"IssuesEvent","CreatedAt":"2018-03-26T15:55:19","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/693","RelatedDescription":"Opened issue \"Trimming logging is misleading and insufficient\" (#693) at dotnet/standard","RelatedBody":"For shared framework applications we list out files being trimmed that will never deploy with the application.  We should see if we can more accurately represent the trimmed set, or at least don't make any claims about the size savings for shared framework apps.\r\n\r\nAlso there is a large cliff between the amount of information by default and the DGML.  We should look at something in between that provides normal status info (eg: files trimmed) that isn't quite as overwhelming as the DGML."},{"Id":"7434965031","Type":"PullRequestEvent","CreatedAt":"2018-03-26T12:53:28","Actor":"akoeplinger","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/692","RelatedDescription":"Opened pull request \"Simplify apiExcludeList.txt for Xamarin platforms\" (#692) at dotnet/standard","RelatedBody":"Now that excluding namespaces is supported (dotnet/buildtools#1962) we can trim down the list.\r\n\r\n/cc @weshaggard "},{"Id":"7416830969","Type":"PullRequestEvent","CreatedAt":"2018-03-22T03:32:16","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/691","RelatedDescription":"Opened pull request \"Update BuildTools to preview3-02622-01 (master)\" (#691) at dotnet/standard","RelatedBody":""},{"Id":"7416827294","Type":"PullRequestEvent","CreatedAt":"2018-03-22T03:30:59","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/687","RelatedDescription":"Merged pull request \"Update BuildTools to preview3-02620-10 (master)\" (#687) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7439181981","Type":"PullRequestEvent","CreatedAt":"2018-03-27T05:03:00","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/28498","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#28498) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7439174779","Type":"PullRequestEvent","CreatedAt":"2018-03-27T05:00:06","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28498","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#28498) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7439174385","Type":"PullRequestEvent","CreatedAt":"2018-03-27T04:59:56","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/28421","RelatedDescription":"Merged pull request \"Refactor FileSystem recursive directory tests\" (#28421) at dotnet/corefx","RelatedBody":"Fixes #28411 \r\nFixes #28414 "},{"Id":"7439174380","Type":"IssuesEvent","CreatedAt":"2018-03-27T04:59:56","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/28414","RelatedDescription":"Closed issue \"Test failure: System.IO.Tests.Perf_Directory/RecursiveCreateDirectory(depth: 100, times: 10)\" (#28414) at dotnet/corefx","RelatedBody":"@anipik please disable RecursiveCreateDirectory perf test for .NET Framework, as it hits path limit.\n\nThe test `System.IO.Tests.Perf_Directory/RecursiveCreateDirectory(depth: 100, times: 10)` has failed.\n\nSystem.IO.PathTooLongException : The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.\n\n        Stack Trace:\n\n           at System.IO.PathHelper.GetFullPathName()\n       at System.IO.Path.LegacyNormalizePath(String path, Boolean fullCheck, Int32 maxPathLength, Boolean expandShortPaths)\n       at System.IO.Path.GetFullPathInternal(String path)\n       at System.IO.Directory.InternalCreateDirectoryHelper(String path, Boolean checkHost)\n       at System.IO.Tests.Perf_Directory.RecursiveCreateDirectory(Int32 depth, Int32 times)\nBuild : Master - 20180323.06 (Full Framework Tests)\nFailing configurations:\n- Windows.10.Amd64-x64\n  - Release\n- Windows.10.Amd64-x86\n  - Release"},{"Id":"7439174376","Type":"IssuesEvent","CreatedAt":"2018-03-27T04:59:56","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/28411","RelatedDescription":"Closed issue \"Test failure: System.IO.Tests.Perf_Directory/RecursiveCreateDirectory(depth: 1000, times: 1)\" (#28411) at dotnet/corefx","RelatedBody":"All RecursiveCreateDirectory tests are failing\n\nhttps://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20180323.06/workItem/System.IO.FileSystem.Performance.Tests \n\nThe test `System.IO.Tests.Perf_Directory/RecursiveCreateDirectory(depth: 1000, times: 1)` has failed.\n\nSystem.Exception : Benchmark did not execute any iterations.  Please use one of the iteration methods in Microsoft.Xunit.Performance.Benchmark\n\n        Stack Trace:\n\n           at Microsoft.Xunit.Performance.BenchmarkTestInvoker.<>c__DisplayClass1_0.<<CallTestMethod>b__0>d.MoveNext()\n    --- End of stack trace from previous location where exception was thrown ---\n       at Microsoft.Xunit.Performance.Internal.BenchmarkIterator.RunAsync(Func`1 testMethod)\n    --- End of stack trace from previous location where exception was thrown ---\nBuild : Master - 20180323.06 (Core Tests)\nFailing configurations:\n- OSX.1013.Amd64-x64\n  - Release\n- OSX.1012.Amd64-x64\n  - Release\n- Alpine.36.Amd64-x64\n  - Release\n- RedHat.69.Amd64-x64\n  - Release\n- Fedora.27.Amd64-x64\n  - Release\n- Fedora.26.Amd64-x64\n  - Release\n- SLES.12.Amd64-x64\n  - Release\n- OpenSuse.423.Amd64-x64\n  - Release\n- Ubuntu.1804.Amd64-x64\n  - Release\n- Ubuntu.1710.Amd64-x64\n  - Release\n- Ubuntu.1604.Amd64-x64\n  - Release\n- Ubuntu.1404.Amd64-x64\n  - Release\n- Debian.90.Amd64-x64\n  - Release\n- Debian.87.Amd64-x64\n  - Release\n- RedHat.74.Amd64-x64\n  - Release\n- RedHat.73.Amd64-x64\n  - Release\n- Centos.74.Amd64-x64\n  - Release\n- Centos.73.Amd64-x64\n  - Release"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7439198718","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:10:01","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25741","RelatedDescription":"Opened issue \"\"Move declaration near reference\" can change behavior of a program for captured variables\" (#25741) at dotnet/roslyn","RelatedBody":"1. Use \"Move declaration near reference\" where indicated:\r\n\r\n\r\n``` C#\r\nusing System;\r\nusing System.Collections.Generic;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var list = new List<int>();\r\n        list.Add(1);\r\n        list.Add(2);\r\n        list.Add(3);\r\n\r\n        var count = 0; <-- \"Move declaration near reference\"\r\n\r\n        list.ForEach(value =>\r\n        {\r\n            count += value;\r\n\r\n            Console.WriteLine(count);\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\nResults in:\r\n\r\n``` C#\r\nusing System;\r\nusing System.Collections.Generic;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var list = new List<int>();\r\n        list.Add(1);\r\n        list.Add(2);\r\n        list.Add(3);\r\n        list.ForEach(value =>\r\n        {\r\n\r\n            var count = 0;\r\n            count += value;\r\n\r\n            Console.WriteLine(count);\r\n        });\r\n    }\r\n}\r\n\r\n```\r\nOriginal output:\r\n``` \r\n1\r\n3\r\n6\r\n```\r\nNew output:\r\n```\r\n1\r\n2\r\n3\r\n```\r\n\r\nRefactorings shouldn't change behavior. While above is fake code - I hit this in a real example that was more convoluted."},{"Id":"7439127955","Type":"IssuesEvent","CreatedAt":"2018-03-27T04:40:09","Actor":"kg","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25740","RelatedDescription":"Opened issue \"Cross Platform Instructions outdated/incorrect\" (#25740) at dotnet/roslyn","RelatedBody":"https://github.com/dotnet/roslyn/blob/master/docs/infrastructure/cross-platform.md mentions using a nonexistent ```restore.sh``` script. Digging around in the repo history it looks like maybe the equivalent now is ```roslyn/build.sh --restore```, but it's not 100% clear to me."},{"Id":"7439009769","Type":"IssuesEvent","CreatedAt":"2018-03-27T03:50:31","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25718","RelatedDescription":"Closed issue \"Pattern cast matching with dynamic object causes CS0165\" (#25718) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nC# 7.0 (VS 2017)\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\nstatic void TestIssue()\r\n{\r\n\tdynamic obj = new { status = \"error\" };\r\n\r\n\tif (obj is JObject o && obj.status == \"error\")\r\n\t\tthrow new InvalidOperationException((string)o.Property(\"err-msg\")?.Value);\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nSuccessful compilation\r\n\r\n**Actual Behavior**:\r\nerror CS0165: Use of unassigned local variable 'o'"},{"Id":"7438988517","Type":"PullRequestEvent","CreatedAt":"2018-03-27T03:42:17","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25739","RelatedDescription":"Opened pull request \"recursive-patterns(12): Improve switch code by using pattern variables as match automaton temps\" (#25739) at dotnet/roslyn","RelatedBody":"Fixes #20641\r\nFixes #25566\r\n\r\n@cston @agocke Please review. There is only a single delta in this PR, though you may see deltas from previous PRs. The optimization is not very complex but it makes a big difference in some cases (I'll point out the principal use case).\r\n\r\n/cc @dotnet/roslyn-compiler "},{"Id":"7438774196","Type":"PullRequestEvent","CreatedAt":"2018-03-27T02:26:46","Actor":"JieCarolHu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25727","RelatedDescription":null,"RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7438773881","Type":"PullRequestEvent","CreatedAt":"2018-03-27T02:26:39","Actor":"JieCarolHu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25727","RelatedDescription":"Closed pull request \"Quick info merge master\" (#25727) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7439171856","Type":"PullRequestEvent","CreatedAt":"2018-03-27T04:58:46","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5624","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5624) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7437285437","Type":"PullRequestEvent","CreatedAt":"2018-03-26T19:38:04","Actor":"ahsonkhan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5623","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5623) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7436841062","Type":"PullRequestEvent","CreatedAt":"2018-03-26T18:12:17","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5623","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5623) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7436463470","Type":"PullRequestEvent","CreatedAt":"2018-03-26T16:59:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5619","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5619) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7435998924","Type":"PullRequestEvent","CreatedAt":"2018-03-26T15:38:06","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5622","RelatedDescription":"Opened pull request \"Don't place instance methods on byref-like types in the mapping table\" (#5622) at dotnet/corert","RelatedBody":"WASM codegen backend will fail making unboxing stubs for these (and other codegens would likely fail too, if this was an unboxing stub to shared generic code; something that we actually compile)."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7438397749","Type":"PullRequestEvent","CreatedAt":"2018-03-27T00:08:00","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2088","RelatedDescription":"Opened pull request \"Fix case sensitivity when mapping project paths to project infos.\" (#2088) at dotnet/sdk","RelatedBody":"When a solution contains a path to a project that differs by case for a project\r\nreference identity, the build fails because the project info can't be found.\r\n\r\nThe fix is to map the internal map case insensitive, allowing the case\r\ndifference in a project's path in the solution file.\r\n\r\nFixes dotnet/cli#8048."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"977245582724022272","CreatedAt":"2018-03-23T18:07:57+00:00","UserScreenname":"dotnet","Text":"Calling all Desktop Developers: how should UI development be improved? https://t.co/lKHACsK0Sv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":103,"FavoriteCount":72,"RawContent":null},{"Id":"976910301634465792","CreatedAt":"2018-03-22T19:55:40+00:00","UserScreenname":"dotnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/OokEA8H4Mo","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":228,"FavoriteCount":176,"RawContent":null},{"Id":"976141100074373120","CreatedAt":"2018-03-20T16:59:08+00:00","UserScreenname":"dotnet","Text":"Check out this video from @csharpfritz and @jasonbock talking about @roslyn Analyzers and making your code easier t… https://t.co/Nv8pTxt0zP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2018-03-27T05:30:20.7073651Z","RunDurationInMilliseconds":8236}