{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null},{"Title":"Welcoming SymbolSource to the .NET Foundation","PublishedOn":"2018-05-01T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to welcome SymbolSource.org to the .NET Foundation! SymbolSource has been providing a valuable service to the .NET Community for years with the ability to host Symbols for public NuGet...","Href":"https://devblogs.microsoft.com/nuget/welcoming-symbolsource-to-dot-net-foundation/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"9893473523","Type":"PullRequestEvent","CreatedAt":"2019-06-25T23:41:04","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7304","RelatedDescription":"Merged pull request \"Fix GalleryConfiguration\" (#7304) at NuGet/NuGetGallery","RelatedBody":"Update AccountDeleter implementation of IAppConfiguration to include latest fields that were added in dev."},{"Id":"9893450090","Type":"PullRequestEvent","CreatedAt":"2019-06-25T23:34:47","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7301","RelatedDescription":"Merged pull request \"Limiting the id + version length to 160 characters.\" (#7301) at NuGet/NuGetGallery","RelatedBody":"User friendly mitigation for https://github.com/NuGet/Engineering/issues/2481"},{"Id":"9893266738","Type":"PullRequestEvent","CreatedAt":"2019-06-25T22:49:07","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7304","RelatedDescription":"Opened pull request \"Fix GalleryConfiguration\" (#7304) at NuGet/NuGetGallery","RelatedBody":"Update AccountDeleter implementation of IAppConfiguration to include latest fields that were added in dev."},{"Id":"9893034944","Type":"PullRequestEvent","CreatedAt":"2019-06-25T22:00:22","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7272","RelatedDescription":"Merged pull request \"First Draft Delete Job\" (#7272) at NuGet/NuGetGallery","RelatedBody":"This is the first look at the new background delete job.\r\n\r\nIncludes:\r\n - Starter suite of tests\r\n - Working structure\r\n - Almost full external configuration.\r\n\r\nMissing:\r\nAbility to actually delete. This is requiring more refactoring on the side of gallery and will be added a bit later.\r\n\r\nAny comments or concerns are appreciated. Thanks."},{"Id":"9892946523","Type":"PullRequestEvent","CreatedAt":"2019-06-25T21:44:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7300","RelatedDescription":"Merged pull request \"Remove shelljs and shx since they are unused in our process\" (#7300) at NuGet/NuGetGallery","RelatedBody":"Address the shelljs security warning showing up in GitHub. Had to remove shx too since it depends on shelljs.\r\n\r\nDeleted `src/Bootstrap/dist/`, ran `git clean -xffd`, then  `npm install`, then `grunt`. CSS and JS is the same. \r\n\r\nDeleted some scripts requiring shx and shelljs."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"9894063458","Type":"IssuesEvent","CreatedAt":"2019-06-26T02:28:35","Actor":"jnm2","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8263","RelatedDescription":"Opened issue \"NuGet.CommandLine as dotnet global tool\" (#8263) at NuGet/Home","RelatedBody":"I'm resolving various tools in a build script using `dotnet tool install`:\r\n\r\n```ps1\r\ndotnet tool install altcover.global --tool-path tools\r\ndotnet tool install Codecov.Tool --tool-path tools\r\n\r\n# ...\r\n\r\ntools\\altcover --inputDirectory=...\r\ntools\\codecov --name=...\r\n```\r\n\r\n(After 3.0 is released, I'll be using the beautiful and amazing https://github.com/dotnet/cli/issues/10288 to do the same thing.)\r\n\r\nOne of the tasks I want to do from the build script is `nuget sign`. It would be cool if this just worked:\r\n\r\n```ps1\r\ndotnet tool install NuGet.CommandLine --tool-path tools\r\n\r\ntools\\nuget sign -CertificateFingerprint ...\r\n```\r\n\r\nInstead, this prints:\r\n\r\n```\r\nerror NU1212: Invalid project-package combination for NuGet.CommandLine 5.0.2. DotnetToolReference project style can only contain references of the DotnetTool type\r\nThe tool package could not be restored.\r\nTool 'nuget.commandline' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n```\r\n\r\nWould this be a possibility in the future?"},{"Id":"9893019471","Type":"IssuesEvent","CreatedAt":"2019-06-25T21:57:31","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8251","RelatedDescription":"Closed issue \"[Feature Request] Disable caching for local/file system feeds\" (#8251) at NuGet/Home","RelatedBody":"For our builds we are using a local nuget feed to get dependencies from.\r\n\r\nThis local feed gets updated for every build - the version number of the packages do not always change.\r\n\r\nSince nuget prefers the local cache (.nuget) over the file system source - we need to clear that cache manually all the time to make this work.\r\n\r\nIt would be nice if caching could be disabled on a per feed basis (especially for local / file system based feeds).\r\n\r\nThis is for SDK style / package reference based projects.\r\n\r\nBuild script: https://github.com/IdentityServer/IdentityServer4/blob/master/build.ps1"},{"Id":"9891257864","Type":"IssuesEvent","CreatedAt":"2019-06-25T17:29:13","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8114","RelatedDescription":"Closed issue \"Fix tests related to lowercase ids in packages lock file\" (#8114) at NuGet/Home","RelatedBody":"See the broken test. \r\nRestoreNetCore_PackagesLockFile_CustomAssemblyName_DoesNotBreakLockedMode\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2652493&view=ms.vss-test-web.test-result-details\r\nAlso see: \r\nRestoreNetCore_PackagesLockFile_LowercaseProjectNameSolutionRestore\r\n\r\n//cc @zivkan @rrelyea "},{"Id":"9885140911","Type":"IssuesEvent","CreatedAt":"2019-06-25T01:10:11","Actor":"bergbria","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8262","RelatedDescription":"Opened issue \"Locked-mode restore doesn't detect removed packages\" (#8262) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\ndotnet.exe --version (if appropriate): 2.2.204 and 3.0.100-preview5-011568\r\n\r\n### Automated repro\r\nI've created a self-contained repro. Download \r\n[repro_extraStuffInLockFile.zip](https://github.com/NuGet/Home/files/3323115/repro_extraStuffInLockFile.zip) and run repro.bat.\r\n\r\n###General details\r\n\r\n1. Create a .csproj with a PackageReference\r\n2. `dotnet restore --use-lock-file`\r\n3. Remove the PackageReference\r\n4. dotnet restore --use-lock-file --locked-mode\r\n\r\n###Expected\r\nThe final restore should fail since packages.lock.json references packages that are no longer used.\r\n\r\n###Actual\r\nThe restore completes without error"},{"Id":"9885071447","Type":"IssuesEvent","CreatedAt":"2019-06-25T00:49:57","Actor":"agr","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8261","RelatedDescription":"Opened issue \"NU5101 warning message repeats the recommendation\" (#8261) at NuGet/Home","RelatedBody":"If I make a nuspec that specifies that some .dll files are to be put directly under `lib` directory in .nupkg file, `nuget pack` produces the following warning:\r\n\r\n> WARNING: NU5101: The assembly 'lib\\TestNugetPackage.dll' is placed directly under 'lib' folder. It is recommended that assemblies be placed inside a framework-specific folder. Move it into a framework-specific folder.\r\n\r\nIs it really necessary to essentially say the same thing twice in last two sentences?"},{"Id":"9885014262","Type":"IssuesEvent","CreatedAt":"2019-06-25T00:33:04","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8233","RelatedDescription":"Closed issue \"Use \"$(SolutionDir)\\packages\\\" Instead of Relative Path For Nuget Package References HintPaths\" (#8233) at NuGet/Home","RelatedBody":"<p>My team members each have their own solution (.sln). Some developers manage a larger scale solution while others manage a smaller area of the entire scheme. Some developers include unit test projects in their solution while others don't. Currently, if someone references a package from NuGet, the proj file's hint paths get set to a relative path of the solution that was open when the package manager added the reference. This path may be invalid on another developers machine. <br>My current solution is to edit the proj file xml and change the relative path to the $(SolutionDir) variable. This works great. Could we have this happen by default or as an option?</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/558708/use-solutiondirpackages-instead-of-relative-path-f.html\nVSTS ticketId: 887957_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 5/7/2019, 03:23 AM (37 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team</p>"},{"Id":"9884430089","Type":"IssuesEvent","CreatedAt":"2019-06-24T22:08:05","Actor":"bergbria","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8260","RelatedDescription":"Opened issue \"Locked-mode restores fail with sha512 errors & install new packages when a project's RuntimeIdentifier is changed\" (#8260) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\ndotnet.exe --version: Both 3.0.100-preview5-011568 and 2.2.204\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n### Automated repro\r\nI've created a self-contained automated repro. You can run it by downloading \r\n[repro_runtimeIdLockFile.zip](https://github.com/NuGet/Home/files/3322730/repro_runtimeIdLockFile.zip) and running repro.bat\r\n\r\n### General behavior:\r\n1. Create a csproj targeting runtime identifier A\r\n2. `dotnet restore --use-locked-file`\r\n3. Change the runtime identifier to B\r\n4. `dotnet restore --locked-mode`\r\n\r\n### Expected behavior\r\n1. The second restore should fail with ` error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file.`\r\n2. The second restore should **note** install any packages (it's in locked mode)\r\n\r\n### Actual behavior\r\n1. The second restore fails with `error NU1403: The package runtime.osx-x64.Microsoft.NETCore.App.2.1.10 sha512 validation failed. The package is different than the last restore.`\r\n2. OSX runtime packages are installed\r\n\r\n...\r\n"},{"Id":"9883905036","Type":"IssuesEvent","CreatedAt":"2019-06-24T20:38:03","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8259","RelatedDescription":"Opened issue \"Investigate migration from Newtonsoft.Json to System.Text.Json\" (#8259) at NuGet/Home","RelatedBody":"Investigate current usage of Newtonsoft.Json to be able to better estimate effort of migrating to System.Text.Json\r\n\r\nIn particular, look for public APIs that accept or return Newtonsoft.Json types and therefore we can't remove without breaking APIs."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9355935007","Type":"IssuesEvent","CreatedAt":"2019-04-01T18:05:43","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/34","RelatedDescription":"Opened issue \"nuget list & add commands are being deprecated in 5.0\" (#34) at NuGet/Announcements","RelatedBody":"Tracking Issue(s):\r\n* Deprecate ambiguous nuget.exe commands in 5.0 [#7753](https://github.com/NuGet/Home/issues/7753)\r\n  * Deprecate nuget.exe add command [#7923](https://github.com/NuGet/Home/issues/7923)\r\n  * Rename nuget.exe list to nuget.exe search [#7912](https://github.com/NuGet/Home/issues/7912)\r\n\r\nThe following commands are being deprecated because these are cause of confusion due to their nomenclature and/or other related commands that already exist:\r\n* [`nuget list`](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-list): Currently displays a list of packages from a given source\r\n  * This will be replaced by an equivalent command **`nuget search`** which will be later enhanced with more capabilities as we make progress with or [search improvements](nvmd got it: https://github.com/NuGet/NuGetGallery/issues/6371​​​​​​​).\r\n* [`nuget add`](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-add): Currently adds a specified package to a non-HTTP package source (a folder or UNC path) in a hierarchical layout, wherein folders are created for the package ID and version number. \r\n  * This will be replaced by overloading **`nuget push`** command.\r\n\r\n> These commands will be deprecated i.e. there will be a warning on usage of these commands in 5.0 so that in future releases these commands can be discontinued."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null},{"Id":"1108063773363826688","CreatedAt":"2019-03-19T17:52:45+00:00","UserScreenname":"nuget","Text":"NuGet talk at the MVP Summit by @karann9 \n#MVPBuzz #MvpSummit https://t.co/P43G7wRRkX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-06-26T05:30:39.0547937Z","RunDurationInMilliseconds":1752}