{"Data":{"GitHubIssues":{"Issues":[{"Id":"332218068","IsPullRequest":false,"CreatedAt":"2018-06-14T01:18:10","Actor":"vertonghenb","Number":"991","RawContent":null,"Title":"Blazor.invokeDotNetMethod Pass parameter","State":"open","Body":"Is it possible to pass a parameter coming from JS to C#? Can't find any docs on this yet.","Url":"https://github.com/aspnet/Blazor/issues/991","RelatedDescription":"Open issue \"Blazor.invokeDotNetMethod Pass parameter\" (#991)"},{"Id":"332179654","IsPullRequest":false,"CreatedAt":"2018-06-13T21:58:50","Actor":"bangclash","Number":"990","RawContent":null,"Title":"Blazor/Electron","State":"closed","Body":"I saw the Blazor/Electron demo on ASP.NET Community Standup - June 12, 2018. Looks very promising. I hope you continue with this experiment. This will give developers another option for cross platform desktop development. Thanks.","Url":"https://github.com/aspnet/Blazor/issues/990","RelatedDescription":"Closed issue \"Blazor/Electron\" (#990)"},{"Id":"331936237","IsPullRequest":false,"CreatedAt":"2018-06-13T21:57:03","Actor":"etmendz","Number":"987","RawContent":null,"Title":"Add TagAttribute for component properties","State":"closed","Body":"While the ParameterAttribute allows a property to be used as a component attribute (ex. where MyParameter is [Parameter], thus `<MyCustomComponent MyParameter=...>`), the TagAttribute allows a property to be used as a component's child tag. Ex. where Template is [Tag]:\r\n\r\n```\r\n    <MyCustomComponent>  \r\n        <Template>  \r\n            ...\r\n        </Template>  \r\n    </MyCustomComponent>  \r\n```\r\n\r\nThis is subtly suggested in #404. A possible side-effect is that a property can be both [Parameter] and [Tag], allowing it to be used as a component attribute or child tag. Either way, the idea is that the contents, in-line or declarative, are assigned to the property.\r\n\r\nIn a declaration/usage, it should be an error to use the same [Parameter][Tag] property as both attribute and tag. Either one but not both, so that the ff. is an error:\r\n\r\n```\r\n    <MyCustomComponent MyParameterTag=...>  \r\n        <MyParameterTag>  \r\n            ...\r\n        </MyParameterTag>  \r\n    </MyCustomComponent>  \r\n```\r\n\r\nBecause MyParameterTag is used as both parameter and tag in this declaration, there is no way to know which content to keep. Should it be a design-time or compile-time error?","Url":"https://github.com/aspnet/Blazor/issues/987","RelatedDescription":"Closed issue \"Add TagAttribute for component properties\" (#987)"},{"Id":"331856723","IsPullRequest":false,"CreatedAt":"2018-06-13T21:55:49","Actor":"zefubachs","Number":"986","RawContent":null,"Title":"Target Netstandard2.0 in Microsoft.AspNetCore.Blazor.Server package","State":"closed","Body":"Currently the [Microsoft.AspNetCore.Blazor.Server](https://dotnet.myget.org/feed/blazor-dev/package/nuget/Microsoft.AspNetCore.Blazor.Server) package targets `netcoreapp2.0`.\r\nThis prevents aspnetcore webapps targeting the full framework from using it to server blazor client apps.\r\n\r\nIs there a specific reason behind this decision?\r\n\r\nA proposed change would be to change the targetframework to `netstandard2.0`.","Url":"https://github.com/aspnet/Blazor/issues/986","RelatedDescription":"Closed issue \"Target Netstandard2.0 in Microsoft.AspNetCore.Blazor.Server package\" (#986)"},{"Id":"331838160","IsPullRequest":false,"CreatedAt":"2018-06-13T21:54:00","Actor":"abhishekgoenka","Number":"985","RawContent":null,"Title":"JSON serialize/deserialize performance is very poor with large JSON file","State":"closed","Body":"To test performance, I took JSON file of 482kb. It takes around 15seconds to deserialize 482kb of data.\r\n![image](https://user-images.githubusercontent.com/14522198/41330214-a8b29eb8-6eef-11e8-807c-ea51e4c3789b.png)\r\n\r\n```C#\r\npublic async Task PerfTest()\r\n{\r\n        Console.WriteLine(\"Perf Test\");\r\n        System.Diagnostics.Stopwatch sw = System.Diagnostics.Stopwatch.StartNew();\r\n        PerformanceData[] perfData = await Http.GetJsonAsync<PerformanceData[]>(\"sample-data/MOCK_DATA.json\");\r\n        Console.WriteLine($\"Took {sw.ElapsedMilliseconds}ms to deserialize MOCK_DATA.json\");\r\n\r\n}\r\n\r\npublic class PerformanceData\r\n {\r\n        public int id { get; set; }\r\n        public string first_name { get; set; }\r\n        public string last_name { get; set; }\r\n        public string email { get; set; }\r\n        public string gender { get; set; }\r\n        public string ip_address { get; set; }\r\n}\r\n```\r\n\r\nWhere as it takes only 115ms, if I run the same code in .NET Core console app. It doesn't look to be `SimpleJson.DeserializeObject<T>(json)` issue. \r\n![image](https://user-images.githubusercontent.com/14522198/41330326-75fce860-6ef0-11e8-893e-e2bf44e28971.png)\r\n\r\n\r\n[MOCK_DATA.zip](https://github.com/aspnet/Blazor/files/2096608/MOCK_DATA.zip)\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/985","RelatedDescription":"Closed issue \"JSON serialize/deserialize performance is very poor with large JSON file\" (#985)"},{"Id":"331979808","IsPullRequest":false,"CreatedAt":"2018-06-13T12:48:52","Actor":"TheCamel","Number":"989","RawContent":null,"Title":"Demo ==> freeze and error in console after second call","State":"open","Body":"Hello,\r\nfrom the demo app, i customize the fetchdata page to call and display my data from my api. It woks once. I click on counter, then fetch....this is freezing with errors\r\n\r\nmy test code\r\n\r\nUser auth = new User() { Culture = \"FR-fr\", Login = \"USER\", Password = \"USER\", IdProfil=\"244\" };\r\n        auth = await Http.PostJsonAsync<User>(\r\n            \"http://localhost/Web.Api/User/Login\", auth);\r\n        forecasts = await Http.GetJsonAsync<List<DisplayAlarmBase>>(\r\n            string.Format(\"http://localhost/Web.Api/Event/GetAlarms?since={0}&token={1}\",\r\n            DateTime.Now.AddDays(-200), auth.Token)\r\n         );\r\n        await Http.PostJsonAsync(\r\n            string.Format(\"http://localhost/Web.Api/User/Logout?token={0}\", auth.Token), null );\r\n\r\n![blazor1](https://user-images.githubusercontent.com/7381872/41352185-fc1166f6-6f18-11e8-958a-2b7071a31800.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/989","RelatedDescription":"Open issue \"Demo ==> freeze and error in console after second call\" (#989)"},{"Id":"331961943","IsPullRequest":false,"CreatedAt":"2018-06-13T11:54:57","Actor":"RemiBou","Number":"988","RawContent":null,"Title":"Form with @onsubmit sends POST to server","State":"open","Body":"This started with Blazor 0.4.\r\n\r\nOn my form I have a \"@onsubmit\" handler. When I click on the button with type=\"submit\" the event is not raised but a classic POST is sent to the server.\r\n\r\n[My File](https://github.com/RemiBou/Toss.Blazor/blob/master/Toss/Toss.Client/Shared/LoginClassic.cshtml)\r\n\r\nAnd then i get an error \"The SPA default page middleware could not return the default page ...\" it might be connected to issue #951 or #803 ","Url":"https://github.com/aspnet/Blazor/issues/988","RelatedDescription":"Open issue \"Form with @onsubmit sends POST to server\" (#988)"},{"Id":"331787323","IsPullRequest":false,"CreatedAt":"2018-06-13T03:29:17","Actor":"daniel007","Number":"984","RawContent":null,"Title":"Blazor potentially no longer client-side technology?","State":"closed","Body":"Hi,\r\n\r\nI watched today's ASP.NET Community Standup stream, and although the Electron demo was impressive, I'm somewhat surprised that the team is now seriously considering changing direction and running Blazor on the server. While there are some valid scenarios (and I think this should definitely be an option in the future), what got me (and others) so excited about this technology was the fact that it is purely client-side framework (webserver serving only static files).\r\n\r\nTo be honest, I was hoping that by this time (has it been a year since the first Blazor demo?) I would already be writing production apps in what I think is the best UI framework that Microsoft has been working on for quite some time. Wasn't this project supposed to be given a go/no go in May?\r\n\r\nThanks and keep up the great work! Very impressive what such a small team has been able to accomplish so far!\r\n","Url":"https://github.com/aspnet/Blazor/issues/984","RelatedDescription":"Closed issue \"Blazor potentially no longer client-side technology?\" (#984)"},{"Id":"331650347","IsPullRequest":false,"CreatedAt":"2018-06-12T15:54:13","Actor":"PicoDevices","Number":"983","RawContent":null,"Title":"DateTimeOffset client side always show UTC Time","State":"open","Body":" **var time = DateTimeOffset.Now;**\r\n**time.ToLocalTime().ToString(\"yyy-MM-dd HH:mm:ss\")}\"\r\ntime.ToUniversalTime().ToString(\"yyy-MM-dd HH:mm:ss\")}\"**\r\nBoth cases show the same result: UTC time.","Url":"https://github.com/aspnet/Blazor/issues/983","RelatedDescription":"Open issue \"DateTimeOffset client side always show UTC Time\" (#983)"},{"Id":"331548727","IsPullRequest":false,"CreatedAt":"2018-06-12T15:30:57","Actor":"chassq","Number":"980","RawContent":null,"Title":"Route Not Found","State":"closed","Body":"I added some custom project files (cshtml) to my 0.3.0 blazor client project. When I updated to 0.4.0 I could not navigate to the custom pages I had added. The exception I saw in the Chrome Tools was that a Route could not be Found. I checked the project file and found a bunch of entries for the custom files (see issue #316). Once I removed those entries my blazor project worked as expected. This may be in the release notes but I did not see it at first glance...\r\n\r\nHope this helps someone...","Url":"https://github.com/aspnet/Blazor/issues/980","RelatedDescription":"Closed issue \"Route Not Found\" (#980)"},{"Id":"331638192","IsPullRequest":false,"CreatedAt":"2018-06-12T15:24:59","Actor":"Worble","Number":"982","RawContent":null,"Title":"Right clicking local anchor tags automatically navigates you instead of displaying a context menu","State":"open","Body":"### Title\r\nRight clicking local anchor tags automatically navigates you instead of displaying a context menu\r\n\r\n### Functional impact\r\nUsers cannot use any of the context menu items when right clicking anchor tags\r\n\r\n### Minimal repro steps\r\nGiven that you have 2 pages defined, say \"/\" and \"/home\", right clicking this `<a href=\"/home\">Home<a/>` on the \"/\" page will cause you to instantly navigate to home instead of displaying the usual browser context menu.\r\n\r\n### Expected result\r\nViewing of the browser context menu\r\n\r\n### Actual result\r\nThe user is navigated to the anchor as if they left clicked it\r\n\r\n### Further technical details\r\n This does not happen for links outside of the scope of the router, for example `<a href=www.google.com>Google</a>` or `<a href=/images/image.jpg>Image</a>`","Url":"https://github.com/aspnet/Blazor/issues/982","RelatedDescription":"Open issue \"Right clicking local anchor tags automatically navigates you instead of displaying a context menu\" (#982)"},{"Id":"331578638","IsPullRequest":false,"CreatedAt":"2018-06-12T13:25:45","Actor":"TheCamel","Number":"981","RawContent":null,"Title":"Blank page...","State":"closed","Body":"I have the 15.7.0319 installed on VS2017 15.7.2.....All templates Blazor or ASP hosted give me a blank page after \"loading\"....I don't know where to search for more information. Please Help if possible.","Url":"https://github.com/aspnet/Blazor/issues/981","RelatedDescription":"Closed issue \"Blank page...\" (#981)"},{"Id":"330770564","IsPullRequest":false,"CreatedAt":"2018-06-12T09:40:58","Actor":"Paradoxon101","Number":"962","RawContent":null,"Title":"Handle FileResult from controller service","State":"closed","Body":"Currently there is no way to evaluate a FileResult in the browser or to save it via a download dialog.","Url":"https://github.com/aspnet/Blazor/issues/962","RelatedDescription":"Closed issue \"Handle FileResult from controller service\" (#962)"},{"Id":"331512581","IsPullRequest":false,"CreatedAt":"2018-06-12T09:39:48","Actor":"SteveSandersonMS","Number":"979","RawContent":null,"Title":"Add UrlHelper.NavigateTo overload that forces a full page reload","State":"open","Body":"Inspired by the scenario in #962.\r\n\r\nIf you want to trigger a file download by navigating to an endpoint where the server will return something with a `Content-Disposition` header, or if you somehow are combining multiple client-side apps, you'd sometimes want navigation to bypass the usual \"internal navigation\" logic.","Url":"https://github.com/aspnet/Blazor/issues/979","RelatedDescription":"Open issue \"Add UrlHelper.NavigateTo overload that forces a full page reload\" (#979)"},{"Id":"331337746","IsPullRequest":false,"CreatedAt":"2018-06-12T09:37:46","Actor":"DNF-SaS","Number":"975","RawContent":null,"Title":"Howto Embedded resources?","State":"closed","Body":"I have two .resx-Files (Translations.resx and Translations.de.resx) in my project; both with Build Action \"Embedded resource\" and Custom Tool \"ResxFileGenerator\".\r\nNamespace is \"Testproject\".\r\nAfter compiling, only a resource named \"Testproject.Translations.resources\" containing the default content is present in the assembly.\r\nDoesn't blazor support .resx-Generation?\r\n","Url":"https://github.com/aspnet/Blazor/issues/975","RelatedDescription":"Closed issue \"Howto Embedded resources?\" (#975)"},{"Id":"331340085","IsPullRequest":false,"CreatedAt":"2018-06-12T04:55:16","Actor":"chucker","Number":"976","RawContent":null,"Title":"Custom (non-root) path base (`UsePathBase`) when running stand-alone","State":"closed","Body":"I have a production URL of `http://someServer/someSubdirectory`, i.e. one that isn't the server root. As the getting started guide says, that's no problem — I simply change the  `<base href>` tag in my `index.html`.\r\n\r\nHowever, doing so breaks development: the resources will now be looked for in `http://localhost:4405/someSubdirectory`, and Blazor doesn't know to serve them that way. I need to revert the `href` to end with the root in order for local development to work.\r\n\r\nI've tried adjusting the `launchSettings.json`'s `applicationUrl` accordingly. I'm told launchSettings is only relevant to the development environment, not to production. However, doing so causes Kestrel to throw on launch: `A path base can only be configured using IApplicationBuilder.UsePathBase()`.\r\n\r\nI see that Blazor implicitly calls `UsePathBase` [in `Startup.cs` here](https://github.com/aspnet/Blazor/blob/8194eb7e5715e38ef1d108654fa764ded8a260b4/src/Microsoft.AspNetCore.Blazor.Cli/Server/Startup.cs#L48), but it's not actually clear to me where I'm passing an `app` object to Blazor at all. All I have is a `Program.cs` whose `Main` looks like this:\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var serviceProvider = new BrowserServiceProvider(services =>\r\n            {\r\n                // Add any custom services here\r\n            });\r\n\r\n            new BrowserRenderer(serviceProvider).AddComponent<App>(\"app\");\r\n        }\r\n\r\nIs it possible to pass a custom `IApplicationBuilder` here? Or is this currently not exposed?","Url":"https://github.com/aspnet/Blazor/issues/976","RelatedDescription":"Closed issue \"Custom (non-root) path base (`UsePathBase`) when running stand-alone\" (#976)"},{"Id":"331380025","IsPullRequest":false,"CreatedAt":"2018-06-11T23:01:22","Actor":"Scepheo","Number":"978","RawContent":null,"Title":"dotnet command with path parameter uses parent folder casing","State":"open","Body":"To reproduce (note the casing):\r\n\r\n1. `dotnet new blazor -o Repro`\r\n2. `dotnet build repro/Repro.csproj`\r\n\r\nThis fails with a whole bunch of errors about not being able to find the namespace `Repro.Shared`, because the build uses the path name specified in the dotnet build/run/publish command as the namespace name. This means that e.g. MainLayout.g.i.cs *defines* the namespace `repro.Shared`, but everything *uses* `Repro.Shared`.","Url":"https://github.com/aspnet/Blazor/issues/978","RelatedDescription":"Open issue \"dotnet command with path parameter uses parent folder casing\" (#978)"},{"Id":"331373149","IsPullRequest":true,"CreatedAt":"2018-06-11T22:29:57","Actor":"ericwj","Number":"977","RawContent":null,"Title":"Support the full range of all basic types. Deserialize byte[] from base64.","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/pull/977","RelatedDescription":"Open PR \"Support the full range of all basic types. Deserialize byte[] from base64.\" (#977)"},{"Id":"331330701","IsPullRequest":true,"CreatedAt":"2018-06-11T20:05:59","Actor":"vertonghenb","Number":"974","RawContent":null,"Title":"Add para [Parameter] Code Snippet","State":"open","Body":"Should complete the idea of #965\r\nAdds support for auto complete of para > tab > tab\r\n```csharp\r\n[Parameter] protected int MyParameter {get;set;}\r\n````\r\njust like prop > tab > tab\r\n```csharp\r\npublic int MyProperty { get; set; }\r\n````\r\n\r\nCode Snippet Category is Blazor.\r\nAdded in the existing VSIX.","Url":"https://github.com/aspnet/Blazor/pull/974","RelatedDescription":"Open PR \"Add para [Parameter] Code Snippet\" (#974)"},{"Id":"331301295","IsPullRequest":true,"CreatedAt":"2018-06-11T19:47:41","Actor":"vertonghenb","Number":"973","RawContent":null,"Title":"Add para [Parameter] Code Snippet","State":"closed","Body":"Should complete the idea of #965\r\nAdds support for auto complete of para > tab > tab\r\n```csharp\r\n[Parameter] protected int MyParameter {get;set;}\r\n````\r\njust like prop > tab > tab\r\n```csharp\r\npublic int MyProperty { get; set; }\r\n````\r\nA new VSIX project was created to separate the snippets from the templates. However I'm not sure if this is the way to go and or if we still need some build steps?","Url":"https://github.com/aspnet/Blazor/pull/973","RelatedDescription":"Closed or merged PR \"Add para [Parameter] Code Snippet\" (#973)"},{"Id":"331261033","IsPullRequest":false,"CreatedAt":"2018-06-11T16:29:29","Actor":"SteveSandersonMS","Number":"972","RawContent":null,"Title":"Linker enhancements","State":"open","Body":"Ways we'd like to improve it in the short term:\r\n\r\n* Update to the latest linker tooling. We've heard from the Mono team that they've made many improvements.\r\n* Add and document a simpler mechanism for customising the linker's behavior. The linker already accepts `.xml` config files to control in more detail which types/methods are strippable/retainable. We should make it easier to supply a custom config alongside (or instead of) the default one.\r\n","Url":"https://github.com/aspnet/Blazor/issues/972","RelatedDescription":"Open issue \"Linker enhancements\" (#972)"},{"Id":"331154200","IsPullRequest":false,"CreatedAt":"2018-06-11T15:08:02","Actor":"chrissainty","Number":"971","RawContent":null,"Title":"CLI command for changing base href tag","State":"closed","Body":"I don't think this is covered by another issue, apologies if it is. This might be one for a bit further down the line. But it would be good to be able to change the base tags href via a CLI command, similar to how Angulars CLI works. This will be really useful in CI pipelines or just in any scenario where prod requires a different base path to a development environment.","Url":"https://github.com/aspnet/Blazor/issues/971","RelatedDescription":"Closed issue \"CLI command for changing base href tag\" (#971)"},{"Id":"331137532","IsPullRequest":false,"CreatedAt":"2018-06-11T10:55:15","Actor":"carlosalcantara2668","Number":"970","RawContent":null,"Title":"REACTIVE CLIENT MODELS or DYNAMIC CUSTOMER MODELS TO VALIDATE","State":"closed","Body":"Suggestion of changes to validate in blazor, my suggestion is for the case of validations is to make the data model, validate the same or similar to the concept of reactive forms ANGULAR, so I suggest that everything is done through the model of data on the client's side, in conclusion that is the MODEL IN THE CUSTOMER INSTEAD OF THE FORM, because in summary THE MODEL IS THE FORM IN 95% OF THE CASES","Url":"https://github.com/aspnet/Blazor/issues/970","RelatedDescription":"Closed issue \"REACTIVE CLIENT MODELS or DYNAMIC CUSTOMER MODELS TO VALIDATE\" (#970)"},{"Id":"330877206","IsPullRequest":false,"CreatedAt":"2018-06-11T09:39:40","Actor":"fanoI","Number":"964","RawContent":null,"Title":"What about media playing?","State":"closed","Body":"Silverlight was used a lot to do rich Media Player experiences in particular when there was the need of DRM. I imagine that if Blazor will support this it will have yet more success, doing this things with HTLM5+JS is really complex and indeed a lot of sites continue to use Flash for these type of things.\r\n\r\nSo what do you think?","Url":"https://github.com/aspnet/Blazor/issues/964","RelatedDescription":"Closed issue \"What about media playing?\" (#964)"},{"Id":"330892660","IsPullRequest":false,"CreatedAt":"2018-06-11T09:38:19","Actor":"vertonghenb","Number":"965","RawContent":null,"Title":"Add [Parameter] Code Snippet to VS Extensions","State":"closed","Body":"Rather an enhancement but it would be nice if it would be included by default in the Blazor VS Extensions\r\n\r\nJust like \r\n'prop >tab >tab'\r\nPublic TYPE Name {get;set}\r\n\r\npara > tab > tab\r\n[Parameter] protected TYPE Name {get;set;}\r\n\r\nThe script below can be added to the code snippets:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<CodeSnippets  xmlns=\"http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet\">\r\n\t<CodeSnippet Format=\"1.0.0\">\r\n\t\t<Header>\r\n\t\t\t<Title>para</Title>\r\n\t\t\t<Shortcut>para</Shortcut>\r\n\t\t\t<Description>Code snippet for an automatically implemented parameter for Blazor</Description>\r\n\t\t\t<Author>Vertonghen Benjamin</Author>\r\n\t\t\t<SnippetTypes>\r\n\t\t\t\t<SnippetType>Expansion</SnippetType>\r\n\t\t\t</SnippetTypes>\r\n\t\t</Header>\r\n\t\t<Snippet>\r\n\t\t\t<Declarations>\r\n\t\t\t\t<Literal>\r\n\t\t\t\t\t<ID>type</ID>\r\n\t\t\t\t\t<ToolTip>Parameter type</ToolTip>\r\n\t\t\t\t\t<Default>int</Default>\r\n\t\t\t\t</Literal>\r\n\t\t\t\t<Literal>\r\n\t\t\t\t\t<ID>property</ID>\r\n\t\t\t\t\t<ToolTip>Parameter name</ToolTip>\r\n\t\t\t\t\t<Default>MyParmeter</Default>\r\n\t\t\t\t</Literal>\r\n\t\t\t</Declarations>\r\n\t\t\t<Code Language=\"csharp\"><![CDATA[[Parameter] protected $type$ $property$ { get; set; }$end$]]>\r\n\t\t\t</Code>\r\n\t\t</Snippet>\r\n\t</CodeSnippet>\r\n</CodeSnippets>\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/965","RelatedDescription":"Closed issue \"Add [Parameter] Code Snippet to VS Extensions\" (#965)"},{"Id":"330905771","IsPullRequest":false,"CreatedAt":"2018-06-11T09:37:03","Actor":"ericwj","Number":"966","RawContent":null,"Title":"Built-in Json isn't compatible with the default serialization in ASP.NET","State":"closed","Body":"I found that JSON coming from an API controller that uses Entity Framework Core cannot handle the default serialization done by ASP.NET in a few cases.\r\n\r\n* `sbyte`, `ushort`, `uint` and `ulong` do not deserialize (ArgumentException)\r\n* `byte[]` content for e.g. `[Timestamp]` properties which are serialized as base64 do not deserialize\r\n* `decimals` outside the range of `double` cq `long` do not deserialize\r\n\r\nThe first needs a single line changed, the second needs 2 added lines, the third needs two if else statements added.\r\n\r\nWould you like me to submit a pull request to fix this?","Url":"https://github.com/aspnet/Blazor/issues/966","RelatedDescription":"Closed issue \"Built-in Json isn't compatible with the default serialization in ASP.NET\" (#966)"},{"Id":"331000091","IsPullRequest":false,"CreatedAt":"2018-06-11T09:34:17","Actor":"Andrzej-W","Number":"969","RawContent":null,"Title":"Instruction: How to correctly post code examples here?","State":"closed","Body":"As far as I know GitHub doesn't support Blazor syntax highlighting yet, but cshtml file is almost like HTML + C#. Please use the following GitHub syntax:\r\n```\r\n```html\r\n@page \"/counter\"\r\n<h1>Counter</h1>\r\n<p>Current count: @currentCount</p>\r\n<button class=\"btn btn-primary\" onclick=\"@IncrementCount\">Click me</button>\r\n```    write three backtick characters to end html section\r\n```c#\r\n@functions {\r\n    int currentCount = 0;\r\n    void IncrementCount()\r\n    {\r\n        currentCount++;\r\n    }\r\n}\r\n```    write three backtick characters to end c# section\r\n```\r\n\r\nFinal result is shown below. Code with syntax highlighting is much more readable for all of us.\r\n```html\r\n@page \"/counter\"\r\n<h1>Counter</h1>\r\n<p>Current count: @currentCount</p>\r\n<button class=\"btn btn-primary\" onclick=\"@IncrementCount\">Click me</button>\r\n```\r\n```c#\r\n@functions {\r\n    int currentCount = 0;\r\n    void IncrementCount()\r\n    {\r\n        currentCount++;\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Blazor/issues/969","RelatedDescription":"Closed issue \"Instruction: How to correctly post code examples here?\" (#969)"},{"Id":"330997032","IsPullRequest":false,"CreatedAt":"2018-06-10T22:26:49","Actor":"carlosalcantara2668","Number":"968","RawContent":null,"Title":"ERROR 'Router' cannot find any component with a route for ","State":"closed","Body":"I have a page (A) with a list of articles, this page calls another page (B)\r\nthe page (B) has a component that I want to use but it gives me the following error\r\n'Router' cannot find any component with a route for InvoicePage\r\n\r\nEJe\r\nPAGE (A)\r\n@using WebBlazorTi.Shared.Models;\r\n@using Microsoft.AspNetCore.Blazor.Components;\r\n@using Microsoft.AspNetCore.Blazor.Services;\r\n\r\n<div>\r\n\r\n    @if (Model != null)\r\n    {\r\n\r\n        <table class=\"table table-bordered table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <td>\r\n                        Factura\r\n                    </td>\r\n                    <td>\r\n                        Cuenta\r\n                    </td>\r\n                    <td>\r\n                        Descripcion\r\n                    </td>\r\n                    <td>\r\n                        Fecha\r\n                    </td>\r\n                    <td>\r\n                        NOta\r\n                    </td>\r\n                    <td>\r\n                        Facturado\r\n                    </td>\r\n                    <td>\r\n                        Pago\r\n                    </td>\r\n                    <td>\r\n                        Balance\r\n                    </td>\r\n                    <td>\r\n                        NCF\r\n                    </td>\r\n                    <td>\r\n                        SELECR\r\n                    </td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                @foreach (var item in Model)\r\n                {\r\n                    <tr>\r\n                        <td>\r\n                            @item.factura\r\n                        </td>\r\n                        <td>\r\n                            @item.cuenta\r\n                        </td>\r\n                        <td>\r\n                            @item.cliente_descripcion\r\n                        </td>\r\n                        <td>\r\n                            @item.fecha\r\n                        </td>\r\n                        <td>\r\n                            @item.nota\r\n                        </td>\r\n                        <td>\r\n                            @item.total_factura\r\n                        </td>\r\n                        <td>\r\n                            @item.total_aplicado\r\n                        </td>\r\n                        <td>\r\n                            @item.total_balance\r\n                        </td>\r\n                        <td>\r\n                            @item.hotelid\r\n                        </td>\r\n                        <td>\r\n                            <a class=\"nav-link active\" href=\"/facturadetallepage?hotelid=@item.hotelid.Trim()&id=@item.id.ToString().Trim()\">\r\n                                     EDIR\r\n                                </a>\r\n\r\n                            @*<input type=\"submit\" class=\"btn btn-danger\" onclick=\"@(() => buscarurl(item.hotelid,item.id))\" style=\"width:220px;\" value=\"Cancel\" />*@\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n</div>\r\n\r\n@functions {\r\n\r\n[Parameter] List<FacturaConsultaViewModel> Model { get; set; }\r\n\r\n[Inject]\r\nprotected IUriHelper UriHelper { get; set; }\r\n\r\n\r\nvoid buscarurl(string hotelid, int id)\r\n{\r\n\r\n    UriHelper.NavigateTo($\"/facturadetallepage/{hotelid}/{id}\");\r\n}\r\n\r\n}\r\nPAGE (B)\r\n@inject WebBlazorTi.Client.Services.FacturaService FacturaService\r\n@page \"/facturadetallepage/{hotelid}/{id}\"\r\n\r\n<h1></h1>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n        <div class=\"block\">\r\n            <FacturaEncabezado Model=\"@FacturaService.facturas\">\r\n                 \r\n            </FacturaEncabezado>\r\n        </div>\r\n    </div>\r\n  \r\n</div>\r\n\r\n@functions {\r\n\r\n    [Parameter]\r\n    private string Hotelid { get; set; }\r\n\r\n    [Parameter]\r\n    private int id { get; set; }\r\n\r\n \r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n\r\n     \r\n\r\n        await FacturaService.Buscar(Hotelid, id);\r\n\r\n        FacturaService.OnChange += StateHasChanged;\r\n    }\r\n\r\n}\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/968","RelatedDescription":"Closed issue \"ERROR 'Router' cannot find any component with a route for \" (#968)"},{"Id":"330908508","IsPullRequest":false,"CreatedAt":"2018-06-10T01:34:37","Actor":"andrewtheart","Number":"967","RawContent":null,"Title":"Unable to hit breakpoints in cshtml file - Blazor","State":"closed","Body":"I am unable to hit a breakpoint in the \"Blazor (ASP.NET Core Hosted)\" template.\r\n\r\nI set a breakpoint in FetchData.cshtml \r\n\r\n    @foreach (var forecast in forecasts)\r\n\r\nThe breakpoint is set successfully and symbols are loaded (debugger states that breakpoints will be hit). However, when I load /fetchdata, the breakpoint on this line is not hit.\r\n\r\nI am able to hit breakpoints in SampleDataController.cs, specifically the WeatherForecasts() method.\r\n\r\nAlso, markup changes in the CSHTML are not reflected when the page is reloaded.\r\n\r\nThis differs from my experience with  traditional ASP.NET 4.6.1 MVC web development in Visual Studio where both live mark changes and debugging in razor pages are supported.  \r\n\r\nI am using Visual Studio 2017 Preview Version 15.8.0 Preview 2 and have .NET Core 2.1.4 installed.\r\n\r\nAdmittedly, this may not be a bug ... perhaps it is not something that will ever be planned or something that is not supported at the current time. Out of curiosity, if it is the latter, is this something on the roadmap? ","Url":"https://github.com/aspnet/Blazor/issues/967","RelatedDescription":"Closed issue \"Unable to hit breakpoints in cshtml file - Blazor\" (#967)"},{"Id":"330854552","IsPullRequest":false,"CreatedAt":"2018-06-09T05:18:52","Actor":"doubletong","Number":"963","RawContent":null,"Title":"typing chinese in a textbox will lead to the app break out","State":"open","Body":"I created a Blazor app in **chrome**  but when I am typing chinese in an input ,the app will be force to quit ","Url":"https://github.com/aspnet/Blazor/issues/963","RelatedDescription":"Open issue \"typing chinese in a textbox will lead to the app break out\" (#963)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-14T05:30:02.4430818Z","RunDurationInMilliseconds":1121}