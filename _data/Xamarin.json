{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8622678293","Type":"PullRequestEvent","CreatedAt":"2018-11-20T21:05:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2436","RelatedDescription":"Merged pull request \"[xa-prep-tasks] use JdkInfo to find JavaSdkDirectory\" (#2436) at xamarin/xamarin-android","RelatedBody":"On Windows, if you have Microsoft OpenJDK installed, you currently\r\nneeded a `Configuration.Override.props` such as:\r\n\r\n    <Project>\r\n      <PropertyGroup>\r\n        <JavaSdkDirectory>C:\\Program Files (x86)\\Java\\jdk1.8.0_161</JavaSdkDirectory>\r\n      </PropertyGroup>\r\n    </Project>\r\n\r\nThe Xamarin.Android build can't currently work with Microsoft OpenJDK,\r\nbecause it is missing header files.\r\n\r\nI've updated the `JdkInfo` MSBuild task to match a similar task in\r\nJava.Interop. It now validates that JDKs are < `$(MaxJdkVersion)`, and\r\ncontain valid header files. `$(MaxJdkVersion)` defaults to 8.0 if it\r\nis blank.\r\n\r\nNow I am able to build Xamarin.Android on a Windows machine with\r\nmultiple JDKs and it picks the correct one."},{"Id":"8622633342","Type":"PullRequestEvent","CreatedAt":"2018-11-20T20:56:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2450","RelatedDescription":"Opened pull request \"[mono-runtimes] Update @(MonoFacadeAssembly)\" (#2450) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1879\r\n\r\nAdd the following Facade assemblies to `@(MonoFacadeAssembly)`:\r\n\r\n  * `System.Buffers.dll`\r\n  * `System.Memory.dll`\r\n  * `System.Net.Http.Rtc.dll`\r\n  * `System.Threading.Tasks.Extensions.dll`\r\n\r\nNote: list was reordered to be sorted as per **sort**(1), and\r\ngenerated with the following shell code on macOS:\r\n\r\n\t$ cd external/mono/mcs/class/Facades\r\n\t$ for d in `find . -depth 1 -type d | grep -v 'netstandard\\|System.Drawing.Primitives' | sort -f` ; do\r\n\t  n=`basename \"$d\"`;\r\n\t  echo \"    <MonoFacadeAssembly Include=\\\"$n.dll\\\" />\";\r\n\tdone | pbcopy\r\n\r\nThe `netstandard` and `System.Drawing.Primitives` directory are\r\nexcluded so that the comment and following `@(MonoFacadeAssembly)`\r\nentries in `ProfileAssemblies.projitems` are still relevant."},{"Id":"8622507063","Type":"PullRequestEvent","CreatedAt":"2018-11-20T20:32:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2449","RelatedDescription":"Opened pull request \"Bump to mono/mono/2018-06@b63e5378\" (#2449) at xamarin/xamarin-android","RelatedBody":"\t$ git diff --shortstat 709b46e3..b63e5378\r\n\t 14 files changed, 138 insertions(+), 77 deletions(-)\r\n\r\nVarious fixes, primarily for iOS."},{"Id":"8622364740","Type":"PullRequestEvent","CreatedAt":"2018-11-20T20:04:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2439","RelatedDescription":"Merged pull request \"[mono-sdks] <DownloadUri/> should not run during design-time builds\" (#2439) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2350\r\n\r\nMost of the logic in `mono-runtimes.csproj` was happening during\r\n`CoreCompile`. The problem with this is that design-time builds in\r\nVisual Studio runs `CoreCompile`. The `Task.Wait` in `<DownloadUri/>`\r\ncauses a hang.\r\n\r\nIt turns out we could just completely remove the following target:\r\n\r\n    <Target Name=\"CoreCompile\"\r\n        DependsOnTargets=\"_Build\">\r\n    </Target>\r\n\r\n`_Build` still runs appropriately. `_BuildUnlessCached` will call\r\n`ForceBuild` or `_Build` depending if things are cached."},{"Id":"8622364727","Type":"IssuesEvent","CreatedAt":"2018-11-20T20:04:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2350","RelatedDescription":"Closed issue \"[build] Visual Studio gets stuck opening Xamarin.Android.sln because `_DownloadArchive` runs during design-time build\" (#2350) at xamarin/xamarin-android","RelatedBody":"My temporary local workaround is to delete the [`CoreCompile` target from *mono-runtimes.targets*](https://github.com/xamarin/xamarin-android/blob/ada853bf203aea456129d4015fb132e635f8c8b8/src/mono-runtimes/mono-runtimes.targets#L630-L632). This is a bit tricky because it changes the `$(_VersionHash)` property that's used to pick which Mono bundle to download, so I also have to manually override `$(_VersionHash)` back to the original value.\r\n\r\n### Steps to Reproduce\r\n\r\n1. `git clone https://github.com/xamarin/xamarin-android.git`\r\n\r\n2. `msbuild Xamarin.Android.sln /t:Prepare`\r\n\r\n3. Open Xamarin.Android.sln in Visual Studio 2017.\r\n\r\n### Expected Behavior\r\n\r\nThe solution opens successfully.\r\n\r\n### Actual Behavior\r\n\r\nThe solution gets stuck on loading.  In particular, the Visual Studio Main Thread gets stuck in:\r\n\r\n```\r\nxa-prep-tasks.dll!Xamarin.Android.BuildTools.PrepTasks.DownloadUri.Execute() Line 58\r\n```\r\n\r\nIt is trying to download `https://xamjenkinsartifact.blob.core.windows.net/mono-sdks/android-debug-cda3acc57cd40c666b2fea8391cdd68c8d4eb10c-Windows.tar.gz`.  I think it is unintentional that the [`_DownloadArchive`](https://github.com/xamarin/xamarin-android/blob/ada853bf203aea456129d4015fb132e635f8c8b8/src/mono-runtimes/mono-runtimes.targets#L274) target is trying to run during the design-time build.\r\n\r\n### Version Information\r\n\r\nThis change in behavior was introduced by <https://github.com/xamarin/xamarin-android/pull/2301>, but the real question might go back to <https://github.com/xamarin/xamarin-android/pull/1425>.\r\n\r\nI'm not sure whether Omnisharp-Roslyn requires the `CoreCompile` target in *mono-runtimes.targets* to produce any particular artifacts in order to work as desired.  Maybe it would be sufficient to use a \"dummy\" target in the `DependsOnTargets` attribute rather than `_Build`?  Maybe the important thing for Omnisharp-Roslyn is the `Outputs` attribute of the target?  In that case the current version would already cause problems for Omnisharp-Roslyn because the `_Build` target has no `Outputs` attribute:\r\n\r\n<https://github.com/xamarin/xamarin-android/blob/ada853bf203aea456129d4015fb132e635f8c8b8/src/mono-runtimes/mono-runtimes.targets#L630-L632>\r\n\r\n<https://github.com/xamarin/xamarin-android/blob/ada853bf203aea456129d4015fb132e635f8c8b8/src/mono-runtimes/mono-runtimes.targets#L298-L300>"},{"Id":"8621082184","Type":"PullRequestEvent","CreatedAt":"2018-11-20T16:29:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2448","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Include compiled.flata in archive\" (#2448) at xamarin/xamarin-android","RelatedBody":"Commit 960f32c5 changed the location where libraries compile\r\ntheir `compiled.flata` archive. As a result this file\r\nwas NOT being included in the `ManagedLibraryResourceArchive`.\r\n\r\nThis PR fixes up the `CreateManagedLibraryResourceArchive` to\r\nuse the new location for storing the `flata` archives."},{"Id":"8620542641","Type":"PullRequestEvent","CreatedAt":"2018-11-20T15:16:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2443","RelatedDescription":"Merged pull request \"[tests] Run the XForms test also in Debug and Release/AOT\" (#2443) at xamarin/xamarin-android","RelatedBody":"I think we want to run and measure this test in all configurations,\r\nthe same as we do for Mono.Android-Tests."},{"Id":"8620450668","Type":"PullRequestEvent","CreatedAt":"2018-11-20T15:03:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2445","RelatedDescription":"Merged pull request \"Do not create override directory in Release builds\" (#2445) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2053\r\n\r\nOverride directory is used only during development and, as such, is not created\r\nby applications built in the `Release` configuration. The only exception to this\r\nrule is when the release app is being profiled, in which case we do create the\r\noverride directory.\r\n\r\nRecent migration to CMake for `src/monodroid` builds caused our release builds\r\nof the XA runtime to not define the `RELEASE` macro and, in effect, the override\r\ndirectory has always been created for release apps.\r\n\r\nThis commit rectifies it and makes the `src/monodroid` release\r\nbuild **actually** work :)"},{"Id":"8620450644","Type":"IssuesEvent","CreatedAt":"2018-11-20T15:03:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2053","RelatedDescription":"Closed issue \"Release installations are creating an .__override__ directory and should not be\" (#2053) at xamarin/xamarin-android","RelatedBody":"I'm seeing that an override directory is being created after installing and deploying a simple application in release mode, which should not be the case. \r\n\r\n### Steps to Reproduce\r\n1. Using your Android project of choice, open the AndroidManifest.xml file and add the following attribute to ensure the `run-as` command will work as expected.\r\n  `<application android:debuggable=\"true\" />`\r\n2. Install this app to a device in release mode, and launch it once.\r\n3. Run the following command to search for an `.__override__` directory:\r\n`adb shell run-as $(PackageName) ls -la /data/data/$(PackageName)/files/`\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThis dir (`/data/data/$(PackageName)/files/.__override__`) does not exist after deploying and launching an app in release mode.\r\n\r\n### Actual Behavior\r\n`/data/data/$(PackageName)/files/.__override__` is created in release mode.\r\n\r\n```\r\nC:\\Users\\peter>adb shell run-as mono.samples.button ls -la /data/data/mono.samples.button/files/\r\ntotal 40\r\ndrwxrwx--x 5 u0_a650 u0_a650 4096 2018-08-09 16:01 .\r\ndrwx------ 5 u0_a650 u0_a650 4096 2018-08-09 16:06 ..\r\ndrwxrwxrwx 2 u0_a650 u0_a650 4096 2018-08-09 16:01 .__override__\r\ndrwxr-xr-x 2 u0_a650 u0_a650 4096 2018-08-09 16:01 .config\r\ndrwxr-xr-x 3 u0_a650 u0_a650 4096 2018-08-09 16:01 .local\r\n```\r\n\r\n### Version Information\r\nmonodroid/master/983976b2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8619061684","Type":"PullRequestEvent","CreatedAt":"2018-11-20T11:12:09","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2448","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Include compiled.flata in archive\" (#2448) at xamarin/xamarin-android","RelatedBody":"Commit 960f32c5 changed the location where libraries compile\r\ntheir `compiled.flata` archive. As a result this file\r\nwas NOT being included in the `ManagedLibraryResourceArchive`.\r\n\r\nThis PR fixes up the `CreateManagedLibraryResourceArchive` to\r\nuse the new location for storing the `flata` archives."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8623263380","Type":"IssuesEvent","CreatedAt":"2018-11-20T23:05:13","Actor":"SymmetryKeeper","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4493","RelatedDescription":"Opened issue \"ResourceDictioanary doesn't work as expected\" (#4493) at xamarin/Xamarin.Forms","RelatedBody":"A First Scenario\r\n1. I have a `Resource Dictionary` with the Code Behind File and a `[XamlCompilation (XamlCompilationOptions.Skip)]` attribute under class\r\n2. There is an `Static Resource` defined into this `Resource Dictionary`\r\n3. Also there is an View with Code Behind and the same attribute `XamlCompilationOptions.Skip`\r\n4. Then I try following\r\n```\r\n<Grid>\r\n  <Grid.Resources>\r\n    <ResourceDictionary Source=\"Templates.xaml\"/>\r\n  <Grid.Resources>\r\n  <ContentView ControlTemplate=\"{StaticResource UseAnyStaticKeyFromTemplates}\"/>\r\n</Grid>\r\n```\r\n5. Even Visual Studio see into the autocomplete current Static Key but at Xamarin runtime I got an exception that this key is not found. Why?\r\n\r\nA Second Scenario\r\n1. I try to use recursive merging of Resource Dictionaries\r\n2. Xamarin can not find static keys at second or deeper levels, only first level supported\r\n\r\nLooks that functionality of Resource Dictionaries is very poor."},{"Id":"8623073052","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:22:04","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4195","RelatedDescription":"Closed pull request \"[Android] Fix effects not attached on Frame\" (#4195) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSince the use of FastRenderers, the effects are not correctly attached anymore on the Frame element. Explicitly use old renderer makes it works. In fact, unlike others fast renderers, the Frame FastRenderer doesn't register the EffectControlProvider when element is set.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3548\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n- Create a PlatformEffect\r\n- Attach effect to a Frame element\r\n- Add a log message to the OnAttached method of the PlatformEffect\r\n- Ensure this message is displayed\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8622803212","Type":"PullRequestEvent","CreatedAt":"2018-11-20T21:29:18","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4254","RelatedDescription":"Merged pull request \"[iOS] Add JavaScript dialog delegate to WkWebView\" (#4254) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThe default renderer for `WebView` on iOS uses `UIWebView`, which handles Javascript-based user dialogs automatically. With `WKWebView`, these dialogs need to be set up manually with a delate.\r\n\r\nThis will allow users choosing to \"upgrade\" to `WkWebView` to retain the functionality of any javascript dialogs their web source may be using.\r\n\r\n### Issues Resolved ### \r\n- Fixes #4253\r\n\r\n### Platforms Affected ### \r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\nWithout this change, dialogs created via Javascript in the `WKWebView` would never appear, now they will appear at the same times as they do when using `UIWebView`.\r\n\r\n### Testing Procedure ###\r\nUse the repro steps mentioned in #4253 and the updated UI test to ensure the dialogs appear and behave correctly (confirm logs a bool, prompt logs an input string, etc).\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8622803187","Type":"IssuesEvent","CreatedAt":"2018-11-20T21:29:17","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4253","RelatedDescription":"Closed issue \"Javascript alert dialogs don't work when using WKWebView\" (#4253) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe `alert()`, `confirm()` and `prompt()` Javascript functions normally produce the appropriate native dialogs for user interaction, but don't if the WebView renderer is set to `WkWebViewRenderer`. \r\n\r\n### Steps to Reproduce\r\n\r\n1.  Add `[assembly: ExportRenderer(typeof(WebView),typeof(Xamarin.Forms.Platform.iOS.WkWebViewRenderer))]` to **Xamarin.Forms.ControlGallery.iOS**\r\n2. Launch **Xamarin.Forms.ControlGallery.iOS**\r\n3. Navigate to **WebView Gallery -> JavaScriptAlert View**\r\n4. Click the button\r\n\r\n### Expected Behavior\r\nA native dialog box should appear as it does when using the default `UIWebView`.\r\n\r\n### Actual Behavior\r\nNothing happens.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: current master\r\n- Last known good version: N/A\r\n- IDE: VS 2017 15.8.6\r\n- Platform Target Frameworks:\r\n  - iOS:  12.0\r\n"},{"Id":"8621395130","Type":"PullRequestEvent","CreatedAt":"2018-11-20T17:13:42","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4482","RelatedDescription":"Merged pull request \"[CSS] allow ImageButton Styling\" (#4482) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[CSS] allow ImageButton Styling\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #4470\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard"},{"Id":"8621395094","Type":"IssuesEvent","CreatedAt":"2018-11-20T17:13:42","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4470","RelatedDescription":"Closed issue \"ImageButton and CSS\" (#4470) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nBased on the code in the 3.4 branch it seems like there may be an omission in the CSS mappings for `ImageButton`. Specifically:\r\n\r\n`[assembly: StyleProperty(\"border-width\", typeof(Button), nameof(Button.BorderWidthProperty))]`\r\n\r\ncould be opened up to include `ImageButton`:\r\n\r\n`[assembly: StyleProperty(\"border-width\", typeof(IBorderElement), nameof(BorderElement.BorderWidthProperty))]`\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8624211588","Type":"PullRequestEvent","CreatedAt":"2018-11-21T03:53:12","Actor":"spouliot","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5161","RelatedDescription":"Merged pull request \"Bump mono to fix System.Threading.Tasks.Extensions facade. Fixes #5158\" (#5161) at xamarin/","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@000780ca82c [2018-04] Add non-generic AsyncValueTaskMethodBuilder, etc (#11747)\n\nDiff: https://github.com/mono/mono/compare/969357ac02b2c08a43ef89d98aca550d3648bf00...000780ca82c87316227f1da94314587022d02f70\n\nreference: https://github.com/xamarin/xamarin-macios/issues/5158"},{"Id":"8624211588","Type":"PullRequestEvent","CreatedAt":"2018-11-21T03:53:12","Actor":"spouliot","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5161","RelatedDescription":"Merged pull request \"Bump mono to fix System.Threading.Tasks.Extensions facade. Fixes #5158\" (#5161) at xamarin/","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@000780ca82c [2018-04] Add non-generic AsyncValueTaskMethodBuilder, etc (#11747)\n\nDiff: https://github.com/mono/mono/compare/969357ac02b2c08a43ef89d98aca550d3648bf00...000780ca82c87316227f1da94314587022d02f70\n\nreference: https://github.com/xamarin/xamarin-macios/issues/5158"},{"Id":"8624101309","Type":"IssuesEvent","CreatedAt":"2018-11-21T03:16:03","Actor":"ALcherry","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5162","RelatedDescription":"Opened issue \"winddidload\" (#5162) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8621844513","Type":"PullRequestEvent","CreatedAt":"2018-11-20T18:31:10","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5161","RelatedDescription":"Opened pull request \"Bump mono to fix System.Threading.Tasks.Extensions facade. Fixes #5158\" (#5161) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@000780ca82c [2018-04] Add non-generic AsyncValueTaskMethodBuilder, etc (#11747)\n\nDiff: https://github.com/mono/mono/compare/969357ac02b2c08a43ef89d98aca550d3648bf00...000780ca82c87316227f1da94314587022d02f70\n\nreference: https://github.com/xamarin/xamarin-macios/issues/5158"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":170,"FavoriteCount":97,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":13,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":112,"FavoriteCount":57,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":23,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":18,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":36,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":31,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":46,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2018-11-21T05:30:57.0433001Z","RunDurationInMilliseconds":4326}