{"Data":{"Blog":{"FeedItems":[{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8194233859","Type":"PullRequestEvent","CreatedAt":"2018-08-30T22:26:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2122","RelatedDescription":"Merged pull request \"Add myself to CODEOWNERS for a few locations\" (#2122) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8194231441","Type":"IssuesEvent","CreatedAt":"2018-08-30T22:26:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1931","RelatedDescription":"Closed issue \"Wrong header separator with AndroidClientHandler\" (#1931) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n```csharp\r\nvar client = new HttpClient();\r\nclient.DefaultRequestHeaders.UserAgent.Add(new ProductInfoHeaderValue(\"Product\", \"1.0.0\"));\r\nclient.DefaultRequestHeaders.UserAgent.Add(new ProductInfoHeaderValue(\"(comment) extra\"));\r\n```\r\n### Expected Behavior\r\nUser-Agent must be `Product/1.0.0 (comment) extra`. For iOS, NSUrlSessionHandler does it right.\r\n\r\n### Actual Behavior\r\nUser-Agent is `Product/1.0.0,(comment) extra` and this causes problems with web servers\r\n\r\n### Version Information\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\n\r\n\r\n"},{"Id":"8194230627","Type":"PullRequestEvent","CreatedAt":"2018-08-30T22:25:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2071","RelatedDescription":"Merged pull request \"Fixed the issue #1931\" (#2071) at xamarin/xamarin-android","RelatedBody":"HTTP headers `Server` and `User-Agent` must use space symbol as a separator instead of comma as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231). Implemented this requirement similar to what have been done for NSUrlSessionHandler.cs in Xamarin.iOS.\r\n\r\nSee the issue #1931\r\n"},{"Id":"8193882609","Type":"PullRequestEvent","CreatedAt":"2018-08-30T21:02:37","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2122","RelatedDescription":"Opened pull request \"Add myself to CODEOWNERS for a few locations\" (#2122) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8193391809","Type":"PullRequestEvent","CreatedAt":"2018-08-30T19:23:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2111","RelatedDescription":"Merged pull request \"[timing] CSV results in separate file per test app\" (#2111) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/plot/Build%20times/\r\n\r\nOur existing graph plotting build times on Jenkins is a bit\r\nunreadable: there are too many columns!\r\n\r\nIn fact, the graph crashes completely when a third app is added\r\ndownstream in `monodroid`.\r\n\r\nSo after this change, we produce:\r\n- `TestResult-Timing-HelloWorld.csv`\r\n- `TestResult-Timing-Xamarin.Forms-Integration.csv`\r\n\r\nWe can ingest these as two separate graphs on Jenkins.\r\n\r\nAfter this is merged, I will need to add some further configuration on\r\nJenkins:\r\n- Rename the existing graph to `(History)` to keep the old data\r\n- Add two new graphs for `Hello World` and `Xamarin.Forms`\r\n\r\nOther changes:\r\n- Include `bin\\Test*\\Timing_*` output files in `test-errors.zip`\r\n- This includes both `*.log` files of the build output, and `*.xml`\r\n  files of timing of each MSBuild target individually.\r\n- Include `*.csv` files in `test-errors.zip`\r\n\r\nIf we ever need this data down the road, we will have it stored on\r\nAzure."},{"Id":"8193325990","Type":"PullRequestEvent","CreatedAt":"2018-08-30T19:11:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2119","RelatedDescription":"Merged pull request \"Update emulator to the latest version, switch to API 28\" (#2119) at xamarin/xamarin-android","RelatedBody":"This commit updates the Android emulator to the latest version\r\navailable (`4969155` a.k.a. v27.3.10), switches its system image to API 28,\r\nmakes sure that the emulator is started from the `emulator` subdir of the\r\nAndroid SDK root (the binary in `tools` won't work anymore) and makes sure we\r\ndon't error out when we attempt to uninstall packages that don't exist in the\r\nAVD."},{"Id":"8192524145","Type":"IssuesEvent","CreatedAt":"2018-08-30T16:35:50","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2121","RelatedDescription":"Opened issue \"[Aapt2] `_CreateAapt2VersionCache` slow due to wildcard usage\" (#2121) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. I built the `tests/Xamarin.Forms-Performance-Integration` app\r\n2. Modify a XAML file, build the app again\r\n3. `_CreateAapt2VersionCache` took 181ms, but the values were cached!\r\n\r\nI think the problem is due to wildcard usage:\r\n```xml\r\n<ItemGroup>\r\n\t<_CompiledFlataArchive Include=\"$(IntermediateOutputPath)\\**\\*.flata\"/>\r\n\t<_CompiledFlataStamp Include=\"$(IntermediateOutputPath)\\**\\compiled.stamp\"/>\r\n</ItemGroup>\r\n```\r\n\r\nMaybe these could be done without using `**`? we have a lot of files in here.\r\n\r\n### Expected Behavior\r\n\r\n`_CreateAapt2VersionCache` should take near 1ms when things are cached.\r\n\r\n### Actual Behavior\r\n\r\n`_CreateAapt2VersionCache` is taking ~181ms even when cached.\r\n\r\n### Version Information\r\n\r\nWas using master as of: https://github.com/xamarin/xamarin-android/commit/0a46788a93e10b6fb68afb12ba350635da2e642c\r\n\r\n### Log File\r\n\r\n[msbuild.zip](https://github.com/xamarin/xamarin-android/files/2337025/msbuild.zip)\r\n"},{"Id":"8191170160","Type":"IssuesEvent","CreatedAt":"2018-08-30T13:02:08","Actor":"deakjahn","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2120","RelatedDescription":"Opened issue \"Mono.Cecil.Cil.SymbolsNotMatchingException warning\" (#2120) at xamarin/xamarin-android","RelatedBody":"_Mono.Cecil.Cil.SymbolsNotMatchingException: Symbols were found but are not matching the assembly_ warning appeared in XF/Android projects right after upgrading to VS 15.8.2. The project compiles and runs fine.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open a project\r\n\r\n### Expected Behavior\r\n\r\nNo warning.\r\n\r\n### Version Information\r\n\r\nVS 15.8.2\r\n"},{"Id":"8191149423","Type":"PullRequestEvent","CreatedAt":"2018-08-30T12:58:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2108","RelatedDescription":"Merged pull request \"[linker] Audit mscorlib preserve list\" (#2108) at xamarin/xamarin-android","RelatedBody":"Remove items already present in the mono's mscorlib preserve list\r\n\r\nAlso remove old items we imported at the beginning from monotouch\r\nlinker. XMI doesn't have them anymore too.\r\n\r\nKeep only our changes. These might be audited later to see whether\r\nthey might be upstreamed to mono or whether they are XA specific."},{"Id":"8191115776","Type":"PullRequestEvent","CreatedAt":"2018-08-30T12:52:51","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2110","RelatedDescription":"Merged pull request \"[mono-sdks] Use for host-mxe-Win32 and host-mxe-Win64\" (#2110) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8190984755","Type":"PullRequestEvent","CreatedAt":"2018-08-30T12:29:00","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2116","RelatedDescription":"Merged pull request \"Make {x,n}unit runner logging level configurable from command line\" (#2116) at xamarin/xamarin-android","RelatedBody":"The LogWriter class used by both xUnit and NUnit test runners has configurable\r\nminimum logging level which defaults to `Info`. It is not possible to configure\r\nthe level from command line, e.g. when starting the instrumentation. This commit\r\nfixes the problem by introducing the `loglevel` parameter which can be sent to\r\nthe instrumentation using this syntax:\r\n\r\n     -e \"loglevel info\"\r\n\r\nThe acceptable log level values are (the strings are case-insensitive):\r\n\r\n   * Wtf\r\n   * Error\r\n   * Warning\r\n   * Info\r\n   * Debug\r\n   * Verbose\r\n\r\nThe default in the logger class is reasonable `Info`, however this commit\r\nchanges the value used by the `RunTestApks` target to `Verbose` in order to try\r\nto figure out why the tests are failing on us when run on PR builders."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8194867719","Type":"IssuesEvent","CreatedAt":"2018-08-31T02:14:24","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3687","RelatedDescription":"Opened issue \"[Previewer, Android] Custom font throws an error \" (#3687) at xamarin/Xamarin.Forms","RelatedBody":"\r\n\r\n### Description\r\n\r\nOriginal issue. https://bugzilla.xamarin.com/show_bug.cgi?id=57417#c5\r\n\r\nI can confirm this still happens.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Preview an Android UI with a custom font. \r\n\r\n\r\n### Expected Behavior\r\nRenders\r\n\r\n### Actual Behavior\r\nErrors\r\n\r\n### Basic Information\r\n\r\n- Version with issue: still present in 3.2\r\n\r\n### Reproduction\r\nhttps://github.com/microsoft/ConferenceVision"},{"Id":"8194802207","Type":"PullRequestEvent","CreatedAt":"2018-08-31T01:49:34","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3686","RelatedDescription":"Opened pull request \"Remove ver check\" (#3686) at xamarin/Xamarin.Forms","RelatedBody":"Remove version check. Split into 3 statements. "},{"Id":"8194710709","Type":"PullRequestEvent","CreatedAt":"2018-08-31T01:14:35","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3685","RelatedDescription":"Opened pull request \"Fix ScrollView Padding issue\" (#3685) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n This PR fix ScrollView padding issue on Tizen\r\n\r\n### Issues Resolved ### \r\n Padding of ScrollView was not shown properly\r\n\r\n### API Changes ###\r\n### Platforms Affected ### \r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage\r\n\tx:Class=\"WearableUIGallery.TC.TCPopupEntry\"\r\n\txmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n\txmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n\txmlns:w=\"clr-namespace:Tizen.Wearable.CircularUI.Forms;assembly=Tizen.Wearable.CircularUI.Forms\">\r\n\t<ContentPage.Content>\r\n        <ScrollView x:Name=\"Scroller\" Padding=\"20,40,20,40\">\r\n            <StackLayout BackgroundColor=\"Red\">\r\n            </StackLayout>\r\n        </ScrollView>\r\n    </ContentPage.Content>\r\n</ContentPage>\r\n```\r\nBefore\r\n![8c122b6a-ab95-11e8-8f4b-eef91319fd02](https://user-images.githubusercontent.com/1029155/44887287-81916a80-ad06-11e8-9521-6fd35c7d6e6c.png)\r\n\r\nAfter\r\n![image](https://user-images.githubusercontent.com/1029155/44887251-442cdd00-ad06-11e8-94fc-b4b352f740be.png)\r\n\r\n\r\n### Testing Procedure ###\r\nNone\r\n\r\n### PR Checklist ###\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8194408478","Type":"PullRequestEvent","CreatedAt":"2018-08-30T23:20:00","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3569","RelatedDescription":"Closed pull request \"[Android] Add project-wide properties as ext block\" (#3569) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nref: https://developer.android.com/studio/build/\r\nadd better way to get the Gradle based values.\r\nAslo upgrade to SDK 27\r\n\r\n### Issues Resolved ###\r\n\r\nadditionally, changed the SDK values to 27 as per new changes coming.\r\n\r\nAndroid Target API Level 26 will be required in August 2018.\r\nhttps://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html\r\n\r\n\r\n"},{"Id":"8193298949","Type":"PullRequestEvent","CreatedAt":"2018-08-30T19:05:40","Actor":"jsuarezruiz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3684","RelatedDescription":"Opened pull request \"[GTK] Fixed Issue 3663: ListView entries problem with some characters\" (#3684) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixed Issue 3663: ListView entries problem with some characters:\r\n\r\n### Issues Resolved ### \r\n- fixes #3663 \r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- GTK\r\n\r\n### Behavioral/Visual Changes ###\r\nCells using special characters must be rendered without problems.\r\n\r\n### Before/After Screenshots ### \r\n\r\nBefore\r\n![imagen](https://user-images.githubusercontent.com/6755973/44873404-70117980-ac98-11e8-9471-e3e0f972c941.png)\r\n\r\nAfter\r\n![imagen](https://user-images.githubusercontent.com/6755973/44873367-5112e780-ac98-11e8-9b7c-47c776063b7a.png)\r\n\r\n### PR Checklist ###\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8192843211","Type":"PullRequestEvent","CreatedAt":"2018-08-30T17:37:49","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2816","RelatedDescription":"Closed pull request \"Initial implementation of Segues\" (#2816) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSegues are objects that represent navigational actions. These objects can be created and wired up entirely in XAML without any codebehind (or with code, if you prefer).\r\n\r\nThis PR is an evolution of https://github.com/chkn/Xamarin.Forms.Segues integrated into Core. This integration has some benefits:\r\n\r\n- Integrates into navigation\r\n    + New `NavigationAction` enum maps to `INavigation` methods\r\n    + New internal type, `ValueSegue`: a lightweight struct that holds either a simple `NavigationAction` or a full `Segue` instance\r\n    + A lot of navigation internals have been refactored in terms of these, which I believe simplifies and streamlines things.\r\n- Pay only for what you use\r\n    + Overloads of new methods are provided that take `NavigationAction` when a full `Segue` instance is not needed\r\n    + `{Segue}` markup extension does not actually instantiate `Segue` (returns a lightweight `ICommand` that triggers the same behavior)\r\n    + Full `Segue` instance can be provided by user if they want to enable/disable it, subclass it, bind properties, or to perform actions when the segue is executed.\r\n- Ultimately, will enable custom transitions (to come later in a separate PR)\r\n\r\nI've included the platform implementation for iOS only for now. If we decide we want to proceed with this approach, I could implement Android and UWP as well.\r\n\r\n#### NavigationAction\r\n\r\nThis introduces the `NavigationAction` enum, whose values mostly represent method calls on `INavigation`. However, there are a couple differences:\r\n\r\n##### Show\r\n\r\nThis PR introduces `INavigation.ShowAsync` and `NavigationAction.Show`. This action is designed to do the right thing in most common cases, and as such, is the default `NavigationAction` for segues. If the user does not want this default behavior, they can specify one of the other navigation actions explicitly.\r\n\r\nBehavior depends on the context. Here are the rules:\r\n\r\n- If the source page's ancestor is a `NavigationPage`, calls `INavigation.PushAsync`.\r\n- Otherwise, calls `INavigation.PushModalAsync`.\r\n\r\nI also had a couple other interesting ideas for this action in the context of a `MultiPage` or `MasterDetailPage`, but I did not implement them for this PR.\r\n\r\n**Caveat:** Throws an `InvalidOperationException` if this action is used when navigation is not rooted (i.e. `NavigationProxy.Inner == null`). It might be possible to remove this limitation, but there are some issues that would need to be resolved.\r\n\r\n##### Pop\r\n\r\nThis PR also introduces `NavigationAction.Pop`. Note that this is NOT the equivalent of calling `INavigation.PopAsync`, which is an existing API that corresponds to the new `NavigationAction.PopPushed`.\r\n\r\nLike the above, `NavigationAction.Pop` tries to do the right thing depending on the context:\r\n\r\n- If there is anything on the modal stack, call `INavigation.PopModalAsync`.\r\n- Otherwise, call `INavigation.PopAsync`.\r\n\r\n##### MainPage\r\n\r\nSometimes you either don't want stack-based navigation, or you want to reset the root of your app easily. As such, `NavigationAction.MainPage` is included that trivially sets `Application.Current.MainPage` to the target page.\r\n\r\n#### Native Segues\r\n\r\nSegues may be used to navigate to native screens. This functionality is analogous to the native view support (https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/native-views/). \r\n\r\n### Examples ###\r\n\r\n#### Attach a segue to a button from XAML\r\n\r\n```xml\r\n<Button Text=\"Go to next page\"\r\n        Command=\"{Segue}\"\r\n        Segue.Target=\"{x:Type local:NextPage}\" />\r\n```\r\nNote that `Segue.Target` can also be a `DataTemplate`.\r\n\r\n#### Attach a segue to a button from code\r\n\r\n```csharp\r\n// Attaches a segue to be executed when the button is clicked\r\nbutton.SetSegue(NavigationAction.Show, new DataTemplate(typeof(NextPage)));\r\n```\r\n\r\n#### Imperatively perform a segue from code\r\n\r\n```csharp\r\n// Executes the segue now\r\nawait Navigation.NavigateAsync(NavigationAction.Show, new NextPage());\r\n```\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n\r\n```csharp\r\nnamespace Xamarin.Forms\r\n{\r\n    // The following public types have been added:\r\n    public enum NavigationAction\r\n    public class NavigationActionConverter : TypeConverter\r\n    public class Segue : BindableObject, ISegueExecution\r\n    public class SegueBeforeExecuteEventArgs : EventArgs\r\n    public static class SegueExtensions\r\n    public class SegueTarget\r\n\r\n    // The following members have been added:\r\n    Task INavigation.ShowAsync(Page page);\r\n    Task INavigation.ShowAsync(Page page, bool animated);\r\n    Task INavigation.SegueAsync(Segue segue, SegueTarget target);\r\n\r\n    public event EventHandler<SegueRequestedEventArgs> NavigationPage.SegueRequested;\r\n\r\n    public Task NavigationProxy.ShowAsync(Page page)\r\n    public Task NavigationProxy.ShowAsync(Page page, bool animated)\r\n    public Task NavigationProxy.SegueAsync(Segue segue, SegueTarget target)\r\n}\r\n\r\nnamespace Xamarin.Forms.Internals\r\n{\r\n    // The following public types have been added:\r\n    public interface ICommandableElement\r\n    public interface ISegueExecution\r\n    public class SegueRequestedEventArgs\r\n    public struct ValueSegue\r\n}\r\n\r\nnamespace Xamarin.Forms.Xaml\r\n{\r\n    public class SegueExtension : IMarkupExtension<ICommand>\r\n}\r\n\r\nnamespace Xamarin.Forms.Platform.iOS\r\n{\r\n    // The following public types have been added:\r\n    public class NativePageWrapper\r\n    public class NativePageWrapperRenderer : IVisualElementRenderer\r\n    public sealed class ViewControllerSegueTarget : SegueTarget\r\n\r\n    // The following members have been added:\r\n    public static Page PageExtensions.ToPage(this UIViewController viewController)\r\n}\r\n```\r\n\r\nChanged:\r\n\r\n```csharp\r\nnamespace Xamarin.Forms\r\n{\r\n    // The following public types now implement `Xamarin.Forms.Internals.ICommandableElement`:\r\n    public class Button : ICommandableElement\r\n    public class TextCell : ICommandableElement\r\n    public class ClickGestureRecognizer : ICommandableElement\r\n    public class Entry : ICommandableElement\r\n    public class SearchBar : ICommandableElement\r\n    public class MenuItem : ICommandableElement\r\n    public class TapGestureRecognizer : ICommandableElement\r\n}\r\n```\r\n\r\n### Behavioral Changes ###\r\n\r\nNone intended.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if someone can point me at similar tests, I will add some)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8194030021","Type":"PullRequestEvent","CreatedAt":"2018-08-30T21:35:09","Actor":"luhenry","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4732","RelatedDescription":"Opened pull request \"[mono-sdks] Necessary changes to unify the LLVM provisioning for both iOS and Android.\" (#4732) at xamarin/xamarin-macios","RelatedBody":"Dependencies:\r\n - [ ] https://github.com/mono/mono/pull/10398"},{"Id":"8193904507","Type":"PullRequestEvent","CreatedAt":"2018-08-30T21:07:09","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4731","RelatedDescription":"Opened pull request \"[tests] Fix System.Net.Http and link sdk tests\" (#4731) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8193238697","Type":"IssuesEvent","CreatedAt":"2018-08-30T18:54:10","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4730","RelatedDescription":"Opened issue \"[XI].ipa created  using release config and archive for publishing behaves differently with wildcard profiles\" (#4730) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Open iOS project, https://github.com/xamarin/SubmissionSamples/tree/master/iOSCoolApp\r\n2. Use wildcard iOS distribution profiles\r\n3. Archive the project for publishing\r\n4. App archives successfully and gets uploaded to AppStoreConnect without any error message\r\n5. Build a .ipa using release|iphone config and wildcard iOS distribution profile\r\n6. Upload .ipa using Apploader\r\n\r\n### Expected Behavior\r\nApp uploads successfully\r\n\r\n### Actual Behavior\r\nApp fails to upload with an error, ERROR: ERROR ITMS-90211: \"Invalid Code Signing Entitlements. The signature for your app bundle contains entitlement values that are not supported. For the 'com.apple.developer.ubiquity-container-identifiers' entitlement, the values in the array must start with the prefix provided by Apple in the provisioning profile, followed by characters that are uppercase or lowercase Roman letters [A-Z, a-z], the digits 0 through 9, dot ['.'], or hyphen ['-'], and not contain any wildcard characters. Specifically, value 'DPXCPAGVTZ.*' for the key 'com.apple.developer.ubiquity-container-identifiers' in 'Payload/iOSCoolApp.app/iOSCoolApp' is not supported.\"\r\n\r\nThe issue here is why building of a .ipa behaves differently with release|iPhone and archive for publishing. Results from both steps should be identical\r\n\r\n### Environment\r\n\r\n<!--\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.2 (build 33)\r\nInstallation UUID: 74c37335-5878-4fa7-8f71-09bc48b661c5\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.14 (Visual Studio Enterprise)\r\nHash: 1a6e2786\r\nBranch: \r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/gourikumari/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\r\nSDK Tools Version: 25.2.3\r\nSDK Platform Tools Version: 25.0.1\r\nSDK Build Tools Version: 25.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_60\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_60-b27)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.14 (Visual Studio Enterprise)\r\nHash: 1a6e2786\r\nBranch: HEAD\r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706020033\r\nGit revision: 609ad78d9663b4881e650898e6b4a4ba86383ba8\r\nBuild date: 2018-08-27 21:40:35+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f9882ea2b3117c8baefdb53288c9253760fe5692\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:59:21 PDT 2018\r\n    root:xnu-4903.201.2~4/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nGist Ide Information 1.1.0\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/GouriKumari/c809987e6a89dad0d2a02183b4c96ee9\r\n\"\"\"\r\n### Example Project (If Possible)\r\n\r\nhttps://github.com/xamarin/SubmissionSamples/tree/master/iOSCoolApp"},{"Id":"8193003912","Type":"IssuesEvent","CreatedAt":"2018-08-30T18:08:55","Actor":"mauroa","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4623","RelatedDescription":"Closed issue \"Upgrade to VS 15.8 fails to install Xamarin.iOS 11.14 via Windows and on Mac directly\" (#4623) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n1. Upgrade VS on Windows to 15.8\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nUpgrade completed and connectivity to MAC is set up with the latest Xamarin.iOS 11.14\r\n\r\n\r\n### Actual Behavior\r\nInstallation of the Xamarin.iOS 11.14 fails via VS on Windows as well as in VS of MAC\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.8.0\r\nVisualStudio.15.Release/15.8.0+28010.0\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA967\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASP.NET and Web Tools 2017   15.8.05067.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.4000.3\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.8.05023.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.4000.3\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nFileComparer2017   1.0\r\nCompare files in Visual Studio 2017\r\n\r\nGitHub.VisualStudio   2.5.4.3349\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nGorillaPlayerPackage Extension   1.0\r\nGorillaPlayerPackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.4000.3\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.4000.3\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.3\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.4000.3\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNode.js Tools   1.4.20802.1 Commit Hash:97e1085d8b4b8e3e51c398e910177f87e86d135e\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Live Reload   0.3.27 (remotes/origin/dev@207abf7)\r\nProvides live reload capabilities for Xamarin XAML.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.8.0\r\nVisualStudio.15.Release/15.8.0+28010.0\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA967\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASP.NET and Web Tools 2017   15.8.05067.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.4000.3\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.8.05023.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.4000.3\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nFileComparer2017   1.0\r\nCompare files in Visual Studio 2017\r\n\r\nGitHub.VisualStudio   2.5.4.3349\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nGorillaPlayerPackage Extension   1.0\r\nGorillaPlayerPackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.4000.3\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.4000.3\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.3\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.4000.3\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNode.js Tools   1.4.20802.1 Commit Hash:97e1085d8b4b8e3e51c398e910177f87e86d135e\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Live Reload   0.3.27 (remotes/origin/dev@207abf7)\r\nProvides live reload capabilities for Xamarin XAML.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n![image](https://user-images.githubusercontent.com/26844611/44144946-278543ae-a04f-11e8-828e-0c856e93fba7.png)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\n\n> VS bug [#664434](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/664434)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":39,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":118,"FavoriteCount":76,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":33,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":48,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":174,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":57,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":262,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null}]}},"RunOn":"2018-08-31T05:30:53.2343804Z","RunDurationInMilliseconds":4065}