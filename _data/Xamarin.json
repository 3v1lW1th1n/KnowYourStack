{"Data":{"Blog":{"FeedItems":[{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null},{"Title":"Podcast: Xamarin.Forms 2.5.0, Live Player, and What’s New in Visual Studio for Mac","PublishedOn":"2017-12-01T21:48:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover the latest news for mobile developers from Microsoft Connect(); 2017, including Xamarin.Forms 2.5.0 and awesome updates to the Live...","Href":"https://blog.xamarin.com/podcast-xamarin-forms-2-5-0-live-player-whats-new-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in December","PublishedOn":"2017-12-01T18:16:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET developer community is vastly expanding, so there&#8217;s more opportunity than ever to network with local user groups and learn about new and exciting releases, tooling, and updates to...","Href":"https://blog.xamarin.com/xamarin-developer-events-december/","RawContent":null},{"Title":"Supercharge Your Xamarin.Mac Application Startup Time","PublishedOn":"2017-11-30T20:31:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Startup performance matters, as it&#8217;s the first feature users come across when using your application. In this post, we&#8217;ll walk through some recent samples that improve Xamarin.Mac startup...","Href":"https://blog.xamarin.com/supercharge-xamarin-mac-application-startup-time/","RawContent":null},{"Title":"Upcoming Webinars | Get the Most Out of Android 8 Oreo and iOS 11","PublishedOn":"2017-11-29T20:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us on December 13 and December 14 for our newest webinar series, where we’ll show you how to make your Xamarin apps even better by adding the latest and greatest Android and iOS updates. Visual...","Href":"https://blog.xamarin.com/upcoming-webinars-get-the-most-out-of-android-8-oreo-and-ios-11-for-xamarin-developers/","RawContent":null},{"Title":"Schedule Meetings with Xamarin.Forms and the Microsoft Graph API","PublishedOn":"2017-11-28T18:07:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Meetings can be productive, provided they&#8217;re planned and scheduled properly. There are numerous tools available to schedule meetings, with Calendar for Outlook being one of the best tools in...","Href":"https://blog.xamarin.com/lets-schedule-meeting/","RawContent":null},{"Title":"Replacing Services With Jobs in Android Oreo 8.0","PublishedOn":"2017-11-27T21:04:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Before Android 8.0, Android apps would start a service that ran almost indefinitely, even when the app was in the background. This service can be handy for the app, and easy for the developer to...","Href":"https://blog.xamarin.com/replacing-services-jobs-android-oreo-8-0/","RawContent":null},{"Title":"Microsoft Connect 2017(); Xamarin Video Round-Up","PublishedOn":"2017-11-21T21:06:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Connect(); is always an exciting day for developers, with three days of exciting announcements, demos, and technical sessions. From the announcement of the General Availability of Visual...","Href":"https://blog.xamarin.com/microsoft-connect-2017-xamarin-video-round/","RawContent":null},{"Title":"Hello NuGet! a New Home for Xamarin Components","PublishedOn":"2017-11-20T22:19:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In 2013, we launched the Xamarin Component Store as a central location to find a rich ecosystem of UI controls and plugins for Xamarin developers targeting iOS and Android. Since then, the broader...","Href":"https://blog.xamarin.com/hello-nuget-new-home-xamarin-components/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6947042519","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:53:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1071","RelatedDescription":"Merged pull request \"Change \"Reporting Bugs\" section to Github Issues\" (#1071) at xamarin/xamarin-android","RelatedBody":"Added a quick note for people who browse the repository on the proper place to report issues. We can extend this out further as well with a contribution/how to report guide."},{"Id":"6946479427","Type":"PullRequestEvent","CreatedAt":"2017-12-05T17:00:04","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1071","RelatedDescription":"Opened pull request \"Change \"Reporting Bugs\" section to Github Issues\" (#1071) at xamarin/xamarin-android","RelatedBody":"Added a quick note for people who browse the repository on the proper place to report issues. We can extend this out further as well with a contribution/how to report guide."},{"Id":"6946389517","Type":"PullRequestEvent","CreatedAt":"2017-12-05T16:44:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1070","RelatedDescription":"Merged pull request \"[Xamarin.ProjectTools] Only add the process.log if it exists.\" (#1070) at xamarin/xamarin-android","RelatedBody":"This commit adds an additional check to only process the\r\nprocess.log if the file exists. We might be in a situation\r\nwhere nothing is written to StdOut or StdErr as a result we\r\nmight not get a log file. So lets not crash the test if it\r\ndoes not exist."},{"Id":"6946387120","Type":"PullRequestEvent","CreatedAt":"2017-12-05T16:43:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1058","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Use R.txt for Managed Resource Parser\" (#1058) at xamarin/xamarin-android","RelatedBody":"In order to speed up the processing of resources we should\r\nmake use of the R.txt files which are generally included with\r\n.aar files and our components.\r\n\r\nOne advantage with this is we get the actual resource id which\r\nis used by android. But it also means that when we do find an\r\nR.txt file we can skip the processing of ALL resources in that\r\nunderlying `res` folder. Note this will only apply to the\r\nManagedResourceParser."},{"Id":"6945922824","Type":"PullRequestEvent","CreatedAt":"2017-12-05T15:25:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1065","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add LogCustomBuildEvent method to AsyncTask\" (#1065) at xamarin/xamarin-android","RelatedBody":"There is a possilility that we might be locking up the UI thread\r\nwhen logging CustomBuildEvents.. This happens in the\r\n`InstallPackageAssemblies` task. Currently we only use\r\n\r\n\tBuildEngine.LogCustomEvent\r\n\r\nWhich may well cause problems when called from a non UI thread.\r\n\r\nSo in keeping with the other Log methods available we should add\r\na new LogCustomBuildEvent. This will queue and marshall the data\r\nto the UI Thread just like the other methods do."},{"Id":"6945911183","Type":"PullRequestEvent","CreatedAt":"2017-12-05T15:24:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1064","RelatedDescription":"Merged pull request \"[tests] fix for FSharp targets on Windows\" (#1064) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1188880&_a=summary&tab=ms.vss-test-web.test-result-details\r\n\r\nOur FSharp tests are failing on Windows due to the way we are having to\r\nimport `Microsoft.FSharp.targets`:\r\n\r\n```\r\n<Import\r\n    Condition=\"'$(Language)' != 'F#' And Exists('$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\FSharp\\Microsoft.FSharp.Targets')\"\r\n    Project=\"$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\FSharp\\Microsoft.FSharp.Targets\"\r\n/>\r\n```\r\n\r\nSince `xabuild.exe` is modifying `$(MSBuildExtensionsPath)` to a path in\r\nXA's build tree, the `Condition` always evaluates to `False`--even though\r\nthe search path fallbacks would have located it. Since we are having to\r\nuse `Condition` and check for multiple paths for F#, MSBuild's search path\r\nfallback logic will not be able to work in this file.\r\n\r\nTwo changes to improve this, which should fix the tests on Windows:\r\n- Added F# 4.1 directory searching, as this was missing\r\n- Added a lookup of the `FSHARPINSTALLDIR` environment variable. This\r\nwas installed system-wide on my machine from Visual Studio 2017 15.4. It\r\nis also already set on our VSTS build agents."},{"Id":"6945638764","Type":"PullRequestEvent","CreatedAt":"2017-12-05T14:37:20","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1070","RelatedDescription":"Opened pull request \"[Xamarin.ProjectTools] Only add the process.log if it exists.\" (#1070) at xamarin/xamarin-android","RelatedBody":"This commit adds an additional check to only process the\r\nprocess.log if the file exists. We might be in a situation\r\nwhere nothing is written to StdOut or StdErr as a result we\r\nmight not get a log file. So lets not crash the test if it\r\ndoes not exist."},{"Id":"6942928955","Type":"PullRequestEvent","CreatedAt":"2017-12-05T02:42:55","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1069","RelatedDescription":"Opened pull request \"Reduce Android.* dependency from Java.Interop repo.\" (#1069) at xamarin/xamarin-android","RelatedBody":"Those Attributes are specific to Android, but they have been part of\r\nJava.Interop codebase because things were not that well separate.\r\n\r\nAdd a simple interface to avoid concrete dependencies to Android.*\r\nattributes and make things simpler."},{"Id":"6941982180","Type":"PullRequestEvent","CreatedAt":"2017-12-04T22:01:48","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1068","RelatedDescription":"Opened pull request \"[Xamarin.Android>Build.Tasks] fix for proguard enclosing char on windows\" (#1068) at xamarin/xamarin-android","RelatedBody":"I noticed on Windows, the `Desugar(True, True, True)` test was failing\r\nwith:\r\n\r\n```\r\njava.io.IOException: Can't read\r\n[E:\\A\\_work\\1\\s\\bin\\TestDebug\\temp\\Desugar(True,True,True)\\obj\\Release\\android\\bin\\classes\\classes.zip(!META-INF\\MANIFEST.MF)]\r\n(No such file or directory)\r\n```\r\n\r\nHowever, running locally proved the file does exist.\r\n\r\nSomehow #1049 introduced a case where proguard is failing due to the\r\ncombination the new `(!META-INF/MANIFEST.MF)` filter and the parameters\r\npassed to proguard in this test.\r\n\r\nLooking into it, we had an odd form of how the paths were being passed\r\non Windows using a combination of single and double-quotes:\r\n\r\n```\r\n-injars \"'path1(!META-INF/MANIFEST.MF)';'path2(!META-INF/MANIFEST.MF)'\"\r\n```\r\nThe way these paths were passed was not working on Windows after adding\r\nthis new filter--but only for this `Desugar` test... Most cases were\r\nworking, such as our tests around multi-dex and proguard.\r\n\r\nIt worked correctly on Windows when specified as:\r\n```\r\n-injars \"path1(!META-INF/MANIFEST.MF)\";\"path2(!META-INF/MANIFEST.MF)\"\r\n```\r\n\r\nSo keep things consistent, I refactored the code to use \" on Windows and\r\n' on other platforms. This also resolved the issues in the `Desugar` test on\r\nWindows, for which I also added an additional assertion."},{"Id":"6941859838","Type":"PullRequestEvent","CreatedAt":"2017-12-04T21:35:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1067","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix IncrementalClean on msbuild. (#1063)\" (#1067) at xamarin/xamarin-android","RelatedBody":"Context: https://bugzilla.xamarin.com/show_bug.cgi?id=60880\r\n\r\nCommit 552ad5d7 added code to make sure the `designtime` build\r\nfiles are NOT deleted by the `IncrementalClean` target.\r\nWhile it fixed the issue for `xbuild` it did NOT fix it for\r\n`msbuild`. As a result the file was still deleted.\r\n\r\nSo we need to add the file to the target in the\r\nXamarin.Android.Windows.targets to ensure that it is NOT\r\nremoved (just like the mdb files)."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6949066376","Type":"PullRequestEvent","CreatedAt":"2017-12-06T03:57:25","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1328","RelatedDescription":"Opened pull request \"[DO NOT MERGE] Testing 2.4.0\" (#1328) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTesting build process for monitoring performance.\r\n\r\n### Bugs Fixed ###\r\n\r\nN/A\r\n\r\n### API Changes ###\r\n\r\n`Performance` class has been extracted \r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6948901168","Type":"PullRequestEvent","CreatedAt":"2017-12-06T02:58:11","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1314","RelatedDescription":"Merged pull request \"Update sln; Revert Android SDK version\" (#1314) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNo code changes.\r\n\r\n### Bugs Fixed ###\r\n\r\nNo bugs fixed.\r\n\r\n### API Changes ###\r\n\r\nNone.\r\n\r\n### Behavioral Changes ###\r\n\r\nNone.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6948344565","Type":"PullRequestEvent","CreatedAt":"2017-12-05T23:50:33","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1327","RelatedDescription":"Opened pull request \"[UWP] Use transparent as default TabbedPage bar background color (#922 reopen)\" (#1327) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNew PR for #922 which removes some now unnecessary code that was used for Win 8.1, per @rmarinho's request\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=55674\r\n\r\n### API Changes ###\r\n\r\nN/A\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6948227565","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:17:08","Actor":"derekwheeler-tylertech","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1326","RelatedDescription":"Opened issue \"ListView word wrap in Label causing ViewCells to overlap\" (#1326) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nFor certain values, (but not all), when a Label in a ViewCell word wraps, it's partially superimposed on the next ViewCell in the ListView. \r\n\r\nVisual Studio 2015, 14.0.25425.01 Update 3 (on Windows 10)\r\nXamarin 4.7.10.38\r\nXamarin.iOS 11.3.0.47\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run demo project\r\n\r\n### Expected Behavior\r\n\r\nList should display correctly\r\n\r\n### Actual Behavior\r\n\r\nCellView contents overlap\r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: \r\n  - iOS: Broken on iOS for the past 6 or so months on all the versions of Xamarin that I've used during that time. \r\n  - Android: Works OK on android\r\n  - UWP: I've never tried\r\n- Android Support Library Version: N/A\r\n- Affected Devices: Broken on iPhone6/7/8/X simulators and iPhone6 phone. Was broken on iOS 10.* and is still broken on iOS 11.1.\r\n\r\n\r\n### Reproduction Link\r\n\r\n\r\n[ListViewWrapBug.zip](https://github.com/xamarin/Xamarin.Forms/files/1533294/ListViewWrapBug.zip)\r\n![simulator screen shot - iphone x - 2017-12-05 at 17 26 57](https://user-images.githubusercontent.com/34287342/33635756-3b4bc716-d9e7-11e7-9c94-fcc5a7d9a03d.png)\r\n"},{"Id":"6947210957","Type":"PullRequestEvent","CreatedAt":"2017-12-05T19:28:14","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1165","RelatedDescription":"Closed pull request \"[Android] Add Android ListView IsNestedScrollingEnabled specific\" (#1165) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd IsNestedScrollingEnabled Android platform specific\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `Xamarin.Forms.PlatformConfiguration.AndroidSpecific.ListView.IsNestedScrollingEnabled`\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6947798869","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:35:30","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3084","RelatedDescription":"Merged pull request \"[msbuild] Don't run Xamarin.Analysis on library projects\" (#3084) at xamarin/xamarin-macios","RelatedBody":"Avoid bug #59697: iOS Library projects fail CompileEntitlements when Analysis is enabled\n(https://bugzilla.xamarin.com/show_bug.cgi?id=59697)\n\nNote: bug #59697 happens because XIA0002_TestCloudAgentReleaseRule depends on `_CompileToNative` which\ndepends on `CompileEntitlements` which then requires the `AppBundleDir` parameter that isn't provided\nfor library project.\n\nIf we ever decide to enable Xamarin.Analysis on library projects we'll have to run a subset of the rules that\ndoesn't include rules like XIA0002 using the same condition this fix is using."},{"Id":"6947632432","Type":"PullRequestEvent","CreatedAt":"2017-12-05T20:59:23","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3085","RelatedDescription":"Opened pull request \"[msbuild] Add support for optionally explaining why inapplicable certificates are not applicable\" (#3085) at xamarin/xamarin-macios","RelatedBody":"Help fix #58251: When looking for valid signing certificates, print out each invalid certificate and state why it's not valid\n(https://bugzilla.xamarin.com/show_bug.cgi?id=58251)"},{"Id":"6946708809","Type":"PullRequestEvent","CreatedAt":"2017-12-05T17:44:01","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3084","RelatedDescription":"Opened pull request \"[msbuild] Don't run Xamarin.Analysis on library projects\" (#3084) at xamarin/xamarin-macios","RelatedBody":"Avoid bug #59697: iOS Library projects fail CompileEntitlements when Analysis is enabled\n(https://bugzilla.xamarin.com/show_bug.cgi?id=59697)\n\nNote: bug #59697 happens because XIA0002_TestCloudAgentReleaseRule depends on `_CompileToNative` which\ndepends on `CompileEntitlements` which then requires the `AppBundleDir` parameter that isn't provided\nfor library project.\n\nIf we ever decide to enable Xamarin.Analysis on library projects we'll have to run a subset of the rules that\ndoesn't include rules like XIA0002 using the same condition this fix is using."},{"Id":"6946024296","Type":"PullRequestEvent","CreatedAt":"2017-12-05T15:42:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3083","RelatedDescription":"Opened pull request \"[Make.config] Add TODO for PACKAGE_VERSION_REV\" (#3083) at xamarin/xamarin-macios","RelatedBody":"In my bump to Xcode 9.2 final: https://github.com/xamarin/xamarin-macios/pull/3081 I updated the `IOS_PACKAGE_VERSION`'s minor # (for the release) but forgot to update `PACKAGE_VERSION_REV` (genuinely didn't know about it).\r\n\r\nIn retrospect, I should have read the bloc of text a couple lines above that says: \"A release branch requires updating\". Therefore in a desperate attempt to avoid that future me missing this I added a `/!\\ README /!\\`. I also updated the comment above `PACKAGE_VERSION_REV` to better highlight the importance of resetting to 0 and a TODO to, again, help future me see this (:"},{"Id":"6945611436","Type":"PullRequestEvent","CreatedAt":"2017-12-05T14:32:21","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3082","RelatedDescription":"Opened pull request \"bump mono 2017-10 branch\" (#3082) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@e65bf00e22b Merge pull request #6122 from lewurm/2017-10-interp-aot-mode-fixes\r\n* mono/mono@8f0589ae817 [mini] Add missing try holes\r\n* mono/mono@ab20369d5f0 [mini] Align stack when resuming to catch handler\r\n* mono/mono@3a134a2d8c3 [mini] Add missing try holes\r\n* mono/mono@2e775c7e390 [mini] Fix clause try hole checking\r\n* mono/mono@a9a4166431e [loader] Don't assert on abstract methods in get_method_constrained\r\n* mono/mono@feba66a6ceb [interp] small improvment for error reporting in interp compile method callback\r\n* mono/mono@6fc6ca1e189 [aot] encode interp_in wrappers with proper signature\r\n* mono/mono@73326908260 [interp] fix copy/paste-typo in n2m macro magic\r\n* mono/mono@b64faae88c3 [aot] add more signatures for interp_in wrapper needed for iOS\r\n* mono/mono@b3b0613ad38 Bump msbuild to bring in fix for #60770 (#6107)\r\n* mono/mono@ddeba6e1bab [interp] fix using conv.u with string\r\n* mono/mono@0360f420fe3 Bump API snapshot submodule\r\n* mono/mono@2f18e7dd23c Bump cecil & linker to match master.\r\n* mono/mono@0f53cb275c4 [interp] allow unsigned i8 in pinvoke signature\r\n\r\nDiff: https://github.com/mono/mono/compare/c5cd0f1e7fb494cec523757b8d7f29cc95b707c9...e65bf00e22b6b410951f62234f50b12d76238e7f\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60770"},{"Id":"6945208911","Type":"PullRequestEvent","CreatedAt":"2017-12-05T13:14:01","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/1663","RelatedDescription":"Merged pull request \"[Debugger] Allow to step into Xamarin code.\" (#1663) at xamarin/xamarin-macios","RelatedBody":"Adds the Xamarin.iOS and Xamarin.Mac sources, stops checkins in the install sources the path to $(TOP)/src in our tree and does a rebase to the locations for the sources (/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/[Xamarin.iOS|Xamarin.Mac])"},{"Id":"6942590075","Type":"PullRequestEvent","CreatedAt":"2017-12-05T00:48:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3081","RelatedDescription":"Merged pull request \"Bump to xcode 9.2 final\" (#3081) at xamarin/xamarin-macios","RelatedBody":"[storekit] Update for Xcode 9.2 final."},{"Id":"6942158786","Type":"PullRequestEvent","CreatedAt":"2017-12-04T22:42:39","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3081","RelatedDescription":"Opened pull request \"Bump to xcode 9.2 final\" (#3081) at xamarin/xamarin-macios","RelatedBody":"[storekit] Update for Xcode 9.2 final\nUpdate StoreKit to Xcode 9.2 final."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"938141429167198208","CreatedAt":"2017-12-05T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"See how ￼Fidelity Mobile is uniting Brazilian citizens and their elected officials using real-time chat apps built… https://t.co/z6zRiQICHR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":8,"RawContent":null},{"Id":"938089332048564224","CreatedAt":"2017-12-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"937774983811616774","CreatedAt":"2017-12-04T20:05:53+00:00","UserScreenname":"xamarinhq","Text":"See what’s new in #VisualStudio 2017 version 15.5: https://t.co/wdtvE6HR1g https://t.co/ASOjIPtCt6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":161,"FavoriteCount":130,"RawContent":null},{"Id":"937729008883699712","CreatedAt":"2017-12-04T17:03:12+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/XFAEcWNh5K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":12,"FavoriteCount":9,"RawContent":null},{"Id":"937507246317203457","CreatedAt":"2017-12-04T02:22:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to embed any #XamarinForms ContentPage into your #Xamarin iOS and Android projects: https://t.co/U3QvCAOeFf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":26,"RawContent":null},{"Id":"937084968140001281","CreatedAt":"2017-12-02T22:24:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/1LrzR56fPj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":171,"FavoriteCount":78,"RawContent":null},{"Id":"936715745370796033","CreatedAt":"2017-12-01T21:56:51+00:00","UserScreenname":"xamarinhq","Text":"Catch up with the @XamarinPodcast and learn about #XamarinForms 2.5.0, plus exciting updates to Live Player,… https://t.co/zBch3rb7K7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":19,"RawContent":null},{"Id":"936662898692313089","CreatedAt":"2017-12-01T18:26:52+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you (or online!) this December: https://t.co/O6L4GHyg4a https://t.co/wNIUbnJtoI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":5,"RawContent":null},{"Id":"936641572006957058","CreatedAt":"2017-12-01T17:02:07+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/DpaVdK5ZMf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"936334395631431685","CreatedAt":"2017-11-30T20:41:30+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your #Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/o6RntWMo4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"936280915675959296","CreatedAt":"2017-11-30T17:09:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to set up and configure an #Azure Notification Hub for your #Xamarin.iOS app: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":24,"RawContent":null},{"Id":"935969076786204672","CreatedAt":"2017-11-29T20:29:52+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinars on updating your #Xamarin apps to get the most out of iOS 11 and Android 8 O… https://t.co/RLOHI0RlUX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"935917018624217089","CreatedAt":"2017-11-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to provision a new iOS device and app in five minutes using #VS4Mac and the open source project fastlane: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"935600034816634880","CreatedAt":"2017-11-28T20:03:25+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":23,"RawContent":null},{"Id":"935552365058560001","CreatedAt":"2017-11-28T16:54:00+00:00","UserScreenname":"xamarinhq","Text":"5 ways to boost a #XamarinForms app's start up time: https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":37,"RawContent":null},{"Id":"935255661050585088","CreatedAt":"2017-11-27T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/TA7SMA9DLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":27,"RawContent":null},{"Id":"935193758232178688","CreatedAt":"2017-11-27T17:09:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/VW73seGwWt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":26,"RawContent":null},{"Id":"935006266874847232","CreatedAt":"2017-11-27T04:44:00+00:00","UserScreenname":"xamarinhq","Text":"Add local notifications to your Xamarin.Mac applications: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":18,"RawContent":null},{"Id":"934586249125548032","CreatedAt":"2017-11-26T00:55:00+00:00","UserScreenname":"xamarinhq","Text":"Native Android Facebook Authentication with #Azure #App Service https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":38,"RawContent":null},{"Id":"934103568986066944","CreatedAt":"2017-11-24T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with ActivityTask, a helper for async/await on Android: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2017-12-06T05:30:40.8747973Z","RunDurationInMilliseconds":3968}