{"Data":{"GitHub":{"Issues":[{"Id":"432700922","IsPullRequest":true,"CreatedAt":"2019-04-14T04:22:16","Actor":"TomFinley","Number":"3315","RawContent":null,"Title":"Tom cherry pick","State":"closed","Body":"Cherry pick of some of my commits into release/1.0.  Which PRs they correspond to is obvious from the commit descriptions. Only one, the last one, required conflict resolution. I have verified the sample introduced still runs.\r\n\r\nNote also that when I run the test locally, the test `EntryPointLinearPredictorSummary` fails. This appears to have nothing to do with my changes, but it is probably something that shiproom should be aware of. @shauheen , @glebuk .","Url":"https://github.com/dotnet/machinelearning/pull/3315","RelatedDescription":"Closed or merged PR \"Tom cherry pick\" (#3315)"},{"Id":"432666779","IsPullRequest":true,"CreatedAt":"2019-04-14T04:20:59","Actor":"Ivanidzo4ka","Number":"3313","RawContent":null,"Title":"put product version instead of version ","State":"closed","Body":"Fixes #3132\r\nmaster PR https://github.com/dotnet/machinelearning/pull/3173","Url":"https://github.com/dotnet/machinelearning/pull/3313","RelatedDescription":"Closed or merged PR \"put product version instead of version \" (#3313)"},{"Id":"432811281","IsPullRequest":true,"CreatedAt":"2019-04-14T01:34:21","Actor":"shauheen","Number":"3333","RawContent":null,"Title":"Update release branch","State":"closed","Body":"This PR updates the 1.0 release branch with changes from Master branch.","Url":"https://github.com/dotnet/machinelearning/pull/3333","RelatedDescription":"Closed or merged PR \"Update release branch\" (#3333)"},{"Id":"432846916","IsPullRequest":false,"CreatedAt":"2019-04-13T13:19:48","Actor":"martasp","Number":"3335","RawContent":null,"Title":"Splitter/consolidator worker encountered exception","State":"open","Body":"### System information\r\n\r\nOS version/distro: Windows 10\r\n.NET Version (eg., dotnet --info):  dotnet core 2.2\r\nVersion : ML.NET v1.0.0-preview\r\n\r\n### Issue\r\n\r\n- **What did you do?** \r\nI used tensorflow model + SDCA sample to train my own data\r\n- **What happened?**\r\n when i have 800 labels it gives this error, but work when there are 100 labels in tags.tsv file.\r\n\r\n\r\n### Source code / logs\r\nTraining classification model\r\n#############################\r\n\r\nEXCEPTION\r\n#########\r\nSplitter/consolidator worker encountered exception while consuming source data\r\n\r\nPress any key to finish.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3335","RelatedDescription":"Open issue \"Splitter/consolidator worker encountered exception\" (#3335)"},{"Id":"432829391","IsPullRequest":false,"CreatedAt":"2019-04-13T09:42:50","Actor":"PeterPann23","Number":"3334","RawContent":null,"Title":"Documentation enhancement on the pipeline's impack on output schema","State":"open","Body":"I am looking over the various samples provided in the Cookbook as well as the sample projects. \r\nnone of them are actually going into the detail of how powerful the creation of the training pipeline is when it comes to generating and populating a prediction.\r\n\r\nPerhaps one could add some Dokumentation as to the differences between the networks as well as the population and addressing the naming. One could, with a multiclass state the accuracy of the predicted class as one does now, one could also show the nearest neighbour and the combined weight of both. The patient could have both diseases, the client could like both products with a \"likely hood\" in \"that order\" with that \"accuracy\".  \r\n\r\nI'd think that the [Cookbook ](https://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md)would be an ideal location for this. in a section with a title say \"**how do I Interpret a generated single prediction**\"","Url":"https://github.com/dotnet/machinelearning/issues/3334","RelatedDescription":"Open issue \"Documentation enhancement on the pipeline's impack on output schema\" (#3334)"},{"Id":"432802417","IsPullRequest":true,"CreatedAt":"2019-04-13T07:52:55","Actor":"Dmitry-A","Number":"3331","RawContent":null,"Title":"[AutoML] disable netfx build leg for now","State":"closed","Body":"will re-enable once I figure out the fix for not building/running mlnet test there","Url":"https://github.com/dotnet/machinelearning/pull/3331","RelatedDescription":"Closed or merged PR \"[AutoML] disable netfx build leg for now\" (#3331)"},{"Id":"432800688","IsPullRequest":true,"CreatedAt":"2019-04-13T03:04:33","Actor":"Dmitry-A","Number":"3330","RawContent":null,"Title":"[AutoML] try to fix mlnet tests on netfx","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3330","RelatedDescription":"Open PR \"[AutoML] try to fix mlnet tests on netfx\" (#3330)"},{"Id":"432797870","IsPullRequest":true,"CreatedAt":"2019-04-13T02:24:45","Actor":"Dmitry-A","Number":"3329","RawContent":null,"Title":"fix test cases, remove AppInsights ref from AutoML","State":"closed","Body":"Need to figure out how to refer to keys, on TODO list -- just fixed the hardcoded values for now","Url":"https://github.com/dotnet/machinelearning/pull/3329","RelatedDescription":"Closed or merged PR \"fix test cases, remove AppInsights ref from AutoML\" (#3329)"},{"Id":"432789398","IsPullRequest":true,"CreatedAt":"2019-04-13T01:08:31","Actor":"Dmitry-A","Number":"3326","RawContent":null,"Title":"code migration from machinelearning-automl to machinelearning repo feature branch take 2","State":"closed","Body":"Sorry I squash merged on the first try which is not what I want, gotta keep history. Changes here are:\r\n\r\n- Shuffle code to conform to ml.net folder structure\r\n- Add automl and automl test components to build\r\n- Fix issues so it builds\r\n\r\nNote this does NOT include running tests or publishing nuget packages, that will come in as a separate PR","Url":"https://github.com/dotnet/machinelearning/pull/3326","RelatedDescription":"Closed or merged PR \"code migration from machinelearning-automl to machinelearning repo feature branch take 2\" (#3326)"},{"Id":"432789856","IsPullRequest":true,"CreatedAt":"2019-04-13T00:47:10","Actor":"codemzs","Number":"3328","RawContent":null,"Title":"Dispose source image object in image transfomers.","State":"open","Body":"fixes #3327\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3328","RelatedDescription":"Open PR \"Dispose source image object in image transfomers.\" (#3328)"},{"Id":"432789801","IsPullRequest":false,"CreatedAt":"2019-04-13T00:46:44","Actor":"codemzs","Number":"3327","RawContent":null,"Title":"Image transfomers don't dispose source image.","State":"open","Body":"Image transformers such as grayscale and resize have images as input. After they process input images to produce output image they should dispose the input image because if they don't then we are at mercy of garbage collector cleaning the bitmap objects and if the GC has not done that and some code in the same process tries to open the same image referenced by the bitmap object that is not disposed then we get file in use exception.","Url":"https://github.com/dotnet/machinelearning/issues/3327","RelatedDescription":"Open issue \"Image transfomers don't dispose source image.\" (#3327)"},{"Id":"432788696","IsPullRequest":true,"CreatedAt":"2019-04-13T00:40:30","Actor":"Dmitry-A","Number":"3325","RawContent":null,"Title":"code migration from machinelearning-automl to machinelearning repo feature branch take 2","State":"closed","Body":"Shuffle code to conform to ml.net folder structure\r\nAdd automl and automl test components to build\r\nFix issues so it builds\r\nNote this does NOT include running tests or publishing nuget packages, that will come in as a separate PR","Url":"https://github.com/dotnet/machinelearning/pull/3325","RelatedDescription":"Closed or merged PR \"code migration from machinelearning-automl to machinelearning repo feature branch take 2\" (#3325)"},{"Id":"432783704","IsPullRequest":true,"CreatedAt":"2019-04-13T00:17:31","Actor":"Dmitry-A","Number":"3324","RawContent":null,"Title":"code migration from machinelearning-automl to machinelearning repo feature branch","State":"closed","Body":"- Shuffle code to conform to ml.net folder structure\r\n- Add automl and automl test components to build\r\n- Fix issues so it builds\r\n\r\nNote this does NOT include running tests or publishing nuget packages, that will come in as a separate PR","Url":"https://github.com/dotnet/machinelearning/pull/3324","RelatedDescription":"Closed or merged PR \"code migration from machinelearning-automl to machinelearning repo feature branch\" (#3324)"},{"Id":"432783609","IsPullRequest":false,"CreatedAt":"2019-04-12T23:56:10","Actor":"artidoro","Number":"3323","RawContent":null,"Title":"Multiclass Classification catalog does not contain EvaluateNonCalibrated","State":"open","Body":"The Multiclass Classification catalog has non calibrated trainers (`SdcaNonCalibratedMulticlassTrainer`) along with many calibrated trainers. \r\n\r\nCurrently there is only one `Evaluate` method, which assumes that the model is calibrated, and therefore produces `LogLoss` metrics. These metrics don't makes sense for the non calibrated trainers.\r\n\r\nWe should therefore add an evaluation method named `EvaluateNonCalibrated` for the non calibrated trainers.","Url":"https://github.com/dotnet/machinelearning/issues/3323","RelatedDescription":"Open issue \"Multiclass Classification catalog does not contain EvaluateNonCalibrated\" (#3323)"},{"Id":"432780856","IsPullRequest":true,"CreatedAt":"2019-04-12T23:37:05","Actor":"artidoro","Number":"3322","RawContent":null,"Title":"Multiclass Classification Samples Update","State":"open","Body":"Tracked under #2522 \r\n\r\nThis PR adds samples for `LbfgsMaximumEntropy` and `SdcaNonCalibrated` trainers.\r\n\r\nThis PR also removes dependency from Samples Utils in other multiclass classification samples and adds .tt files for all multiclass classification samples.\r\n\r\nNotice that this PR does not take care of Naive Bayes as it is in progress in #3246.","Url":"https://github.com/dotnet/machinelearning/pull/3322","RelatedDescription":"Open PR \"Multiclass Classification Samples Update\" (#3322)"},{"Id":"432778196","IsPullRequest":true,"CreatedAt":"2019-04-12T23:20:22","Actor":"rogancarr","Number":"3321","RawContent":null,"Title":"Cherry-pick GAM samples","State":"open","Body":"This PR cherry-picks the GAM samples into the Release branch.","Url":"https://github.com/dotnet/machinelearning/pull/3321","RelatedDescription":"Open PR \"Cherry-pick GAM samples\" (#3321)"},{"Id":"432764068","IsPullRequest":true,"CreatedAt":"2019-04-12T23:09:30","Actor":"rogancarr","Number":"3318","RawContent":null,"Title":"Remove debugging code from a Gam Sample","State":"closed","Body":"PR #3281 was checked in with a few debugging comments. This PR removes them.","Url":"https://github.com/dotnet/machinelearning/pull/3318","RelatedDescription":"Closed or merged PR \"Remove debugging code from a Gam Sample\" (#3318)"},{"Id":"432774419","IsPullRequest":false,"CreatedAt":"2019-04-12T23:00:35","Actor":"vinodshanbhag","Number":"3320","RawContent":null,"Title":"AutoML feature request: Provide hooks to enable more usable APIs","State":"open","Body":"Current AutoML APIs look like this\r\nmlContext.Auto.CreateRegressionExperiment() \r\nmlContext.Auto.InferColumns() \r\n\r\nThis makes us like we are shipping organization boundaries!\r\nSo we propose we ship the following.\r\nmlContext.Regression.CreateAutoExperiment()\r\nmlContext.Data.AutoInferColumns()\r\n\r\nThe problem with implementing this is that an extension method needs to be implemented on RegressionCatalog and not MLContext -- this means that automl code cant have have access to mlContext - but it needs access to mlContext. Please enable same.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3320","RelatedDescription":"Open issue \"AutoML feature request: Provide hooks to enable more usable APIs\" (#3320)"},{"Id":"432773511","IsPullRequest":true,"CreatedAt":"2019-04-12T22:55:40","Actor":"wschin","Number":"3319","RawContent":null,"Title":"Upgrade all regressors to use TT","State":"open","Body":"Part of #2522.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3319","RelatedDescription":"Open PR \"Upgrade all regressors to use TT\" (#3319)"},{"Id":"432750685","IsPullRequest":true,"CreatedAt":"2019-04-12T21:22:22","Actor":"artidoro","Number":"3317","RawContent":null,"Title":"Samples second pass for Clustering Trainer","State":"open","Body":"Tracked in #2522.\r\n\r\nThis PR removes the dependency on SampleUtils for clustering trainers samples (KMeans samples).\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3317","RelatedDescription":"Open PR \"Samples second pass for Clustering Trainer\" (#3317)"},{"Id":"432724776","IsPullRequest":true,"CreatedAt":"2019-04-12T20:07:02","Actor":"sfilipi","Number":"3316","RawContent":null,"Title":"Towards #3204 - ColumCopying documentation ","State":"open","Body":"Adhering to the template in https://github.com/dotnet/machinelearning/issues/3204#issuecomment-481772172 for the ColumnCopying estimator extensions, estimator, transformer. ","Url":"https://github.com/dotnet/machinelearning/pull/3316","RelatedDescription":"Open PR \"Towards #3204 - ColumCopying documentation \" (#3316)"},{"Id":"432678282","IsPullRequest":true,"CreatedAt":"2019-04-12T17:54:49","Actor":"Anipik","Number":"3314","RawContent":null,"Title":"Renaming CI legs to make them more readable and understandable","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3314","RelatedDescription":"Open PR \"Renaming CI legs to make them more readable and understandable\" (#3314)"},{"Id":"432658784","IsPullRequest":true,"CreatedAt":"2019-04-12T16:58:07","Actor":"wschin","Number":"3312","RawContent":null,"Title":"Add samples in TT for FFM","State":"open","Body":"Two samples in for FFM  are added following new sample guideline. Related to #2522.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3312","RelatedDescription":"Open PR \"Add samples in TT for FFM\" (#3312)"},{"Id":"432653938","IsPullRequest":true,"CreatedAt":"2019-04-12T16:44:43","Actor":"artidoro","Number":"3311","RawContent":null,"Title":"Binary classification samples update","State":"open","Body":"Tracked in #2522.\r\n\r\nIn this PR I use the templates for binary classification samples to eliminate the dependency on the SamplesUtils and make the samples standalone.\r\n\r\nSome binary classification trainers did not have samples, so I added them.\r\n\r\nNote: This PR does not take care of FFM on which @wschin will be working.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3311","RelatedDescription":"Open PR \"Binary classification samples update\" (#3311)"},{"Id":"432557784","IsPullRequest":true,"CreatedAt":"2019-04-12T13:08:26","Actor":"shmoradims","Number":"3310","RawContent":null,"Title":"API reference - Updated trainer docs for AveragedPerceptron","State":"open","Body":"This PR applies the template discussed #3218 to AveragedPerceptron. It serves as reference PR for updating the rest of the trainers.\r\n\r\nThe following pages are best-effort (90%) recreation of what these changes will look like. Although some changes will only be visible this PR and checked in and preview site is updated.\r\n\r\nExtension methods:\r\n* [Page-1-overload1](https://review.docs.microsoft.com/en-us/dotnet/api/microsoft.ml.standardtrainerscatalog.averagedperceptron?view=ml-dotnet&branch=smoke-test-preview#Microsoft_ML_StandardTrainersCatalog_AveragedPerceptron_Microsoft_ML_BinaryClassificationCatalog_BinaryClassificationTrainers_System_String_System_String_Microsoft_ML_Trainers_IClassificationLoss_System_Single_System_Boolean_System_Single_System_Int32_)\r\n* [Page-1-overload2](https://review.docs.microsoft.com/en-us/dotnet/api/microsoft.ml.standardtrainerscatalog.averagedperceptron?view=ml-dotnet&branch=smoke-test-preview#Microsoft_ML_StandardTrainersCatalog_AveragedPerceptron_Microsoft_ML_BinaryClassificationCatalog_BinaryClassificationTrainers_Microsoft_ML_Trainers_AveragedPerceptronTrainer_Options_)\r\n\r\n[AveragedPerceptronTrainer](https://review.docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.averagedperceptrontrainer?view=ml-dotnet&branch=smoke-test-preview)\r\n\r\n[AveragedPerceptronTrainer.Options](https://review.docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.averagedperceptrontrainer.options?view=ml-dotnet&branch=smoke-test-preview)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3310","RelatedDescription":"Open PR \"API reference - Updated trainer docs for AveragedPerceptron\" (#3310)"},{"Id":"432370007","IsPullRequest":true,"CreatedAt":"2019-04-12T03:21:50","Actor":"codemzs","Number":"3309","RawContent":null,"Title":"Standalone app to run all samples to catch run time exceptions.","State":"open","Body":"fixes #3308\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3309","RelatedDescription":"Open PR \"Standalone app to run all samples to catch run time exceptions.\" (#3309)"},{"Id":"432369846","IsPullRequest":false,"CreatedAt":"2019-04-12T03:21:09","Actor":"codemzs","Number":"3308","RawContent":null,"Title":"Standalone app to run all samples to catch run time exceptions","State":"open","Body":"We need an app that run as a build step to verify samples not only compile but also execute with no exceptions. We have recently seen as evident by #3187 that samples are being checked-in that when run by a user will not produce any meaningful output but instead cause runtime exception and leave a very bad user experience. ","Url":"https://github.com/dotnet/machinelearning/issues/3308","RelatedDescription":"Open issue \"Standalone app to run all samples to catch run time exceptions\" (#3308)"},{"Id":"432369035","IsPullRequest":true,"CreatedAt":"2019-04-12T03:17:18","Actor":"codemzs","Number":"3307","RawContent":null,"Title":"Rewrite image transform samples and dispose images after use.","State":"open","Body":"fixes #3306","Url":"https://github.com/dotnet/machinelearning/pull/3307","RelatedDescription":"Open PR \"Rewrite image transform samples and dispose images after use.\" (#3307)"},{"Id":"432368660","IsPullRequest":false,"CreatedAt":"2019-04-12T03:15:42","Actor":"codemzs","Number":"3306","RawContent":null,"Title":"Image samples don't dispose bitmap object after use causes exceptions.","State":"open","Body":"When running samples all at once there is an exception between image samples because image transforms open and return image as a Bitmap object, however our samples don't dispose the bitmap object due to this when the next sample opens the same image it gets an exception saying the file is in use by the same or another process. Even though it is a new pipeline, we see this exception because garbage collector has not yet disposed the Bitmap object. The correct way to fix this problem is to dispose all bitmap objects after a sample has executed, this will not only solve the issue when running all samples at once in the same process but will also educate the user on disposing the bitmaps after use and make our samples better.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3306","RelatedDescription":"Open issue \"Image samples don't dispose bitmap object after use causes exceptions.\" (#3306)"},{"Id":"432333390","IsPullRequest":true,"CreatedAt":"2019-04-12T00:41:59","Actor":"codemzs","Number":"3305","RawContent":null,"Title":"Fix runtime exception in MapKeyToVectorMultiColumn sample","State":"closed","Body":"fixes #3304\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3305","RelatedDescription":"Closed or merged PR \"Fix runtime exception in MapKeyToVectorMultiColumn sample\" (#3305)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-15T05:30:31.4883067Z","RunDurationInMilliseconds":707}