{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8826069066","Type":"PullRequestEvent","CreatedAt":"2019-01-02T23:37:40","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2579","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] support Embedded DSOs\" (#2579) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2154\r\nFixes: https://github.com/xamarin/xamarin-android/issues/2415\r\n\r\nCurrently, in order to activate the embedded DSO support, one has to\r\nperform the following actions manually:\r\n\r\n1. Add the `android:extractNativeLibs=\"false\"` attribute to the\r\n   `<application>` element in the `Properties/AndroidManifest.xml`\r\n   file.\r\n\r\n2. Add the following property to the project file:\r\n\r\n    <AndroidStoreUncompressedFileExtensions>.so</AndroidStoreUncompressedFileExtensions>\r\n\r\n3. Add an android environment file to the project with a line which\r\n   says:\r\n\r\n    __XA_DSO_IN_APK=1\r\n\r\n## Changes ##\r\n\r\nThe presence of `android:extractNativeLibs=\"false\"` in\r\n`AndroidManifest.xml` should setup all the extra \"stuff\" so developers\r\ndon't have to manually do it.\r\n\r\n`android:extractNativeLibs=\"false\"` would automatically do the\r\nfollowing:\r\n\r\n1. `.so` will be appended to\r\n   `$(AndroidStoreUncompressedFileExtensions)`. Both the `<Aapt/>` and\r\n   `<BuildApk/>` MSBuild tasks use this property.\r\n\r\n3. A new generated file in `$(IntermediateOutputPath)` will add\r\n   `__XA_DSO_IN_APK=1` as an `@(AndroidEnvironment)` build item.\r\n\r\nI also added an MSBuild test to verify these changes are happening. I\r\nwas also able to update `tests/EmbeddedDSOs` to rely on the new\r\nfunctionality."},{"Id":"8825459651","Type":"PullRequestEvent","CreatedAt":"2019-01-02T20:56:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2529","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix a weird error with `_CopyPackage`\" (#2529) at xamarin/xamarin-android","RelatedBody":"We had an issue where the `_CopyPackageInputs` was occasionally\r\nNOT including a changed apk! It was really weird.\r\n\r\nSo lets rework this to define the `_CopyPackageInputs`\r\nProperty within a Target. This should allow it to pick\r\nup and dynamically added Items."},{"Id":"8825440355","Type":"PullRequestEvent","CreatedAt":"2019-01-02T20:51:56","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2553","RelatedDescription":"Closed pull request \"Bump to xamarin/sqlite/3.26.0@137d0df1\" (#2553) at xamarin/xamarin-android","RelatedBody":"Context: https://blade.tencent.com/magellan/index_en.html\r\nContext: https://worthdoingbadly.com/sqlitebug/\r\n\r\nIncludes SQLite fixes between 2018-09-25 and 2018-12-01, bringing us\r\nto SQLite 3.26.0."},{"Id":"8825435846","Type":"PullRequestEvent","CreatedAt":"2019-01-02T20:50:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2578","RelatedDescription":"Merged pull request \"Update SQLite to 3.26.0\" (#2578) at xamarin/xamarin-android","RelatedBody":"Context: https://blade.tencent.com/magellan/index_en.html\r\nContext: https://worthdoingbadly.com/sqlitebug/\r\n\r\nIncludes SQLite fixes between 2018-09-25 and 2018-12-01, bringing us\r\nto SQLite 3.26.0."},{"Id":"8825265102","Type":"PullRequestEvent","CreatedAt":"2019-01-02T20:10:32","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2358","RelatedDescription":"Closed pull request \"[android-toolchain] split up targets + refactoring\" (#2358) at xamarin/xamarin-android","RelatedBody":"Current when `android-toolchain.csproj` is built:\r\n- A list of zip files are downloaded to `~/android-archives`.\r\n- If *any* file is newer than a set of stamp files, all the\r\n  destination directories are deleted.\r\n- All the downloaded zip files are unzipped.\r\n\r\nThis is a bit inefficient, since updating something small like `ant`\r\nor `depot_tools` will delete the Android SDK+NDK and rextract them.\r\n\r\nI reworked the targets so that `_UnzipFiles` is split into:\r\n- `_UnzipAndroidSdkItems`\r\n- `_UnzipAndroidNdkItems`\r\n- `_UnzipAntItems`\r\n- `_UnzipChromeItems`\r\n\r\nOther changes:\r\n- Each new target uses a single stamp file. It doesn't make sense for\r\n  these targets to \"partially\" build. If a single zip of the Android\r\n  SDK changes, we need to unzip *everything*: not just the zip that is\r\n  new.\r\n- Removed use of `CreateItem`, a deprecated MSBuild task, in favor of\r\n  `<ItemGroup/>`.\r\n- Setup `%(HashHeader)` for each download group, even though it is\r\n  only used by `depot_tools` right now.\r\n\r\nAs a result, the \"stamp\" files have moved. But after this PR,\r\n`~/android-toolchain` will not get wiped nearly as often during\r\nbuilds."},{"Id":"8824822148","Type":"PullRequestEvent","CreatedAt":"2019-01-02T18:30:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2576","RelatedDescription":"Merged pull request \"Bump to xamarin/java.interop/master@0cd8bc7\" (#2576) at xamarin/xamarin-android","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/b57d770...0cd8bc7\r\nFixes?: https://github.com/xamarin/java.interop/issues/403\r\n\r\n[jcwgen] perf improvements\r\n\r\n[build] use NuGet 4.7.1\r\n\r\nUse right calling convention for JNI calls\r\n\r\nNeeded to fix build downstream in monodroid:\r\n\r\n- [jnienv-gen] missing TargetFrameworkVersion"},{"Id":"8824583106","Type":"PullRequestEvent","CreatedAt":"2019-01-02T17:41:19","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2578","RelatedDescription":"Opened pull request \"Update SQLite to 3.26.0\" (#2578) at xamarin/xamarin-android","RelatedBody":"Context: https://blade.tencent.com/magellan/index_en.html\r\nContext: https://worthdoingbadly.com/sqlitebug/\r\n\r\nIncludes SQLite fixes between 2018-09-25 and 2018-12-01, bringing us\r\nto SQLite 3.26.0."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8826830249","Type":"IssuesEvent","CreatedAt":"2019-01-03T05:21:29","Actor":"mfkl","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4885","RelatedDescription":"Opened issue \"Gesture not firing for custom renderer on iOS\" (#4885) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nGiven a gesture recognizer on a `View` _with_ custom renderer, the gesture is not firing events on iOS.\r\n\r\nThis code\r\n\r\n```\r\n<ContentPage.Content>\r\n        <AbsoluteLayout HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"FillAndExpand\">\r\n            <vlc:VideoView x:Name=\"videoView\" MediaPlayer=\"{Binding MediaPlayer}\" AbsoluteLayout.LayoutBounds=\"0,0,1,1\" AbsoluteLayout.LayoutFlags=\"All\">\r\n                <vlc:VideoView.GestureRecognizers>\r\n                    <PanGestureRecognizer PanUpdated=\"PanGestureRecognizer_PanUpdated\"/>\r\n                </vlc:VideoView.GestureRecognizers>\r\n            </vlc:VideoView>\r\n            <Label Text=\"{Binding Message}\" AbsoluteLayout.LayoutBounds=\".5,1,1,.1\" AbsoluteLayout.LayoutFlags=\"All\" FontSize=\"20\" LineBreakMode=\"WordWrap\" TextColor=\"White\" />\r\n        </AbsoluteLayout>\r\n    </ContentPage.Content>\r\n```\r\n\r\nWorks fine on Android, while `PanGestureRecognizer_PanUpdated` is never raised on iOS.\r\n\r\nUsing an `Image` instead of the `VideoView` (custom renderer) works as expected on iOS.\r\nI don't think a custom renderered View needs any particular setup to make gesture recognizers work. So I'm confused as to why it works on Android and not on iOS.\r\n\r\n### Steps to Reproduce\r\n\r\n1. git clone https://github.com/mfkl/libvlcsharp-samples/\r\n2. git checkout gestures\r\n3. run Gestures.iOS and touch the screen\r\n\r\n### Expected Behavior\r\n\r\nPan events fire.\r\n\r\n### Actual Behavior\r\n\r\nPan events don't fire.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0967583\r\n- IDE: VS4Mac 7.7.2\r\n- Platform Target Framework:\r\n  - iOS:  12.2.1.12\r\n\r\n\r\nThanks for looking into it. \r\n"},{"Id":"8826460599","Type":"IssuesEvent","CreatedAt":"2019-01-03T02:17:00","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1903","RelatedDescription":"Closed issue \"InputTransparent Does Not Handle Keyboard Input\" (#1903) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nWhen a control, such as a button, has InputTransparent set to true, mouse interaction is disabled as expected. However, Keyboard interaction is still possible, as when a user 'tabs' onto the control and presses the keyboard to activate the button.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Button element in xaml. \r\n2. Set InputTransparent to True\r\n3. Press 'tab' until the Button is highlighted.\r\n4. Press 'space' or 'enter' to activate the button.\r\n\r\n### Expected Behavior\r\nThe keyboard strokes are ignored, as the control is flagged as input transparent.\r\n\r\n### Actual Behavior\r\nThe Button's bound command or click event is activated.\r\n### Basic Information\r\n\r\n- Version with issue: \r\n2.5.0.280555\r\n- Last known good version:\r\nNone.\r\n- IDE:\r\nVS 2017 15.5.2\r\n\r\n- Platform Target Frameworks: \r\n  - Android: 8.0 \r\n  - UWP:  14393\r\n\r\n- Nuget Packages: \r\nXamarin.Forms 2.5.0.280555\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.2\r\n\r\n- Affected Devices:\r\nUWP \r\nAndroid Virtual Device\r\n\r\n### Screenshots\r\n![inputtransparentbug](https://user-images.githubusercontent.com/1066087/36324198-a1ad662c-1321-11e8-8e12-929ecb47cba1.gif)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nhttps://github.com/jkastner/InputTransparentXFBug\r\n\r\n"},{"Id":"8826454970","Type":"IssuesEvent","CreatedAt":"2019-01-03T02:14:28","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2165","RelatedDescription":"Closed issue \"enable source link support\" (#2165) at xamarin/Xamarin.Forms","RelatedBody":"You can simplify debugging of Xamarin.Forms significantly by enabling source link support. Current process:\r\nhttps://blog.xamarin.com/debugging-xamarin-forms/\r\n\r\nA video example of what it should be like:\r\nhttps://youtu.be/gyRGhCQPkB4?t=1m\r\n\r\nSource link support will need to be enabled in the debugger too. VS 2017 & VS Code have support."},{"Id":"8826410740","Type":"IssuesEvent","CreatedAt":"2019-01-03T01:54:37","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1955","RelatedDescription":"Closed issue \"MenuItem - Icon - Allow any ImageSource\" (#1955) at xamarin/Xamarin.Forms","RelatedBody":"When adding a `ToolbarItem` it's `Icon` property has to be a `FileImageSource`. This means I can't use third party image sources that provide, for example, svg support.\r\n\r\nWould you consider relaxing the constraint to `ImageSource` so we can use  for example `SvgImageSource` ?\r\n"},{"Id":"8826399467","Type":"IssuesEvent","CreatedAt":"2019-01-03T01:49:38","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2117","RelatedDescription":"Closed issue \"[UWP] DisplayAlert shows the title twice\" (#2117) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe title of the alert is shown twice, once in the title bar of the popup, and again as a big header.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new cross-platform Xamarin.Forms project.\r\n2. Call `DisplayAlert(\"title\", \"message\", \"OK\");` in Constructor of MainPage code-behind and fill in parameters.\r\n3. Run the UWP project.\r\n\r\n### Expected Behaviour\r\nTitle in the alert should only show up once.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 2.5.1.317207\r\n- IDE: Visual Studio\r\n- Platform Target Frameworks: \r\n- UWP: 16299\r\n\r\n### Screenshots\r\n\r\n![screen shot 2018-03-16 at 15 46 53](https://user-images.githubusercontent.com/18712717/37505562-503602ba-2931-11e8-846e-8601106b7033.png)"},{"Id":"8826285790","Type":"PullRequestEvent","CreatedAt":"2019-01-03T01:00:54","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4047","RelatedDescription":"Closed pull request \"[XamlC] [Bug] Instantiate generic parameters in base type generic arguments\" (#4047) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nXamlC traverses a type chain to find the generic argument of  `Xamarin.Forms.Xaml.IMarkupExtension`. A generic instance type may be present in such a chain, and the generic argument of `Xamarin.Forms.Xaml.IMarkupExtension` can be a generic parameter of the type. This change allows to resolve such a generic parameter. Consider the following type and XAML for example:\r\n\r\n````C#\r\nclass C<T> : IMarkupExtension<T>\r\n````\r\n\r\n```XAML\r\n<C x:TypeArguments=\"int\" />\r\n```\r\n\r\nThe XAML instantiates `C<int>` in XAML. XamlC traverses the type chain and finds `IMarkupExtension` has `T` as its generic argument. However, `T` is not a real type but is a generic parameter. The code added in this change replaces `T` with `int`, the generic argument for `C`.\r\n\r\nThis is a change similar to #1533.\r\n\r\n### Issues Resolved ### \r\n\r\nI was too lazy to open an issue.\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nRun the added test.\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8825139821","Type":"PullRequestEvent","CreatedAt":"2019-01-02T19:41:56","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5326","RelatedDescription":"Merged pull request \"[d16-0] [foundation] Fix ICE in NSUrlSessionHandler.CreateConfig on macOS 10.9. Fixes #5309\" (#5326) at xamarin/xamarin-macios","RelatedBody":"For some reason (internal type?) OSX 10.9 does not return the expected\ninstance type when copied.\n\nHowever it turns out that the copy is not required\n\n> Modifying the returned session configuration object does not affect any\n> configuration objects returned by future calls to this method, and does\n> not change the default behavior for existing sessions. It is therefore\n> always safe to use the returned object as a starting point for\n> additional customization.\n\nhttps://developer.apple.com/documentation/foundation/nsurlsessionconfiguration/1411560-defaultsessionconfiguration?language=objc\n\nSo the simpler code should fix the issue.\n\nhttps://github.com/xamarin/xamarin-macios/issues/5309\n\nBackport of #5320.\n\n/cc @spouliot "},{"Id":"8824897401","Type":"PullRequestEvent","CreatedAt":"2019-01-02T18:47:50","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5306","RelatedDescription":"Merged pull request \"[msbuild] Fixes incremental build issues with frameworks from VS\" (#5306) at xamarin/xamarin-macios","RelatedBody":"Backport https://github.com/xamarin/xamarin-macios/pull/5249\r\n\r\nPartial fix for bug 662636 - *.dylib libraries are signed during full rebuild, but not the second time\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/662636\r\n\r\nThere were two problems:\r\n- VS was creating/touching each bundle resource found even if the resource wasn't unpacked on the Mac because the file was up to date. This caused the files on Windows to be changed on each build.\r\n- VS was not updating the framework files in the app bundle on incremental builds because the MTouch didn't have an output property informing the frameworks that were copied by mtouch into the app bundle. This caused MSBuild to skip the CodesignFramework target because the frameworks remained unchanged on Windows."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":12,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":269,"FavoriteCount":118,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":154,"FavoriteCount":68,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":179,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2019-01-03T05:31:13.1298143Z","RunDurationInMilliseconds":4394}