{"Data":{"GitHubIssues":{"Issues":[{"Id":"330854552","IsPullRequest":false,"CreatedAt":"2018-06-09T05:18:52","Actor":"doubletong","Number":"963","RawContent":null,"Title":"typing chinese in an textbox will lead to the app break out","State":"open","Body":"I created a Blazor app in chrome  but when I am typing chinese in an input ,the app will be force to quit ","Url":"https://github.com/aspnet/Blazor/issues/963","RelatedDescription":"Open issue \"typing chinese in an textbox will lead to the app break out\" (#963)"},{"Id":"330770564","IsPullRequest":false,"CreatedAt":"2018-06-08T19:06:25","Actor":"Paradoxon101","Number":"962","RawContent":null,"Title":"Handle FileResult from controller service","State":"open","Body":"Currently there is no way to evaluate a FileResult in the browser or to save it via a download dialog.","Url":"https://github.com/aspnet/Blazor/issues/962","RelatedDescription":"Open issue \"Handle FileResult from controller service\" (#962)"},{"Id":"330751303","IsPullRequest":false,"CreatedAt":"2018-06-08T18:01:16","Actor":"jskeet","Number":"961","RawContent":null,"Title":"Please clarify \"hosting from ASP.NET Core\" instructions","State":"open","Body":"I suspect I will be able to get this working, but the [docs](https://blazor.net/docs/host-and-deploy/index.html) aren't as clear as they might be.\r\n\r\nI would like to host a blazor page - potentially multiple pages - as part of nodatime.org.\r\n\r\nAt the moment, I believe that means:\r\n\r\n- Creating a separate project rather than doing it all in one project (not clear from docs)\r\n- Adding a reference to that project from my main ASP.NET project (reasonably clear once the above point is sorted)\r\n- Adding a reference to `Microsoft.AspNetCore.Blazor.Server` (not mentioned in the docs; I only found this out by looking at samples)\r\n- Somehow tell the middleware to server the Blazor app for a particular route (haven't worked this part out yet)\r\n- Tell the Blazor app about its new \"App base path\". The instructions for that read: \"To set the Blazor app's base path, update the `<base>` tag in index.html on the `<head>` tag.\" It would be useful to mention that `index.html` is in `wwwroot` - for a while I was looking at Index.cshtml and the various views etc. I got there in the end, but it might just save other people from the same struggle, even though it was my own fault :)\r\n\r\nIn the longer term, like #953, I would love it to be simpler to host a blazor app as part of a larger site in a seamless manner, *ideally* without even having a separate project.\r\n","Url":"https://github.com/aspnet/Blazor/issues/961","RelatedDescription":"Open issue \"Please clarify \"hosting from ASP.NET Core\" instructions\" (#961)"},{"Id":"330746288","IsPullRequest":false,"CreatedAt":"2018-06-08T17:44:20","Actor":"andoband","Number":"960","RawContent":null,"Title":"Vue-like directives","State":"open","Body":"I've grown to enjoy Vue's `v-if`, `v-show`, and `v-for` directives.  Maybe it's because I've gotten used to Vue, but it feels cleaner than the `@if` and `@foreach` blocks used by Razor and Blazor.  Specifically it's easier for me to visualize the document structure when the code expressions are inlined with the elements versus external to them.\r\n\r\nCould Blazor provide a similar syntax?\r\n\r\nFor example:\r\n\r\n**Razor/Blazor** (today)\r\n```\r\n@if (bar != null)\r\n{\r\n    <ul>\r\n        @foreach (var foo in bar) \r\n        {\r\n            <li>@foo.Name</li>\r\n        }\r\n    </ul>\r\n}\r\n```\r\n\r\n**Vue-like** (suggested)\r\n```\r\n<ul @if=\"bar != null\">\r\n    <li @foreach=\"var foo in bar\">@foo.Name</li>\r\n</ul>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/960","RelatedDescription":"Open issue \"Vue-like directives\" (#960)"},{"Id":"330733137","IsPullRequest":false,"CreatedAt":"2018-06-08T16:59:47","Actor":"SteveSandersonMS","Number":"959","RawContent":null,"Title":"Out-of-process execution","State":"open","Body":"Blazor's architecture creates opportunities for other ways of hosting and running Blazor applications, including:\r\n\r\n* In Electron\r\n* In a Web Worker\r\n* With server-side .NET code\r\n\r\nFor all three of these, we need a method for serializing the .NET/JS interactions so they can be pushed over a pipe (IPC, postMessage, WebSocket, etc.).\r\n\r\nWe'll break down this issue further as the design progresses.","Url":"https://github.com/aspnet/Blazor/issues/959","RelatedDescription":"Open issue \"Out-of-process execution\" (#959)"},{"Id":"330731240","IsPullRequest":false,"CreatedAt":"2018-06-08T16:53:33","Actor":"SteveSandersonMS","Number":"958","RawContent":null,"Title":"Treat blocks of static HTML as atomic","State":"open","Body":"Compiler optimization. Depends on #167","Url":"https://github.com/aspnet/Blazor/issues/958","RelatedDescription":"Open issue \"Treat blocks of static HTML as atomic\" (#958)"},{"Id":"330671051","IsPullRequest":false,"CreatedAt":"2018-06-08T14:03:09","Actor":"dlr1","Number":"957","RawContent":null,"Title":"Setting and clearing data for DragDrop operations","State":"open","Body":"Can we get methods to SetData, ClearData on DataTransfer object for DragDrop?\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\r\nhttps://html.spec.whatwg.org/multipage/dnd.html#dom-datatransfer-setdata\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/dropEffect\r\ntake a look at the example (scroll down)","Url":"https://github.com/aspnet/Blazor/issues/957","RelatedDescription":"Open issue \"Setting and clearing data for DragDrop operations\" (#957)"},{"Id":"330630697","IsPullRequest":false,"CreatedAt":"2018-06-08T12:57:19","Actor":"DaveKP","Number":"956","RawContent":null,"Title":"Browser soft refresh?","State":"closed","Body":"Just curious if there is currently/is going to be a way for Blazor to hijack F5 to only refresh the current app page?\r\n\r\nBrowser back/forward work as I'd expect, but F5 seems to relaunch the whole application? Is it possible to restrict the full application reload to Ctrl+F5?","Url":"https://github.com/aspnet/Blazor/issues/956","RelatedDescription":"Closed issue \"Browser soft refresh?\" (#956)"},{"Id":"330518055","IsPullRequest":false,"CreatedAt":"2018-06-08T04:46:08","Actor":"TheFanatr","Number":"955","RawContent":null,"Title":"Crash on Attempted Set of <input /> Element \"bind\" Attribute","State":"open","Body":"# Attempting to set Blazor \"bind\" Attribute on <input /> Element Hangs and Crashes Visual Studio\r\n\r\n[![a brief video showcasing this bug](https://img.youtube.com/vi/L1egU_YDlH4/0.jpg)](https://youtu.be/L1egU_YDlH4) \r\n<strong>a brief video showcasing this bug</strong>\r\n\r\n## Explanation\r\nEssentially, in this specific case, in an `<input />` element, typing `bind=@` in at the end of the tag will cause Visual Studio 2017 to crash. I have the latest version of both it and the Blazor language services extension, at 15.7.3 and 0.5.0-preview1-10320 respectively. \r\n\r\n## Behaviour Reproduction\r\nThe following is the source code needed to reproduce the bug.\r\n\r\n### TestPage.cshtml\r\n```cshtml\r\n@page  \"/testpage\"\r\n\r\n<h1>Welcome to the Test Page!</h1>\r\n\r\n<h2>Sample 1: LocalBrowserTodo</h2>\r\n\r\n@if (TodoManager.Instance.Entries.Count > 0)\r\n{\r\n    <table style=\"width:100%\">\r\n        <thead>\r\n\r\n            <tr>\r\n\r\n                <th>Title</th>\r\n                <th>Content</th>\r\n                <th></th>\r\n                <th></th>\r\n\r\n            </tr>\r\n\r\n        </thead>\r\n\r\n        @foreach (TodoManager.TodoEntry entry in TodoManager.Instance.Entries)\r\n        {\r\n            <tr>\r\n\r\n                @if (!entry.IsEditing)\r\n                {\r\n                    <th>@entry.Title</th>\r\n                    <th>@entry.Content</th>\r\n\r\n                }\r\n                else\r\n                {\r\n                    <th><input value=@entry.Title/></th>\r\n                    <th><input value=@entry.Content/></th>\r\n\r\n                }\r\n                <th><button type=\"button\" onclick=@(() => entry.IsEditing = !entry.IsEditing)>@(entry.IsEditing ? \"Stop\" : \"\") Edit</button></th>\r\n                <th><button type=\"button\" onclick=@entry.Delete>Delete</button></th>\r\n\r\n            </tr>\r\n        }\r\n    </table>\r\n\r\n}\r\nelse\r\n{\r\n    <strong>Nothing to do!</strong>\r\n}\r\n\r\n<button type=\"button\" onclick=@AddRandomTodo>Add @(TodoManager.Instance.Entries.Count > 0 ? \"another\" : \"a\") random one!</button>\r\n<h4>Note that for now, the titles of the todo entries are just random double-precision values and the contents are just random integers.</h4>\r\n\r\n@functions\r\n{\r\nstatic Random Random { get; } = new Random { };\r\n\r\nvoid AddRandomTodo() => TodoManager.Instance.Entries.Add(new TodoManager.TodoEntry { Title = Random.NextDouble().ToString(), Content = Random.Next() });\r\n\r\n}\r\n```\r\n\r\n### TodoManager.cs\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace BlazorTestApp.Client\r\n{\r\n    class TodoManager\r\n    {\r\n        internal class TodoEntry\r\n        {\r\n            static int InstanceCount { get; set; } = 0;\r\n\r\n            internal int ID { get; } = InstanceCount++;\r\n\r\n            internal string Title { get; set; } = String.Empty;\r\n\r\n            internal object Content { get; set; } = String.Empty;\r\n\r\n            internal bool Completed { get; set; } = false;\r\n\r\n            internal bool IsEditing { get; set; } = false;\r\n\r\n            internal void Delete() => Instance.Entries.Remove(this);\r\n        }\r\n\r\n        internal List<TodoEntry> Entries { get; } = new List<TodoEntry> { };\r\n\r\n        internal TodoEntry this[int id] => Entries.Find(entry => entry.ID == id);\r\n\r\n        internal void Reset() => Entries.Clear();\r\n\r\n        internal static TodoManager Instance { get; } = new TodoManager { };\r\n    }\r\n}\r\n```\r\n\r\nPlease ignore any implementation oddities, as project was just made to mess around with Blazor.\r\n\r\n## Metadata\r\n### Event Viewer Logs\r\nThe following is what Event Viewer had to say about the issue.\r\n\r\n#### .NET Runtime\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.InvalidOperationException\r\n   at System.Linq.Enumerable.Single[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Generic.IEnumerable`1<System.__Canon>)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.GetAttributeContent(Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.RewriteUsage(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode, Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.IntermediateNodePassBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorOptimizationPhase.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(Microsoft.AspNetCore.Razor.Language.RazorProjectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser+BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```\r\n\r\n#### Application Error\r\n```\r\nFaulting application name: devenv.exe, version: 15.7.27703.2026, time stamp: 0x5b0f5e36\r\nFaulting module name: KERNELBASE.dll, version: 10.0.17134.1, time stamp: 0x149ab0fd\r\nException code: 0xe0434352\r\nFault offset: 0x0010d722\r\nFaulting process id: 0x6e54\r\nFaulting application start time: 0x01d3fecf3951769e\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\devenv.exe\r\nFaulting module path: C:\\WINDOWS\\System32\\KERNELBASE.dll\r\nReport Id: 0f1bbcfb-83a4-4b0c-acf2-7dc587d6ff06\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\n### Installed Extensions List\r\nThe following is a list of all the extensions I have installed in my configuration of Visual Studio, in case it applies, but I suspect it will not.\r\n\r\n```json\r\n{\r\n  \"id\": \"3866550c-4a12-48e9-8f27-414aab12731f\",\r\n  \"name\": \"My Visual Studio extensions\",\r\n  \"description\": \"A collection of my Visual Studio extensions\",\r\n  \"version\": \"1.0\",\r\n  \"extensions\": [\r\n    {\r\n      \"name\": \"Azure Functions and Web Jobs Tools\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.Web.AzureFunctions\"\r\n    },\r\n    {\r\n      \"name\": \"Razor Language Services\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.RazorExtension\"\r\n    },\r\n    {\r\n      \"name\": \"Visual Studio IntelliCode - Preview\",\r\n      \"vsixId\": \"IntelliCode.VSIX.598224b2-b987-401b-8509-f568d0c0b946\"\r\n    },\r\n    {\r\n      \"name\": \"NP.XAMLIntellisenseExtensionForVS2017\",\r\n      \"vsixId\": \"NP.XAMLIntellisenseExtensionForVS2017.9c3d92c1-cbae-4738-a2f2-1e48eab3f15a\"\r\n    },\r\n    {\r\n      \"name\": \"Command Explorer\",\r\n      \"vsixId\": \"1a973c52-a674-48d8-a276-65ddab1ac598\"\r\n    },\r\n    {\r\n      \"name\": \"KnownMonikers Explorer\",\r\n      \"vsixId\": \"c38f3512-4653-4d97-a4c5-860a425209f5\"\r\n    },\r\n    {\r\n      \"name\": \"VS Live Share - Preview\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.LiveShare\"\r\n    },\r\n    {\r\n      \"name\": \"Extensibility Tools\",\r\n      \"vsixId\": \"f8330d54-0469-43a7-8fc0-7f19febeb897\"\r\n    },\r\n    {\r\n      \"name\": \"Code Cracker for C#\",\r\n      \"vsixId\": \"CodeCracker.Vsix..5b99e64c-1418-4a06-990c-fd4cf01f4f63\"\r\n    },\r\n    {\r\n      \"name\": \"StatusInfo\",\r\n      \"vsixId\": \"72581eb6-4dcd-4b8f-9add-c4257d4fb9d7\"\r\n    },\r\n    {\r\n      \"name\": \"Stack Overflow Quick Launch Search Provider\",\r\n      \"vsixId\": \"63E411F1-E531-44E8-8689-16B34600CF25\"\r\n    },\r\n    {\r\n      \"name\": \"File Differ\",\r\n      \"vsixId\": \"ea5c68d6-cdae-4e79-bd46-2a39e95bb256\"\r\n    },\r\n    {\r\n      \"name\": \".ignore\",\r\n      \"vsixId\": \"7ac24965-ea21-4108-9cac-6e46394aaaef\"\r\n    },\r\n    {\r\n      \"name\": \"Add New File\",\r\n      \"vsixId\": \"2E78AA18-E864-4FBB-B8C8-6186FC865DB3\"\r\n    },\r\n    {\r\n      \"name\": \"Unit Test Boilerplate Generator\",\r\n      \"vsixId\": \"UnitTestBoilerplate.RandomEngy.ca0bb824-eb5a-41a8-ab39-3b81f03ba3fe\"\r\n    },\r\n    {\r\n      \"name\": \".NET Portability Analyzer\",\r\n      \"vsixId\": \"55d15546-28ca-40dc-af23-dfa503e9c5fe\"\r\n    },\r\n    {\r\n      \"name\": \"Markdown Editor\",\r\n      \"vsixId\": \"9ca64947-e9ca-4543-bfb8-6cce9be19fd6\"\r\n    },\r\n    {\r\n      \"name\": \"File Nesting\",\r\n      \"vsixId\": \"6c799bc4-0d4c-4172-98bc-5d464b612dca\"\r\n    },\r\n    {\r\n      \"name\": \"Select Next Occurrence\",\r\n      \"vsixId\": \"NextOccurrence.b213c4e9-b96f-4f9d-b1d6-fa8bc7e9da21\"\r\n    },\r\n    {\r\n      \"name\": \"File Icons\",\r\n      \"vsixId\": \"3a7b4930-a5fb-46ec-a9b8-9610c8f953b8\"\r\n    },\r\n    {\r\n      \"name\": \"Refactoring Essentials for Visual Studio 2017\",\r\n      \"vsixId\": \"RefactoringEssentials.Vsix.cd27e59b-5c56-4238-8931-c9bb745a7a7f\"\r\n    },\r\n    {\r\n      \"name\": \"Experimental Tools 2017\",\r\n      \"vsixId\": \"fe00c281-eed0-4c6e-901b-d8b845c82e35\"\r\n    },\r\n    {\r\n      \"name\": \"Open in Visual Studio Code\",\r\n      \"vsixId\": \"e99dde0e-e023-410d-bc5d-3f76db71e3f0\"\r\n    },\r\n    {\r\n      \"name\": \"Stack Trace Explorer\",\r\n      \"vsixId\": \"Terrajobst.StackTraceExplorer.4995ed73-eaa4-4c4c-98fc-1e90df4aea6f\"\r\n    },\r\n    {\r\n      \"name\": \"UnBlockDllExtension\",\r\n      \"vsixId\": \"aee1ca98-a39a-4986-ba81-a36603ff6e02\"\r\n    },\r\n    {\r\n      \"name\": \"BuildVision\",\r\n      \"vsixId\": \"837c3c3b-8382-4839-9c9a-807b758a929f\"\r\n    },\r\n    {\r\n      \"name\": \"Surround Selection\",\r\n      \"vsixId\": \"4c807d55-9263-4ce0-9c1a-bfef58e96b02\"\r\n    },\r\n    {\r\n      \"name\": \"Automatic Versions 1\",\r\n      \"vsixId\": \"7f3f0c54-770a-4980-b3a0-5d9c4db90169\"\r\n    },\r\n    {\r\n      \"name\": \"CodeMaid\",\r\n      \"vsixId\": \"4c82e17d-927e-42d2-8460-b473ac7df316\"\r\n    },\r\n    {\r\n      \"name\": \"ASP.NET Core Blazor Language Services\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.BlazorExtension\"\r\n    },\r\n    {\r\n      \"name\": \"GitHub Extension for Visual Studio\",\r\n      \"vsixId\": \"c3d3dc68-c977-411f-b3e8-03b0dccf7dfc\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n\r\nI do have some more data I could upload, but posting download links is shady, so I am avoiding it.\r\n\r\nThanks.","Url":"https://github.com/aspnet/Blazor/issues/955","RelatedDescription":"Open issue \"Crash on Attempted Set of <input /> Element \"bind\" Attribute\" (#955)"},{"Id":"330509150","IsPullRequest":false,"CreatedAt":"2018-06-08T03:43:48","Actor":"chanan","Number":"954","RawContent":null,"Title":"Binding to events to a component that inherits from a c# class broke in 0.4.0","State":"open","Body":"The following worked in 0.3.0:\r\n\r\nDynamicElement is defined here: https://github.com/aspnet/Blazor/blob/stevesa/bootstrap-components-library/src/Microsoft.AspNetCore.Blazor.Bootstrap/DynamicElement.cs\r\n\r\n```\r\n<DynamicElement onclick=\"@onclick\" ...>...</DynamicElement>\r\n\r\n@functions {\r\n  [Parameter] private Action onclick { get; set; }\r\n}\r\n```\r\n\r\nin 0.4.0 an error on build:\r\n\r\n```\r\nArgument 1: cannot convert from 'System.MulticastDelegate' to 'string'\r\n```\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/954","RelatedDescription":"Open issue \"Binding to events to a component that inherits from a c# class broke in 0.4.0\" (#954)"},{"Id":"330479736","IsPullRequest":false,"CreatedAt":"2018-06-08T00:27:19","Actor":"ericwj","Number":"953","RawContent":null,"Title":"Is it possible to make part of a site use Blazor?","State":"open","Body":"Related to pre-rendering, I am having trouble integrating Blazor on a page in my app. Don't want to make the whole app use Blazor.\r\n\r\nOne problem is that Blazor has its own static file middleware hosting index.html. But it would be much better if I can render index.html myself with something like\r\n\r\n```\r\n@{\r\n    ViewData[\"BaseUrl\"] = \"/Blazor/App/Location/\";\r\n    ViewData[\"Title] = \"Whatever\";\r\n}\r\n<app></app>\r\n<script type=\"blazor-boot\"></script>\r\n```\r\nSuch that all my cool `<environment include...>` etc stuff in _Layout still works.\r\n\r\nAnother problem is that I cannot seem to get rid of `webpack:///webpack/bootstrap 5594f6dc856a30add6eb` which is overwriting parts of my bootstrap 4 stylesheet.\r\n\r\nPlus, it is fairly involved to make Blazor work at /Blazor/App/Location/ unless I'm doing it wrong, I've added something like pseudocode\r\n\r\n```\r\napp.MapWhen(\r\n    condition: path.StartsWithSegments(/Blazor/App/Location/) && StripThisPrefix,\r\n    config: subapp => subapp.UseStaticFiles().UseBlazor<Browser.Program>())\r\n```\r\nWhich is kind of involved. For one now I have StaticFiles middleware in three places.","Url":"https://github.com/aspnet/Blazor/issues/953","RelatedDescription":"Open issue \"Is it possible to make part of a site use Blazor?\" (#953)"},{"Id":"330471024","IsPullRequest":false,"CreatedAt":"2018-06-07T23:34:06","Actor":"JipingWang","Number":"952","RawContent":null,"Title":"Error: The \"RunCommand\" property is not defined","State":"open","Body":"Run a new project from the template getting error:\r\n\r\n> Unable to run your project. The \"RunCommand\" property is not defined.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <OutputType>Exe</OutputType>\r\n    <LangVersion>7.3</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Browser\" Version=\"0.4.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Build\" Version=\"0.4.0\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Blazor040_2.Shared\\Blazor040_2.Shared.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/952","RelatedDescription":"Open issue \"Error: The \"RunCommand\" property is not defined\" (#952)"},{"Id":"330468674","IsPullRequest":false,"CreatedAt":"2018-06-07T23:20:52","Actor":"chucker","Number":"951","RawContent":null,"Title":"Starting in 0.4, button with C#-implemented onclick event handler will submit form","State":"open","Body":"For debug purposes, I have a `<button>` that triggers C# code to log some info, like so:\r\n\r\n```html\r\n    <form>\r\n\r\n    [.. plenty of other stuff ..]\r\n\r\n        <button onclick=\"@Test\">Test</button>\r\n    </form>\r\n```\r\n\r\n`Test()` is a method that simply iterates my current model state (where `ConfiguratorInput` is a class for binding purposes):\r\n\r\n```csharp\r\n    void Test()\r\n    {\r\n        foreach (var item in typeof(ConfiguratorInput).GetProperties())\r\n        {\r\n            Console.WriteLine($\"{item.Name}: {item.GetValue(Input)}\");\r\n        }\r\n    }\r\n```\r\n\r\nAs `Console.WriteLine()` outputs to the browser, this lets me inspect the state right inside the browser's Web Inspector.\r\n\r\nLikely due to the change in #937 where Blazor will no longer call `preventDefault()`, this now causes the browser to redirect to a different location, probably attempting to \"submit the form\".\r\n\r\nThis new default behavior makes sense, but an opt-in way to prevent it would be desirable, such as through setting a new property `e.Handled` to `true`.","Url":"https://github.com/aspnet/Blazor/issues/951","RelatedDescription":"Open issue \"Starting in 0.4, button with C#-implemented onclick event handler will submit form\" (#951)"},{"Id":"330444475","IsPullRequest":false,"CreatedAt":"2018-06-07T21:37:44","Actor":"boukenka","Number":"950","RawContent":null,"Title":"Wrong version number comment in release notes","State":"closed","Body":"There is a new release of Blazor, the 0.4.0. But I think there is an error in the release notes.\r\nIt is written: We are pleased to announce the release of Blazor 0.3.0. It should be 0.40.","Url":"https://github.com/aspnet/Blazor/issues/950","RelatedDescription":"Closed issue \"Wrong version number comment in release notes\" (#950)"},{"Id":"330246853","IsPullRequest":true,"CreatedAt":"2018-06-07T19:49:43","Actor":"SteveSandersonMS","Number":"944","RawContent":null,"Title":"When clicking <a> tag with no href, don't attempt navigation to \"null\". Fixes #943","State":"closed","Body":"This PR will merge into `release/0.4.0` (and afterwards, I'll cherry-pick to `dev`).\r\n\r\nThe recent change to stop calling `preventDefault` on all events has caused a regression if you click on an `<a>` element that has no `href`. Our \"internal link navigation\" logic will try to read the `href`, gets the value `null`, and then because that's not anticipated it ends up being treated as string string `\"null\"` and we attempt to navigate to that as if it's a URL.\r\n\r\nThe fix is simply to do nothing if there's no `href` attribute. There is nothing we want to do in that situation.\r\n\r\n**Broader note**: This is an example of how the removal of `preventDefault` might be breaking in a bunch of unanticipated ways. However I still think it's the right thing to do (both by default, and for the great majority of cases). When we hear of scenarios where it's necessary to preventDefault, we'll have to consider each of them separately, as well as consider adding a general mechanism for controlling whether events are preventDefaulted.","Url":"https://github.com/aspnet/Blazor/pull/944","RelatedDescription":"Closed or merged PR \"When clicking <a> tag with no href, don't attempt navigation to \"null\". Fixes #943\" (#944)"},{"Id":"330130764","IsPullRequest":false,"CreatedAt":"2018-06-07T19:38:20","Actor":"shumas","Number":"941","RawContent":null,"Title":"data-* attribute, unexpected behavior","State":"closed","Body":"Steps to reproduce:\r\n1) Create new blazor project\r\n2) Add component:\r\n\r\n```\r\n<div data-tab=\"@TabId\">@ChildContent</div>\r\n@functions\r\n{\r\n    [Parameter]\r\n    string TabId { get; set; }\r\n    [Parameter]\r\n    RenderFragment ChildContent { get; set; }\r\n}\r\n```\r\n\r\n3) Modify index.cshtml, add following lines:\r\n\r\n```\r\n<TabHead TabId=\"main\">Main</TabHead>\r\n<TabHead TabId=\"cat\">Category</TabHead>\r\n```\r\n\r\nResult:\r\n```\r\n<!--!-->main<div data-tab=\"\">Main</div>\r\n<!--!-->cat<div data-tab=\"\">Category</div>\r\n```\r\n\r\nExpected result:\r\n```\r\n<!--!--><div data-tab=\"main\">Main</div>\r\n<!--!--><div data-tab=\"cat\">Category</div>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/941","RelatedDescription":"Closed issue \"data-* attribute, unexpected behavior\" (#941)"},{"Id":"330395610","IsPullRequest":true,"CreatedAt":"2018-06-07T19:26:16","Actor":"rynowak","Number":"949","RawContent":null,"Title":"Fix #974","State":"closed","Body":"The root cause here was that we weren't setting the language version in\r\nMSBuild, which is only for the command line version.","Url":"https://github.com/aspnet/Blazor/pull/949","RelatedDescription":"Closed or merged PR \"Fix #974\" (#949)"},{"Id":"330351586","IsPullRequest":false,"CreatedAt":"2018-06-07T17:45:42","Actor":"DNF-SaS","Number":"947","RawContent":null,"Title":"Full-Page reloads from 0.4.0-preview1-10314","State":"closed","Body":"When using 0.4.0-preview1-10314 (10313 works fine), I get strange full page reloads (the APP starts-up completely) on unclear circumstances.\r\nAfter clicking a button, ShouldRender is the last thing I see in the console-output.\r\nIt's hard to track down without debugger, so maybe the changes from 10313 to 10314 give a hint what's wrong. Does any commit vs. build-nr - log exist?","Url":"https://github.com/aspnet/Blazor/issues/947","RelatedDescription":"Closed issue \"Full-Page reloads from 0.4.0-preview1-10314\" (#947)"},{"Id":"330254288","IsPullRequest":false,"CreatedAt":"2018-06-07T17:20:44","Actor":"masonwheeler","Number":"945","RawContent":null,"Title":"System.Console.ReadLine infinite loop","State":"closed","Body":"```\r\n@page \"/\"\r\n\r\n<h1>Hello, @(_name)!</h1>\r\n\r\nWelcome to your new app.<br />\r\n\r\n<button onclick=@ReadInput>Enter Name</button>\r\n\r\n@functions {\r\n\tprivate string _name = \"world\";\r\n\r\n\tprivate void ReadInput() {\r\n\t\t_name = System.Console.ReadLine();\r\n\t\tStateHasChanged();\r\n\t}\r\n}\r\n```\r\n\r\nExpected: Upon clicking the button, user should be prompted once for a name.\r\nObserved: Upon clicking the button and entering a name, the prompt comes up again and again and again until you finally hit Cancel or tell the browser to prevent it from opening further prompt windows.  Then the value entered the first time gets used, and all the subsequent ones are ignored.","Url":"https://github.com/aspnet/Blazor/issues/945","RelatedDescription":"Closed issue \"System.Console.ReadLine infinite loop\" (#945)"},{"Id":"330356144","IsPullRequest":false,"CreatedAt":"2018-06-07T17:01:02","Actor":"Mteheran","Number":"948","RawContent":null,"Title":"White Screen in a hello world","State":"closed","Body":"I already installed all the requirements and I created a new blazor project but as you can see in the fowolling image:\r\n![image](https://user-images.githubusercontent.com/3578356/41114142-2e2f7aa8-6a49-11e8-8e13-9f4f5bfc37c0.png)\r\nI got a white screen and it is not working as expected. \r\n\r\ndoes someone have any idea regarding this issue??? \r\n","Url":"https://github.com/aspnet/Blazor/issues/948","RelatedDescription":"Closed issue \"White Screen in a hello world\" (#948)"},{"Id":"330319755","IsPullRequest":false,"CreatedAt":"2018-06-07T15:52:41","Actor":"RandyBuchholz","Number":"946","RawContent":null,"Title":"[Question] Kestrel in Blazor?","State":"closed","Body":"I don't know much about this area, and was curious if Kestrel can be used as a \"regular\" web server inside Blazor. By this I mean, can I do gets, posts, etc. to a browser running Kestrel in Blazor? If so, are there any examples available? ","Url":"https://github.com/aspnet/Blazor/issues/946","RelatedDescription":"Closed issue \"[Question] Kestrel in Blazor?\" (#946)"},{"Id":"330169930","IsPullRequest":false,"CreatedAt":"2018-06-07T12:24:57","Actor":"MelnikovIG","Number":"942","RawContent":null,"Title":"Issue with publishing Blazor app to repository's Github Pages.","State":"closed","Body":"When i am publishing quick start template app using repository GitHub Pages, links not working, pages not loaded, because links are not relative to my app path, they relative to my GitHub path.\r\n\r\nSteps to reproduce:\r\n1) Create new client app from Blazor template.\r\n2) Publish Blazor app and upload dist folder to yours repository docs folder.\r\n3) Setup GitHub repository to use docs as GitHub Pages\r\n4) Add .nojekyll empty file to allow get static resource, starting from underscore symbol (need for resources located in _framework folder)\r\n5) Go to created repository site. Main page successfully loaded.\r\n\r\nExpected result: you can able no navigate pages from nav menu.\r\nActual result: you can't able no navigate pages from nav menu. (For example counter page links to username.github.io/counter instead of username.github.io/YouBlazorRepo/counter,  if you try manually navigate to username.github.io/YouBlazorRepo/counter , counter page not loaded).","Url":"https://github.com/aspnet/Blazor/issues/942","RelatedDescription":"Closed issue \"Issue with publishing Blazor app to repository's Github Pages.\" (#942)"},{"Id":"330184844","IsPullRequest":false,"CreatedAt":"2018-06-07T12:19:32","Actor":"Boglen","Number":"943","RawContent":null,"Title":"How to preventdefault in link onclick event?","State":"closed","Body":"After https://github.com/aspnet/Blazor/commit/93c1e37c530cfa0e724ce073df83d16168261c90 how can we prevent default action on link?\r\n\r\nI have a pagination \r\n`                    @foreach (var exerc in Exercises)\r\n                    {\r\n                        <li class=\"page-item @( exerc.isSelected ? \"active\" : \"\")\"><a class=\"page-link\" onclick=\"@((__value) => { ChangeCurrentExercise(exerc.Id); })\">@count</a></li>\r\n                        count++;\r\n                    }`\r\nand after onclick it tries to route to null route. ","Url":"https://github.com/aspnet/Blazor/issues/943","RelatedDescription":"Closed issue \"How to preventdefault in link onclick event?\" (#943)"},{"Id":"330071351","IsPullRequest":false,"CreatedAt":"2018-06-07T11:35:33","Actor":"xxyuze","Number":"940","RawContent":null,"Title":"Can initialize the program after a certain JS initialization is completed?","State":"closed","Body":"Can  initialize the program after a certain JS initialization is completed?","Url":"https://github.com/aspnet/Blazor/issues/940","RelatedDescription":"Closed issue \"Can initialize the program after a certain JS initialization is completed?\" (#940)"},{"Id":"329893215","IsPullRequest":true,"CreatedAt":"2018-06-06T23:35:43","Actor":"mattferderer","Number":"938","RawContent":null,"Title":"Update Steve Sanderson's demo to latest NDC talk","State":"closed","Body":"Steve recently did another NDC talk which is much more up to date. Suggesting that one be linked to instead of the older talk.","Url":"https://github.com/aspnet/Blazor/pull/938","RelatedDescription":"Closed or merged PR \"Update Steve Sanderson's demo to latest NDC talk\" (#938)"},{"Id":"329906691","IsPullRequest":false,"CreatedAt":"2018-06-06T19:17:44","Actor":"abhishekgoenka","Number":"939","RawContent":null,"Title":"Lazy assembly download","State":"closed","Body":"**Current behavior** - All the .NET assemblies are downloaded asynchronously during the first page load\r\n**New feature requirement** - It would be nice if only required assemblies get downloaded during the first-page load. Remaining assemblies should get download as a user navigates to other pages. \r\n","Url":"https://github.com/aspnet/Blazor/issues/939","RelatedDescription":"Closed issue \"Lazy assembly download\" (#939)"},{"Id":"329841423","IsPullRequest":true,"CreatedAt":"2018-06-06T12:44:55","Actor":"SteveSandersonMS","Number":"937","RawContent":null,"Title":"Don't preventDefault on events. Fixes #803","State":"closed","Body":"It seems that we started calling `event.preventDefault` on all .NET-handled events in this commit: https://github.com/aspnet/Blazor/commit/36f5c5898820899831447b3dbde5e8658cc0baaa\r\n\r\nIt's not explicitly stated why I added that line in that commit, but my guess now is that it was needed because we didn't yet have the \"internal link click\" handling logic that we now do (which does call `preventDefault` when it recognizes clicks on internal links).\r\n\r\nSo it looks like we can fix #803 and all related issues trivially just be removing the `event.preventDefault` call. It doesn't appear to affect anything else negatively, and conceptually should be the right thing to do because saying you want to handle an event is not the same as saying you want to prevent its default actions.","Url":"https://github.com/aspnet/Blazor/pull/937","RelatedDescription":"Closed or merged PR \"Don't preventDefault on events. Fixes #803\" (#937)"},{"Id":"329808988","IsPullRequest":true,"CreatedAt":"2018-06-06T12:44:15","Actor":"SteveSandersonMS","Number":"936","RawContent":null,"Title":"Stevesa/pr 868 updated","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/936","RelatedDescription":"Closed or merged PR \"Stevesa/pr 868 updated\" (#936)"},{"Id":"329803131","IsPullRequest":true,"CreatedAt":"2018-06-06T10:49:56","Actor":"SteveSandersonMS","Number":"935","RawContent":null,"Title":"Add more struct readonlyness hints","State":"closed","Body":"These suggestions come from ErrorProne.NET, a set of Roslyn analyzers that warn about suboptimal `struct` usage.","Url":"https://github.com/aspnet/Blazor/pull/935","RelatedDescription":"Closed or merged PR \"Add more struct readonlyness hints\" (#935)"},{"Id":"329745717","IsPullRequest":false,"CreatedAt":"2018-06-06T07:33:40","Actor":"furoraest","Number":"934","RawContent":null,"Title":"passing arguments to onclick in svg","State":"open","Body":"when doing: button onclick=@(() => MyFunction(my.Variable)) it works as expected\r\nwhen binding svg onclick without arguments, eg: onclick=@TestFunction, also works as expected\r\nwhen trying to bind onclick with variables within svg, errors begin:\r\n\r\nUncaught Error: Microsoft.AspNetCore.Blazor.Browser.Interop.JavaScriptException: Cannot set attribute on non-element child\r\nError: Cannot set attribute on non-element child\r\n    at BrowserRenderer.applyEdits (BrowserRenderer.ts:76)\r\n    at BrowserRenderer.updateComponent (BrowserRenderer.ts:33)\r\n    at renderBatch (Renderer.ts:45)\r\n    at Array.<anonymous> (mono.js:1)\r\n    at _emscripten_asm_const_iiiiii (mono.js:1)\r\n    at wasm-function[2679]:25\r\n    at wasm-function[3541]:44\r\n    at wasm-function[3548]:408\r\n    at wasm-function[3550]:224\r\n    at wasm-function[3766]:189\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1c21a40 + 0x00054> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1c21958 + 0x00022> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch batch) <0x1c21870 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1a497b0 + 0x000a4> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67f70 + 0x00074> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67e08 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1f5f478 + 0x0005a> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n    at BrowserRenderer.applyEdits (BrowserRenderer.ts:76)\r\n    at BrowserRenderer.updateComponent (BrowserRenderer.ts:33)\r\n    at renderBatch (Renderer.ts:45)\r\n    at Array.<anonymous> (mono.js:1)\r\n    at _emscripten_asm_const_iiiiii (mono.js:1)\r\n    at wasm-function[2679]:25\r\n    at wasm-function[3541]:44\r\n    at wasm-function[3548]:408\r\n    at wasm-function[3550]:224\r\n    at wasm-function[3766]:189\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1c21a40 + 0x00054> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1c21958 + 0x00022> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch batch) <0x1c21870 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1a497b0 + 0x000a4> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67f70 + 0x00074> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67e08 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1f5f478 + 0x0005a> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n    at Object.callMethod (MonoPlatform.ts:70)\r\n    at raiseEvent (BrowserRenderer.ts:327)\r\n    at EventDelegator.onEvent (BrowserRenderer.ts:19)\r\n    at EventDelegator.onGlobalEvent (EventDelegator.ts:83)","Url":"https://github.com/aspnet/Blazor/issues/934","RelatedDescription":"Open issue \"passing arguments to onclick in svg\" (#934)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-09T05:30:03.0908309Z","RunDurationInMilliseconds":1490}