{"Data":{"Sdk":{"Events":[{"Id":"6730602982","Type":"PullRequestEvent","CreatedAt":"2017-10-18T02:04:26","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/269","RelatedDescription":"Opened pull request \"Merge test changes into Office2016\" (#269) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6730577735","Type":"PullRequestEvent","CreatedAt":"2017-10-18T01:54:03","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/265","RelatedDescription":"Merged pull request \"Update Office2016 branch from vNext\" (#265) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6730573849","Type":"PullRequestEvent","CreatedAt":"2017-10-18T01:52:23","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/268","RelatedDescription":"Merged pull request \"Set StyleCop.Analyzers as private assets\" (#268) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6730572859","Type":"PullRequestEvent","CreatedAt":"2017-10-18T01:51:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/268","RelatedDescription":"Opened pull request \"Set StyleCop.Analyzers as private assets\" (#268) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6730539955","Type":"PullRequestEvent","CreatedAt":"2017-10-18T01:38:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/264","RelatedDescription":"Merged pull request \"Do not copy TestFileStreams to files\" (#264) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6730493651","Type":"PullRequestEvent","CreatedAt":"2017-10-18T01:18:49","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/267","RelatedDescription":"Opened pull request \"Use a UriKind.RelativeOrAbsolute wrapper for Mono support\" (#267) at OfficeDev/Open-XML-SDK","RelatedBody":"In .NET new Uri (\"/foo\", UriKind.RelativeOrAbsolute) returns a relative\r\nUri whereas Mono assumes it is an absolute file path.\r\nMono diverges from .NET because UNIX file paths starting with\r\n'/' are absolute file paths.\r\n\r\nThis change introduces a UriHelper class that provides a workaround by\r\nredefining RelativeOrAbsolute to a Mono specific value when on that\r\nplatform.\r\n\r\nFor more information, see:\r\nwww.mono-project.com/docs/faq/known-issues/urikind-relativeorabsolute/\r\n\r\nFixes #249"},{"Id":"6730467185","Type":"IssuesEvent","CreatedAt":"2017-10-18T01:07:45","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/266","RelatedDescription":"Opened issue \"A Stream must be seekable when opening package on .NET Core\" (#266) at OfficeDev/Open-XML-SDK","RelatedBody":"While refactoring tests, I found that on .NET Core, the following fails, while it succeeds on .NET Framework:\r\n\r\n```csharp\r\nusing (var stream = TestFileStreams.Presentation)\r\nusing (var package = Package.Open(stream))\r\n{\r\n    var openSettings = new OpenSettings\r\n    {\r\n        MarkupCompatibilityProcessSettings = new MarkupCompatibilityProcessSettings(MarkupCompatibilityProcessMode.ProcessAllParts, FileFormatVersions.Office2013)\r\n    };\r\n\r\n    using (var doc = PresentationDocument.Open(package, openSettings))\r\n    {\r\n        var v = new OpenXmlValidator(FileFormatVersions.Office2013);\r\n        var errs = v.Validate(doc);\r\n\r\n        Assert.Equal(94, errs.Count());\r\n    }\r\n}\r\n```\r\n\r\nThe input stream needs to be made writeable (ie copied to a `MemoryStream`):\r\n\r\n```csharp\r\nusing (var stream = TestFileStreams.Presentation.AsMemoryStream())\r\nusing (var package = Package.Open(stream))\r\n{\r\n    var openSettings = new OpenSettings\r\n    {\r\n        MarkupCompatibilityProcessSettings = new MarkupCompatibilityProcessSettings(MarkupCompatibilityProcessMode.ProcessAllParts, FileFormatVersions.Office2013)\r\n    };\r\n\r\n    using (var doc = PresentationDocument.Open(package, openSettings))\r\n    {\r\n        var v = new OpenXmlValidator(FileFormatVersions.Office2013);\r\n        var errs = v.Validate(doc);\r\n\r\n        Assert.Equal(94, errs.Count());\r\n    }\r\n}\r\n```\r\n\r\nThis fails because `ZipArchive` requires a stream that has read, write, and seek capabilities in .NET Core:\r\n\r\n```\r\nFailed   DocumentFormat.OpenXml.Tests.PptxTests01.P005_PptxCreation_Package_Settings\r\nError Message:\r\n System.ArgumentException : Update mode requires a stream with read, write, and seek capabilities.\r\nStack Trace:\r\n   at System.IO.Compression.ZipArchive.Init(Stream stream, ZipArchiveMode mode, Boolean leaveOpen)\r\n   at System.IO.Packaging.ZipPackage..ctor(Stream s, FileMode packageFileMode, FileAccess packageFileAccess)\r\n   at System.IO.Packaging.Package.Open(Stream stream, FileMode packageMode, FileAccess packageAccess)\r\n   at System.IO.Packaging.Package.Open(Stream stream)\r\n   at DocumentFormat.OpenXml.Tests.PptxTests01.P005_PptxCreation_Package_Settings() in C:\\Users\\tasou\\Projects\\Software\\Open-XML-SDK\\DocumentFormat.OpenXml.Tests\\TestPptx01.cs:line 60\r\n```\r\n\r\n"},{"Id":"6724425228","Type":"PullRequestEvent","CreatedAt":"2017-10-16T22:33:16","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/265","RelatedDescription":"Opened pull request \"Update Office2016 branch from vNext\" (#265) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6724392594","Type":"PullRequestEvent","CreatedAt":"2017-10-16T22:23:05","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/264","RelatedDescription":"Opened pull request \"Do not copy TestFileStreams to files\" (#264) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6723893882","Type":"PullRequestEvent","CreatedAt":"2017-10-16T20:18:55","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/259","RelatedDescription":"Merged pull request \"Enable SA1507: The C# code contains multiple blank lines in a row\" (#259) at OfficeDev/Open-XML-SDK","RelatedBody":"This enables a style cop rule to ensure there is no more than a single new line in a row. Part of #197 "},{"Id":"6723826019","Type":"PullRequestEvent","CreatedAt":"2017-10-16T20:03:29","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/263","RelatedDescription":"Opened pull request \"Clean up description and add summary\" (#263) at OfficeDev/Open-XML-SDK","RelatedBody":"The lack of a summary field in the NuGet package means the description gets used, but it ends up being truncated. \r\n\r\nThis change also cleans up the description to be a bit clearer:\r\n\r\n- The description also includes information that is not about this project, but the OpenXml PowerTools, so I've removed that with this change as well.\r\n- DOCX, XLSX, and PPTX usage is replaced with Word, Excel, and PowerPoint\r\n\r\nFixes #257 "},{"Id":"6723793022","Type":"PullRequestEvent","CreatedAt":"2017-10-16T19:56:02","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/258","RelatedDescription":"Merged pull request \"Enable SA1516: Elements must be separated by new lines\" (#258) at OfficeDev/Open-XML-SDK","RelatedBody":"This enables a style cop rule to ensure elements are uniformly separated by a new line. Part of #197 "},{"Id":"6723767582","Type":"IssuesEvent","CreatedAt":"2017-10-16T19:50:31","Actor":"kamilzzz","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/262","RelatedDescription":"Opened issue \"Explicit call to Save() does nothing when AutoSave is set to false\" (#262) at OfficeDev/Open-XML-SDK","RelatedBody":"In current implementation explicitly calling Save() from OpenXmlPackage does nothing when AutoSave option is set to false.\r\nIt's because Save() calls SavePartContents() which checks if AutoSave is enabled.\r\n\r\nThis makes sense when SavePartContents() is called from Dispose() method, because we shouldn't save automatically during disposal when this flag is set to false, but shouldn't explicit call to Save() actually save package regardless of AutoSave state? "}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"6714628860","Type":"PullRequestEvent","CreatedAt":"2017-10-13T17:42:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/148","RelatedDescription":null,"RelatedBody":"As part of being able to support .NET Core, this change does the following:\r\n\r\n- Update to the latest NuGet of DocumentFormat.OpenXml\r\n- Convert projects to use the new csproj format (will allow .NET Standard targeting at a later point)\r\n- Consolidates solution files into one file that has the tool, cmdlet, tests, and examples\r\n- Adds a powershell project. This is an msbuild based project but helps organize loose files. The bin folder of this project has everything needed for a module\r\n\r\nInitial support for #116"},{"Id":"6644112338","Type":"IssuesEvent","CreatedAt":"2017-09-27T13:47:58","Actor":"kaviyarasanaspire","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/186","RelatedDescription":"Opened issue \"While applying background color in the html theme is applied in the wml file\" (#186) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"While applying background color for the text before the image with different font the theme is applied in the wml file and assigning different font.\r\n <w:rFonts w:asciiTheme=\"minorHAnsi\" w:eastAsiaTheme=\"minorHAnsi\" w:hAnsiTheme=\"minorHAnsi\" w:cstheme=\"minorBidi\" />\r\n\r\nCan anyone please give me the solution for this.\r\n"},{"Id":"6638589438","Type":"IssuesEvent","CreatedAt":"2017-09-26T14:07:27","Actor":"ben-demotic","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/185","RelatedDescription":"Opened issue \"DocumentAssembler - vNext line 558 - p.Elements().Count()\" (#185) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi Eric\r\n\r\nThanks for the great library.  I just discovered OpenXmlPowerTools recently and am using it to replace my old RTF based token replacement with DOCX to really save on those storage costs!\r\n\r\nAnyway, while working with some multi-line address data, delimited by '\\n', I had a problem whereby not all of the <br/> elements were being inserted.\r\n\r\nFor example, say I have this text:\r\n\r\n17 Shire Oak Road\\nSaxlingham\\nNR15 5TR\r\n\r\nI have 2 documents where I am attempting to insert this data formatted with new lines as an address.  The first document, the token is replaced by the following which correctly contains a <br/> inserted before the 2nd and 3rd elements:\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n   <p xmlns=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n      <pPr>\r\n         <pStyle xmlns:p3=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" \r\n              p3:val=\"NoSpacing\"/>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n      </pPr>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <t>17 Shire Oak Road</t>\r\n      </r>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <br/>\r\n         <t>Saxlingham</t>\r\n      </r>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <br/>\r\n         <t>NR15 5TR</t>\r\n      </r>\r\n   </p>\r\n```\r\nThe second document does not have the extra <rPr><bCs/><rPr> of the first and if you look you can see that it has not put the <br/> before the second element.\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n   <p xmlns=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n      <r>\r\n         <t>17 Shire Oak Road</t>\r\n      </r>\r\n      <r>\r\n         <t>Saxlingham</t>\r\n      </r>\r\n      <r>\r\n         <br/>\r\n         <t>NR15 5TR</t>\r\n      </r>\r\n   </p>\r\n```\r\n\r\nAm I right in saying that their is a bug here in that the test for p.Elements().Count() on line 558 should test for > 0 not > 1 ??  And that the only reason why it works in the first case is because of the extra guff which is present artificially increasing p.Elements().Count()?  And that it should test only for a count of the <W:r> element?  Should it in fact show:\r\n\r\n(p.Elements(W.r).Count() > 0)\r\n\r\nThis seems to work in my use case.\r\n\r\nCheers\r\n\r\nBen\r\n"},{"Id":"6619868836","Type":"IssuesEvent","CreatedAt":"2017-09-21T13:48:37","Actor":"mesteves","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/184","RelatedDescription":"Opened issue \"binding directives in tables\" (#184) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\n\r\nI'm trying to use DocumentAssembler to generate documents based on xml files, and using repeat directive associated with table directive, i'm not being able to:\r\n\r\n1. Use two expressions in one cell of the prototype row (like ./Price ./CurrencySymbol )\r\n2. Use select content expression on table header. (like **Price** `<# <Content Select=\"./SaleItems/SaleItem[1]/@Currency\"/> #>` ) - produces invalid document\r\n\r\nAny help on this would be appreciated,\r\n\r\nBest regards,\r\nManuel"},{"Id":"6605978130","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:35:41","Actor":"kimsey0","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/183","RelatedDescription":"Opened pull request \"Merge styles with same name in DocumentBuilder\" (#183) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Solves #181.\r\n\r\nCurrently implemented with a compile-time feature flag, but this could easily be changed to an optional parameter passed to DocumentBuilder at run-time.\r\n\r\nIt is likely possible to clean up the section that maps style IDs in references and numberings so that it doesn't have to go through as many elements."}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-18T05:30:39.3633213Z","RunDurationInMilliseconds":1924}