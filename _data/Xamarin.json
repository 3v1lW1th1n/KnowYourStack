{"Data":{"Blog":{"FeedItems":[{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Appleâ€™s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8299424271","Type":"PullRequestEvent","CreatedAt":"2018-09-21T02:49:17","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2207","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix _CompileJava running too often\" (#2207) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2088\r\nContext: https://github.com/xamarin/xamarin-android/pull/2129\r\nContext: https://github.com/xamarin/xamarin-android/pull/2199\r\n\r\nIn 4deec52e, I fixed the #deletebinobj problem we discovered.\r\n\r\nHowever...\r\n\r\nI introduced a regression to incremental builds, I noticed that the\r\n`_CompileJava` target is now running on a second build with no\r\nchanges. Third build? oddly it gets skipped...\r\n\r\nIt seems to be due to our use of flag files:\r\n1. `_UpdateAndroidResgen` updates `R.cs.flag` and uses the file as an\r\n   output\r\n2. `_GenerateJavaDesignerForComponent` now uses `R.cs.flag` as an\r\n   input\r\n3. `_GenerateJavaStubs` *also* updates the timestamp on `R.cs.flag`.\r\n   This was added in 970da9ef, as a workaround for our two instances\r\n   of `ConvertResourcesCases`.\r\n4. `_GenerateJavaDesignerForComponent` will now run again on the next\r\n   build.\r\n\r\nSince 1886e6f1 eliminated the second call to `ConvertResourcesCases`,\r\nwe don't need to update `R.cs.flag` in no. 3 any longer.\r\n\r\nRemoving the call to `<Touch />` `R.cs.flag` in `_GenerateJavaStubs`\r\nfixed the issue, and I added some assertions in relevant tests to\r\ncheck that the `_CompileJava` and `_GenerateJavaDesignerForComponent`\r\ntargets aren't running on incremental builds."},{"Id":"8298910265","Type":"PullRequestEvent","CreatedAt":"2018-09-20T23:40:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2010","RelatedDescription":"Merged pull request \"Bump to xamarin/Java.Interop:master@32f0c9cf\" (#2010) at xamarin/xamarin-android","RelatedBody":"Adds xamarin/xamarin-android-tools to xamarin/Java.Interop.\r\n\r\nOverride `$(XamarinAndroidToolsDirectory)` so that the Java.Interop\r\nbuild will use xamarin-android's `external/xamarin-android-tools` in\r\nprecedence/priority over the commit that Java.Interop uses, in a\r\nsimilar fashion as 9bc51aed and Cecil."},{"Id":"8298575871","Type":"IssuesEvent","CreatedAt":"2018-09-20T22:02:21","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2206","RelatedDescription":"Opened issue \"Open assemblies with Mono.Cecil less, by using item metadata\" (#2206) at xamarin/xamarin-android","RelatedBody":"As described [here](https://github.com/xamarin/xamarin-android/wiki/Build-Performance-Ideas#resolvelibraryprojectimports-and-getadditionalresourcesfromassemblies).\r\n\r\nWe could have a task that runs earlier that \"classifies\" assemblies with MSBuild item metadata:\r\n- `HasNativeLibraries`\r\n- `HasEmbeddedJars`\r\n- `HasLibraryProjects`\r\n- `HasAdditionalResources`\r\n\r\nThe idea then, is we could pass in a LOT less assemblies to these MSBuild tasks:\r\n- `ResolveLibraryProjectImports`\r\n- `GetAdditionalResourcesFromAssemblies`\r\n- `BuildApks`\r\n\r\nFurther research is needed to see if we can do the same treatment with `ResolveAssemblies` and other tasks that happen _after_ `Compile`."},{"Id":"8298388943","Type":"IssuesEvent","CreatedAt":"2018-09-20T21:19:51","Actor":"Flash3001","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2205","RelatedDescription":"Opened issue \"[AAPT2] Merge local and dependencies Resources conflicting\" (#2205) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Android project\r\n2. Enable aapt2\r\n3. Install any NuGet package that depends on Xamarin.GooglePlayServices.Basement\r\n4. Configure google-services.json with build action of GoogleServicesJson\r\n5. Have any Resource on app (layout, string, animation), but lets add an empty anim/simple_animation.xml `<set></set>`\r\n\r\nA.1 - Clean the project and Rebuild\r\nA.2 - **Resource.String.gcm_defaultSenderId** exist but **Resource.Animation.simple_animation** doesn't.\r\n\r\nB.1 - Edit anim/simple_animation.xml (add an empty line at the end or any other valid change) and Save\r\nB.2 -  **Resource.String.gcm_defaultSenderId** is missing but now **Resource.Animation.simple_animation** exists.\r\n\r\nC.1 - Install Xamarin.Firebase.Analytics\r\nC.2 - Repeat step on B\r\nC.3 - Delete the  **Resource.String.gcm_defaultSenderId** so you can build\r\nC.4 - Run the app\r\nC.5 - Initialization issue with **Didn't find class \"com.google.android.gms.R$string\" on path: DexPathList[[zip file \"/data/app/com.testing.TestAapt2-OenTlsPjUVvkgdqQhDSGUw==/base.apk\"],nativeLibraryDirectories=[/data/app/com.testing.TestAapt2-OenTlsPjUVvkgdqQhDSGUw==/lib/arm64, /system/fake-libs64, /data/app/com.testing.TestAapt2-OenTlsPjUVvkgdqQhDSGUw==/base.apk!/lib/arm64-v8a, /system/lib64, /system/vendor/lib64]]** \r\n\r\nD.1 - Additional: Try the same as C with the Facebook login button.\r\n\r\nTest project:\r\n[conflict_test_aapt2.zip](https://github.com/xamarin/xamarin-android/files/2403050/conflict_test_aapt2.zip)\r\n\r\n### Expected Behavior\r\nBoth **Resource.String.gcm_defaultSenderId** and **Resource.Animation.simple_animation** should exist.\r\n\r\n### Actual Behavior\r\nXOR **Resource.String.gcm_defaultSenderId**, **Resource.Animation.simple_animation**\r\n\r\n### Additional Information\r\n\r\nThis issue don't seem to be exclusive to GooglePlayServices or AAPT2.\r\n\r\nNot exclusive to GooglePlayServices: I've experienced a similar problem with Xamarin.Facebook.Android and a custom binding for https://github.com/MiguelCatalan/MaterialSearchView \r\n\r\nNot exclusive to AAPT2, but on the extreme on AAPT2 - I can't tell if the issue is the same, but for more context: When using the old aapt we get get random runtime issues after a AXML file change about missing resources on GooglePlayServices, Facebook login button and MaterialSearchView.\r\n\r\nWhen using **aapt** issues A and B would never happen, but issue C is totally random after editing a AXML file.\r\n\r\nWhen enabling **aapt2** issues A, B and C are constants.\r\n\r\nOn our main project we have Multidex enabled. The Test Project provided before don't need it to trigger the problem.\r\n\r\nWhen using aapt or aapt2 I've noticed that the **obj** folder is recreated 2 or 3 times after I delete it - my clean strategy involves closing VS4M, killing mono_sgen64, aapt and java. Then delete obj and bin folders.\r\n\r\nIssue C for GooglePlayServices is reported here https://github.com/xamarin/GooglePlayServicesComponents/issues/69\r\n\r\n### Version Information\r\n\r\n> === Visual Studio Community 2017 for Mac ===\r\n> \r\n> Version 7.6.6 (build 17)\r\n> Installation UUID: 9a5b91cf-e5ce-4027-8e14-daa7b5b84c3a\r\n> Runtime:\r\n> \tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n> \tGTK+ 2.24.23 (Raleigh theme)\r\n> \tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n> \r\n> \tPackage version: 512000301\r\n> \r\n> === NuGet ===\r\n> \r\n> Version: 4.3.1.4445\r\n> \r\n> === .NET Core ===\r\n> \r\n> Runtime: /usr/local/share/dotnet/dotnet\r\n> Runtime Versions:\r\n> \t2.1.2\r\n> \t2.1.1\r\n> \t2.0.5\r\n> \t2.0.0\r\n> \t1.1.2\r\n> \t1.0.5\r\n> SDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\n> SDK Versions:\r\n> \t2.1.302\r\n> \t2.1.301\r\n> \t2.1.4\r\n> \t2.0.2\r\n> \t2.0.0\r\n> \t1.0.4\r\n> MSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n> \r\n> === Xamarin.Profiler ===\r\n> \r\n> Version: 1.6.3\r\n> Location: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n> \r\n> === Apple Developer Tools ===\r\n> \r\n> Xcode 10.0 (14320.25)\r\n> Build 10A255\r\n> \r\n> === Xamarin.Mac ===\r\n> \r\n> Version: 4.6.0.14 (Visual Studio Community)\r\n> Hash: 1a6e2786\r\n> Branch: \r\n> Build date: 2018-08-28 00:12:06-0400\r\n> \r\n> === Xamarin.iOS ===\r\n> \r\n> Version: 12.0.0.15 (Visual Studio Community)\r\n> Hash: 84552a46\r\n> Branch: xcode10\r\n> Build date: 2018-09-17 21:54:33-0400\r\n> \r\n> === Xamarin.Android ===\r\n> \r\n> Version: 9.0.0.20 (Visual Studio Community)\r\n> Android SDK: /Users/flash/Library/Developer/Xamarin/android-sdk-macosx\r\n> \tSupported Android versions:\r\n> \t\t4.0.3 (API level 15)\r\n> \t\t4.1   (API level 16)\r\n> \t\t4.4   (API level 19)\r\n> \t\t6.0   (API level 23)\r\n> \t\t7.0   (API level 24)\r\n> \t\t7.1   (API level 25)\r\n> \t\t8.0   (API level 26)\r\n> \t\t8.1   (API level 27)\r\n> \r\n> SDK Tools Version: 26.1.1\r\n> SDK Platform Tools Version: 28.0.1\r\n> SDK Build Tools Version: 28.0.2\r\n> \r\n> Java SDK: /Users/flash/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\n> openjdk version \"1.8.0-9\"\r\n> OpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\n> OpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n> \r\n> Android Designer EPL code available here:\r\n> https://github.com/xamarin/AndroidDesigner.EPL\r\n> \r\n> === Xamarin Inspector ===\r\n> \r\n> Version: 1.4.3\r\n> Hash: db27525\r\n> Branch: 1.4-release\r\n> Build date: Mon, 09 Jul 2018 21:20:18 GMT\r\n> Client compatibility: 1\r\n> \r\n> === Build Information ===\r\n> \r\n> Release ID: 706060017\r\n> Git revision: 822323b5f6295b271d4c9bfaca4129f90ec41f38\r\n> Build date: 2018-09-18 20:19:40+00\r\n> Build branch: release-7.6-xcode10\r\n> Xamarin extensions: a83eb4b7ad9174ac2e705f2c4257ecd15688ba97\r\n> \r\n> === Operating System ===\r\n> \r\n> Mac OS X 10.13.6\r\n> Darwin 17.7.0 Darwin Kernel Version 17.7.0\r\n>     Thu Jun 21 22:53:14 PDT 2018\r\n>     root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n> \r\n> === Enabled user installed extensions ===\r\n> \r\n> Internet of Things (IoT) development (Preview) 7.5\r\n\r\n### Log File\r\nR.txt files: One for when the local resources win and the other for when the external dependencies win.\r\n[rtxtFiles.zip](https://github.com/xamarin/xamarin-android/files/2402992/rtxtFiles.zip)"},{"Id":"8296607108","Type":"PullRequestEvent","CreatedAt":"2018-09-20T15:52:31","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2199","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] deletebinobj fix for resources\" (#2199) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2193\r\n\r\nI have been able to reproduce a #deletebinobj bug with the following\r\nsteps:\r\n1. `File | New Project | Android App (Xamarin) | Tabbed App`, set\r\n   `Minimum Android Version` to `Android 5.0 (Lollipop)`\r\n2. Build\r\n3. Add a new `TextView` to `Resources\\layout\\activity_main.axml`, with\r\n   an id of `textView1`\r\n4. Build and Deploy\r\n\r\nGet a crash at runtime:\r\n\r\n    Android.Views.InflateException: Binary XML file line #1: Error inflating class android.support.design.widget.BottomNavigationView occurred\r\n\r\nA `Rebuild` fixes the problem, and the app starts correctly again.\r\n\r\nAfter comparing `obj` directories from before and after, I noticed\r\n`obj\\Debug\\android\\src\\android\\support\\compat\\R.java` was missing the\r\nfield for `R.id.textView1`!\r\n\r\n    public static int textView1=0x7f080091;\r\n\r\nThis doesn't match the error message we are getting here at all... But\r\nthis file is updated by the `_GenerateJavaDesignerForComponent`\r\nMSBuild target. Further research showed that this target was getting\r\nskipped at step no. 4 above, because it was found to be up to date\r\naccording to its inputs and outputs.\r\n\r\nTo verify this was the case, I could delete\r\n`obj\\Debug\\Component.R.cs.flag` which would also resolve the runtime\r\nexception (instead of a full `Rebuild`).\r\n\r\nFirst, I created a new test:\r\n- `CustomViewAddResourceId` builds a project with\r\n  `<android.support.design.widget.BottomNavigationView />`\r\n- Adds a `textView1` layout, builds again\r\n- Verifies that `obj\\Debug\\android\\src\\android\\support\\compat\\R.java`\r\n  contains `textView1`\r\n\r\nTo fix the problem, I did the following:\r\n- Added `$(_AndroidResgenFlagFile)` as an input to\r\n  `_GenerateJavaDesignerForComponent`, so it will run again when\r\n  `_UpdateAndroidResgen` runs\r\n- Removed\r\n  `AndroidComponentResgenFlagFile=\"$(_AndroidComponentResgenFlagFile)\"`\r\n  from the call to the `<Aapt />` MSBuild task, so it will re-run\r\n  `aapt` and generate `R.java`.\r\n\r\nHowever, things were breaking when `$(AndroidUseAapt2)` was\r\nenabled.\r\n\r\nFor `aapt2` support I had to:\r\n- Remove `AndroidComponentResgenFlagFile` from the `<Aapt2Link />`\r\n  call\r\n- Set an extra property that the other `<Aapt2Link />` calls are\r\n  already doing:\r\n  `CompiledResourceFlatArchive=\"$(IntermediateOutputPath)\\compiled.flata\"`"},{"Id":"8296607078","Type":"IssuesEvent","CreatedAt":"2018-09-20T15:52:30","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2193","RelatedDescription":"Closed issue \"DeleteBinObj bug with AndroidResource\" (#2193) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. `File | New Project | Android App (Xamarin) | Tabbed App`, set `Minimum Android Version` to `Android 5.0 (Lollipop)`\r\n2. Build\r\n3. Open `Resource\\layout\\activity_main.axml` (I used the ancient VS XML editor instead of the designer, to remove that from the equation)\r\n4. Add a new `TextView`\r\n5. Run via F5 or the Play button\r\n\r\nA crash at runtime is encountered:\r\n```\r\nUnhandled Exception:\r\n\r\nAndroid.Views.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class android.support.design.widget.BottomNavigationView occurred\r\n```\r\n\r\nOn this line:\r\n```csharp\r\nSetContentView (Resource.Layout.activity_main);\r\n```\r\nMy `TextView` source is basically the default if dragged from the toolbox in the designer:\r\n```xml\r\n  <TextView\r\n      android:text=\"Text\"\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"wrap_content\"\r\n      android:minWidth=\"25px\"\r\n      android:minHeight=\"25px\"\r\n      android:id=\"@+id/textView1\" />\r\n```\r\n\r\nOnce in this state, a `Rebuild` fixes the problem. You can deploy again to see the issue resolved.\r\n\r\n### Expected Behavior\r\n\r\nModifying a layout should not cause a runtime exception!\r\n\r\n### Actual Behavior\r\n\r\nModifying a layout causes runtime exception! `Rebuild` resolves the issue...\r\n\r\n### Version Information\r\n\r\nI have been able to repro this on VS 2017 15.8.4, and the build of Xamarin.Android we will be shipping with 15.9 P3.\r\n\r\n### Log File\r\n\r\nRelevant logs: [DeleteBinObj.zip](https://github.com/xamarin/xamarin-android/files/2394164/DeleteBinObj.zip)\n\n> VS bug [#686581](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/686581)"},{"Id":"8296176642","Type":"PullRequestEvent","CreatedAt":"2018-09-20T14:49:52","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2201","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix for readonly files on MacOS\" (#2201) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2198\r\n\r\nIn 970da9efb, I fixed various issues with incremental builds.\r\n\r\nBut one scenario has a regression on MacOS:\r\n- Add the `Xamarin.Android.Wear` NuGet to a new project\r\n- Build\r\n\r\nEncounter an error such as:\r\n\r\n    error MSB4018: The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\n    error MSB4018: System.UnauthorizedAccessException: Access to the path \"/Users/peter/Projects/TestWearab/TestWearab/obj/Debug/lp/15/jl/proguard.txt\" is denied.\r\n    error MSB4018:   at System.IO.File.SetLastWriteTime (System.String path, System.DateTime lastWriteTime) [0x0002b] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:488\r\n    error MSB4018:   at System.IO.File.SetLastWriteTimeUtc (System.String path, System.DateTime lastWriteTimeUtc) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:493\r\n    error MSB4018:   at Xamarin.Android.Tools.Files.ExtractAll (Xamarin.Tools.Zip.ZipArchive zip, System.String destination, System.Action`2[T1,T2] progressCallback, System.Func`2[T,TResult] modifyCallback, System.Func`2[T,TResult] deleteCallback, System.Boolean forceUpdate) [0x00152] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0\r\n    error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract (Java.Interop.Tools.Cecil.DirectoryAssemblyResolver res, System.Collections.Generic.ICollection`1[T] jars, System.Collections.Generic.ICollection`1[T] resolvedResourceDirectories, System.Collections.Generic.ICollection`1[T] resolvedAssetDirectories, System.Collections.Generic.ICollection`1[T] resolvedEnvironments) [0x00528] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0\r\n    error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute () [0x000fc] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0\r\n\r\nI could resolve the issue with at the cmd line such as:\r\n\r\n    chmod 770 obj/Debug/lp/15/jl/proguard.txt\r\n\r\nWhat is likely happening is that files in\r\n`__AndroidLibraryProjects__.zip` are marked readonly, and so they are\r\ngetting extracted that way.\r\n\r\nThen this code is failing on MacOS with readonly files:\r\n\r\n    var utcNow = DateTime.UtcNow;\r\n    File.SetLastWriteTimeUtc (outfile, utcNow);\r\n    File.SetLastAccessTimeUtc (outfile, utcNow);\r\n\r\nAdding a call to make the file writeable solves the issue:\r\n\r\n    MonoAndroidHelper.SetWriteable (outfile);"},{"Id":"8296176612","Type":"IssuesEvent","CreatedAt":"2018-09-20T14:49:51","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2198","RelatedDescription":"Closed issue \"ResolveLibraryProjectImports fails due to file permission issue when building a project with Xamarin.Android.Wear NuGet reference on macOS\" (#2198) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Android template in VSMac.\r\n2. Add a reference to the Xamarin.Android.Wear NuGet (version 2.2.0).\r\n3. Build the project.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nXA projects with reference Xamarin.Android.Wear compile successfully on macOS.\r\n\r\n### Actual Behavior\r\nA `System.UnauthorizedAccessException` is thrown during `ResolveLibraryProjectImports` when building on macOS, however the same error does not occur on Windows. This appears to be a regression between 15.9 Preview 2 and 15.9 Preview 3 RCs.\r\n\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018: The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018: System.UnauthorizedAccessException: Access to the path \"/Users/peter/Projects/TestWearab/TestWearab/obj/Debug/lp/15/jl/proguard.txt\" is denied.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at System.IO.File.SetLastWriteTime (System.String path, System.DateTime lastWriteTime) [0x0002b] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:488 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at System.IO.File.SetLastWriteTimeUtc (System.String path, System.DateTime lastWriteTimeUtc) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:493 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at Xamarin.Android.Tools.Files.ExtractAll (Xamarin.Tools.Zip.ZipArchive zip, System.String destination, System.Action`2[T1,T2] progressCallback, System.Func`2[T,TResult] modifyCallback, System.Func`2[T,TResult] deleteCallback, System.Boolean forceUpdate) [0x00152] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract (Java.Interop.Tools.Cecil.DirectoryAssemblyResolver res, System.Collections.Generic.ICollection`1[T] jars, System.Collections.Generic.ICollection`1[T] resolvedResourceDirectories, System.Collections.Generic.ICollection`1[T] resolvedAssetDirectories, System.Collections.Generic.ICollection`1[T] resolvedEnvironments) [0x00528] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1314,2): error MSB4018:   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute () [0x000fc] in <97b2eb9ff07947edbf0f4e47cfa2efbf>:0 \r\n```\r\n\r\n### Version Information\r\nXA 9.1.0.29\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/14f88095057f1ba84b4ffa5a603f1192\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8296058294","Type":"PullRequestEvent","CreatedAt":"2018-09-20T14:33:15","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2204","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] restore behavior for custom $(AndroidSdkDirectory)\" (#2204) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2200\r\n\r\nIn 93ddf96f, I split up the `ResolveSdks` MSBuild task.\r\n\r\nIn doing that I broke a situation:\r\n- `msbuild /p:AndroidUseLatestPlatformSdk=true /p:AndroidSdkDirectory=\"C:\\DoesNotExist\" MyApp.csproj`\r\n- This works in 15.8 stable, but not 15.9 or master where 93ddf96f is\r\n  applied\r\n\r\nThe error message is also rather unpleasant, due to an unhandled\r\nexception:\r\n\r\n    (_SetLatestTargetFrameworkVersion target) ->\r\n        error MSB4018: The \"ResolveAndroidTooling\" task failed unexpectedly.\r\n        error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\DoesNotExist\\platforms'.\r\n\r\nThe cause, is how `$(AndroidSdkDirectory)` is handled as an output:\r\n\r\n    <Output TaskParameter=\"AndroidSdkPath\" PropertyName=\"AndroidSdkDirectory\" Condition=\"'$(AndroidSdkDirectory)' == ''\" />\r\n\r\nWe don't want to overwrite the property the user passed in, but then\r\nwe shouldn't *also* use it here:\r\n\r\n    <ResolveAndroidTooling\r\n        ...\r\n        AndroidSdkPath=\"$(AndroidSdkDirectory)\"\r\n        ...\r\n    />\r\n\r\nSo the fix here is:\r\n- Don't pass in `AndroidSdkPath` or `AndroidNdkPath` to\r\n  `ResolveAndroidTooling`\r\n- Use `MonoAndroidHelper.AndroidSdk.AndroidSdkPath` which is still\r\n  configured by the slimmed down `ResolveSdks` MSBuild task\r\n\r\nOverall I like this change anyway, because we are removing properties\r\nfrom `ResolveAndroidTooling`."},{"Id":"8294757481","Type":"IssuesEvent","CreatedAt":"2018-09-20T10:49:41","Actor":"gamesguru","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1272","RelatedDescription":"Closed issue \"Ubuntu: projects fail to build with msbuild\" (#1272) at xamarin/xamarin-android","RelatedBody":"### The Problem\r\n\r\nWith some work I got everything to build on Ubuntu, had to put the android tools/dnk inside the repo.\r\n\r\nNot exactly sure how to use this, but with msbuild I get the same Mono.Android not found error, with 29000 other errors about missing assemblies.\r\nUsing the xabuild in the scripts folder produces a different error.  This is sort of a \"big\" project, but what's going on?  Seems like a simple fix to someone who knows what they're doing... v7.1 is not supported??\r\n\r\n> Build FAILED.\r\n> \r\n> Warnings:\r\n> \r\n> /media/shane/RaptorWS/etc/git_clones/onecontrol/OneControl.Android/OneControl.Android.csproj (SignAndroidPackage) ->\r\n> \r\n> \t/media/shane/RaptorWS/etc/git_clones/onecontrol/OneControl.Android/OneControl.Android.csproj:  warning : Target '_GetRestoreTargetFrameworksOutput', not found in the project\r\n> \t/media/shane/RaptorWS/etc/git_clones/onecontrol/OneControl.Android/OneControl.Android.csproj:  warning : Target 'IncrementalClean', not found in the project\r\n> \r\n> Errors:\r\n> \r\n> /media/shane/RaptorWS/etc/git_clones/onecontrol/OneControl.Android/OneControl.Android.csproj (SignAndroidPackage) ->\r\n> /media/shane/RaptorWS/etc/git_clones/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets (_SetLatestTargetFrameworkVersion target) ->\r\n> \r\n> \t/media/shane/RaptorWS/etc/git_clones/onecontrol/OneControl.Android/OneControl.Android.csproj: error XA0001: Unsupported or invalid $(TargetFrameworkVersion) value of 'v7.1'. Please update your Project Options.\r\n> \r\n> \t 2 Warning(s)\r\n> \t 1 Error(s)"},{"Id":"8294194012","Type":"IssuesEvent","CreatedAt":"2018-09-20T09:10:29","Actor":"SDV-MINI-DEV-2","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2203","RelatedDescription":"Opened issue \"Editing axml with \"Highlight Containers\" in Xamarin.Android project breaks designer\" (#2203) at xamarin/xamarin-android","RelatedBody":"Every time I edit my axml by typing in the axml when the option \"Highlight Containers\" is on (this option highlights the view borders), the designer throws an \"Object reference not set to an instance of an object\" exception. \r\nAlso when I drag a widget when the option \"Highlight Containers\" is on I've found this exception. \r\n\r\nThe designer is now broken and I can't work, because working without Highlight Containers option is very very annoying. \r\n### Steps to Reproduce\r\n\r\n1. File -> New Project -> Android Blank App\r\n2.  Resource --> layout --> Activity_main.axml \r\n3.  Highlight Containers --> Drag a textview or a random widget/Typing in axml --> Error\r\n\r\n### Log File\r\n\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Xamarin.AndroidDesigner.LayoutInfo.GetElementXml(XmlWriter writer, AndroidXmlItem elem, LayoutXmlTarget xmlTarget, Dictionary`2 acwMap, Dictionary`2 userNamespaces) in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\LayoutInfo.cs:line 912\r\n   at Xamarin.AndroidDesigner.LayoutInfo.GetElementXml(XmlWriter writer, AndroidXmlItem elem, LayoutXmlTarget xmlTarget, Dictionary`2 acwMap, Dictionary`2 userNamespaces) in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\LayoutInfo.cs:line 960\r\n   at Xamarin.AndroidDesigner.LayoutInfo.GetElementXml(XmlWriter writer, AndroidXmlItem elem, LayoutXmlTarget xmlTarget, Dictionary`2 acwMap, Dictionary`2 userNamespaces) in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\LayoutInfo.cs:line 960\r\n   at Xamarin.AndroidDesigner.LayoutInfo.GetElementXml(XmlWriter writer, AndroidXmlItem elem, LayoutXmlTarget xmlTarget, Dictionary`2 acwMap, Dictionary`2 userNamespaces) in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\LayoutInfo.cs:line 960\r\n   at Xamarin.AndroidDesigner.LayoutInfo.GetRenderXml(AndroidXmlItem root, LayoutXmlTarget xmlTarget, Dictionary`2 acwMap) in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\LayoutInfo.cs:line 898\r\n   at Xamarin.AndroidDesigner.LayoutInfo.GetLayoutXml(LayoutXmlTarget xmlTarget, Dictionary`2 acwMap) in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\LayoutInfo.cs:line 881\r\n   at Xamarin.AndroidDesigner.AndroidRenderSession.<InflateAsync>d__110.MoveNext() in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\AndroidRenderSession.cs:line 745\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Xamarin.AndroidDesigner.AndroidRenderSession.<DoRefreshAsync>d__106.MoveNext() in E:\\A\\_work\\122\\s\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner\\Xamarin.AndroidDesigner\\AndroidRenderSession.cs:line 597\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8293768202","Type":"IssuesEvent","CreatedAt":"2018-09-20T07:52:18","Actor":"mbikovitsky","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2202","RelatedDescription":"Opened issue \"Android DocumentsProvider intent filter\" (#2202) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nThis is the same issue as [here](https://forums.xamarin.com/discussion/96028/android-documentsprovider-intent-filter): `IntentFilterAttribute` is ignored on classes decorated with `ContentProviderAttribute`. The current workaround is to use `RegisterAttribute` on the `DocumentsProvider` subclass, which, as the documentation [clearly states](https://developer.xamarin.com/api/type/Android.Runtime.RegisterAttribute/), is an ugly hack.\r\n\r\n### Expected Behavior\r\n\r\nThe `intent-filter` element is generated in the `AndroidManifest.xml`.\r\n\r\n### Actual Behavior\r\n\r\nThe `intent-filter` element is _not_ generated in the `AndroidManifest.xml`.\r\n\r\n### Version Information\r\n\r\n```\r\nXamarin   4.11.0.756 (d15-8@b66ff7180)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n```"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8299769633","Type":"IssuesEvent","CreatedAt":"2018-09-21T05:05:31","Actor":"PavithraSyncfusion","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3858","RelatedDescription":"Opened issue \"System Access Violation Exception is thrown in Forms.UWP while using ListView\" (#3858) at xamarin/Xamarin.Forms","RelatedBody":"Hi Team,\r\n\r\nWe at Syncfusion develop data visualization controls for Xamarin and we have more than 90 controls spread across all platforms of Xamarin. Please refer the below link for a description about us.\r\n\r\nUserGuide: https://help.syncfusion.com/xamarin/sfdatagrid/overview\r\nFeatureTour: https://www.syncfusion.com/products/xamarin\r\n\r\nThis is to bring to your notice an exception when trying to show the Xamarin.Forms.ListView inside a template of the Syncfusion's SfPopupLayout.\r\n\r\nThe SfPopupLayout control can host any view inside it and display the view as a Popup. This is achieved by setting the desired view as a DataTemplate.\r\nFor more information refer the below link : \r\n\r\nAlso SfPopupLayout is a control that is mapped from native projects of each platforms.\r\nXForms.Android is mapped from Xamarin.Android , Xamarin.Forms.iOS from Xamarin.iOS and Xamarin.Forms.UWP from native UWP.\r\n\r\nHence we will get the data template from the user and convert this Forms view to the necessary native view based on the platform and then set this converted view as the child of the Native UWP popup.\r\n\r\nSo each time a popup is opened this conversion happens and the popup is shown.\r\nYou can see the conversion codes below.\r\n\r\n`internal static FrameworkElement ConvertFormsToNativeView(Xamarin.Forms.View view, formsNamespace.SfPopupLayout formsPopupLayout, int width, int height)\r\n{\r\n    FrameworkElement native = null;\r\n    var templateLayout = view as Xamarin.Forms.View;\r\n    templateLayout.Parent = formsPopupLayout;\r\n    var renderer = ConvertToNative(templateLayout, formsPopupLayout);\r\n    native = renderer as FrameworkElement;\r\n    var size = templateLayout.Measure(width, height);\r\n    templateLayout.Layout(new Xamarin.Forms.Rectangle(0, 0, width, height));\r\n    return native;\r\n}\r\n\r\ninternal static IVisualElementRenderer ConvertToNative(Xamarin.Forms.View source, formsNamespace.SfPopupLayout formsPopupLayout)\r\n{\r\n    if (source == null)\r\n    {\r\n        return null;\r\n    }\r\n    IVisualElementRenderer renderer = source.GetOrCreateRenderer();\r\n    var properties = typeof(Xamarin.Forms.VisualElement).GetRuntimeProperties();\r\n    foreach (var item in properties)\r\n    {\r\n        if (item.Name == \"IsPlatformEnabled\")\r\n        {\r\n            item.SetValue(source, true);\r\n        }\r\n    }\r\n    properties = typeof(Element).GetRuntimeProperties();\r\n    foreach (var item in properties)\r\n    {\r\n        if (item.Name == \"Platform\")\r\n        {\r\n            if (formsPopupLayout.Content == null)\r\n            {\r\n                item.SetValue(source, item.GetValue(formsPopupLayout.GetMainPage()));\r\n            }\r\n            else\r\n            {\r\n                item.SetValue(source, item.GetValue(formsPopupLayout));\r\n            }\r\n        }\r\n    }\r\n    return renderer;\r\n}`\r\n\r\nIn the below example that we have attached we have loaded a Xamarin.Forms.ListView inside the SfPopupLayout. Here we create a single instance of the ListView and pass this instance (template) to the conversion codes each time the popup is opened via a button click.\r\n\r\nThe popup opens and closes fine for the first time. Clicking on the same button again crashes the application with the below excpetion.\r\n\r\n**Stack trace:**\r\n\r\n [Managed to Native Transition]       Xamarin.Forms.Platform.UAP.dll!Xamarin.Forms.Platform.UWP.VisualElementRenderer<Xamarin.Forms.ListView, Windows.UI.Xaml.FrameworkElement>.ArrangeOverride(Windows.Foundation.Size finalSize)    Unknown\r\n     [Native to Managed Transition]   \r\n     [Managed to Native Transition]   \r\n     Xamarin.Forms.Platform.UAP.dll!Xamarin.Forms.Platform.UWP.VisualElementRenderer<Xamarin.Forms.Layout, Windows.UI.Xaml.FrameworkElement>.ArrangeOverride(Windows.Foundation.Size finalSize)    Unknown\r\n     [Native to Managed Transition]   \r\n     [Managed to Native Transition]   \r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.PopupView.ArrangeOverride(Windows.Foundation.Size finalSize)    Unknown\r\n     [Native to Managed Transition]   \r\n     [Managed to Native Transition]   \r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.VisualContainer.ArrangeOverride(Windows.Foundation.Size finalSize)    Unknown\r\n     [Native to Managed Transition]   \r\n     [Managed to Native Transition]   \r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.PopupView.UpdatePopupView()    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.SfPopupLayout.DisplayPopup()    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.SfPopupLayout.IsOpen.set(bool value)    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.RendererHelper.MapSfPopupLayoutProperties(string propertyName, Syncfusion.XForms.PopupLayout.SfPopupLayout formsPopupLayout, Syncfusion.XForms.UWP.PopupLayout.SfPopupLayout nativePopupLayout)    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.SfPopupRenderer.OnElementPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)    Unknown\r\n     Xamarin.Forms.Core.dll!Xamarin.Forms.BindableObject.OnPropertyChanged(string propertyName)    Unknown\r\n     Xamarin.Forms.Core.dll!Xamarin.Forms.Element.OnPropertyChanged(string propertyName)    Unknown\r\n     Xamarin.Forms.Core.dll!Xamarin.Forms.BindableObject.SetValueActual(Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject.BindablePropertyContext context, object value, bool currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, bool silent)    Unknown\r\n     Xamarin.Forms.Core.dll!Xamarin.Forms.BindableObject.SetValueCore(Xamarin.Forms.BindableProperty property, object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject.SetValuePrivateFlags privateAttributes)    Unknown\r\n     Xamarin.Forms.Core.dll!Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty property, object value, bool fromStyle, bool checkAccess)    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.SfPopupLayout.OpenOrClosePopup(bool open)    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.SfPopupLayout.Show()    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.UWP.dll!Syncfusion.XForms.UWP.PopupLayout.PopupLayoutDependencyService.Show(object nativeObject, Syncfusion.XForms.PopupLayout.SfPopupLayout formsPopup)    Unknown\r\n     Syncfusion.SfPopupLayout.XForms.dll!Syncfusion.XForms.PopupLayout.SfPopupLayout.Show()    Unknown\r\n>    FrameWorkIssue.dll!FrameWorkIssue.MainPage.ClickToShowPopup_Clicked(object sender, System.EventArgs e) Line 26    C#\r\n     Xamarin.Forms.Core.dll!Xamarin.Forms.Button.SendClicked()    Unknown\r\n     Xamarin.Forms.Platform.UAP.dll!Xamarin.Forms.Platform.UWP.ButtonRenderer.OnButtonClick(object sender, Windows.UI.Xaml.RoutedEventArgs e)    Unknown \r\n\r\nThis issue however does not happen if we create a new instance of the list view each time. Having the same instance and trying to open the same only causes the issue. If we are not wrong, we understand that this issue is caused due to accessing a disposed object. But however we have not disposed the list view anywhere in our sample.\r\n\r\n**Steps to Reproduce:**\r\n\r\n1. Run the attached sample.\r\n2. Click on \"Click to show popup\" button.\r\n3. Tap on \"Accept\" button in Popup.\r\n4. Then again click on \"\"Click to show popup\" button.\r\n5. Note that \"System.AccessViolation\" exception has been thrown.\r\n\r\n**Expected Behavior:**\r\nPopup must be open for second time.\r\n\r\n**Actual Behavior:**\r\n\"System.AccessViolation\" exception has been thrown.\r\n\r\n**Basic Information:**\r\nXamarin. Forms version: 2.4.0.280\r\nUWP Target version: Windows 10 Anniversary Edition (10.0;Build 14393)\r\nUWP Min version: Windows 10 (10.0;Build 10586)\r\n\r\n**Reproduction Sample link:**\r\n[ListViewWithPopup.zip](https://github.com/xamarin/Xamarin.Forms/files/2404005/ListViewWithPopup.zip)\r\n\r\nThanks,\r\nPavithra S\r\n"},{"Id":"8299413311","Type":"PullRequestEvent","CreatedAt":"2018-09-21T02:45:21","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3793","RelatedDescription":"Closed pull request \"Fixes failed activation of ListViewAdapter when using nested ListViews and DataTemplateSelector\" (#3793) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThere is precedent in Xamarin.Forms for allowing Android to temporarily \"resurrect\" an object in C# simply to call it's dispose methods. While I'm not entirely sure why this happens, its seems innocuous if all that happens is invocation of the dispose function which then does nothing. \r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3603\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAs described in resolved issue.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8299329896","Type":"IssuesEvent","CreatedAt":"2018-09-21T02:15:07","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3825","RelatedDescription":"Closed issue \"AnchorX / AnchorY cause layout issues on rotation\" (#3825) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nUsing `AnchorX` or `AnchorY` properties makes layout fail after rotation.\r\n\r\n### Steps to Reproduce\r\n\r\nSee enclosed repro project.\r\n\r\n1. Start project.\r\n2. Rotate the simulator / device.\r\n3. Observe purple frame is misplaced.\r\n4. Remove `AnchorX` and `AnchorY` properties from `Frame`.\r\n5. Rotate the simulator / device.\r\n6. Observe purple frame is laid out correctly.\r\n\r\n### Expected Behavior\r\nPurple frame should stay in the right relationship to the rest of the layout.\r\n\r\n### Actual Behavior\r\nPurple frame is placed incorrectly in the layout.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.839982\r\n- Last known good version: No idea!\r\n- IDE: N/A\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11\r\n  - Android: 8.1 \r\n  - UWP:  N/A\r\n- Android Support Library Version: N/A\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n**Incorrect behaviour:**\r\n![simulator screen shot - iphone x - 2018-09-19 at 17 10 00](https://user-images.githubusercontent.com/10096185/45736672-faf9ea00-bc2e-11e8-8986-79bd2ae93525.png)\r\n![simulator screen shot - iphone x - 2018-09-19 at 17 10 06](https://user-images.githubusercontent.com/10096185/45736673-faf9ea00-bc2e-11e8-8a0c-7bcccb27cfc4.png)\r\n![simulator screen shot - iphone x - 2018-09-19 at 17 10 10](https://user-images.githubusercontent.com/10096185/45736674-faf9ea00-bc2e-11e8-8e90-99e9d0a10b03.png)\r\n\r\n**Correct behaviour:**\r\n![simulator screen shot - iphone x - 2018-09-19 at 16 59 31](https://user-images.githubusercontent.com/10096185/45736234-b02ba280-bc2d-11e8-8a74-5f2a27bc166f.png)\r\n![simulator screen shot - iphone x - 2018-09-19 at 16 59 38](https://user-images.githubusercontent.com/10096185/45736235-b02ba280-bc2d-11e8-990e-2f3c6295af9f.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[Test20180919.zip](https://github.com/xamarin/Xamarin.Forms/files/2395764/Test20180919.zip)\r\n\r\n"},{"Id":"8299307057","Type":"IssuesEvent","CreatedAt":"2018-09-21T02:06:57","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3857","RelatedDescription":"Opened issue \"[Android] Label underline doesn't work in 3.3.0-pre1\" (#3857) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nUnderline works in iOS but **not** Android.\r\n\r\n```\r\n<Label Text=\"Label/Span Underline and Strikethrough\" TextDecorations=\"Underline\"  class=\"featureHeader\" Margin=\"0,0,0,10\"/>\r\n```\r\n\r\n### Screenshots\r\n\r\n<img width=\"927\" alt=\"screenshot 2018-09-20 21 02 45\" src=\"https://user-images.githubusercontent.com/41873/45856180-12ad9d00-bd19-11e8-8389-31b56545c513.png\">\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/blob/3.3.0-pre/TheLittleThingsPlayground/Views/ThreeThreePage.xaml\r\n"},{"Id":"8299303347","Type":"IssuesEvent","CreatedAt":"2018-09-21T02:05:37","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3856","RelatedDescription":"Opened issue \"[Android] MaxLines on Label not working with 3.3.0-pre1\" (#3856) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nAdded MaxLines to Label and it's not working for Android. iOS is ok.\r\n\r\n```\r\n<Label MaxLines=\"4\" LineBreakMode=\"TailTruncation\" Text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam mattis quam non enim pellentesque, ut placerat purus finibus. Nulla quis tincidunt ante. Ut mauris lectus, aliquam a sagittis vitae, consequat eget elit. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque convallis nunc nisi, a imperdiet elit efficitur et. Duis in lectus mollis, interdum ipsum et, tincidunt orci. Fusce ipsum metus, imperdiet non lacus vitae, facilisis feugiat magna. Nulla volutpat nisl tortor, a consectetur felis consectetur non. Curabitur in enim vulputate sem volutpat bibendum id nec lorem. Mauris laoreet lacus ac volutpat tempus.\"/>\r\n```\r\n\r\n### Screenshots\r\n\r\n<img width=\"927\" alt=\"screenshot 2018-09-20 21 02 45\" src=\"https://user-images.githubusercontent.com/41873/45856124-d9752d00-bd18-11e8-9845-3b750e2e5822.png\">\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/blob/3.3.0-pre/TheLittleThingsPlayground/Views/ThreeThreePage.xaml\r\n"},{"Id":"8299274239","Type":"IssuesEvent","CreatedAt":"2018-09-21T01:54:58","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3803","RelatedDescription":"Closed issue \"PullToRefresh App freeze in the Xamarin.forms 3.2.0.729530-pre2 version \" (#3803) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### PullToRefresh App freeze in the Xamarin.forms 3.2.0.729530-pre2 version which is working fine with Xamarin.forms version to 3.1.0.697729. So, it was the break in the latest pre- release version of the X.forms.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample.\r\n2. Try to pull down\r\n3. Continuously try the step 2 and you could find the app begin to freeze.\r\n\r\n### Expected Behavior\r\nThe App should not freeze even if we pull down continuously.\r\n### Actual Behavior\r\nThe App is freezing if we pull down continuously.\r\n### Basic Information\r\nApp freeze in the Xamarin.forms 3.2.0.729530-pre2 version which is working fine with Xamarin.forms version to 3.1.0.697729. I have attached the both the samples in the reproducible section.\r\n- Version with issue: 3.2.0.729530-pre2 \r\n- IDE: Visual studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\\\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.0 --> \\\\\r\n\r\n\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[Sample(3.2.0.729530-pre2 ).zip](https://github.com/xamarin/Xamarin.Forms/files/2388186/Sample.3.2.0.729530-pre2.zip)\r\n[Sample(3.1.0.697729).zip](https://github.com/xamarin/Xamarin.Forms/files/2388189/Sample.3.1.0.697729.zip)"},{"Id":"8298705485","Type":"IssuesEvent","CreatedAt":"2018-09-20T22:37:03","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3850","RelatedDescription":"Closed issue \"using TabbedPage SetTabIcon found a bug?\" (#3850) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n on android and set     On<Android>().SetToolbarPlacement(ToolbarPlacement.Bottom); \r\n and Render  TabbedPageRenderer class   SetTabIcon function not use\r\n\r\nand find source code :\r\n\r\n\r\n protected override void OnPropertyChanged(object sender, PropertyChangedEventArgs e)\r\n        {\r\n          \r\n             if (e.PropertyName == Page.IconProperty.PropertyName)\r\n            {\r\n                var page = (Page)sender;\r\n                var index = Element.Children.IndexOf(page);\r\n                FileImageSource icon = page.Icon;\r\n\r\n                if (IsBottomTabPlacement)\r\n                {\r\n                    var menuItem = _bottomNavigationView.Menu.GetItem(index);\r\n                    menuItem.SetIcon(GetIconDrawable(icon));\r\n                }\r\n                else\r\n                {\r\n                    TabLayout.Tab tab = _tabLayout.GetTabAt(index);\r\n                    SetTabIcon(tab, icon);\r\n                }\r\n            }\r\n        }\r\n \r\n\r\n-----------------------------\r\n\r\n   if (IsBottomTabPlacement)\r\n                {\r\n                    var menuItem = _bottomNavigationView.Menu.GetItem(index);\r\n                    menuItem.SetIcon(GetIconDrawable(icon));\r\n\r\nso if IsBottomTabPlacemen ==true ,is BottomNavigationView not tablayout not trig SetTabIcon function\r\n\r\nis bug?\r\n\r\n\r\n\r\n"},{"Id":"8298424949","Type":"IssuesEvent","CreatedAt":"2018-09-20T21:27:34","Actor":"LeoJHarris","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3855","RelatedDescription":"Opened issue \"TabbedPage OnAppearing not called when navigated to page first time - android\" (#3855) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen using tabbed page, the OnAppearing method is not always called. When I launch my app all the OnAppearing methods get called for the first time - fine. However when I navigate to another tabbed page the OnAppearing does not get called. Only when I navigate away and back to the tabbed page does the OnAppearing get called. I would expect the OnAppearing to be called anytime the page is appearing. But perhaps this is the default behavior? I know that all pages OnAppearing get called the first round but as its called OnAppearing should it be called at all times navigating to a  given tabbedpage?\r\n\r\n### Steps to Reproduce\r\n\r\n1. Launch app with two Tabbed Pages with the app landing on the first tabbed page.\r\n2. Navigate to 2nd tabbedpage first time - check OnAppearing method being called\r\n3. navigate back to first tabbed page and then back to 2nd tabbed page and OnAppearing method called\r\n\r\n### Expected Behavior\r\n\r\nThe 2nd tabbed page's OnAppearing method to be called upon first navigation to this page.\r\n\r\n### Actual Behavior\r\n\r\nThe 2nd tabbed page's OnAppearing method does not get called upon first navigation to this page.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: visual studio community 15.8.5 (windows)\r\n- Platform Target Frameworks:\r\n  - Android: 9.0 (P) \r\n\r\n### Reproduction Link\r\n\r\n[Sample.zip](https://github.com/xamarin/Xamarin.Forms/files/2403140/Sample.zip)\r\n"},{"Id":"8297716755","Type":"PullRequestEvent","CreatedAt":"2018-09-20T19:11:21","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3745","RelatedDescription":"Merged pull request \"Fix spaces to tabs indentation to match the coding style\" (#3745) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nReopening https://github.com/xamarin/Xamarin.Forms/pull/3743 since there is a way to fix indentation issues and still keep the history of changes using the --ignore-all-space switch in git:\r\ngit show --ignore-all-space\r\ngit log -p  --ignore-all-space Xamarin.Forms.Plaform.Gtk\r\ngit diff origin/master --ignore-all-space -- Xamarin.Forms.Plaform.Gtk\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8298073180","Type":"PullRequestEvent","CreatedAt":"2018-09-20T20:18:39","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4857","RelatedDescription":"Merged pull request \"[Make.config] Set IOS_PACKAGE_VERSION_REV\" (#4857) at xamarin/xamarin-macios","RelatedBody":"If this isn't set the `Constants.*.cs.in` files won't have the proper version values. E.g: '12.3.' instead of '12.3.0'."},{"Id":"8298071978","Type":"PullRequestEvent","CreatedAt":"2018-09-20T20:18:25","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4856","RelatedDescription":"Merged pull request \"[Make.config] Set IOS_PACKAGE_VERSION_REV\" (#4856) at xamarin/xamarin-macios","RelatedBody":"If this isn't set the `Constants.*.cs.in` files won't have the proper version values. E.g: '12.3.' instead of '12.3.0'."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackleâ€¦ https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":194,"FavoriteCount":103,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft isâ€¦ https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":93,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objecâ€¦ https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":44,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.â€¦ https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9â€¦ https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/â€¦ https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized byâ€¦ https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolutâ€¦ https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarinâ€¦ https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":87,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This yearâ€™s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learnâ€¦ https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes anâ€¦ https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;â€¦ https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this feâ€¦ https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-21T05:30:56.0268364Z","RunDurationInMilliseconds":4208}