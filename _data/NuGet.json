{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11122113351","Type":"IssuesEvent","CreatedAt":"2019-12-19T02:37:02","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7784","RelatedDescription":"Opened issue \"Feedback button should not appear if script is blocked\" (#7784) at NuGet/NuGetGallery","RelatedBody":"Browser extensions like uBlock Origin block some \"tracking\" scripts. This can effect the loading of the Usabilla JavaScript snippet. In such a case, the feedback button should not appear.\r\n\r\nToday, if the Usabilla script is blocked the button still appears (because we have a custom button) but does nothing when we click it. This is confusing."},{"Id":"11121628936","Type":"PullRequestEvent","CreatedAt":"2019-12-19T00:47:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7782","RelatedDescription":"Merged pull request \"Fix two package type related bugs\" (#7782) at NuGet/NuGetGallery","RelatedBody":"Clear previous package types during reflow: https://github.com/NuGet/NuGetGallery/issues/7780\r\nReject invalid package type names: https://github.com/NuGet/NuGetGallery/issues/7766"},{"Id":"11120954908","Type":"IssuesEvent","CreatedAt":"2019-12-18T22:31:58","Actor":"volanavlad","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7783","RelatedDescription":"Opened issue \"Tests fails due to incorrect types (converting DateTime to DateTimeOffset)\" (#7783) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nTests fails\r\nGitHubVulnerabilities2Db.Facts.AdvisoryIngestorFacts+TheIngestMethodFacts.IngestsAdvisory\r\nGitHubVulnerabilities2Db.Facts.AdvisoryIngestorFacts+TheIngestMethodFacts.IngestsAdvisoryWithoutVulnerability\r\n\r\n`Property public DateTimeOffset? WithdrawnAt { get; set; }\r\n`\r\nhas type DateTimeOffset\r\nwhile DateTime is used in test\r\n\r\n`WithdrawnAt = withdrawn ? new DateTime() : (DateTime?)null`\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Run tests for current dev branch commit \"a4bc48d7fae83f2b6c1e1d4fdd0698fa8c8c9c28\"\r\n2. See errors:\r\nGitHubVulnerabilities2Db.Facts.AdvisoryIngestorFacts+TheIngestMethodFacts.IngestsAdvisory(withdrawn: True, vulnerabilityHasFirstPatchedVersion: False)\r\n   Source: AdvisoryIngestorFacts.cs line 71\r\n   Duration: 1 ms\r\n\r\n  Message: \r\n    System.ArgumentOutOfRangeException : Время в формате UTC, представленное при применении смещения, должно находиться в диапазоне от 0 до 10 000 лет.\r\n    Имя параметра: offset\r\n  Stack Trace: \r\n    DateTimeOffset.ValidateDate(DateTime dateTime, TimeSpan offset)\r\n    DateTimeOffset.ctor(DateTime dateTime)\r\n    DateTimeOffset.op_Implicit(DateTime dateTime)\r\n    <IngestsAdvisory>d__2.MoveNext() line 82\r\n    --- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n    TaskAwaiter.ThrowForNonSuccess(Task task)\r\n    TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    <<InvokeTestMethodAsync>b__1>d.MoveNext() line 264\r\n    --- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n    TaskAwaiter.ThrowForNonSuccess(Task task)\r\n    TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    <AggregateAsync>d__4.MoveNext() line 48\r\n    --- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n    TaskAwaiter.ThrowForNonSuccess(Task task)\r\n    TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    <RunAsync>d__9.MoveNext() line 90\r\n\r\n\r\nGitHubVulnerabilities2Db.Facts.AdvisoryIngestorFacts+TheIngestMethodFacts.IngestsAdvisoryWithoutVulnerability(withdrawn: True)\r\n   Source: AdvisoryIngestorFacts.cs line 37\r\n   Duration: 2 ms\r\n\r\n  Message: \r\n    System.ArgumentOutOfRangeException : Время в формате UTC, представленное при применении смещения, должно находиться в диапазоне от 0 до 10 000 лет.\r\n    Имя параметра: offset\r\n  Stack Trace: \r\n    DateTimeOffset.ValidateDate(DateTime dateTime, TimeSpan offset)\r\n    DateTimeOffset.ctor(DateTime dateTime)\r\n    DateTimeOffset.op_Implicit(DateTime dateTime)\r\n    <IngestsAdvisoryWithoutVulnerability>d__1.MoveNext() line 40\r\n    --- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n    TaskAwaiter.ThrowForNonSuccess(Task task)\r\n    TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    <<InvokeTestMethodAsync>b__1>d.MoveNext() line 264\r\n    --- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n    TaskAwaiter.ThrowForNonSuccess(Task task)\r\n    TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    <AggregateAsync>d__4.MoveNext() line 48\r\n    --- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n    TaskAwaiter.ThrowForNonSuccess(Task task)\r\n    TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    <RunAsync>d__9.MoveNext() line 90\r\n\r\n\r\n### Expected behavior\r\nTests work OK\r\n\r\n"},{"Id":"11120945245","Type":"PullRequestEvent","CreatedAt":"2019-12-18T22:30:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7782","RelatedDescription":"Opened pull request \"Fix two package type related bugs\" (#7782) at NuGet/NuGetGallery","RelatedBody":"Clear previous package types during reflow: https://github.com/NuGet/NuGetGallery/issues/7780\r\nReject invalid package type names: https://github.com/NuGet/NuGetGallery/issues/7766"},{"Id":"11120126785","Type":"PullRequestEvent","CreatedAt":"2019-12-18T20:28:22","Actor":"Eilon","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7781","RelatedDescription":"Opened pull request \"Fix grammar in verify tool message\" (#7781) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11114831233","Type":"PullRequestEvent","CreatedAt":"2019-12-18T09:31:16","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7772","RelatedDescription":"Closed pull request \"WIP: Remove semver2 warning\" (#7772) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11112314524","Type":"IssuesEvent","CreatedAt":"2019-12-18T01:03:29","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7780","RelatedDescription":"Opened issue \"Reflowing packages with package types cause the records to be duplicated\" (#7780) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/94054/71047031-1af8b180-20ef-11ea-9a5a-150ddaffb3f1.png)\r\n\r\nThere should only be one."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11121640064","Type":"IssuesEvent","CreatedAt":"2019-12-19T00:49:56","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8891","RelatedDescription":"Closed issue \"Get onboarded on xplat signing work and help as needed\" (#8891) at NuGet/Home","RelatedBody":""},{"Id":"11121626104","Type":"IssuesEvent","CreatedAt":"2019-12-19T00:46:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8962","RelatedDescription":"Opened issue \" /p:BuildProjectReferences=false should imply RestoreRecursive=\"false\"\" (#8962) at NuGet/Home","RelatedBody":"Say you have a project structure as such: \r\n\r\nA -> B -> C -> D \r\n\r\nwhere all projects are package reference based projects.\r\n\r\nIf you run restore it will automatically restore for all packages A through D by default: https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets#L44\r\n\r\nBuild will also do the same thing. \r\n\r\nHowever, if you pass \r\n /p:BuildProjectReferences=false to a command like: \r\n\r\n> msbuild /restore /t:build  /p:BuildProjectReferences=false\r\n\r\nrestore will run for alll projects, but build will only be run for the top project. \r\n\r\nThe proposal is for restore to honor this property in addition to restore recursive. "},{"Id":"11121590194","Type":"IssuesEvent","CreatedAt":"2019-12-19T00:37:58","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8955","RelatedDescription":"Closed issue \"Bless NuGet.exe 5.4.0\" (#8955) at NuGet/Home","RelatedBody":"- [x] Change the link https://dist.nuget.org/win-x86-commandline/latest/nuget.exe to point to 5.4.0\r\n- [ ] Push packages to nuget.org"},{"Id":"11120940535","Type":"PullRequestEvent","CreatedAt":"2019-12-18T22:29:40","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/8961","RelatedDescription":"Opened pull request \"package recommender spec\" (#8961) at NuGet/Home","RelatedBody":""},{"Id":"11120409920","Type":"IssuesEvent","CreatedAt":"2019-12-18T21:08:50","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8954","RelatedDescription":"Closed issue \"Could not resolve type with token 0100024c on Ubuntu 18.04 with NuGet 5.31 and newer\" (#8954) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.3.1, 5.4.0, 5.5.0-preview1\r\n\r\nOS version: Ubuntu 18.04.2 LTS (ran through Windows Subsystem for Linux, in my case)\r\n\r\nWorked before? If so, with which NuGet version: 5.2.0\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. sudo apt install mono-devel\r\n1. wget https://dist.nuget.org/win-x86-commandline/v5.5.0-preview1/nuget.exe\r\n1. mono ./nuget.exe \r\n\r\nGet the error `Could not resolve type with token 0100024c` instead of outputting a list of available NuGet commands. If it's not meant to run in the given setup, it would be nice to get an error explaining what's missing.\r\n\r\n### Verbose Logs\r\n\r\nFull command line output from the steps above:\r\n\r\n```\r\nCould not resolve type with token 0100024c\r\nSystem.TypeLoadException: Could not resolve type with token 0100024c\r\n  at (wrapper managed-to-native) System.Reflection.MonoMethodInfo:get_method_info (intptr,System.Reflection.MonoMethodInfo&)\r\n  at System.Reflection.MonoMethodInfo.GetMethodInfo (System.IntPtr handle) [0x00000] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.Reflection.MonoMethod.GetPseudoCustomAttributes () [0x00002] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.MonoCustomAttrs.GetPseudoCustomAttributes (System.Reflection.ICustomAttributeProvider obj, System.Type attributeType) [0x0000d] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.MonoCustomAttrs.IsDefined (System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean inherit) [0x0003b] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.Reflection.MonoMethod.IsDefined (System.Type attributeType, System.Boolean inherit) [0x00000] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at Microsoft.Internal.AttributeServices.IsAttributeDefined[T] (System.Reflection.ICustomAttributeProvider attributeProvider, System.Boolean inherit) [0x00000] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo.IsExport (System.Reflection.ICustomAttributeProvider attributeProvider) [0x00000] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetExportMembers>c__Iterator0.MoveNext () [0x001cd] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.Linq.Enumerable.Any[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00018] in <63992662b765477a898ef49cdcc99ee2>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo.HasExports () [0x0000c] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo.IsPartDiscoverable () [0x0001d] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedModelDiscovery.CreatePartDefinitionIfDiscoverable (System.Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin) [0x0000a] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.Hosting.TypeCatalog.get_PartsInternal () [0x00052] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.Hosting.TypeCatalog.CreateIndex () [0x0000b] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.Lazy`1[T].CreateValue () [0x00075] in <8f2c484307284b51944a1a13a14c0266>:0\r\n```\r\n\r\n"},{"Id":"11119259233","Type":"IssuesEvent","CreatedAt":"2019-12-18T18:31:57","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8904","RelatedDescription":"Closed issue \"Restore:  investigate issues with customer solution\" (#8904) at NuGet/Home","RelatedBody":""},{"Id":"11117327103","Type":"IssuesEvent","CreatedAt":"2019-12-18T14:44:14","Actor":"realrubberduckdev","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8960","RelatedDescription":"Opened issue \"ProjectReference becomes dependency in nuspec instead of including it in nupkg\" (#8960) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThis is the exact same issue which was reported in [Issue No.6998](https://github.com/NuGet/Home/issues/6998) but was closed without a clear answer.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\n\r\nNuGet version (x.x.x.xxx): 5.0.2.5988 (Not using nuget, but this is in path)\r\n\r\nVS version (if appropriate): VS Professional 16.3.7\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win10 1903\r\n\r\nWorked before? If so, with which NuGet version: Unsure.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Unzip the attached zip & build the solution.\r\n\r\n2. See that in generated TestProjectReferenceNupkg.nupkg, ToBeReferenced is set as a dependency.\r\n\r\nThe expectation is that the generated package will just include all items at the output path of TestProjectReferenceNupkg project. But making ToBeReferenced a dependency means we will have to publish it as a separate nupkg.\r\n\r\nIs there a reason for this being the default behaviour?\r\nIs there a better way of achieving multiple project output in one nupkg (from csproj, ideally instead of introducing nuspec etc or manually adding files) ?\r\nThank You.\r\n...\r\n\r\n### Sample Project\r\n\r\n[TestProjectReferenceNupkg.zip](https://github.com/NuGet/Home/files/3978872/TestProjectReferenceNupkg.zip)\r\n\r\n"},{"Id":"11116935111","Type":"IssuesEvent","CreatedAt":"2019-12-18T14:01:15","Actor":"LightVolk","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8959","RelatedDescription":"Opened issue \"`Manage Nuget Packages for Solution` not showing packages installed per project (for .net core 3.1 packages)\" (#8959) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNugetPackageManager 5.4.0\r\nVisual Studio Enterprise 2019 16.4.2\r\nNuget.exe (on server):  5.3.1\r\n\r\ndotnet.exe --version (if appropriate):\r\n1.1.8 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nwin7\r\n\r\n**NuGet.Server version:  3.1.2**\r\n\r\nWorked before? If so, with which NuGet version:\r\nWorked before (search 2.2.* packages) : 4.4.1\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\ncreate bat file:\r\nnuget.exe add %1 -source \\\\nuget-server\\nuget_core3\\\r\n2.\r\nAdd 3.1.0 packages like: Microsoft.Extensions.Logging 3.1.0 on server feed\r\n\r\n3. Try to search it by Nuget Package Manager.\r\n4. Fail.\r\n...\r\n\r\n## Other suggested things\r\nI can not search any 3.1.* nuget packages, but Microsoft.Extensions.FileProviders.Embedded search (3.1.0 version).\r\nAnd i can search all core packages 2.2.* version.\r\n\r\n### Verbose Logs\r\n\r\nOther important thing:\r\n\r\nI can not push some packages. Not all, just few.\r\n\r\nExample:\r\nC:\\PushToIntegration_Core3>nuget.exe push \"C:\\PushToIntegration_Core3\\Core3\\microsoft.aspnetcore.jsonpatch.3.1.0.nupkg\" -source C:\\nugetRep\\nuget_integration_core3  -verbosity detailed\r\nNuGet Version: 5.3.1.6268\r\nPushing microsoft.aspnetcore.jsonpatch.3.1.0.nupkg to 'C:\\nugetRep\\nuget_core3'...\r\nAcquiring lock for the installation of Microsoft.AspNetCore.JsonPatch 3.1.0\r\nAcquired lock for the installation of Microsoft.AspNetCore.JsonPatch 3.1.0\r\nInstalling Microsoft.AspNetCore.JsonPatch 3.1.0.\r\n\r\nAnd it stops here. But package add on folder feed. \r\nP.S. after add --verbouse flag - package add (after large timeout, like a minute):\r\n\r\nPackageSignatureVerificationLog: PackageIdentity: Microsoft.AspNetCore.JsonPatch.3.1.0 Source:  PackageSignatureValidity: True\r\nCompleted installation of Microsoft.AspNetCore.JsonPatch 3.1.0\r\nSuccessfully added package 'C:\\PushToIntegration_Core3\\Core3\\microsoft.aspnetcore.jsonpatch.3.1.0.nupkg' to feed 'C:\\nugetRep\\nuget_core3'.\r\nYour package was pushed.\r\n"},{"Id":"11116041040","Type":"IssuesEvent","CreatedAt":"2019-12-18T12:05:26","Actor":"eriawan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8958","RelatedDescription":"Opened issue \"Nuget.exe says it support MSBUILD 16.0 but it still need exact of MSBUILD when restore with MSBuildVersion\" (#8958) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe :\r\n\r\nNuGet version (x.x.x.xxx): tested on 5.3.1.6268 and 5.2.0.6090\r\n\r\nVS version (if appropriate): VS 2019 16.4.1 and VS 2019 16.3.5\r\n\r\nOS version: Win10 v1909 build 18363.535\r\n\r\nWorked before? N/A\r\n\r\nNOTE:\r\nnuget restore -h shows this:\r\n\r\n![image](https://user-images.githubusercontent.com/8773147/71084795-a003c980-21c8-11ea-8af4-7849c64bb447.png)\r\n\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Ensure VS 2019 (16.3.x or later) is installed, and ensure nuget.exe (with versions above) is download.\r\n2. Open Developer Command Prompt for Visual Studio 2019.\r\n3. Run nuget restore against any solution file on the command prompt with -MSBuildVersion 16.0, because this is one of the allowed values as indicated by captured values for MSBuildVersion above.\r\n4. The error shows that it doesn't recognize the version \r\n\r\n![image](https://user-images.githubusercontent.com/8773147/71084906-df321a80-21c8-11ea-866b-01b9e20e7518.png)\r\n\r\n\r\n...\r\n\r\n## Suggestions\r\nThe value of 16.0 should refer to the version of the VS 2019 MSBUILD , or please update the option of -MSBuildVersion to use the exact version of VS 2019, such as 16.4 for VS 2019 16.4.x. Otherwise it is confusing in the beginning.\r\n\r\n### Verbose Logs\r\n\r\nCannot have verbose logs, because nuget.exe failed to run immediately:\r\n\r\n\r\n### Sample Project\r\n\r\nSample projects aren't quite necessary, because any .NET (including net FX and NET Core) projects will always be reproducible.\r\n"},{"Id":"11112292001","Type":"IssuesEvent","CreatedAt":"2019-12-18T00:58:30","Actor":"PawcioCNCProfi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8957","RelatedDescription":"Opened issue \"Item template is no longer visible after adding Asset elements\" (#8957) at NuGet/Home","RelatedBody":"- After adding the `Asset` elements for nuget packages. The template is no longer listed in list of available item to add to projects.\n\n- I also don't understand why do I need to set `repositoryId` in template properties to VSIX project id, essentially creating circular dependency between those project. \n\n- The \"2. Place your `nupkg` files in a folder called `Packages` within the VSIX.\" instruction is also not clear. Is putting the folder in file system enough? Do I need to also include it in the project definition? Should I copy it to output directory or set the files as resources? \n- Where exactly do I put the `&lt;Reference ...&gt;` element mentioned in \"Best practices\"?\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: bbf9be6a-e7b0-b9b6-a3e8-8b5de3c6900d\n* Version Independent ID: c12505c9-6f14-7111-2578-5c2664b4515d\n* Content: [NuGet Packages in Visual Studio templates](https://docs.microsoft.com/en-us/nuget/visual-studio-extensibility/visual-studio-templates)\n* Content Source: [docs/visual-studio-extensibility/Visual-Studio-Templates.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/visual-studio-extensibility/Visual-Studio-Templates.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**"},{"Id":"11111778687","Type":"IssuesEvent","CreatedAt":"2019-12-17T23:09:06","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8956","RelatedDescription":"Opened issue \"Update... & Update All... commands in Context Menu\" (#8956) at NuGet/Home","RelatedBody":"From PM Tracking Issue: **Show NuGet commands in context menu**: https://github.com/NuGet/Home/issues/8041 \r\n\r\nLooking for details (ie, PM Spec) for what the expected experience is for these bullets. \r\n\r\nThey appear to be new features but I don’t see details about how they are expected to work:\r\n- Show Update All... on Packages node for SDK style projects\r\n- Show Update... on individual NuGet packages at the top level\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-12-19T05:30:44.0008934Z","RunDurationInMilliseconds":2190}