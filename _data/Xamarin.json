{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7762600506","Type":"IssuesEvent","CreatedAt":"2018-06-01T14:02:17","Actor":"plynkus","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1775","RelatedDescription":"Closed issue \"MSBuildWorkspace load failures (Microsoft.CodeAnalysis.*) for Xamarin.Android projects.\" (#1775) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a simple console app.  Add nuget packages: Microsoft.CodeAnalysis, Microsoft.Build.Locator.\r\n2. Add boilerplate code to load a project in a workspace, e.g.:\r\n\r\n```\r\nusing Microsoft.CodeAnalysis;\r\nusing Microsoft.CodeAnalysis.MSBuild;\r\n\r\nusing System.Threading.Tasks;\r\n\r\nnamespace AndroidRoslynFailure\r\n{\r\n    class Program\r\n    {\r\n        static async Task Main(string[] args)\r\n        {\r\n            var workspace = MSBuildWorkspace.Create();\r\n            workspace.WorkspaceFailed += WorkspaceFailed;\r\n            var project = await workspace.OpenProjectAsync(@\"C:\\path\\to\\android.csproj\");\r\n\r\n            return;\r\n        }\r\n\r\n        private static void WorkspaceFailed(object sender, WorkspaceDiagnosticEventArgs e)\r\n        {\r\n            return;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n3. Set breakpoints at both returns above (to catch the success/failure cases).\r\n\r\n### Expected Behavior\r\n\r\nSuccess.  (Works for other project types---iOS, UWP, etc.)\r\n\r\n### Actual Behavior\r\n\r\nFailure.  The WorkspaceFailed handler is called with diagnostic information of the form:\r\n\r\n```\r\n{[Failure] Msbuild failed when processing the file 'C:\\Temp\\AndroidRoslynFailure\\App\\App.csproj' with message: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets: (52, 5): The \"Csc\" task failed unexpectedly.\r\nSystem.InvalidOperationException: MSB3087: An incompatible host object was passed into the \"Csc\" task.  The host object for this task must implement the \"ICscHostObject\" interface.\r\n   at Microsoft.CodeAnalysis.BuildTasks.Csc.AddResponseFileCommands(CommandLineBuilderExtension commandLine)\r\n   at Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler.GenerateResponseFileCommands()\r\n   at Microsoft.Build.Utilities.ToolTask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()}\r\n```\r\n\r\nThis issue began fairly recently (at least in the Visual studio 15.7.2+ timeframe).  We perform custom build tasks that do some of their work through code analysis and these steps now fail for Xamarin.Android projects only.\r\n\r\nIf you believe this is not due to some difference in the Xamarin.Android toolchain itself, I can kick this over to the Roslyn issues list as well.  I'll be taking a look at the repositories to try and understand from where ICscHostObject implementers are provided per platform.\r\n\r\n### Version Information\r\n\r\nCurrently stock Visual Studio 15.7.3, tip nuget packages for those cited above.\r\n"},{"Id":"7762411534","Type":"IssuesEvent","CreatedAt":"2018-06-01T13:28:24","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1742","RelatedDescription":"Closed issue \"Cannot access a disposed object. Object name: 'System.Net.Sockets.NetworkStream'.\" (#1742) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Upload a large `byte[]` with `MultipartFormDataContent`\r\n2. HTTP and SSL settings are all set to `Default`\r\n\r\nReproduction test case: https://github.com/jonathanpeppers/HttpClientRepro\r\n\r\n### Expected Behavior\r\n\r\nThe web request succeeds.\r\n\r\n### Actual Behavior\r\n\r\nCannot access a disposed object.\r\nObject name: 'System.Net.Sockets.NetworkStream'.\r\n\r\n  at System.Net.WebConnectionStream.EndWrite (System.IAsyncResult r) [0x000b8] in <5a97d41d36694fb19855c17429527b10>:0 \r\n  at System.IO.Stream+<>c.<BeginEndWriteAsync>b__53_1 (System.IO.Stream stream, System.IAsyncResult asyncResult) [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Threading.Tasks.TaskFactory`1+FromAsyncTrimPromise`1[TResult,TInstance].Complete (TInstance thisRef, System.Func`3[T1,T2,TResult] endMethod, System.IAsyncResult asyncResult, System.Boolean requiresSynchronization) [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Net.Http.MultipartContent+<SerializeToStreamAsync>d__8.MoveNext () [0x0025d] in <996a681f30a44cd685a4da54e11956e2>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Net.Http.HttpClientHandler+<SendAsync>d__64.MoveNext () [0x0036e] in <996a681f30a44cd685a4da54e11956e2>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <996a681f30a44cd685a4da54e11956e2>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at BeltrameClassificazioneRottami.Utilities.Http+<RankingUploadAsync>d__26.MoveNext () [0x00185] in /Users/alessandrocaliaro/Projects/Soluzione1/afv-app-classificazione-rottami/BeltrameClassificazioneRottami/Utilities/Http.cs:178 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <f32579baafc1404fa37ba3ec1abdc0bd>:0 \r\n  at BeltrameClassificazioneRottami.Activities.MenuClassificazioneActivity+<<OnCreate>b__15_5>d.MoveNext () [0x002cd] in /Users/alessandrocaliaro/Projects/Soluzione1/afv-app-classificazione-rottami/BeltrameClassificazioneRottami/Activities/MenuClassificazioneActivity.cs:317 \r\n### Version Information\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.1 (build 22)\r\nInstallation UUID: e9c85728-289a-4de3-8442-d551ea358311\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersione: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nVersioni runtime:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nVersioni SDK:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nSDK di MSBuild: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersione: 1.6.2\r\nPercorso: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nA valid Xcode installation was not found at the configured location: '/Applications/Xcode.app'\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.178 (Visual Studio Community)\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersione: 8.3.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/alessandrocaliaro/Library/Developer/Xamarin/android-sdk-macosx\r\n\tVersione di Android supportate:\r\n\t\t4.4 (livello API 19)\r\n\t\t5.0 (livello API 21)\r\n\t\t5.1 (livello API 22)\r\n\t\t6.0 (livello API 23)\r\n\t\t7.0 (livello API 24)\r\n\t\t7.1 (livello API 25)\r\n\t\t8.0 (livello API 26)\r\n\t\t8.1 (livello API 27)\r\n\r\nVersione di SDK Tools: 25.2.5\r\nVersione degli strumenti della piattaforma SDK: 27.0.1\r\nVersione degli strumenti di compilazione SDK: 25.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_45\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_45-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode)\r\n\r\nIl codice EPL di Android Designer è disponibile qui:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.178 (Visual Studio Community)\r\nHash: 408d3574\r\nBranch: d15-7\r\nBuild date: 2018-05-08 18:56:30-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705010022\r\nGit revision: 60442dd643a20c7a4ae1f8705b8d1de8972eee78\r\nBuild date: 2018-05-15 01:43:39+00\r\nXamarin addins: 4194ffe4868321e4c3477bd56aed579bda4c6fbb\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nEMDK for Xamarin 2.7.0.98\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7761835852","Type":"PullRequestEvent","CreatedAt":"2018-06-01T11:22:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1774","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] AndroidCodegenTarget=XAJavaInterop1\" (#1774) at xamarin/xamarin-android","RelatedBody":"When `$(AndroidCodegenTarget)`=XAJavaInterop1, `generator` output uses\r\n`Java.Interop.JniPeerMembers` for JNI member invocations instead of\r\nthe legacy `Android.Runtime.JNIEnv` methods.\r\n\r\nThis has a number of benefits, such as:\r\n\r\n  * Reduced memory use (less garbage generated)\r\n  * Smaller assemblies.\r\n  * Faster `base.Method()` invocations.\r\n  * Improved `jmethodID` caching of Java Callable Wrapper constructors\r\n    for type subclasses.\r\n\r\nThe problem?  Assemblies built under `XAJavaInterop1` cannot run on\r\nXamarin.Android 6.0 and earlier.\r\n\r\nXamarin.Android 6.0 was over 2.5 *years* ago.  We do not consider this\r\nto be a signifiant concern, while the *memory and performance\r\nbenefits* are significant.\r\n\r\nUpdate the default `$(AndroidCodegenTarget)` value to `XAJavaInterop1`.\r\n\r\nIf this is undesirable, projects can set the `$(AndroidCodegenTarget)`\r\nMSBuild property to `XamarinAndroid` for the previous behavior."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7765579017","Type":"PullRequestEvent","CreatedAt":"2018-06-02T05:19:27","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2904","RelatedDescription":"Opened pull request \"[Android] ignore bugzilla test until regression makes it to schedule\" (#2904) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nCurrently verifying this fixes all ui tests on Android"},{"Id":"7765282427","Type":"IssuesEvent","CreatedAt":"2018-06-02T01:25:54","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2834","RelatedDescription":"Closed issue \"[Android] `Layout.Childred.Clear()` causes a System.NullReferenceException\" (#2834) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n`Layout.Childred.Clear()` causes a `System.NullReferenceException`\r\n\r\nException:\r\n\r\nSystem.NullReferenceException: Object reference not set to an instance of an object. occurred\r\n\r\n  at Xamarin.Forms.Platform.Android.VisualElementPackager.RemoveChild (Xamarin.Forms.VisualElement view) [0x00011] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Platform.Android\\VisualElementPackager.cs:187 \r\n  at Xamarin.Forms.Platform.Android.VisualElementPackager.OnChildRemoved (System.Object sender, Xamarin.Forms.ElementEventArgs e) [0x0003b] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Platform.Android\\VisualElementPackager.cs:172 \r\n  at (wrapper delegate-invoke) System.EventHandler`1[Xamarin.Forms.ElementEventArgs]:invoke_void_object_TEventArgs (object,Xamarin.Forms.ElementEventArgs)\r\n  at Xamarin.Forms.Element.OnChildRemoved (Xamarin.Forms.Element child) [0x00016] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Element.cs:387 \r\n  at Xamarin.Forms.VisualElement.OnChildRemoved (Xamarin.Forms.Element child) [0x00001] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\VisualElement.cs:629 \r\n  at Xamarin.Forms.Layout`1[T].OnChildRemoved (Xamarin.Forms.Element child) [0x00001] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Layout.cs:41 \r\n  at Xamarin.Forms.AbsoluteLayout.OnChildRemoved (Xamarin.Forms.Element child) [0x00014] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\AbsoluteLayout.cs:82 \r\n  at Xamarin.Forms.Layout.OnInternalRemoved (Xamarin.Forms.View view) [0x00014] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Layout.cs:461 \r\n  at Xamarin.Forms.Layout.InternalChildrenOnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0004e] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Layout.cs:425 \r\n  at (wrapper delegate-invoke) <Module>:invoke_void_object_NotifyCollectionChangedEventArgs (object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000f] in <6c708cf596db438ebfc6b7e012659eee>:0 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedAction action, System.Object item, System.Int32 index) [0x00009] in <6c708cf596db438ebfc6b7e012659eee>:0 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].RemoveItem (System.Int32 index) [0x0002b] in <6c708cf596db438ebfc6b7e012659eee>:0 \r\n  at System.Collections.ObjectModel.Collection`1[T].Remove (T item) [0x00027] in <896ad1d315ca4ba7b117efb8dacaedcf>:0 \r\n  at Xamarin.Forms.ObservableWrapper`2[TTrack,TRestrict].Clear () [0x00035] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\ObservableWrapper.cs:45 \r\n  at XFBug.Portable.TestPage.SetView (Xamarin.Forms.View view) [0x00001] in C:\\Development\\temp\\XFBug\\XFBug.Portable\\TestPage.cs:33 \r\n  at XFBug.Portable.TestView.ButtonClicked (System.Object sender, System.EventArgs e) [0x0000d] in C:\\Development\\temp\\XFBug\\XFBug.Portable\\TestView.cs:34 \r\n  at Xamarin.Forms.Button.SendClicked () [0x00024] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Button.cs:133 \r\n  at Xamarin.Forms.Platform.Android.AppCompat.ButtonRenderer+ButtonClickListener.OnClick (Android.Views.View v) [0x0000d] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Platform.Android\\AppCompat\\ButtonRenderer.cs:291 \r\n  at Android.Views.View+IOnClickListenerInvoker.n_OnClick_Landroid_view_View_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_v) [0x0000f] in <9ef29c909d7e4606a46b131129da3975>:0 \r\n  at (wrapper dynamic-method) System.Object:0dc720bc-c9f5-4354-8da4-78e44be3951c (intptr,intptr,intptr)\r\n\r\n### Steps to Reproduce\r\n\r\n1.  See attached solution\r\n2.  Start on Android (5.0 API 21)\r\n3.  Click on button \"CLICK IT\" and the exception occurs\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.482510\r\n- Last known good version: 2.4.0.91020 \r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: \r\n  - Android: 7.1 \r\n- Android Support Library Version: 25.4.0.2\r\n\r\n### Reproduction Link\r\n\r\nMinimal project for reproduction attached\r\n[XFBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2039561/XFBug.zip)\r\n\r\nNetstandard repro\r\n[XFBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2039747/XFBug.zip)\r\n"},{"Id":"7765080437","Type":"IssuesEvent","CreatedAt":"2018-06-01T23:31:56","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2901","RelatedDescription":"Closed issue \"[UWP] NRE inside new SPAN code when setting Text Decorations on UWP\" (#2901) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThis issue was initially highlighted by\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/2221#issuecomment-393916685\r\n\r\nI created a branch here from master to demonstrate the issue in isolation from the PR\r\nhttps://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n\r\n### Steps to Reproduce\r\n\r\n1.  From run the UWP Control Gallery project from https://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n\r\n### Expected Behavior\r\nText Decorations are applied and no crash occurs \r\n\r\n### Actual Behavior\r\nUWP crashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Master branch as of https://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n- Last known good version: 3.1 pre 1\r\n\r\n### Reproduction Link\r\nhttps://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n"},{"Id":"7764925522","Type":"PullRequestEvent","CreatedAt":"2018-06-01T22:31:36","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2900","RelatedDescription":"Merged pull request \"Shell shellcontenttab\" (#2900) at xamarin/Xamarin.Forms","RelatedBody":"Working PR, for my review purposes only"},{"Id":"7764520696","Type":"IssuesEvent","CreatedAt":"2018-06-01T20:39:22","Actor":"5yunus2efendi","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2903","RelatedDescription":"Opened issue \"Question: Xamarin.Forms startup time on \" (#2903) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7764496014","Type":"IssuesEvent","CreatedAt":"2018-06-01T20:33:30","Actor":"jcmanke","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2902","RelatedDescription":"Opened issue \"Change SearchBar base class to InputView\" (#2902) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nChange the `SearchBar` base class from `View` to `InputView` in order to give it Keyboard, IsSpellCheckEnabled, and MaxLength properties.\r\n\r\nI know it's technically a breaking change, but spellcheck on a SearchBar is obviously something people want because it was added as a Windows platform specific, and I have extended the SearchBar to add a Keyboard and made a behavior for MaxLength in my own projects."},{"Id":"7764271963","Type":"IssuesEvent","CreatedAt":"2018-06-01T19:40:03","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2901","RelatedDescription":"Opened issue \"[UWP] NRE when setting Text Decorations on UWP\" (#2901) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThis issue was initially highlighted by\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/2221#issuecomment-393916685\r\n\r\nI created a branch here from master to demonstrate the issue in isolation from the PR\r\nhttps://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n\r\n### Steps to Reproduce\r\n\r\n1.  From run the UWP Control Gallery project from https://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n\r\n### Expected Behavior\r\nText Decorations are applied and no crash occurs \r\n\r\n### Actual Behavior\r\nUWP crashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Master branch as of https://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n- Last known good version: 3.1 pre 1\r\n\r\n### Reproduction Link\r\nhttps://github.com/xamarin/Xamarin.Forms/tree/span_crash_uwp_text_decorations\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7764477510","Type":"IssuesEvent","CreatedAt":"2018-06-01T20:29:17","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4174","RelatedDescription":"Opened issue \"Your mono runtime and class libraries are out of sync message while building unittest projects with XI master\" (#4174) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update System with Xamarin.iOS project, XI version: 11.11.0.331 (master: 238eb94c) \r\n2. Build and Run any unit test on device.\r\n\r\n### Expected Behavior\r\nBuild Log should not contain any out of sync messages.\r\n\r\n### Actual Behavior\r\n\"Your mono runtime and class libraries are out of sync\" message is  present in build logs.\r\n\r\n### Environment\r\n\r\n```\r\nOperating System: Mac OS X 10.13.4\r\nBot Name: XQA-XI-Sierra-6\r\nMono version: 5.14.0.106 (820bff26b3b)  (2018-05-25 17:29:19 -04:00)\r\nXA version: 8.3.99.19 (HEAD/09df99bdc) \r\nXI version: 11.11.0.331 (master: 238eb94c) \r\nXM version: 4.5.0.331 (master: 238eb94c)  (2018-05-25 07:47:00 -04:00)\r\nXVS version: \r\nXS version: 7.6.0.971 (e936c76)  (2018-05-28 12:49:41 -04:00)\r\n```\r\n\r\n### Build Logs\r\n\r\nhttp://xqa.blob.core.windows.net/gist/report-c8b3a0e9db67473ebe1ff9df22e7c44d.txt, with mono 5.14\r\nhttp://xqa.blob.core.windows.net/gist/report-641ce6bd5c0545618ad5b7f981fcbbdf.txt with mono 5.12\r\n\r\n### Example Project (If Possible)\r\n\r\nAny unit test project in xamarin-macios/tests/ folder. \r\n\r\n## Additional Info:\r\nThis is not a new issue in master. It was happening for quite sometime. I confirmed that QA tests are checking out the correct external/mono and build logs are not giving false results, also checked manually. This issue is occurring in bots with either mono 5.14 or 5.12 installed.\r\n"},{"Id":"7764188693","Type":"IssuesEvent","CreatedAt":"2018-06-01T19:19:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4173","RelatedDescription":"Closed issue \"Xamarin.iOS should remove references to bugzilla\" (#4173) at xamarin/xamarin-macios","RelatedBody":"\r\nThere are several references to bugzilla in our source, docs and error messages.  We should audit the hits and change where appropriate.  \r\n\r\nhttps://github.com/xamarin/xamarin-macios/search?q=%22bugzilla%22&unscoped_q=%22bugzilla%22\r\n\r\nFor example...\r\n\r\n### Expected Behavior\r\n`Xamarin.iOS: Internal consistency error, please file a bug (https://github.com/xamarin/xamarin-macios/issues/new). Additional data: found managed object 0x1275a8ea8=0x7f92d401e080 (Linker.Sealer.Unsealable) in native object 0x600000222c20 (AppDelegate).`\r\n\r\n### Actual Behavior\r\n`Xamarin.iOS: Internal consistency error, please file a bug (http://bugzilla.xamarin.com). Additional data: found managed object 0x1275a8ea8=0x7f92d401e080 (Linker.Sealer.Unsealable) in native object 0x600000222c20 (AppDelegate).`\r\n\r\n\r\n"},{"Id":"7764149630","Type":"IssuesEvent","CreatedAt":"2018-06-01T19:10:34","Actor":"bholmes","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4173","RelatedDescription":"Opened issue \"Xamarin.iOS should remove references to bugzilla\" (#4173) at xamarin/xamarin-macios","RelatedBody":"\r\nThere are several references to bugzilla in our source, docs and error messages.  We should audit the hits and change where appropriate.  \r\n\r\nhttps://github.com/xamarin/xamarin-macios/search?q=%22bugzilla%22&unscoped_q=%22bugzilla%22\r\n\r\nFor example...\r\n\r\n### Expected Behavior\r\n`Xamarin.iOS: Internal consistency error, please file a bug (https://github.com/xamarin/xamarin-macios/issues/new). Additional data: found managed object 0x1275a8ea8=0x7f92d401e080 (Linker.Sealer.Unsealable) in native object 0x600000222c20 (AppDelegate).`\r\n\r\n### Actual Behavior\r\n`Xamarin.iOS: Internal consistency error, please file a bug (http://bugzilla.xamarin.com). Additional data: found managed object 0x1275a8ea8=0x7f92d401e080 (Linker.Sealer.Unsealable) in native object 0x600000222c20 (AppDelegate).`\r\n\r\n\r\n"},{"Id":"7764044871","Type":"PullRequestEvent","CreatedAt":"2018-06-01T18:47:10","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4172","RelatedDescription":"Opened pull request \"[msbuild] Change MtouchHttpClientHandler default\" (#4172) at xamarin/xamarin-macios","RelatedBody":"If the Http Client value isn't set in the csproj, we should default to `NSUrlSessionHandler` which is also what the Xamarin.iOS Analysis rules try to enforce."},{"Id":"7763799960","Type":"PullRequestEvent","CreatedAt":"2018-06-01T17:53:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4165","RelatedDescription":"Closed pull request \"Bumps external/mono to a49a68c\" (#4165) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n    \r\n* mono/mono@a49a68c6d7a [interp] Fix native to interp transition (#8957)\r\n* mono/mono@92e11812f41 [System.Runtime.Serialization] Makes more APIs work for mobile\r\n* mono/mono@260676f948e Bump API snapshot submodule\r\n* mono/mono@eefdf4ed319 Bump external/cecil to b6c50e3\r\n* mono/mono@0754926394c [2018-02] Finalize merp integration (#8869)\r\n    \r\nDiff: https://github.com/mono/mono/compare/7bdb7dd76582f305f86e35ac7bfe120d68557954...a49a68c6d7a48aabd4f24a38bbc93d18e02dd2ca\r\n"},{"Id":"7763796156","Type":"PullRequestEvent","CreatedAt":"2018-06-01T17:52:20","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4171","RelatedDescription":"Opened pull request \"Bump mono to head of 2018-02 + fix mtouch/mmp\" (#4171) at xamarin/xamarin-macios","RelatedBody":"so CoreResolver check for the new SymbolsNotMatchingException from Cecil"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1002614995031592963","CreatedAt":"2018-06-01T18:16:57+00:00","UserScreenname":"xamarinhq","Text":"Find #Xamarin and/or #dotNET events near you this June: https://t.co/sJpR7Xk130 https://t.co/PT5WAD4JIx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":9,"RawContent":null},{"Id":"1002572478076645378","CreatedAt":"2018-06-01T15:28:00+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/xM3dAE2jRZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"1002218901680377858","CreatedAt":"2018-05-31T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/I2dYlz1Tfo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":25,"RawContent":null},{"Id":"1001900437233119234","CreatedAt":"2018-05-30T18:57:33+00:00","UserScreenname":"xamarinhq","Text":"We've got some great @XamarinU Guest Lectures coming up that you won't want to miss! Check them out, and make sure… https://t.co/REGhq5ZF12","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":17,"RawContent":null},{"Id":"1001568114855890945","CreatedAt":"2018-05-29T20:57:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/UH3gpAFFHj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":39,"RawContent":null},{"Id":"1000859470057132032","CreatedAt":"2018-05-27T22:01:07+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/iNmDBtF3zX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1000408472083673089","CreatedAt":"2018-05-26T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/t7b1GH4pMp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":10,"RawContent":null},{"Id":"1000081068660330497","CreatedAt":"2018-05-25T18:28:02+00:00","UserScreenname":"xamarinhq","Text":"Join our open source family and help make https://t.co/3QxhuBuvHc even better: https://t.co/6h1HH1dTAM https://t.co/5go35jCm9N","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":34,"RawContent":null},{"Id":"999682195089436672","CreatedAt":"2018-05-24T16:03:03+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/81dQ3CWoSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":13,"RawContent":null},{"Id":"999389007191728134","CreatedAt":"2018-05-23T20:38:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to secure and version your #Xamarin apps in this guest post on Mobile.BuildTools: https://t.co/NTtOmsdDTl https://t.co/ks5Q3K2joU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":17,"RawContent":null},{"Id":"998953429568573440","CreatedAt":"2018-05-22T15:47:11+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/2E1zBel6Cr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"998352195631435777","CreatedAt":"2018-05-20T23:58:06+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/tO3s7DT35f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":124,"FavoriteCount":46,"RawContent":null},{"Id":"997143964397572096","CreatedAt":"2018-05-17T15:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/LeAoHXXaA6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"996824503241052160","CreatedAt":"2018-05-16T18:47:36+00:00","UserScreenname":"xamarinhq","Text":"Get started with #XamarinEssentials cross-platform APIs: https://t.co/sW5UgLfeGb https://t.co/Bw4ufWhGP8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":151,"FavoriteCount":79,"RawContent":null},{"Id":"996785351665463297","CreatedAt":"2018-05-16T16:12:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/UZ5l6JaWcB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"996750580969365506","CreatedAt":"2018-05-16T13:53:51+00:00","UserScreenname":"xamarinhq","Text":"Learn about some small changes coming as we integrate https://t.co/iLyxWYOFfj content into Microsoft sites: https://t.co/RcvPgvkPTD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":8,"RawContent":null},{"Id":"996423969308921856","CreatedAt":"2018-05-15T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/2LzUatSvjX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":24,"RawContent":null},{"Id":"996420693481938944","CreatedAt":"2018-05-15T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/aiwQSbkh1B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2018-06-02T05:30:54.0387755Z","RunDurationInMilliseconds":4013}