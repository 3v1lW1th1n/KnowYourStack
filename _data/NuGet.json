{"Data":{"Blog":{"FeedItems":[{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10320900999","Type":"PullRequestEvent","CreatedAt":"2019-08-30T22:15:09","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7498","RelatedDescription":"Merged pull request \"Make the cancel ownership request endpoint just redirect to Manage Owners\" (#7498) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2679\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/7497.\r\n\r\nThe `CancelPendingOwnershipRequest` endpoint was a GET without a token but it performed an action. This is against CSRF rules. The fix was to make the endpoint redirect the existing URL to the manage package page with the owners section auto-expanded. This is so existing links in the email are not broken.\r\n\r\nThe new UI on the Packages page is this (a pencil instead of an \"x\"):\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64045795-11871180-cb1f-11e9-856f-507ec8d172d7.png)\r\n\r\nThe old UI looked like this:\r\n![image](https://user-images.githubusercontent.com/94054/64046189-1ac4ae00-cb20-11e9-87e6-b847b529d06c.png)\r\n\r\nI considered the word \"Manage\" instead of a pencil but I thought this was more consistent with the rest of the page. Note that this adds an additional hope to cancel an ownership request from the packages page. I could do a POST on click here but this would take some non-trivial code sharing with the manage package page. \r\n\r\nThe new email looks like this:\r\n![image](https://user-images.githubusercontent.com/94054/64045541-6c6c3900-cb1e-11e9-9419-f89895693a7f.png)\r\n\r\nThe old email looked like this:\r\n![image](https://user-images.githubusercontent.com/94054/64046163-054f8400-cb20-11e9-8a29-51c113fda082.png)\r\n\r\nWhen you click the link it looks like this:\r\n![image](https://user-images.githubusercontent.com/94054/64045574-83129000-cb1e-11e9-8580-462e7a0135d5.png)\r\n\r\n"},{"Id":"10320898684","Type":"PullRequestEvent","CreatedAt":"2019-08-30T22:14:31","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7497","RelatedDescription":"Merged pull request \"Use POST for admin actions\" (#7497) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2679"},{"Id":"10320048524","Type":"PullRequestEvent","CreatedAt":"2019-08-30T19:17:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7498","RelatedDescription":"Opened pull request \"Make the cancel ownershipt request endpoint just redirect to Manage\" (#7498) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2679\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/7497.\r\n\r\nThe `CancelPendingOwnershipRequest` endpoint was a GET without a token but it performed an action. This is against CSRF rules. The fix was to make the endpoint redirect the existing URL to the manage package page with the owners section auto-expanded. This is so existing links in the email are not broken.\r\n\r\nThe new UI on the Packages page is this (a pencil instead of an \"x\"):\r\n\r\n![image](https://user-images.githubusercontent.com/94054/64045795-11871180-cb1f-11e9-856f-507ec8d172d7.png)\r\n\r\nThe old UI looked like this:\r\n![image](https://user-images.githubusercontent.com/94054/64046189-1ac4ae00-cb20-11e9-87e6-b847b529d06c.png)\r\n\r\nI considered the word \"Manage\" instead of a pencil but I thought this was more consistent with the rest of the page. Note that this adds an additional hope to cancel an ownership request from the packages page. I could do a POST on click here but this would take some non-trivial code sharing with the manage package page. \r\n\r\nThe new email looks like this:\r\n![image](https://user-images.githubusercontent.com/94054/64045541-6c6c3900-cb1e-11e9-9419-f89895693a7f.png)\r\n\r\nThe old email looked like this:\r\n![image](https://user-images.githubusercontent.com/94054/64046163-054f8400-cb20-11e9-8a29-51c113fda082.png)\r\n\r\nWhen you click the link it looks like this:\r\n![image](https://user-images.githubusercontent.com/94054/64045574-83129000-cb1e-11e9-8580-462e7a0135d5.png)\r\n\r\n"},{"Id":"10316088023","Type":"IssuesEvent","CreatedAt":"2019-08-30T09:10:36","Actor":"ermshiperete","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7496","RelatedDescription":"Closed issue \"Search API doesn't find package\" (#7496) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI try to use the query API to get information about the `SIL.Windows.Forms` nuget package. This works for other packages, but `SIL.Windows.Forms` returns nothing.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n    curl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms'\r\n\r\n### Expected behavior\r\n\r\nOutput similar to the output that I get when I run (but of course for `SIL.Windows.Forms`, not `SIL.Windows.Forms.WritingSystems`) the following command:\r\n\r\n```\r\ncurl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms.WritingSystems'\r\n\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://schema.nuget.org/schema#\",\r\n    \"@base\": \"https://api.nuget.org/v3/registration3/\"\r\n  },\r\n  \"totalHits\": 1,\r\n  \"lastReopen\": \"2019-08-29T17:22:58.0949519Z\",\r\n  \"index\": \"v3-lucene2-v2v3-20171018\",\r\n  \"data\": [\r\n    {\r\n      \"@id\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/index.json\",\r\n      \"@type\": \"Package\",\r\n      \"registration\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/index.json\",\r\n      \"id\": \"SIL.Windows.Forms.WritingSystems\",\r\n      \"version\": \"7.0.0\",\r\n      \"description\": \"SIL.Windows.Forms.WritingSystems contains Windows Forms UI elements for displaying and editing writing systems as defined by the SIL.WritingSystems assembly.\",\r\n      \"summary\": \"\",\r\n      \"title\": \"SIL.Windows.Forms.WritingSystems\",\r\n      \"licenseUrl\": \"https://www.nuget.org/packages/SIL.Windows.Forms.WritingSystems/7.0.0/license\",\r\n      \"projectUrl\": \"https://github.com/sillsdev/libpalaso\",\r\n      \"tags\": [],\r\n      \"authors\": [\"SIL International\"],\r\n      \"totalDownloads\": 1494,\r\n      \"verified\": false,\r\n      \"versions\": [\r\n        {\r\n          \"version\": \"7.0.0\",\r\n          \"downloads\": 0,\r\n          \"@id\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/7.0.0.json\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### Actual output\r\n\r\nInstead of the expected output I get:\r\n\r\n```\r\ncurl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms'\r\n\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://schema.nuget.org/schema#\",\r\n    \"@base\": \"https://api.nuget.org/v3/registration3/\"\r\n  },\r\n  \"totalHits\": 0,\r\n  \"lastReopen\": \"2019-08-29T17:27:55.1699468Z\",\r\n  \"index\": \"v3-lucene2-v2v3-20171018\",\r\n  \"data\": []\r\n}\r\n```\r\n"},{"Id":"10313412186","Type":"PullRequestEvent","CreatedAt":"2019-08-29T22:42:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7497","RelatedDescription":"Opened pull request \"Use POST for admin actions\" (#7497) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2679"},{"Id":"10311492923","Type":"IssuesEvent","CreatedAt":"2019-08-29T17:30:17","Actor":"ermshiperete","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7496","RelatedDescription":"Opened issue \"Search API doesn't find package\" (#7496) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI try to use the query API to get information about the `SIL.Windows.Forms` nuget package. This works for other packages, but `SIL.Windows.Forms` returns nothing.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n    curl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms'\r\n\r\n### Expected behavior\r\n\r\nOutput similar to the output that I get when I run\r\n\r\n```\r\ncurl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms.WritingSystems'\r\n\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://schema.nuget.org/schema#\",\r\n    \"@base\": \"https://api.nuget.org/v3/registration3/\"\r\n  },\r\n  \"totalHits\": 1,\r\n  \"lastReopen\": \"2019-08-29T17:22:58.0949519Z\",\r\n  \"index\": \"v3-lucene2-v2v3-20171018\",\r\n  \"data\": [\r\n    {\r\n      \"@id\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/index.json\",\r\n      \"@type\": \"Package\",\r\n      \"registration\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/index.json\",\r\n      \"id\": \"SIL.Windows.Forms.WritingSystems\",\r\n      \"version\": \"7.0.0\",\r\n      \"description\": \"SIL.Windows.Forms.WritingSystems contains Windows Forms UI elements for displaying and editing writing systems as defined by the SIL.WritingSystems assembly.\",\r\n      \"summary\": \"\",\r\n      \"title\": \"SIL.Windows.Forms.WritingSystems\",\r\n      \"licenseUrl\": \"https://www.nuget.org/packages/SIL.Windows.Forms.WritingSystems/7.0.0/license\",\r\n      \"projectUrl\": \"https://github.com/sillsdev/libpalaso\",\r\n      \"tags\": [],\r\n      \"authors\": [\"SIL International\"],\r\n      \"totalDownloads\": 1494,\r\n      \"verified\": false,\r\n      \"versions\": [\r\n        {\r\n          \"version\": \"7.0.0\",\r\n          \"downloads\": 0,\r\n          \"@id\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/7.0.0.json\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### Actual output\r\n\r\nInstead of the expected output I get:\r\n\r\n```\r\ncurl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms'\r\n\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://schema.nuget.org/schema#\",\r\n    \"@base\": \"https://api.nuget.org/v3/registration3/\"\r\n  },\r\n  \"totalHits\": 0,\r\n  \"lastReopen\": \"2019-08-29T17:27:55.1699468Z\",\r\n  \"index\": \"v3-lucene2-v2v3-20171018\",\r\n  \"data\": []\r\n}\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10321210119","Type":"IssuesEvent","CreatedAt":"2019-08-31T00:00:50","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8524","RelatedDescription":"Closed issue \"API:  enable custom INuGetResourceProvider's\" (#8524) at NuGet/Home","RelatedBody":"Progress on https://github.com/NuGet/Home/issues/8330."},{"Id":"10321178297","Type":"IssuesEvent","CreatedAt":"2019-08-30T23:47:12","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8538","RelatedDescription":"Opened issue \"Visually indicate meaning of version numbers in PM UI tabs\" (#8538) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVSFeedback suggestion to add labels on the PMUI tabs (Browse/Installed/Updates) to visually indicate whether the displayed version number is installed or a suggested update. Version numbers in question are on the right side of the screenshot below.\r\n\r\n\"I would also recommend, also for the other tabs, to show some prefix like \"newest:\" \"installed:\" before the version or some more intuitive than \"green arrow\" icon for the installed version. Currently its not intuitive as it should for such a simple dialog. I also discussed that with some collegues and they agree my conclusions.\"\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/64055912-8587e080-cb44-11e9-94d6-0a1eec0ef4d9.png)\r\n(screenshot is from VS 16.3)"},{"Id":"10321128871","Type":"IssuesEvent","CreatedAt":"2019-08-30T23:27:53","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8537","RelatedDescription":"Opened issue \"VS:  disable ngen for 16.3\" (#8537) at NuGet/Home","RelatedBody":"Most of the ngen-related work is in https://github.com/NuGet/NuGet.Client/tree/release-5.3.x.  However, 2 critical changes are in the dev but not yet the release-5.3.x branch.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/commit/34420e795cc382031b9ac6a4fc99cb168ac3351e\r\nhttps://github.com/NuGet/NuGet.Client/commit/243111be8a0e31755d95672797174f8ff0b3036e\r\n\r\nBefore cherry-picking these commits to the release-5.3.x branch, more validation is necessary, and there's little runway left for 16.3."},{"Id":"10320913025","Type":"IssuesEvent","CreatedAt":"2019-08-30T22:18:31","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8523","RelatedDescription":"Closed issue \"[Test Failure] Most packages’ package source link and package info are missing in the right panel of PM UI\" (#8523) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.4.0.6201\r\nVS Version: Master\\29228.166\r\nOS: Windows-10-Enterprise-19H1-04-05-2019\r\n## Detailed repro steps so we can see the same problem\r\n1. Launch VS and create a project (e.g. ASP .NET Core Web Application).\r\n2. Open PM UI of this project and click go to “Browse” tab.\r\n3. Select projects in the left panel and look at the package info in the right panel.\r\n## Expected\r\nEvery package’s package source link and package info show correctly.\r\n## Actual\r\nMost packages’ package source link and package info are missing in the right panel of PM UI as below screenshot.\r\n![PackageInfoLost](https://user-images.githubusercontent.com/20632625/63936490-7ea09580-ca92-11e9-9b87-73b7be670ee8.png)\r\n\r\n## Note\r\n1.Seems something wrong with today’s NuGet server since the packages showing are all OK after installing into the project.\r\n2.Repro after uninstalling the NuGet Client from the machine.\r\n"},{"Id":"10320871241","Type":"IssuesEvent","CreatedAt":"2019-08-30T22:07:17","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8536","RelatedDescription":"Opened issue \"Publish release notes for 5.3\" (#8536) at NuGet/Home","RelatedBody":"Likely should ship release notes for 5.3 when preview3 ships.\nFinalize soon."},{"Id":"10320618945","Type":"IssuesEvent","CreatedAt":"2019-08-30T21:07:35","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8535","RelatedDescription":"Opened issue \"Onboarding diagnostic files to IFeedbackDiagnosticFileProvider\" (#8535) at NuGet/Home","RelatedBody":"Please see email that I forwarded from @susanshi -- we should attempt to finish this sprint...or next - keeping Susan apprised of our timeline.\n\n(i think this is because we include a dgspec in our feedback reports to help understand more diagnostic info when somebody reports a problem.)"},{"Id":"10320605495","Type":"IssuesEvent","CreatedAt":"2019-08-30T21:04:36","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8531","RelatedDescription":"Closed issue \"Build:  CI pipeline failing to update build number\" (#8531) at NuGet/Home","RelatedBody":""},{"Id":"10319839322","Type":"IssuesEvent","CreatedAt":"2019-08-30T18:39:59","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8534","RelatedDescription":"Opened issue \"<Learning KR> understand the current blockers from packages.config to package reference\" (#8534) at NuGet/Home","RelatedBody":""},{"Id":"10319804697","Type":"IssuesEvent","CreatedAt":"2019-08-30T18:33:45","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8533","RelatedDescription":"Opened issue \"<Learning KR> Understand Microsoft internal usage of older nuget clients and protocols.\" (#8533) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-08-31T05:30:42.869095Z","RunDurationInMilliseconds":2647}