{"Data":{"Vue-Issues":{"Issues":[{"Id":"367462038","IsPullRequest":false,"CreatedAt":"2018-10-07T11:47:21","Actor":"cslee","Number":"8899","RawContent":null,"Title":"SSR hydration issue","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k3ln8nlmnr](https://codesandbox.io/s/k3ln8nlmnr)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis code causes hydration issue when run with SSR\r\n```\r\n<template>\r\n  <div>{{ emptyString }}<i v-if=\"falsyValue\">test</i></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      emptyString: '',\r\n      falsyValue: false\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nNo hydration issue\r\n\r\n### What is actually happening?\r\n[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside `<p>`, or missing `<tbody>`. Bailing hydration and performing full client-side render.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8899","RelatedDescription":"Closed issue \"SSR hydration issue\" (#8899)"},{"Id":"367524626","IsPullRequest":false,"CreatedAt":"2018-10-07T11:29:29","Actor":"FunnyB0y","Number":"8902","RawContent":null,"Title":"better categorisation of data fields","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, all of the data fields (data, props, methods, computed) are all accessed under `this`, which can make it quite confusing sometimes while developing as you're unsure whether you should be directly mutating the variable e.g. props. Separating them into their own containers, e.g. this.props, this.computed, would clear up confusion as well as allow a variable name being used for multiple data fields, e.g. `this.computed.getName`, `this.methods.getName`\r\n\r\n### What does the proposed API look like?\r\nprops => this.props\r\ncomputed => this.computed\r\nmethods => this.methods // maybe\r\ndata => this.data // could probably leave it as is too\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8902","RelatedDescription":"Closed issue \"better categorisation of data fields\" (#8902)"},{"Id":"367519896","IsPullRequest":true,"CreatedAt":"2018-10-07T04:20:27","Actor":"omarkdev","Number":"8901","RawContent":null,"Title":"refactor: remove some elses","State":"open","Body":"This pull request has a intention to remove some useless else's to simplify the code.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/vuejs/vue/pull/8901","RelatedDescription":"Open PR \"refactor: remove some elses\" (#8901)"},{"Id":"367514967","IsPullRequest":false,"CreatedAt":"2018-10-07T03:04:04","Actor":"geongeorge","Number":"8900","RawContent":null,"Title":"Array element in Template syntax is not updating(inside a component)","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vmmz5mykr7](https://codesandbox.io/s/vmmz5mykr7)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the reproduction link and click on an option. It'll say if you're correct or not. \r\nClick next question. \r\nThe DOM is not updated inside the component. \r\nlog button will log what the array variable options[] contains.\r\neach button in the question component contains one option.\r\n\r\n### What is expected?\r\nEach button in the result is supposed to have the corresponding option on it from the options[] array\r\n\r\n### What is actually happening?\r\noptions array is updated while the button remains to contain the old value.\r\nhttps://i.imgur.com/zDXrhvm.png\r\n\r\n---\r\nI believe this is a bug related to reactivity. I tried vm.$forceUpdate() and it seemed to work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8900","RelatedDescription":"Closed issue \"Array element in Template syntax is not updating(inside a component)\" (#8900)"},{"Id":"367291135","IsPullRequest":false,"CreatedAt":"2018-10-06T10:49:53","Actor":"NoRabbit","Number":"8898","RawContent":null,"Title":"Watcher does not fire immediately","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Lmn0ehcs/8/](https://jsfiddle.net/Lmn0ehcs/8/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the \"Update\" button.\r\n\r\n### What is expected?\r\nThe \"property change watched\" message should be in between the two other logs as the watcher should be fired right after the property has changed.\r\n\r\n- increasing property\r\n- property change watched 1 0\r\n- property increased\r\n\r\n\r\n\r\n### What is actually happening?\r\nThe \"property change watched\" message is dispatched after the two other logs, indicating that the second log was executed before the watcher while it should have executed after the property change.\r\n\r\n- increasing property\r\n- property increased\r\n- property change watched 1 0\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8898","RelatedDescription":"Closed issue \"Watcher does not fire immediately\" (#8898)"},{"Id":"367194048","IsPullRequest":false,"CreatedAt":"2018-10-05T13:52:12","Actor":"Herteby","Number":"8897","RawContent":null,"Title":"Using v-for on a functional component which returns multiple nodes renders \"undefined\"","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Herteby/r2nb09eg/](https://jsfiddle.net/Herteby/r2nb09eg/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nAs the title says, or just look at the fiddle :)\r\n\r\n### What is expected?\r\nThe slots should be rendered properly.\r\nThe combination of v-for and \"fragment\" should return an Array of VNodes.\r\n\r\n### What is actually happening?\r\nThe slots render as \"undefined\"\r\nIt returns an Array of Arrays of Vnodes.\r\n\r\n---\r\nThe problem seems to be that the result becomes an Array of Arrays of VNodes. Seems like it ought to be flattened.\r\nFor some reason, if you add an extra element as a sibling, it fixes it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8897","RelatedDescription":"Closed issue \"Using v-for on a functional component which returns multiple nodes renders \"undefined\"\" (#8897)"},{"Id":"366838489","IsPullRequest":false,"CreatedAt":"2018-10-04T15:13:03","Actor":"rachelrine","Number":"8896","RawContent":null,"Title":"Production version shows console warning for development mode","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/installation.html#Direct-lt-script-gt-Include](https://vuejs.org/v2/guide/installation.html#Direct-lt-script-gt-Include)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Download production version, vue.min.js.\r\n2. Add script to page and check console.\r\n\r\n### What is expected?\r\nProduction mode, no warnings\r\n\r\n### What is actually happening?\r\nThe following warnings appear:\r\n\r\n1. Download the Vue Devtools extension for a better development experience:\r\nhttps://github.com/vuejs/vue-devtools\r\n\r\n2. You are running Vue in development mode.\r\nMake sure to turn on production mode when deploying for production.\r\nSee more tips at https://vuejs.org/guide/deployment.html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8896","RelatedDescription":"Closed issue \"Production version shows console warning for development mode\" (#8896)"},{"Id":"366669340","IsPullRequest":false,"CreatedAt":"2018-10-04T08:07:44","Actor":"Eibx","Number":"8895","RawContent":null,"Title":"Non-breaking space acts different than other characters - outputs \"&nbsp;\" in template when passed via props","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/756973/](https://jsfiddle.net/50wL7mdz/756973/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a new component that accepts a string prop.\r\n1. Display the prop within the component's template.\r\n1. Use the component in a Vue application and pass a string containing a non-breaking space character for the prop.\r\n\r\n### What is expected?\r\nThe output should contain a non breaking space\r\n\r\n### What is actually happening?\r\nThe output shows `&nbsp;`\r\n\r\n---\r\nIn the example provided I've made 3 cases\r\n\r\n- First case is that `&#160;` get turned into `&nbsp;`\r\n- Second case is that in a long list of UTF-8 characters only `NON-BREAKING SPACE` is escaped.\r\n- And third when getting the same list of characters, but retrieving it from a regular `HTMLElement` with `document.querySelector('#test').title` the character aren't escape.\r\n\r\n\r\n**Note**: When copying the non-breaking space character it might turn into a regular space in the clipboard. Therefor use https://en.wikipedia.org/wiki/Non-breaking_space#Keyboard_entry_methods to make sure how to insert the character.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8895","RelatedDescription":"Open issue \"Non-breaking space acts different than other characters - outputs \"&nbsp;\" in template when passed via props\" (#8895)"},{"Id":"366658413","IsPullRequest":false,"CreatedAt":"2018-10-04T07:33:58","Actor":"eeerrrttty","Number":"8894","RawContent":null,"Title":"\"TypeError: __WEBPACK_IMPORTED_MODULE_2_firebase__.firestore is not a function\"","State":"closed","Body":"Probable a incompatibility with firebase SDK 5.5.2\r\n\r\nAfter updating my firebase to 5.5.2 from 5.4.2 i got this error ->\r\n\r\nTypeError: __WEBPACK_IMPORTED_MODULE_2_firebase__.firestore is not a function\r\n\r\nMy app was working pretty well before, returning to version 5.4.2 stops the bug.","Url":"https://github.com/vuejs/vue/issues/8894","RelatedDescription":"Closed issue \"\"TypeError: __WEBPACK_IMPORTED_MODULE_2_firebase__.firestore is not a function\"\" (#8894)"},{"Id":"366520144","IsPullRequest":false,"CreatedAt":"2018-10-03T20:46:23","Actor":"flytomek","Number":"8893","RawContent":null,"Title":"Can't set default selected value when v-model is defined","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/50wL7mdz/756766/](http://jsfiddle.net/50wL7mdz/756766/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Run the code, default selected value is empty (expected is \"3\")\r\n2. Delete v-model=\"test\" from select tag\r\n3. Selected value is 3, as expected\r\n\r\n### What is expected?\r\nSelected default value of \"3\"\r\n\r\n### What is actually happening?\r\nEmpty selected value\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8893","RelatedDescription":"Closed issue \"Can't set default selected value when v-model is defined\" (#8893)"},{"Id":"366320342","IsPullRequest":false,"CreatedAt":"2018-10-03T18:50:18","Actor":"michgeek","Number":"8890","RawContent":null,"Title":"Using both v-show and v-if on a transition will not trigger leave transition","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/w3vkqg4x/1/](https://jsfiddle.net/w3vkqg4x/1/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse `v-if` and `v-show` under transition component: \r\n\r\n```html\r\n<transition><expensive-child v-if=\"vif\" v-show=\"vshow\"></expensive-child></transition>\r\n```\r\n\r\n### What is expected?\r\nChanging `v-if=false` and keep `v-show=true` should trigger the leave transition.\r\n\r\n### What is actually happening?\r\nThe element just disappear without performing the leave transition.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8890","RelatedDescription":"Closed issue \"Using both v-show and v-if on a transition will not trigger leave transition\" (#8890)"},{"Id":"366341461","IsPullRequest":false,"CreatedAt":"2018-10-03T18:49:38","Actor":"ilyaskorik","Number":"8891","RawContent":null,"Title":"Recent versions of Vue do not work with lazy (async) components with node and SSR","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n\r\nI migrated the reference project vue-hackernews to Webpack 4 and the latest libraries\r\n\r\n[https://github.com/ilyaskorik/vue-hackernews-3.0](https://github.com/ilyaskorik/vue-hackernews-3.0)\r\n\r\n### Steps to reproduce\r\nBuild and run:\r\n\r\nyarn install; yarn build; yarn start;\r\n\r\nOpen localhost:8080\r\n\r\n### What is expected?\r\nI expect the site to work with lazy components\r\n\r\n### What is actually happening?\r\nNodejs does not finish import a component, Promise in vue-router never resolve itself\r\n\r\n---\r\nI tried to build a similar project using vue-cli, also failed. I tried node 8, node 10. It will be great to understand what the error is.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8891","RelatedDescription":"Closed issue \"Recent versions of Vue do not work with lazy (async) components with node and SSR\" (#8891)"},{"Id":"366432903","IsPullRequest":true,"CreatedAt":"2018-10-03T17:50:33","Actor":"philson-philip","Number":"8892","RawContent":null,"Title":"edited title","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8892","RelatedDescription":"Closed or merged PR \"edited title\" (#8892)"},{"Id":"365799254","IsPullRequest":false,"CreatedAt":"2018-10-02T08:51:17","Actor":"inductor","Number":"8889","RawContent":null,"Title":"Cannot work with webpack-subresource-integrity","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/waysact/webpack-subresource-integrity/issues/87](https://github.com/waysact/webpack-subresource-integrity/issues/87)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOn Nuxt.js 2.0.0\r\n\r\n```javascript\r\n    extend(config, ctx) {\r\n      config.output.crossOriginLoading = \"anonymous\";\r\n      if (ctx.isClient) {\r\n        config.plugins.push(\r\n          new SriPlugin({\r\n            hashFuncNames: [\"sha256\", \"sha384\"]\r\n          })\r\n        );\r\n      }\r\n    }\r\n```\r\n\r\nUsing the plugin with the setting above has no errors bu t the generated html with nuxt generate and nuxt start does not have integrity in the script tag.\r\n\r\n### What is expected?\r\nintegrity with hash should be in the script tag for SRI\r\n\r\n### What is actually happening?\r\nintegrity does not appear\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8889","RelatedDescription":"Open issue \"Cannot work with webpack-subresource-integrity\" (#8889)"},{"Id":"365767263","IsPullRequest":false,"CreatedAt":"2018-10-02T07:09:35","Actor":"va3093","Number":"8888","RawContent":null,"Title":"Add demo gif to README","State":"closed","Body":"__Disclaimer: This is a bot__\n\n It looks like your repo is trending. The [github_trending_videos](https://www.instagram.com/github_trending_videos/) Instgram account automatically shows the demo gifs of trending repos in Github.\n\nYour README doesn't seem to have any demo gifs. Add one and the next time the parser runs it will pick it up and post it on its Instagram feed. If you don't want to just close this issue we won't bother you again.","Url":"https://github.com/vuejs/vue/issues/8888","RelatedDescription":"Closed issue \"Add demo gif to README\" (#8888)"},{"Id":"365742422","IsPullRequest":true,"CreatedAt":"2018-10-02T05:56:25","Actor":"spencer1573","Number":"8887","RawContent":null,"Title":"simple grammar fix in readme. eliminated extra 'the'","State":"closed","Body":"it makes more sense to take the extra the out for readability.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8887","RelatedDescription":"Closed or merged PR \"simple grammar fix in readme. eliminated extra 'the'\" (#8887)"},{"Id":"365736952","IsPullRequest":false,"CreatedAt":"2018-10-02T04:30:16","Actor":"wizardnet972","Number":"8886","RawContent":null,"Title":"Vue custom module resolution doesn't seem to work","State":"closed","Body":"I create a new `vue` project via `vue/cli`: `vue create hello-world` (all the options he asks are selected).\r\n\r\nThen I create a `index.ts` file in `hello-world/libs/test-lib` folder with the following content:\r\n\r\n```\r\nexport const item = 1;\r\n```\r\nIn main.ts and home.vue I imported this module to use them:\r\n```\r\nimport {item} from '@libs/test-lib';\r\n\r\nconsole.log('item', item);\r\n```\r\n\r\nand in my tsconfig.json I add:\r\n\r\n```\r\n \"@libs/*\": [\r\n   \"libs/*\"\r\n  ]\r\n```\r\nMy vscode is resolve this path. but when I try to run build or serve (npm run build) As a result, I am getting an error:\r\n```\r\n@libs/test-lib in ./src/main.ts, ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--13-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/Home.vue?vue&type=script&lang=ts&\r\n\r\nTo install it, you can run: npm install --save @libs/test-lib\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/4997825/46329264-f6610880-c614-11e8-8808-9c12b746e6c5.png)\r\n\r\n**Any help would be much appreciated.**\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/8886","RelatedDescription":"Closed issue \"Vue custom module resolution doesn't seem to work\" (#8886)"},{"Id":"365674925","IsPullRequest":false,"CreatedAt":"2018-10-01T23:44:46","Actor":"nikitaGetman","Number":"8885","RawContent":null,"Title":"v-model.lazy doen't update its value on Enter click","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/NikitaGetman/nrst6hf4/](https://jsfiddle.net/NikitaGetman/nrst6hf4/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Type some text in input\r\n2. Press Enter\r\n3. Paragraph updates well but input.value doesn't\r\n4. If you change focus instead of press Enter it updates value ok\r\n\r\n### What is expected?\r\ninput.value has to be updated with paragraph\r\n\r\n### What is actually happening?\r\nonly paragraph updated\r\n\r\n---\r\nvue 2.2.1 does't have this issue\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8885","RelatedDescription":"Closed issue \"v-model.lazy doen't update its value on Enter click\" (#8885)"},{"Id":"365538969","IsPullRequest":false,"CreatedAt":"2018-10-01T16:56:44","Actor":"pengstrom","Number":"8883","RawContent":null,"Title":"Custom multiple select input does not work correctly","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://gitlab.com/pengstrom/vue-multi-select-bug/](https://gitlab.com/pengstrom/vue-multi-select-bug/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSelect multiple options in a custom select input. Compare with direct input.\r\n\r\n### What is expected?\r\nThe model selection should be an array of selected options.\r\n\r\n### What is actually happening?\r\nOnly one element is arbitrarily returned.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8883","RelatedDescription":"Closed issue \"Custom multiple select input does not work correctly\" (#8883)"},{"Id":"365540225","IsPullRequest":false,"CreatedAt":"2018-10-01T16:25:02","Actor":"mitar","Number":"8884","RawContent":null,"Title":"An API to allow replacing observer implementation with alternative implementation","State":"open","Body":"### What problem does this feature solve?\r\nThis is a followup to https://github.com/vuejs/vue/pull/4652. For integration of Vue with existing Tracker-based Meteor apps, one approach how to assure fur compatibility is to implement Tracker on top of observer implementation. This has been proven to work great with 2.x version and it just needed a bit more access to Vue observer internals than what was already available.\r\n\r\nI would suggest that in 3.x there is a simple way to register an alternative Vue observer implementation. In this way 3rd party libraries could extend new Vue observer implementation with additional things and then register it back for Vue to use it.\r\n\r\n### What does the proposed API look like?\r\nIt could be something as simple as `Vue.useReactivity(module)`. It would be on `module`'s author to assure that the alternative implementation is compatible and works well with Vue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8884","RelatedDescription":"Open issue \"An API to allow replacing observer implementation with alternative implementation\" (#8884)"},{"Id":"365490466","IsPullRequest":false,"CreatedAt":"2018-10-01T15:47:29","Actor":"chessydk","Number":"8882","RawContent":null,"Title":"Component template content: html encoded chars in attributes are not properly decoded","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/chessydk/pen/ZqGqbr?editors=1010#0](https://codepen.io/chessydk/pen/ZqGqbr?editors=1010#0)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHover over the \"æøå\".\r\n\r\n### What is expected?\r\nI would expect html attributes to be html-decoded, just like text-nodes, so when you hover over the text you should see \"æøå\"\r\n\r\n### What is actually happening?\r\nYou see `\"&#230;&#248;&#229;\"`\r\n\r\n---\r\nContext: Serving html from CMS backend as JSON and creating dynamic Vue component with the server-generated html, which can have danish characters in attributes (mostly in object-data bindings like :model=\"{prop: &#230;&#248;&#229;}\" , but the problem exists for all attributes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8882","RelatedDescription":"Closed issue \"Component template content: html encoded chars in attributes are not properly decoded\" (#8882)"},{"Id":"365482870","IsPullRequest":true,"CreatedAt":"2018-10-01T14:16:26","Actor":"DanielSanRocha","Number":"8881","RawContent":null,"Title":"fix #8832: duplicate keys detected not warned","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8881","RelatedDescription":"Open PR \"fix #8832: duplicate keys detected not warned\" (#8881)"},{"Id":"365453536","IsPullRequest":false,"CreatedAt":"2018-10-01T13:46:30","Actor":"Demivan","Number":"8880","RawContent":null,"Title":"Cachable filters","State":"closed","Body":"### What problem does this feature solve?\r\nThere are a lot of issues created about filters: #8497, #7304, #5920, #5682, #5109 etc.  \r\nMost of the issues are created because filters are executed multiple times.  \r\nFor all of these issues answer is the same: for vdom comparison vue needs to run filter and then compares resulting dom tree - use computed properties instead.\r\n\r\nBecause filters are not cached right now there is no reason to use filters in mustache interpolations - they are the same as methods.  \r\nAngular filters for example are only evaluated when inputs change and this makes them much more usable.\r\nFilters are supposed to be pure functions anyway and I see no reason to not cache them.\r\n\r\nMaking filters cachable (like computed properties) opens up possibilities for using them in mustache interpolations.\r\nExamples where cachable filters will be beneficial:\r\n* vue-i18n by @kazupon works around this issue by having `v-t` directive to cache result of the translation. \r\nhttps://kazupon.github.io/vue-i18n/guide/directive.html#t-vs-v-t But is less flexible then mustache interpolation:\r\nIt would be more readable and flexible instead of:\r\n ```js\r\n<p v-t=\"'hello'\"></p>\r\n```\r\n to write\r\n ```js\r\n<p>{{ \"hello\" | $t }}</p>\r\n```\r\nand it will be possible to do this:\r\n```js\r\n<p>{{ \"hello\" | $t }} {{ \"world\" | $t }}</p>\r\n```\r\n* Use Moment.js for date formatting. Moment.js is slow and because filters are not cached it is not really usable, especially when rendering lists.\r\n* All other places for formatting text, dates etc. \r\n* Creating computed property for each formatted value (text, date etc) is just a lot of work and unnecessary code to write.\r\n\r\n### What does the proposed API look like?\r\nMake all filters work like computed properties instead of methods.  \r\nOr add different symbol (instead of pipe) to denote filters that are cachable (pure).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8880","RelatedDescription":"Closed issue \"Cachable filters\" (#8880)"},{"Id":"365354567","IsPullRequest":false,"CreatedAt":"2018-10-01T11:11:05","Actor":"alexbazhin-alphaflightguru","Number":"8879","RawContent":null,"Title":"Memory leak","State":"closed","Body":"### What problem does this feature solve?\r\nOn the screen you can see the output of the Vue-component in the method destroyed. After destroy, the Vue-component continues to store a lot of data that remains in memory. This causes a memory leak.\r\n\r\n![Image 1](https://cdn1.savepice.ru/uploads/2018/10/1/c5f452f83f2803f80fd6e221782d2340-full.jpg)\r\n\r\nThese screens show the amount of data that is stored in memory when the routing changes (I use vue-router - v.3.0.1). The number of Vue-components is constantly growing.\r\n\r\n### Page 1\r\n\r\n![Image 2](https://cdn1.savepice.ru/uploads/2018/10/1/f2cbf13281dcf74bfc227529f2663e74-full.jpg)\r\n\r\n### Page 2\r\n\r\n![Image 3](https://cdn1.savepice.ru/uploads/2018/10/1/6b9980aee1fc07c0cf25a5a9076f7b78-full.jpg)\r\n\r\n### Page 3\r\n\r\n![Image 4](https://cdn1.savepice.ru/uploads/2018/10/1/1986c133b3447ff152113aaa29386238-full.jpg)\r\n\r\n**After that the memory usage goes up to 1Gb.**\r\n\r\n### What does the proposed API look like?\r\nWhy is this happening?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8879","RelatedDescription":"Closed issue \"Memory leak\" (#8879)"},{"Id":"365348089","IsPullRequest":false,"CreatedAt":"2018-10-01T08:00:47","Actor":"nicolas-t","Number":"8878","RawContent":null,"Title":"Functional component not rendering named slot (following #8871)","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/p9mx85qpz0](https://codesandbox.io/s/p9mx85qpz0)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnothing in particular.\r\n\r\n### What is expected?\r\nIt should display `Hello World`  \r\n\r\n### What is actually happening?\r\nIt displays `Hello`\r\n\r\n---\r\nFollowing https://github.com/vuejs/vue/issues/8871 I made App.vue non-functional: \r\n\r\nIf you make Child.vue non-functional it works: https://codesandbox.io/s/pw5lzx2w90\r\n\r\nIf you use default (not named) slots it works: https://codesandbox.io/s/04jrp3y4ln\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8878","RelatedDescription":"Open issue \"Functional component not rendering named slot (following #8871)\" (#8878)"},{"Id":"365347818","IsPullRequest":false,"CreatedAt":"2018-10-01T07:59:51","Actor":"alexbazhin-alphaflightguru","Number":"8877","RawContent":null,"Title":"Memory leak","State":"closed","Body":"### Version\r\n\r\n2.5.17\r\n\r\nOn the screen you can see the output of the Vue-component in the method `destroyed`. After destroy, the Vue-component continues to store a lot of data that remains in memory. This causes a memory leak.\r\n\r\n![screen1](https://user-images.githubusercontent.com/43741132/46275669-6e242a00-c566-11e8-9244-c5367afeeb1b.jpg)\r\n\r\n### Demonstration of accumulation of Vue-components\r\n\r\nThese screens show the amount of data that is stored in memory when the routing changes (I use vue-router - v.3.0.1). The number of Vue-components is constantly growing.\r\n\r\n## Page 1\r\n![screen2](https://user-images.githubusercontent.com/43741132/46275670-6e242a00-c566-11e8-8081-767858167706.jpg)\r\n\r\n## Page 2\r\n![screen3](https://user-images.githubusercontent.com/43741132/46275671-6e242a00-c566-11e8-949c-59a1827f794d.jpg)\r\n\r\n## Page 3\r\n![screen4](https://user-images.githubusercontent.com/43741132/46275672-6e242a00-c566-11e8-94c6-31c86f788dad.jpg)\r\n\r\n**After that the memory usage goes up to 1Gb.**\r\n\r\n### Why is this happening?\r\n","Url":"https://github.com/vuejs/vue/issues/8877","RelatedDescription":"Closed issue \"Memory leak\" (#8877)"},{"Id":"365341918","IsPullRequest":false,"CreatedAt":"2018-10-01T07:39:30","Actor":"Mori-girl","Number":"8876","RawContent":null,"Title":"Binding the bind directive and change events to the <input/> tag doesn‘t work","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/MoriGirl/50wL7mdz/755097/](https://jsfiddle.net/MoriGirl/50wL7mdz/755097/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nEnter two numbers less than 10(etc, 7 , 8) in succession twice, observe page display and console output.\r\n\r\n### What is expected?\r\nI originally expected the page and console to display 10 after each input.\r\n\r\n### What is actually happening?\r\nWhen I input numbers less than 10 for two consecutive times, such as ( 7, 8 ), it was observed that after the first input, the page and console display 10 at the same time, but after the second input, the page displays 8 and the console displays 10.\r\n\r\n---\r\n## reluctant solution\r\n1. Get the native input element and modify its value\r\n\r\n   *  use ref   \r\n```\r\n<input  :value='num' @change='handleChange' ref='inputnumber' />\r\n...\r\nhandleChange(event){\r\n   this.num=this.check(event.target.value);\r\n   this.$refs.inputnumber.value=this.num;\r\n}\r\n``` \r\n   *  use event  \r\n\r\n```\r\nhandleChange(event){\r\n    this.num=this.check(event.target.value);\r\n    event.target.value=this.num;\r\n}\r\n```\r\nbut if I replace the input element with a custom component, this may not work.\r\n2.  use both v-model and watch\r\n```\r\n<input  v-model.lazy='num' />  //.lazy: Data synchronization using the change event\r\n...\r\nwatch:{\r\n    num:function(v){\r\n      \tthis.num=this.check(v);\r\n    }\r\n},\r\n```\r\n\r\nI want to know why such  outputs appear and if there is a better solution.\r\nThank you！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8876","RelatedDescription":"Open issue \"Binding the bind directive and change events to the <input/> tag doesn‘t work\" (#8876)"},{"Id":"365333296","IsPullRequest":false,"CreatedAt":"2018-10-01T07:08:32","Actor":"Mori-girl","Number":"8875","RawContent":null,"Title":"Binding the bind directive and change events to the <input/> tag doesn‘t work","State":"closed","Body":"## Vue.js version\r\n2.5.17\r\n## Overview\r\nI have a problem recently.I want to limit the range of numbers entered by the input tag,so I don't want to use v-model directive. When the input box loses focus，I need to check if the number is within reasonable limits.\r\nI wrote the following code：\r\n```\r\n<input  :value='num' type='text' @change='handleChange' />\r\ndata:function(){\r\n  return {\r\n    num:20,   //default value:20\r\n    min: 10 ,\r\n    max:100\r\n  }\r\n},\r\nmethods:{\r\n  check(v){\r\n      v=Number(v);\r\n      if(v>=this.max){\r\n         return this.max;\r\n      }else if(v<=this.min){\r\n         return this.min;\r\n      }else{\r\n         return v;\r\n      }\r\n    return this.min;\r\n  },\r\n  handleChange(event){\r\n    this.num=this.check(event.target.value);\r\n    console.log(this.num);\r\n  }\r\n}\r\n```\r\n## Steps\r\nEnter the number randomly in the input box, then move the mouse out of the input box, observe whether the input box number meets the expectations, and observe the console output number.\r\n## Problems\r\nWhen I input numbers less than 10 for two consecutive times, such as ( 7, 8 ), it was observed that after the first input, the page and console display 10 at the same time, but after the second input, the page displays 8 and the console displays 10.\r\nI originally expected the page and console to display 10 after each input.\r\n## reluctant solution\r\n1. Get the native input element and modify its value\r\n\r\n*  use ref   \r\n```\r\n<input  :value='num' @change='handleChange' ref='inputnumber' />\r\n...\r\nhandleChange(event){\r\n   this.num=this.check(event.target.value);\r\n   this.$refs.inputnumber.value=this.num;\r\n}\r\n``` \r\n   *  use event  \r\n\r\n```\r\nhandleChange(event){\r\n    this.num=this.check(event.target.value);\r\n    event.target.value=this.num;\r\n}\r\n```\r\nbut if I replace the input element with a custom component, this may not work.\r\n2.  use both v-model and watch\r\n```\r\n<input  v-model.lazy='num' />  //.lazy: Data synchronization using the change event\r\n...\r\nwatch:{\r\n    num:function(v){\r\n      \tthis.num=this.check(v);\r\n    }\r\n},\r\n```\r\n\r\nI want to know why such  outputs appear and if there is a better solution.\r\nThank you！","Url":"https://github.com/vuejs/vue/issues/8875","RelatedDescription":"Closed issue \"Binding the bind directive and change events to the <input/> tag doesn‘t work\" (#8875)"},{"Id":"365248330","IsPullRequest":false,"CreatedAt":"2018-09-30T18:32:24","Actor":"nikitaGetman","Number":"8874","RawContent":null,"Title":"v-model.lazy doesn`t update input value when I press Enter","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/NikitaGetman/nrst6hf4/](https://jsfiddle.net/NikitaGetman/nrst6hf4/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open console\r\n2. Type something in input and press Enter\r\n3. data updated and getter called but value the same\r\n4. Type something in input and change focus\r\n5. It works well!\r\n\r\n### What is expected?\r\nWhen you press Enter value have to update too, like in previus version\r\n\r\n### What is actually happening?\r\nWhen you press Enter getter called but value the same\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8874","RelatedDescription":"Closed issue \"v-model.lazy doesn`t update input value when I press Enter\" (#8874)"},{"Id":"365247145","IsPullRequest":false,"CreatedAt":"2018-09-30T18:19:47","Actor":"thgh","Number":"8873","RawContent":null,"Title":"Optional <template> tags in SFC","State":"closed","Body":"### What problem does this feature solve?\r\n* HTML completion is still suboptimal because of the template tags (Sublime Text)\r\n* Less clutter and indentation\r\n* It's been done before in [Svelte](https://svelte.technology/guide)\r\n\r\n### What does the proposed API look like?\r\nApp.vue:\r\n```\r\n<h1>Hello {{name}}!</h1>\r\n<script>\r\nexport default { ... }\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8873","RelatedDescription":"Closed issue \"Optional <template> tags in SFC\" (#8873)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"367622274","IsPullRequest":true,"CreatedAt":"2018-10-08T02:37:49","Actor":"chiaweilee","Number":"2417","RawContent":null,"Title":"[vue-router] must call Vue.use(VueRouter) before creating a router","State":"open","Body":"Assert warning if forget to call Vue.use(VueRouter) before creating.","Url":"https://github.com/vuejs/vue-router/pull/2417","RelatedDescription":"Open PR \"[vue-router] must call Vue.use(VueRouter) before creating a router\" (#2417)"},{"Id":"365594628","IsPullRequest":true,"CreatedAt":"2018-10-07T18:05:58","Actor":"Slashgear","Number":"2411","RawContent":null,"Title":"docs(vuepress): move fr gitbook doc to vuepress","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThe french doc translation was hidden in the previous gitbook configuration.\r\nThis heavy PR moves all the files to the vuepress config.\r\n\r\n- [x] define fr-FR language in conf\r\n- [x] move gitbook doc in vuepress\r\n- [x] reshape API page to match vuepress structure\r\n\r\n😸 Sorry for the long PR, it is mainly doc duplication\r\n\r\nShould the French gitbook documentation be removed ?","Url":"https://github.com/vuejs/vue-router/pull/2411","RelatedDescription":"Closed or merged PR \"docs(vuepress): move fr gitbook doc to vuepress\" (#2411)"},{"Id":"367376297","IsPullRequest":false,"CreatedAt":"2018-10-06T11:29:53","Actor":"wcjr","Number":"2416","RawContent":null,"Title":"Give the Router plugin a config option","State":"closed","Body":"### What problem does this feature solve?\r\nRight now we are required to send in a \"configured router\" to the instantiation options of the Vue instance, example:\r\n\r\n```\r\nimport Vue from 'vue';\r\nimport router from './plugins/router';\r\nimport App from './App.vue';\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n```\r\n**AND**\r\n\r\nwe are also required to \"`use`\" the plugin, example:\r\n```\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport homeRoutes from '@/home/routes';\r\nimport passwordRoutes from '@/password/routes';\r\nimport profileRoutes from '@/profile/routes';\r\n\r\nVue.use(Router);\r\n\r\nconst configuredRouter = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    ...homeRoutes,\r\n    ...passwordRoutes,\r\n    ...profileRoutes,\r\n    {\r\n      path: '*',\r\n      component: {\r\n        render: h => h('span', 'page not found')\r\n      }\r\n    }\r\n  ]\r\n});\r\n\r\nexport default configuredRouter;\r\n```\r\n\r\nThis feels a little redundant to me.\r\n\r\n\r\n### What does the proposed API look like?\r\nI'm requesting we be able to configure the Router at time of plugin installation, i.e., `Vue.use(Router, options)`, example:\r\n```\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport homeRoutes from '@/home/routes';\r\nimport passwordRoutes from '@/password/routes';\r\nimport profileRoutes from '@/profile/routes';\r\n\r\nVue.use(Router, {\r\n  mode: 'history',\r\n  routes: [\r\n    ...homeRoutes,\r\n    ...passwordRoutes,\r\n    ...profileRoutes,\r\n    {\r\n      path: '*',\r\n      component: {\r\n        render: h => h('span', 'page not found')\r\n      }\r\n    }\r\n  ]\r\n});\r\n```\r\n\r\nso the `main.js` could look like this:\r\n```\r\nimport Vue from 'vue';\r\nimport './plugins/router';\r\nimport App from './App.vue';\r\n\r\nnew Vue({\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n```\r\n\r\nDevelopers could save a step in bootstrapping if this were available and I believe it could be done in a backward compatible way.  Vuetify does it this way and it seems like a cleaner approach to me.\r\n\r\nThanks for consideration.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2416","RelatedDescription":"Closed issue \"Give the Router plugin a config option\" (#2416)"},{"Id":"366977430","IsPullRequest":true,"CreatedAt":"2018-10-05T10:42:48","Actor":"HusamIbrahim","Number":"2415","RawContent":null,"Title":"[docs] Fix typo in redirect-and-alias.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2415","RelatedDescription":"Closed or merged PR \"[docs] Fix typo in redirect-and-alias.md\" (#2415)"},{"Id":"366238028","IsPullRequest":false,"CreatedAt":"2018-10-03T11:22:34","Actor":"tomerBluevine","Number":"2414","RawContent":null,"Title":"Param not present when pushing the same route name with params","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/TomerShmargadBluevine/7tewd56u/11/](https://jsfiddle.net/TomerShmargadBluevine/7tewd56u/11/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a route definition for /user\r\n2. Push user to router\r\n3. Push user to router with params - {id: 'foo'}\r\n\r\n### What is expected?\r\nThe route params will change to {id: 'foo'}\r\n\r\n### What is actually happening?\r\nThe route params is an empty object.\r\n\r\n---\r\nIf you try to:\r\n1. Push user2 to router\r\n3. Push user to router with params - {id: 'foo'}\r\n\r\nIt works!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2414","RelatedDescription":"Closed issue \"Param not present when pushing the same route name with params\" (#2414)"},{"Id":"366160068","IsPullRequest":false,"CreatedAt":"2018-10-03T06:14:06","Actor":"graham-sportsmgmt","Number":"2413","RawContent":null,"Title":"[Docs] Clearly show how to keep router reference after ajax callbacks","State":"closed","Body":"### What problem does this feature solve?\r\nIt is unclear how to maintain a reference to the router once \"this\" changes inside a callback (such as an ajax request)\r\n\r\n### What does the proposed API look like?\r\nPlease change the \"Programmatic Navigation\" documentation to show how to declare a variable outside of the callbacks that keep a reference to the router.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2413","RelatedDescription":"Closed issue \"[Docs] Clearly show how to keep router reference after ajax callbacks\" (#2413)"},{"Id":"365619891","IsPullRequest":false,"CreatedAt":"2018-10-01T21:07:26","Actor":"sarmanulco","Number":"2412","RawContent":null,"Title":"Vue router opened with nodejs outpus me an error on router.push","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://gist.github.com/sarmanulco/9feab4fe1ea84626bb6ffbe7b65ec93c](https://gist.github.com/sarmanulco/9feab4fe1ea84626bb6ffbe7b65ec93c)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncreate a project like in the package json in the gist on the link I have written and run it with nodejs and not in the browser\r\n\r\n### What is expected?\r\nIn the output should appear:\r\n```\r\n<div>\r\n   <h1>Hola vuex</h1>\r\n   <h1>Foo</h1>\r\n</div>\r\n```\r\n\r\n### What is actually happening?\r\nOutputs the error addressed in the gist github\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2412","RelatedDescription":"Closed issue \"Vue router opened with nodejs outpus me an error on router.push\" (#2412)"},{"Id":"364750282","IsPullRequest":false,"CreatedAt":"2018-09-28T05:52:56","Actor":"jamesjianpeng","Number":"2410","RawContent":null,"Title":"TS2339: Property 'afterEach' does not exist on type 'object'.","State":"closed","Body":" error info:\r\n```\r\n\r\nERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts\r\n./src/app-ts-vue/router/guards.ts\r\n[tsl] ERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts(6,12)\r\n      TS2339: Property 'beforeEach' does not exist on type 'object'.\r\n\r\nERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts\r\n./src/app-ts-vue/router/guards.ts\r\n[tsl] ERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts(10,12)\r\n      TS2339: Property 'afterEach' does not exist on type 'object'.\r\n``` \r\n\r\n\r\n- package.json\r\n  ```json\r\n     \"@babel/core\": \"^7.1.0\",\r\n    \"@babel/plugin-syntax-dynamic-import\": \"^7.0.0\",\r\n    \"@babel/preset-env\": \"^7.1.0\",\r\n    \"babel-loader\": \"^8.0.2\",\r\n    \"clean-webpack-plugin\": \"^0.1.19\",\r\n    \"commitizen\": \"^2.10.1\",\r\n    \"css-loader\": \"^1.0.0\",\r\n    \"cz-conventional-changelog\": \"^2.1.0\",\r\n    \"html-webpack-plugin\": \"^3.2.0\",\r\n    \"node-sass\": \"^4.9.3\",\r\n    \"sass-loader\": \"^7.1.0\",\r\n    \"ts-loader\": \"^5.2.1\",\r\n    \"typescript\": \"^3.0.3\",\r\n    \"vue\": \"^2.5.17\",\r\n    \"vue-loader\": \"^15.4.2\",\r\n    \"vue-router\": \"^3.0.1\",\r\n    \"vue-style-loader\": \"^4.1.2\",\r\n    \"vue-template-compiler\": \"^2.5.17\",\r\n    \"webpack\": \"^4.20.2\",\r\n    \"webpack-cli\": \"^3.1.1\",\r\n    \"webpack-dev-server\": \"^3.1.9\",\r\n    \"webpack-merge\": \"^4.1.4\"\r\n  ``\r\n\r\n- webpack.ts.vue.conf.js\r\n```js\r\n/**\r\n * @file 只构建 TypeScript and Vue\r\n * @author jamesjianpeng\r\n */\r\nconst path = require('path');\r\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\r\nconst { VueLoaderPlugin } = require('vue-loader');\r\n\r\nmodule.exports = {\r\n    mode: 'none',\r\n    entry: {\r\n        mian: path.resolve(__dirname, '../src/app-ts-vue/index.ts')\r\n    },\r\n    output: {\r\n        path: path.resolve(__dirname, '../dist'),\r\n        publicPath: './',\r\n        filename: '[name].js'\r\n    },\r\n    resolve: {\r\n        // alias: {\r\n        //    /**\r\n        //     * @todo https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6\r\n        //     * 需要编译\r\n        //     */\r\n        //    'vue$': 'vue/dist/vue.esm.js'\r\n        // }\r\n        // extensions: [ '.ts', '.vue', '.json' ] // extensions 的数组长度大于等于 3\r\n    },\r\n    externals: {\r\n        vue: 'Vue', // 需要知道库中暴露出来的 name，key 是我们在项目 import Vue from 'vue', value 就是 资源中暴露出来的名字\r\n        'vue-router': 'VueRouter'\r\n    },\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.vue$/,\r\n                loader: 'vue-loader'\r\n            },\r\n            {\r\n                test: /\\.scss/,\r\n                use: [\r\n                    'vue-style-loader',\r\n                    'css-loader',\r\n                    'sass-loader'\r\n                ]\r\n            },\r\n            {\r\n                test: /.ts$/,\r\n                loader: 'ts-loader',\r\n                options: {\r\n                    appendTsSuffixTo: [ /\\.vue$/ ]\r\n                },\r\n                exclude: /node_module/\r\n            }\r\n        ]\r\n    },\r\n    plugins: [\r\n        new VueLoaderPlugin(),\r\n        new HtmlWebpackPlugin({\r\n            template: path.resolve(__dirname, '../src/app-ts-vue/index-ts-vue.html'),\r\n            meta: {\r\n                viewport: 'width=device-width, initial-scale=1, shrink-to-fit=no'\r\n            }\r\n        })\r\n    ]\r\n};\r\n\r\n```\r\n\r\n- 入口文件\r\n```typescript\r\nimport Vue from 'vue';\r\nimport App from './app.vue';\r\nimport router from './router/index.ts';\r\n\r\n/**\r\n * 生成一个 id 为 app 的元素插入到 body 中，在最后一个元素的前面\r\n * @param none\r\n * @returns {string} id名字：'#app'\r\n */\r\nconst createAppId = function() {\r\n    const scriptTag = document.body.lastChild;\r\n    const app = document.createElement('div');\r\n    app.id = 'app';\r\n    document.body.insertBefore(app, scriptTag);\r\n    return '#' + app.id;\r\n};\r\n\r\nnew Vue({\r\n    router,\r\n    el: createAppId(),\r\n    template: `<div>\r\n                    <App />\r\n               </div>`,\r\n    components:{\r\n        App\r\n    }\r\n});\r\n\r\n\r\n```\r\n\r\n- 路由入口文件\r\n```\r\n/**\r\n * @file 路由出口\r\n * @author jamesjianpeng\r\n */\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport defaultRoutes from './default-routes.ts';\r\nimport globalGuards from './guards.ts';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'layoutDefault',\r\n    beforeEnter: (to:object, from:object, next:any) => {\r\n        console.log('%c 路由组件中特有的钩子 %c - beforeEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n        next();\r\n    },\r\n    component: () => import(/* webpackChunkName: \"layout-default\" */'../layout/default.vue'),\r\n    children: defaultRoutes,\r\n  },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  routes\r\n});\r\n\r\nglobalGuards(router);\r\n\r\nexport default router;\r\n```\r\n\r\n- guards.ts 错误来源的文件\r\n```\r\n/**\r\n * @file 全局路由守卫\r\n * @author jamesjianpeng\r\n */\r\nconst globalGuards = function (router:object) {\r\n    router.beforeEach((to:object, from:object, next:any) => {\r\n        console.log('%c 全局路由 %c - beforeEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n        next()\r\n    })\r\n    router.afterEach((to:object, from:object) => {\r\n        console.log('%c 全局路由 %c - afterEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n    })\r\n}\r\n\r\nexport default globalGuards\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2410","RelatedDescription":"Closed issue \"TS2339: Property 'afterEach' does not exist on type 'object'.\" (#2410)"},{"Id":"364209279","IsPullRequest":false,"CreatedAt":"2018-09-27T06:26:32","Actor":"wuservices","Number":"2409","RawContent":null,"Title":"Register router-link and router-view with PascalCase for style guide compatibility","State":"closed","Body":"### What problem does this feature solve?\r\nThe Vue style guide recommends using PascalCase for Vue components in templates. However, since the components are registerd using kebab-case, you can't use PascalCase in the templates:\r\n```\r\n  Vue.component('router-view', View);\r\n  Vue.component('router-link', Link);\r\n```\r\n\r\nIn contrast, they're registered with kebab-case, you'd be able to use them with either kebab-case, or PascalCase:\r\n\r\n```\r\n  Vue.component('RouterView', View);\r\n  Vue.component('RouterLink', Link);\r\n```\r\n\r\nThis is the related style guide recommendation: https://vuejs.org/v2/style-guide/#Component-name-casing-in-templates-strongly-recommended\r\n\r\n### What does the proposed API look like?\r\n```\r\n<RouterView/>\r\n<RouterLink to=\"/foo\">Go to Foo</RouterLink>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2409","RelatedDescription":"Closed issue \"Register router-link and router-view with PascalCase for style guide compatibility\" (#2409)"},{"Id":"364019823","IsPullRequest":false,"CreatedAt":"2018-09-26T13:28:02","Actor":"francoisromain","Number":"2408","RawContent":null,"Title":"Dynamic alias","State":"closed","Body":"### What problem does this feature solve?\r\nWith a route defined like this: \r\n\r\n```\r\n{\r\n    path: '/404',\r\n    alias: '*',\r\n    name: 'error',\r\n    component: Error\r\n}\r\n```\r\n\r\nWhen a user visit `my-site.com/random-inexisting-url`, the url doesn't change and it displays the error page. (this is what we want)\r\n\r\n*** \r\n\r\nNow, how to to do the same with dynamic routes?\r\n\r\nExample: \r\n- there is a route like `my-site.com/pages/:id` \r\n- the user visits `my-site.com/pages/inexisting-id`. \r\n- the `id` param is used to fetch an API. If the API returns null, there is no automatic redirection to the error page. \r\n\r\nIt is possible to manually redirect to the `/error` page with `router.push({ name: 'error' })` or a navigation guard, but it will change the url to `/error`. \r\n\r\n**Is it possible to keep the original url, but still display the error page?** \r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nsomething like `router.aliasTo({name: 'error' })`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2408","RelatedDescription":"Closed issue \"Dynamic alias\" (#2408)"},{"Id":"363637659","IsPullRequest":true,"CreatedAt":"2018-09-26T02:10:38","Actor":"wregis","Number":"2407","RawContent":null,"Title":"Forward args as props to custom child","State":"closed","Body":"When rendering a custom child (\"tag\" prop) forward unhandled args to the component, like a button or something complex.\r\n\r\nI believe this will not break any existing functionality while giving some new capabilities.\r\n\r\nGuess this will fix #1678 and can be related to #2029.","Url":"https://github.com/vuejs/vue-router/pull/2407","RelatedDescription":"Closed or merged PR \"Forward args as props to custom child\" (#2407)"},{"Id":"363554913","IsPullRequest":false,"CreatedAt":"2018-09-25T17:46:07","Actor":"Amorites","Number":"2406","RawContent":null,"Title":"add runtime type-checking & well understood warnings","State":"closed","Body":"### What problem does this feature solve?\r\nIf we accidentally set `to` prop of router-link to `null`, an error `TypeError: Cannot read property 'name' of null` will be thrown. \r\n\r\nAt this line:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/location.js#L18\r\n\r\nThere should be a better error message but not just crash and leave users confused.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nwarn like react\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2406","RelatedDescription":"Closed issue \"add runtime type-checking & well understood warnings\" (#2406)"},{"Id":"362924527","IsPullRequest":true,"CreatedAt":"2018-09-23T08:32:38","Actor":"HikaruSato","Number":"2405","RawContent":null,"Title":"Add Node.js(Express) Usage Example to Docs","State":"open","Body":"I thought that I needed documentation on usage examples in Node.js (Express).\r\nSo I will suggest adding a usage example in Node.js (Express).","Url":"https://github.com/vuejs/vue-router/pull/2405","RelatedDescription":"Open PR \"Add Node.js(Express) Usage Example to Docs\" (#2405)"},{"Id":"362886196","IsPullRequest":false,"CreatedAt":"2018-09-22T19:59:11","Actor":"rightaway","Number":"2404","RawContent":null,"Title":"Set caseSensitive and pathToRegexpOptions defaults on router","State":"open","Body":"### What problem does this feature solve?\r\n`caseSensitive` and `pathToRegexpOptions` are set on each of the routes individually, which is redundant and not clean especially when working a very large number of routes and across multiple files. It would simplify the code to be able to set it as a default on the router itself, and each of the routes will inherit that if they don't override it in their own route config.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nnew VueRouter({\r\n  caseSensitive: true,\r\n  pathToRegexpOptions: {},\r\n  routes: [\r\n    { path: '/example', caseSensitive: false, pathToRegexpOptions: {} }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2404","RelatedDescription":"Open issue \"Set caseSensitive and pathToRegexpOptions defaults on router\" (#2404)"},{"Id":"362876398","IsPullRequest":false,"CreatedAt":"2018-09-22T17:43:59","Actor":"smakinson","Number":"2403","RawContent":null,"Title":"route will iframe changes the iframe then the page when hitting back","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/smakinson/pen/JaVbGv](https://codepen.io/smakinson/pen/JaVbGv)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the first PRESS ME link to move to the page with an iframe.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nClick the next PRESS ME link.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button again.\r\n\r\nNotice the iframe and the VAL.\r\n\r\n### What is expected?\r\nPressing the browser back button would go back to the previous route on the first press, not first affecting only the iframe.\r\n\r\n### What is actually happening?\r\nPressing back in the browser first affects the iframe, then pressing again affects the route.\r\n\r\n---\r\nReference issue: https://github.com/vuejs/vue-router/issues/1699\r\n\r\nI came across this bug recently in a project I am working on that uses an iframe for video. I had only noticed the issue in Chrome initially, but the pen seems to show it happening in Firefox and Safari as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2403","RelatedDescription":"Open issue \"route will iframe changes the iframe then the page when hitting back\" (#2403)"},{"Id":"362523658","IsPullRequest":false,"CreatedAt":"2018-09-22T09:56:35","Actor":"rothsandro","Number":"2401","RawContent":null,"Title":"$router not available in function passed as prop (undefined is not an object)","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/rothsandro/vue-router-issue](https://github.com/rothsandro/vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the repo\r\n2. Go into the repo folder\r\n3. `npm install`\r\n4. `npm run serve`\r\n5. Open the app (http://localhost:8080/)\r\n6. Click on the button\r\n\r\nThe parent component `HelloWorld` has a property `demo` with a function `run`, passed down to its child component `ChildComponent`. Clicking the button executes the run method in the child component.\r\n\r\nThe run method triggers four alerts:\r\n1. Alert of a property of the class\r\n2. Alert a property from the Vuex store\r\n3. Alert the $router object using a method in the class\r\n4. Alert using this.$router directly instead of a separate function\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nYou should see four alerts, number 3 and 4 should show \"[object Object]\".\r\n\r\n### What is actually happening?\r\nOnly three alerts will be shown, number four produces the following error:\r\n\r\n```\r\nTypeError: undefined is not an object (evaluating 'this._routerRoot._router')\r\n```\r\n\r\nThe same syntax using this.$store works fine. Therefore I assume the problem is related to Vue Router, not Vue or Typescript.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2401","RelatedDescription":"Closed issue \"$router not available in function passed as prop (undefined is not an object)\" (#2401)"},{"Id":"362717132","IsPullRequest":false,"CreatedAt":"2018-09-22T07:47:10","Actor":"Drezdenozk","Number":"2402","RawContent":null,"Title":"Can i make route with asterisk and exception?","State":"closed","Body":"### What problem does this feature solve?\r\nFor works need something like\r\n'path': '*(exclude something like /static/)'\r\nYes, really, root asterisk and exception...\r\n\r\n### What does the proposed API look like?\r\n*(regExp)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2402","RelatedDescription":"Closed issue \"Can i make route with asterisk and exception?\" (#2402)"},{"Id":"362432843","IsPullRequest":false,"CreatedAt":"2018-09-21T14:51:15","Actor":"dongnaebi","Number":"2400","RawContent":null,"Title":"Why encode '(' to 28%","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88](https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI use vue-router in ssr,in entry-server.js,got rejection\r\n```javascript\r\n    const { url } = context\r\n    const { fullPath } = router.resolve(url).route\r\n\r\n    if (fullPath !== url) {\r\n      return reject({ url: fullPath })\r\n    }\r\n```\r\nthe URL is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nget fullPath in express by `req.url` is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nbut in vue-router `route.fullPath` get `/search?keyword=iPhone%20XS%20Max%28A2104%29%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nthe difference is vue-router encode '(' to 28% and ')' to 29%,why do this?\r\n\r\n### What is expected?\r\ndon't endoce `!， '，(，)，*，-，.，_，~，0-9，a-z，A-Z`\r\n\r\n### What is actually happening?\r\ngot error in ssr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2400","RelatedDescription":"Closed issue \"Why encode '(' to 28%\" (#2400)"},{"Id":"362178487","IsPullRequest":false,"CreatedAt":"2018-09-20T13:11:28","Actor":"Undefined123456789","Number":"2399","RawContent":null,"Title":"有时候会出现不能命中目标路由而直接命中根路由的问题，不是必然，有时候会出现，频率还有点高，在开发阶段没有问题，发布后就会有问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://47.95.14.230:10003/dist/index.html#/test1](http://47.95.14.230:10003/dist/index.html#/test1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n一直点 【router-link】点击跳转test3 ，理论上回会命中目标路由，但会出现直接到根路由的情况。\r\n\r\n### What is expected?\r\n一直都是命中目标路由\r\n\r\n### What is actually happening?\r\n会出现直接到根路由的情况\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2399","RelatedDescription":"Closed issue \"有时候会出现不能命中目标路由而直接命中根路由的问题，不是必然，有时候会出现，频率还有点高，在开发阶段没有问题，发布后就会有问题\" (#2399)"},{"Id":"361766796","IsPullRequest":false,"CreatedAt":"2018-09-19T14:07:12","Actor":"ChrisDSky","Number":"2398","RawContent":null,"Title":"Refresh Page not reloading website","State":"closed","Body":"Hello,\r\n\r\nI have discovered that if your app is using nested routes or params in routes, if you refresh the page, basically the page doesn't get reloaded and it displays a blank page.\r\n\r\nThe only errors I found in the debug console are:\r\n\r\nChris:1 Refused to apply style from 'http://localhost:8080/testProps/main.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.\r\nChris:13 GET http://localhost:8080/testProps/main.js 404 (Not Found)\r\nChris:1 Refused to execute script from 'http://localhost:8080/testProps/main.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.\r\n\r\nIf I have only one level of routing like http://www.mydomain.com/RouteOn\r\n\r\nI can reload the page fine.\r\n\r\nbut if I have something like\r\n\r\nhttp://www.mydomain.com/RouteOn/params1 \r\n\r\nor\r\n\r\nhttp://www.mydomain.com/RouteOn/subRoute\r\n\r\nit shows the error I mention above and show a blank page.\r\n\r\nI am unsure why it does that. I am using angular for another website, with nested routes and parameters, and it has no problem reloading the page correctly.\r\n\r\nI have read on another forum, from a Vue developer, that it is just not possible to achieve a reload with nested routes or params properly.\r\n\r\nCould any one let me know if it can be achieved (keep in mind the website is hosted on a bucket on AWS, so no server trick can be involved). If it can be, how would I do that ?\r\n\r\nThank you in advance.\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2398","RelatedDescription":"Closed issue \"Refresh Page not reloading website\" (#2398)"},{"Id":"361509724","IsPullRequest":true,"CreatedAt":"2018-09-18T22:36:40","Actor":"jnields","Number":"2397","RawContent":null,"Title":"Add access to history state","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis allows developers access to history.state, which you can use for associating extra data to the URL without updating the visible URL, in history mode.  It does not work for hash mode.","Url":"https://github.com/vuejs/vue-router/pull/2397","RelatedDescription":"Open PR \"Add access to history state\" (#2397)"},{"Id":"361186436","IsPullRequest":false,"CreatedAt":"2018-09-18T08:22:15","Actor":"defusioner","Number":"2396","RawContent":null,"Title":"Props params passing with keep-alive","State":"closed","Body":"### Version\r\n2.8.1 & 3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/mo5x4nlq7p](https://codesandbox.io/s/mo5x4nlq7p)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open console\r\n- Go to dog, then to home\r\n\r\n### What is expected?\r\nEvery route is in keep-alive, so dog should be kept alive with its `name=dog`\r\n\r\n### What is actually happening?\r\nIn console we see: `missing required prop: \"name\".`\r\nFor this demo it is almost transparent, but in a real project I've faced a problem that the component that is dependent of the incoming parameter won't be rendered (as it uses apollo and computed properties binded on that parameter).\r\n\r\n---\r\nP.S. Without keep-alive it's ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2396","RelatedDescription":"Closed issue \"Props params passing with keep-alive\" (#2396)"},{"Id":"361185756","IsPullRequest":false,"CreatedAt":"2018-09-18T08:14:00","Actor":"defusioner","Number":"2395","RawContent":null,"Title":"Props params passing with keep-alive","State":"closed","Body":"**Version**\r\n2.8.1 & 3.0.1\r\n\r\n**Reproduction link**\r\nhttps://codesandbox.io/s/mo5x4nlq7p\r\n\r\n**Steps to reproduce**\r\n- Open console\r\n- Go to dog, then to home\r\n\r\n**What is expected?**\r\nEvery route is in keep-alive, so dog should be kept alive with its `name=dog`\r\n\r\n**What is actually happening?**\r\nIn console we see: `missing required prop: \"name\"`.\r\nFor this demo it is almost transparent, but in a real project I've faced a problem that the component that is dependent of the incoming parameter won't be rendered (as it uses apollo and computed properties binded on that parameter).\r\n\r\nP.S. Without keep-alive it's ok","Url":"https://github.com/vuejs/vue-router/issues/2395","RelatedDescription":"Closed issue \"Props params passing with keep-alive\" (#2395)"},{"Id":"360776064","IsPullRequest":false,"CreatedAt":"2018-09-17T22:50:51","Actor":"lakca","Number":"2393","RawContent":null,"Title":"Expose (store) history state stack","State":"closed","Body":"### What problem does this feature solve?\r\nAs we know,  for security reasons, browsers do not expose visited pages history.\r\nBut if in a single page application , it will be very helpful to access the history stack. \r\nFor example, I can clarify if it should directly back to previous or redirect to specific page when logged in.\r\nalthough I can replace these with other approaches in different scenarios or maintain this by myself.\r\nAppreciate it!\r\n\r\n### What does the proposed API look like?\r\nrouter.history.stack or others are all okay.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2393","RelatedDescription":"Closed issue \"Expose (store) history state stack\" (#2393)"},{"Id":"360793297","IsPullRequest":false,"CreatedAt":"2018-09-17T09:50:14","Actor":"zhengxs2018","Number":"2394","RawContent":null,"Title":"3.0.1 构建失败，找不到错误，问题已关闭","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2394","RelatedDescription":"Closed issue \"3.0.1 构建失败，找不到错误，问题已关闭\" (#2394)"},{"Id":"360715120","IsPullRequest":false,"CreatedAt":"2018-09-17T06:29:19","Actor":"stevenadams","Number":"2392","RawContent":null,"Title":"The output component names in vue-router.common.js are not what is defined in the src/components files","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/dist/vue-router.common.js#L386](https://github.com/vuejs/vue-router/blob/dev/dist/vue-router.common.js#L386)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry using `<RouterLink />` instead of `<router-link />`\r\n\r\n### What is expected?\r\nI should be able to use `<RouterLink />`\r\n\r\n### What is actually happening?\r\n`<routerlink> //content </routerlink>` gets rendered\r\n\r\n---\r\nI cloned the repo and ran `npm run build` - got the expected outcome in vue-router.common.js\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2392","RelatedDescription":"Closed issue \"The output component names in vue-router.common.js are not what is defined in the src/components files\" (#2392)"},{"Id":"360663346","IsPullRequest":true,"CreatedAt":"2018-09-16T18:05:23","Actor":"mlboy","Number":"2391","RawContent":null,"Title":"add this <router-link :to=\"-1\" go>","State":"open","Body":"声明式 | 编程式\r\n-- | --\r\n\\<router-link :to=\"...\" go\\>  | router.go(-1)","Url":"https://github.com/vuejs/vue-router/pull/2391","RelatedDescription":"Open PR \"add this <router-link :to=\"-1\" go>\" (#2391)"},{"Id":"360648966","IsPullRequest":true,"CreatedAt":"2018-09-16T15:17:52","Actor":"posva","Number":"2390","RawContent":null,"Title":"fix(resolve): use current location if not provided","State":"open","Body":"Fixes #2385\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2390","RelatedDescription":"Open PR \"fix(resolve): use current location if not provided\" (#2390)"},{"Id":"360637284","IsPullRequest":false,"CreatedAt":"2018-09-16T13:00:01","Actor":"posva","Number":"2389","RawContent":null,"Title":"Nodes leak when using an input with type=password","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n  <title>Document</title>\r\n</head>\r\n\r\n\r\n<body>\r\n  <script src=\"https://unpkg.com/vue@2.5.17/dist/vue.min.js\"></script>\r\n  <script src=\"../dist/vue-router.min.js\"></script>\r\n\r\n  <div id=\"app\">\r\n    <router-link :to=\"'/'\">Home</router-link>\r\n    <router-link :to=\"'/Login'\">Login</router-link>\r\n    <router-view />\r\n  </div>\r\n\r\n  <script>\r\n    const Home = {\r\n      template: `\r\n      <div class=\"home\">\r\n      <input \r\n        type=\"password\"\r\n        placeholder=\"password\" \r\n        name=\"password\"><br>\r\n  </div>\r\n  `\r\n    }\r\n\r\n    const Login = {\r\n      template: `\r\n      <div class=\"login\">\r\n    <div>\r\n      <h2>Login</h2>\r\n      \r\n      <button>Login</button>\r\n    </div>\r\n  </div>\r\n  `,\r\n      methods: {\r\n        submitClicked(id, password) { }\r\n      }\r\n    }\r\n\r\n    Vue.use(VueRouter);\r\n    const router = new VueRouter({\r\n      mode: \"history\",\r\n      base: '/explorations/',\r\n      routes: [\r\n        {\r\n          path: \"/\",\r\n          name: \"home\",\r\n          component: Home\r\n        },\r\n        {\r\n          path: \"/login\",\r\n          name: \"login\",\r\n          component: Login\r\n        }\r\n      ]\r\n    });\r\n\r\n    new Vue({\r\n      router,\r\n    }).$mount(\"#app\");\r\n  </script>\r\n\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n(file to be created in `explorations` folder) in vue-router repro after running `npm run build`\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- record memory grap in performance tab in chrome\r\n- click links to change views multiple times\r\n- garbage collect\r\n- repeat\r\n- stop recording\r\n- check node count increase\r\n\r\n### What is expected?\r\nnode count should go back to the same value after second garbage collection\r\n\r\n![screen shot 2018-09-16 at 14 52 52](https://user-images.githubusercontent.com/664177/46256221-ff809700-c4a7-11e8-8cbd-4d040c32c7e4.png)\r\n\r\n\r\n\r\n### What is actually happening?\r\nit keeps increasing\r\n\r\n![screen shot 2018-09-16 at 14 53 44](https://user-images.githubusercontent.com/664177/46256222-ff809700-c4a7-11e8-8b05-d24f8b22030b.png)\r\n\r\n\r\n\r\n\r\n---\r\nRemoving the type=password makes it behave as expected\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2389","RelatedDescription":"Open issue \"Nodes leak when using an input with type=password\" (#2389)"},{"Id":"360636851","IsPullRequest":false,"CreatedAt":"2018-09-16T12:55:06","Actor":"posva","Number":"2388","RawContent":null,"Title":"fail","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2388","RelatedDescription":"Closed issue \"fail\" (#2388)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"365418987","IsPullRequest":true,"CreatedAt":"2018-10-08T00:49:57","Actor":"Slashgear","Number":"1412","RawContent":null,"Title":" docs(vuepress): move 🇫🇷 doc in vuepress","State":"closed","Body":"Last week I notice that French Vuex doc was not on Vuepress therefore not very accessible for the french community.\r\n\r\nThis PR fix that.\r\n\r\n- [x] define fr-FR language in conf\r\n- [x] move gitbook doc in vuepress\r\n- [x] reshape API page to match vuepress structure\r\n\r\n😸 Sorry for the long PR, it is mainly doc duplication\r\n\r\nShould the French gitbook documentation be removed ?","Url":"https://github.com/vuejs/vuex/pull/1412","RelatedDescription":"Closed or merged PR \" docs(vuepress): move 🇫🇷 doc in vuepress\" (#1412)"},{"Id":"367476734","IsPullRequest":false,"CreatedAt":"2018-10-07T19:43:38","Actor":"syntacticsolutions","Number":"1416","RawContent":null,"Title":"Support for IndexedDB","State":"closed","Body":"### What problem does this feature solve?\r\nIt should (in theory) make dealing with Big Data Web Visualizations easier and more performant.\r\n\r\nI'm using echarts to render big data vizualizations at the company I work for. The problem is that when my data gets really big (1m records), It's takes way too long to do anything. The app pretty much becomes unresponsive and so now the only alternative I have is to do all of the aggregation on the backend and then return the response.\r\n\r\n### What does the proposed API look like?\r\nI would imagine that the vuex instance would send messages back and forth between the serviceworker and itself. The mutations could then be passed as arguments to the serviceworker. The serviceworker would perform the operation and return the aggregated data. If the user does not have third-party-cookies enabled. It would just fall back to the normal Vuex instance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1416","RelatedDescription":"Closed issue \"Support for IndexedDB\" (#1416)"},{"Id":"367472752","IsPullRequest":false,"CreatedAt":"2018-10-06T16:28:43","Actor":"nicodmf","Number":"1415","RawContent":null,"Title":"Wrong data for getters at least in actions because getters are mutables","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fqm3tj5y/3/](https://jsfiddle.net/fqm3tj5y/3/)\r\n\r\n### Steps to reproduce\r\nclic on \"display values\" text\r\n\r\n### What is expected?\r\nwrapper: values ===  getter: value\r\n\r\n### What is actually happening?\r\nwrapper: values !==  getter: value\r\n\r\n---\r\nI change the line 17\r\nfrom \r\n       let begin = getters.begin\r\nto \r\n       let begin = moment(getters.begin;)\r\n\r\nAnd this works. \r\n\r\nAnyway, it seems to me that a getter should'nt change and be a copy in every call. If not this should be good documented with an big warning : \" Attention : a getter is mutable, copy it, if you want to play with its ow properties.\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1415","RelatedDescription":"Open issue \"Wrong data for getters at least in actions because getters are mutables\" (#1415)"},{"Id":"367468201","IsPullRequest":false,"CreatedAt":"2018-10-06T15:37:22","Actor":"nicodmf","Number":"1414","RawContent":null,"Title":"Wrong data for getters in actions : Bug?","State":"closed","Body":"Because an exemple is better :\r\n\r\n```js\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        filters: {\r\n            date: moment(),\r\n            period: \"3weeks\",\r\n        },\r\n    },\r\n    getters: {\r\n        begin(state) {\r\n            switch(state.filters.period) {\r\n                case 'day': return moment(state.filters.date).startOf('day');\r\n                case 'week': return moment(state.filters.date).startOf('week');\r\n                case '3weeks': return moment(state.filters.date).subtract(1, 'week').startOf('week');\r\n            }\r\n            return moment();\r\n        },\r\n   },\r\n   actions: {\r\n        async load({commit, state, getters}) {\r\n            console.log(this._wrappedGetters.begin(state).format('YYYY-MM-DD'), getters.begin.format('YYYY-MM-DD'));\r\n            // Here results are identicals at initialisation, but différents after changes :\r\n            // At initialisation    => **2018-10-15** getter(good value) : **2018-10-15**\r\n            // After changes        => **2018-10-22** getter(wrong value): **2018-10-29**\r\n            // After changes        => **2018-10-15** getter(wrong value): **2018-10-22**\r\n            // After another change => **2018-10-08** getter(wrong value): **2018-10-29**\r\n        },\r\n    },\r\n};\r\n```\r\nIn fact, the use of getters in actions isn't largely documented, but as getters are just computed values based on store and because i always mutate store by mutation in this processus, this should not appear IMO.","Url":"https://github.com/vuejs/vuex/issues/1414","RelatedDescription":"Closed issue \"Wrong data for getters in actions : Bug?\" (#1414)"},{"Id":"367434053","IsPullRequest":false,"CreatedAt":"2018-10-06T07:47:58","Actor":"PedroJuan91","Number":"1413","RawContent":null,"Title":"is there a way to access module properties especially in getters with a passing function eg. this.$store.rootGetters.[module].mygetter(passing_val)","State":"open","Body":"### What problem does this feature solve?\r\nevery time i want to filter my array in my modules state properties.\r\ni will write it to my root getters. and its kinda confusing to me like accessing to the root just to make a filter.  \r\nthen its kinda messy accessing something from the modules going to root\r\n\r\n### What does the proposed API look like?\r\n````\r\n//root getters\r\ngetters: {\r\n createMe(state, getters, rootState){\r\n  return function(nameID) {\r\n   return rootState.persons.names.find(function (thisName) {\r\n    return thisName.id === nameID\r\n   })\r\n  }\r\n }\r\n}\r\n//computed \r\nloadname(id){\r\n return this.$store.getters.createMe(id)\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1413","RelatedDescription":"Open issue \"is there a way to access module properties especially in getters with a passing function eg. this.$store.rootGetters.[module].mygetter(passing_val)\" (#1413)"},{"Id":"363671985","IsPullRequest":true,"CreatedAt":"2018-10-02T08:53:50","Actor":"Austio","Number":"1407","RawContent":null,"Title":"Add ability to turn off devtools on vuex by passing an off options","State":"closed","Body":"This PR adds the ability to turn off devtools on a per vuex instance level.  This is useful for cases where you have multiple vuex stores on a single page.  A good example is a scenario where teams maintain their own portions of a single app that are all loaded, some of which will have an independent vuex store.\r\n\r\nWith this option, on the dev side i could turn this off per instance so that I can debug a single store. \r\n\r\nBy default, this mirrors what is already in vuex, it just allows for turning off when specified.\r\n\r\n```\r\nconst store = new Vuex.Store({\r\n  devtools: false\r\n})\r\n```\r\n\r\nFollow through on https://github.com/vuejs/vuex/issues/875\r\n","Url":"https://github.com/vuejs/vuex/pull/1407","RelatedDescription":"Closed or merged PR \"Add ability to turn off devtools on vuex by passing an off options\" (#1407)"},{"Id":"365285331","IsPullRequest":false,"CreatedAt":"2018-10-01T01:58:52","Actor":"silentmissile","Number":"1411","RawContent":null,"Title":"this is undefined in vuex","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7jqyyvmqm1](https://codesandbox.io/s/7jqyyvmqm1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwin10 x64\r\nnodejs 10.11.0 x64\r\n@vue/cli 3.0.4\r\n@vue/cli-service 3.0.4\r\n@vue/cli-service-global 3.0.4\r\nvue 2.5.17\r\nvue-router 3.0.1\r\n\r\n\r\n<template>\r\n  <div>\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Initial from './Initial'\r\nexport default {\r\n  components: {\r\n    'initial': Initial,\r\n  },\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  methods: {\r\n  },\r\n  created () {\r\n    console.log(this.$store)\r\n    this.$store.dispatch('Init')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\nwhen running\r\nnpm run serve\r\nthe service runs smoothly\r\n\r\nwhen I visit this component in browser, some error in console\r\n\r\nthis.$store can be recognized and logged correctly, but\r\n\r\n[Vue warn]: Error in created hook: \"TypeError: this is undefined\"\r\n\r\nfound in\r\n\r\n---> <Design> at src/views/initial.vue\r\n       <Entrance> at src/Entrance.vue\r\n         <Root>\r\n\r\n### What is expected?\r\nfix this bug\r\n\r\n### What is actually happening?\r\nthis is undefined if vuex\r\n\r\n---\r\nin codesandbox, it can't be reproduced, maybe it's caused by conflict of some other software like nodejs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1411","RelatedDescription":"Open issue \"this is undefined in vuex\" (#1411)"},{"Id":"364858237","IsPullRequest":true,"CreatedAt":"2018-09-30T07:24:08","Actor":"Alex-Sokolov","Number":"1410","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1410","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1410)"},{"Id":"363977638","IsPullRequest":true,"CreatedAt":"2018-09-27T08:42:26","Actor":"nulpatrol","Number":"1408","RawContent":null,"Title":"Add helpers to default export type declaration as in sources","State":"closed","Body":"Partially based on #1274\r\nImport Vuex.\r\n```ts\r\nimport Vuex from \"vuex\";\r\n```\r\nUsing before this PR: \r\n```ts\r\n(Vuex as any).mapActions(...)\r\n```\r\n\r\nUsing after:\r\n```\r\nVuex.mapActions(...)\r\n```","Url":"https://github.com/vuejs/vuex/pull/1408","RelatedDescription":"Closed or merged PR \"Add helpers to default export type declaration as in sources\" (#1408)"},{"Id":"364304597","IsPullRequest":true,"CreatedAt":"2018-09-27T08:03:27","Actor":"revelt","Number":"1409","RawContent":null,"Title":"[docs] Update plugins.md","State":"closed","Body":"Let's update the function's name to match the code sample","Url":"https://github.com/vuejs/vuex/pull/1409","RelatedDescription":"Closed or merged PR \"[docs] Update plugins.md\" (#1409)"},{"Id":"363342548","IsPullRequest":false,"CreatedAt":"2018-09-24T22:23:49","Actor":"Hoishin","Number":"1406","RawContent":null,"Title":"Remove TS type definition and move to DefinitelyTyped","State":"open","Body":"### What problem does this feature solve?\r\n#### Background:\r\nIt's hard to say TypeScript type definition development has been active in this repo. [Searching TypeScript tags](https://github.com/vuejs/vuex/labels/typescript), all 7 issues TS-related remain open, and 3 out of 5 PRs are waiting for reviewing, including one opened back in January 2018.\r\n\r\nIf the repository includes type definition, it would be nice if the repository maintainers are responsible for maintaining definition actively as well as library itself.\r\n\r\n#### Suggestion:\r\nRemove TypeScipt type definition in this repository, and move them to [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped), so type definition development wouldn't be the tasks for Vuex maintainers. I would expect type definition development would be more active with this since it'll be easier to review/merge.\r\n\r\n### What does the proposed API look like?\r\nType definition are removed. Users will have to install `@types/vuex`, but it will be more accurate/strict/up-to-date definition.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1406","RelatedDescription":"Open issue \"Remove TS type definition and move to DefinitelyTyped\" (#1406)"},{"Id":"363205490","IsPullRequest":false,"CreatedAt":"2018-09-24T15:44:45","Actor":"AshwinTayson","Number":"1405","RawContent":null,"Title":"Dynamic module generation - Nested modules doesn't have proper levels","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/749394/](https://jsfiddle.net/50wL7mdz/749394/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the program and check the console and the paragraph tag\r\n\r\n### What is expected?\r\n1. There should be two nested modules a and b in the console store[getters].<br>\r\n1.a The two modules should be namespaced with a/aa and b/aa\r\n\r\n2. The first &lt;p&gt; tag should be undefined since namespace a was not given\r\n3. Second &lt;p&gt; tag should get \"module a/aa\"\r\n4. Third &lt;p&gt; tag should get \"module b/aa\"\r\n\r\n### What is actually happening?\r\n1. There is only one getter.(nested namespacing did not work)<br>\r\n1.a The getter is not namespaced by neither a nor b\r\n\r\n2. The first &lt;p&gt; tag is giving value (not respecting namespace)\r\n3. Second &lt;p&gt; tag is undefined since namespace is not registering properly\r\n4. Third &lt;p&gt; tag is undefined since namespace is not registering properly\r\n\r\n---\r\nBut if u check the state property of the store object in the console, you can see the modules registered with the correct namespace.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1405","RelatedDescription":"Open issue \"Dynamic module generation - Nested modules doesn't have proper levels\" (#1405)"},{"Id":"359277072","IsPullRequest":true,"CreatedAt":"2018-09-24T14:49:27","Actor":"kazupon","Number":"1400","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn ","Url":"https://github.com/vuejs/vuex/pull/1400","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1400)"},{"Id":"361250917","IsPullRequest":false,"CreatedAt":"2018-09-22T23:08:32","Actor":"sjmcdowall","Number":"1403","RawContent":null,"Title":"Typescript definition for interface Dispatch not correct -- should allow non-async return? ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sjmcdowall/hzew29g1/](https://jsfiddle.net/sjmcdowall/hzew29g1/)\r\n\r\n\r\n### Steps to reproduce\r\nCreate a typescript Vue project with Vuex\r\nUse a fairly strict tslint that has \"no-floating-promises\" turned on \r\nCode a call to a store.dispatch() without await / async Promise stuff (i.e. normal sync. call)\r\n\r\n### What is expected?\r\nNo linting errors\r\n\r\n### What is actually happening?\r\ntslint complains with \r\nERROR: (no-floating-promises) /Users/sjm/work/mm/mms4/web-ui/src/app/router.ts[91, 5]: Promises must be handled appropriately on this code:\r\n    store.dispatch('event/initState');\r\n\r\n---\r\nI think the interface for Dispatch needs to have more overrides to include the non-Promise versions that return : any ?? \r\n\r\n`export interface Dispatch {\r\n  (type: string, payload?: any, options?: DispatchOptions): Promise<any>;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): Promise<any>;\r\n  (type: string, payload?: any, options?: DispatchOptions): any;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): any;\r\n}`\r\n\r\n??\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1403","RelatedDescription":"Closed issue \"Typescript definition for interface Dispatch not correct -- should allow non-async return? \" (#1403)"},{"Id":"361542686","IsPullRequest":true,"CreatedAt":"2018-09-19T01:29:50","Actor":"rigor789","Number":"1404","RawContent":null,"Title":"feat(devtool): allow usage in non-browser environments","State":"open","Body":"This allows inspecting vuex state in standalone devtools with non-browser environments such as NativeScript\r\n\r\nChanges taken from\r\nhttps://github.com/vuejs/vue-devtools/blob/4fe7c84d614f1ddf581d65274f30a989b77f9ad3/shells/electron/index.js#L3-L7","Url":"https://github.com/vuejs/vuex/pull/1404","RelatedDescription":"Open PR \"feat(devtool): allow usage in non-browser environments\" (#1404)"},{"Id":"359858860","IsPullRequest":true,"CreatedAt":"2018-09-13T11:42:03","Actor":"escapedcat","Number":"1402","RawContent":null,"Title":"chore(docs): link to vue docs watch for options","State":"open","Body":"> Accepts an optional options object that takes the same options as Vue's vm.$watch method.\r\n\r\nlinking to the actual `watch` of the vue doc might be helpful for others to check options faster. not sure if this is wanted though due to future maintenance efforts.","Url":"https://github.com/vuejs/vuex/pull/1402","RelatedDescription":"Open PR \"chore(docs): link to vue docs watch for options\" (#1402)"},{"Id":"359583716","IsPullRequest":true,"CreatedAt":"2018-09-12T17:40:01","Actor":"TimvdLippe","Number":"1401","RawContent":null,"Title":"Add esm-browser build to dist","State":"open","Body":"This PR is the complement of https://github.com/vuejs/vue/pull/7110 which is already being distributed on NPM for Vue. I have personally ran the build and imported in my project and I can confirm all references to `process` have been removed and that the code is not transpiled.\r\n\r\nFixes #1247","Url":"https://github.com/vuejs/vuex/pull/1401","RelatedDescription":"Open PR \"Add esm-browser build to dist\" (#1401)"},{"Id":"358486841","IsPullRequest":false,"CreatedAt":"2018-09-12T11:55:12","Actor":"the-s0urce","Number":"1398","RawContent":null,"Title":"Mutations or Actions deprecated?","State":"closed","Body":"### What problem does this feature solve?\r\nHello,\r\nas first sorry for abusing the issue system, but did not find any other contact option. On one of the last two vue.js conferences (not sure wich of both it was), you said, that Mutations and Actions will be merged to one call. I was looking for some written news about this now for quite a time. Now we are setting up a new big project and we would really love to get a confirmation about this.\r\nThank you\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1398","RelatedDescription":"Closed issue \"Mutations or Actions deprecated?\" (#1398)"},{"Id":"358495065","IsPullRequest":false,"CreatedAt":"2018-09-10T07:11:53","Actor":"ankitsinghaniyaz","Number":"1399","RawContent":null,"Title":"How to access Vue(vm) instance in Vuex store?","State":"open","Body":"### What problem does this feature solve?\r\nI have a `$notify` method on Vue prototype. I need to use that in my action. Is there a way to do that?\r\n\r\nI see that on Vuex we have `this.$_vm` but not sure if that is the right thing to do\r\n\r\n### What does the proposed API look like?\r\n`this.vue.$notify()`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1399","RelatedDescription":"Open issue \"How to access Vue(vm) instance in Vuex store?\" (#1399)"},{"Id":"358406566","IsPullRequest":false,"CreatedAt":"2018-09-09T19:55:57","Actor":"ClickerMonkey","Number":"1397","RawContent":null,"Title":"Improve Computed Support","State":"open","Body":"### What problem does this feature solve?\r\nBetter support for computed properties with a set function.\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```vue\r\nimport { mapComputed } from 'vuex'\r\nnew Vue({\r\n  computed: {\r\n    ...mapComputed({\r\n       'mutationName': 'stateVariable',\r\n       // example:\r\n       'setLoading': 'loading'\r\n    })\r\n  }\r\n})\r\n```\r\n\r\nThis would generate a computed property that would return `stateVariable` and when the value is changed it would call the mutation `mutationName` with the new value.\r\n\r\nThis greatly simplifies directives like `v-model`.\r\n\r\nImplementation:\r\n\r\n```TypeScript\r\ntype VuexComputedMap = { [mutation: string]: string };\r\n\r\nexport function mapComputed(map: VuexComputedMap) {\r\n  const mapped = Object.create(null);\r\n  for (const mutation in map) {\r\n    const variable = map[mutation]\r\n    mapped[variable] = {\r\n      get () {\r\n         return this.$store.state[ variable ]\r\n      },\r\n      set (value) {\r\n        this.$store.commit(mutation, value)\r\n      }\r\n    };\r\n  }\r\n  return mapped;\r\n}\r\n```\r\n\r\n### Problems\r\n\r\nThe implementation would need to be changed to account for modules & namespaces.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1397","RelatedDescription":"Open issue \"Improve Computed Support\" (#1397)"},{"Id":"355668368","IsPullRequest":false,"CreatedAt":"2018-09-09T18:09:20","Actor":"matsieftw","Number":"1389","RawContent":null,"Title":"Documentation Never Actually Walks You Through Set Up","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://thereisntoneandyoushouldnotrequirethis.com](https://thereisntoneandyoushouldnotrequirethis.com)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to your docs.\r\n2. Read them.\r\n3. Think about whether they would be helpful to someone trying to set up a Vue app.\r\n\r\n### What is expected?\r\nHelpful documentation walking you through set up of a Vue app using Vuex.\r\n\r\n### What is actually happening?\r\nA lot of info on concepts and no info on actually bringing in Vuex to your application.\r\n\r\n---\r\nVue's documentation in general never actually walks you through setting anything up. It provides a few code snippets and assumes you'll understand. The documentation has been the biggest source of my frustration while using Vue since it never actually explains anything.\r\n\r\nFor example, on the Vuex installation page, sandwiched between CDN/package manager installation and building from source, you've put that Vuex needs to be instantiated in a module set up. You've provided zero context for this. Is this in the store? Is this for every file you need to access the store in? More importantly, it shouldn't be on the installation page, let alone sandwiched in between different installation methods. Vue's documentation is riddled with these issues. Unfortunately, I still don't actually know enough about how Vue actually works to be able to contribute to the documentation in any way. If I didn't have to use Vue for the project I am on, I would be using React, Redux, & RxJs and have access to meaningful, better written documentation that bothers to walk you through the set up. If Vue actually wants to gain any real traction, you're going to need to actually show folks how to use and set up your tools.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1389","RelatedDescription":"Closed issue \"Documentation Never Actually Walks You Through Set Up\" (#1389)"},{"Id":"356482547","IsPullRequest":true,"CreatedAt":"2018-09-03T12:16:11","Actor":"xiaoshude","Number":"1396","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"open","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1396","RelatedDescription":"Open PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1396)"},{"Id":"356481173","IsPullRequest":true,"CreatedAt":"2018-09-03T12:13:04","Actor":"xiaoshude","Number":"1395","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"closed","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1395","RelatedDescription":"Closed or merged PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1395)"},{"Id":"355847188","IsPullRequest":false,"CreatedAt":"2018-09-03T07:21:12","Actor":"Fachher","Number":"1391","RawContent":null,"Title":"Registering Vuex hooks prevents vue rendering.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool.git](https://github.com/Fachher/vuejsschool.git)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nyarn run serve.\r\nopen browser and open http://localhost:8080\r\nYou will see that only the navigationbar is displayed but content is missing.\r\n\r\n### What is expected?\r\nSee the content of each route\r\n\r\n### What is actually happening?\r\ncontent is not rendered\r\n\r\n---\r\nRemoving hook methods from About.vue, Home.vue and ShipmentList.vue leads to working app. This means just adding the hooks does not lead to this behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1391","RelatedDescription":"Closed issue \"Registering Vuex hooks prevents vue rendering.\" (#1391)"},{"Id":"355913234","IsPullRequest":false,"CreatedAt":"2018-09-01T04:09:50","Actor":"imatmati","Number":"1393","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"### What problem does this feature solve?\r\nPrevent wrong placement of mapping helpers in component.\r\nI came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once .\r\n\r\n### What does the proposed API look like?\r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\n\r\nBut to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1393","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1393)"},{"Id":"356049299","IsPullRequest":true,"CreatedAt":"2018-09-01T03:52:33","Actor":"yangdan8","Number":"1394","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1394","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#1394)"},{"Id":"355885735","IsPullRequest":false,"CreatedAt":"2018-08-31T08:24:23","Actor":"imatmati","Number":"1392","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"Hi,\r\n\r\nI would to propose an enhancement. I came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once ... But to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone. Why not something like : \r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\nIt would insert correctly the helpers in the component.\r\nHave a nice day.\r\n\r\nIvan Matmati\r\n","Url":"https://github.com/vuejs/vuex/issues/1392","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1392)"},{"Id":"355824650","IsPullRequest":false,"CreatedAt":"2018-08-31T03:15:23","Actor":"myadomin","Number":"1390","RawContent":null,"Title":"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js](https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\n\r\n\r\n### What is expected?\r\ndelete the todoItem\r\n\r\n### What is actually happening?\r\ndelete the todoItem and anothre todoItem\r\n\r\n---\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\nit will execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nin page vuex\\examples\\todomvc\\store\\mutations.js, mutation:removeTodo.\r\nthe mutation:removeTodo will execute twice, so will delete two todoItem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1390","RelatedDescription":"Open issue \"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem\" (#1390)"},{"Id":"355551023","IsPullRequest":true,"CreatedAt":"2018-08-31T03:02:07","Actor":"myadomin","Number":"1388","RawContent":null,"Title":"fix bug: examples/todomvc","State":"closed","Body":"page vuex\\examples\\todomvc\\store\\mutations.js,  method:removeTodo.\r\nwhen edit some one todoItem, clear the todoItem, then press keyboard enter.\r\nbecause execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nso here will execute twice, so will delete two todoItem.\r\nso i suggest change here to .","Url":"https://github.com/vuejs/vuex/pull/1388","RelatedDescription":"Closed or merged PR \"fix bug: examples/todomvc\" (#1388)"},{"Id":"355413687","IsPullRequest":true,"CreatedAt":"2018-08-30T05:01:01","Actor":"leecade","Number":"1387","RawContent":null,"Title":"fix: confused namespace for get module","State":"closed","Body":"see #1386","Url":"https://github.com/vuejs/vuex/pull/1387","RelatedDescription":"Closed or merged PR \"fix: confused namespace for get module\" (#1387)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-10-08T05:30:49.2196372Z","RunDurationInMilliseconds":2958}