{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null},{"Title":"The Next Evolution of Xamarin Training: Microsoft Learn","PublishedOn":"2019-05-06T08:01:53+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce two new learning paths on Building Xamarin Apps in Microsoft Learn: A free and interactive learning portal.\nXamarin University Joins MS Learn\nThe Xamarin University...","Href":"https://devblogs.microsoft.com/xamarin/next-evolution-xamarin-training-microsoft-learn/","RawContent":null},{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9605563312","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:14:09","Actor":"davidbuckleyni","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3090","RelatedDescription":"Opened issue \"HTTPCLient Panifully slow on local host and via ip address\" (#3090) at xamarin/xamarin-android","RelatedBody":"When I run http client in a standard console app or through the browser to my api i get very fast results however in the http client consumed in xmairan forms its very very slow\r\n\r\nI am using the HttpClient but my results are taking up to 6-8 seconds coming back from the same machine on the same subnet and ip range of 192.168. When I call the api directly from the ip address the results are more or less instant so why is it so slow with httpclient on the same computer.\r\n\r\nI have seen other so's that suggest set to use proxy as false is the best way to go.\r\n\r\nI have also tested this on a stock phone and it takes around 8 seconds for the login to be successful on the phone. When i browse to the api the results as returned in second?.\r\n```\r\n\r\nprivate HttpClient _client;\r\npublic async Task<String> Getusers()\r\n{\r\n        var content = \"\";\r\n        HttpClientHandler hch = new HttpClientHandler();\r\n        hch.Proxy = null;\r\n        hch.UseProxy = false;\r\n        _client = new HttpClient(hch);\r\n        var uri = new Uri(Constants.ApiEndPoint + \"/Users\"); // Your url is here\r\n\r\n        try\r\n        {\r\n            var response = await _client.GetAsync(uri);\r\n            if (response.IsSuccessStatusCode)\r\n            {\r\n                content = await response.Content.ReadAsStringAsync();\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw ex;\r\n        }\r\n\r\n        return content;\r\n}\r\n```\r\n\r\n\r\n```\r\nprivate async void BtnLogin_Clicked(object sender, EventArgs e)\r\n{\r\n    string content = await Getusers(); //Sends a GET request to the specified Uri and returns the response body as a string in an asynchronous operation\r\n    List<Users> _users = JsonConvert.DeserializeObject<List<Users>>(content); //Deserializes or converts JSON String into a collection of Post\r\n    var userName = txtUserName.Text;\r\n    var password = txtPassword.Text;\r\n    var isValidUser = _users.Where(w => w.UserName == userName && w.password == password).FirstOrDefault();\r\n    var driverId = _users.Where(w => w.UserName == userName && w.password == password).FirstOrDefault().ID;         \r\n\r\n\r\n    if (isValidUser != null)\r\n    {\r\n\r\n            Application.Current.Properties[\"driverId\"] = driverId;\r\n            Application.Current.MainPage = new MainPage();\r\n    }\r\n    else\r\n    {\r\n            lblError.Text = \"Error your credentials are invalid, please try again\";\r\n    }         \r\n\r\n  }\r\n```"},{"Id":"9605532069","Type":"IssuesEvent","CreatedAt":"2019-05-11T00:56:17","Actor":"sanchobear","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3089","RelatedDescription":"Opened issue \"SmtpClient.Send System.Net.Mail.SmtpException: Message could not be sent\" (#3089) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSending email from Android Emulator using SmtpClient fails with System.Net.Mail.SmtpException Connection refused.\r\nUsing identical code in ConsoleApp succeeds.\r\n\r\n### Steps to Reproduce\r\n\r\n1. VS2019(16.0.3)\r\n2. Xamarin.Forms(3.6.0.344457)\r\n3. Android Emulator Android_Accelerated_x86_Oreo API 27\r\n4. Replace gmail account data and password with valid data\r\n```\r\nvar mail = new MailMessage\r\n{\r\n\tFrom = new MailAddress(\"account@googlemail.com\", \"developer\"),\r\n\tSubject = \"Test smtp\",\r\n\tBody = $\"<p>Smpt test message</p><br>\",\r\n\tIsBodyHtml = true\r\n};\r\nmail.To.Add(\"user@othermail.com\");\r\nvar smtpClient = new SmtpClient\r\n{\r\n\tPort = 587,\r\n\tHost = \"smtp.gmail.com\",\r\n\tEnableSsl = true,\r\n\tUseDefaultCredentials = false,\r\n\tCredentials = new System.Net.NetworkCredential(\"account@googlemail.com\", \"***password***\")\r\n};\r\nsmtpClient.Send(mail);\r\n```\r\n### Expected Behavior\r\nEmail received\r\n### Actual Behavior\r\nSystem.Net.Mail.SmtpException Connection refused at smtpClient.Send\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: VS2019(16.0.3)\r\n- Platform Target Frameworks: \r\n  - Android: Oreo 8.1 API 27  \r\n- Android Support Library Version: \r\n- Nuget Packages:\r\n  - Xamarin.Essentials1.1.0\r\n  - Xamarin.Forms 3.6.0.344457\r\n- Affected Devices:\r\n  - Android Emulator Android_Accelerated_x86_Oreo API 27\r\n\r\n### Reproduction Link\r\n[SmtpTest.zip](https://github.com/xamarin/Xamarin.Forms/files/3162818/SmtpTest.zip)\r\n\r\n\r\n\r\n"},{"Id":"9603091281","Type":"PullRequestEvent","CreatedAt":"2019-05-10T16:06:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3004","RelatedDescription":"Merged pull request \"[build] Commercial pipeline build\" (#3004) at xamarin/xamarin-android","RelatedBody":"Perform appropriate build stages when the pipeline is signaled to perform a commercial build\r\n\r\n**New capabilities**\r\n * Stage & publish commercial artifacts from a single, 'flat' package directory\r\n * Generate & publish artifacts.json via build-tasks.exe; include as part of GitHub statuses\r\n * Support for skipTest build configuration setting to skip build, execution and publishing of tests\r\n * Support for skipSigning build configuration setting to skip signing for commercial builds\r\n * Sign packages for commercial CI builds unless skipSigning is set\r\n * Generate and upload UpdateInfo containing setup channel ProductId for commercial builds\r\n * Calculate the gitRepo setting as a replacement for the GitRepo build configuration setting\r\n * Avoid producing OSS packages for commercial builds"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9611246551","Type":"IssuesEvent","CreatedAt":"2019-05-13T05:03:09","Actor":"kgbuddhima","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6182","RelatedDescription":"Opened issue \"[Bug] Editor AutoSize Does not work\" (#6182) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI'm using Xamarin.Forms 3.6 latest Version and AutoSize option of Editor control does not work for me.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Editor\r\n2. Set AutoSize=\"TextChanges\"\r\n\r\n### Expected Behavior\r\nAuto increase or decrees the height of Editor control when entering the text\r\n \r\n### Actual Behavior\r\nEditor does not change the height\r\n"},{"Id":"9610652543","Type":"PullRequestEvent","CreatedAt":"2019-05-13T01:34:04","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6181","RelatedDescription":"Opened pull request \"Enhancement CollectionView implementation on Tizen \" (#6181) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n Enhancement CollectionView implementation on Tizen\r\n   - Handle `ItemSizingStrategy`\r\n   - Support DataTemplateSelector\r\n   - Allow CollectionView items to resize with their content \r\n\r\n### Issues Resolved ### \r\n- partially implements #3172\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n![d7fd5580-717f-11e9-8485-a870eccfced9](https://user-images.githubusercontent.com/1029155/57591037-5c7a1a80-756a-11e9-9668-3fe32549e2f5.gif)![bcc94c00-731f-11e9-8216-72d518259088](https://user-images.githubusercontent.com/1029155/57591041-60a63800-756a-11e9-84be-ecdfdd48b5b1.gif)\r\n![59315f80-7567-11e9-8b18-fd550291dc15](https://user-images.githubusercontent.com/1029155/57591045-626ffb80-756a-11e9-8bc8-b8306b7e673a.gif)\r\n\r\n### Testing Procedure ###\r\nNavigate to CollectionView Gallery -> DataTemplate Galleries -> ItemSizing Strategy, select the different ItemSizingStrategies to see them in action.\r\n\r\n### PR Checklist ###\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9610476956","Type":"PullRequestEvent","CreatedAt":"2019-05-13T00:11:32","Actor":"dansiegel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6180","RelatedDescription":"Opened pull request \"Virtualize Lifecycle Events\" (#6180) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nVirtualizes lifecycle events to allow 3rd party frameworks like Prism to allow custom logic for Startup/Resume/Sleep without requiring downstream developers to know to call base.On{Event}().\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #6159\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n- Application Lifecycle (Start/Resume/Sleep) Event invokers are now virtual so that 3rd parties with custom base Applications can inject additional logic without downstream users needing to know to call `base.On{Event}()`\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nn/a\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9610432039","Type":"PullRequestEvent","CreatedAt":"2019-05-12T23:45:21","Actor":"jaytilly","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6179","RelatedDescription":"Opened pull request \"Fix for layouts in a cell to expand on resize (WPF) Issue #5682\" (#6179) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThe child layouts where not receiving any notification to re-layout.  This fix calls layout on the children view items.\r\n\r\n### Issues Resolved ### \r\nGrid will now auto expand within a ViewCell\r\n\r\n### PR Checklist ###\r\n- [] Has automated tests (Visual Tested)\r\n- [x] Rebased on top of the target branch at time of PR (Not needed)\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9610016651","Type":"PullRequestEvent","CreatedAt":"2019-05-12T20:00:03","Actor":"inforithmics","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6178","RelatedDescription":"Opened pull request \"fixes https://github.com/xamarin/Xamarin.Forms/issues/5651\" (#6178) at xamarin/Xamarin.Forms","RelatedBody":"fixes https://github.com/xamarin/Xamarin.Forms/issues/5651\r\nfixes https://github.com/xamarin/Xamarin.Forms/issues/5486\r\nwith unit tests\r\n\r\n### Description of Change ###\r\n\r\nThis pull request fixes both issues, I have added Unit tests for both issues because there where two fixes necessary\r\n\r\n<!-- Describe your changes here. -->\r\n\r\nIssue https://github.com/xamarin/Xamarin.Forms/issues/5486 fixed by this\r\npreviousPartTypeRef = property.PropertyType.ResolveGenericParameters(propDeclTypeRef);\r\n\r\nGeneric parameter where not resolved on propertyType\r\n\r\nIssue https://github.com/xamarin/Xamarin.Forms/issues/5651 fixed by this\r\nvar p = face.InterfaceType.ResolveGenericParameters(typeRef).GetProperty(predicate, out var interfaceDeclaringTypeRef);\r\n\r\nGeneric Parameters where not resolved on interface\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\nCompiled Bindings work now better for Generic Interfaces, enabeling more cases\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nRun Unit Tests\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9609454197","Type":"IssuesEvent","CreatedAt":"2019-05-12T15:23:20","Actor":"HobDev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6177","RelatedDescription":"Opened issue \"[Bug] AbsoluteLayout and RelativeLayout is expanding beyond its child Image\" (#6177) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI need to display some controls on an Image. So, I need to put image inside RelativeLayout or AbsoluteLayout. But both of these layouts expand beyond the Image. This causes wastage of space. RelativeLayout is taking even more space than AbsoluteLayout. \r\nThese Layout should adapt according to the size of its children. Exactly as StackLayout.\r\n\r\n### Steps to Reproduce\r\nSwap RelativeLayout and AbsoluteLayout in my repro project. \r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms-pre10\r\n- IDE:Visual Studio for Mac\r\n- Affected Devices:iOS and Android. \r\n\r\n### Reproduction Link\r\n\r\n[LayoutSizeRepro.zip](https://github.com/xamarin/Xamarin.Forms/files/3170245/LayoutSizeRepro.zip)\r\n\r\n"},{"Id":"9609223520","Type":"IssuesEvent","CreatedAt":"2019-05-12T13:36:19","Actor":"aquisio","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6176","RelatedDescription":"Opened issue \"XAML compilation fails with generic types and event bindings to a page base class\" (#6176) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThis issue appears to be related to issue #1497 (now closed).\r\n\r\nI am seeing the following runtime exception when a specific combination of conditions exists:\r\n\r\n![image](https://user-images.githubusercontent.com/10047882/57582857-b3341580-74d2-11e9-9f3c-f7f8391972e0.png)\r\n\r\nFailure occurs when the following combination of conditions exists:\r\n\r\n- XamlCompilation is enabled\r\n- The page has a generic type parameter\r\n- The page includes an event binding to a handler that is exposed in the page's base class\r\n\r\nThe attached sample solution includes the implementation necessary to reproduce this issue.\r\n\r\nIf any one (or more) of the following modifications is applied, the problem disappears:\r\n\r\n- XamlCompilation is disabled\r\n- The page is modified to avoid using generic type parameters\r\n- The event handler is moved from the page's base class into the derived class\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample project\r\n2. Wait until the app attempts to create a new instance of MainPage\r\n\r\n[XamlCompilationBug.zip](https://github.com/xamarin/Xamarin.Forms/files/3170120/XamlCompilationBug.zip)\r\n\r\n### Expected Behavior\r\n\r\nThe app should create and render its MainPage.\r\n\r\n### Actual Behavior\r\n\r\nThe app crashes with a `BadImageFormatException`.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.6.0.3\r\n44457 and Xamarin.Forms 4.0.0.394984-pre10\r\n- Last known good version:\r\n- IDE: Visual Studio 2019 version 16.0.3\r\n- Platform Target Frameworks:\r\n  - Android: 9.0 \r\n- Android Support Library Version: 28.0.0.1\r\n- Nuget Packages: none\r\n- Affected Devices: apparently all devices"},{"Id":"9608838485","Type":"IssuesEvent","CreatedAt":"2019-05-12T10:16:46","Actor":"MisterioRee","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6175","RelatedDescription":"Opened issue \"[Bug] Grid/AnyOther inside CarouselView is ignoring WidthRequest and HeightRequest inside content page\" (#6175) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n <CarouselView x:Name=\"carousel\" ItemsSource=\"{Binding Zoos}\" HeightRequest=\"200\" VerticalOptions=\"FillAndExpand\">\r\n                <CarouselView.ItemTemplate>\r\n                    <DataTemplate>                         \r\n                            <Image  Source=\"...\"  WidthRequest=\"500\" Aspect=\"AspectFill\"/> \r\n                    </DataTemplate>\r\n                </CarouselView.ItemTemplate>\r\n### Steps to Reproduce\r\n\r\n1. WidthRequest=\"\" is monitory inside CarouselView  or setting Grid's Column Width to absolute value\r\n\r\n\r\n### Expected Behavior\r\n\r\n        <Grid.ColumnDefinitions>\r\n                    <ColumnDefinition Width=\"*\"/>\r\n           </Grid.ColumnDefinitions>\r\nOr \r\n\r\nVerticalOptions=\"FillAndExpand\"\r\nHorizontalOptions=\"FillAndExpand\"\r\n\r\nShould work out\r\n\r\n### Actual Behavior\r\nDisplay Blank \r\n\r\n### Basic Information\r\nxamarin.Forms 4.0.0.394984-pre10\r\n\r\n- Version with issue:\r\n  4.0.0.394984-pre10\r\n- Last known good version:\r\n NULL\r\n- IDE:\r\n VS 19 For Windows\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK compiling against,  12.2 -->\r\n  - Android: <!-- The version of the Android SDK compiling against,  9.0 --> \r\n\r\n- Nuget Packages:\r\n  https://github.com/sthewissen/Xamarin.Forms.PancakeView\r\n  Xamarin.Forms.maps\r\n\r\n- Affected Devices:\r\nAll\r\n\r\n### Screenshots\r\n\r\n\r\n### Reproduction Link\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9606405169","Type":"PullRequestEvent","CreatedAt":"2019-05-11T10:03:39","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5938","RelatedDescription":"Merged pull request \" [XHarness] Fix some issues in the BCL test generator.\" (#5938) at xamarin/xamarin-macios","RelatedBody":"Re-did the PR since we merged with master and we had issues with the diff."},{"Id":"9605605418","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:38:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6043","RelatedDescription":"Closed issue \"I'm having an timeout issue, specifically a WebException.\" (#6043) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSo the issue is I'm running into a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute. \r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins as well, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\nWhat am I missing?\r\n\r\nMac OS \r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows \r\n- Xamarin 4.6.3.4  \r\n- Xamarin.IOS 10.12.3.3\r\n\r\n:: Extra Info That May Be Helpful ::\r\nIt looks as though **NSUrlSession (iOS 7+)** setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)\r\n\r\n"},{"Id":"9605563713","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:14:23","Actor":"mhughey-vent","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6043","RelatedDescription":"Opened issue \"I'm having an timeout issue, specifically a WebException.\" (#6043) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSo the issue is I'm running into a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute. \r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins as well, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\nWhat am I missing?\r\n\r\nMac OS \r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows \r\n- Xamarin 4.6.3.4  \r\n- Xamarin.IOS 10.12.3.3\r\n\r\n:: Extra Info That May Be Helpful ::\r\nIt looks as though **NSUrlSession (iOS 7+)** setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":76,"FavoriteCount":39,"RawContent":null},{"Id":"1125851046939697152","CreatedAt":"2019-05-07T19:53:01+00:00","UserScreenname":"xamarinhq","Text":"The @XamarinU team has joined the #MicrosoftLearn family! Find Xamarin content in Microsoft Learn today at… https://t.co/gWKXwsPUuk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":133,"FavoriteCount":62,"RawContent":null},{"Id":"1125402214661382146","CreatedAt":"2019-05-06T14:09:31+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin Team at Microsoft Build 2019.\nWe have a packed schedule for Xamarin developers.\nCheck out the sche… https://t.co/fFz1nlYVTp","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":65,"FavoriteCount":27,"RawContent":null},{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null}]}},"RunOn":"2019-05-13T05:30:55.0182009Z","RunDurationInMilliseconds":2639}