{"Data":{"Blog":{"FeedItems":[{"Title":"Go Large with iOS 11","PublishedOn":"2017-10-26T19:36:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the more obvious user interface changes in iOS 11 is the larger titles that are used across the system apps, from the App Store and Apple Music to Notes and Mail. The Health and Contact apps are shown below: The title animates off the screen and shrinks to a normal-sized navigation bar when [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/go-large-ios-11/\">Go Large with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/go-large-ios-11/","RawContent":null},{"Title":"Introducing the Android SDK Manager","PublishedOn":"2017-10-25T19:55:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>To make the process of managing Android SDKs as smooth as possible, we’ve revamped the Android SDK Manager in Visual Studio for Mac to create a seamless, integrated experience. Not only does this new SDK Manager offer a one-stop shop for all things Android SDK, we&#8217;re also introducing support for automatic SDK dependency resolution. So, let’s [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/introducing-android-sdk-manager/\">Introducing the Android SDK Manager</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/introducing-android-sdk-manager/","RawContent":null},{"Title":"3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release","PublishedOn":"2017-10-24T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Over the past year we’ve been working on a couple of &#8220;big things&#8221; that enable you to create more performant applications on more platforms. With our latest stable release, version 2.4.0, we introduced performance optimized renderers on Android, nicknamed Fast Renderers. While faster platform renderers are a clear win, you really start to see the big [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/\">3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/","RawContent":null},{"Title":"Five-Star Apps with Mobile Center Test","PublishedOn":"2017-10-20T12:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Five-star mobile apps are all about consistent and predictable output. It&#8217;s not a good experience for users when an app suddenly crashes or doesn’t format correctly on their mobile screens. Developers can easily avoid these scenarios by testing for various scenarios on different devices, and Visual Studio Mobile Center makes it easy to test your mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/\">Five-Star Apps with Mobile Center Test</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/","RawContent":null},{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Tuesday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null},{"Title":"Updating Xamarin.iOS Apps for the iPhone X","PublishedOn":"2017-10-11T18:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>There&#8217;s no doubt that one of the biggest announcements from Apple this year was the iPhone X. The new Super Retina display is edge-to-edge on the device, creating an immersive experience we had yet to see on iPhones. With the new screen changes on the iPhone X, developers may be asking themselves, &#8220;What do I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/\">Updating Xamarin.iOS Apps for the iPhone X</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6772643857","Type":"PullRequestEvent","CreatedAt":"2017-10-27T00:12:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/979","RelatedDescription":"Merged pull request \"[build] Add `make prepare-image-dependencies` target.\" (#979) at xamarin/xamarin-android","RelatedBody":"We are investigating building Xamarin.Android atop\r\nVisual Studio Team System (VSTS) in addition to our current Jenkins\r\nsetup, and one of the issues we're running into is \"bootstrapping\":\r\nVSTS is configured to create a \"fresh\" VM for each build.\r\n\r\n**Pro**: It should allow builds to be more reliable, as previous build\r\nartifacts won't be present, and thus won't cause/hide errors.\r\n\r\n**Con**: *Previous build artifacts are not present*. Previous build\r\nartifacts such as *downloading and extracting* the Android NDK & SDK,\r\nusing `brew` to install dependencies, building MXE...\r\n\r\nEnsuring that the dependencies are installed through `make prepare`\r\ncan be quite time consuming. What we want is a way to ensure that the\r\n\"build image\" -- *what's already installed* when the VM boots --\r\ncontains all of our desired dependencies.\r\n\r\nFurthermore, we *don't* want to have the responsible parties checkout\r\nand build xamarin-android in order to determine what the dependencies\r\nshould be.\r\n\r\nAttempt to square this circle by adding a new\r\n`make prepare-image-dependencies` target, which processes\r\n`@(AndroidSdkItem)`, `@(AndroidNdkItem)`, `@(AntItem)`, and\r\n`@(RequiredProgram)` to create a `prepare-image-dependencies.sh`\r\nscript which will download and install the required dependencies.\r\n\r\nThe generated shell script does *not* take the state of the machine\r\nrunning `make prepare-image-dependencies` into consideration. This\r\nallows the target to be executed on one machine, and the output run\r\non another.\r\n\r\n        $ make prepare-image-dependencies\r\n        # creates `prepare-image-dependencies.sh`\r\n\r\n*Note*: `make prepare-image-dependencies` does not currently deal\r\nwith MXE.  (Building MXE on the VSTS VM is *very* time consuming, so\r\nit's something we need to take care of. It is not *yet* dealt with.)\r\n"},{"Id":"6772478044","Type":"PullRequestEvent","CreatedAt":"2017-10-26T23:09:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/986","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Move DesignTime Cache files to designtime folder.\" (#986) at xamarin/xamarin-android","RelatedBody":"The DesignTime build is generally run before any nuget packages\r\nhave been restore. As a result we end up with empty cache files.\r\nBecause those files exist and are considered uptodate, when the\r\nmain build finally happens they are not re-generated.\r\nThis causes errors like\r\n\r\n\terror: Error: No resource found that matches the given name: attr 'colorAccent'.\r\n\r\non a new default template.\r\n\r\nSo the DesignTime build should have its own set of cache files which\r\ndo not conflict with the main build. This way when the main build\r\nruns the cache files will not be in place."},{"Id":"6771684139","Type":"PullRequestEvent","CreatedAt":"2017-10-26T19:50:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/985","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix a Hang in Visual Studio DesignTime Build.\" (#985) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=60080\r\n\r\nIn a previus attempt to fix an intellisense build (1cd582ec) we\r\ncaused this issue. The DesignTime build does NOT like our AsyncTask\r\nas it locks the IDE.\r\n\r\nThis commit puts the old code back in place which skips the task\r\nif we are in DesignTime mode. But so we can easily test it, we\r\nemit an message that our test can pick up to ensure we are doing\r\nthe correct thing. Without the message we have no way of knowing\r\nif the task is skipped."},{"Id":"6770626737","Type":"PullRequestEvent","CreatedAt":"2017-10-26T16:07:23","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/986","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Move DesignTime Cache files to designtime folder.\" (#986) at xamarin/xamarin-android","RelatedBody":"The DesignTime build is generally run before any nuget packages\r\nhave been restore. As a result we end up with empty cache files.\r\nBecause those files exist and are considered uptodate, when the\r\nmain build finally happens they are not re-generated.\r\nThis causes errors like\r\n\r\n\terror: Error: No resource found that matches the given name: attr 'colorAccent'.\r\n\r\non a new default template.\r\n\r\nSo the DesignTime build should have its own set of cache files which\r\ndo not conflict with the main build. This way when the main build\r\nruns the cache files will not be in place."},{"Id":"6770488908","Type":"PullRequestEvent","CreatedAt":"2017-10-26T15:42:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/984","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Force xbuild to behave like msbuild.\" (#984) at xamarin/xamarin-android","RelatedBody":"Commit 8643ded9 tried to make sure xbuild worked like msbuild\r\nwhen it came to `'$(DebugType)' == 'None'`. The \"fix\" however\r\nwas not correct.\r\n\r\nWhen DebugType is None under msbuild, it changes to `portable`\r\nand DebugSymbols get set to 'true'. Also when DebugType is empty\r\nit gets set to `portable` but the DebugSymbols is left alone.\r\n\r\nSo we need to get xbuild to do the same. Otherwise we get the\r\nwrong runtimes. But by the time we get the the .Common.targets\r\nit is too late to change the `DebugSymbols` value. xbuild does\r\nnot take the change. So we need to do this before xbuild gets\r\na chance to set the value of `DebugSymbols`.\r\n\r\nThe trick is to alter the properties in the CSharp and Fsharp\r\ntargets BEFORE we import the Microsoft targets."},{"Id":"6770402130","Type":"PullRequestEvent","CreatedAt":"2017-10-26T15:27:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/981","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix Framework Path Detection.\" (#981) at xamarin/xamarin-android","RelatedBody":"On jenkins is appears we are getting a situation where we\r\nare picking up an empty directory for the FrameworkPath.\r\nAs a result we always get 0 when trying to pick up the\r\nruntime that are available. So tests which check the runtimes\r\nfail.\r\n\r\nThis commit adds a check for a 'libmono-android.release.so' file\r\nso can ensure the required files exist in the folder. Also added\r\ncode to pick up the `CONFIGURATION` environment variable from\r\nthe Makefile."},{"Id":"6770125911","Type":"PullRequestEvent","CreatedAt":"2017-10-26T14:41:01","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/985","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix a Hang in Visual Studio DesignTime Build.\" (#985) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=60080\r\n\r\nIn a previus attempt to fix an intellisense build (1cd582ec) we\r\ncaused this issue. The DesignTime build does NOT like our AsyncTask\r\nas it locks the IDE.\r\n\r\nThis commit puts the old code back in place which skips the task\r\nif we are in DesignTime mode. But so we can easily test it, we\r\nemit an message that our test can pick up to ensure we are doing\r\nthe correct thing. Without the message we have no way of knowing\r\nif the task is skipped."},{"Id":"6769917043","Type":"PullRequestEvent","CreatedAt":"2017-10-26T14:05:17","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/984","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Force xbuild to behave like msbuild.\" (#984) at xamarin/xamarin-android","RelatedBody":"Commit 8643ded9 tried to make sure xbuild worked like msbuild\r\nwhen it came to `'$(DebugType)' == 'None'`. The \"fix\" however\r\nwas not correct.\r\n\r\nWhen DebugType is None under msbuild, it changes to `portable`\r\nand DebugSymbols get set to 'true'. Also when DebugType is empty\r\nit gets set to `portable` but the DebugSymbols is left alone.\r\n\r\nSo we need to get xbuild to do the same. Otherwise we get the\r\nwrong runtimes. But by the time we get the the .Common.targets\r\nit is too late to change the `DebugSymbols` value. xbuild does\r\nnot take the change. So we need to do this before xbuild gets\r\na chance to set the value of `DebugSymbols`.\r\n\r\nThe trick is to alter the properties in the CSharp and Fsharp\r\ntargets BEFORE we import the Microsoft targets."},{"Id":"6769655431","Type":"PullRequestEvent","CreatedAt":"2017-10-26T13:18:56","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/983","RelatedDescription":"Merged pull request \"Change Android repository base URL to https://dl.google.com\" (#983) at xamarin/xamarin-android","RelatedBody":"The `dl.` CDN has more backends than `dl-ssl.` and is generally faster.\r\n\r\nAlso, change ant download to use HTTPS (in preparation for the world where plain\r\nhttp is gone :P)"},{"Id":"6769648028","Type":"PullRequestEvent","CreatedAt":"2017-10-26T13:17:31","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/983","RelatedDescription":"Opened pull request \"Change Android repository base URL to https://dl.google.com\" (#983) at xamarin/xamarin-android","RelatedBody":"The `dl.` CDN has more backends than `dl-ssl.` and is generally faster.\r\n\r\nAlso, change ant download to use HTTPS (in preparation for the world where plain\r\nhttp is gone :P)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6773352909","Type":"PullRequestEvent","CreatedAt":"2017-10-27T05:19:15","Actor":"gatm50","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1235","RelatedDescription":"Opened pull request \"Bug 57674 - XF.UWP ListView not honoring INotifyCollectionChanged \" (#1235) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe ListView Renderer for UWP was not managing the OnCollectionChanged event.\r\nAdding a new method and subscribing it to the respective handler to manage the OnCollectionChanged event\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=57674\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6771204387","Type":"PullRequestEvent","CreatedAt":"2017-10-26T18:07:35","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1230","RelatedDescription":"Merged pull request \"Merge 2.4.0 into 15-5 branch\" (#1230) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMerged branch 2.4.0 into 15-5 to catch any commits that had been cherry-picked to 2.4.0 after 15-5 was cut. There are a lot of commits listed here, but only a couple were not already present with a different SHA. See the File changes for what is actually changing. #1190, #1194, #1200, #1227 specifically.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://forums.xamarin.com/discussion/comment/303300/#Comment_303300\r\n\r\n### API Changes ###\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6771147298","Type":"PullRequestEvent","CreatedAt":"2017-10-26T17:55:26","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1231","RelatedDescription":"Closed pull request \"[Packages]Update UITest and consolidate cecil\" (#1231) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUpdate uitest \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6770615275","Type":"PullRequestEvent","CreatedAt":"2017-10-26T16:05:11","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1234","RelatedDescription":"Opened pull request \"[Android] Call out correct version for new Obsolete messages\" (#1234) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nObsolete messages for new renderer constructors in Android were using a placeholder version number; this change updates the messages to the correct version number.\r\n\r\n"},{"Id":"6769725977","Type":"PullRequestEvent","CreatedAt":"2017-10-26T13:31:49","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1232","RelatedDescription":"Opened pull request \"[Xaml] create the [XamlResourceId] at assembly level\" (#1232) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml] create the [XamlResourceId] at assembly level\r\n\r\nthis allows, as before, finding the resource for a type, but also find the type of a resource or from a pack-like uri\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6771996978","Type":"PullRequestEvent","CreatedAt":"2017-10-26T20:59:22","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2930","RelatedDescription":"Opened pull request \"[60290] Change monotouch-test and xammac_tests to use all .cs files in monotouch-test/\" (#2930) at xamarin/xamarin-macios","RelatedBody":"Changed xammac_tests.csproj and monotouch-test.csproj to use:\r\n\r\n```\r\n<Compile Include=\"..\\monotouch-test\\**\\*.cs\" Exclude=\"..\\monotouch-test\\obj\\**\">\r\n      <Link>%(RecursiveDir)%(Filename).cs</Link>\r\n    </Compile>\r\n```\r\n\r\ninstead of manually including the test files.  This avoids the issue of tests being added to monotouch-test and not being added to xammac_tests, or tests being created for monotouch-test but not getting added to the .csproj file so they don't get run."},{"Id":"6771596145","Type":"PullRequestEvent","CreatedAt":"2017-10-26T19:30:39","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2914","RelatedDescription":"Merged pull request \"[msbuild] Updated DetectSigningIdentity to allow thumbprints for the …\" (#2914) at xamarin/xamarin-macios","RelatedBody":"…CodeSignKey"},{"Id":"6770903906","Type":"PullRequestEvent","CreatedAt":"2017-10-26T17:02:33","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2928","RelatedDescription":"Merged pull request \"bumped max Mono version to 5.8.99\" (#2928) at xamarin/xamarin-macios","RelatedBody":"This builds and works fine for me locally."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"923637228332552193","CreatedAt":"2017-10-26T19:47:30+00:00","UserScreenname":"xamarinhq","Text":"Add large titles to your iOS 11 apps in this post from @conceptdev: https://t.co/RDyk6GDVUU https://t.co/ZOsrbAC1sc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":12,"RawContent":null},{"Id":"923566386881974272","CreatedAt":"2017-10-26T15:06:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's Charles Petzold shows you how to get started with #SkiaSharp for #XamarinForms: https://t.co/mlySNk9fev","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"923279245887135745","CreatedAt":"2017-10-25T20:05:00+00:00","UserScreenname":"xamarinhq","Text":"Introducing the Android SDK Manager: https://t.co/U1OxP9CeeJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":30,"RawContent":null},{"Id":"923217836167847937","CreatedAt":"2017-10-25T16:00:59+00:00","UserScreenname":"xamarinhq","Text":"Have you saved the date yet? Visit https://t.co/swPXPdFtSt and add a calendar reminder to join us live online Novem… https://t.co/uLp7HDcxD4","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null},{"Id":"923216833938935809","CreatedAt":"2017-10-25T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":18,"RawContent":null},{"Id":"923005188637646853","CreatedAt":"2017-10-25T01:56:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our 11/7 webinar on building better games with #Unity3D and Microsoft #Azure! Register now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"922915335824478210","CreatedAt":"2017-10-24T19:58:57+00:00","UserScreenname":"xamarinhq","Text":"Check out 3 BIG new features to explore in the #XamarinForms 2.5.0 Pre-Release: https://t.co/Du28Gz40ru","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":93,"FavoriteCount":73,"RawContent":null},{"Id":"922491050886868992","CreatedAt":"2017-10-23T15:53:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"922284943169990659","CreatedAt":"2017-10-23T02:14:00+00:00","UserScreenname":"xamarinhq","Text":"Add #pushnotifications to your Android apps with #Xamarin, #Firebase Cloud Messaging, and #Azure Notification Hubs: https://t.co/9uyWpi2qlp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":38,"RawContent":null},{"Id":"921881787009249280","CreatedAt":"2017-10-21T23:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":31,"RawContent":null},{"Id":"921466915117260801","CreatedAt":"2017-10-20T20:03:27+00:00","UserScreenname":"xamarinhq","Text":"Get five-star app quality every time with testing from #VSMobileCenter: https://t.co/sUR6Ctm1xk https://t.co/gGQOYtNmkC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":14,"RawContent":null},{"Id":"921409932993482752","CreatedAt":"2017-10-20T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/8uG0wblORA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":19,"RawContent":null},{"Id":"921089184667983872","CreatedAt":"2017-10-19T19:02:29+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar on building better games with #Unity3D and Microsoft #Azure: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":35,"RawContent":null},{"Id":"921044016610922496","CreatedAt":"2017-10-19T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"920749716610207745","CreatedAt":"2017-10-18T20:33:33+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/jFJho4InOr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":42,"RawContent":null},{"Id":"920684397212438529","CreatedAt":"2017-10-18T16:14:00+00:00","UserScreenname":"xamarinhq","Text":"Request reviews with iOS 10.3’s SKStoreReviewController: https://t.co/HgugUTrN81","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":5,"RawContent":null},{"Id":"920320046701989894","CreatedAt":"2017-10-17T16:06:12+00:00","UserScreenname":"xamarinhq","Text":"Try out updates to Xamarin Live, a new Mac connection workflow, and more in the Visual Studio 2017 15.5 Preview:… https://t.co/iB8bIZkhW1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":41,"RawContent":null},{"Id":"920032724999725056","CreatedAt":"2017-10-16T21:04:29+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":102,"FavoriteCount":53,"RawContent":null},{"Id":"919958111670165505","CreatedAt":"2017-10-16T16:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2017-10-27T05:30:39.2529918Z","RunDurationInMilliseconds":3856}