{"Data":{"GitHub":{"Issues":[{"Id":"511276413","IsPullRequest":true,"CreatedAt":"2019-10-24T05:29:42","Actor":"dotnet-maestro[bot]","Number":"2166","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191022.8\r\n- **Date Produced**: 10/22/2019 10:28 PM\r\n- **Commit**: b809e63d8ef475faaf6fecbe8bf77180f8e3550c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19522.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19522.8\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2166)","Url":"https://github.com/dotnet/winforms/pull/2166","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2166)"},{"Id":"511714696","IsPullRequest":true,"CreatedAt":"2019-10-24T05:27:51","Actor":"RussKie","Number":"2177","RawContent":null,"Title":"WIP: Fix tests","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nCloses #1999\r\n\r\n\r\n## Proposed changes\r\n\r\n- Disable test parallelism\r\nMultiple experiments suggest that even in STA mode tests overwhelm the system either via race conditions or flooding the messaging loop which results in deadlocks and hangs.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None, test infra changes\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None, test infra changes\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2177)","Url":"https://github.com/dotnet/winforms/pull/2177","RelatedDescription":"Open PR \"WIP: Fix tests\" (#2177)"},{"Id":"511622222","IsPullRequest":true,"CreatedAt":"2019-10-24T00:45:10","Actor":"dotnet-maestro[bot]","Number":"2174","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.1.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.1.0-preview2.19522.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.1.0-preview2.19522.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2174)","Url":"https://github.com/dotnet/winforms/pull/2174","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#2174)"},{"Id":"511637356","IsPullRequest":false,"CreatedAt":"2019-10-24T00:24:45","Actor":"wtgodbe","Number":"2176","RawContent":null,"Title":"Re-enable SDL validation in release/3.1","State":"open","Body":"SDL Validation is still failing in the release/3.1 internal builds. We should figure out why, then re-enable it (once the branch opens back up after preview2 is finished). \r\n\r\nSee https://github.com/dotnet/winforms/pull/2175, https://github.com/dotnet/arcade/issues/4099.\r\n\r\nCC @AdamYoblick @RussKie @riarenas @JohnTortugo ","Url":"https://github.com/dotnet/winforms/issues/2176","RelatedDescription":"Open issue \"Re-enable SDL validation in release/3.1\" (#2176)"},{"Id":"511637119","IsPullRequest":true,"CreatedAt":"2019-10-24T00:24:19","Actor":"wtgodbe","Number":"2175","RawContent":null,"Title":"Disable SDL validation in release/3.1","State":"closed","Body":"Disable SDL validation to unblock the 3.1-preview2 builds\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2175)","Url":"https://github.com/dotnet/winforms/pull/2175","RelatedDescription":"Closed or merged PR \"Disable SDL validation in release/3.1\" (#2175)"},{"Id":"511616761","IsPullRequest":true,"CreatedAt":"2019-10-23T23:57:01","Actor":"wtgodbe","Number":"2173","RawContent":null,"Title":"Fix SDL validation in rel/3.1","State":"closed","Body":"Ports https://github.com/dotnet/winforms/pull/2150 to release/3.1 to unblock the preview2 builds.\r\n\r\nCC @AdamYoblick @RussKie \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2173)","Url":"https://github.com/dotnet/winforms/pull/2173","RelatedDescription":"Closed or merged PR \"Fix SDL validation in rel/3.1\" (#2173)"},{"Id":"511462757","IsPullRequest":false,"CreatedAt":"2019-10-23T17:17:36","Actor":"zsd4yr","Number":"2172","RawContent":null,"Title":"Write test(s) to ensure that all TypeConverter and Editor Attributes on internals are properly routed","State":"open","Body":"For each `TypeConverter` and `Editor` attribute connecting a type to its type converter or editor by a fully qualified string, we need a `TypeForwardTo` attribute in the corresponding facade. This is required as GenFacades will not automatically generate `TypeForwardTo` statements for internals. \r\n\r\nPlease see https://github.com/dotnet/winforms/pull/2078#discussion_r337787642 for more details on the history of this need and discussion.\r\n\r\nSuggestion: write a unit test that rolls over every assembly we own and uses reflection to determine which internal types, properties, and methods have these attributes. Then, for each of those that exist, determine whether or not that type was in an assembly that we now type forward from. If so, ensure that there is a manually added `TypeForwardTo` statement in the facades.","Url":"https://github.com/dotnet/winforms/issues/2172","RelatedDescription":"Open issue \"Write test(s) to ensure that all TypeConverter and Editor Attributes on internals are properly routed\" (#2172)"},{"Id":"511460169","IsPullRequest":false,"CreatedAt":"2019-10-23T17:12:05","Actor":"zsd4yr","Number":"2171","RawContent":null,"Title":"TypeConverter Attribute over DataGridViewColumn.DataPropertyName should resolve to System.Design","State":"open","Body":"https://github.com/dotnet/winforms/blob/b34582761bea089eb0d19aba8e43c4b90d90c98e/src/System.Windows.Forms/src/System/Windows/Forms/DataGridViewColumn.cs#L186-L194\r\n\r\nThis attribute was changed to resolve to the new assembly of this type in #1545 but as pointed out in https://github.com/dotnet/winforms/pull/2078#discussion_r337787642 this is not the approach we should take.\r\n\r\nFor a fix, we need to:\r\n* change the `AssembleRef` back to `SystemDesign`\r\n* manually add a TypeForwardTo for this internal type\r\n* test\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2171","RelatedDescription":"Open issue \"TypeConverter Attribute over DataGridViewColumn.DataPropertyName should resolve to System.Design\" (#2171)"},{"Id":"511418063","IsPullRequest":true,"CreatedAt":"2019-10-23T15:49:59","Actor":"hughbe","Number":"2170","RawContent":null,"Title":"Cleanup OLEIVERB/OLECLOSE enums","State":"open","Body":"## Proposed Changes\r\n- Cleanup OLEIVERB\r\n- Cleanup OLECLOSE\r\n- Add AxHost.DoVerb tests\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2170)","Url":"https://github.com/dotnet/winforms/pull/2170","RelatedDescription":"Open PR \"Cleanup OLEIVERB/OLECLOSE enums\" (#2170)"},{"Id":"511377544","IsPullRequest":true,"CreatedAt":"2019-10-23T14:50:42","Actor":"hughbe","Number":"2169","RawContent":null,"Title":"Cleanup ProgressBar code","State":"open","Body":"## Proposed Changes\r\n- Rename `ProgressBar` fields\r\n- Follow coding guidelines in `ProgressBar`\r\n\r\nTested by #2141 \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2169)","Url":"https://github.com/dotnet/winforms/pull/2169","RelatedDescription":"Open PR \"Cleanup ProgressBar code\" (#2169)"},{"Id":"511286621","IsPullRequest":true,"CreatedAt":"2019-10-23T12:23:01","Actor":"dotnet-maestro[bot]","Number":"2168","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.10\r\n- **Date Produced**: 10/23/2019 7:02 AM\r\n- **Commit**: 57b6a955d50a983d290a5add72c244e19a56cb2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19522.10\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19522.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19522.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2168)","Url":"https://github.com/dotnet/winforms/pull/2168","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#2168)"},{"Id":"511286490","IsPullRequest":true,"CreatedAt":"2019-10-23T12:22:46","Actor":"M-Lipin","Number":"2167","RawContent":null,"Title":"WIP: Fixing Narrator caps navigation to take into account control tab index","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2164 \r\n\r\n\r\n## Proposed changes\r\n\r\n- [x] Adding UIA navigation to the Form control;\r\n- [ ] Adding UIA support for Control;\r\n- [ ] Adding UIA previous and next navigation to base Control.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Narrator caps navigation will take into account control tab index.\r\n- There will be no mismatch between common tab navigation accompanied with Narrator announcement and Narrator caps navigation.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Middle risk as requires switching to UIA for all controls. Need to rebase on 5.0.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/67392238-da762f00-f5a8-11e9-8795-de00368c0cfe.png)\r\n\r\n\r\n### After\r\n\r\n* To be added (work in progress).\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n* To be tested.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n* To be added.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n* To be added.\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2167)","Url":"https://github.com/dotnet/winforms/pull/2167","RelatedDescription":"Open PR \"WIP: Fixing Narrator caps navigation to take into account control tab index\" (#2167)"},{"Id":"511272386","IsPullRequest":true,"CreatedAt":"2019-10-23T11:54:19","Actor":"vladimir-krestov","Number":"2165","RawContent":null,"Title":"Porting System.ComponentModel.Design.DateTimeEditor","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2019\r\nRelated issue: #1115\r\nHave you experienced this same bug with .NET Framework?: No\r\n\r\n## Proposed changes\r\n\r\n- Add System.ComponentModel.Design.DateTimeEditor class\r\n- Make code refactoring\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed DateTime editor to compliance with .Net 4.8.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- TextBox editor:\r\n![image](https://user-images.githubusercontent.com/49272759/67389897-31c5d080-f5a4-11e9-91a4-5e93fb0717dd.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n- DateTime editor:\r\n![image](https://user-images.githubusercontent.com/49272759/67385877-99781d80-f59c-11e9-847f-3b0b5f911ed4.png)\r\n\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2165)","Url":"https://github.com/dotnet/winforms/pull/2165","RelatedDescription":"Open PR \"Porting System.ComponentModel.Design.DateTimeEditor\" (#2165)"},{"Id":"511254605","IsPullRequest":false,"CreatedAt":"2019-10-23T11:17:38","Actor":"M-Lipin","Number":"2164","RawContent":null,"Title":"Narrator focus is not moving in proper logical order when user is navigating by using caps + arrow keys (tab index is ignored)","State":"open","Body":"* .NET Core Version: 3.1\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nNarrator focus is not moving in proper logical order when user is navigating by using caps + arrow keys: Narrator goes thru the controls in order which is the order of controls being added to the Controls collection of the form in design time (order of controls can be corrected by manual changing the order of adding the control to the collection of child controls.\r\n\r\n**Actual behavior:**\r\n![image](https://user-images.githubusercontent.com/23213980/67387124-e3620300-f59e-11e9-99a5-a8668018df23.png)\r\n\r\n**Expected behavior:**\r\nNarrator caps + arrow navigation should take into account control tab index and accessible hierarchy should also take into account control tab index. \r\n\r\n**Minimal repro:**\r\n* Create WinForms Application with one form\r\n* Add TextBox1 to the bottom part of the form\r\n* Add TextBox2 to the top part of form\r\n* Add TextBox3 to the middle part of form\r\n* Set tab index of TextBox2 to 1\r\n* Set tab index of TextBox3 to 2\r\n* Set tab index of TextBox1 to 3\r\n* Run the app and navigate using Narrator.\r\n* Observe Narrator caps + arrow right navigation goes firstly to TextBox1 -> TextBox2 -> TextBox3, but should go accordingly to tab index TextBox2 -> TextBox3 -> TextBox1 ","Url":"https://github.com/dotnet/winforms/issues/2164","RelatedDescription":"Open issue \"Narrator focus is not moving in proper logical order when user is navigating by using caps + arrow keys (tab index is ignored)\" (#2164)"},{"Id":"511220849","IsPullRequest":false,"CreatedAt":"2019-10-23T10:12:23","Actor":"chenxinyanc","Number":"2163","RawContent":null,"Title":"The return value of UnsafeNativeMethods.SetParent should be properly checked","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`) N/A\r\n* Have you experienced this same bug with .NET Framework?: Yes (.NET Framework 4.6/4.7)\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nI couldn't find a place to post the WinForm issue on .NET Framework, but since we have WinForm on Core CLR, and the subjected code are the same, so…\r\n\r\nWe've observed failures of `SetParent` when trying to set our WinForm control (`Panel`) as a child of another `Panel`. It seems that [native `SetParent` can fail if the controls somehow are under different DPI-awareness setting since Windows 10 1703](https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setparent#remarks).\r\n\r\nhttps://github.com/dotnet/winforms/blob/b34582761bea089eb0d19aba8e43c4b90d90c98e/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L11043\r\n\r\nI think we should check for the return value, and call something like `Marshal.ThrowExceptionForHR` if `SetParent` failed, so the users may track this kind of failure more easily.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nNo Exception raised even if `SetParent` returned 0 and `GetLastError` returned `ERROR_INVALID_STATE`.\r\n\r\n**Expected behavior:**\r\nWe should throw some sort of Win32Exception telling user `SetParent` failed.\r\n\r\n**Minimal repro:**\r\nFor now I cannot provide a clean repro for this, but I can work out one if this is really needed.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2163","RelatedDescription":"Open issue \"The return value of UnsafeNativeMethods.SetParent should be properly checked\" (#2163)"},{"Id":"511134318","IsPullRequest":true,"CreatedAt":"2019-10-23T07:34:51","Actor":"gpetrou","Number":"2162","RawContent":null,"Title":"Add ARW enum and remove ARW constants","State":"open","Body":"## Proposed changes\r\n\r\n- Add ARW enum.\r\n- Remove ARW constants and replace their usages with the above enum.","Url":"https://github.com/dotnet/winforms/pull/2162","RelatedDescription":"Open PR \"Add ARW enum and remove ARW constants\" (#2162)"},{"Id":"511126681","IsPullRequest":true,"CreatedAt":"2019-10-23T07:18:58","Actor":"gpetrou","Number":"2161","RawContent":null,"Title":"Remove SHGFI constants","State":"open","Body":"## Proposed changes\r\n\r\n- Remove some constants that seem to be unused. Alternatively, we could add the corresponding enum if they are needed for near-future changes.","Url":"https://github.com/dotnet/winforms/pull/2161","RelatedDescription":"Open PR \"Remove SHGFI constants\" (#2161)"},{"Id":"511126435","IsPullRequest":false,"CreatedAt":"2019-10-23T07:18:21","Actor":"PeterPann23","Number":"2160","RawContent":null,"Title":"Winforms does not implement windows theme from users profile","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description: Winforms is using standard color scheme and not the users profiles theme**\r\n\r\n**Actual behavior:** Color scheme (borders/ colors/ icons) is not the same as in the -net framework nor is it the windows user profile color theme\r\n\r\n**Expected behavior:**\r\nOne would be able to expect that there would be a option/property to implement legacy or to use the users Profils theme colors. there is no such option, nor does the default color's follow windows 10 color settings. \r\n\r\nIf executing in windows the forms should be able to pickup the users profile and use the appropriate colors. At the moment a fixed color is used, this is possible to be fixed by overriding on paint but this should not be needed. The usual comment to use WPF is not an option as Winforms is the platform chosen. \r\n\r\nIt should be relatively easy to have the color scheme be implemented the same way as Application.EnableVisualStyles() is implemented, it even could be a parameter with an enum stating if legacy or windows theme colors should be used. Please note that I'm mentioning colors not WPF rendering. \r\n","Url":"https://github.com/dotnet/winforms/issues/2160","RelatedDescription":"Open issue \"Winforms does not implement windows theme from users profile\" (#2160)"},{"Id":"511123704","IsPullRequest":true,"CreatedAt":"2019-10-23T07:12:05","Actor":"RussKie","Number":"2159","RawContent":null,"Title":"[master] Update dependencies from https://github.com/dotnet/core-setup build 20191022.6","State":"open","Body":"- Microsoft.NETCore.App - 5.0.0-alpha1.19522.6\r\n\r\nDependency coherency updates\r\n\r\n- Microsoft.NETCore.Platforms - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- Microsoft.Win32.Registry - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- Microsoft.Win32.SystemEvents - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- System.CodeDom - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- System.Configuration.ConfigurationManager - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- System.Drawing.Common - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- System.Resources.Extensions - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- System.Security.Cryptography.Cng - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- System.Security.Permissions - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- System.Windows.Extensions - 5.0.0-alpha1.19521.4 (parent: Microsoft.NETCore.App)\r\n- Microsoft.NET.Sdk.IL - 5.0.0-alpha1.19522.1 (parent: Microsoft.NETCore.App)\r\n- Microsoft.NETCore.ILAsm - 5.0.0-alpha1.19522.1 (parent: Microsoft.NETCore.App)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2159)","Url":"https://github.com/dotnet/winforms/pull/2159","RelatedDescription":"Open PR \"[master] Update dependencies from https://github.com/dotnet/core-setup build 20191022.6\" (#2159)"},{"Id":"511121269","IsPullRequest":true,"CreatedAt":"2019-10-23T07:06:39","Actor":"gpetrou","Number":"2158","RawContent":null,"Title":"Add FW, OUT_PRECIS and QUALITY enums and remove NativeMethods.cs and WindowsFontQuality.cs","State":"open","Body":"## Proposed changes\r\n\r\n- Create FW, OUT_PRECIS and QUALITY enums\r\n- Remove NativeMethods.cs and WindowsFontQuality.cs and replace usages with above enums","Url":"https://github.com/dotnet/winforms/pull/2158","RelatedDescription":"Open PR \"Add FW, OUT_PRECIS and QUALITY enums and remove NativeMethods.cs and WindowsFontQuality.cs\" (#2158)"},{"Id":"511113270","IsPullRequest":true,"CreatedAt":"2019-10-23T06:49:12","Actor":"RussKie","Number":"2157","RawContent":null,"Title":"Fix 2091 Mark deprecated controls as non-browsable","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2091\r\n\r\n\r\n## Proposed changes\r\n\r\n- Hide deprecated controls from intellisense.\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Deprecated controls no longer available via intellisense\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal, the controls in questions have been deprecated in .NET 2.0 era, and shouldn't have meaningful use.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/67365226-f08dea80-f5bc-11e9-854b-a354ace0e778.png)\r\n\r\n \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2157)","Url":"https://github.com/dotnet/winforms/pull/2157","RelatedDescription":"Open PR \"Fix 2091 Mark deprecated controls as non-browsable\" (#2157)"},{"Id":"511105346","IsPullRequest":false,"CreatedAt":"2019-10-23T06:30:24","Actor":"Amy-Li02","Number":"2156","RawContent":null,"Title":"The winforms .NET Core app cannot run when targeting .NET Core 5.0","State":"open","Body":"* .NET Core Version: .NET Core SDK 5.0.100 - alpha1 5.0.100.14915\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**More info:** \r\n1. WPF .NET Core app also cannot run when targeting .NET Core 5.0.\r\n2. Console .NET Core app can run when targeting .NET Core 5.0.\r\n\r\n**Minimal repro:**\r\n1. Install .NET core 5.0 SDK from: https://github.com/dotnet/core-sdk.\r\n2. Create a Windows Forms .NET Core App and target net core 5.0.\r\n3. Press F5.\r\n\r\n**Actual behavior:** \r\nThe WinForms .NET core app cannot run.\r\n\r\n**Expected behavior:**\r\nThe WinForms .NET core app can run successfully.\r\n\r\n**Error log:**\r\n[ReproSteps_1571820778007.zip](https://github.com/dotnet/winforms/files/3761300/ReproSteps_1571820778007.zip)","Url":"https://github.com/dotnet/winforms/issues/2156","RelatedDescription":"Open issue \"The winforms .NET Core app cannot run when targeting .NET Core 5.0\" (#2156)"},{"Id":"511048410","IsPullRequest":false,"CreatedAt":"2019-10-23T03:44:15","Actor":"TempeBrennan","Number":"2155","RawContent":null,"Title":"Icon paint a little dim after migrate to .NET Core","State":"closed","Body":"* .NET Core Version: 3.0 Preview1\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nWe use this code to paint icon in form.\r\n```\r\npublic partial class Form1 : Form\r\n    {\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        private void Form1_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            e.Graphics.DrawIcon(new Icon(\"Image.ico\"), 0, 0);\r\n        }\r\n    }\r\n```\r\nWhen use .NET Core, image bit depth decreased. Is this design?\r\nWould you like to share some workaround? Thanks a lot.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n![Image 156](https://user-images.githubusercontent.com/51563666/67354483-cf5ed700-f587-11e9-9e6f-cebadccd1b85.png)\r\n**Expected behavior:**\r\n![Image 157](https://user-images.githubusercontent.com/51563666/67354476-ca9a2300-f587-11e9-92f2-fe3df11094b8.png)\r\n\r\n**Minimal repro:**\r\n[WindowsFormsApp1.zip](https://github.com/dotnet/winforms/files/3759950/WindowsFormsApp1.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2155","RelatedDescription":"Closed issue \"Icon paint a little dim after migrate to .NET Core\" (#2155)"},{"Id":"511013188","IsPullRequest":true,"CreatedAt":"2019-10-23T01:14:35","Actor":"RussKie","Number":"2154","RawContent":null,"Title":"Partially revert \"Porting DataMemberFieldConverter\"  f477b2a","State":"open","Body":"Relates to #1545\r\nCloses #2171\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Partially revert \"Porting DataMemberFieldConverter\" f477b2a\r\n\r\nWhilst we do not support nor cant be expected to support customers who reference our internals, in some scenarios like `UITypeEditor`s and `TypeConverter`s may still be used by consumers to enhance their runtime experience. E.g. https://github.com/dotnet/winforms/pull/2078#discussion_r337777751\r\n\r\nType forward `DataMemberFieldConverter` to avoid breaking existing customers.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Fixed for those porting .NET desktop apps to 3.0 and then to 3.1\r\n- Unaffected for those porting .NET desktop apps to 3.1\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2154)","Url":"https://github.com/dotnet/winforms/pull/2154","RelatedDescription":"Open PR \"Partially revert \"Porting DataMemberFieldConverter\"  f477b2a\" (#2154)"},{"Id":"511003545","IsPullRequest":false,"CreatedAt":"2019-10-23T00:36:53","Actor":"RussKie","Number":"2153","RawContent":null,"Title":"Broken types","State":"open","Body":"* .NET Core Version: **3.0+**\r\n* Have you experienced this same bug with .NET Framework?: **Yes**\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nPreparing API compat reports https://github.com/dotnet/winforms/pull/2092 we stumbled upon several types that are declared as `public abstract` but contain `internal abstract` members.\r\nThis meas these types can't be used outside the framework's codebase and, thus, are useless to our consumers:\r\n![image](https://user-images.githubusercontent.com/4403806/67345669-93c40d00-f587-11e9-8709-54977e78f6c5.png)\r\n\r\nThe types in questions:\r\n* [`System.Windows.Forms.BindingManagerBase`](https://github.com/dotnet/winforms/blob/release/3.0/src/System.Windows.Forms/src/System/Windows/Forms/BindingManagerBase.cs)\r\n* [`System.Windows.Forms.ScrollProperties`](https://github.com/dotnet/winforms/blob/release/3.0/src/System.Windows.Forms/src/System/Windows/Forms/ScrollProperties.cs)\r\n\r\n\r\n**Expected behavior:**\r\n\r\nTBD\r\n\r\n**Minimal repro:**\r\n\r\nTry subclass any of the above types","Url":"https://github.com/dotnet/winforms/issues/2153","RelatedDescription":"Open issue \"Broken types\" (#2153)"},{"Id":"510976480","IsPullRequest":true,"CreatedAt":"2019-10-22T23:03:25","Actor":"hughbe","Number":"2152","RawContent":null,"Title":"Cleanup IOleClientSite","State":"open","Body":"## Proposed Changes\r\n- Cleanup IOleClientSite\r\n- Introduce and use `OLEWHICHMK`/`OLEGETMONIKER` enums\r\n- Make IOleObject.GetClientSite `PreserveSig` and remove associated catch blocks for COMException\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2152)","Url":"https://github.com/dotnet/winforms/pull/2152","RelatedDescription":"Open PR \"Cleanup IOleClientSite\" (#2152)"},{"Id":"510939457","IsPullRequest":true,"CreatedAt":"2019-10-22T22:41:31","Actor":"AdamYoblick","Number":"2151","RawContent":null,"Title":"clean up variables, and only build debug in public builds","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2068\r\n\r\n\r\n## Proposed changes\r\n\r\n- Clean up yaml variables\r\n- Only build debug config in public builds\r\n- See https://github.com/dotnet/winforms-designer/pull/963 for related change in designer repo\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None, infra only\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CI build, private build won't run until PR gets merged\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2151)","Url":"https://github.com/dotnet/winforms/pull/2151","RelatedDescription":"Closed or merged PR \"clean up variables, and only build debug in public builds\" (#2151)"},{"Id":"510828975","IsPullRequest":true,"CreatedAt":"2019-10-22T20:22:24","Actor":"AdamYoblick","Number":"2150","RawContent":null,"Title":"fix tsa bug area path","State":"closed","Body":"Fixes #2149 \r\n\r\n## Proposed changes\r\n\r\n- Fix the TSA bug area path\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Arcade has tested this\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2150)","Url":"https://github.com/dotnet/winforms/pull/2150","RelatedDescription":"Closed or merged PR \"fix tsa bug area path\" (#2150)"},{"Id":"510828407","IsPullRequest":false,"CreatedAt":"2019-10-22T20:22:23","Actor":"AdamYoblick","Number":"2149","RawContent":null,"Title":"Yaml - tsa bug area path is wrong","State":"closed","Body":"* .NET Core Version: All\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\ntsa bug area path has been changed in devdiv, we need to update to fix our builds\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nSDL validation fails\r\n\r\n**Expected behavior:**\r\nSDL validation passes\r\n\r\n**Minimal repro:**\r\nRun the build through CI","Url":"https://github.com/dotnet/winforms/issues/2149","RelatedDescription":"Closed issue \"Yaml - tsa bug area path is wrong\" (#2149)"},{"Id":"510811236","IsPullRequest":true,"CreatedAt":"2019-10-22T17:49:39","Actor":"cston","Number":"2148","RawContent":null,"Title":"Port VBInputBox.resx and ProgressDialog.resx","State":"open","Body":"## Proposed changes\r\n\r\nPort resource files for Microsoft.VisualBasic dialogs from https://github.com/Microsoft/referencesource/tree/master/Microsoft.VisualBasic/runtime/msvbalib.\r\n\r\n## Test methodology\r\n\r\nExisting integration tests.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2148)","Url":"https://github.com/dotnet/winforms/pull/2148","RelatedDescription":"Open PR \"Port VBInputBox.resx and ProgressDialog.resx\" (#2148)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-24T05:31:04.2715059Z","RunDurationInMilliseconds":920}