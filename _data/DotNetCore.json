{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access build 3621!","PublishedOn":"2018-06-06T21:19:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.8 Early Access build 3621 for your feedback. This is one of the in-development builds of the next version of the .NET Framework. The changes in this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/","RawContent":null},{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)","PublishedOn":"2018-05-24T01:49:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "},{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7788530309","Type":"PullRequestEvent","CreatedAt":"2018-06-07T05:19:01","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18063","RelatedDescription":"Merged pull request \"Fix ARM cast codegen\" (#18063) at dotnet/coreclr","RelatedBody":"ARM cast codegen is rather convoluted and sometimes does the wrong thing by applying `GTF_UNSIGNED` to the destination type even though this flag is only about the source type.\r\n\r\nFixes #18040"},{"Id":"7788530300","Type":"IssuesEvent","CreatedAt":"2018-06-07T05:19:01","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18040","RelatedDescription":"Closed issue \"Broken conv.ovf.i8.un decomposition\" (#18040) at dotnet/coreclr","RelatedBody":"IL sample:\r\n```\r\nldind.i1\r\nconv.ovf.i8.un\r\n```\r\nIR post decomposition:\r\n```\r\nN001 (  1,  1) [000002] -------------        t2 =    LCL_VAR   byref  V00 arg0         u:2 (last use) $80\r\n                                                  /--*  t2     byref  \r\nN002 (  4,  3) [000003] *--XG--------        t3 = *  IND       byte   <l:$140, c:$180>\r\n                                                  /--*  t3     byte   \r\n               [000012] ---XG----U---       t12 = *  CAST      int <- byte <- uint\r\n               [000013] -------------       t13 =    CNS_INT   int    0\r\n                                                  /--*  t12    int    \r\n                                                  +--*  t13    int    \r\n               [000014] ---XG--------       t14 = *  LONG      long  \r\n```\r\nx86 generated code:\r\n```asm\r\n       0FBE01       movsx    eax, byte  ptr [ecx]\r\n       0FBEC0       movsx    eax, al\r\n       8902         mov      dword ptr [edx], eax\r\n       33C0         xor      eax, eax\r\n       894204       mov      dword ptr [edx+4], eax\r\n```\r\nARM32 generated code:\r\n```asm\r\n000006  F990 3000      ldrsb   r3, [r0]\r\n00000A  B2DB           uxtb    r3, r3\r\n00000C  460A           mov     r2, r1\r\n00000E  6013           str     r3, [r2]\r\n000010  2300           movs    r3, 0\r\n000012  6053           str     r3, [r2+4]\r\n```\r\nThere seem to be 2 distinct issues:\r\n* This is a zero extending cast from U4 to I8. Neither `movsx` nor `uxtb` make sense in this context. Sign extending from I1 to I4 is the job of the load.\r\n* For the same cast node x86 and ARM32 emit different instructions, one sign extends and the other zero extends. One of them is wrong but probably that's a side effect of the unusual cast - the IL equivalent of that cast would be `conv.i1.un` but that does not exist. On x86 `movsx` hides the issue since is sign extends again the byte previously loaded.\r\n\r\nFound while adding tests for #12676. Test coverage for casts seems to be lacking, I keep running into bugs (either existing or of my own doing) and existing tests fail to catch them so I generated some. This case failed on ARM32 but not on x86."},{"Id":"7788335774","Type":"IssuesEvent","CreatedAt":"2018-06-07T03:58:38","Actor":"saucecontrol","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18339","RelatedDescription":"Opened issue \"JIT Performance regression between 1.1 and 2.0 and between 2.0 and 2.1\" (#18339) at dotnet/coreclr","RelatedBody":"I've been trying to come up with a simple repro for a perf regression I've been fighting, and I think I have it trimmed down as much as possible while still showing the real-world impact.  What I have [here](https://github.com/saucecontrol/Blake2Fast/tree/master/tests/JitRegression) is a stripped-down version of my [Blake2b](http://blake2.net/) hashing algorithm implementation.  The main work is driven through a single CPU-intensive mixing function, and I've set up benchmarks with 3 variants of that function to show the problem.\r\n\r\n1) is a [no-op version](https://github.com/saucecontrol/Blake2Fast/blob/master/tests/JitRegression/Blake2bMixNoop.cs) that simply runs all the outer loop code as a baseline for determining time spent in the inner loop.\r\n2) is the version I'd like to use, with the mixing math in a [separate method](https://github.com/saucecontrol/Blake2Fast/blob/master/tests/JitRegression/Blake2bMixPreferred.cs), marked with `[MethodImpl(MethodImplOptions.AggressiveInlining)]`\r\n3) is the version I ended up using in my real implementation, which is [fully-inlined](https://github.com/saucecontrol/Blake2Fast/blob/master/tests/JitRegression/Blake2bMixManualInline.cs) manually because this one gives the most consistent results with the older runtimes.\r\n\r\nThe function is huge when inlined (JitDump was 67MB), but it really takes running all the calculations to show the full perf effect.  It looks like it's probably a register allocation issue (the algorithm uses 16 local accumulator variables), but I haven't been able to tell exactly where it's going wrong.\r\n\r\nI'm seeing a consistent perf regression between .NET Core 1.1 and 2.0 and then some additional regression between 2.0 and 2.1 (x86 particularly) with this function.  I've run the benchmarks against all three runtimes, x86 and x64, on two machines to show what I mean.\r\n\r\nFirst up is a Skylake i7 Desktop\r\n```\r\nBenchmarkDotNet=v0.10.14, OS=Windows 10.0.16299.431 (1709/FallCreatorsUpdate/Redstone3)\r\nIntel Core i7-6700K CPU 4.00GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\nFrequency=3914064 Hz, Resolution=255.4889 ns, Timer=TSC\r\n.NET Core SDK=2.1.300\r\n  [Host]        : .NET Core 2.1.0 (CoreCLR 4.6.26515.07, CoreFX 4.6.26515.06), 64bit RyuJIT\r\n  netcoreapp1.1 : .NET Core 1.1.8 (CoreCLR 4.6.26328.01, CoreFX 4.6.24705.01), 64bit RyuJIT\r\n  netcoreapp2.0 : .NET Core 2.0.7 (CoreCLR 4.6.26328.01, CoreFX 4.6.26403.03), 64bit RyuJIT\r\n  netcoreapp2.1 : .NET Core 2.1.0 (CoreCLR 4.6.26515.07, CoreFX 4.6.26515.06), 64bit RyuJIT\r\n```\r\n\r\nMethod |           Job | Platform | IsBaseline |         Mean |       Error |     StdDev | Scaled |\r\n---------------- |-------------- |--------- |----------- |-------------:|------------:|-----------:|-------:|\r\nMixNoop | netcoreapp1.1 |      X64 |       True |     541.1 us |   1.2367 us |  1.1568 us |   1.00 |\r\nMixNoop | netcoreapp2.0 |      X64 |    Default |     536.7 us |   0.4613 us |  0.3852 us |   0.99 |\r\nMixNoop | netcoreapp2.1 |      X64 |    Default |     578.8 us |   0.4531 us |  0.3783 us |   1.07 |\r\n|               |          |            |              |             |            |        |\r\nMixNoop | netcoreapp1.1 |      X86 |       True |   1,119.9 us |   9.6466 us |  9.0234 us |   1.00 |\r\nMixNoop | netcoreapp2.0 |      X86 |    Default |   1,192.8 us |   2.6294 us |  2.0529 us |   1.07 |\r\nMixNoop | netcoreapp2.1 |      X86 |    Default |   1,191.3 us |   0.6622 us |  0.5170 us |   1.06 |\r\n|               |          |            |              |             |            |        |\r\nMixPreferred | netcoreapp1.1 |      X64 |       True |  12,459.8 us | 101.8205 us | 90.2612 us |   1.00 |\r\nMixPreferred | netcoreapp2.0 |      X64 |    Default |  12,678.6 us |   5.6177 us |  4.6910 us |   1.02 |\r\nMixPreferred | netcoreapp2.1 |      X64 |    Default |  12,746.3 us |   6.1352 us |  4.7900 us |   1.02 |\r\n|               |          |            |              |             |            |        |\r\nMixPreferred | netcoreapp1.1 |      X86 |       True | 175,779.4 us |  74.0106 us | 61.8022 us |   1.00 |\r\nMixPreferred | netcoreapp2.0 |      X86 |    Default | 106,492.8 us |  35.6985 us | 27.8710 us |   0.61 |\r\nMixPreferred | netcoreapp2.1 |      X86 |    Default | 136,210.1 us |  59.2411 us | 55.4141 us |   0.77 |\r\n|               |          |            |              |             |            |        |\r\nMixManualInline | netcoreapp1.1 |      X64 |       True |  12,349.0 us |  24.9308 us | 20.8184 us |   1.00 |\r\nMixManualInline | netcoreapp2.0 |      X64 |    Default |  12,792.0 us |  80.9773 us | 75.7462 us |   1.04 |\r\nMixManualInline | netcoreapp2.1 |      X64 |    Default |  12,741.5 us |   6.3150 us |  5.2733 us |   1.03 |\r\n|               |          |            |              |             |            |        |\r\nMixManualInline | netcoreapp1.1 |      X86 |       True |  81,966.3 us |  27.9119 us | 21.7917 us |   1.00 |\r\nMixManualInline | netcoreapp2.0 |      X86 |    Default | 106,330.1 us |  33.9632 us | 31.7692 us |   1.30 |\r\nMixManualInline | netcoreapp2.1 |      X86 |    Default | 135,755.2 us |  67.5010 us | 63.1405 us |   1.66 |\r\n\r\nThe `MixManualInline` numbers show the regression quite clearly.  There's a 3-4% slowdown between 1.1 and 2.0 on x64 that holds up in 2.1  On x86, it gets significatntly worse with each newer version.  The `MixPreferred` job with the `AgressiveInlining` version of the mixing function does very poorly on 1.1 x86 but then shows basically the same results as the manually-inlined version everywhere else.\r\n\r\nAnd here's the same benchmark run on an older Sandy Bridge Xeon server\r\n\r\n```\r\nBenchmarkDotNet=v0.10.14, OS=Windows 8.1 (6.3.9600.0)\r\nIntel Xeon CPU E31230 3.20GHz, 1 CPU, 8 logical and 4 physical cores\r\nFrequency=3117919 Hz, Resolution=320.7267 ns, Timer=TSC\r\n.NET Core SDK=2.1.300\r\n  [Host]        : .NET Core 2.1.0 (CoreCLR 4.6.26515.07, CoreFX 4.6.26515.06), 32bit RyuJIT\r\n  netcoreapp1.1 : .NET Core 1.1.8 (CoreCLR 4.6.26328.01, CoreFX 4.6.24705.01), 64bit RyuJIT\r\n  netcoreapp2.0 : .NET Core 2.0.7 (CoreCLR 4.6.26328.01, CoreFX 4.6.26403.03), 64bit RyuJIT\r\n  netcoreapp2.1 : .NET Core 2.1.0 (CoreCLR 4.6.26515.07, CoreFX 4.6.26515.06), 64bit RyuJIT\r\n```\r\n\r\nMethod |           Job | Platform | IsBaseline |       Mean |      Error |     StdDev |     Median | Scaled | ScaledSD |\r\n---------------- |-------------- |--------- |----------- |-----------:|-----------:|-----------:|-----------:|-------:|---------:|\r\nMixNoop | netcoreapp1.1 |      X64 |       True |   1.326 ms |  0.1071 ms |  0.3158 ms |   1.331 ms |   1.00 |     0.00 |\r\nMixNoop | netcoreapp2.0 |      X64 |    Default |   1.288 ms |  0.1003 ms |  0.2957 ms |   1.285 ms |   1.03 |     0.36 |\r\nMixNoop | netcoreapp2.1 |      X64 |    Default |   1.352 ms |  0.0928 ms |  0.2735 ms |   1.358 ms |   1.08 |     0.36 |\r\n|               |          |            |            |            |            |            |        |          |\r\nMixNoop | netcoreapp1.1 |      X86 |       True |   2.738 ms |  0.2200 ms |  0.6486 ms |   2.701 ms |   1.00 |     0.00 |\r\nMixNoop | netcoreapp2.0 |      X86 |    Default |   2.673 ms |  0.2034 ms |  0.5998 ms |   2.826 ms |   1.04 |     0.36 |\r\nMixNoop | netcoreapp2.1 |      X86 |    Default |   2.776 ms |  0.2096 ms |  0.6181 ms |   2.740 ms |   1.08 |     0.37 |\r\n|               |          |            |            |            |            |            |        |          |\r\nMixPreferred | netcoreapp1.1 |      X64 |       True |  31.926 ms |  2.2443 ms |  6.6172 ms |  32.740 ms |   1.00 |     0.00 |\r\nMixPreferred | netcoreapp2.0 |      X64 |    Default |  31.898 ms |  2.1440 ms |  6.3216 ms |  31.735 ms |   1.05 |     0.33 |\r\nMixPreferred | netcoreapp2.1 |      X64 |    Default |  27.419 ms |  2.4213 ms |  7.1393 ms |  25.538 ms |   0.90 |     0.32 |\r\n|               |          |            |            |            |            |            |        |          |\r\nMixPreferred | netcoreapp1.1 |      X86 |       True | 341.759 ms | 13.1190 ms | 38.4759 ms | 331.234 ms |   1.00 |     0.00 |\r\nMixPreferred | netcoreapp2.0 |      X86 |    Default | 251.373 ms | 13.1463 ms | 38.3484 ms | 239.499 ms |   0.74 |     0.14 |\r\nMixPreferred | netcoreapp2.1 |      X86 |    Default | 291.564 ms | 10.3316 ms | 29.6434 ms | 285.206 ms |   0.86 |     0.13 |\r\n|               |          |            |            |            |            |            |        |          |\r\nMixManualInline | netcoreapp1.1 |      X64 |       True |  33.165 ms |  2.2903 ms |  6.7529 ms |  33.426 ms |   1.00 |     0.00 |\r\nMixManualInline | netcoreapp2.0 |      X64 |    Default |  33.819 ms |  2.4410 ms |  7.1973 ms |  34.340 ms |   1.07 |     0.34 |\r\nMixManualInline | netcoreapp2.1 |      X64 |    Default |  20.601 ms |  0.1490 ms |  0.1394 ms |  20.606 ms |   0.65 |     0.15 |\r\n|               |          |            |            |            |            |            |        |          |\r\nMixManualInline | netcoreapp1.1 |      X86 |       True | 163.629 ms |  7.6584 ms | 22.3398 ms | 160.224 ms |   1.00 |     0.00 |\r\nMixManualInline | netcoreapp2.0 |      X86 |    Default | 249.708 ms | 11.3452 ms | 32.7336 ms | 240.169 ms |   1.55 |     0.28 |\r\nMixManualInline | netcoreapp2.1 |      X86 |    Default | 285.367 ms |  9.0883 ms | 25.6337 ms | 278.039 ms |   1.77 |     0.27 |\r\n\r\nHere there are a few more outliers, but it's the same general story.\r\n\r\nFull code for the benchmarks is [here](https://github.com/saucecontrol/Blake2Fast/tree/master/tests/JitRegression) if anyone wants to try on different hardware."},{"Id":"7788018289","Type":"IssuesEvent","CreatedAt":"2018-06-07T01:57:45","Actor":"PhoebeHui","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18338","RelatedDescription":"Opened issue \"CoreCLR failed when build with msvc on windows\" (#18338) at dotnet/coreclr","RelatedBody":"CoreCLR failed with warning C4644  when build with msvc on Windows, I use latest source on master branch. The source code is ill-formed, could you please help take a look at this?\r\nNoted that this issue only found when compiles with unreleased vctoolset, that next release of MSVC will have this behavior.\r\n\r\nThe probably fix: the project either needs to build with /wd4644, pragma push/pop the warning, or do as the warning says and use the STL’s offsetof\r\n\r\nYou can repro this issue as the steps below:\r\n1.git clone https://github.com/dotnet/coreclr D:\\CoreCLR\\src\r\n2.Open a clean x86 prompt (C:\\windows\\syswow64\\cmd.exe) and browse to D:\\CoreCLR\\src\r\n3.build x86 release -Rebuild -- /clp:ShowCommandLine\r\n\r\nFailures:\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(172,10): warning C4644:  usage of the macro-based offsetof pattern in constant expressions is non-standard; use offsetof defined in the C++ standard library instead [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(172,10): warning C4644:     case offsetof(ArgumentRegisters, ECX): [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(172,10): warning C4644:          ^ [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(174,10): warning C4644:  usage of the macro-based offsetof pattern in constant expressions is non-standard; use offsetof defined in the C++ standard library instead [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(174,10): warning C4644:     case offsetof(ArgumentRegisters, EDX): [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(174,10): warning C4644:          ^ [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\n<snip>\r\n[D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(172,10): error C2220:  warning treated as error - no 'object' file generated [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(172,10): error C2220:     case offsetof(ArgumentRegisters, ECX): [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\nd:\\coreclr\\src\\src\\vm\\i386\\profiler.cpp(172,10): error C2220:          ^ [D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\src\\vm\\wks\\cee_wks.vcxproj]\r\n"},{"Id":"7787932223","Type":"PullRequestEvent","CreatedAt":"2018-06-07T01:24:05","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18297","RelatedDescription":"Merged pull request \"Adding containment support for more x86 hardware intrinsics\" (#18297) at dotnet/coreclr","RelatedBody":"FYI. @CarolEidt, @fiigii, @eerhardt \r\n\r\nI believe this covers everything not marked `NoContainment` except for `Sse42.Crc32` (which requires slightly more complex changes).\r\n\r\nThe next step is to add support for `Crc32` and to go through the nodes marked `NoContainment` and allow it on several of them (for example, most of the Sse/Sse2 comparison instructions support it, but they are `MultiIns` and require slightly different changes).\r\n"},{"Id":"7787901157","Type":"PullRequestEvent","CreatedAt":"2018-06-07T01:11:31","Actor":"maryamariyan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18337","RelatedDescription":"Opened pull request \"Moves CurrentSystemTimeZone, ICastable, RegistryView and RegistryValueKind to shared\" (#18337) at dotnet/coreclr","RelatedBody":"cc: @jkotas "},{"Id":"7787812331","Type":"PullRequestEvent","CreatedAt":"2018-06-07T00:36:14","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18336","RelatedDescription":"Opened pull request \"Delete FormatterConverter from CoreLib\" (#18336) at dotnet/coreclr","RelatedBody":"It's not used in the library.  The type is implemented/exposed from corefx.\r\n\r\ncc: @ViktorHofer "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7788439312","Type":"PullRequestEvent","CreatedAt":"2018-06-07T04:42:12","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9422","RelatedDescription":"Merged pull request \"Removing target dependency to SetBadgeProps on publish targets.\" (#9422) at dotnet/cli","RelatedBody":"Removing target dependency to SetBadgeProps on publish targets. That's not needed on the repo-refactored CLI."},{"Id":"7788346233","Type":"IssuesEvent","CreatedAt":"2018-06-07T04:02:44","Actor":"voltagex","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9432","RelatedDescription":"Opened issue \"\"PE image does not have metadata\" occurring after upgrade to netcoreapp2.1\" (#9432) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Clone https://github.com/voltagex/YAMS\r\n2. run .\\build.ps1 in the root of that repo\r\n\r\n## Expected  behavior\r\nProject builds without (new) warnings or errors\r\n\r\n## Actual behavior\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018: The \"ResolveAssemblyReference\" task failed unexpectedly. [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018: System.InvalidOperationException: PE image does not have metadata. [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at System.Reflection.PortableExecutable.PEReader.GetMetadataBlock() [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(PEReader peReader, MetadataReaderOptions options, MetadataStringDecoder utf8Decoder) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(PEReader peReader) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.Shared.AssemblyNameExtension.GetAssemblyNameEx(String path) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.Tasks.SystemState.GetAssemblyName(String path) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.Tasks.ReferenceTable.SetPrimaryAssemblyReferenceItem(ITaskItem referenceAssemblyName) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.Tasks.ReferenceTable.SetPrimaryItems(ITaskItem[] referenceAssemblyFiles, ITaskItem[] referenceAssemblyNames, ArrayList exceptions) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.Tasks.ReferenceTable.ComputeClosure(DependentAssembly[] remappedAssembliesValue, ITaskItem[] referenceAssemblyFiles, ITaskItem[] referenceAssemblyNames, ArrayList exceptions) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.Tasks.ResolveAssemblyReference.Execute(FileExists fileExists, DirectoryExists directoryExists, GetDirectories getDirectories, GetAssemblyName getAssemblyName, GetAssemblyMetadata getAssemblyMetadata, GetLastWriteTime getLastWriteTime, GetAssemblyRuntimeVersion getRuntimeVersion, GetAssemblyPathInGac getAssemblyPathInGac, IsWinMDFile isWinMDFile, ReadMachineTypeFromPEHeader readMachineTypeFromPEHeader) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.Tasks.ResolveAssemblyReference.Execute() [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300\\Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\git\\YAMS\\MusicScanner.CLI\\MusicScanner.CLI.csproj]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300\r\n Commit:    adab45bf0c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0\r\n  Commit:  caa7b7e2ba\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\nIs this https://github.com/dotnet/cli/issues/2660 or something different?"},{"Id":"7788205125","Type":"IssuesEvent","CreatedAt":"2018-06-07T03:07:54","Actor":"dotnet-mc-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9431","RelatedDescription":"Opened issue \"SourceCode build failures in 'prodcon/cli/release/2.1.3xx/' - '20180605.09'\" (#9431) at dotnet/cli","RelatedBody":"There were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1753947\r\n  - **Agent:** DDVSOWINAGE015\r\n  - **Error log:** 2>DOTNETTEST : error Message:  [E:\\A\\_work\\0\\s\\build\\test\\RunTest.proj]...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1753948\r\n  - **Agent:** DDVSOWINAGE016\r\n  - **Error log:** 2>DOTNETTEST : error Message:  [E:\\A\\_work\\0\\s\\build\\test\\RunTest.proj]...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1753944\r\n  - **Agent:** DDVSOMACAGE006\r\n  - **Error log:** 15>DOTNETTEST : error Message:  [/Users/buildagent/agent/_work/0/s/build/test/RunTest.proj]...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1753945\r\n  - **Agent:** DDVSOLINUXAGE008\r\n  - **Error log:** \u001b[39;49m\u001b[36m    15>\u001b[39;49m\u001b[39;49m\u001b[31mDOTNETTEST : error Message:  [/opt/code/build/test/RunTest.proj]...\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1753946\r\n  - **Agent:** DDVSOLINUXAGE009\r\n  - **Error log:** \u001b[39;49m\u001b[39;49m\u001b[30m         The previous error was converted to a warning because the task was called with ContinueOnError=true....\r\n\r\n@mmitche, @livarcocc\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7785916676","Type":"PullRequestEvent","CreatedAt":"2018-06-06T17:16:49","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/699","RelatedDescription":"Merged pull request \"Don't fail trimming on missing files\" (#699) at dotnet/standard","RelatedBody":"Instead, warn if that file happens to be included in the closure.\r\n\r\nFixes #697\r\n\r\nIt's still not clear to me this is required, but we can add it.  It may even be more appropriate to error."},{"Id":"7785916662","Type":"IssuesEvent","CreatedAt":"2018-06-06T17:16:49","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/697","RelatedDescription":"Closed issue \"Trimmer tries to run when assemblies are missing\" (#697) at dotnet/standard","RelatedBody":"When project B depends on project A and something causes project A to stop compiling, this appears for project B:\r\n\r\n> Error MSB4018 The \"TrimFiles\" task failed unexpectedly. System.IO.FileNotFoundException: Could not find file 'ProjectA\\bin\\Debug\\ProjectA.exe'.\r\n\r\n```\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at Microsoft.DotNet.Build.Tasks.FileNode.PopulateDependenciesInternal(IDictionary`2 allFiles, Boolean preferNativeImage, ILog log, Stack`1 stack)\r\n   at Microsoft.DotNet.Build.Tasks.FileNode.PopulateDependencies(IDictionary`2 allFiles, Boolean preferNativeImage, ILog log)\r\n   at Microsoft.DotNet.Build.Tasks.TrimFiles.GetFiles(IDictionary`2 packages)\r\n   at Microsoft.DotNet.Build.Tasks.TrimFiles.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\n(build\\Microsoft.Packaging.Tools.Trimming.targets, line 71)\r\n\r\nI don't know if this is the whole picture, but when the trimmer I used to use ran into this I added `Condition=\"Exists(@(IntermediateAssembly))\"` to the main trimming target which had `AfterTargets=\"CoreCompile\"`.\r\n\r\n/cc @ericstj \r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7788361881","Type":"PullRequestEvent","CreatedAt":"2018-06-07T04:09:08","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/28115","RelatedDescription":"Merged pull request \"Adding a null value to ConcurrentDictionary using System.Collections.IDictionary interface causes exception\" (#28115) at dotnet/corefx","RelatedBody":"Fixes #26447\r\n\r\nThere are quite a lot of changes in `ConcurrentDictionary.cs`, but they are only trailing whitespaces (I have an extension which removes them automatically). The real change is on the line 1580."},{"Id":"7788361871","Type":"IssuesEvent","CreatedAt":"2018-06-07T04:09:08","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26447","RelatedDescription":"Closed issue \"Adding a null value to ConcurrentDictionary using System.Collections.IDictionary interface causes exception\" (#26447) at dotnet/corefx","RelatedBody":"According to the code in [ConcurrentDictionary](https://github.com/dotnet/corefx/blame/master/src/System.Collections.Concurrent/src/System/Collections/Concurrent/ConcurrentDictionary.cs#L1580) it is not possible to add a null value to ConcurrentDictionary using System.Collections.IDictionary interface.\r\n\r\nIs this type checking for a value really required?\r\n\r\nExamples: \r\n\r\n```c#\r\nvar key = \"key\";\r\nstring value = null; \r\n\t\r\n{\r\n    // using ConcurrentDictionary<TKey, TValue> class\r\n    ConcurrentDictionary<string, string> d = new ConcurrentDictionary<string, string>();\r\n    d[key] = value; // OK\r\n}\r\n\r\n{\r\n    // using IDictionary<TKey, TValue> interface \r\n    IDictionary<string, string> d = new ConcurrentDictionary<string, string>();\r\n    d[key] = value; // OK\r\n}\r\n\r\n{\r\n    // using IDictionary interface \r\n    IDictionary d = new ConcurrentDictionary<string, string>();\r\n    d[key] = value; // ArgumentException - The value was of an incorrect type for this dictionary.\r\n}\r\n```"},{"Id":"7787679144","Type":"PullRequestEvent","CreatedAt":"2018-06-06T23:46:56","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30178","RelatedDescription":"Opened pull request \"Add tests for TimeZoneInfo to ensure offset is not outside of range\" (#30178) at dotnet/corefx","RelatedBody":"Test for https://github.com/dotnet/coreclr/pull/18305\r\nThis requires the PR to get merged to pass on all platforms"},{"Id":"7787590364","Type":"IssuesEvent","CreatedAt":"2018-06-06T23:16:37","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/30013","RelatedDescription":"Closed issue \"Missing dlls in bin/pkg/netcoreapp/runtime for BinPlaceNETCoreAppPackage=true\" (#30013) at dotnet/corefx","RelatedBody":"Hello.\r\n\r\nLooks like `bin/runtime` and `bin/pkg/netcoreapp/runtime` contain different sets of dlls on `release/2.0.0` branch for `BinPlaceNETCoreAppPackage=true`. For example, System.Memory.dll is missing in `bin/pkg/netcoreapp/runtime` but exists in `bin/runtime`. On `master` branch System.Memory.dll exists in both folders.\r\n\r\nCould you, please, clarify if this is correct behavior or this should be fixed?\r\n\r\ncc @alpencolt @Dmitri-Botcharnikov "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7787905358","Type":"PullRequestEvent","CreatedAt":"2018-06-07T01:13:10","Actor":"maryamariyan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5906","RelatedDescription":"Opened pull request \"[JustForView] Moves CurrentSystemTimeZone, ICastable, and some Registry classes to shared\" (#5906) at dotnet/corert","RelatedBody":"cc: @jkotas \r\n\r\nRelated to https://github.com/dotnet/coreclr/pull/18337"},{"Id":"7787178759","Type":"PullRequestEvent","CreatedAt":"2018-06-06T21:27:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5904","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5904) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7786176776","Type":"PullRequestEvent","CreatedAt":"2018-06-06T18:06:21","Actor":"maryamariyan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5893","RelatedDescription":"Closed pull request \"[JustForView] Helps Move FastResourceComparer and TaskAwaiter to shared\" (#5893) at dotnet/corert","RelatedBody":"related to coreclr PR: https://github.com/dotnet/coreclr/pull/18283"},{"Id":"7786078213","Type":"IssuesEvent","CreatedAt":"2018-06-06T17:47:39","Actor":"cwrea","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5905","RelatedDescription":"Opened issue \"Can't build native UWP app. ILC.exe, always a 32-bit image, fails with: Internal compiler error: Exception of type 'System.OutOfMemoryException' was thrown.\" (#5905) at dotnet/corert","RelatedBody":"I'm trying to build a UWP unit test app in Release mode using the **Compile with .NET Native tool chain** option enabled. My UWP app's minimum and target versions are both set to Windows 10 build 16299. I'm using Visual Studio 15.7.3, and the build always fails because ILC.exe runs out of memory: \r\n\r\n> `Internal compiler error: Exception of type 'System.OutOfMemoryException' was thrown.`\r\n\r\nI could see that the ILC.exe executable is a 32-bit image and isn't able to take advantage of most of the 32GB memory available on my box. ILC.exe failed after allocating about 3.4GB memory.\r\n\r\nI tried to get Visual Studio to invoke a 64-bit ILC.exe using in each of the following ways, but ILC.exe is, according to Process Explorer, always running as a 32-bit process.\r\n\r\n1. I tried adding `<UseNativeEnvironment>true</UseNativeEnvironment>` to my UWP project's default `<PropertyGroup>` element. I found a mention of this in relation to Visual C++, so I might have been barking up the wrong tree for a C# app on UWP.\r\n\r\n2. I tried adding `<Use64BitCompiler>true</Use64BitCompiler>` to my UWP project's default `<PropertyGroup>` element. I had found this mentioned at https://github.com/dotnet/corert/issues/5604. \r\n\r\n3. I tried explicitly referencing the package `runtime.win10-x64.Microsoft.Net.Native.Compiler` v2.1.8 in my UWP project. The package description says:\r\n\r\n    > .Net Native Compilers package. Referencing this package will cause the project to be built using the specific version of the .NET Native compiler contained in the package, as opposed to any system installed version.\r\n\r\nWhile it *does* appear that the correct package folder is referenced and a `tools\\x64\\ilc\\ilc.exe` image is being executed by Visual Studio, **the ILC.exe process remains a 32-bit process** even despite the `x64` claimed by parent folder naming. Here's what Process Explorer shows:\r\n\r\n![ilc_not_x64](https://user-images.githubusercontent.com/3652107/41055051-33d05b46-698e-11e8-8cce-c91876c81376.png)\r\n\r\nAm I doing something wrong?\r\n\r\nOr is the ILC.exe that is shipped as part of `runtime.win10-x64.Microsoft.Net.Native.Compiler` actually a 32-bit program image and not a 64-bit program image? And if it is actually a 32-bit program image, is that by design, or an oversight?\r\n\r\nHow can I get my UWP app building with the native tool chain? Thank you."},{"Id":"7785916643","Type":"PullRequestEvent","CreatedAt":"2018-06-06T17:16:48","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5904","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5904) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7782974011","Type":"IssuesEvent","CreatedAt":"2018-06-06T08:29:35","Actor":"BredPet","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5903","RelatedDescription":"Opened issue \"[X86/ARM] Build on windows\" (#5903) at dotnet/corert","RelatedBody":"I tried to compile X86 and ARM on Win. It fails.\r\nX86 logs:\r\n```\r\nbuild.cmd x86\r\n...\r\nBuild FAILED.\r\n\r\n       \"corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\install.vcxproj\" (default target) (1) ->\r\n       \"corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\ALL_BUILD.vcxproj\" (default target) (3) ->\r\n       \"corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj\" (default target) (13) ->\r\n       (ClCompile target) ->\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(70): warning C4183: 'QueryInterface': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(71): warning C4183: 'AddRef': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(72): warning C4183: 'Release': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(79): warning C4183: 'ClrVirtualAlloc': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(85): warning C4183: 'ClrVirtualFree': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(87): warning C4183: 'ClrVirtualQuery': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(88): warning C4183: 'ClrVirtualProtect': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(89): warning C4183: 'ClrGetProcessHeap': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(90): warning C4183: 'ClrHeapCreate': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(91): warning C4183: 'ClrHeapDestroy': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(92): warning C4183: 'ClrHeapAlloc': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(93): warning C4183: 'ClrHeapFree': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(94): warning C4183: 'ClrHeapValidate': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(95): warning C4183: 'ClrGetProcessExecutableHeap': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitwrapper.cpp(45): warning C4183: 'compileMethod': missing return type; assumed to be a member function returning 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n\r\n        \"corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\install.vcxproj\" (default target) (1) ->  \r\n        \"corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\ALL_BUILD.vcxproj\" (default target) (3) ->\r\n        \"corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj\" (default target) (13) ->\r\n       (ClCompile target) ->\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(70): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(70): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(70): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(71): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(71): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(71): error C2535: 'int EEMemoryManager::__attribute__(void)': member function already defined or declared [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(71): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(72): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(72): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(72): error C2535: 'int EEMemoryManager::__attribute__(void)': member function already defined or declared [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(72): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(76): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(76): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(76): error C2556: 'int *EEMemoryManager::__attribute__(void)': overloaded function differs only by return type from 'int EEMemoryManager::__attribute__(void)' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(76): error C2040: 'EEMemoryManager::__attribute__': 'int *(void)' differs inlevels of indirection from 'int (void)' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(76): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(77): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(81): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(81): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(81): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(82): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(87): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(87): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(87): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(88): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(88): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(88): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(89): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(89): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(89): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(90): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(90): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(90): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(91): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(91): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(91): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(92): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(92): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(92): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(93): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(93): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(93): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(94): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(94): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(94): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(95): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(95): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(95): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitinterface.cpp(78): error C2440: 'return': cannot convert from 'void *' to 'int' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitwrapper.cpp(40): error C2059: syntax error: '(' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitwrapper.cpp(40): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitwrapper.cpp(40): error C2059: syntax error: ')' [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitwrapper.cpp(45): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n         corert\\src\\native\\jitinterface\\jitwrapper.cpp(40): error C2253: 'Jit::compileMethod': pure specifier or abstract override specifier only allowed on virtual function [corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n\r\n    15 Warning(s)\r\n    54 Error(s)\r\n\r\nTime Elapsed 00:00:31.48\r\nNative component build failed. Refer corert\\buildscrip\r\nts\\..\\bin\\Logs\\Native_Windows_NT__x86__Debug.log for details.\r\nNative component build failed. Refer corert\\buildscrip\r\nts\\..\\bin\\Logs\\Native_Windows_NT__x86__Debug.log for details.\r\n\r\ncorert>\r\n```\r\nARM logs:\r\n```\r\ncorert>build.cmd arm\r\n...\r\n\r\nCMake Error at Runtime/Full/CMakeLists.txt:12 (add_library):\r\n  Cannot find source file:\r\n\r\n    corert\\src/Native/Runtime/GC.asm\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm\r\n  .hpp .hxx .in .txx\r\n\r\n\r\nCMake Error at System.Private.TypeLoader.Native/CMakeLists.txt:36 (add_library):\r\n\r\n  Cannot find source file:\r\n\r\n    corert\\src/Native/System.Private.TypeLoader.Native/ConstrainedCallSupportHelpers.asm\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm\r\n  .hpp .hxx .in .txx\r\n\r\n\r\nCMake Error at Runtime/Full/CMakeLists.txt:12 (add_library):\r\n  No SOURCES given to target: Runtime\r\n\r\n\r\nCMake Error at Runtime/Full/CMakeLists.txt:14 (add_library):\r\n  No SOURCES given to target: Runtime.ServerGC\r\n\r\n\r\nCMake Error at System.Private.TypeLoader.Native/CMakeLists.txt:36 (add_library):\r\n\r\n  No SOURCES given to target: System.Private.TypeLoader.Native\r\n\r\n\r\n-- Build files have been written to: corert\\bin/obj/Native/Windows_NT.arm.Debug\r\nFailed to generate native component build project\r\nNative component build failed. Refer corert\\buildscripts\\..\\bin\\Logs\\Native_Windows_NT__arm__Debug.log for details.\r\n\r\ncorert>\r\n```\r\nI was able to compile X86 with various edits, but there everything doesn't work very well.\r\nHas anyone tried to build these architectures?) Has it ever worked?\r\n@dotnet/arm32-corert-contrib "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1004145068381331456","CreatedAt":"2018-06-05T23:36:55+00:00","UserScreenname":"dotnet","Text":"Cool retro game built with #dotnet #monogame. Clone the repo, play the game, and you could win some serious money!… https://t.co/iHu2MQ1bME","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":65,"FavoriteCount":17,"RawContent":null},{"Id":"1001877224096649216","CreatedAt":"2018-05-30T17:25:18+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 https://t.co/HyKnPLqfwy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":1292,"FavoriteCount":902,"RawContent":null},{"Id":"1001877112469438464","CreatedAt":"2018-05-30T17:24:52+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0 now available https://t.co/Q5x6kghf6W","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":302,"FavoriteCount":203,"RawContent":null},{"Id":"1001876975982526466","CreatedAt":"2018-05-30T17:24:19+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 https://t.co/8so4DdNQDl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":258,"FavoriteCount":174,"RawContent":null}]}},"RunOn":"2018-06-07T05:30:34.2230445Z","RunDurationInMilliseconds":8300}