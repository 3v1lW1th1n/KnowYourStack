{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Updated: January 25, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"},{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7181454820","Type":"PullRequestEvent","CreatedAt":"2018-02-01T05:08:31","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16140","RelatedDescription":"Merged pull request \"Updating IF_RWR_RRD_MRD_CNS and IF_RWR_RRD_SRD_CNS to encode reg2, rather than reg1, in 3456\" (#16140) at dotnet/coreclr","RelatedBody":"This should resolve the other issues in https://github.com/dotnet/coreclr/issues/16132\r\n\r\nFYI. @CarolEidt, @fiigii "},{"Id":"7181442895","Type":"PullRequestEvent","CreatedAt":"2018-02-01T05:03:23","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16086","RelatedDescription":"Closed pull request \"Remove replaced Span/ReadOnlySpan methods.\" (#16086) at dotnet/coreclr","RelatedBody":"Continuation of https://github.com/dotnet/coreclr/pull/15941\r\n\r\nThis PR removes the old functions that are no longer being exposed in corefx as of the merging of https://github.com/dotnet/corefx/pull/26467.\r\n\r\ncc: @ahsonkhan @stephentoub "},{"Id":"7181388921","Type":"PullRequestEvent","CreatedAt":"2018-02-01T04:40:47","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16136","RelatedDescription":"Merged pull request \"Fix encoding of RCPPS and RSQRTPS\" (#16136) at dotnet/coreclr","RelatedBody":"These instructions do not permit a 3rd register, and the vvvv field must be all ones (same as xmm0 encoding, which is why this can go undetected)\r\n\r\nFix #16135"},{"Id":"7181388916","Type":"IssuesEvent","CreatedAt":"2018-02-01T04:40:47","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16135","RelatedDescription":"Closed issue \"XArch: Encoding issue with rcpps and rsqrtps\" (#16135) at dotnet/coreclr","RelatedBody":"These two instructions are currently included in `IsDstSrcSrcAVXInstruction()`, which causes the emitter to duplicate the src operand in the `vvvv` field of the AVX encoding. However, this instruction doesn't permit a 3rd operand, resulting in Illegal Instruction exception if it is not all-ones. Since that's the encoding for xmm0, this often goes without detection because the register allocater often picks xmm0."},{"Id":"7181373987","Type":"PullRequestEvent","CreatedAt":"2018-02-01T04:34:10","Actor":"maryamariyan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15793","RelatedDescription":"Merged pull request \"Adding TrimExcess Implementation to Dictionary\" (#15793) at dotnet/coreclr","RelatedBody":"Issue is: https://github.com/dotnet/corefx/issues/24445\r\nTests and the ref changes are made in a corefx PR separately here dotnet/corefx#26239.\r\n\r\ncc: @danmosemsft @benaadams \r\n\r\nTODO Next in a separate PR:\r\n- Will add EnsureCapacity to SortedSet and HashSet\r\n- Will add TrimExcess to SortedSet\r\n  \r\n  "},{"Id":"7181327950","Type":"PullRequestEvent","CreatedAt":"2018-02-01T04:14:39","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16147","RelatedDescription":"Opened pull request \"Rename ConvertScalarToVector128UInt32Scalar to ConvertScalarToVector128UInt32\" (#16147) at dotnet/coreclr","RelatedBody":"FYI. @CarolEidt, @fiigii, @eerhardt \r\n\r\nOne of them missed removing the suffix. Caught this in the CoreFX build."},{"Id":"7181284218","Type":"PullRequestEvent","CreatedAt":"2018-02-01T03:57:07","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16146","RelatedDescription":"Opened pull request \"Fix GetILToNativeMapping3 to return mappings for the specified code start address\" (#16146) at dotnet/coreclr","RelatedBody":"Fix for https://github.com/dotnet/coreclr/issues/16145 in master:\r\n- Previously, it was getting or creating the current entry point's corresponding DebugJitInfo and determining that the specified code address is not within the code range\r\n- Fixed to get or create a DebugJitInfo corresponding to the specified code address and return that"},{"Id":"7181276976","Type":"IssuesEvent","CreatedAt":"2018-02-01T03:54:26","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16145","RelatedDescription":"Opened issue \"Fix GetILToNativeMapping3 to return mappings for the specified code start address\" (#16145) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7181491016","Type":"PullRequestEvent","CreatedAt":"2018-02-01T05:23:22","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8507","RelatedDescription":"Closed pull request \"WIP for discussion dotnet install tool -g should be atomic\" (#8507) at dotnet/cli","RelatedBody":"WIP for discussion"},{"Id":"7181490601","Type":"PullRequestEvent","CreatedAt":"2018-02-01T05:23:11","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8513","RelatedDescription":"Closed pull request \"WIP for discussion Stage commit passing lambda\" (#8513) at dotnet/cli","RelatedBody":""},{"Id":"7181456234","Type":"PullRequestEvent","CreatedAt":"2018-02-01T05:09:05","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8518","RelatedDescription":"Opened pull request \"Atomic install tool\" (#8518) at dotnet/cli","RelatedBody":"https://github.com/dotnet/cli/issues/8496\r\n\r\nApply TransactionScope to tool install. It can handle the correct timing\r\nof roll back and commit.\r\n\r\nConvert existing ToolPackageObtainer and ShellShimMaker by passing logic\r\nvia lambda to an object that has IEnlistmentNotification interface. It\r\nturns out the very clean.\r\n\r\nUse .stage as staging place to verify of package content, and shim. It\r\nshould roll back when something is wrong. When there is ctrl-c, there\r\nwill be garbage in .stage folder but not the root of the package folder."},{"Id":"7180675125","Type":"PullRequestEvent","CreatedAt":"2018-02-01T00:28:47","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8517","RelatedDescription":"Opened pull request \"Update F# to match dev15.6 preview 4\" (#8517) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"7180668525","Type":"PullRequestEvent","CreatedAt":"2018-02-01T00:26:43","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8516","RelatedDescription":"Merged pull request \"Insert latest dotnet/sdk\" (#8516) at dotnet/cli","RelatedBody":"In particular, aiming to get dotnet/sdk#1857 inserted for official perf runs.\r\n\r\ncc @mikeharder "},{"Id":"7180416108","Type":"PullRequestEvent","CreatedAt":"2018-01-31T23:11:36","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8516","RelatedDescription":"Opened pull request \"Insert latest dotnet/sdk\" (#8516) at dotnet/cli","RelatedBody":"In particular, aiming to get dotnet/sdk#1857 inserted for official perf runs.\r\n\r\ncc @mikeharder "}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7171898026","Type":"IssuesEvent","CreatedAt":"2018-01-30T15:18:32","Actor":"ditux","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/637","RelatedDescription":"Closed issue \"ProjectInSolution class is not recognised in .Net Standard 2.0\" (#637) at dotnet/standard","RelatedBody":"Hello,\r\n\r\nI am writing a c# automation application that requires \"ProjectInSolution\" class which i understand is only available on the .NET Framework. I am targeting the .NET Standard 2.0 and would like to know if there is an alternative?\r\n\r\nThanks"},{"Id":"7171668708","Type":"IssuesEvent","CreatedAt":"2018-01-30T14:40:23","Actor":"ditux","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/637","RelatedDescription":"Opened issue \"ProjectInSolution class is not recognised in .Net Standard 2.0\" (#637) at dotnet/standard","RelatedBody":"Hello,\r\n\r\nI am writing a c# automation application that requires \"ProjectInSolution\" class which i understand is only available on the .NET Framework. I am targeting the .NET Standard 2.0 and would like to know if there is an alternative?\r\n\r\nThanks"},{"Id":"7168870939","Type":"PullRequestEvent","CreatedAt":"2018-01-30T02:53:08","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/636","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02430-02 (master)\" (#636) at dotnet/standard","RelatedBody":""},{"Id":"7167745006","Type":"IssuesEvent","CreatedAt":"2018-01-29T21:37:23","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/629","RelatedDescription":"Closed issue \"Question:Is there a common api to load unmanaged dll in .net standard 2.0 ?\" (#629) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nWe're working to have .net standard 2.0 support for IBM .Net Provider. We have dependency on unmanaged\\native dll and currently we are loading it via LoadUnmanagedDllFromPath(..) from System.Runtime.Loader pkg.\r\nWe want our package to work with Full Framework as well.. Since System.Runtime.Loader pkg do not support FullFramework, we need to figure out alternate way of loading unmanaged dll.\r\nOne way we could see using  DllImport.. or Platform invoke. But in this case we have to deal with Linux and OSX. Which we are trying to avoid..  \r\nOur question are-\r\n1. Is there a way or common api across the platforms to load unmanaged dll in .Net standard 2.0\r\n2. What are the best way to Handle\\load unmanaged dll ?\r\n\r\nWarm Regards,\r\nArchana"},{"Id":"7167726243","Type":"IssuesEvent","CreatedAt":"2018-01-29T21:33:24","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/632","RelatedDescription":"Closed issue \"DataAnnotaions in .net core misbehaving\" (#632) at dotnet/standard","RelatedBody":"Hi the range for dataannotaions does not seem to work or the (0) for the display attib correctly if you put in range of 1 250 it always errors after you enter any chars. Additionally if you try to use the {0} {1} {2} the param (0) never shows the display attrib. The {0] is puling in min length and {1) max length and you cant get the display name  eg \r\n\r\n      [Required(ErrorMessage =\"{0} is required\")]\r\n\r\n        [Display(Name = \"Message\")]\r\n\r\n        [Range(1,250, ErrorMessage = \"{0) should be between {1} and {2}\")]\r\n\r\n        public string Message { get; set; }\r\n\r\nas you type in the text area and tab off it errors with \r\n\r\n1 should be between 250 and {2}:\r\n\r\nbut i would expect is 'Message should be between 1 and 250'\r\n\r\nbut only error if nothing is in the text area and or max has exceed not if the range of text is correct\r\n\r\nEdit (0)\r\n\r\nI am using .net core 2"},{"Id":"7167630380","Type":"IssuesEvent","CreatedAt":"2018-01-29T21:13:15","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/635","RelatedDescription":"Opened issue \"Fix all the interop APIs in netstandard ref\" (#635) at dotnet/standard","RelatedBody":"See https://github.com/dotnet/standard/pull/631 which fixes some of them but we should go through the rest of the ref to ensure that all of the structs and COM interfaces are corrected. \r\n\r\nSee also https://github.com/dotnet/buildtools/issues/1880 which would help find and fix these. "},{"Id":"7167620089","Type":"PullRequestEvent","CreatedAt":"2018-01-29T21:11:03","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/633","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02427-01 (master)\" (#633) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7181461401","Type":"PullRequestEvent","CreatedAt":"2018-02-01T05:11:12","Actor":"maryamariyan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26731","RelatedDescription":"Opened pull request \"bugfix and adding test for GetFolderPath when special folder doesnt exist\" (#26731) at dotnet/corefx","RelatedBody":"Bugfix on GetFolderPath in Unix when special folder doesnt exist\r\n\r\nFixes #26677\r\ncc: @danmosemsft "},{"Id":"7181402999","Type":"PullRequestEvent","CreatedAt":"2018-02-01T04:46:52","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26730","RelatedDescription":"Opened pull request \"fix dribble tests when client disconnects on bad request\" (#26730) at dotnet/corefx","RelatedBody":"Fixes #26729 \r\n\r\n@stephentoub @pjanotti "},{"Id":"7181353000","Type":"PullRequestEvent","CreatedAt":"2018-02-01T04:25:00","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26708","RelatedDescription":"Merged pull request \"ManagedHandler: implement connection retry logic\" (#26708) at dotnet/corefx","RelatedBody":"Fixes #26495 \r\n\r\nImplement basic retry logic on connection failure.  If a previously pooled connection fails before we start sending the request body, and before we start receiving the response, then it's retryable; we grab another connection and retry (and repeat as necessary).\r\n\r\nAdditionally:\r\n(1) Refactor some connection creation code\r\n(2) Change HttpConnectionKey to include SSL Host Name (otherwise we could be sending requests on the wrong SSL connections)\r\n\r\n@stephentoub @davidsh @Priya91 @wfurt @caesar1995"},{"Id":"7181352996","Type":"IssuesEvent","CreatedAt":"2018-02-01T04:25:00","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26495","RelatedDescription":"Closed issue \"[ManagedHandler] Add request retry logic on IO failures\" (#26495) at dotnet/corefx","RelatedBody":"We should support request retry logic for scenarios when sending a request fails due to server connection timeout or other issues.\r\n\r\nSee my comments on #26453 for more details. \r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7181201096","Type":"IssuesEvent","CreatedAt":"2018-02-01T03:26:10","Actor":"AlexanderMorou","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24575","RelatedDescription":"Opened issue \"Refactor: Rename - Renaming to Discard doesn't report 'Invalid Identifier'\" (#24575) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n- Visual Studio 15.5.5\r\n- Project [Advanced Build Settings] - Language Version: C# latest major version (default)\r\n\r\n**Steps to Reproduce**:\r\n1. Using the two statements below:\r\n\r\n        var (a, b) = (3, 4);\r\n        Console.WriteLine(b);\r\n2. Refactor `b` to `_`\r\n3. Refactor window does not properly indicate that `_` is not a valid identifier.  \r\n\r\n**Expected Behavior**:\r\nRefactor Rename should indicate `The new name is not a valid identifier` or some other indication of what a discard is.\r\n\r\n**Actual Behavior**:\r\nRename seems to indicate the discard name will not be an issue when it will cause a compilation error if there are one or more references."},{"Id":"7180955493","Type":"PullRequestEvent","CreatedAt":"2018-02-01T01:59:12","Actor":"natidea","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24572","RelatedDescription":"Merged pull request \"Merge dev15.6.x to dev15.6.x-vs-deps\" (#24572) at dotnet/roslyn","RelatedBody":"This is a pull request from dev15.6.x into dev15.6.x-vs-deps.\r\n\r\n``` bash\r\ngit fetch --all\r\ngit checkout merges/dev15.6.x-to-dev15.6.x-vs-deps-20180131\r\ngit reset --hard upstream/dev15.6.x-vs-deps\r\ngit merge upstream/dev15.6.x\r\n# Fix merge conflicts\r\ngit commit\r\ngit push merges/dev15.6.x-to-dev15.6.x-vs-deps-20180131 --force\r\n```\r\n\r\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7180863394","Type":"PullRequestEvent","CreatedAt":"2018-02-01T01:27:57","Actor":"olegtk","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24484","RelatedDescription":"Merged pull request \"Fix Intellisense in debugger tool windows\" (#24484) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template</summary>\r\n\r\n### Customer scenario\r\nWhen debugging a VB application, a customer opens Immediate window and types \"?\" to dump a value of a variable. Instead of showing a completion, \"??\" is written to the Immediate Window.\r\n\r\n### Bugs this fixes\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/557166\r\n\r\n### Workarounds, if any\r\n\r\nN/A\r\n\r\n### Risk\r\n\r\nLow, the fix only affects DebuggerIntellisenseFilter class and follows the approach already used by VenusCommandFilter.\r\n\r\n### Performance impact\r\n\r\nNo perf impact is expected as the fix just restores execution of existing command handlers in this scenario.\r\n\r\n### Is this a regression from a previous update?\r\nIt's a regression from 15.6 Preview2 caused by migrating all Roslyn command handlers to the new editor commanding.\r\n\r\n### Root cause analysis\r\n\r\nWe missed this issue in partner manual testing stage because we didn't include debugger team into the list of affected partners. Also this scenario is only covered by CQ tests, which took long to run and analyze.\r\nThis PR adds 2 basic C# and VB integration tests to cover this scenario in earlier development stage. \r\n\r\n### How was the bug found?\r\n\r\nCQ test failure.\r\n\r\n</details>\r\n\r\n----------------------------------------------------------------------------\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/557166\r\n\r\nDebuggerIntellisenseFilter, just like VenusCommandFilter routes commands to the legacy command handler service, which now is no-op for VB/C#. And so now (again, just like VenusCommandFilter) in order to execute command handlers migrated to the editor commanding it needs to hookup the new editor command handler service, configured to the correct text view and subject buffer."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7179008030","Type":"PullRequestEvent","CreatedAt":"2018-01-31T18:14:32","Actor":"benaadams","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5324","RelatedDescription":"Opened pull request \" Reduce Execution Context Save+Restore\" (#5324) at dotnet/corert","RelatedBody":"Update to https://github.com/dotnet/corert/pull/5323\r\n\r\n/cc @jkotas "},{"Id":"7178098473","Type":"PullRequestEvent","CreatedAt":"2018-01-31T15:35:15","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5323","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5323) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7177858097","Type":"PullRequestEvent","CreatedAt":"2018-01-31T14:55:50","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5322","RelatedDescription":"Merged pull request \"CppCodegen: Implement break opcode and readonly prefix\" (#5322) at dotnet/corert","RelatedBody":"Fixes #5299."},{"Id":"7177510380","Type":"PullRequestEvent","CreatedAt":"2018-01-31T13:53:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5321","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5321) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7180436878","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:17:24","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1116","RelatedDescription":"Reopened issue \"_ComputeLockFileReferences/RunResolvePackageDependencies should be faster when projects are up-to-date\" (#1116) at dotnet/sdk","RelatedBody":"Investigating up-to-date builds from ASP.NET, I've found that _ComputeLockFileReferences/RunResolvePackageDependencies is taking a non-trivial amount of time (> 17%) of the build time when a project is considered up-to-date.\r\n\r\n```\r\n109>        1 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n109>        1 ms  IncludeTransitiveProjectReferences         1 calls\r\n109>        1 ms  ExpandSDKReferences                        1 calls\r\n109>        1 ms  CoreCompile                                1 calls\r\n109>        2 ms  GenerateBuildRuntimeConfigurationFiles     1 calls\r\n109>        3 ms  _ComputeActiveTFMFileDependencies          1 calls\r\n109>        3 ms  CopyFilesToOutputDirectory                 1 calls\r\n109>        4 ms  ResolveLockFileReferences                  1 calls\r\n109>        7 ms  _ComputeActiveTFMPackageDependencies       1 calls\r\n109>       10 ms  _ComputeTFMOnlyFileDependencies            1 calls\r\n109>       15 ms  GetTargetFrameworkProperties              79 calls\r\n109>       19 ms  _GenerateCompileDependencyCache            1 calls\r\n109>       20 ms  _CopyFilesMarkedCopyLocal                  1 calls\r\n109>       25 ms  _ComputeTransitiveProjectReferences        1 calls\r\n109>       27 ms  AssignProjectConfiguration                 1 calls\r\n109>       27 ms  IncrementalClean                           1 calls\r\n109>       32 ms  _SplitProjectReferencesByFileExistence     1 calls\r\n109>       49 ms  GetCopyToOutputDirectoryItems              1 calls\r\n109>      122 ms  _CleanGetCurrentAndPriorFileWrites         1 calls\r\n109>      141 ms  ResolveProjectReferences                   1 calls\r\n109>      368 ms  RunResolvePackageDependencies              1 calls <-- This bug\r\n109>      912 ms  _ComputeLockFileReferences                 1 calls <-- This bug\r\n109>     1630 ms  ResolveAssemblyReferences                  1 calls\r\n109>     5970 ms  _GetProjectReferenceTargetFrameworkProperties  95 calls\r\n```\r\n\r\nWe should investigate ways of caching/making this faster."},{"Id":"7180432592","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:16:11","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1116","RelatedDescription":"Closed issue \"_ComputeLockFileReferences/RunResolvePackageDependencies should be faster when projects are up-to-date\" (#1116) at dotnet/sdk","RelatedBody":"Investigating up-to-date builds from ASP.NET, I've found that _ComputeLockFileReferences/RunResolvePackageDependencies is taking a non-trivial amount of time (> 17%) of the build time when a project is considered up-to-date.\r\n\r\n```\r\n109>        1 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n109>        1 ms  IncludeTransitiveProjectReferences         1 calls\r\n109>        1 ms  ExpandSDKReferences                        1 calls\r\n109>        1 ms  CoreCompile                                1 calls\r\n109>        2 ms  GenerateBuildRuntimeConfigurationFiles     1 calls\r\n109>        3 ms  _ComputeActiveTFMFileDependencies          1 calls\r\n109>        3 ms  CopyFilesToOutputDirectory                 1 calls\r\n109>        4 ms  ResolveLockFileReferences                  1 calls\r\n109>        7 ms  _ComputeActiveTFMPackageDependencies       1 calls\r\n109>       10 ms  _ComputeTFMOnlyFileDependencies            1 calls\r\n109>       15 ms  GetTargetFrameworkProperties              79 calls\r\n109>       19 ms  _GenerateCompileDependencyCache            1 calls\r\n109>       20 ms  _CopyFilesMarkedCopyLocal                  1 calls\r\n109>       25 ms  _ComputeTransitiveProjectReferences        1 calls\r\n109>       27 ms  AssignProjectConfiguration                 1 calls\r\n109>       27 ms  IncrementalClean                           1 calls\r\n109>       32 ms  _SplitProjectReferencesByFileExistence     1 calls\r\n109>       49 ms  GetCopyToOutputDirectoryItems              1 calls\r\n109>      122 ms  _CleanGetCurrentAndPriorFileWrites         1 calls\r\n109>      141 ms  ResolveProjectReferences                   1 calls\r\n109>      368 ms  RunResolvePackageDependencies              1 calls <-- This bug\r\n109>      912 ms  _ComputeLockFileReferences                 1 calls <-- This bug\r\n109>     1630 ms  ResolveAssemblyReferences                  1 calls\r\n109>     5970 ms  _GetProjectReferenceTargetFrameworkProperties  95 calls\r\n```\r\n\r\nWe should investigate ways of caching/making this faster."},{"Id":"7180141026","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:06:51","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1920","RelatedDescription":"Closed issue \"Package version\" (#1920) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/sdk/blob/94a3f2856cb09e66ee7472820b4e26fb576b4686/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.DefaultAssemblyInfo.targets#L18-L22\r\n\r\nShouldn't it be:\r\n```\r\n <PropertyGroup Condition=\" '$(Version)' == '' \"> \r\n   <VersionPrefix Condition=\" '$(VersionPrefix)' == '' \">1.0.0</VersionPrefix> \r\n   <Version Condition=\" '$(VersionSuffix)' != '' \">$(VersionPrefix)-$(VersionSuffix)</Version>\r\n   <Version Condition=\" '$(VersionSuffix)' == '' \">$(VersionPrefix)</Version>\r\n </PropertyGroup> \r\n \r\n```\r\n\r\nor even:\r\n```\r\n <PropertyGroup>\r\n   <Version>1.0.0</Version> \r\n   <Version Condition=\" '$(VersionSuffix)' != '' \">$(Version)-$(VersionSuffix)</Version> \r\n </PropertyGroup> \r\n```"},{"Id":"7176389071","Type":"IssuesEvent","CreatedAt":"2018-01-31T09:52:54","Actor":"dbarwikowski","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1920","RelatedDescription":"Opened issue \"Package version\" (#1920) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/sdk/blob/94a3f2856cb09e66ee7472820b4e26fb576b4686/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.DefaultAssemblyInfo.targets#L21\r\n\r\nShouldn't it be:\r\n```\r\n    <Version Condition=\" '$(VersionSuffix)' == '' \">$(VersionPrefix)</Version> \r\n```"},{"Id":"7175895356","Type":"PullRequestEvent","CreatedAt":"2018-01-31T08:00:49","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1919","RelatedDescription":"Opened pull request \"Merge release/2.1 to master\" (#1919) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180131-080048\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180131-080048 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7175895271","Type":"PullRequestEvent","CreatedAt":"2018-01-31T08:00:47","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1918","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#1918) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180131-080046\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180131-080046 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174996457","Type":"IssuesEvent","CreatedAt":"2018-01-31T02:37:36","Actor":"yyjdelete","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1913","RelatedDescription":"Closed issue \"NU1605 by default treated as error instead of warning, breaks updating packages in solutions\" (#1913) at dotnet/sdk","RelatedBody":"See also https://github.com/NuGet/Home/issues/6141.\r\n\r\nAny attempt to try to update all PackageReference to the same version with NuGet will failed, and the any way is to edit .csproj directly."},{"Id":"7174378679","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:22:00","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1914","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/2.1\" (#1914) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180130-080051\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180130-080051 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174375062","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:21:01","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1903","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/2.1\" (#1903) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180126-080049\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180126-080049 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7174374122","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:20:48","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1909","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/2.1\" (#1909) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180129-080049\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180129-080049 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"956524881096708096","CreatedAt":"2018-01-25T13:51:17+00:00","UserScreenname":"dotnet","Text":"Jeff and Maira - improving https://t.co/QxdK7Ocjtg LIVE at 10am ET / 15:00 UTC.  Check it out! https://t.co/jlSeKESN3g","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":8,"RawContent":null},{"Id":"955790963024257024","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"dotnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BLXAg7rubK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"954763538328883201","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"dotnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/EefnkSEqfe","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null},{"Id":"954724179533758465","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"dotnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/dWA8n7Ttph","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-02-01T05:30:20.5233571Z","RunDurationInMilliseconds":7736}