{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":3,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":105,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6693261982","Type":"IssuesEvent","CreatedAt":"2017-10-09T19:37:10","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2227","RelatedDescription":"Closed issue \"ComponentRegistrationException:\" (#2227) at aspnet/Home","RelatedBody":" I use castle  Ioc  in my application  ,like [code example ](https://gist.github.com/cwe1ss/050a531e2711f5b62ab0)\r\n\r\nbut An error occurred while starting the application.\r\n\r\nComponentRegistrationException: Component Microsoft.Extensions.Options.OptionsManager`1 could not be registered. There is already a component with that name. Did you want to modify the existing component instead? If not, make sure you specify a unique name.\r\nCastle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem.Register(IHandler handler)\r\n\r\nComponentRegistrationException: Component Microsoft.Extensions.Options.OptionsManager`1 could not be registered. There is already a component with that name. Did you want to modify the existing component instead? If not, make sure you specify a unique name.\r\nCastle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem.Register(IHandler handler)\r\nCastle.MicroKernel.DefaultKernel.AddCustomComponent(ComponentModel model)\r\nCastle.MicroKernel.Registration.ComponentRegistration.Castle.MicroKernel.Registration.IRegistration.Register(IKernelInternal kernel)\r\nCastle.MicroKernel.DefaultKernel.Register(IRegistration[] registrations)\r\nCastle.Windsor.WindsorContainer.Register(IRegistration[] registrations)\r\nBlueBlog.Utility.WindsorRegistration.Register(IWindsorContainer container, IEnumerable<ServiceDescriptor> descriptors) in WindsorRegistration.cs\r\n+\r\n                    container.Register(\r\nBlueBlog.Utility.WindsorRegistration.Populate(IocContainer container, IEnumerable<ServiceDescriptor> descriptors) in WindsorRegistration.cs\r\n+\r\n            Register(container.Container, descriptors);\r\nBlueBlog.Startup.ConfigureServices(IServiceCollection services) in Startup.cs\r\n+\r\n            container.Populate(services);\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection services)\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n"},{"Id":"6691883228","Type":"IssuesEvent","CreatedAt":"2017-10-09T14:35:48","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2237","RelatedDescription":"Closed issue \"The 'Access-Control-Allow-Origin' header contains multiple values '*, *', but only one is allowed\" (#2237) at aspnet/Home","RelatedBody":"I created an angular 1 app which consumes an RESTfull web service (asp net core 1.1).\r\n\r\nI have enabled CORS with the following settings:\r\n\r\n`Startup.cs`\r\n```\r\n public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\t    services.AddCors(options => options.AddPolicy(\"AllowAll\", p => p.AllowAnyOrigin().AllowAnyMethod().WithHeaders(\"accept\", \"content-type\", \"authorization\")));\t\t\r\n\r\n            var mvc = services.AddMvc();\r\n\r\n            mvc.AddFeatureFolders();\r\n\t}\r\n\r\n public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n            app.UseForwardedHeaders(new ForwardedHeadersOptions\r\n            {\r\n                ForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto\r\n            });\r\n\r\n            loggerFactory.AddConsole(Configuration.GetSection(\"Logging\")).AddDebug();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseBrowserLink();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/home/error\");\r\n            }\r\n\r\n            app.UseCors(\"AllowAll\");\r\n\t  }\r\n```\r\n`MetaController.cs`\r\n```\r\n    [Route(\"[controller]/v1/[action]\")]\r\n    [Produces(\"application/json\")]\r\n    [EnableCors(\"AllowAll\")]\r\n    public class MetaController : Controller\r\n    {   }\r\n```\r\nThe angular http method call\r\n```\r\n $http({\r\n                    method: 'POST',\r\n                    url: 'https://www.mydomain.com/api/v1/meta/',\r\n                    data: data,\r\n                    headers:\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Basic mytoken'\r\n                    }\r\n                })\r\n```\r\nAny thoughts?"},{"Id":"6691852095","Type":"IssuesEvent","CreatedAt":"2017-10-09T14:30:02","Actor":"helderboone","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2237","RelatedDescription":"Opened issue \"The 'Access-Control-Allow-Origin' header contains multiple values '*, *', but only one is allowed\" (#2237) at aspnet/Home","RelatedBody":"I created an angular 1 app which consumes an RESTfull web service (asp net core 1.1).\r\n\r\nI have enabled CORS with the following settings:\r\n\r\n`Startup.cs`\r\n```\r\n public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\t    services.AddCors(options => options.AddPolicy(\"AllowAll\", p => p.AllowAnyOrigin().AllowAnyMethod().WithHeaders(\"accept\", \"content-type\", \"authorization\")));\t\t\r\n\r\n            var mvc = services.AddMvc();\r\n\r\n            mvc.AddFeatureFolders();\r\n\t}\r\n\r\n public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n            app.UseForwardedHeaders(new ForwardedHeadersOptions\r\n            {\r\n                ForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto\r\n            });\r\n\r\n            loggerFactory.AddConsole(Configuration.GetSection(\"Logging\")).AddDebug();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseBrowserLink();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/home/error\");\r\n            }\r\n\r\n            app.UseCors(\"AllowAll\");\r\n\t  }\r\n```\r\n`MetaController.cs`\r\n```\r\n    [Route(\"[controller]/v1/[action]\")]\r\n    [Produces(\"application/json\")]\r\n    [EnableCors(\"AllowAll\")]\r\n    public class MetaController : Controller\r\n    {   }\r\n```\r\nThe angular http method call\r\n```\r\n $http({\r\n                    method: 'POST',\r\n                    url: 'https://www.mydomain.com/api/v1/meta/',\r\n                    data: data,\r\n                    headers:\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Basic mytoken'\r\n                    }\r\n                })\r\n```\r\nAny thoughts?"},{"Id":"6689400871","Type":"IssuesEvent","CreatedAt":"2017-10-09T01:43:22","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2236","RelatedDescription":"Closed issue \"ANCM should be available as a standalone installer\" (#2236) at aspnet/Home","RelatedBody":"@jberezanski asked for this.\r\n\r\nFiling this to track the only open issue here: https://github.com/dotnet/core/issues/848\r\n\r\n"},{"Id":"6689349033","Type":"IssuesEvent","CreatedAt":"2017-10-09T01:09:22","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2236","RelatedDescription":"Opened issue \"ANCM should be available as a standalone installer\" (#2236) at aspnet/Home","RelatedBody":"@jberezanski asked for this.\r\n\r\nFiling this to track the only open issue here: https://github.com/dotnet/core/issues/848\r\n\r\n"},{"Id":"6689088805","Type":"IssuesEvent","CreatedAt":"2017-10-08T21:55:38","Actor":"dotboris","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/981","RelatedDescription":"Closed issue \"Can't run dnx commands from a solution root\" (#981) at aspnet/Home","RelatedBody":"Every time I try to run a command from a project using `dnx -p SomeProject some-command` it complains about `project.lock.json` being missing even tho it's present. When I run the command by going to the directory of the project with `dnx some-command` it works.\n\nHere's an example: https://gist.github.com/beraboris/6c1437de9d0ffbbc5355\n\nIn this case I have a `global.json` file pointing to the `test/` directory. I also have a test project with xunit called `SomeTest`. This project depends on xunit and its dnx runner. You should notice that I don't have a `test/SomeTest/project.lock.json` file.\n\nI try to run `dnx -p SomeTest test` it complains about `test/SomeTest/project.lock.json` being missing. This is perfectly normal since the file is not there. The error also tells me to run `dnu restore`.\n\nFollowing the advice from the error, I run `dnu restore` which creates `test/SomeTest/project.lock.json`. This is illustrated in the following command.\n\nI try to run `dnx -p SomeTest test` again and I get the same error. This time it's not expected behaviour because the required file does exist.\n\nI then try to go to the `test/SomeTest` directory and run the test command directly (`dnx test`) and the command runs fine.\n\nI should note that I'm running Arch Linux 64 bit with dnx v1.0.0-beta7, and mono v4.0.3.\n"},{"Id":"6687311747","Type":"IssuesEvent","CreatedAt":"2017-10-07T21:54:15","Actor":"JulienM28","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2235","RelatedDescription":"Opened issue \"VS 2017 Debugger Hangs on start\" (#2235) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI use Visual studio 2017 x64 on Windows 10 x64 with Dot Net core 1.1\r\nMy project is using the last 1.1.X dependencies available.\r\n\r\nI have a starnge issue with an ASP.Net Core projetct.\r\n\r\nSince recently everything worked fine. The dubugger took a while to start but was ok.\r\n\r\nNow when I launch the debugger, the webSite is starting fine, but VS Hangs on a message telling the web server took too long time to start.\r\n\r\nI tried to make an application console instead of using IIS Express, The debugger is starting nicely.\r\n\r\nI have another issue in this case: I'm using custom url to test subdomains rooting, and brakpoints doesn't hit in this case.\r\n\r\nSo I can't debug anymore.\r\n\r\nFinaly I created a fresh project and the debugger worked fine.\r\n\r\nI assume there's something in my code that doesn't please to Visual Studio or .Net Core, But I didn't fint out what for now.\r\n\r\nAny Idea?\r\n\r\nThanks.\r\n"},{"Id":"6686797815","Type":"IssuesEvent","CreatedAt":"2017-10-07T15:46:04","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2234","RelatedDescription":"Opened issue \"Migrating ASP.NET Core 1.1 apps -> ASP.NET Core 2.0\" (#2234) at aspnet/Home","RelatedBody":"@richlander opened this here: https://github.com/dotnet/core/issues/726\r\n\r\nWe need docs for this.\r\n\r\nSee: https://github.com/dotnet/core/issues/711#issuecomment-312377310"},{"Id":"6686118866","Type":"IssuesEvent","CreatedAt":"2017-10-07T06:07:40","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2233","RelatedDescription":"Opened issue \"Performance issue with stream download\" (#2233) at aspnet/Home","RelatedBody":"@chintan3100 commented on Sep 5\r\nI am downloading 400 MB file on local machine with 7 MB/Second (.net core 2.0) same code run with .net framework 4.6 download speed 100 MB/Second.\r\n\r\npublic IActionResult DownloadDocument(Guid documentUniqueId)\r\n{\r\nvar bytes = System.IO.File.OpenRead(@\"D:\\home\\site\\wwwroot\\file\\Organizer01_2017-09-03 (14) (3).zip\");\r\nreturn File(bytes, \"application/octet-stream\");\r\n\r\n}\r\nFile size 400 MB . API on local system. FIle on local system\r\nPerformance issue with stream download hasno dependencies\r\n\r\n+ add dependency\r\n @Petermarcu\r\n@JeremyKuhne can we get this tracked in dotnet/corefx?\r\n @JeremyKuhne\r\n     Member\r\nJeremyKuhne commented on Sep 5\r\nThis issue was also opened as: aspnet/Performance#246\r\n\r\n@chintan3100 We need to know exactly how the FileStream is being written. What is the File class you're using? If you're writing via ASP.NET apis it would probably be better to start on that end.\r\n @chintan3100\r\n     \r\nchintan3100 commented 28 days ago\r\nI am using .net core. Please refer below code\r\n\r\npublic IActionResult DownloadDocument(Guid documentUniqueId)\r\n{\r\nvar bytes = System.IO.File.OpenRead(@\"D:\\home\\site\\wwwroot\\file\\Organizer01_2017-09-03 (14) (3).zip\");\r\nreturn File(bytes, \"application/octet-stream\");\r\n\r\n}\r\n @JeremyKuhne\r\n     Member\r\n\r\nPresumably you're talking about System.Web.Mvc.Controller.File. You should probably start with https://github.com/aspnet/Mvc/issues. The ASP.NET team is the right starting point."},{"Id":"6685310880","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:23:11","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2232","RelatedDescription":"Opened issue \"Core 2.0 CORS api doesn't work in IIS 8.5\" (#2232) at aspnet/Home","RelatedBody":"Originally opened by @kostyamy here: https://github.com/dotnet/core/issues/951\r\n# Issue Title\r\n\r\nHaving some troubles with hosting .NET Core 2.0 MVC bases api (not views but pure api) on Windows 2012 R2: IIS 8.5 -> Kestrel on dynamic port.\r\n\r\nClient is Chrome both kinds - \"fetch\" and \"XHR\" but i don't think it makes any difference\r\n\r\n- \"same origin\" requests work fine\r\n- locally on my dev machine Surface , Windows 10 same origin and cross-domain (faked via system32\\drivers\\etc\\hosts) work fine even using IIS proxy ->Kestrel chain. Please note not IIS Express but actual IIS 10.\r\n- 2012 box IIS 8.5 no luck :-( looks like IIS not passing through any cross-domain api calls since even IIS log and tracing show NO activities on \"<domain>/api/<controller>/<method>\" urls.  At the same time STATIC html files are being served just fine but not by Kestrel but pure IIS.\r\n\r\nTried to launch api form CLI: dotnet .\\<my-api>.dll and looks like it starts just find and hosts on localhost:<dynamic port>\r\n\r\nHere is my web.config (pretty much out of box)\r\n<system.webServer>\r\n    <handlers>\r\n      <add name=\"aspNetCore\" path=\"api/*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\"dotnet\" arguments=\".\\<my-api>.dll\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" />\r\n  </system.webServer>\r\n</configuration>\r\n\r\ni see no system level error in event log, no IIS logs, nothing.\r\nIf AspDotNetModule Core fails somehow while starting under IIS then where besides empty system event log i should be looking at ???\r\n\r\nIf needed I can provide more information.\r\n\r\nThanks in advance,\r\n-K\r\n\r\nFrom: @brockallen\r\n\r\nMy guess is that IIS is eating OPTIONS requests. Do you have anything configured in IIS to process those? \r\n\r\nhttps://brockallen.com/2012/10/18/cors-iis-and-webdav/\r\n\r\nFrom: @kostyamy\r\n\r\nall clean. no filters of any kind. looks like my original post is missing content of the web.config\r\nbut it's actually a default one produced by the dotnet publish -c command\r\nso only AspDotNetModule entry and that's it"},{"Id":"6685044573","Type":"IssuesEvent","CreatedAt":"2017-10-06T20:11:20","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2231","RelatedDescription":"Opened issue \"Asp-controller and asp-action attributes order\" (#2231) at aspnet/Home","RelatedBody":"@johanskoldekrans reported this issue here: https://github.com/dotnet/core/issues/899\r\n\r\nIf a make an a-tag in html on the view and put asp-* tags (for example asp-controller, asp-action and asp-route) after a @(some code)-section and a class-attribute it breaks the interpretation of the asp-* attributes.\r\n\r\nBelow example doesnt pick up the route-id:\r\n`\r\n<a asp-controller=\"Some\" asp-action=\"Something\" class=\"@(x == y ? \"something\" : \"\")\" asp-route-id=\"1\">Click me</a>\r\n`\r\nif I put all after nothing happens (no href is generated):\r\n`\r\n<a class=\"@(x == y ? \"something\" : \"\")\" asp-controller=\"Some\" asp-action=\"Something\" asp-route-id=\"1\">Click me</a>\r\n`\r\nIs this behaviour as design?\r\n\r\nVS 2017 15.3.2\r\n.NETCore 2.1.0-preview1-26778\r\n.EFCore 2.1.0-preview1-26778\r\nWindows 10 Insider (slow ring)\r\n\r\nThis is probably closer to what I did IRL that didn't work, if there is a difference:\r\n\r\n`<a @(x == y ? \"class=\\\"something\\\"\" : \"\")\" asp-controller=\"Some\" asp-action=\"Something\" asp-route-id=\"1\">Click me</a>`"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6693288374","Type":"PullRequestEvent","CreatedAt":"2017-10-09T19:43:41","Actor":"ryanbrandenburg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/918","RelatedDescription":"Merged pull request \"Update bootstrappers\" (#918) at aspnet/SignalR","RelatedBody":null},{"Id":"6692620282","Type":"PullRequestEvent","CreatedAt":"2017-10-09T17:01:30","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/999","RelatedDescription":"Opened pull request \"Only dispose HttpClient once in HttpConnection\" (#999) at aspnet/SignalR","RelatedBody":"#860 \r\nAdded tests for both scenarios @moozzyk called out in the linked issue."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6693296505","Type":"PullRequestEvent","CreatedAt":"2017-10-09T19:45:47","Actor":"ryanbrandenburg","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6859","RelatedDescription":"Merged pull request \"Update bootstrappers\" (#6859) at aspnet/Mvc","RelatedBody":null},{"Id":"6693102200","Type":"IssuesEvent","CreatedAt":"2017-10-09T18:56:37","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6878","RelatedDescription":"Closed issue \"RemoteAttribute not creating correct URL when route contains an area and no explicit routes defined\" (#6878) at aspnet/Mvc","RelatedBody":"The `RemoteAttribute.GetUrl()` method is not returning the correct URL when an action lives inside of an area and no explicit route is defined in Startup.cs\r\n\r\nYou can see this if you only use attribute routing and decorate a view model property with the `RemoteAttribute` and specify values pointing to an Action within an Area.\r\n\r\nI attempted to debug using symbols that were available and was able to narrow the issue down to somewhere behind `RouteCollection.GetVirtualPath()` in `Microsoft.AspNetCore.Routing`.\r\n\r\nThe `GetVirtualPath()` method iterates all `IRouters` (in my case only a single `Microsoft.AspNetCore.Mvc.Internal.AttributeRoute`) and calls` GetVirtualPath()` using the provided `VirtualPathContext`, which in this case comes from a `UrlHelper` newed up in the `RemoteAttribute.GetUrl()` method.\r\n\r\nI've verified that the area name provided to the `RemoteAttribute` constructor is included in the Values property on `VirtualPathContext`.\r\n\r\nThe call to `AttributeRoute.GetVirtualPath()`  in this scenario is consistently returning `null`.\r\n\r\nI was unable to locate any public symbols for `Microsoft.AspNetCore.Mvc.Internal.AttributeRoute` so I could not debug further."},{"Id":"6692166357","Type":"PullRequestEvent","CreatedAt":"2017-10-09T15:26:48","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6930","RelatedDescription":"Opened pull request \"Infer binding sources for ApiController parameters\" (#6930) at aspnet/Mvc","RelatedBody":"Fixes #6847"},{"Id":"6690390774","Type":"IssuesEvent","CreatedAt":"2017-10-09T08:55:38","Actor":"aureole82","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6929","RelatedDescription":"Opened issue \"Implicit translations for implicit validation!\" (#6929) at aspnet/Mvc","RelatedBody":"ASP.NET MVC has a great feature: Implicit translations for default error messages and/or implicit validation!\r\nLet's take this model:\r\n\r\n```csharp\r\npublic class MyModel {\r\n    public int Id { get; set; }\r\n    public int MyInt { get; set; }\r\n    public DateTime MyDateTime { get; set; }\r\n    [Required] public string MyString { get; set; }\r\n}\r\n```\r\n\r\nAll I have to do is changing the `CurrentUICulture`:\r\n![grafik](https://user-images.githubusercontent.com/4819891/31329924-889ddff0-acdc-11e7-90fe-f8a6a906713b.png)\r\n\r\n**Please tell me where's the feature gone in ASP MVC Core?**\r\n\r\n------\r\nPlease keep in mind\r\n- The official documentation \"Globalization and localization in ASP.NET Core\" (https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization) ignores this question. Following those instructions would end up in adding thousands of validation attributes (implicit validation becomes explicit validation). Even worse: Each validation attribute must have the `ErrorMessage` specified. \r\n- I know there are proposals out there to add explicit validation with the help of an `IValidationMetadataProvider`, e.g. https://blogs.msdn.microsoft.com/mvpawardprogram/2017/05/09/aspnetcore-mvc-error-message/. But I won't accept those as an answer. There are too error-prone. Even worse: The example spoils the complete concept of localization by pinning the error message to a single resource class.\r\n\r\nPlease tell me that I don't have to write hundreds of lines just to get the status quo!\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6693300867","Type":"PullRequestEvent","CreatedAt":"2017-10-09T19:46:53","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1438","RelatedDescription":"Merged pull request \"Update bootstrappers\" (#1438) at aspnet/Identity","RelatedBody":null},{"Id":"6688362893","Type":"PullRequestEvent","CreatedAt":"2017-10-08T13:56:04","Actor":"lkempf","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1455","RelatedDescription":"Opened pull request \"Fixed irritating typo in UserManager-docs\" (#1455) at aspnet/Identity","RelatedBody":"Second try (without a typo in a typo-fix 😄)"},{"Id":"6688358959","Type":"PullRequestEvent","CreatedAt":"2017-10-08T13:53:13","Actor":"lkempf","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1454","RelatedDescription":"Closed pull request \"Fixed irritating typo in ResetPasswordAsync()-docs\" (#1454) at aspnet/Identity","RelatedBody":""},{"Id":"6684456737","Type":"PullRequestEvent","CreatedAt":"2017-10-06T17:44:30","Actor":"lkempf","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1454","RelatedDescription":"Opened pull request \"Fixed irritating typo in ResetPasswordAsync()-docs\" (#1454) at aspnet/Identity","RelatedBody":""},{"Id":"6682233776","Type":"IssuesEvent","CreatedAt":"2017-10-06T09:00:29","Actor":"alonstar","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1452","RelatedDescription":"Closed issue \"How to get access_token from HttpContext.GetTokenAsync(\"access_token\") while external login\" (#1452) at aspnet/Identity","RelatedBody":"I want to get access_token from external login (using OpenIdConnect). I can see tokens in external login info,  but I can't get access_token from HttpContext.GetTokenAsync(\"access_token\"). \r\n\r\nMy ExternalLoginCallback is : \r\n\r\n        [HttpGet]\r\n        [AllowAnonymous]\r\n        public async Task<IActionResult> ExternalLoginCallback(string returnUrl = null, string remoteError = null)\r\n        {\r\n            if (remoteError != null)\r\n            {\r\n                ModelState.AddModelError(string.Empty, $\"Error from external provider: {remoteError}\");\r\n                return View(nameof(Login));\r\n            }\r\n            var info = await _signInManager.GetExternalLoginInfoAsync();\r\n            if (info == null)\r\n            {\r\n                return RedirectToAction(nameof(Login));\r\n            }\r\n\r\n            // Sign in the user with this external login provider if the user already has a login.\r\n            var result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, info.ProviderKey, isPersistent: false);\r\n            if (result.Succeeded)\r\n            {\r\n                // Update any authentication tokens if login succeeded\r\n                await _signInManager.UpdateExternalAuthenticationTokensAsync(info);\r\n\r\n                _logger.LogInformation(5, \"User logged in with {Name} provider.\", info.LoginProvider);\r\n                return RedirectToLocal(returnUrl);\r\n            }\r\n            if (result.RequiresTwoFactor)\r\n            {\r\n                return RedirectToAction(nameof(SendCode), new { ReturnUrl = returnUrl });\r\n            }\r\n            if (result.IsLockedOut)\r\n            {\r\n                return View(\"Lockout\");\r\n            }\r\n            else\r\n            {\r\n                // If the user does not have an account, then ask the user to create an account.\r\n                ViewData[\"ReturnUrl\"] = returnUrl;\r\n                ViewData[\"LoginProvider\"] = info.LoginProvider;\r\n                var email = info.Principal.FindFirstValue(ClaimTypes.Email);\r\n                return View(\"ExternalLoginConfirmation\", new ExternalLoginConfirmationViewModel { Email = email });\r\n            }\r\n        }"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6693299274","Type":"PullRequestEvent","CreatedAt":"2017-10-09T19:46:28","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2069","RelatedDescription":"Merged pull request \"Update bootstrappers\" (#2069) at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6693207763","Type":"PullRequestEvent","CreatedAt":"2017-10-09T19:23:16","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2097","RelatedDescription":"Merged pull request \"Improve TLS handshake\" (#2097) at aspnet/KestrelHttpServer","RelatedBody":"#2096 "},{"Id":"6690006466","Type":"IssuesEvent","CreatedAt":"2017-10-09T07:05:41","Actor":"ElyseeOkry","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2104","RelatedDescription":"Opened issue \"Server randomly stopped responding mainly on high traffic\" (#2104) at aspnet/KestrelHttpServer","RelatedBody":"We are using KestrelHttpServer and it randomly stops responding. This can happen few time a days or sometime once every 2-3 days. it is really random behavior. The frequency is high when we have high traffic.\r\nI wrote a small monitoring application, which automatically takes  a dums when it stops working and restart it. The dumps are taken using dotTrace of Jetbrain(https://www.jetbrains.com/profiler/).\r\nHave a look at the picture \r\n![dottrace](https://user-images.githubusercontent.com/32630630/31327308-bed97f38-acce-11e7-82bf-909671f2d644.PNG)\r\n\r\nIt seems that we have random deadlock in libuv threads. dotTrace shows which method the lock is coming from. **private void ThreadStart(object parameter)** from class LibuvThread  of https://github.com/aspnet/KestrelHttpServer/blob/6584a8b5fdaba0a79c52b981cac88472bcc92d1a/src/Kestrel.Transport.Libuv/Internal/LibuvThread.cs\r\n\r\nI am not sure what the issue is but we are having a deadlock somewhere there, probably related to the lock _startSync\r\n\r\nPlease could you help?\r\nMany thanks\r\n\r\n"},{"Id":"6688247203","Type":"IssuesEvent","CreatedAt":"2017-10-08T12:29:01","Actor":"iftahbe","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2103","RelatedDescription":"Opened issue \"Allow to replace the server cert at runtime\" (#2103) at aspnet/KestrelHttpServer","RelatedBody":"Right now, the SSL certificate that Kestrel will use is here:\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/dev/src/Kestrel.Https/Internal/HttpsConnectionAdapter.cs#L25-L26\r\n\r\nThere are certain scenarios that we want to support replacing the certificate while the server is still running. This can be done quite easily if we could set the `_serverCertificate` so all new connections will be able to use that.\r\n\r\nScenarios for that include using Let's Encrypt certificates and not having to restart every 3 months.\r\n\r\nWhile making it public is one option, I think it would be better to _not_ hold a reference to the `_serverCertificate` from the options but use the value in the options itself. That will mean that the caller could hold on to the options and change the certificate value used without messing with any internal state.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6685290467","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:17:07","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1715","RelatedDescription":"Opened issue \"Tie into ICompletionBroker.Dismissed event to determine provisional reparses.\" (#1715) at aspnet/Razor","RelatedBody":""},{"Id":"6682337613","Type":"IssuesEvent","CreatedAt":"2017-10-06T09:26:17","Actor":"marcusien","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1714","RelatedDescription":"Opened issue \"Add wildcard to tag on HtmlTargetElement\" (#1714) at aspnet/Razor","RelatedBody":"In a project, I would need to add functional logic on an unknown range of taghelpers. Why unknown ? just because I have a TagHelper on a homemade framework which contains mandatory logic. This framework is referenced by several projects.\r\nOn these several projects, We can write new TagHelpers but those new TagHelpers must call the TagHelper from the framework.\r\n\r\nTo reach our goal, the easiest way would be to apply our \"framework tag helper\" to every tags which begins by something\r\n\r\nFor instance, I'd like to apply my framework taghelper to every tag helpers beginning with \"mytag-*\". So i think allowing wildcard to \"tag\" parameter in HtmlTargetElement would be a great idea. It's already posible with the attributes"},{"Id":"6681612637","Type":"PullRequestEvent","CreatedAt":"2017-10-06T05:27:30","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1713","RelatedDescription":"Opened pull request \"Add smart indentation for brace completion.\" (#1713) at aspnet/Razor","RelatedBody":"This is a middle-ground approach to implementing brace completion smart indent without refactoring the entire `VisualStudioRazorParser`. Decided to use the \"smart indent\" verbiage because that's what the visual studio editor uses.\r\n\r\nHere's what this PR accomplishes. Pipe | indicates cursor\r\n\r\n## Razor code block smart indentation\r\nA user types `@{|`, Roslyn autocompletes it to `@{ |}`. User then hits enter and **without** this PR it becomes:\r\n```\r\n@{\r\n    |}\r\n```\r\nThis PR fixes that and makes it:\r\n```\r\n@{\r\n    |\r\n}\r\n```\r\n\r\n## Razor directive block smart indentation\r\nA user types `@functions {|`, Roslyn autocompletes it to `@functions {|}`. User then hits enter and **without** this PR it becomes:\r\n```\r\n@functions {\r\n    |}\r\n```\r\nThis PR fixes that and makes it:\r\n```\r\n@functions {\r\n    |\r\n}\r\n```\r\n\r\nOne significant note is that the cursor position in the above examples don't have spaces before it. That's the editor auto-indent that will auto-add those spaces if a user then attempts to add content.\r\n\r\n---------------------------------------------------------------------------------\r\n\r\n- Added a standalone brace smart indenter that listens to `ITextBuffer` changed events to determine when a brace completion event needs to be handled.\r\n- Added extension methods to handle interaction with the `ITextBuffer` and document trackers and text views.\r\n- Added a `BraceSmartIndenterTest` to verify all parts of the smart indenter.\r\n- Moved private test infrastructure classes into their own files and expanded on their functionality to enable the brace completion smart indent scenarios.\r\n\r\n#1538"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"},{"Id":"6532477866","Type":"IssuesEvent","CreatedAt":"2017-08-30T23:19:06","Actor":"andyg8180","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Opened issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"},{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"},{"Id":"6598999142","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:09:01","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"},{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-09T19:56:09.6005426Z","RunDurationInMilliseconds":8489}