{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2019 Preview of Quality Rollup","PublishedOn":"2019-02-19T23:42:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the February 2019 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addresses an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019","PublishedOn":"2019-02-19T18:22:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 1.0 was released on June 27, 2016 and .NET Core 1.1 was released on November 16, 2016. As an LTS release, .NET Core 1.0 is supported for three years. .NET Core 1.1 fits into the same support...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-core-1-0-and-1-1-will-reach-end-of-life-on-june-27-2019/","RawContent":null},{"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","PublishedOn":"2019-02-15T14:03:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Final Update 2/19/19 @1:30 PM (PST): This advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T19:49:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Help us make the .NET Architecture guides better for you!","PublishedOn":"2019-02-13T15:47:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we worked with experts to create some incredible architecture guides &#38; reference samples for .NET developers. We focused on Microservices Architecture, Modernizing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/help-us-make-the-net-architecture-guides-better-for-you/","RawContent":null},{"Title":".NET Framework February 2019 Security and Quality Rollup","PublishedOn":"2019-02-13T14:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated: February 19, 2019 The advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core February 2019 Updates – 1.0.14, 1.1.11, 2.1.8 and 2.2.2","PublishedOn":"2019-02-12T18:30:20+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core February 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes. .NET Core...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/12/net-core-february-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.10 – Machine Learning for .NET","PublishedOn":"2019-02-08T07:07:18+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/07/announcing-ml-net-0-10-machine-learning-for-net/","RawContent":null},{"Title":"Submit to the Applied F# Challenge!","PublishedOn":"2019-02-05T16:17:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Lena Hall, a Senior Cloud Developer Advocate at Microsoft. F# Software Foundation has recently announced their new initiative — Applied F# Challenge! We encourage you to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/05/submit-to-the-applied-f-challenge/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 2","PublishedOn":"2019-01-29T17:57:06+00:00","CommentsCount":52,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 2. It includes new features in .NET Core 3.0 and C# 8, in addition to the large number of new features in Preview 1. ASP.NET Core 3.0 Preview 2  is...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/29/announcing-net-core-3-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"},{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10212614045","Type":"IssuesEvent","CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Opened issue \"Consolidating .NET GitHub repos\" (#119) at dotnet/announcements","RelatedBody":"Over the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n## To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10297008607","Type":"PullRequestEvent","CreatedAt":"2019-08-27T20:21:45","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26405","RelatedDescription":"Merged pull request \"Don't validate empty TransitionTimes on deserialization.\" (#26405) at dotnet/coreclr","RelatedBody":"On Unix, TransitionTimes are not used, so they are left empty. When deserializing an empty TransitionTime, it is throwing an exception because those are not normally valid. Fix deserialization to not validate empty TransitionTimes.\r\n\r\nFix https://github.com/dotnet/corefx/issues/40578\r\n\r\nNote: tests are added in https://github.com/dotnet/corefx/pull/40637"},{"Id":"10297006520","Type":"PullRequestEvent","CreatedAt":"2019-08-27T20:21:11","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26407","RelatedDescription":"Merged pull request \"Moved misplaced assert in StompWriteBarrier for safety.\" (#26407) at dotnet/coreclr","RelatedBody":"The args parameter was being accessed prior to asserting it was indeed not a nullptr. The assert was moved to the beginning to avoid a potential problem should args be null under any circumstances."},{"Id":"10297005712","Type":"PullRequestEvent","CreatedAt":"2019-08-27T20:21:00","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26409","RelatedDescription":"Merged pull request \"Remove ComputeSuppressUnmanagedCodeAccessAttr() and usage\" (#26409) at dotnet/coreclr","RelatedBody":"/cc @jkotas @jkoritzinsky "},{"Id":"10296403715","Type":"PullRequestEvent","CreatedAt":"2019-08-27T17:42:41","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26409","RelatedDescription":"Opened pull request \"Remove ComputeSuppressUnmanagedCodeAccessAttr() and usage\" (#26409) at dotnet/coreclr","RelatedBody":"/cc @jkotas @jkoritzinsky "},{"Id":"10296403672","Type":"IssuesEvent","CreatedAt":"2019-08-27T17:42:41","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26408","RelatedDescription":"Opened issue \"Use hardware intrinsics to speed up JIT\" (#26408) at dotnet/coreclr","RelatedBody":"Consider using vector and other hardware intrinsics to speed up the JIT, especially the bitset implementation, and operations that count bits (use \"popcnt\" instruction on xarch).\r\n"},{"Id":"10296393407","Type":"PullRequestEvent","CreatedAt":"2019-08-27T17:39:44","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26402","RelatedDescription":"Merged pull request \"Change test stage to only depend on the build stage\" (#26402) at dotnet/coreclr","RelatedBody":"Change the test stage to only depend on the build stage instead of on the internal servicing publishing (the last stage in the post-build.yml template). This enables our builds to run in parallel of deployment instead of either test or deployment being blocked on the other.\r\n\r\nOfficial build from this branch with test signing: https://dev.azure.com/dnceng/internal/_build/results?buildId=327583&view=results\r\n\r\nFixes #26401"},{"Id":"10296393396","Type":"IssuesEvent","CreatedAt":"2019-08-27T17:39:43","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26401","RelatedDescription":"Closed issue \"Internal build does not run tests when signing with test signing\" (#26401) at dotnet/coreclr","RelatedBody":"With the change to make tests run in a separate stage in #26334, tests now require package validation to succeed since they depend on the deployment to the internal servicing feed. Since signing validation fails for test signing, doing a test-signed build causes tests to not be run.\r\n\r\nSee https://dev.azure.com/dnceng/internal/_build/results?buildId=327455&view=results for an example.\r\n\r\ncc: @dotnet/coreclr-infra "},{"Id":"10296253334","Type":"PullRequestEvent","CreatedAt":"2019-08-27T17:01:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26299","RelatedDescription":"Merged pull request \"Unify Unix arm compiler optimization options\" (#26299) at dotnet/coreclr","RelatedBody":"Long time ago, we were using clang 3.8 for building for Unix arm. There\r\nwas a codegen bug that forced us to set optimization for release build\r\nto -O1 instead of -O3.\r\nNow the minimum clang version we use for arm is 5.0 and I've verified\r\nthat binaries compiled with -O3 pass all the Coreclr pri 1 tests and so\r\nthe issue is gone.\r\nSo this change unifies the optimization levels for all architectures."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10297434870","Type":"PullRequestEvent","CreatedAt":"2019-08-28T05:20:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12406","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12406) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.12\r\n- **Date Produced**: 8/28/2019 4:15 AM\r\n- **Commit**: 69d9499a05b402451f9588ecd002bd6feb4d2440\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.12\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10297132698","Type":"PullRequestEvent","CreatedAt":"2019-08-28T03:54:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12405","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12405) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190827.14\r\n- **Date Produced**: 8/28/2019 3:19 AM\r\n- **Commit**: 649bcc8f616a856d8db3627d74f2d1edfb4526d5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-rc1.19427.14\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"},{"Id":"10297000572","Type":"PullRequestEvent","CreatedAt":"2019-08-28T03:19:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12405","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12405) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190827.14\r\n- **Date Produced**: 8/28/2019 3:19 AM\r\n- **Commit**: 649bcc8f616a856d8db3627d74f2d1edfb4526d5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-rc1.19427.14\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"},{"Id":"10296560119","Type":"PullRequestEvent","CreatedAt":"2019-08-28T01:25:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12404","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12404) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.10\r\n- **Date Produced**: 8/27/2019 11:57 PM\r\n- **Commit**: 69d9499a05b402451f9588ecd002bd6feb4d2440\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.10\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10296430681","Type":"PullRequestEvent","CreatedAt":"2019-08-28T00:50:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12404","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12404) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.10\r\n- **Date Produced**: 8/27/2019 11:57 PM\r\n- **Commit**: 69d9499a05b402451f9588ecd002bd6feb4d2440\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.10\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10296306331","Type":"PullRequestEvent","CreatedAt":"2019-08-28T00:15:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12403","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12403) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.09\r\n- **Date Produced**: 8/27/2019 10:41 PM\r\n- **Commit**: d90543c070331ee577067ee7aedf709d80588a66\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-rc1-19427-09\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10291514550","Type":"PullRequestEvent","CreatedAt":"2019-08-27T12:40:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1477","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1477) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190826.13\r\n- **Date Produced**: 8/27/2019 7:30 AM\r\n- **Commit**: 7055b496a30dfe0f66a2f555cad31502473d144b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19426.13\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19426.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19426.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10291437653","Type":"PullRequestEvent","CreatedAt":"2019-08-27T12:30:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1477","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1477) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190826.13\r\n- **Date Produced**: 8/27/2019 7:30 AM\r\n- **Commit**: 7055b496a30dfe0f66a2f555cad31502473d144b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19426.13\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19426.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19426.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10291305164","Type":"PullRequestEvent","CreatedAt":"2019-08-27T12:12:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1476","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1476) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10291234419","Type":"PullRequestEvent","CreatedAt":"2019-08-27T12:01:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1476","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1476) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10288285032","Type":"IssuesEvent","CreatedAt":"2019-08-27T11:53:42","Actor":"zhouguoqing","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1475","RelatedDescription":"Opened issue \".Net framework 4.7.1 Bug feedback\" (#1475) at dotnet/standard","RelatedBody":"Recently, Our winform process crashed some times.\r\nWe used .Net framework 4.5.1 , runtime CLR info:\r\n0:068> lmvm clr\r\nstart             end                 module name\r\n00007fff`c0b90000 00007fff`c1576000   clr        (private pdb symbols)  c:\\temp\\mylocalsymbols\\clr.pdb\\E18D6461EB4F49A6B418E9AF91007A212\\clr.pdb\r\n    Loaded symbol image file: clr.dll\r\n    Image path: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\clr.dll\r\n    Image name: clr.dll\r\n    Timestamp:        Fri Jun 10 09:16:55 2016 (575A1507)\r\n    CheckSum:         009E00C2\r\n    ImageSize:        009E6000\r\n    File version:     4.6.1586.0\r\n    Product version:  4.0.30319.0\r\n    File flags:       8 (Mask 3F) Private\r\n    File OS:          4 Unknown Win32\r\n    File type:        2.0 Dll\r\n    File date:        00000000.00000000\r\n    Translations:     0409.04b0\r\n    CompanyName:      Microsoft Corporation\r\n    ProductName:      Microsoft® .NET Framework\r\n    InternalName:     clr.dll\r\n    OriginalFilename: clr.dll\r\n    ProductVersion:   4.6.1586.0\r\n    FileVersion:      4.6.1586.0 built by: NETFXREL2\r\n    PrivateBuild:     DDBLD201B\r\n    FileDescription:  Microsoft .NET Runtime Common Language Runtime - WorkStation\r\n    LegalCopyright:   © Microsoft Corporation.  All rights reserved.\r\n    Comments:         Flavor=Retail\r\n\r\n We used windbg anaylze crash dump file:\r\nFAULTING_IP: \r\nclr!SVR::gc_heap::background_mark_simple1+871\r\n00007fff`c0c717d4 41f70200000080  test    dword ptr [r10],80000000h\r\n\r\nEXCEPTION_RECORD:  ffffffffffffffff -- (.exr 0xffffffffffffffff)\r\nExceptionAddress: 00007fffc0c717d4 (clr!SVR::gc_heap::background_mark_simple1+0x0000000000000871)\r\n   ExceptionCode: c0000005 (Access violation)\r\n  ExceptionFlags: 00000001\r\nNumberParameters: 2\r\n   Parameter[0]: 0000000000000000\r\n   Parameter[1]: 0000000000000000\r\nAttempt to read from address 0000000000000000\r\n\r\nDEFAULT_BUCKET_ID:  NULL_POINTER_READ\r\n\r\nPROCESS_NAME:  TeldHost.exe\r\n\r\nERROR_CODE: (NTSTATUS) 0xc0000005 - 0x%p\r\n\r\nEXCEPTION_CODE: (NTSTATUS) 0xc0000005 - 0x%p\r\n\r\nEXCEPTION_PARAMETER1:  0000000000000000\r\n\r\nEXCEPTION_PARAMETER2:  0000000000000000\r\n\r\nREAD_ADDRESS:  0000000000000000 \r\n\r\nFOLLOWUP_IP: \r\nclr!SVR::gc_heap::background_mark_simple1+871\r\n00007fff`c0c717d4 41f70200000080  test    dword ptr [r10],80000000h\r\n\r\nNTGLOBALFLAG:  0\r\n\r\nAPPLICATION_VERIFIER_FLAGS:  0\r\n\r\nFAULTING_THREAD:  0000000000002730\r\n\r\nPRIMARY_PROBLEM_CLASS:  NULL_POINTER_READ\r\n\r\nBUGCHECK_STR:  APPLICATION_FAULT_NULL_POINTER_READ\r\n\r\nLAST_CONTROL_TRANSFER:  from 00007fffc0c709da to 00007fffc0c717d4\r\n\r\nSTACK_TEXT:  \r\n000000e9`7527f3f0 00007fff`c0c709da : 00000000`00000040 000002e5`19ab92d0 00000000`00000002 000002e8`1ec8fea8 : clr!SVR::gc_heap::background_mark_simple1+0x871\r\n000000e9`7527f460 00007fff`c0c713fb : 000002e9`1b511960 00000000`00000000 00000000`00000000 00007fff`c0c713fb : clr!SVR::gc_heap::background_mark_simple+0x91\r\n000000e9`7527f490 00007fff`c0d1b058 : 000002e5`19b019f8 000000e9`7527fa40 00007fff`c0d1b020 00007fff`c0c71310 : clr!SVR::gc_heap::background_promote+0x102\r\n000000e9`7527f4e0 00007fff`c0d1afa7 : 000000e9`7527fa40 000002e5`19b019f8 000000e9`7527fa40 00007fff`c0d1b020 : clr!PinObject+0x38\r\n000000e9`7527f520 00007fff`c0d29584 : 000000e9`7527f908 000002e5`19b00000 00000000`00000004 00000000`00000001 : clr!ScanConsecutiveHandlesWithoutUserData+0x6b\r\n000000e9`7527f550 00007fff`c0d2997c : 000000e9`7527f78c 00007fff`c0d29540 000000e9`7527f7d4 000000e9`7527f948 : clr!BlockScanBlocksWithoutUserData+0x44\r\n000000e9`7527f580 00007fff`c0d29bbd : 00000000`00000000 00007fff`c0d29930 000000e9`7527f750 000000e9`7527f780 : clr!ProcessScanQNode+0x46\r\n000000e9`7527f5b0 00007fff`c0d29b2d : 000000e9`7527f8f8 000002e5`19b00000 000000e9`7527f908 000000e9`7527f750 : clr!ProcessScanQueue+0x4e\r\n000000e9`7527f5e0 00007fff`c0d29abe : 000000e9`7527f750 000000e9`7527f8f8 00000000`00000026 00000000`00000028 : clr!xxxTableScanQueuedBlocksAsync+0x5d\r\n000000e9`7527f610 00007fff`c0d167e7 : 00007fff`c0d29a60 00000000`00000002 000002e5`19b00000 000000e9`7527f938 : clr!xxxAsyncSegmentIterator+0x2d\r\n000000e9`7527f640 00007fff`c0d29a36 : 000002e5`19a149d0 00007fff`c0d299a0 000002e5`19a149d0 00000000`00000006 : clr!TableScanHandles+0x97\r\n000000e9`7527f710 00007fff`c0d1699c : 00007fff`00000000 00007fff`c0b95073 000002e9`69d12d60 00007fff`c0d29540 : clr!xxxTableScanHandlesAsync+0x9b\r\n000000e9`7527f8b0 00007fff`c0d19136 : 00007fff`c14d0d30 00000000`00000000 00000000`0000000a 00007fff`c0c71310 : clr!HndScanHandlesForGC+0x118\r\n000000e9`7527f950 00007fff`c0d16d05 : 000000e9`7527fa40 000000e9`7527fa70 00000007`00000003 000002e9`69d12d60 : clr!Ref_TracePinningRoots+0xfe\r\n000000e9`7527f9d0 00007fff`c0c7120e : 00000000`00000000 00007fff`c14db270 00007fff`c14db270 00000000`00000001 : clr!GCScan::GcScanHandles+0x45\r\n000000e9`7527fa10 00007fff`c0c70511 : 00000000`00000002 00000000`00000002 000002e5`19a8bcb0 00007fff`c0d157e1 : clr!SVR::gc_heap::background_mark_phase+0x3aa\r\n000000e9`7527faa0 00007fff`c0c70384 : 000002e9`69d12d60 000002e9`69d12d60 00000000`00000000 00000000`00000004 : clr!SVR::gc_heap::gc1+0xffffffff`fff381e1\r\n000000e9`7527faf0 00007fff`c0ba02cf : 000002e9`69d12d60 000002e5`19a8bcb0 000000e9`7527fee0 00000000`00000000 : clr!SVR::gc_heap::bgc_thread_function+0x132\r\n000000e9`7527fb40 00007fff`ce088364 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : clr!Thread::intermediateThreadProc+0x86\r\n000000e9`7527ff00 00007fff`cff770d1 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : kernel32!BaseThreadInitThunk+0x14\r\n000000e9`7527ff30 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x21\r\n\r\n\r\nSYMBOL_STACK_INDEX:  0\r\n\r\nSYMBOL_NAME:  clr!SVR::gc_heap::background_mark_simple1+871\r\n\r\nFOLLOWUP_NAME:  MachineOwner\r\n\r\nMODULE_NAME: clr\r\n\r\nIMAGE_NAME:  clr.dll\r\n\r\nDEBUG_FLR_IMAGE_TIMESTAMP:  575a1507\r\n\r\nSTACK_COMMAND:  ~68s; .ecxr ; kb\r\n\r\nFAILURE_BUCKET_ID:  NULL_POINTER_READ_c0000005_clr.dll!SVR::gc_heap::background_mark_simple1\r\n\r\nBUCKET_ID:  X64_APPLICATION_FAULT_NULL_POINTER_READ_clr!SVR::gc_heap::background_mark_simple1+871\r\n\r\nWATSON_STAGEONE_URL:  http://watson.microsoft.com/StageOne/TeldHost_exe/1_0_0_0/5ccea4e6/clr_dll/4_6_1586_0/575a1507/c0000005/000e17d4.htm?Retriage=1\r\n\r\nFollowup: MachineOwner\r\n---------\r\n \r\nPlease help.\r\n\r\n"},{"Id":"10293908076","Type":"PullRequestEvent","CreatedAt":"2019-08-27T10:30:06","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1472","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1472) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n\r\n\r\n"},{"Id":"10284911339","Type":"IssuesEvent","CreatedAt":"2019-08-26T19:04:14","Actor":"roji","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1474","RelatedDescription":"Opened issue \"Add new socket TCP keepalive options\" (#1474) at dotnet/standard","RelatedBody":"https://github.com/dotnet/corefx/issues/25040 added the three portable TCP keepalive options to .NET Core 3.0, but they are missing from .NET Standard."},{"Id":"10282969023","Type":"PullRequestEvent","CreatedAt":"2019-08-26T12:37:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1473","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1473) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190825.4\r\n- **Date Produced**: 8/26/2019 4:41 AM\r\n- **Commit**: ba50ba15d0747d5be1e8bd38ea03a5ba892314bd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19425.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19425.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19425.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10297417215","Type":"PullRequestEvent","CreatedAt":"2019-08-28T05:15:36","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/40640","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/coreclr\" (#40640) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190827.10\r\n- **Date Produced**: 8/28/2019 2:33 AM\r\n- **Commit**: f161f03b4703bf90240e62f9a8ed8293b50fc376\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-rc1.19427.10\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19427.10\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19427.10\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n"},{"Id":"10297160449","Type":"PullRequestEvent","CreatedAt":"2019-08-27T21:02:36","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/40639","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#40639) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @eerhardt"},{"Id":"10297051208","Type":"PullRequestEvent","CreatedAt":"2019-08-27T20:32:51","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/40639","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#40639) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10297008578","Type":"IssuesEvent","CreatedAt":"2019-08-27T20:21:44","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/40578","RelatedDescription":"Closed issue \"Deserializing TimeZoneInfo on Linux throws `The Month parameter must be in the range 1 through 12`\" (#40578) at dotnet/corefx","RelatedBody":"# Issue Title\r\n\r\nDeserializing TimeZoneInfo on Linux using `BinaryFormatter` throws `The Month parameter must be in the range 1 through 12`\r\n\r\n# General\r\n\r\n.net core 2.2, Ubuntu 18 LTS. Please note the same code works fine on Windows. This appears to be a linux specific issue.\r\n\r\nI am migrating a library from .net framework 4.7 to .net core 2.2 and found an issue with [deep object cloning](https://stackoverflow.com/a/78612/706456) that I narrowed down to a short reproducible code snippet below.\r\n\r\nTry this yourself:\r\n\r\n- [.net framework 4.7.2](https://dotnetfiddle.net/qbDkjN) (Pass)\r\n- [.net core 2.2 on linux](https://dotnetfiddle.net/PR5OAe) (Fail)\r\n\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Runtime.Serialization.Formatters.Binary;\r\n\r\nnamespace Test\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            // any zone here, don't care what it is\r\n            var zone = TimeZoneInfo.GetSystemTimeZones()[0];\t\t\t\r\n            var formatter = new BinaryFormatter();\r\n           \r\n            using (MemoryStream stream = new MemoryStream())\r\n            {\r\n                formatter.Serialize(stream, zone);\r\n                stream.Seek(0, SeekOrigin.Begin);\r\n                var result = formatter.Deserialize(stream); // On Linux, exception is on this line <<<<<\r\n                Console.WriteLine(\"all ok\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOn Windows platforms using .net core 2.2 this works fine, but I get an exception on Linux platforms:\r\n\r\n```\r\nUnhandled Exception: System.Runtime.Serialization.SerializationException: An error occurred while deserializing the object.  The serialized data is corrupt. ---> System.ArgumentOutOfRangeException: The Month parameter must be in the range 1 through 12.\r\nParameter name: month\r\n   at System.TimeZoneInfo.TransitionTime.ValidateTransitionTime(DateTime timeOfDay, Int32 month, Int32 week, Int32 day, DayOfWeek dayOfWeek)\r\n   at System.TimeZoneInfo.TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object sender)\r\n   --- End of inner exception stack trace ---\r\n   at System.TimeZoneInfo.TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object sender)\r\n   at System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent()\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser, Boolean fCheck)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream, Boolean check)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream)\r\n   at Test.Program.Main(String[] args)\r\n```\r\n\r\nAsked on StackOverflow https://stackoverflow.com/q/57655469/706456\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10296681097","Type":"IssuesEvent","CreatedAt":"2019-08-28T11:57:11","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38330","RelatedDescription":"Opened issue \"ServiceHub.RoslynCodeAnalysisService32.exe is OOMing multiple times a day\" (#38330) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.3.0 Preview 3.0 [29221.207.master]\r\n\r\nThis is a regresssion, either because we've opt'd into more analyzers when we moved over to .editorconfig enforcement of analyzer levels, or because we're running on newer builds of VS.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `git clone http://github.com/dotnet/project-system`\r\n2. `cd project-system`\r\n3. `git checkout 369551a45088071ec37673d11cfca67658c5ba25`\r\n4. `ProjectSystem.sln`\r\n\r\nThis occurs 3 or 4 times a day, and I've also experienced it in other codebases. I had a look at watson's and every time this crashes its getting into a unique bucket due to the random nature of what frame the OOM is being thrown.\r\n\r\n-- Dump being uploaded --"},{"Id":"10296680730","Type":"IssuesEvent","CreatedAt":"2019-08-27T21:57:06","Actor":"WChrisK","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38329","RelatedDescription":"Opened issue \"MaybeNullWhenAttribute ignored on TryGetValue, CS8600 nullable reference warning emitted\" (#38329) at dotnet/roslyn","RelatedBody":"**Version Used**:  VS2019 16.3.0 Preview 2.0, with .NET Core 3.0.100-preview8-013656\r\n\r\n**Steps to Reproduce**:\r\n\r\n1) Make a new project and use`<Nullable>enable</Nullable>` with a netcoreapp3.0 project.\r\n\r\n2) Set the following code\r\n\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\n\r\nnamespace NullTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Dictionary<int, Program> dictionary = new Dictionary<int, Program>();\r\n\r\n            if (dictionary.TryGetValue(5, out Program val))\r\n                Console.WriteLine(val);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**: No warning.\r\n\r\n**Actual Behavior**: Warning appears: _CS8600: Converting null literal or possible null value to non-nullable type_.\r\n\r\nThis was (supposedly recently) attributed with\r\n\r\n```cs\r\npublic bool TryGetValue(TKey key, [MaybeNullWhen(false)] out TValue value);\r\n```\r\n\r\nbut the attribute is not be respected in the example I posted. Or am I using some outdated version and need to update? I assume I'm on the bleeding edge releases but I can easily be wrong. I also use `<LangVersion>preview</LangVersion>` for what its worth."},{"Id":"10296390291","Type":"IssuesEvent","CreatedAt":"2019-08-27T20:38:51","Actor":"stephentoub","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38327","RelatedDescription":"Opened issue \"Duplicate attribute error for [NotNull] used in partial methods\" (#38327) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\nhttps://sharplab.io/#v2:EYLgtghgzgLgpgJwD4AEBMBGAsAKBQBgAIUMA6AEQEsIBzAOwHtZKBjKUgYQYBM4BBOhAA2ATyiUoAbly4UAZkIAHCAhjUhxNIQ64A3rkKHiGAGxKVa4cQAshAGIMGACgRwAZsfwB+QlACU0jhGxmbKquo2hABCKi7unj7+gcEkoRYRKLYAWo5OANoAcgwwBQCuQkIAuoSuHiTevgG4AL6yCmGWGujaegZGqebhVpn2ubUJjYQAvAB8hDAAFggMAO6EdHBrRTAAkmCKQnBgcHTw3ACiAB4scIpqDHROTUH9poOdkTEI+dtlFdXjeqJPzTOaLZZrDZbYp7A5HE5nK43O6UB5PZKvNJDLrZXKFYp/Ko1eJAyazeZLVbrTaEbaww7HU5wC7XW73R7PVo4XCCY5QZQ3YwUaj0JhqNicHj8QSicRQXovQx5PgwGAISjAUrwACqUFocCcKrVGq1cAAKioaHAYOw7JQ4EJuIQkIQjerNfALQgrTbSAAFFQQY7wBDO12q92mr0+9h+5aKRAwERht0mz2W63sABK1tKCDoADVhKU4AAaQg7OgLRCUM7TQhuYRQOB+Sp9QzyXxwYTMzS0gnlISpj1wQggcPGkeEXSELnNIA===\r\n```C#\r\nusing System;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nclass Program\r\n{\r\n    static void Main() { }\r\n}\r\n\r\npublic partial class C\r\n{\r\n    static partial void Foo(ref string? s);\r\n    static partial void Bar(ref string? s);\r\n    static partial void Zoo([NotNull] ref string? s);\r\n}\r\npublic partial class C\r\n{\r\n    static partial void Foo(ref string? s) => throw new NotImplementedException();\r\n    static partial void Bar([NotNull] ref string? s) => throw new NotImplementedException();\r\n    static partial void Zoo([NotNull] ref string? s) => throw new NotImplementedException();\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nCompiles.\r\n\r\n**Actual Behavior**:\r\nProduces a `CS0579\tDuplicate 'NotNull' attribute` error on the use of `[NotNull]` in the first C.Zoo partial. \r\n\r\ncc: @jcouv, @cston"},{"Id":"10296406069","Type":"PullRequestEvent","CreatedAt":"2019-08-27T17:43:19","Actor":"petrroll","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38328","RelatedDescription":"Opened pull request \"Show error every time CallHierarchyView doesn't a find suitable node.\" (#38328) at dotnet/roslyn","RelatedBody":"The simplest & quickest hot-fix for #38303\r\n\r\nShould be expended with allowing way more locations instead."},{"Id":"10296358656","Type":"PullRequestEvent","CreatedAt":"2019-08-27T17:30:09","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38235","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#38235) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10296333681","Type":"IssuesEvent","CreatedAt":"2019-08-27T17:23:18","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38326","RelatedDescription":"Opened issue \"Public API for `GetDocument(DocumentId)` that returns non-null Document\" (#38326) at dotnet/roslyn","RelatedBody":"We should add a public API to get `Document` from a `DocumentId` that returns a non-null `Document` or throw if not found.  This would help us avoid using null-forgiving operator (!) when enabling nullable ref.\r\n\r\ne.g.\r\n\r\n```cs\r\npublic Document GetRequiredDocument(DocumentId documentId);\r\n```\r\n\r\nWe will probably also need an analyzer/codefix to flag usage of `GetDocument(id)!` in code with nullable-ref already enabled."},{"Id":"10296327745","Type":"PullRequestEvent","CreatedAt":"2019-08-27T17:21:37","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37894","RelatedDescription":"Merged pull request \"Comparable helper to compare by components\" (#37894) at dotnet/roslyn","RelatedBody":"A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10295877929","Type":"PullRequestEvent","CreatedAt":"2019-08-28T00:32:55","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7742","RelatedDescription":"Opened pull request \"Fix method token resolution for unboxing thunks\" (#7742) at dotnet/corert","RelatedBody":"This change fixes the largest compilation failure bucket caused by\r\nJIT passing 0 as the \"pResolvedToken.token\" to the JIT interface.\r\nThe problem was caused by the fact that, when in release mode we\r\ndevirtualized a method on a value type, we emitted an unboxing thunk\r\nas part of the process. When JIT later called\r\ngetMethodDefFromMethod to get the token for the method, we returned\r\n0 because the method was not properly handling unboxing thunks.\r\n\r\nWhile I was there, I also fixed an imprecision in\r\nDevirtualizationManager I noticed while reviewing Michal's\r\npreparatory change for porting CPAOT code to the CoreCLR repo: in\r\nlarge version bubble mode, we should generally query \"VersionsWith\"\r\nrather than \"Contains\", otherwise we lose perf benefits of\r\ncross-module devirtualization within the large version bubble.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10297051776","Type":"PullRequestEvent","CreatedAt":"2019-08-27T20:32:58","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7743","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7743) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10293697550","Type":"PullRequestEvent","CreatedAt":"2019-08-27T19:00:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7739","RelatedDescription":"Opened pull request \"[WIP] Separate ReadyToRun targeting compiler\" (#7739) at dotnet/corert","RelatedBody":"Creates `crossgen2` that has the ready to run specific bits.\r\n\r\nSending it out to get some eyes on this.\r\n\r\nCI will not work because we need to redirect the ready to run legs to crossgen2. Hence the WIP tag.\r\n\r\nThe TODO-REFACTOR comments are for a subsequent pull request because they would touch a bunch of other places and I don't enjoy resolving merge conflicts in big commits."},{"Id":"10295536371","Type":"PullRequestEvent","CreatedAt":"2019-08-27T14:29:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7741","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7741) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10295492279","Type":"PullRequestEvent","CreatedAt":"2019-08-27T14:21:59","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7741","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7741) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10295292761","Type":"IssuesEvent","CreatedAt":"2019-08-27T13:50:59","Actor":"cshung","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7740","RelatedDescription":"Opened issue \"[CPAOT] Make sure constructing a delegate from a function pointer to an external method works.\" (#7740) at dotnet/corert","RelatedBody":"In #7724, I have made a change to ensure we have a `PrecodeMethodImport` for local methods, we should probably do the same for external methods to make sure the same scenario works there."},{"Id":"10295233187","Type":"PullRequestEvent","CreatedAt":"2019-08-27T13:41:57","Actor":"cshung","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7724","RelatedDescription":"Merged pull request \"Emit Fixup for local method import\" (#7724) at dotnet/corert","RelatedBody":""},{"Id":"10289384788","Type":"PullRequestEvent","CreatedAt":"2019-08-27T09:44:51","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7645","RelatedDescription":"Merged pull request \"CoreCLR Pri#1 fixes for the IsManagedSequential method\" (#7645) at dotnet/corert","RelatedBody":"This change fixes all remaining differences between CPAOT\r\nand Crossgen for the CoreCLR Pri#1 tests w.r.t. my recently\r\nimplemented IsManagedSequential instrumentation.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10288646202","Type":"PullRequestEvent","CreatedAt":"2019-08-26T22:31:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7738","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7738) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh"},{"Id":"10287546581","Type":"IssuesEvent","CreatedAt":"2019-08-26T20:41:07","Actor":"developervariety","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7699","RelatedDescription":"Closed issue \"Linux: No input file\" (#7699) at dotnet/corert","RelatedBody":"![ubuntu_iMCjVX1XZj](https://user-images.githubusercontent.com/47051828/63106951-f5e20f80-bf51-11e9-97aa-0f1d2e677b21.png)\r\n\r\nI compiled with WSL yesterday on Ubuntu 18.04, and when it finished compiling I installed the package. I got nothing really from it, just aborted a second later."},{"Id":"10287662184","Type":"PullRequestEvent","CreatedAt":"2019-08-26T18:13:13","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7738","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7738) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10296293612","Type":"IssuesEvent","CreatedAt":"2019-08-27T17:12:22","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3582","RelatedDescription":"Opened issue \"RID-specific self-contained .NET Core 3 app with dependency on Microsoft.NETCore.App 2.0.0 fails to run\" (#3582) at dotnet/sdk","RelatedBody":"# Repro\r\n\r\nBuild and run the following project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n    <SelfContained>false</SelfContained>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NETCore.App\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n# Expected\r\n\r\nProject runs successfully\r\n\r\n# Actual\r\n\r\nProject fails to run with error messages such as the following:\r\n\r\n- > A fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App\\3.0.0-preview9.19416.11'.\r\n- > The specified framework 'Microsoft.NETCore.App', version '3.0.0-preview9-19409-16' was not found.\r\n\r\nThe output folder also includes the following files, which come from the Microsoft.NETCore.App 2.0.0 package closure:\r\n\r\n- apphost.exe\r\n- hostfxr.dll\r\n- hostpolicy.dll\r\n- System.Private.CoreLib.dll\r\n\r\n# Details\r\n\r\nNuGet/Home#7344 would fix this.  Alternatively, we could try to use conflict resolution to exclude these extra assets.  That would probably require updating the platform manifest in the targeting pack."},{"Id":"10294653207","Type":"IssuesEvent","CreatedAt":"2019-08-27T12:15:59","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3471","RelatedDescription":"Closed issue \"Cannot run pack when GeneratePackageOnBuild is true\" (#3471) at dotnet/sdk","RelatedBody":"Create a console app. Set GeneratePackageOnBuild=true. Run `dotnet pack`. This bug as there since 2.0\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19375-03+c19c7499a for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n  Restore completed in 130.75 ms for C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj.\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\bin\\Debug\\netcoreapp2.1\\HelloWorld.deps.json\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp2.1\\HelloWorld.dll\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp2.1\\HelloWorld.pdb\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\bin\\Debug\\netcoreapp2.1\\HelloWorld.runtimeconfig.json\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\n```"},{"Id":"10294650953","Type":"IssuesEvent","CreatedAt":"2019-08-27T12:15:39","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3471","RelatedDescription":"Reopened issue \"Cannot run pack when GeneratePackageOnBuild is true\" (#3471) at dotnet/sdk","RelatedBody":"Create a console app. Set GeneratePackageOnBuild=true. Run `dotnet pack`. This bug as there since 2.0\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19375-03+c19c7499a for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n  Restore completed in 130.75 ms for C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj.\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\bin\\Debug\\netcoreapp2.1\\HelloWorld.deps.json\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp2.1\\HelloWorld.dll\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp2.1\\HelloWorld.pdb\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\nC:\\work\\sdk\\artifacts\\bin\\Debug\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(154,5): error MSB3030: Could not copy the file \"C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\bin\\Debug\\netcoreapp2.1\\HelloWorld.runtimeconfig.json\" because it was not found. [C:\\work\\sdk\\artifacts\\tmp\\Debug\\It_packs_succ---E7D10EDE\\HelloWorld.csproj]\r\n```"},{"Id":"10294641129","Type":"IssuesEvent","CreatedAt":"2019-08-27T12:14:13","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3581","RelatedDescription":"Opened issue \"symbols packages being generated empty\" (#3581) at dotnet/sdk","RelatedBody":"We have turned off symbols package generation for now on this repo.\r\n\r\nThey were generating empty nupkgs and conflicting with the actual nupkgs when the sign tool was repackaging signing assemblies.\r\n\r\nThe fact that symbols are empty here are causing symbol checks to fail on VS insertions."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"486069707","IsPullRequest":true,"CreatedAt":"2019-08-28T03:21:43","Actor":"eerhardt","Number":"26405","RawContent":null,"Title":"Don't validate empty TransitionTimes on deserialization.","State":"closed","Body":"On Unix, TransitionTimes are not used, so they are left empty. When deserializing an empty TransitionTime, it is throwing an exception because those are not normally valid. Fix deserialization to not validate empty TransitionTimes.\r\n\r\nFix https://github.com/dotnet/corefx/issues/40578\r\n\r\nNote: tests are added in https://github.com/dotnet/corefx/pull/40637","Url":"https://github.com/dotnet/coreclr/pull/26405","RelatedDescription":"Closed or merged PR \"Don't validate empty TransitionTimes on deserialization.\" (#26405)"},{"Id":"486077108","IsPullRequest":true,"CreatedAt":"2019-08-28T03:21:11","Actor":"ivdiazsa","Number":"26407","RawContent":null,"Title":"Moved misplaced assert in StompWriteBarrier for safety.","State":"closed","Body":"The args parameter was being accessed prior to asserting it was indeed not a nullptr. The assert was moved to the beginning to avoid a potential problem should args be null under any circumstances.","Url":"https://github.com/dotnet/coreclr/pull/26407","RelatedDescription":"Closed or merged PR \"Moved misplaced assert in StompWriteBarrier for safety.\" (#26407)"},{"Id":"486102558","IsPullRequest":true,"CreatedAt":"2019-08-28T03:20:58","Actor":"AaronRobinsonMSFT","Number":"26409","RawContent":null,"Title":"Remove ComputeSuppressUnmanagedCodeAccessAttr() and usage","State":"closed","Body":"/cc @jkotas @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/pull/26409","RelatedDescription":"Closed or merged PR \"Remove ComputeSuppressUnmanagedCodeAccessAttr() and usage\" (#26409)"},{"Id":"486102553","IsPullRequest":false,"CreatedAt":"2019-08-28T00:42:40","Actor":"BruceForstall","Number":"26408","RawContent":null,"Title":"Use hardware intrinsics to speed up JIT","State":"open","Body":"Consider using vector and other hardware intrinsics to speed up the JIT, especially the bitset implementation, and operations that count bits (use \"popcnt\" instruction on xarch).\r\n","Url":"https://github.com/dotnet/coreclr/issues/26408","RelatedDescription":"Open issue \"Use hardware intrinsics to speed up JIT\" (#26408)"},{"Id":"486045845","IsPullRequest":true,"CreatedAt":"2019-08-28T00:39:43","Actor":"jkoritzinsky","Number":"26402","RawContent":null,"Title":"Change test stage to only depend on the build stage","State":"closed","Body":"Change the test stage to only depend on the build stage instead of on the internal servicing publishing (the last stage in the post-build.yml template). This enables our builds to run in parallel of deployment instead of either test or deployment being blocked on the other.\r\n\r\nOfficial build from this branch with test signing: https://dev.azure.com/dnceng/internal/_build/results?buildId=327583&view=results\r\n\r\nFixes #26401","Url":"https://github.com/dotnet/coreclr/pull/26402","RelatedDescription":"Closed or merged PR \"Change test stage to only depend on the build stage\" (#26402)"},{"Id":"486042915","IsPullRequest":false,"CreatedAt":"2019-08-28T00:39:43","Actor":"jkoritzinsky","Number":"26401","RawContent":null,"Title":"Internal build does not run tests when signing with test signing","State":"closed","Body":"With the change to make tests run in a separate stage in #26334, tests now require package validation to succeed since they depend on the deployment to the internal servicing feed. Since signing validation fails for test signing, doing a test-signed build causes tests to not be run.\r\n\r\nSee https://dev.azure.com/dnceng/internal/_build/results?buildId=327455&view=results for an example.\r\n\r\ncc: @dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/issues/26401","RelatedDescription":"Closed issue \"Internal build does not run tests when signing with test signing\" (#26401)"},{"Id":"486036105","IsPullRequest":false,"CreatedAt":"2019-08-27T23:17:38","Actor":"mikernet","Number":"26400","RawContent":null,"Title":"Culture aware string sorting consistency across systems","State":"closed","Body":"We are looking to add culture aware string indexes on a .NET Standard based database engine. This has to work consistently across all operating systems and .NET versions for obvious reasons - if a database file is copied to another computer running a different OS (Windows, Linux, iOS, etc), or the OS gets updated, or the app gets updated to a newer .NET runtime and the sort order changes then all the indexes will essentially be corrupted. Some sorting operations may be done on the remote server while locally cached entries might be sorted locally on the client and this needs to be consistent as well.\r\n\r\nCan the culture aware string sort order (identified by its locale, i.e. \"en-US\", \"fr-FR\", etc) ever change or can I rely on it being consistent everywhere? If it can change, is there a way for me to detect this other than saving the sort order of every single unicode character in the database and comparing it to the system sort order? Can the sort order of the Invariant culture ever change from system to system?\r\n\r\nThe database engine is .NET Standard 2.1+ so it won't be running on \"legacy\" .NET Framework, only newer .NET Core, Xamarin, Mono, etc...if that makes a difference.","Url":"https://github.com/dotnet/coreclr/issues/26400","RelatedDescription":"Closed issue \"Culture aware string sorting consistency across systems\" (#26400)"},{"Id":"486073816","IsPullRequest":true,"CreatedAt":"2019-08-27T22:56:52","Actor":"CarolEidt","Number":"26406","RawContent":null,"Title":"Cleanup unreachable struct code","State":"open","Body":"A `GT_INDEX_ADDR` never has struct type,\r\nand `GT_MKREFANY` doesn't survive beyond morph.","Url":"https://github.com/dotnet/coreclr/pull/26406","RelatedDescription":"Open PR \"Cleanup unreachable struct code\" (#26406)"},{"Id":"486008994","IsPullRequest":true,"CreatedAt":"2019-08-27T22:26:53","Actor":"fadimounir","Number":"26399","RawContent":null,"Title":"Replace Ubuntu 1404 platforms with 1604 (#26302)","State":"closed","Body":"Porting #26302 to the 3.0 branch\r\n\r\n#### Description\r\nChanging the Ubuntu version for arm32 testing to 16.04 instead of 14.04, so the 14.04 can be retired\r\n\r\n/cc @jashook  @dotnet/coreclr-infra @mmitche \r\n\r\n#### Customer Impact\r\nUpgraded Ubuntu OS version. The lab will be able to retire the 14.04 machines.\r\n\r\n#### Regression?\r\nN/A\r\n\r\n#### Risk\r\nMinimal.","Url":"https://github.com/dotnet/coreclr/pull/26399","RelatedDescription":"Closed or merged PR \"Replace Ubuntu 1404 platforms with 1604 (#26302)\" (#26399)"},{"Id":"486004442","IsPullRequest":true,"CreatedAt":"2019-08-27T22:22:22","Actor":"fadimounir","Number":"26397","RawContent":null,"Title":"Move testing jobs to a separate stage after the validation/publishing stage (#26334)","State":"closed","Body":"Porting #26334 to the 3.0 branch\r\n\r\n#### Description\r\nMoves testing stage after the publish/validate stage, so that any upstack job can quickly pickup the coreclr build as soon as the build/publish/validate stages are complete, without having to wait for testing to complete.\r\n\r\n/cc @jashook  @dotnet/coreclr-infra @mmitche \r\n\r\n#### Customer Impact\r\nEnables faster build consumption\r\n\r\n#### Regression?\r\nN/A\r\n\r\n#### Risk\r\nMinimal. This just changes the order of jobs that execute in the pipeline.","Url":"https://github.com/dotnet/coreclr/pull/26397","RelatedDescription":"Closed or merged PR \"Move testing jobs to a separate stage after the validation/publishing stage (#26334)\" (#26397)"},{"Id":"486059409","IsPullRequest":true,"CreatedAt":"2019-08-27T22:11:21","Actor":"trylek","Number":"26404","RawContent":null,"Title":"WIP: reuse OSX-built test artifacts for all *nix OS'es","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26404","RelatedDescription":"Open PR \"WIP: reuse OSX-built test artifacts for all *nix OS'es\" (#26404)"},{"Id":"485528433","IsPullRequest":true,"CreatedAt":"2019-08-27T21:51:37","Actor":"AaronRobinsonMSFT","Number":"26385","RawContent":null,"Title":"Set the embed generate source property","State":"closed","Body":"/cc @dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/pull/26385","RelatedDescription":"Closed or merged PR \"Set the embed generate source property\" (#26385)"},{"Id":"486051404","IsPullRequest":true,"CreatedAt":"2019-08-27T21:48:56","Actor":"brianrob","Number":"26403","RawContent":null,"Title":"Emit RVA Instead of File Offset by Default in Native Image PerfMap Files","State":"open","Body":"Newer versions of the Linux `perf` tool emit virtual addresses for all stack frames where prior to this change, they emitted file offsets for mapped code files, including DLLs.  Due to this change, native image perf maps need to include RVAs instead of file offsets.\r\n\r\nThis change also adds the image base address to the perfinfo-<pid>.map file so that we can convert from virtual address to RVA before performing the symbol lookup.\r\n\r\nSubsequent to this change, perfcollect will be updated to determine whether to ask for RVAs or file offsets based on the version of perf installed on the machine.","Url":"https://github.com/dotnet/coreclr/pull/26403","RelatedDescription":"Open PR \"Emit RVA Instead of File Offset by Default in Native Image PerfMap Files\" (#26403)"},{"Id":"485907799","IsPullRequest":true,"CreatedAt":"2019-08-27T21:18:18","Actor":"stephentoub","Number":"26389","RawContent":null,"Title":"Fix pragma warning restore in ByReference.cs","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/40588","Url":"https://github.com/dotnet/coreclr/pull/26389","RelatedDescription":"Closed or merged PR \"Fix pragma warning restore in ByReference.cs\" (#26389)"},{"Id":"486008666","IsPullRequest":true,"CreatedAt":"2019-08-27T20:07:00","Actor":"fadimounir","Number":"26398","RawContent":null,"Title":"Replace Ubuntu 1404 platforms with 1604 (#26302)","State":"closed","Body":"Porting #26302 to the 3.0 branch\r\n\r\n#### Description\r\nChanging the Ubuntu version for arm32 testing to 16.04 instead of 14.04, so the 14.04 can be retired\r\n\r\n/cc @jashook  @dotnet/coreclr-infra @mmitche \r\n\r\n#### Customer Impact\r\nUpgraded Ubuntu OS version. The lab will be able to retire the 14.04 machines.\r\n\r\n#### Regression?\r\nN/A\r\n\r\n#### Risk\r\nMinimal.","Url":"https://github.com/dotnet/coreclr/pull/26398","RelatedDescription":"Closed or merged PR \"Replace Ubuntu 1404 platforms with 1604 (#26302)\" (#26398)"},{"Id":"486003098","IsPullRequest":true,"CreatedAt":"2019-08-27T19:54:18","Actor":"dotnet-maestro-bot","Number":"26396","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @tarekgh\n* @dotnet-maestro[bot]\n* @stephentoub\n* @jkotas\n* @mmitche\n* @AaronRobinsonMSFT\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/26396","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#26396)"},{"Id":"485528392","IsPullRequest":true,"CreatedAt":"2019-08-27T19:51:13","Actor":"tarekgh","Number":"26384","RawContent":null,"Title":"[release/3.0] Fix Abbreviated Genitive Month Names Parsing","State":"closed","Body":"In 3.0 we have fixed the formatting to use the abbreviated genitive month names when having \"d\" format specifier followed by \"MMM\". This fix is good as original formatting specs required but we needed to support the parsing when we have such genitive names.","Url":"https://github.com/dotnet/coreclr/pull/26384","RelatedDescription":"Closed or merged PR \"[release/3.0] Fix Abbreviated Genitive Month Names Parsing\" (#26384)"},{"Id":"485986780","IsPullRequest":true,"CreatedAt":"2019-08-27T19:17:15","Actor":"janvorli","Number":"26395","RawContent":null,"Title":"Update JITEEVersionIdentifier","State":"open","Body":"When making a fix for GS cookie check on ARM some time ago, I have not\r\nrealized that it changes the JIT to EE interface and thus the\r\nJITEEVersionIdentifier needs to be updated.\r\nThis change fixes the problem.","Url":"https://github.com/dotnet/coreclr/pull/26395","RelatedDescription":"Open PR \"Update JITEEVersionIdentifier\" (#26395)"},{"Id":"485974518","IsPullRequest":true,"CreatedAt":"2019-08-27T18:49:51","Actor":"hoyosjs","Number":"26394","RawContent":null,"Title":"Add generated resource source files as embedded sourcelink PDBs","State":"open","Body":"@dotnet/coreclr-infra \r\n\r\nWorks around #26371\r\n\r\n![image](https://user-images.githubusercontent.com/19413848/63798750-84924d00-c8bf-11e9-8776-4ee1e553b9d7.png)\r\nThis change embeds all untracked files into sourcelink PDBs, and works around some missed cases (Resx generated files).","Url":"https://github.com/dotnet/coreclr/pull/26394","RelatedDescription":"Open PR \"Add generated resource source files as embedded sourcelink PDBs\" (#26394)"},{"Id":"485773211","IsPullRequest":true,"CreatedAt":"2019-08-27T18:45:26","Actor":"dotnet-maestro[bot]","Number":"26387","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.15\r\n- **Date Produced**: 8/27/2019 7:01 AM\r\n- **Commit**: 33b5bc3460986bbddcc4e674ca58eb3704570c39\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.15\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26387","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#26387)"},{"Id":"485777350","IsPullRequest":true,"CreatedAt":"2019-08-27T18:38:44","Actor":"dotnet-maestro[bot]","Number":"26388","RawContent":null,"Title":"[release/3.0] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2b95475b-d147-4b39-6306-08d6bc51899c)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190827.1\r\n- **Date Produced**: 8/27/2019 11:06 AM\r\n- **Commit**: 48fd58c24cddbc6c0b0de1c00204aae1170f4864\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190827.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190827.1\r\n\r\n[marker]: <> (End:2b95475b-d147-4b39-6306-08d6bc51899c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26388","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dnceng/internal/dotnet-optimization\" (#26388)"},{"Id":"485950085","IsPullRequest":true,"CreatedAt":"2019-08-27T17:56:38","Actor":"kouvel","Number":"26393","RawContent":null,"Title":"Refactor call counting for tiering and some other things","State":"open","Body":"- Moved call counting to after jitting is done, when the tier of the code becomes clear. Passed info back about whether the method should be recorded for call counting through the `PrepareCodeConfig` to avoid some more expensive rechecks.\r\n- Moved checks for aggressive optimization and QuickJit to the point when JIT flags are determined\r\n- Specialized `PublishVersionalbeCodeIfNecessary` for methods versionable with and without a jump stamp\r\n- Added fast paths for cases operating on the default native code version to avoid some code versioning overhead during startup\r\n- Methods are not counted on first call, only recorded for counting later. First call to a method is determined by whether the thread generated or loaded code for the method. Threads that wait for jitting to complete don't count calls either. Once the method already has native code and goes through the prestub, its calls are counted.\r\n- Overall, time spent in DoPrestub decreased noticeably when tiering is enabled, almost the same as with tiering disabled typically. Small improvement to startup time, seems to decrease by a few milliseconds.\r\n- Fixed a bug where, when call counting for a method stops due to the tiering delay being activated, it was extending the delay as though it were the first call to the method\r\n  - This was noticeably increasing time taken to reach steady-state perf by keeping the delay active for longer than necessary. After the fix, steady-state perf is reached sooner without any noticeable overhead in-between.\r\n  - A fix creates a potential race between thread A recording a method to be counted later, thread B resetting the method's entry point for counting calls, then thread A setting the tier 0 code as the entry point, and the method would not be tiered up. For now I decided to stop call counting only when a flag that would extend the delay timer is set, with other planned work this code and issue would go away.\r\n- Miscellaneous small changes","Url":"https://github.com/dotnet/coreclr/pull/26393","RelatedDescription":"Open PR \"Refactor call counting for tiering and some other things\" (#26393)"},{"Id":"485926567","IsPullRequest":true,"CreatedAt":"2019-08-27T17:01:35","Actor":"mikedn","Number":"26392","RawContent":null,"Title":"[WIP] Stop using LIST nodes for CALL arg lists","State":"open","Body":"Similar to #20266 but for `GenTreeCall` nodes.\r\n\r\nThis saves 3.4% used memory and 3.2% instructions:\r\nMem diff: https://gist.github.com/mikedn/3d34aebb9fc3da218cf23f16ab821d01\r\nPIN data: https://1drv.ms/x/s!Av4baJYSo5pjgs4637g1JfAO3jOlIQ?e=FhGJ15\r\n\r\nContributes to #19876\r\n\r\nNo x64/x86/arm32(altjit)/arm64(altjit) FX diffs.","Url":"https://github.com/dotnet/coreclr/pull/26392","RelatedDescription":"Open PR \"[WIP] Stop using LIST nodes for CALL arg lists\" (#26392)"},{"Id":"485923288","IsPullRequest":true,"CreatedAt":"2019-08-27T16:56:26","Actor":"jashook","Number":"26391","RawContent":null,"Title":"Ups timeout for build-test-job as we have been seeing timeouts","State":"closed","Body":"/cc @dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/pull/26391","RelatedDescription":"Closed or merged PR \"Ups timeout for build-test-job as we have been seeing timeouts\" (#26391)"},{"Id":"485505967","IsPullRequest":true,"CreatedAt":"2019-08-27T16:51:34","Actor":"trylek","Number":"26382","RawContent":null,"Title":"Fix incorrect merge of test build / run split with staged build","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26382","RelatedDescription":"Closed or merged PR \"Fix incorrect merge of test build / run split with staged build\" (#26382)"},{"Id":"485914346","IsPullRequest":true,"CreatedAt":"2019-08-27T16:33:52","Actor":"adiaaida","Number":"26390","RawContent":null,"Title":"Disable signing and publishing on perf builds","State":"open","Body":"The perf runs are meant to track regressions in coreclr. They should not publish their bits, and they do not need to be signed.","Url":"https://github.com/dotnet/coreclr/pull/26390","RelatedDescription":"Open PR \"Disable signing and publishing on perf builds\" (#26390)"},{"Id":"485526333","IsPullRequest":true,"CreatedAt":"2019-08-27T11:48:54","Actor":"jkotas","Number":"26383","RawContent":null,"Title":"Delete unused access right checks from PAL","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26383","RelatedDescription":"Closed or merged PR \"Delete unused access right checks from PAL\" (#26383)"},{"Id":"485599543","IsPullRequest":false,"CreatedAt":"2019-08-27T05:57:25","Actor":"NMSAzulX","Number":"26386","RawContent":null,"Title":"How do I unload the code for MySqlConnection in ALC?","State":"open","Body":"```C#\r\n// test.dll\r\n\r\npublic void Test(){\r\n    MySqlConnection connection = new MySqlConnection(\"\");\r\n    connection.Open();   <----- If run this code, ALC will not be recycled by GC.\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26386","RelatedDescription":"Open issue \"How do I unload the code for MySqlConnection in ALC?\" (#26386)"},{"Id":"485504026","IsPullRequest":true,"CreatedAt":"2019-08-26T23:34:29","Actor":"jakobbotsch","Number":"26381","RawContent":null,"Title":"[WIP] Various IL stub changes","State":"open","Body":"Some various IL stub changes that I will need/am using for my prototype of portable tailcall helpers. I have extracted this out as I expect that PR to be relatively large. This is easiest to review commit by commit.\r\n\r\n* Allocate IL stub hash blobs only for shared stubs\r\n* Mark some args as const in `SigPointer::ConvertToInternalExactlyOne` and `SigPointer::ConvertToInternalSignature`\r\n* Add `ILCodeStream::EmitBNE_UN`, `ILCodeStream::EmitTAIL`\r\n* Add versions of `ILCodeStream::EmitLDFLD` and `ILCodeStream::EmitSTFLD` that take mscorlib fields\r\n* Add support for having IL stubs with multiple signatures because of multiple `calli` instructions\r\n* Add a token representing the IL stub being emitted\r\n\r\n**Please rebase instead of squashing when pulling this!**\r\n\r\ncc @jkoritzinsky @janvorli ","Url":"https://github.com/dotnet/coreclr/pull/26381","RelatedDescription":"Open PR \"[WIP] Various IL stub changes\" (#26381)"},{"Id":"485484417","IsPullRequest":true,"CreatedAt":"2019-08-26T22:28:31","Actor":"pi1024e","Number":"26380","RawContent":null,"Title":"Test [DO NOT MERGE]","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26380","RelatedDescription":"Open PR \"Test [DO NOT MERGE]\" (#26380)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"486165898","IsPullRequest":true,"CreatedAt":"2019-08-28T05:20:21","Actor":"dotnet-maestro[bot]","Number":"12406","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.12\r\n- **Date Produced**: 8/28/2019 4:15 AM\r\n- **Commit**: 69d9499a05b402451f9588ecd002bd6feb4d2440\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.12\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.12\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12406","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#12406)"},{"Id":"486138290","IsPullRequest":true,"CreatedAt":"2019-08-28T03:54:56","Actor":"dotnet-maestro[bot]","Number":"12405","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190827.14\r\n- **Date Produced**: 8/28/2019 3:19 AM\r\n- **Commit**: 649bcc8f616a856d8db3627d74f2d1edfb4526d5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-rc1.19427.14\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12405","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12405)"},{"Id":"486104283","IsPullRequest":true,"CreatedAt":"2019-08-28T01:25:51","Actor":"dotnet-maestro[bot]","Number":"12404","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.10\r\n- **Date Produced**: 8/27/2019 11:57 PM\r\n- **Commit**: 69d9499a05b402451f9588ecd002bd6feb4d2440\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.10\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12404","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12404)"},{"Id":"486086454","IsPullRequest":true,"CreatedAt":"2019-08-28T00:15:46","Actor":"dotnet-maestro[bot]","Number":"12403","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.09\r\n- **Date Produced**: 8/27/2019 10:41 PM\r\n- **Commit**: d90543c070331ee577067ee7aedf709d80588a66\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-rc1-19427-09\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-rc1-19427-09\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12403","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12403)"},{"Id":"486024562","IsPullRequest":false,"CreatedAt":"2019-08-27T22:38:17","Actor":"ForestEckhardt","Number":"12400","RawContent":null,"Title":"Dotnet driver does not respect DOTNET_ROOT ","State":"closed","Body":"## Steps to reproduce\r\n```\r\ndocker run -it mcr.microsoft.com/dotnet/core/sdk bash\r\nmv /usr/share/dotnet/dotnet /tmp/\r\nexport DOTNET_ROOT=/usr/share/dotnet/\r\n/tmp/dotnet --info\r\n```\r\n\r\n## Expected  behavior\r\nI expect the dotnet driver to respect the `DOTNET_ROOT` when trying to resolve the hostfxr and runtime libraries like an FDE does.\r\n\r\n## Actual behavior\r\nThe dotnet driver still looks for files that are local to itself instead of trying to reference the `DOTNET_ROOT` to resolve the hostfxr and runtime libraries location.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\nA fatal error occurred, the folder [/tmp/host/fxr] does not exist\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12400","RelatedDescription":"Closed issue \"Dotnet driver does not respect DOTNET_ROOT \" (#12400)"},{"Id":"486046135","IsPullRequest":true,"CreatedAt":"2019-08-27T22:10:44","Actor":"dotnet-maestro[bot]","Number":"12402","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.07\r\n- **Date Produced**: 8/27/2019 8:36 PM\r\n- **Commit**: 02f28cebec1e6d7e92991cee52f8cda668497123\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-rc1-19427-07\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-rc1-19427-07\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-rc1-19427-07\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-rc1-19427-07\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-rc1-19427-07\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12402","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12402)"},{"Id":"486038268","IsPullRequest":true,"CreatedAt":"2019-08-27T21:50:55","Actor":"dotnet-maestro[bot]","Number":"12401","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190827.5\r\n- **Date Produced**: 8/27/2019 9:15 PM\r\n- **Commit**: af0a2048a207b49bee29de9629208afd8ba27da4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19427.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12401","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12401)"},{"Id":"486020912","IsPullRequest":true,"CreatedAt":"2019-08-27T21:10:47","Actor":"dotnet-maestro[bot]","Number":"12399","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.6\r\n- **Date Produced**: 8/27/2019 7:40 PM\r\n- **Commit**: bac3b0dc8ec9e0d4d2441524ed2bca24f8bab748\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12399","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12399)"},{"Id":"485984511","IsPullRequest":true,"CreatedAt":"2019-08-27T19:47:37","Actor":"dotnet-maestro[bot]","Number":"12398","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190827.3\r\n- **Date Produced**: 8/27/2019 7:11 PM\r\n- **Commit**: b242d5426ec1939e4dfd0dd571048516cba3b770\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19427.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12398","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12398)"},{"Id":"485949731","IsPullRequest":true,"CreatedAt":"2019-08-27T18:31:13","Actor":"dotnet-maestro[bot]","Number":"12397","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.3\r\n- **Date Produced**: 8/27/2019 4:17 PM\r\n- **Commit**: ab5aa4be7a8c59af99d152c8e56867ed55e87407\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12397","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12397)"},{"Id":"485934450","IsPullRequest":true,"CreatedAt":"2019-08-27T17:55:31","Actor":"dotnet-maestro[bot]","Number":"12396","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190827.4\r\n- **Date Produced**: 8/27/2019 4:17 PM\r\n- **Commit**: ab5aa4be7a8c59af99d152c8e56867ed55e87407\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19427.4\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19427.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19427.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19427.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19427.4\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12396","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12396)"},{"Id":"485662647","IsPullRequest":true,"CreatedAt":"2019-08-27T16:02:55","Actor":"dotnet-maestro[bot]","Number":"12393","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190827.1\r\n- **Date Produced**: 8/27/2019 3:28 PM\r\n- **Commit**: 8d817f80700863f1f4139dd91c50bb006c2c22c7\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-rc1.19427.1\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12393","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12393)"},{"Id":"485770516","IsPullRequest":true,"CreatedAt":"2019-08-27T12:45:22","Actor":"dotnet-maestro[bot]","Number":"12395","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190826.1\r\n- **Date Produced**: 8/26/2019 12:35 PM\r\n- **Commit**: c84b71686a5c2482f028a945f1d8a3ac8fe78c7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19426.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12395","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12395)"},{"Id":"485767487","IsPullRequest":true,"CreatedAt":"2019-08-27T12:38:33","Actor":"dotnet-maestro[bot]","Number":"12394","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12394","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12394)"},{"Id":"485647178","IsPullRequest":true,"CreatedAt":"2019-08-27T08:30:47","Actor":"dotnet-maestro[bot]","Number":"12392","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.15\r\n- **Date Produced**: 8/27/2019 7:01 AM\r\n- **Commit**: 33b5bc3460986bbddcc4e674ca58eb3704570c39\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19426.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19426.15\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19426.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19426.15\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12392","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12392)"},{"Id":"485597559","IsPullRequest":true,"CreatedAt":"2019-08-27T06:26:07","Actor":"dotnet-maestro[bot]","Number":"12391","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.13\r\n- **Date Produced**: 8/27/2019 4:18 AM\r\n- **Commit**: 22cfa2bf11830a21ede91110a8df1a5252c7e583\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.13\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19426.13\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19426.13\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19426.13\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19426.13\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12391","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12391)"},{"Id":"485587816","IsPullRequest":true,"CreatedAt":"2019-08-27T05:50:25","Actor":"dotnet-maestro[bot]","Number":"12390","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/27/2019 4:12 AM\r\n- **Commit**: 22cfa2bf11830a21ede91110a8df1a5252c7e583\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.12\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19426.12\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19426.12\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19426.12\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19426.12\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12390","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12390)"},{"Id":"485560077","IsPullRequest":true,"CreatedAt":"2019-08-27T03:50:41","Actor":"dotnet-maestro[bot]","Number":"12389","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.11\r\n- **Date Produced**: 8/27/2019 2:26 AM\r\n- **Commit**: b33b6c20d855e7f9fdda6383ad12d849079f9b21\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-rc1-19426-11\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-rc1-19426-11\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-rc1-19426-11\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-rc1-19426-11\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-rc1-19426-11\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12389","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12389)"},{"Id":"485555047","IsPullRequest":true,"CreatedAt":"2019-08-27T03:35:45","Actor":"dotnet-maestro[bot]","Number":"12388","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.10\r\n- **Date Produced**: 8/27/2019 2:09 AM\r\n- **Commit**: 9549b03effdc6ddfc21a8c2e6210916f83b691c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19426.10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19426.10\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19426.10\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19426.10\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12388","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12388)"},{"Id":"485543653","IsPullRequest":true,"CreatedAt":"2019-08-27T02:38:32","Actor":"dotnet-maestro[bot]","Number":"12387","RawContent":null,"Title":"[release/3.0.100-preview9] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:96481569-9086-408c-b59d-08d7219835fd)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190826.11\r\n- **Date Produced**: 8/27/2019 1:39 AM\r\n- **Commit**: 1c91e0a4d59ba7d254637f3e3a430ad3aab6992f\r\n- **Branch**: refs/heads/release/3.0.100-preview9\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview9.19426.11\r\n\r\n[marker]: <> (End:96481569-9086-408c-b59d-08d7219835fd)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12387","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview9] Update dependencies from dotnet/sdk\" (#12387)"},{"Id":"485524160","IsPullRequest":true,"CreatedAt":"2019-08-27T01:30:44","Actor":"dotnet-maestro[bot]","Number":"12386","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.9\r\n- **Date Produced**: 8/26/2019 11:49 PM\r\n- **Commit**: e37b0cfa157ee7b1979255750691131bc5b8ed9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19426.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19426.9\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19426.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19426.9\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12386","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12386)"},{"Id":"485418493","IsPullRequest":true,"CreatedAt":"2019-08-27T00:40:50","Actor":"richlander","Number":"12382","RawContent":null,"Title":"Update CLI welcome message for 5.0","State":"closed","Body":"- Update welcome message for .NET Core 5.0.\r\n- I kept the \"Core\" branding for now. I don't want to start a naming discussion, so simply updated the 3.0 to 5.0 and moved on.\r\n- Replaces https://github.com/dotnet/cli/pull/12085\r\n- We should consider back-porting this change for 3.1.","Url":"https://github.com/dotnet/cli/pull/12382","RelatedDescription":"Closed or merged PR \"Update CLI welcome message for 5.0\" (#12382)"},{"Id":"485501260","IsPullRequest":false,"CreatedAt":"2019-08-26T23:34:12","Actor":"PazerOP","Number":"12385","RawContent":null,"Title":"IAsyncEnumerable function compilation different with block vs expression body","State":"closed","Body":"Apologies if this issue is in the wrong repo. \r\n\r\n## Steps to reproduce\r\nUsing dotnet core preview 8, attempt to compile the following:\r\n```C#\r\n// This is just a placeholder for literally any existing, working IAsyncEnumerable.\r\npublic static async IAsyncEnumerable<int> AnyValidAsyncEnumerable()\r\n{\r\n\tfor (int i = 0; i < 10; i++)\r\n\t{\r\n\t\tawait Task.Delay(100);\r\n\t\tyield return i;\r\n\t}\r\n}\r\n\r\n// All of these work fine\r\npublic static IAsyncEnumerable<int> MyAsyncFunc1() { return AnyValidAsyncEnumerable(); }\r\npublic static IAsyncEnumerable<int> MyAsyncFunc2() => AnyValidAsyncEnumerable();\r\npublic static async IAsyncEnumerable<int> MyAsyncFunc3()\r\n{\r\n\tawait foreach (var i in AnyValidAsyncEnumerable())\r\n\t\tyield return i;\r\n}\r\n\r\n// Block body example: Note the presence of async. This rightfully does not compile.\r\n//public static async IAsyncEnumerable<int> MyAsyncFunc4() { return AnyValidAsyncEnumerable(); }\r\n\r\n// Expression body example: This is functionally idential to MyAsyncFunc4(), except this compiles (but fails to emit module)\r\n#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously\r\npublic static async IAsyncEnumerable<int> MyAsyncFunc5() => AnyValidAsyncEnumerable();\r\n#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously\r\n```\r\n\r\nUncommenting MyAsyncFunc4() will trigger the proper compiler error CS1622. Commenting out MyAsyncFunc4() and leaving MyAsyncFunc5() uncommented will trigger compiler error CS7038.\r\n\r\n## Expected  behavior\r\nCompilation error should be generated, identical to the block body version: \r\n`error CS1622: Cannot return a value from an iterator. Use the yield return statement to return a value, or yield break to end the iteration.`\r\n\r\n## Actual behavior\r\nInitial compilation is \"successful\", then `error CS7038: Failed to emit module 'IAsyncEnumerableCompilerCrash'.`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-013656\r\n Commit:    8bf06ffc8d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-013656\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-28405-07\r\n  Commit:  d01b2fb7bc\r\n\r\n.NET Core SDKs installed:\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/cli/issues/12385","RelatedDescription":"Closed issue \"IAsyncEnumerable function compilation different with block vs expression body\" (#12385)"},{"Id":"485481621","IsPullRequest":true,"CreatedAt":"2019-08-26T22:55:44","Actor":"dotnet-maestro[bot]","Number":"12384","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.8\r\n- **Date Produced**: 8/26/2019 9:28 PM\r\n- **Commit**: 2c7d38cd482388451931ca303ef51aa3fb445f16\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19426.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19426.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19426.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19426.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12384","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12384)"},{"Id":"485295612","IsPullRequest":true,"CreatedAt":"2019-08-26T20:13:49","Actor":"dotnet-maestro[bot]","Number":"12380","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.5\r\n- **Date Produced**: 8/26/2019 6:45 PM\r\n- **Commit**: fb1abf7f922c5f471d035b8573a20cbf6be43f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19426.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19426.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19426.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19426.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12380","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12380)"},{"Id":"485375573","IsPullRequest":true,"CreatedAt":"2019-08-26T19:02:27","Actor":"dotnet-maestro[bot]","Number":"12381","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190826.1\r\n- **Date Produced**: 8/26/2019 6:26 PM\r\n- **Commit**: b496781792dc16259d7a25fd29f5c1e4da6ebe78\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-rc1.19426.1\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12381","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12381)"},{"Id":"485203001","IsPullRequest":true,"CreatedAt":"2019-08-26T12:44:46","Actor":"dotnet-maestro[bot]","Number":"12378","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190825.1\r\n- **Date Produced**: 8/25/2019 12:34 PM\r\n- **Commit**: adb5df40c24d8cd7cc657455da7456d4313f7de0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19425.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12378","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12378)"},{"Id":"485200372","IsPullRequest":true,"CreatedAt":"2019-08-26T12:38:21","Actor":"dotnet-maestro[bot]","Number":"12377","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190825.1\r\n- **Date Produced**: 8/25/2019 12:48 PM\r\n- **Commit**: 2de3acc671fc624191672a45564f9ef130af5cd4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19425.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12377","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12377)"},{"Id":"485205378","IsPullRequest":true,"CreatedAt":"2019-08-26T12:15:28","Actor":"dotnet-maestro[bot]","Number":"12379","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12379","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#12379)"},{"Id":"484958217","IsPullRequest":true,"CreatedAt":"2019-08-25T17:57:44","Actor":"dotnet-maestro[bot]","Number":"12376","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190823.8\r\n- **Date Produced**: 8/24/2019 12:24 AM\r\n- **Commit**: d82b0e4061fcca8e3ba044abe2da8f1de2ecfcca\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19423.8\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12376","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12376)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"485209871","IsPullRequest":true,"CreatedAt":"2019-08-27T17:30:06","Actor":"dotnet-maestro[bot]","Number":"1472","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1472","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1472)"},{"Id":"485780512","IsPullRequest":true,"CreatedAt":"2019-08-27T12:40:28","Actor":"dotnet-maestro[bot]","Number":"1477","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190826.13\r\n- **Date Produced**: 8/27/2019 7:30 AM\r\n- **Commit**: 7055b496a30dfe0f66a2f555cad31502473d144b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19426.13\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19426.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19426.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1477)"},{"Id":"485766905","IsPullRequest":true,"CreatedAt":"2019-08-27T12:12:03","Actor":"dotnet-maestro[bot]","Number":"1476","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1476)"},{"Id":"485567962","IsPullRequest":false,"CreatedAt":"2019-08-27T03:53:41","Actor":"zhouguoqing","Number":"1475","RawContent":null,"Title":".Net framework 4.6.1 Bug feedback","State":"open","Body":"Recently, Our winform process crashed some times.\r\nWe used .Net framework 4.5.1 , runtime CLR info:\r\n0:068> lmvm clr\r\nstart             end                 module name\r\n00007fff`c0b90000 00007fff`c1576000   clr        (private pdb symbols)  c:\\temp\\mylocalsymbols\\clr.pdb\\E18D6461EB4F49A6B418E9AF91007A212\\clr.pdb\r\n    Loaded symbol image file: clr.dll\r\n    Image path: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\clr.dll\r\n    Image name: clr.dll\r\n    Timestamp:        Fri Jun 10 09:16:55 2016 (575A1507)\r\n    CheckSum:         009E00C2\r\n    ImageSize:        009E6000\r\n    File version:     4.6.1586.0\r\n    Product version:  4.0.30319.0\r\n    File flags:       8 (Mask 3F) Private\r\n    File OS:          4 Unknown Win32\r\n    File type:        2.0 Dll\r\n    File date:        00000000.00000000\r\n    Translations:     0409.04b0\r\n    CompanyName:      Microsoft Corporation\r\n    ProductName:      Microsoft® .NET Framework\r\n    InternalName:     clr.dll\r\n    OriginalFilename: clr.dll\r\n    ProductVersion:   4.6.1586.0\r\n    FileVersion:      4.6.1586.0 built by: NETFXREL2\r\n    PrivateBuild:     DDBLD201B\r\n    FileDescription:  Microsoft .NET Runtime Common Language Runtime - WorkStation\r\n    LegalCopyright:   © Microsoft Corporation.  All rights reserved.\r\n    Comments:         Flavor=Retail\r\n\r\n We used windbg anaylze crash dump file:\r\nFAULTING_IP: \r\nclr!SVR::gc_heap::background_mark_simple1+871\r\n00007fff`c0c717d4 41f70200000080  test    dword ptr [r10],80000000h\r\n\r\nEXCEPTION_RECORD:  ffffffffffffffff -- (.exr 0xffffffffffffffff)\r\nExceptionAddress: 00007fffc0c717d4 (clr!SVR::gc_heap::background_mark_simple1+0x0000000000000871)\r\n   ExceptionCode: c0000005 (Access violation)\r\n  ExceptionFlags: 00000001\r\nNumberParameters: 2\r\n   Parameter[0]: 0000000000000000\r\n   Parameter[1]: 0000000000000000\r\nAttempt to read from address 0000000000000000\r\n\r\nDEFAULT_BUCKET_ID:  NULL_POINTER_READ\r\n\r\nPROCESS_NAME:  TeldHost.exe\r\n\r\nERROR_CODE: (NTSTATUS) 0xc0000005 - 0x%p\r\n\r\nEXCEPTION_CODE: (NTSTATUS) 0xc0000005 - 0x%p\r\n\r\nEXCEPTION_PARAMETER1:  0000000000000000\r\n\r\nEXCEPTION_PARAMETER2:  0000000000000000\r\n\r\nREAD_ADDRESS:  0000000000000000 \r\n\r\nFOLLOWUP_IP: \r\nclr!SVR::gc_heap::background_mark_simple1+871\r\n00007fff`c0c717d4 41f70200000080  test    dword ptr [r10],80000000h\r\n\r\nNTGLOBALFLAG:  0\r\n\r\nAPPLICATION_VERIFIER_FLAGS:  0\r\n\r\nFAULTING_THREAD:  0000000000002730\r\n\r\nPRIMARY_PROBLEM_CLASS:  NULL_POINTER_READ\r\n\r\nBUGCHECK_STR:  APPLICATION_FAULT_NULL_POINTER_READ\r\n\r\nLAST_CONTROL_TRANSFER:  from 00007fffc0c709da to 00007fffc0c717d4\r\n\r\nSTACK_TEXT:  \r\n000000e9`7527f3f0 00007fff`c0c709da : 00000000`00000040 000002e5`19ab92d0 00000000`00000002 000002e8`1ec8fea8 : clr!SVR::gc_heap::background_mark_simple1+0x871\r\n000000e9`7527f460 00007fff`c0c713fb : 000002e9`1b511960 00000000`00000000 00000000`00000000 00007fff`c0c713fb : clr!SVR::gc_heap::background_mark_simple+0x91\r\n000000e9`7527f490 00007fff`c0d1b058 : 000002e5`19b019f8 000000e9`7527fa40 00007fff`c0d1b020 00007fff`c0c71310 : clr!SVR::gc_heap::background_promote+0x102\r\n000000e9`7527f4e0 00007fff`c0d1afa7 : 000000e9`7527fa40 000002e5`19b019f8 000000e9`7527fa40 00007fff`c0d1b020 : clr!PinObject+0x38\r\n000000e9`7527f520 00007fff`c0d29584 : 000000e9`7527f908 000002e5`19b00000 00000000`00000004 00000000`00000001 : clr!ScanConsecutiveHandlesWithoutUserData+0x6b\r\n000000e9`7527f550 00007fff`c0d2997c : 000000e9`7527f78c 00007fff`c0d29540 000000e9`7527f7d4 000000e9`7527f948 : clr!BlockScanBlocksWithoutUserData+0x44\r\n000000e9`7527f580 00007fff`c0d29bbd : 00000000`00000000 00007fff`c0d29930 000000e9`7527f750 000000e9`7527f780 : clr!ProcessScanQNode+0x46\r\n000000e9`7527f5b0 00007fff`c0d29b2d : 000000e9`7527f8f8 000002e5`19b00000 000000e9`7527f908 000000e9`7527f750 : clr!ProcessScanQueue+0x4e\r\n000000e9`7527f5e0 00007fff`c0d29abe : 000000e9`7527f750 000000e9`7527f8f8 00000000`00000026 00000000`00000028 : clr!xxxTableScanQueuedBlocksAsync+0x5d\r\n000000e9`7527f610 00007fff`c0d167e7 : 00007fff`c0d29a60 00000000`00000002 000002e5`19b00000 000000e9`7527f938 : clr!xxxAsyncSegmentIterator+0x2d\r\n000000e9`7527f640 00007fff`c0d29a36 : 000002e5`19a149d0 00007fff`c0d299a0 000002e5`19a149d0 00000000`00000006 : clr!TableScanHandles+0x97\r\n000000e9`7527f710 00007fff`c0d1699c : 00007fff`00000000 00007fff`c0b95073 000002e9`69d12d60 00007fff`c0d29540 : clr!xxxTableScanHandlesAsync+0x9b\r\n000000e9`7527f8b0 00007fff`c0d19136 : 00007fff`c14d0d30 00000000`00000000 00000000`0000000a 00007fff`c0c71310 : clr!HndScanHandlesForGC+0x118\r\n000000e9`7527f950 00007fff`c0d16d05 : 000000e9`7527fa40 000000e9`7527fa70 00000007`00000003 000002e9`69d12d60 : clr!Ref_TracePinningRoots+0xfe\r\n000000e9`7527f9d0 00007fff`c0c7120e : 00000000`00000000 00007fff`c14db270 00007fff`c14db270 00000000`00000001 : clr!GCScan::GcScanHandles+0x45\r\n000000e9`7527fa10 00007fff`c0c70511 : 00000000`00000002 00000000`00000002 000002e5`19a8bcb0 00007fff`c0d157e1 : clr!SVR::gc_heap::background_mark_phase+0x3aa\r\n000000e9`7527faa0 00007fff`c0c70384 : 000002e9`69d12d60 000002e9`69d12d60 00000000`00000000 00000000`00000004 : clr!SVR::gc_heap::gc1+0xffffffff`fff381e1\r\n000000e9`7527faf0 00007fff`c0ba02cf : 000002e9`69d12d60 000002e5`19a8bcb0 000000e9`7527fee0 00000000`00000000 : clr!SVR::gc_heap::bgc_thread_function+0x132\r\n000000e9`7527fb40 00007fff`ce088364 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : clr!Thread::intermediateThreadProc+0x86\r\n000000e9`7527ff00 00007fff`cff770d1 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : kernel32!BaseThreadInitThunk+0x14\r\n000000e9`7527ff30 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x21\r\n\r\n\r\nSYMBOL_STACK_INDEX:  0\r\n\r\nSYMBOL_NAME:  clr!SVR::gc_heap::background_mark_simple1+871\r\n\r\nFOLLOWUP_NAME:  MachineOwner\r\n\r\nMODULE_NAME: clr\r\n\r\nIMAGE_NAME:  clr.dll\r\n\r\nDEBUG_FLR_IMAGE_TIMESTAMP:  575a1507\r\n\r\nSTACK_COMMAND:  ~68s; .ecxr ; kb\r\n\r\nFAILURE_BUCKET_ID:  NULL_POINTER_READ_c0000005_clr.dll!SVR::gc_heap::background_mark_simple1\r\n\r\nBUCKET_ID:  X64_APPLICATION_FAULT_NULL_POINTER_READ_clr!SVR::gc_heap::background_mark_simple1+871\r\n\r\nWATSON_STAGEONE_URL:  http://watson.microsoft.com/StageOne/TeldHost_exe/1_0_0_0/5ccea4e6/clr_dll/4_6_1586_0/575a1507/c0000005/000e17d4.htm?Retriage=1\r\n\r\nFollowup: MachineOwner\r\n---------\r\n \r\nPlease help.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1475","RelatedDescription":"Open issue \".Net framework 4.6.1 Bug feedback\" (#1475)"},{"Id":"485338895","IsPullRequest":false,"CreatedAt":"2019-08-26T17:04:14","Actor":"roji","Number":"1474","RawContent":null,"Title":"Add new socket TCP keepalive options","State":"open","Body":"https://github.com/dotnet/corefx/issues/25040 added the three portable TCP keepalive options to .NET Core 3.0, but they are missing from .NET Standard.","Url":"https://github.com/dotnet/standard/issues/1474","RelatedDescription":"Open issue \"Add new socket TCP keepalive options\" (#1474)"},{"Id":"485210438","IsPullRequest":true,"CreatedAt":"2019-08-26T12:37:57","Actor":"dotnet-maestro[bot]","Number":"1473","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190825.4\r\n- **Date Produced**: 8/26/2019 4:41 AM\r\n- **Commit**: ba50ba15d0747d5be1e8bd38ea03a5ba892314bd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19425.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19425.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19425.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1473","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1473)"},{"Id":"485199879","IsPullRequest":true,"CreatedAt":"2019-08-26T12:11:53","Actor":"dotnet-maestro[bot]","Number":"1471","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190825.1\r\n- **Date Produced**: 8/25/2019 12:48 PM\r\n- **Commit**: 2de3acc671fc624191672a45564f9ef130af5cd4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19425.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19425.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19425.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19425.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19425.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19425.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1471","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1471)"},{"Id":"484812113","IsPullRequest":true,"CreatedAt":"2019-08-25T14:28:38","Actor":"dotnet-maestro[bot]","Number":"1467","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190824.1\r\n- **Date Produced**: 8/24/2019 12:51 PM\r\n- **Commit**: a7b5eb8de300b6a30bd797c4ecc8769f7028aeec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19424.1\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1467","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1467)"},{"Id":"484925474","IsPullRequest":true,"CreatedAt":"2019-08-25T12:37:53","Actor":"dotnet-maestro[bot]","Number":"1470","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190824.4\r\n- **Date Produced**: 8/24/2019 5:51 PM\r\n- **Commit**: e92b6d57af9b7299f2a6fca2a599f09dce4f672a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19424.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19424.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19424.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1470","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1470)"},{"Id":"484923190","IsPullRequest":true,"CreatedAt":"2019-08-25T12:11:47","Actor":"dotnet-maestro[bot]","Number":"1469","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190824.1\r\n- **Date Produced**: 8/24/2019 12:51 PM\r\n- **Commit**: a7b5eb8de300b6a30bd797c4ecc8769f7028aeec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19424.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1469","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1469)"},{"Id":"484812226","IsPullRequest":true,"CreatedAt":"2019-08-24T12:37:35","Actor":"dotnet-maestro[bot]","Number":"1468","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190823.8\r\n- **Date Produced**: 8/24/2019 1:53 AM\r\n- **Commit**: 9f3111e1e2292b45dfd6fd28891f7ba031c3f6ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19423.8\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19423.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19423.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1468","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1468)"},{"Id":"484810097","IsPullRequest":true,"CreatedAt":"2019-08-24T12:11:49","Actor":"dotnet-maestro[bot]","Number":"1466","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190823.6\r\n- **Date Produced**: 8/23/2019 5:47 PM\r\n- **Commit**: c48732c894e73e4b1f491929392a465182eb7ba6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19423.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19423.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19423.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19423.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19423.6\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19423.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1466","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1466)"},{"Id":"484504600","IsPullRequest":true,"CreatedAt":"2019-08-23T21:28:51","Actor":"dotnet-maestro[bot]","Number":"1463","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190822.24\r\n- **Date Produced**: 8/22/2019 11:13 PM\r\n- **Commit**: c7f03b2cf06bdfc64dad4140fd0d486127095cd8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19422.24\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1463","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1463)"},{"Id":"484505252","IsPullRequest":true,"CreatedAt":"2019-08-23T12:40:42","Actor":"dotnet-maestro[bot]","Number":"1464","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190822.9\r\n- **Date Produced**: 8/23/2019 3:30 AM\r\n- **Commit**: c05355b90b55a9ff436a1ba9c6c1f5a508c2f3ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19422.9\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19422.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19422.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1464","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1464)"},{"Id":"484505352","IsPullRequest":true,"CreatedAt":"2019-08-23T12:30:51","Actor":"dotnet-maestro[bot]","Number":"1465","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190826.11\r\n- **Date Produced**: 8/27/2019 2:38 AM\r\n- **Commit**: b2f4fa3ca060defffc859bf2b0934292ab51ec87\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-rc1.19426.11\r\n  - **System.Reflection.Emit** -> 4.6.0-rc1.19426.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-rc1.19426.11\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1465","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1465)"},{"Id":"484493871","IsPullRequest":true,"CreatedAt":"2019-08-23T12:11:54","Actor":"dotnet-maestro[bot]","Number":"1462","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190822.24\r\n- **Date Produced**: 8/22/2019 11:13 PM\r\n- **Commit**: c7f03b2cf06bdfc64dad4140fd0d486127095cd8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19422.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19422.24\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1462","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1462)"},{"Id":"483964395","IsPullRequest":true,"CreatedAt":"2019-08-22T13:22:06","Actor":"dotnet-maestro[bot]","Number":"1460","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190821.4\r\n- **Date Produced**: 8/21/2019 6:40 PM\r\n- **Commit**: 27a6926f6b1d4b36d86a236d2b05cdee3669589e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19421.4\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1460","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1460)"},{"Id":"483965136","IsPullRequest":true,"CreatedAt":"2019-08-22T12:40:12","Actor":"dotnet-maestro[bot]","Number":"1461","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190821.5\r\n- **Date Produced**: 8/21/2019 11:26 PM\r\n- **Commit**: 41cd99d051102be4ed83f4f9105ae9e73aa48b7c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19421.5\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19421.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19421.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1461","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1461)"},{"Id":"483952076","IsPullRequest":true,"CreatedAt":"2019-08-22T12:12:02","Actor":"dotnet-maestro[bot]","Number":"1459","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190821.4\r\n- **Date Produced**: 8/21/2019 6:40 PM\r\n- **Commit**: 27a6926f6b1d4b36d86a236d2b05cdee3669589e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19421.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19421.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1459","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1459)"},{"Id":"483602102","IsPullRequest":true,"CreatedAt":"2019-08-21T22:06:06","Actor":"terrajobst","Number":"1458","RawContent":null,"Title":"Ask Mode: Add support for typed-datasets","State":"closed","Body":"## Description\r\n\r\n.NET Core 3.0 has full support for `System.Data.DataTableExtensions` which also enables the visual `DataSet` designer in Visual Studio. However, .NET Standard 2.1 only supported a subset which makes the code that is generated by the designer not compile in .NET Standard 2.1. The fix is include the missing APIs in .NET Standard 2.1.\r\n\r\nThis requires no changes in .NET Core 3.0 but will require minimal work in platforms implementing .NET Standard 2.1, most notably Mono/Xamarin. However, they already signed off on it.\r\n\r\n## Customer Impact\r\n\r\nCustomer will be able to use the DataSet designer in .NET Standard libraries, which will become handy as people port their existing .NET Framework desktop applications to .NET Core 3.0.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nLow. All APIs are already implemented in .NET Core 3.0.","Url":"https://github.com/dotnet/standard/pull/1458","RelatedDescription":"Closed or merged PR \"Ask Mode: Add support for typed-datasets\" (#1458)"},{"Id":"483567659","IsPullRequest":true,"CreatedAt":"2019-08-21T18:33:20","Actor":"Anipik","Number":"1457","RawContent":null,"Title":"Enabling yaml stages for preview 9","State":"closed","Body":"We require this change in order to propagate the dependecies updates for preview 9 branch.\r\nrelated 3.0 change https://github.com/dotnet/standard/pull/1453\r\n\r\ncc @mmitche ","Url":"https://github.com/dotnet/standard/pull/1457","RelatedDescription":"Closed or merged PR \"Enabling yaml stages for preview 9\" (#1457)"},{"Id":"483116364","IsPullRequest":true,"CreatedAt":"2019-08-21T17:37:37","Actor":"Anipik","Number":"1453","RawContent":null,"Title":"Adding YAML stages","State":"closed","Body":"Closes: https://github.com/dotnet/arcade/issues/3726\r\n\r\ncherrypicking #1373 #1379 ","Url":"https://github.com/dotnet/standard/pull/1453","RelatedDescription":"Closed or merged PR \"Adding YAML stages\" (#1453)"},{"Id":"483391706","IsPullRequest":true,"CreatedAt":"2019-08-21T16:03:08","Actor":"dotnet-maestro[bot]","Number":"1455","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190820.8\r\n- **Date Produced**: 8/21/2019 1:49 AM\r\n- **Commit**: fa168dd690798a683ef0d1e65d60ce5d6918d987\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19420.8\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1455","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1455)"},{"Id":"483392622","IsPullRequest":true,"CreatedAt":"2019-08-21T12:42:44","Actor":"dotnet-maestro[bot]","Number":"1456","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190820.10\r\n- **Date Produced**: 8/21/2019 12:53 AM\r\n- **Commit**: d341fd37dcb2c22e382adccdc06770cf8f160577\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-rc1.19420.10\r\n  - **System.Reflection.Emit** -> 4.6.0-rc1.19420.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-rc1.19420.10\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1456","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1456)"},{"Id":"483378318","IsPullRequest":true,"CreatedAt":"2019-08-21T12:12:10","Actor":"dotnet-maestro[bot]","Number":"1454","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190820.8\r\n- **Date Produced**: 8/21/2019 1:49 AM\r\n- **Commit**: fa168dd690798a683ef0d1e65d60ce5d6918d987\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19420.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1454","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1454)"},{"Id":"483046271","IsPullRequest":false,"CreatedAt":"2019-08-20T22:30:52","Actor":"Anipik","Number":"1452","RawContent":null,"Title":"NetStandard not publishing the packages to the blob-feed","State":"closed","Body":"The dotnet standard stopped publishing packages to the dotnet core blob feed after ```2.1.0-prerelease.19414.3```\r\nAs a result the builds for repos higher in the stack is failing.\r\nThis issue is only is release\\3.0 branches.\r\neg https://github.com/dotnet/corefx/pull/40331 \r\n\r\nThis is high priority issue as these will be blocking the build process for preview 9\r\n\r\ncc @JohnTortugo @wtgodbe @mmitche @riarenas ","Url":"https://github.com/dotnet/standard/issues/1452","RelatedDescription":"Closed issue \"NetStandard not publishing the packages to the blob-feed\" (#1452)"},{"Id":"482829276","IsPullRequest":true,"CreatedAt":"2019-08-20T16:53:09","Actor":"dotnet-maestro[bot]","Number":"1450","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190819.12\r\n- **Date Produced**: 8/19/2019 5:30 PM\r\n- **Commit**: 10b2260aeed5f07582bf8d8dcd4221a447b171c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19419.12\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1450","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1450)"},{"Id":"482767576","IsPullRequest":true,"CreatedAt":"2019-08-20T14:52:28","Actor":"ahsonkhan","Number":"1448","RawContent":null,"Title":"[release/3.0] Upgrade the IntelliSense package version to 3.0 Preview 8 for netstandard xml","State":"closed","Body":"Port of https://github.com/dotnet/standard/pull/1447\r\n\r\nThis contains the doc drops for the latest .NET Standard 2.1 xml docs.\r\n\r\ncc @wtgodbe, @dagood, @carlossanlop, @terrajobst, @mairaw, @safern, @Anipik, @ericstj ","Url":"https://github.com/dotnet/standard/pull/1448","RelatedDescription":"Closed or merged PR \"[release/3.0] Upgrade the IntelliSense package version to 3.0 Preview 8 for netstandard xml\" (#1448)"},{"Id":"482830211","IsPullRequest":true,"CreatedAt":"2019-08-20T12:32:48","Actor":"dotnet-maestro[bot]","Number":"1451","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190819.5\r\n- **Date Produced**: 8/19/2019 9:33 PM\r\n- **Commit**: 961b953eb77922d3906506ee15a58068abfa3284\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview9.19419.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview9.19419.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview9.19419.5\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1451","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1451)"},{"Id":"482818399","IsPullRequest":true,"CreatedAt":"2019-08-20T12:11:52","Actor":"dotnet-maestro[bot]","Number":"1449","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190819.12\r\n- **Date Produced**: 8/19/2019 5:30 PM\r\n- **Commit**: 10b2260aeed5f07582bf8d8dcd4221a447b171c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19419.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19419.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1449","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1449)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"486164885","IsPullRequest":true,"CreatedAt":"2019-08-28T05:15:35","Actor":"dotnet-maestro[bot]","Number":"40640","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190827.10\r\n- **Date Produced**: 8/28/2019 2:33 AM\r\n- **Commit**: f161f03b4703bf90240e62f9a8ed8293b50fc376\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-rc1.19427.10\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19427.10\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19427.10\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40640","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#40640)"},{"Id":"486141429","IsPullRequest":true,"CreatedAt":"2019-08-28T04:02:33","Actor":"Dotnet-GitSync-Bot","Number":"40639","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @eerhardt","Url":"https://github.com/dotnet/corefx/pull/40639","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#40639)"},{"Id":"486101097","IsPullRequest":true,"CreatedAt":"2019-08-28T00:36:01","Actor":"scalablecory","Number":"40638","RawContent":null,"Title":"Fix HashSet.SetCapacity() that increases capacity failing after a successful Remove().","State":"open","Body":"HashSet.SetCapacity does not take into account the freelist, and will bomb out due to a bad array index.\r\n\r\nResolves #40621","Url":"https://github.com/dotnet/corefx/pull/40638","RelatedDescription":"Open PR \"Fix HashSet.SetCapacity() that increases capacity failing after a successful Remove().\" (#40638)"},{"Id":"486059138","IsPullRequest":true,"CreatedAt":"2019-08-27T23:31:27","Actor":"dotnet-maestro[bot]","Number":"40635","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190827.5\r\n- **Date Produced**: 8/27/2019 7:31 PM\r\n- **Commit**: ef90bce549d7f885dd2bcdf26652a9fbad4d28d7\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-rc1.19427.5\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19427.5\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19427.5\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40635","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#40635)"},{"Id":"486069941","IsPullRequest":true,"CreatedAt":"2019-08-27T22:44:27","Actor":"eerhardt","Number":"40637","RawContent":null,"Title":"Add tests for round trip serializing TimeZoneInfos.","State":"open","Body":"Fix #40578\r\n\r\nThis won't pass CI until https://github.com/dotnet/coreclr/pull/26405 is merged into corefx.","Url":"https://github.com/dotnet/corefx/pull/40637","RelatedDescription":"Open PR \"Add tests for round trip serializing TimeZoneInfos.\" (#40637)"},{"Id":"486069627","IsPullRequest":false,"CreatedAt":"2019-08-27T22:43:21","Actor":"Shadowblitz16","Number":"40636","RawContent":null,"Title":"FileSystemWatcher triggers multiple events sometimes","State":"open","Body":"sometimes FileSystemWatcher triggers events multiple times.\r\nI suggest that that a failsafe be added to events to only trigger them once.\r\n\r\nI actually downloaded a library here through nuget, https://github.com/StefH/System.IO.EnhancedFileSystemWatcher\r\n\r\nwhich try to addresses these issues\r\nI think that this issue should be addressed officially. ","Url":"https://github.com/dotnet/corefx/issues/40636","RelatedDescription":"Open issue \"FileSystemWatcher triggers multiple events sometimes\" (#40636)"},{"Id":"486002324","IsPullRequest":true,"CreatedAt":"2019-08-27T21:57:05","Actor":"Anipik","Number":"40630","RawContent":null,"Title":"Just for validation state","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/40630","RelatedDescription":"Closed or merged PR \"Just for validation state\" (#40630)"},{"Id":"486045882","IsPullRequest":true,"CreatedAt":"2019-08-27T21:34:44","Actor":"dotnet-maestro-bot","Number":"40634","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @davidsh\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/40634","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#40634)"},{"Id":"486040694","IsPullRequest":true,"CreatedAt":"2019-08-27T21:31:00","Actor":"Dotnet-GitSync-Bot","Number":"40633","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/40633","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#40633)"},{"Id":"485787487","IsPullRequest":false,"CreatedAt":"2019-08-27T20:43:06","Actor":"sameerkattel","Number":"40615","RawContent":null,"Title":" Directory.CreateDirectory returns success without creating directory after Directory.Delete","State":"closed","Body":"When I have a non empty directory, createdirectory does not create directory after delete.\r\n\r\n   ```\r\n   public void SetupRootPath(string path)\r\n        {\r\n            Directory.CreateDirectory(path);\r\n            Directory.Delete(path, true);\r\n            Directory.CreateDirectory(path);\r\n        }\r\n```\r\n\r\nwondering if Directory.Delete is really a synchronous call?\r\n\r\n.Net  Version : .net core 2.2 \r\nPlatform: windows 10","Url":"https://github.com/dotnet/corefx/issues/40615","RelatedDescription":"Closed issue \" Directory.CreateDirectory returns success without creating directory after Directory.Delete\" (#40615)"},{"Id":"486013108","IsPullRequest":false,"CreatedAt":"2019-08-27T20:17:31","Actor":"wfurt","Number":"40632","RawContent":null,"Title":"Http tests failed because of HttpListener","State":"open","Body":"We got catastrophic failure without any test results posted:\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/84ef369e-9795-4f92-bfef-43a2f1558542/workitems/System.Net.Http.Functional.Tests/console\r\n\r\nFortunately we got core dump collected: https://helix.dot.net/api/2019-06-17/jobs/47e2ed6c-bcd0-4f73-bed9-be21d9dda28a/workitems/System.Net.Http.Functional.Tests/files/dotnet.exe.4484.dmp\r\n\r\n\r\n```\r\nSystem.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandler_Proxy_Test.Proxy_UseEnvironmentVariableToSetSystemProxy_RequestGoesThruProxy [SKIP]\r\n      Test needs SocketsHttpHandler\r\nUnhandled exception. System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Net.HttpListener.DisconnectAsyncResult.IOCompleted(DisconnectAsyncResult asyncResult, UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped) in /_/src/System.Net.HttpListener/src/System/Net/Windows/HttpListener.Windows.cs:line 1957\r\n   at System.Net.HttpListener.DisconnectAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped) in /_/src/System.Net.HttpListener/src/System/Net/Windows/HttpListener.Windows.cs:line 1969\r\n   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pNativeOverlapped) in /_/src/System.Private.CoreLib/src/System/Threading/Overlapped.cs:line 64\r\n----- end Tue 08/27/2019 19:12:57.89 ----- exit code -1073741819 ----------------------------------------------------------\r\n\r\n\r\nSearching 'C:\\dotnetbuild\\work\\84ef369e-9795-4f92-bfef-43a2f1558542\\Work\\f71c1b3b-8b72-4b86-bd6d-38f6b6265b6f\\Exec\\..' for log files\r\nFound log 'C:\\dotnetbuild\\work\\84ef369e-9795-4f92-bfef-43a2f1558542\\Work\\f71c1b3b-8b72-4b86-bd6d-38f6b6265b6f\\Exec\\..\\console.b09eba4f.log'\r\nUri 'https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-corefx-refs-pull-40543-merge-84ef369e97954f92bf/System.Net.Http.Functional.Tests/console.b09eba4f.log?sv=2018-03-28&sr=c&sig=Yow60lVW%2FgDZ9OgiHyNGfRR%2F2wWLR2X4KA0brC0whvU%3D&se=2019-09-06T18%3A52%3A28Z&sp=rl'\r\nGenerated log list: <ul><li><a href='https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-corefx-refs-pull-40543-merge-84ef369e97954f92bf/System.Net.Http.Functional.Tests/console.b09eba4f.log?sv=2018-03-28&sr=c&sig=Yow60lVW%2FgDZ9OgiHyNGfRR%2F2wWLR2X4KA0brC0whvU%3D&se=2019-09-06T18%3A52%3A28Z&sp=rl' target='_blank'>console.b09eba4f.log</a></li></ul>\r\nSearching 'C:\\dotnetbuild\\work\\84ef369e-9795-4f92-bfef-43a2f1558542\\Work\\f71c1b3b-8b72-4b86-bd6d-38f6b6265b6f\\Exec' for test results files\r\nNo results file found in any of the following formats: xunit, junit, trx\r\n Tue 08/27/2019-19:12:58.69\r\n2019-08-27 19:12:59,004: ERROR: xunit-reporter(69): main: Unable to report xunit results: no test results xml file found.\r\n```\r\n\r\nit would be great iof somebody can take a look before the link corefile link expires:\r\n\r\ncc: @scalablecory @davidsh \r\n","Url":"https://github.com/dotnet/corefx/issues/40632","RelatedDescription":"Open issue \"Http tests failed because of HttpListener\" (#40632)"},{"Id":"486003524","IsPullRequest":true,"CreatedAt":"2019-08-27T19:56:17","Actor":"Dotnet-GitSync-Bot","Number":"40631","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corefx/pull/40631","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#40631)"},{"Id":"485924175","IsPullRequest":false,"CreatedAt":"2019-08-27T19:50:36","Actor":"Kriegel","Number":"40625","RawContent":null,"Title":"System.IO.Directory.EnumerateDirectories Recurse enumeration with EnumerationOptions count is different as other tools","State":"closed","Body":"Hi!\r\n\r\nI am like to enumerate Filesystem Directories with the .NET Classes and PowerShell 6 because they are faster than the Cmdlet Get-ChildItem.\r\n\r\nMy PowerShell Version is:\r\n\r\n> Name                           Value\r\n> ----                           -----\r\n> PSVersion                      6.2.2\r\n> PSEdition                      Core\r\n> GitCommitId                    6.2.2\r\n> OS                             Microsoft Windows 10.0.16299\r\n> Platform                       Win32NT\r\n> PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\n> PSRemotingProtocolVersion      2.3\r\n> SerializationVersion           1.1.0.1\r\n> WSManStackVersion              3.0\r\n\r\n\r\nIf I do a recurse enumeration over \"C:\\Windows\" , with User permissions (to have a folder with lots of access denied) and the following Function under use of\r\nSystem.IO.EnumerationOptions\r\n\r\nThe  count of Directories is INCORRECT and shows a count of 35712\r\nMissing 1057\r\n\r\n```\r\nFunction Get-DirRecurseEnumerationOptions {\r\n\r\n    [Cmdletbinding()]\r\n    Param (\r\n        [String[]]$Path\r\n    )\r\n    \r\n    Begin {\r\n         $EnumerationOptions = New-Object 'System.IO.EnumerationOptions'\r\n         $EnumerationOptions.IgnoreInaccessible = $False\r\n         $EnumerationOptions.RecurseSubdirectories = $False\r\n    }\r\n\r\n\r\n    Process {\r\n        \r\n        ForEach ($Dir in $Path) {\r\n             [System.IO.DirectoryInfo]$Dir\r\n\r\n            Try {\r\n                ForEach ($D in [System.IO.Directory]::EnumerateDirectories($Dir,'*',$EnumerationOptions)) {\r\n                    Get-DirRecurse -Path $D\r\n                }\r\n            } Catch {\r\n                Write-Error $_\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGet-DirRecurseEnumerationOptions -Path 'C:\\windows' -ErrorAction SilentlyContinue | measure\r\n```\r\n\r\nIf I do the same with  System.IO.SearchOption.TopDirectoryOnly i get the correct count of 36765\r\n```\r\n\r\nFunction Get-DirRecurseSearchOption {\r\n\r\n    [Cmdletbinding()]\r\n    Param (\r\n        [String[]]$Path\r\n    )\r\n    \r\n    Process {\r\n        \r\n        ForEach ($Dir in $Path) {\r\n             [System.IO.DirectoryInfo]$Dir\r\n\r\n            Try {\r\n                ForEach ($D in [System.IO.Directory]::EnumerateDirectories($Dir,'*',[System.IO.SearchOption]::TopDirectoryOnly)) {\r\n                    Get-DirRecurse1 -Path $D\r\n                }\r\n            } Catch {\r\n                Write-Error $_\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGet-DirRecurseSearchOption -Path 'C:\\windows' -ErrorAction SilentlyContinue | measure\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/40625","RelatedDescription":"Closed issue \"System.IO.Directory.EnumerateDirectories Recurse enumeration with EnumerationOptions count is different as other tools\" (#40625)"},{"Id":"486001385","IsPullRequest":true,"CreatedAt":"2019-08-27T19:50:30","Actor":"steveharter","Number":"40629","RawContent":null,"Title":"Fix additional issue of dictionary properties being skipped","State":"open","Body":"With extended testing, another issue with dictionary properties being skipped was found. This adds on top of #40490 and #40598.\r\n\r\nSame as the original issue where dictionary properties can be skipped, but now with a \"null\" value instead of an object value (\"{}\").\r\n\r\nWill also need to be applied to https://github.com/dotnet/corefx/pull/40624 (3.0).\r\n\r\ncc @CodeBlanch","Url":"https://github.com/dotnet/corefx/pull/40629","RelatedDescription":"Open PR \"Fix additional issue of dictionary properties being skipped\" (#40629)"},{"Id":"485956429","IsPullRequest":true,"CreatedAt":"2019-08-27T19:44:01","Actor":"dotnet-maestro[bot]","Number":"40628","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c090f591-8433-4a8c-54c8-08d6c734018a)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190827.3\r\n- **Date Produced**: 8/27/2019 5:50 PM\r\n- **Commit**: c1354a772ad55fc61e844591be899ebcb25e6777\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19427.3\r\n\r\n[marker]: <> (End:c090f591-8433-4a8c-54c8-08d6c734018a)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40628","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/standard\" (#40628)"},{"Id":"485954093","IsPullRequest":true,"CreatedAt":"2019-08-27T18:51:03","Actor":"dotnet-maestro[bot]","Number":"40627","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190827.2\r\n- **Date Produced**: 8/27/2019 3:28 PM\r\n- **Commit**: f23bf52a30c42815c374f9c578aeed05cc92f2d8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-rc1.19427.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19427.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19427.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40627","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#40627)"},{"Id":"485952881","IsPullRequest":false,"CreatedAt":"2019-08-27T18:02:47","Actor":"NetTecture","Number":"40626","RawContent":null,"Title":"System.IO.Pipelines - documentation is inadequate","State":"open","Body":"and particularly lacking in regards to the new Json library in System.Text.Json. I am stumbling around for an hour now trying to get it to work, and all I do actually find are the namespace method for method documentation - not a single linked example or background info page. This is particualrly bad as I am writing a CLIENT (not a server as most examples seem to assume) and I need possibly to adjust some parameters for the json stream.\r\n\r\nI am NOT asking for help here - I understand that this is what you prefer on Stackoverflow. I just point out that a method per method documentation without any basic example in text in there is not enough to get those 2 libraries working without background information. Going into the soruce also does not work - that is what documentation is for.\r\n\r\nPlease add more documentation on this. Particularly focus on the json interaction AND on customization for various json streams. I understand in the clasic ASP.NET scenario not everyone will have a need for that - you just use the deserialized objects, But i.e. some of us have to make it work on a client that uses Websocket (i.e. my dotnet core desktop client connects to a websocket feed by a third party) and then documentation is lacking.","Url":"https://github.com/dotnet/corefx/issues/40626","RelatedDescription":"Open issue \"System.IO.Pipelines - documentation is inadequate\" (#40626)"},{"Id":"485915452","IsPullRequest":true,"CreatedAt":"2019-08-27T16:36:23","Actor":"steveharter","Number":"40624","RawContent":null,"Title":"[release/3.0] Fix issue where dictionary properties that immediately follow a skipped dictionary property were skipped.","State":"open","Body":"Port https://github.com/dotnet/corefx/pull/40490 and subsequent https://github.com/dotnet/corefx/pull/40598\r\n(cherry picked from commit fb30a2d and 7cc4a04) \r\n\r\n### Description\r\nSummary: dictionary values in JSON may be skipped in certain cases when they shouldn't be.\r\n\r\nDetail: when JSON that contains dictionary values is skipped as expected during deserialization (because the corresponding property on the object being deserialized doesn't have a setter, or `[JsonIgnore]` is used on that property), then other dictionaries also in the JSON (directly following the skipped property) that should **not** be skipped are instead skipped and not thus not deserialized.\r\n\r\nWe want to address this in 3.0 or 3.1.\r\n\r\n### Customer Impact:\r\nData loss when the issue is encountered.\r\n\r\n### Regression? \r\nNo\r\n\r\n### Risk: Low.\r\n\r\nThe fix is one line of code, and in an area that is very specific to deserializing objects and dictionaries. Several test permutations were added to cover different combinations\\ordering of skipped and non-skipped properties.","Url":"https://github.com/dotnet/corefx/pull/40624","RelatedDescription":"Open PR \"[release/3.0] Fix issue where dictionary properties that immediately follow a skipped dictionary property were skipped.\" (#40624)"},{"Id":"485811974","IsPullRequest":true,"CreatedAt":"2019-08-27T16:36:08","Actor":"janvorli","Number":"40617","RawContent":null,"Title":"Remove useless GdiPlus cleanup","State":"closed","Body":"Part of the cleanup was not compiled in and the rest didn't have any\r\neffect.","Url":"https://github.com/dotnet/corefx/pull/40617","RelatedDescription":"Closed or merged PR \"Remove useless GdiPlus cleanup\" (#40617)"},{"Id":"485869760","IsPullRequest":true,"CreatedAt":"2019-08-27T16:35:52","Actor":"stephentoub","Number":"40622","RawContent":null,"Title":"Remove stray \"#nullable enable\" from Pkcs","State":"closed","Body":"This assembly hasn't been reviewed yet for nullability annotations.  We don't want to be mislead by this one file saying it has been.\r\n\r\ncc: @bartonjs, @safern","Url":"https://github.com/dotnet/corefx/pull/40622","RelatedDescription":"Closed or merged PR \"Remove stray \"#nullable enable\" from Pkcs\" (#40622)"},{"Id":"485773014","IsPullRequest":true,"CreatedAt":"2019-08-27T15:34:00","Actor":"dotnet-maestro[bot]","Number":"40614","RawContent":null,"Title":"[release/3.0] Update dependencies from 3 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:79f1e123-800e-410f-94d7-08d690bc143a)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.11\r\n- **Date Produced**: 8/27/2019 2:26 AM\r\n- **Commit**: b33b6c20d855e7f9fdda6383ad12d849079f9b21\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-rc1-19426-11\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-rc1-19426-11\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-rc1-19426-11\r\n\r\n[marker]: <> (End:79f1e123-800e-410f-94d7-08d690bc143a)\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19426.12\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19426.12\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n[marker]: <> (Begin:fc000152-53a0-4a98-0b3e-08d6bc6f2d11)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190827.1\r\n- **Date Produced**: 8/27/2019 11:06 AM\r\n- **Commit**: 48fd58c24cddbc6c0b0de1c00204aae1170f4864\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190827.1\r\n\r\n[marker]: <> (End:fc000152-53a0-4a98-0b3e-08d6bc6f2d11)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40614","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from 3 repositories\" (#40614)"},{"Id":"485883285","IsPullRequest":false,"CreatedAt":"2019-08-27T15:33:10","Actor":"stephentoub","Number":"40623","RawContent":null,"Title":"Annotate remainder of .NET Core assemblies for nullable reference types","State":"open","Body":"In .NET Core 3.0, we annotated System.Private.CoreLib for nullable reference types, along with the reference assemblies that surface those types, and the implementations for all of the partial facades behind those reference assemblies.  That represents something around 20% of the surface area.  Post-.NET Core 3.0, we plan to annotate the rest.\r\n\r\nOur desired approach to annotating an assembly is to only do so once all of its dependencies are annotated.  That way, the assembly can be annotated as a unit, and barring any bugs that need to be fixed in a dependency, we won't need to spend time fixing up new warnings in higher-level assemblies as lower-level assemblies are annotated.\r\n\r\nThis leads to a semi-ordering of how assemblies should be annotated, from the \"bottom up\". Here is a rough grouping.  We can annotate everything in group 1 (in parallel if desired), then everything in group 2 (in parallel if desired), etc.  There is of course more parallelism than this available, as not every assembly in group N has a dependency on every assembly in group N - 1, but the graph is complicated and this is easier to visualize and reason about.\r\n\r\n(Note, too, that this process will involve API reviews, to validate the annotations that are being added.  As such, we do no yet want to begin on this effort in earnest until we have that process in place. cc: @terrajobst)\r\n\r\ncc: @dotnet/nullablefc, @cartermp \r\n\r\n#### 1 ####\r\n- [ ] Microsoft.Win32.Primitives\r\n- [ ] System.Collections.NonGeneric\r\n- [ ] System.Collections.Specialized\r\n- [ ] System.ComponentModel\r\n- [ ] System.ComponentModel.Primitives\r\n- [ ] System.Console\r\n- [ ] System.Diagnostics.DiagnosticSource\r\n- [ ] System.Drawing.Primitives\r\n- [ ] System.IO.Compression\r\n- [ ] System.IO.Pipelines\r\n- [ ] System.Linq\r\n- [ ] System.Linq.Parallel\r\n- [ ] System.Net.WebHeaderCollection\r\n- [ ] System.ObjectModel\r\n- [ ] System.Reflection.DispatchProxy\r\n- [ ] System.Reflection.TypeExtensions\r\n- [ ] System.Resources.Writer\r\n- [ ] System.Runtime.CompilerServices.Unsafe\r\n- [ ] System.Runtime.CompilerServices.VisualC\r\n- [ ] System.Runtime.InteropServices.RuntimeInformation\r\n- [ ] System.Runtime.Numerics\r\n- [ ] System.Runtime.Serialization.Formatters\r\n- [ ] System.Runtime.Serialization.Primitives\r\n- [ ] System.Security.Cryptography.Primitives\r\n- [ ] System.Security.Principal\r\n- [ ] System.Text.Encoding.CodePages\r\n- [ ] System.Text.Encodings.Web\r\n- [ ] System.Text.Json\r\n- [ ] System.Text.RegularExpressions\r\n- [ ] System.Threading.Channels\r\n- [ ] System.Threading.Tasks.Parallel\r\n- [ ] System.Transactions.Local\r\n- [ ] System.Web.HttpUtility\r\n\r\n#### 2 ####\r\n- [ ] System.Collections.Immutable\r\n- [ ] System.ComponentModel.EventBasedAsync\r\n- [ ] System.IO.Compression.Brotli\r\n- [ ] System.IO.FileSystem\r\n- [ ] System.IO.FileSystem.DriveInfo\r\n- [ ] System.IO.FileSystem.Watcher\r\n- [ ] System.IO.MemoryMappedFiles\r\n- [ ] System.Linq.Expressions\r\n- [ ] System.Linq.Queryable\r\n- [ ] System.Reflection.Metadata\r\n- [ ] System.Reflection.MetadataLoadContext\r\n- [ ] System.Security.Claims\r\n- [ ] System.Security.Cryptography.Encoding\r\n- [ ] System.Security.Principal.Windows\r\n\r\n#### 3 ####\r\n- [ ] Microsoft.Win32.SystemEvents\r\n- [ ] System.ComponentModel.Composition\r\n- [ ] System.Diagnostics.FileVersionInfo\r\n- [ ] System.Dynamic.Runtime\r\n- [ ] System.IO.Compression.ZipFile\r\n- [ ] System.Security.AccessControl\r\n- [ ] System.Security.Cryptography.Algorithms\r\n- [ ] System.Security.Cryptography.Cng\r\n- [ ] System.Security.Cryptography.Csp\r\n- [ ] System.Security.Cryptography.OpenSsl\r\n\r\n#### 4 ####\r\n- [ ] Microsoft.Win32.Registry\r\n- [ ] System.Diagnostics.Process\r\n- [ ] System.Diagnostics.TraceSource\r\n- [ ] System.Drawing.Common\r\n- [ ] System.IO.FileSystem.AccessControl\r\n- [ ] System.IO.IsolatedStorage\r\n- [ ] System.IO.Pipes\r\n- [ ] System.Net.Primitives\r\n- [ ] System.Net.WebSockets\r\n- [ ] System.Net.WebSockets.WebSocketProtocol\r\n- [ ] System.Security.Cryptography.X509Certificates\r\n\r\n#### 5 ####\r\n- [ ] Microsoft.VisualBasic.Core\r\n- [ ] System.IO.Pipes.AccessControl\r\n- [ ] System.Net.NameResolution\r\n- [ ] System.Net.Ping\r\n- [ ] System.Net.Security\r\n- [ ] System.Net.ServicePoint\r\n- [ ] System.Net.Sockets\r\n- [ ] System.Security.Cryptography.Pkcs\r\n\r\n#### 6 ####\r\n- [ ] System.Net.NetworkInformation\r\n- [ ] System.Net.WebProxy\r\n\r\n#### 7 ####\r\n- [ ] System.Net.Http\r\n- [ ] System.Net.Requests\r\n- [ ] System.Net.WebClient\r\n- [ ] System.Net.WebSockets.Client\r\n- [ ] System.Private.Xml\r\n- [ ] System.Private.Xml.Linq\r\n- [ ] System.Utf8String.Experimental\r\n- [ ] System.Xml.ReaderWriter\r\n- [ ] System.Xml.XDocument\r\n- [ ] System.Xml.XmlDocument\r\n- [ ] System.Xml.XmlSerializer\r\n- [ ] System.Xml.XPath\r\n- [ ] System.Xml.XPath.XDocument\r\n\r\n#### 8 ####\r\n- [ ] System.ComponentModel.TypeConverter\r\n- [ ] System.Data.Common\r\n- [ ] System.Data.DataSetExtensions\r\n- [ ] System.Data.Odbc\r\n- [ ] System.Data.SqlClient\r\n- [ ] System.Diagnostics.EventLog\r\n- [ ] System.Diagnostics.TextWriterTraceListener\r\n- [ ] System.DirectoryServices.Protocols\r\n- [ ] System.Net.HttpListener\r\n- [ ] System.Net.Mail\r\n- [ ] System.Private.DataContractSerialization\r\n- [ ] System.Runtime.Serialization.Json\r\n- [ ] System.Runtime.Serialization.Xml\r\n- [ ] System.ServiceProcess.ServiceController\r\n- [ ] System.Windows.Extensions\r\n\r\n#### 9 ####\r\n- [ ] System.Security.Permissions\r\n\r\n#### 10 ####\r\n- [ ] System.DirectoryServices\r\n\r\nThe following assemblies all reference `netstandard`, and thus shouldn't be annotated until `netstandard` is fully annotated (or until we change how these are built):\r\n\r\n- Microsoft.CSharp => netstandard\r\n- Microsoft.Win32.Registry.AccessControl => netstandard\r\n- System.CodeDom => netstandard\r\n- System.ComponentModel.Annotations => netstandard\r\n- System.ComponentModel.Composition.Registration => netstandard, System.Reflection.Context\r\n- System.Composition.AttributedModel => netstandard\r\n- System.Composition.Convention => netstandard, System.Composition.AttributedModel\r\n- System.Composition.Hosting => netstandard, System.Composition.Runtime\r\n- System.Composition.Runtime => netstandard\r\n- System.Composition.TypedParts => netstandard, System.Composition.Runtime, System.Composition.AttributedModel, System.Composition.Hosting\r\n- System.Configuration.ConfigurationManager => netstandard, System.Security.Cryptography.ProtectedData\r\n- System.Data.OleDb => netstandard, System.Diagnostics.PerformanceCounter, System.Configuration.ConfigurationManager\r\n- System.Diagnostics.PerformanceCounter => System.Configuration.ConfigurationManager\r\n- System.DirectoryServices.AccountManagement => System.Configuration.ConfigurationManager\r\n- System.IO.Packaging => netstandard\r\n- System.IO.Ports => netstandard\r\n- System.Json => netstandard\r\n- System.Management => System.CodeDom\r\n- System.Net.Http.WinHttpHandler => netstandard\r\n- System.Numerics.Tensors => netstandard\r\n- System.Reflection.Context => netstandard\r\n- System.Resources.Extensions => netstandard\r\n- System.Runtime.Caching => netstandard, System.Configuration.ConfigurationManager\r\n- System.Runtime.WindowsRuntime => Windows\r\n- System.Runtime.WindowsRuntime.UI.Xaml => System.Runtime.WindowsRuntime\r\n- System.Security.Cryptography.ProtectedData => netstandard\r\n- System.Security.Cryptography.Xml => netstandard\r\n- System.ServiceModel.Syndication => netstandard\r\n- System.Threading.AccessControl => netstandard\r\n- System.Threading.Tasks.Dataflow => netstandard","Url":"https://github.com/dotnet/corefx/issues/40623","RelatedDescription":"Open issue \"Annotate remainder of .NET Core assemblies for nullable reference types\" (#40623)"},{"Id":"485860995","IsPullRequest":false,"CreatedAt":"2019-08-27T14:54:05","Actor":"omariom","Number":"40621","RawContent":null,"Title":"IndexOutOfRangeException in HashSet.EnsureCapacity method","State":"open","Body":"[SetCapacity assumes `hashCode` is always positive](https://github.com/dotnet/corefx/blob/2a0f48da86297f9e60f5f5257dbb7eee1cbb5a3e/src/System.Collections/src/System/Collections/Generic/HashSet.cs#L1194).\r\n\r\nRepro:\r\n```C#\r\n    var set = new HashSet<int>();\r\n    set.Add(0);\r\n    set.Add(1);\r\n    set.Remove(0);\r\n    \r\n    set.EnsureCapacity(7);\r\n```","Url":"https://github.com/dotnet/corefx/issues/40621","RelatedDescription":"Open issue \"IndexOutOfRangeException in HashSet.EnsureCapacity method\" (#40621)"},{"Id":"485808478","IsPullRequest":true,"CreatedAt":"2019-08-27T14:50:22","Actor":"dotnet-maestro[bot]","Number":"40616","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.15\r\n- **Date Produced**: 8/27/2019 7:01 AM\r\n- **Commit**: 33b5bc3460986bbddcc4e674ca58eb3704570c39\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19426.15\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19426.15\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19426.15\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190826.13\r\n- **Date Produced**: 8/27/2019 7:30 AM\r\n- **Commit**: 7055b496a30dfe0f66a2f555cad31502473d144b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19426.13\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19426.13\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190826.2\r\n- **Date Produced**: 8/26/2019 12:54 PM\r\n- **Commit**: e92c667326d24e581c23ab052b4edbd325a8643f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19426.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard\" (#40616)"},{"Id":"485854587","IsPullRequest":false,"CreatedAt":"2019-08-27T14:43:12","Actor":"fengzhenqiong","Number":"40620","RawContent":null,"Title":"Bug with System.Linq.Enumerable.Average<long>(this IEnumerable<long> source) method","State":"open","Body":"Seems there's something wrong with the `System.Linq.Enumerable.Average<long>(this IEnumerable<long> source)` method.\r\n\r\nLet's say, if I have a collection with only two large numbers (larger than 2^62), if I call this method it will throw System.OverflowException saying that \"Arithmetic operation resulted in an overflow\".\r\n\r\nI used the following code:\r\n`\r\nvar numbers = new[] {8000000000000000002L, 7999999999999999998L};\r\nConsole.WriteLine(numbers.Average());\r\n`\r\n\r\nI also had a look at the source code in .NET Framework 4.8 and seems this problem is there, too. Is this a bug (I think it is), or do you have other considerations?\r\n\r\nAnyway, fixing this problem is quite straightforward so I think maybe we should get rid of it.\r\n\r\nThanks.","Url":"https://github.com/dotnet/corefx/issues/40620","RelatedDescription":"Open issue \"Bug with System.Linq.Enumerable.Average<long>(this IEnumerable<long> source) method\" (#40620)"},{"Id":"485836147","IsPullRequest":false,"CreatedAt":"2019-08-27T14:12:04","Actor":"lambrech","Number":"40618","RawContent":null,"Title":"System.Text.Json.Serialization.JsonExtensionDataAttribute not working with dotnet 3 preview 8 release","State":"open","Body":"I am using the System.Text.Json.Serialization.JsonExtensionDataAttribute and have some code that worked perfectly with dotnet core 3 preview 7 release.\r\nToday I updated to preview 8 and it looks like the deserialization logic was changed which broke the (or at least my) usage of the JsonExtensionDataAttribute.\r\n\r\nI created a small repository to demonstrate the issue.\r\n[https://github.com/lambrech/JsonExtensionDataAttributeIssue](https://github.com/lambrech/JsonExtensionDataAttributeIssue)\r\nPlease note, that I am using dotnetcoreapp2.2 on purpose, so I could easily switch between the System.Text.Json nuget packages for preview 7 and 8 to verify my problem.\r\n\r\n\r\nTheProgram.cs contains code for 2 TestCases. Both work as expected with the preview7 nuget package.\r\nWith preview8 nuget package in the first testcase the deserializer tries to Deserialize into the wrong datatype:\r\n\"System.InvalidCastException: 'Unable to cast object of type 'JsonExtensionDataAttributeIssue.Two' to type 'JsonExtensionDataAttributeIssue.One'.'\"\r\n\r\nIn the second testcase I get an unexpected System.NullReferenceException.\r\n\r\n\r\n\r\nI am not that experienced so maybe I am just using it wrong. But since it was working perfectly with the preview7 build I thought its worth opening an issue for that.\r\n\r\n\r\nAs mentioned before I am not that experienced, so if you need more information or the like, just tell me.","Url":"https://github.com/dotnet/corefx/issues/40618","RelatedDescription":"Open issue \"System.Text.Json.Serialization.JsonExtensionDataAttribute not working with dotnet 3 preview 8 release\" (#40618)"},{"Id":"485766687","IsPullRequest":true,"CreatedAt":"2019-08-27T13:22:18","Actor":"dotnet-maestro[bot]","Number":"40613","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19426.12\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19426.12\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19426.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19426.12\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#40613)"},{"Id":"485756237","IsPullRequest":false,"CreatedAt":"2019-08-27T11:37:08","Actor":"orcun","Number":"40612","RawContent":null,"Title":"Alternative to attributes for System.Text.Json serialization metadata","State":"open","Body":"Attributes restrict the usage, especially for auto-generated codes. A type safe code based run-time configuration would be preferable in many scenarios. In other words, a generic fluent builder API to configure serialization per class and properties would be a great improvement.\r\n\r\nFrankly I was surprised to find that there were just attributes.","Url":"https://github.com/dotnet/corefx/issues/40612","RelatedDescription":"Open issue \"Alternative to attributes for System.Text.Json serialization metadata\" (#40612)"},{"Id":"485691351","IsPullRequest":true,"CreatedAt":"2019-08-27T09:22:28","Actor":"mandawah","Number":"40611","RawContent":null,"Title":"FileSystem.Unix.File.Move uses \"rename\" in more cases","State":"open","Body":"with the goal of avoiding link/copy when possible, since not reverting to LinkOrCopy when not necessary improves performance on file systems that do not support hard links, such as FAT.\r\n\r\nBefore this PR \"rename\" is used only when source and dest file exist and are on the same device and are the same file on that device.\r\n\r\nWith this PR \"rename\" is used when source file exist and source and dest are on the same device and either source and dest are the same file on that device (as before) **or dest file does not exist (new)**.\r\n\r\nThis latter case permits to use \"rename\" for simply moving a file to an non existing new name on the same device, instead of \"LinkOrCopyFile\". Consequently, calling File.Move for such cases on file systems that do not support link (e.g. FAT) will result in much faster operations, because copy won't be used.\r\n\r\n\r\nSee https://github.com/mono/mono/issues/16435","Url":"https://github.com/dotnet/corefx/pull/40611","RelatedDescription":"Open PR \"FileSystem.Unix.File.Move uses \"rename\" in more cases\" (#40611)"},{"Id":"485683183","IsPullRequest":false,"CreatedAt":"2019-08-27T09:07:25","Actor":"roji","Number":"40610","RawContent":null,"Title":"Annotate System.Data for nullability","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/issues/40610","RelatedDescription":"Open issue \"Annotate System.Data for nullability\" (#40610)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"486118937","IsPullRequest":false,"CreatedAt":"2019-08-28T01:57:11","Actor":"davkean","Number":"38330","RawContent":null,"Title":"[Regression] ServiceHub.RoslynCodeAnalysisService32.exe is OOMing multiple times a day","State":"open","Body":"**Version Used**: \r\nVersion 16.3.0 Preview 3.0 [29221.207.master]\r\n\r\nThis is a regresssion, either because we've opt'd into more analyzers when we moved over to .editorconfig enforcement of analyzer levels, or because we're running on newer builds of VS.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `git clone http://github.com/dotnet/project-system`\r\n2. `cd project-system`\r\n3. `git checkout 369551a45088071ec37673d11cfca67658c5ba25`\r\n4. `ProjectSystem.sln`\r\n5. Work for a couple of hours.\r\n\r\nThis occurs 3 or 4 times a day, and I've also experienced it in other codebases. I had a look at the watsons and every time this crashes its getting into a unique bucket due to the random nature of what frame the OOM is being thrown.\r\n\r\n[internalshare]\\\\public\\davkean\\Roslyn\\38330.zip","Url":"https://github.com/dotnet/roslyn/issues/38330","RelatedDescription":"Open issue \"[Regression] ServiceHub.RoslynCodeAnalysisService32.exe is OOMing multiple times a day\" (#38330)"},{"Id":"486118904","IsPullRequest":false,"CreatedAt":"2019-08-28T01:57:05","Actor":"WChrisK","Number":"38329","RawContent":null,"Title":"MaybeNullWhenAttribute ignored on TryGetValue, CS8600 nullable reference warning emitted","State":"open","Body":"**Version Used**:  VS2019 16.3.0 Preview 2.0, with .NET Core 3.0.100-preview8-013656\r\n\r\n**Steps to Reproduce**:\r\n\r\n1) Make a new project and use`<Nullable>enable</Nullable>` with a netcoreapp3.0 console project.\r\n\r\n2) Set the following code\r\n\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\n\r\nnamespace NullTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Dictionary<int, Program> dictionary = new Dictionary<int, Program>();\r\n\r\n            // CS8600 warning here:       v\r\n            if (dictionary.TryGetValue(5, out Program val))\r\n                Console.WriteLine(val);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**: No warning.\r\n\r\n**Actual Behavior**: Warning appears: _CS8600: Converting null literal or possible null value to non-nullable type_.\r\n\r\nThis was (supposedly recently) attributed with\r\n\r\n```cs\r\npublic bool TryGetValue(TKey key, [MaybeNullWhen(false)] out TValue value);\r\n```\r\n\r\nbut the attribute is not be respected in the example I posted. Or am I using some outdated version and need to update? I assume I'm on the bleeding edge releases but I can easily be wrong. I also use `<LangVersion>preview</LangVersion>` for what its worth.","Url":"https://github.com/dotnet/roslyn/issues/38329","RelatedDescription":"Open issue \"MaybeNullWhenAttribute ignored on TryGetValue, CS8600 nullable reference warning emitted\" (#38329)"},{"Id":"486102712","IsPullRequest":true,"CreatedAt":"2019-08-28T00:43:19","Actor":"petrroll","Number":"38328","RawContent":null,"Title":"Show error every time CallHierarchyView doesn't a find suitable node.","State":"open","Body":"The simplest & quickest hot-fix for #38303\r\n\r\nShould be expended with allowing way more locations instead.","Url":"https://github.com/dotnet/roslyn/pull/38328","RelatedDescription":"Open PR \"Show error every time CallHierarchyView doesn't a find suitable node.\" (#38328)"},{"Id":"486101731","IsPullRequest":false,"CreatedAt":"2019-08-28T00:38:50","Actor":"stephentoub","Number":"38327","RawContent":null,"Title":"Duplicate attribute error for [NotNull] used in partial methods","State":"open","Body":"**Version Used**: \r\n3.3.0-beta3-19415-01+f5ba9f2c61a2fe853dc4913888d40df221539147\r\n\r\n**Steps to Reproduce**:\r\nhttps://sharplab.io/#v2:EYLgtghgzgLgpgJwD4AEBMBGAsAKBQBgAIUMA6AEQEsIBzAOwHtZKBjKUgYQYBM4BBOhAA2ATyiUoAbly4UAZkIAHCAhjUhxNIQ64A3rkKHiGAGxKVa4cQAshAGIMGACgRwAZsfwB+QlACU0jhGxmbKquo2hABCKi7unj7+gcEkoRYRKLYAWo5OANoAcgwwBQCuQkIAuoSuHiTevgG4AL6yCmGWGujaegZGqebhVpn2ubUJjYQAvAB8hDAAFggMAO6EdHBrRTAAkmCKQnBgcHTw3ACiAB4scIpqDHROTUH9poOdkTEI+dtlFdXjeqJPzTOaLZZrDZbYp7A5HE5nK43O6UB5PZKvNJDLrZXKFYp/Ko1eJAyazeZLVbrTaEbaww7HU5wC7XW73R7PVo4XCCY5QZQ3YwUaj0JhqNicHj8QSicRQXovQx5PgwGAISjAUrwACqUFocCcKrVGq1cAAKioaHAYOw7JQ4EJuIQkIQjerNfALQgrTbSAAFFQQY7wBDO12q92mr0+9h+5aKRAwERht0mz2W63sABK1tKCDoADVhKU4AAaQg7OgLRCUM7TQhuYRQOB+Sp9QzyXxwYTMzS0gnlISpj1wQggcPGkeEXSELnNIA===\r\n```C#\r\nusing System;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nclass Program\r\n{\r\n    static void Main() { }\r\n}\r\n\r\npublic partial class C\r\n{\r\n    static partial void Foo(ref string? s);\r\n    static partial void Bar(ref string? s);\r\n    static partial void Zoo([NotNull] ref string? s);\r\n}\r\npublic partial class C\r\n{\r\n    static partial void Foo(ref string? s) => throw new NotImplementedException();\r\n    static partial void Bar([NotNull] ref string? s) => throw new NotImplementedException();\r\n    static partial void Zoo([NotNull] ref string? s) => throw new NotImplementedException();\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nCompiles.\r\n\r\n**Actual Behavior**:\r\nProduces a `CS0579\tDuplicate 'NotNull' attribute` error on the use of `[NotNull]` in the first C.Zoo partial. \r\n\r\ncc: @jcouv, @cston","Url":"https://github.com/dotnet/roslyn/issues/38327","RelatedDescription":"Open issue \"Duplicate attribute error for [NotNull] used in partial methods\" (#38327)"},{"Id":"486098099","IsPullRequest":false,"CreatedAt":"2019-08-28T00:23:18","Actor":"genlu","Number":"38326","RawContent":null,"Title":"Public API for `GetDocument(DocumentId)` that returns non-null Document","State":"open","Body":"We should add a public API to get `Document` from a `DocumentId` that returns a non-null `Document` or throw if not found.  This would help us avoid using null-forgiving operator (!) when enabling nullable ref.\r\n\r\ne.g.\r\n\r\n```cs\r\npublic Document GetRequiredDocument(DocumentId documentId);\r\n```\r\n\r\nWe will probably also need an analyzer/codefix to flag usage of `GetDocument(id)!` in code with nullable-ref already enabled.","Url":"https://github.com/dotnet/roslyn/issues/38326","RelatedDescription":"Open issue \"Public API for `GetDocument(DocumentId)` that returns non-null Document\" (#38326)"},{"Id":"486095056","IsPullRequest":true,"CreatedAt":"2019-08-28T00:10:29","Actor":"RikkiGibson","Number":"38325","RawContent":null,"Title":"Allow is operators to update null state of value types","State":"open","Body":"Closes #38213 \r\n\r\nI saw that VisitIsOperator requires the operand type to not be value type in order to update the flow-state to not-null. I don't see a reason why it should require this, so I just removed the check and added a few tests for @sharwell's scenario.","Url":"https://github.com/dotnet/roslyn/pull/38325","RelatedDescription":"Open PR \"Allow is operators to update null state of value types\" (#38325)"},{"Id":"486093542","IsPullRequest":true,"CreatedAt":"2019-08-28T00:04:45","Actor":"dibarbet","Number":"38324","RawContent":null,"Title":"Remove IVTs to liveshare","State":"open","Body":"DRAFT - Still testing, checking CI","Url":"https://github.com/dotnet/roslyn/pull/38324","RelatedDescription":"Open PR \"Remove IVTs to liveshare\" (#38324)"},{"Id":"486093353","IsPullRequest":true,"CreatedAt":"2019-08-28T00:04:05","Actor":"daytonellwanger","Number":"38323","RawContent":null,"Title":"LSP Server Handle DisplayTextPrefix and DisplayTextSuffix on Completion Items","State":"open","Body":"Currently the  LSP completion item label is being set equal to the Roslyn completion item's display text. This PR also includes the item's `DisplayTextPrefix` and `DisplayTextSuffix` on the label.","Url":"https://github.com/dotnet/roslyn/pull/38323","RelatedDescription":"Open PR \"LSP Server Handle DisplayTextPrefix and DisplayTextSuffix on Completion Items\" (#38323)"},{"Id":"486084041","IsPullRequest":true,"CreatedAt":"2019-08-27T23:31:48","Actor":"petrroll","Number":"38322","RawContent":null,"Title":"Remove withinTypeSyntax restriction for UseExplicit/ImplicitType refactoring.","State":"open","Body":"Lifts a restriction that selection/caret must intersect the typeSyntax for Use[Explicit/Implicit]Type refactoring. \r\n\r\nWhile it potentially introduces noise (addition refactorings) it shouldn't be much of an issue do to the way ordering works. Since the applicableToSpan is still the type, the distance to it should be sufficiently larger than to any other refactoring. \r\n\r\nIf it proves to be problematic the ordering via applicableToSpan should be updated to create distance for refactorings that whose applicableToSpan doesn't intersect current selection/caret location.\r\n\r\nWork for #35525","Url":"https://github.com/dotnet/roslyn/pull/38322","RelatedDescription":"Open PR \"Remove withinTypeSyntax restriction for UseExplicit/ImplicitType refactoring.\" (#38322)"},{"Id":"486082210","IsPullRequest":true,"CreatedAt":"2019-08-27T23:25:24","Actor":"jasonmalinowski","Number":"38321","RawContent":null,"Title":"Delete IEditorClassificationService","State":"open","Body":"F# has now moved to it's own service which is supported so this can be deleted.","Url":"https://github.com/dotnet/roslyn/pull/38321","RelatedDescription":"Open PR \"Delete IEditorClassificationService\" (#38321)"},{"Id":"485987975","IsPullRequest":false,"CreatedAt":"2019-08-27T23:24:29","Actor":"CyrusNajmabadi","Number":"38314","RawContent":null,"Title":"Find-Refs filter-list includes lots of options unnecessarily.","State":"closed","Body":"Here's an example of what i see when i bring up the filter list:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/63801268-beb21d80-c8c4-11e9-802a-c45f40548701.png)\r\n\r\nNote that in my case i just have 28 reads and 2 writes.  However, the list is filled with a bunch of other inapplicable cases, all with 0 count.  These should not be in the list.  Note: this is def a bug.  No where else do things work this way.  We always only see items for the values actually in the list.  For example, imagine if filtering on error code worked this way.  You'd have thousands of items in the list, almost all with `(0)` next to them.  Instead, the control works properly and you get:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/63801363-f5883380-c8c4-11e9-93d5-90d51c4c5d8a.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/38314","RelatedDescription":"Closed issue \"Find-Refs filter-list includes lots of options unnecessarily.\" (#38314)"},{"Id":"486076075","IsPullRequest":true,"CreatedAt":"2019-08-27T23:04:15","Actor":"cston","Number":"38320","RawContent":null,"Title":"Re-infer unary and binary operators in NullableWalker","State":"open","Body":"See #29605.","Url":"https://github.com/dotnet/roslyn/pull/38320","RelatedDescription":"Open PR \"Re-infer unary and binary operators in NullableWalker\" (#38320)"},{"Id":"486075180","IsPullRequest":true,"CreatedAt":"2019-08-27T23:01:11","Actor":"AlekseyTs","Number":"38319","RawContent":null,"Title":"Enable tests disabled due to changes in behavior in runtime.","State":"open","Body":"Fixes #32576. Fixes #33564.","Url":"https://github.com/dotnet/roslyn/pull/38319","RelatedDescription":"Open PR \"Enable tests disabled due to changes in behavior in runtime.\" (#38319)"},{"Id":"486071690","IsPullRequest":true,"CreatedAt":"2019-08-27T22:50:07","Actor":"jcouv","Number":"38318","RawContent":null,"Title":"Report error for async-iterator with expression-body","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/38201\r\n\r\nAlso adjusts the diagnostic reporting to avoid duplicates reported by `GetIteratorElementType`.","Url":"https://github.com/dotnet/roslyn/pull/38318","RelatedDescription":"Open PR \"Report error for async-iterator with expression-body\" (#38318)"},{"Id":"486045113","IsPullRequest":false,"CreatedAt":"2019-08-27T21:32:41","Actor":"heejaechang","Number":"38317","RawContent":null,"Title":"null exception on HaveSameReturnTypes ","State":"open","Body":"I only have callstack\r\n\r\n```\r\nStreamJsonRpc.RemoteInvocationException : Object reference not set to an instance of an object.\r\n   at async StreamJsonRpc.JsonRpc.InvokeCoreAsync[TResult](<Unknown Parameters>)\r\n   at async Microsoft.VisualStudio.LanguageServices.Remote.JsonRpcEx.InvokeAsync[T](<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n---> (Remote Exception) {\r\n  \"type\": \"System.NullReferenceException\",\r\n  \"message\": \"Object reference not set to an instance of an object.\",\r\n  \"stack\": \"   at Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer.HaveSameReturnTypes(Symbol member1, TypeMap typeMap1, Symbol member2, TypeMap typeMap2, TypeCompareKind typeComparison)\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer.Equals(Symbol member1, Symbol member2)\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers.MakePropertyAccessorOverriddenOrHiddenMembers(MethodSymbol accessor, PropertySymbol associatedProperty)\\r\\n   at Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers.MakeOverriddenOrHiddenMembersWorker(Symbol member)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol.get_OverriddenOrHiddenMembers()\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol.get_OverriddenMethod()\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertyAccessorSymbol.MethodChecks(DiagnosticBag diagnostics)\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol.LazyMethodChecks()\\r\\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol.get_OverriddenOrHiddenMembers()\\r\\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol.get_OverriddenMethod()\\r\\n   at Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertyAccessorSymbol..ctor(NamedTypeSymbol containingType, String name, SourcePropertySymbol property, DeclarationModifiers propertyModifiers, ImmutableArray`1 explicitInterfaceImplementations, Location location, ArrowExpressionClauseSyntax syntax, Boolean isExplicitInterfaceImplementation, DiagnosticBag diagnostics)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertyAccessorSymbol.CreateAccessorSymbol(NamedTypeSymbol containingType, SourcePropertySymbol property, DeclarationModifiers propertyModifiers, String propertyName, ArrowExpressionClauseSyntax syntax, PropertySymbol explicitlyImplementedPropertyOpt, String aliasQualifierOpt, Boolean isExplicitInterfaceImplementation, DiagnosticBag diagnostics)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol..ctor(SourceMemberContainerTypeSymbol containingType, Binder bodyBinder, BasePropertyDeclarationSyntax syntax, String name, Location location, DiagnosticBag diagnostics)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol.Create(SourceMemberContainerTypeSymbol containingType, Binder bodyBinder, PropertyDeclarationSyntax syntax, DiagnosticBag diagnostics)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.AddNonTypeMembers(MembersAndInitializersBuilder builder, SyntaxList`1 members, DiagnosticBag diagnostics)\\r\\n \r\n  at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.AddDeclaredNontypeMembers(MembersAndInitializersBuilder builder, DiagnosticBag diagnostics)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.BuildMembersAndInitializers(DiagnosticBag diagnostics)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembersAndInitializers()\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.MakeAllMembers(DiagnosticBag diagnostics)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembersByNameSlow()\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembersByName()\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol.GetMembers(String name)\\r\\n   \r\nat Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetDeclaredMember(NamespaceOrTypeSymbol container, TextSpan declarationSpan, String name)\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetDeclaredMemberSymbol(CSharpSyntaxNode declarationSyntax)\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetDeclaredSymbol(MemberDeclarationSyntax declarationSyntax, CancellationToken cancellationToken)\\r\\n \r\n  at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.CreateMemberModel(CSharpSyntaxNode node)\\r\\n   at System.Collections.Immutable.ImmutableInterlocked.GetOrAdd[TKey,TValue](ImmutableDictionary`2& location, TKey key, Func`2 valueFactory)\\r\\n  \r\n at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetOrAddModel(CSharpSyntaxNode node)\\r\\n   at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetMemberModel(SyntaxNode node)\\r\\n   at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetMemberModel(Int32 position)\\r\\n   at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetEnclosingBinderInternal(Int32 position)\\r\\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetEnclosingSymbol(Int32 position, CancellationToken cancellationToken)\\r\\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetEnclosingSymbolCore(Int32 position, CancellationToken cancellationToken)\\r\\n   at Microsoft.CodeAnalysis.Shared.Extensions.SemanticModelExtensions.GetEnclosingSymbol[TSymbol](SemanticModel semanticModel, Int32 position, CancellationToken cancellationToken)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.ConstructorInitializerSymbolReferenceFinder.<>c__DisplayClass2_0.<FindReferencesInDocumentAsync>g__tokensMatch|0(SyntaxToken t)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractReferenceFinder.<FindReferencesInTokensAsync>d__15.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.ConstructorInitializerSymbolReferenceFinder.<FindReferencesInDocumentAsync>d__2.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentQueueAsync>d__15.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentQueueAsync>d__15.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectAsync>d__28.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectAsync>d__27.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectAsync>d__26.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectsAsync>d__25.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessAsync>d__12.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__31.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__37.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<FindAsync>d__1`1.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.Remote.CodeAnalysisService.<>c__DisplayClass3_0.<<GetReferenceCountAsync>b__0>d.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.Remote.ServiceBase.<RunServiceAsync>d__27`1.MoveNext()\",\r\n  \"code\": -2147467261,\r\n  \"inner\": null\r\n} <--- \r\n\r\n```\r\n\r\nhappened while changing parameter type of one of method.","Url":"https://github.com/dotnet/roslyn/issues/38317","RelatedDescription":"Open issue \"null exception on HaveSameReturnTypes \" (#38317)"},{"Id":"486023966","IsPullRequest":true,"CreatedAt":"2019-08-27T20:42:30","Actor":"RikkiGibson","Number":"38316","RawContent":null,"Title":"Make Task<T> nullable covariant","State":"open","Body":"This is a possible solution for #36894. I think LDT needs to discuss before we consider taking this change.","Url":"https://github.com/dotnet/roslyn/pull/38316","RelatedDescription":"Open PR \"Make Task<T> nullable covariant\" (#38316)"},{"Id":"485995486","IsPullRequest":false,"CreatedAt":"2019-08-27T19:36:56","Actor":"heejaechang","Number":"38315","RawContent":null,"Title":"guard over duplicated project references in msbuildworkspace","State":"open","Body":"our VS layer has a proper safeguard on malformed project files such as duplicated p2p references.\r\n\r\nit looks like MSBuildWorkspace doesn't have one. causing this kind of exception.\r\n\r\n```\r\nUnhandled exception: System.ArgumentException: An item with the same key has already been added.\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at Microsoft.CodeAnalysis.SolutionState.CompilationTracker.<FinalizeCompilationAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.SolutionState.CompilationTracker.<GetOrBuildCompilationInfoAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.SolutionState.CompilationTracker.<GetCompilationSlowAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.SolutionState.CompilationTracker.<GetMetadataReferenceAsync>d__32.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.CodeAnalysis.SolutionState.CompilationTracker.<FinalizeCompilationAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.SolutionState.CompilationTracker.<GetOrBuildCompilationInfoAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nlooks like this line - http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/Workspace/Solution/SolutionState.CompilationTracker.cs,643\r\n\r\nwe should either let CompilationTracker handle this situation or update MSbuildWorkspace to handle this case.","Url":"https://github.com/dotnet/roslyn/issues/38315","RelatedDescription":"Open issue \"guard over duplicated project references in msbuildworkspace\" (#38315)"},{"Id":"485964465","IsPullRequest":true,"CreatedAt":"2019-08-27T18:28:01","Actor":"jcouv","Number":"38313","RawContent":null,"Title":"Use inferred nullability of discards","State":"open","Body":"This addresses simple discards (ie. discards in assignments). Fixes https://github.com/dotnet/roslyn/issues/35036\r\n\r\nDiscards in `out` variables work (`Discard_OutDiscard`).\r\nThere's an issue tracking deconstruction more generally, so discards in deconstructions aren't handled. Same for patterns.","Url":"https://github.com/dotnet/roslyn/pull/38313","RelatedDescription":"Open PR \"Use inferred nullability of discards\" (#38313)"},{"Id":"485608926","IsPullRequest":true,"CreatedAt":"2019-08-27T17:44:34","Actor":"dotnet-maestro[bot]","Number":"38307","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190826.12\r\n- **Date Produced**: 8/26/2019 10:46 PM\r\n- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19426.12\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/38307","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#38307)"},{"Id":"485938231","IsPullRequest":false,"CreatedAt":"2019-08-27T17:28:53","Actor":"jaredpar","Number":"38312","RawContent":null,"Title":"Compiler NuPkg MSBuild version check needs to be updated. ","State":"open","Body":"Example: \r\n\r\nhttps://github.com/dotnet/roslyn/blob/master/src/NuGet/Microsoft.Net.Compilers/build/Microsoft.Net.Compilers.props#L18\r\n\r\nThe props file here, and for related packages, need to be labeling everything before 16.0 as unsupported. That includes 15.0 - 15.3. ","Url":"https://github.com/dotnet/roslyn/issues/38312","RelatedDescription":"Open issue \"Compiler NuPkg MSBuild version check needs to be updated. \" (#38312)"},{"Id":"485804104","IsPullRequest":false,"CreatedAt":"2019-08-27T13:16:14","Actor":"usr-sse2","Number":"38311","RawContent":null,"Title":"[Tests] These tests seem to check SyntaxToken inside of SyntaxNode","State":"open","Body":"See https://github.com/dotnet/roslyn/blob/master/src/Compilers/Core/CodeAnalysisTest/CommonSyntaxTests.cs#L181-201\r\nNames `node`, `token` and `trivia` suggest that this test was intended to test `VisualBasicExtensions.Kind` methods for `SyntaxNode`, `SyntaxToken` and `SyntaxTrivia` of C#. In fact, both first and second invocation test the same method `Kind(this SyntaxToken token)`, because `node` is actually a `SyntaxToken`.\r\nThe same applies to `VisualBasicSyntax_CSharpKind` test as well.","Url":"https://github.com/dotnet/roslyn/issues/38311","RelatedDescription":"Open issue \"[Tests] These tests seem to check SyntaxToken inside of SyntaxNode\" (#38311)"},{"Id":"485785944","IsPullRequest":false,"CreatedAt":"2019-08-27T12:41:27","Actor":"CreateAndInject","Number":"38310","RawContent":null,"Title":"Show content and select full row in bookmark window.","State":"open","Body":"Now, bookmark window only show file path, it's better to show content preview.\r\nAnd I think should highlight full row rather than only the first column.","Url":"https://github.com/dotnet/roslyn/issues/38310","RelatedDescription":"Open issue \"Show content and select full row in bookmark window.\" (#38310)"},{"Id":"485749856","IsPullRequest":false,"CreatedAt":"2019-08-27T11:22:02","Actor":"rubenprins","Number":"38309","RawContent":null,"Title":"FailFast in SpillSequenceSpiller.VisitUserDefinedConditionalLogicalOperator","State":"open","Body":"**Version Used**:\r\n\r\n.NET Core SDK 2.2.401\r\n\r\n**Steps to Reproduce**:\r\n\r\nNone as of yet; affected project is rather large and no source information is available in the error message.\r\n\r\n**Expected Behavior**:\r\n\r\nProject builds (it does under 2.2.108).\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 28,76 ms for <path-to-project>.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error : FailFast: [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error : System.InvalidOperationException: This program location is thought to be unreachable. [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitUserDefinedConditionalLogicalOperator(BoundUserDefinedConditionalLogicalOperator node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitReturnStatement(BoundReturnStatement node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReturnStatement.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitLambda(BoundLambda node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitLambda(BoundLambda node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitConversion(BoundConversion node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundConversion.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpressionList(BoundSpillSequenceBuilder& builder, ImmutableArray`1 args, ImmutableArray`1 refKinds, Boolean forceSpill, Boolean sideEffectsOnly) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitCall(BoundCall node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundCall.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitAssignmentOperator(BoundAssignmentOperator node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpressionStatement(BoundExpressionStatement node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePointWithSpan(BoundSequencePointWithSpan node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitStatementList(BoundStatementList node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundStatementList.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePointWithSpan(BoundSequencePointWithSpan node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.Rewrite(BoundStatement body, MethodSymbol method, TypeCompilationState compilationState, DiagnosticBag diagnostics) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(CSharpCompilation compilation, MethodSymbol method, Int32 methodOrdinal, NamedTypeSymbol containingType, BoundStatement statement, TypeCompilationState compilationState, SynthesizedSubmissionFields previousSubmissionFields, Boolean allowOmissionOfConditionalCalls, Boolean instrumentForDynamicAnalysis, ImmutableArray`1& dynamicAnalysisSpans, DebugDocumentProvider debugDocumentProvider, DiagnosticBag diagnostics, Boolean& sawLambdas, Boolean& sawLocalFunctions, Boolean& sawAwaitInExceptionHandler) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :  [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Environment.FailFast(System.String, System.Exception) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitUserDefinedConditionalLogicalOperator(Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReturnStatement.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitLambda(Microsoft.CodeAnalysis.CSharp.BoundLambda) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitLambda(Microsoft.CodeAnalysis.CSharp.BoundLambda) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitConversion(Microsoft.CodeAnalysis.CSharp.BoundConversion) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundConversion.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpressionList(BoundSpillSequenceBuilder ByRef, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundExpression>, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.RefKind>, Boolean, Boolean) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundCall.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitAssignmentOperator(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePointWithSpan(Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitStatementList(Microsoft.CodeAnalysis.CSharp.BoundStatementList) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundStatementList.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePointWithSpan(Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.DiagnosticBag) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.CSharpCompilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Boolean, Boolean, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, Microsoft.CodeAnalysis.DiagnosticBag, Boolean ByRef, Boolean ByRef, Boolean ByRef) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0() [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.ThreadPoolWorkQueue.Dispatch() [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :  [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error : Exception details: [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error : System.InvalidOperationException: This program location is thought to be unreachable. [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitUserDefinedConditionalLogicalOperator(BoundUserDefinedConditionalLogicalOperator node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundUserDefinedConditionalLogicalOperator.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitReturnStatement(BoundReturnStatement node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReturnStatement.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitLambda(BoundLambda node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitLambda(BoundLambda node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitConversion(BoundConversion node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundConversion.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpressionList(BoundSpillSequenceBuilder& builder, ImmutableArray`1 args, ImmutableArray`1 refKinds, Boolean forceSpill, Boolean sideEffectsOnly) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitCall(BoundCall node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundCall.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitAssignmentOperator(BoundAssignmentOperator node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpression(BoundSpillSequenceBuilder& builder, BoundExpression expression) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.VisitExpressionStatement(BoundExpressionStatement node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePointWithSpan(BoundSequencePointWithSpan node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitStatementList(BoundStatementList node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundStatementList.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePointWithSpan(BoundSequencePointWithSpan node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.SpillSequenceSpiller.Rewrite(BoundStatement body, MethodSymbol method, TypeCompilationState compilationState, DiagnosticBag diagnostics) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(CSharpCompilation compilation, MethodSymbol method, Int32 methodOrdinal, NamedTypeSymbol containingType, BoundStatement statement, TypeCompilationState compilationState, SynthesizedSubmissionFields previousSubmissionFields, Boolean allowOmissionOfConditionalCalls, Boolean instrumentForDynamicAnalysis, ImmutableArray`1& dynamicAnalysisSpans, DebugDocumentProvider debugDocumentProvider, DiagnosticBag diagnostics, Boolean& sawLambdas, Boolean& sawLocalFunctions, Boolean& sawAwaitInExceptionHandler) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType) [<path-to-project>.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [<path-to-project>.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/38309","RelatedDescription":"Open issue \"FailFast in SpillSequenceSpiller.VisitUserDefinedConditionalLogicalOperator\" (#38309)"},{"Id":"485694760","IsPullRequest":false,"CreatedAt":"2019-08-27T09:28:58","Actor":"YairHalberstadt","Number":"38308","RawContent":null,"Title":"Poor error message when calling a member of a newly constructed object in VB","State":"open","Body":"**Version Used**: master\r\n**Steps to Reproduce**:\r\n\r\ncompile the following code:\r\n\r\n```vb\r\nPublic Module Program\r\n    Public Sub Main()\r\n        New string(\"\").Clone()\r\n    End Sub\r\nEnd Module\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nA useful error message, explaining that you need to use `Call New string(\"\").Clone()`\r\n\r\n**Actual Behavior**:\r\n\r\n> error BC30035: Syntax error.\r\n","Url":"https://github.com/dotnet/roslyn/issues/38308","RelatedDescription":"Open issue \"Poor error message when calling a member of a newly constructed object in VB\" (#38308)"},{"Id":"485515054","IsPullRequest":true,"CreatedAt":"2019-08-27T04:00:29","Actor":"JoeRobich","Number":"38302","RawContent":null,"Title":"Skip failing integration tests","State":"closed","Body":"Step 1 of https://github.com/dotnet/roslyn/issues/38301","Url":"https://github.com/dotnet/roslyn/pull/38302","RelatedDescription":"Closed or merged PR \"Skip failing integration tests\" (#38302)"},{"Id":"485550398","IsPullRequest":false,"CreatedAt":"2019-08-27T02:41:11","Actor":"AlekseyTs","Number":"38306","RawContent":null,"Title":"Inefficient code is generated when GetValueOrDefault is called on a conditional access in a short-circuiting operator","State":"open","Body":"Compile the following code:\r\n```\r\nOption Strict On\r\n\r\nClass C\r\n\r\n    Public shared Sub Main()\r\n\tTest2(Nothing, new C())\r\n    End Sub\r\n\r\n    Public Shared Sub Test2(x as C, y As C)\r\n        System.Console.WriteLine(\"->Test2\")\r\n\tIf (x?.GetBool1()).GetValueOrDefault() AndAlso y.GetBool2()\r\n            System.Console.WriteLine(\"In If\")\r\n\tEnd If\r\n        System.Console.WriteLine(\"<-Test2\")\r\n    End Sub\r\n\r\n    Function GetBool1() As Boolean\r\n        Return True\r\n    End Function\r\n    Function GetBool2() As Boolean\r\n        System.Console.WriteLine(\"GetBool2\")\r\n        Return True\r\n    End Function\r\nEnd Class\r\n```\r\n\r\nExamine IL in the Test2 method:\r\n```\r\n.method public static void  Test2(class C x,\r\n                                  class C y) cil managed\r\n{\r\n  // Code size       85 (0x55)\r\n  .maxstack  1\r\n  .locals init (bool V_0,\r\n           valuetype [mscorlib]System.Nullable`1<bool> V_1)\r\n  IL_0000:  nop\r\n  IL_0001:  ldstr      \"->Test2\"\r\n  IL_0006:  call       void [mscorlib]System.Console::WriteLine(string)\r\n  IL_000b:  nop\r\n  IL_000c:  ldarg.0\r\n  IL_000d:  brtrue.s   IL_001a\r\n  IL_000f:  ldloca.s   V_1\r\n  IL_0011:  initobj    valuetype [mscorlib]System.Nullable`1<bool>\r\n  IL_0017:  ldloc.1\r\n  IL_0018:  br.s       IL_0025\r\n  IL_001a:  ldarg.0\r\n  IL_001b:  call       instance bool C::GetBool1()\r\n  IL_0020:  newobj     instance void valuetype [mscorlib]System.Nullable`1<bool>::.ctor(!0)\r\n  IL_0025:  stloc.1\r\n  IL_0026:  ldloca.s   V_1\r\n  IL_0028:  call       instance !0 valuetype [mscorlib]System.Nullable`1<bool>::GetValueOrDefault()\r\n  IL_002d:  brfalse.s  IL_0037\r\n  IL_002f:  ldarg.1\r\n  IL_0030:  callvirt   instance bool C::GetBool2()\r\n  IL_0035:  br.s       IL_0038\r\n  IL_0037:  ldc.i4.0\r\n  IL_0038:  stloc.0\r\n  IL_0039:  ldloc.0\r\n  IL_003a:  brfalse.s  IL_0048\r\n  IL_003c:  ldstr      \"In If\"\r\n  IL_0041:  call       void [mscorlib]System.Console::WriteLine(string)\r\n  IL_0046:  nop\r\n  IL_0047:  nop\r\n  IL_0048:  nop\r\n  IL_0049:  ldstr      \"<-Test2\"\r\n  IL_004e:  call       void [mscorlib]System.Console::WriteLine(string)\r\n  IL_0053:  nop\r\n  IL_0054:  ret\r\n} // end of method C::Test2\r\n```\r\n\r\nObserved: Instances of Nullable type are created and GetValueOrDefault method is actually called.\r\n\r\nExpected: The generated code could be much simpler, eliminating any use of Nullable type:\r\n```\r\n  .locals init (bool V_0)\r\n  IL_0000:  nop\r\n  IL_0001:  ldstr      \"->Test2\"\r\n  IL_0006:  call       void [mscorlib]System.Console::WriteLine(string)\r\n  IL_000b:  nop\r\n  IL_000c:  ldarg.0\r\n  IL_000d:  brfalse.s   IL_0048\r\n  IL_001a:  ldarg.0\r\n  IL_001b:  call       instance bool C::GetBool1()\r\n  IL_002d:  brfalse.s  IL_0048\r\n  IL_002f:  ldarg.1\r\n  IL_0030:  callvirt   instance bool C::GetBool2()\r\n  IL_003a:  brfalse.s  IL_0048\r\n  IL_003c:  ldstr      \"In If\"\r\n  IL_0041:  call       void [mscorlib]System.Console::WriteLine(string)\r\n  IL_0046:  nop\r\n  IL_0047:  nop\r\n  IL_0048:  nop\r\n  IL_0049:  ldstr      \"<-Test2\"\r\n  IL_004e:  call       void [mscorlib]System.Console::WriteLine(string)\r\n  IL_0053:  nop\r\n  IL_0054:  ret\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38306","RelatedDescription":"Open issue \"Inefficient code is generated when GetValueOrDefault is called on a conditional access in a short-circuiting operator\" (#38306)"},{"Id":"485544269","IsPullRequest":false,"CreatedAt":"2019-08-27T02:17:47","Actor":"AlekseyTs","Number":"38305","RawContent":null,"Title":"Incorrect code is generated when nullable value is compared to a not nullable in context of a logical short-circuiting operator used as a Boolean expression","State":"open","Body":"Compile and run the following code:\r\n```\r\nOption Strict On\r\n\r\nClass C\r\n\r\n    Public shared Sub Main()\r\n\tTest1(Nothing, new C())\r\n\tTest2(Nothing, new C())\r\n\tTest3(Nothing, new C())\r\n\tTest4(Nothing, new C())\r\n\tTest5(Nothing, new C())\r\n    End Sub\r\n\r\n    Public Shared Sub Test1(x as C, y As C)\r\n        System.Console.WriteLine(\"->Test1\")\r\n\tIf GetBool3(x) = True AndAlso y.GetBool2()\r\n            System.Console.WriteLine(\"In If\")\r\n\tEnd If\r\n        System.Console.WriteLine(\"<-Test1\")\r\n    End Sub\r\n\r\n    Public Shared Sub Test2(x as C, y As C)\r\n        System.Console.WriteLine(\"->Test2\")\r\n\tIf x?.GetBool1() = True AndAlso y.GetBool2()\r\n            System.Console.WriteLine(\"In If\")\r\n\tEnd If\r\n        System.Console.WriteLine(\"<-Test2\")\r\n    End Sub\r\n\r\n    Public Shared Sub Test3(x as C, y As C)\r\n        System.Console.WriteLine(\"->Test3\")\r\n\tDim z = GetBool3(x) = True AndAlso y.GetBool2()\r\n\tIf z\r\n            System.Console.WriteLine(\"In If\")\r\n\tEnd If\r\n        System.Console.WriteLine(\"<-Test3\")\r\n    End Sub\r\n\r\n    Public Shared Sub Test4(x as C, y As C)\r\n        System.Console.WriteLine(\"->Test4\")\r\n\tDim z = x?.GetBool1() = True AndAlso y.GetBool2()\r\n\tIf z\r\n            System.Console.WriteLine(\"In If\")\r\n\tEnd If\r\n        System.Console.WriteLine(\"<-Test4\")\r\n    End Sub\r\n\r\n    Public Shared Sub Test5(x as C, y As C)\r\n        System.Console.WriteLine(\"->Test5\")\r\n\tIf GetBool3(x) AndAlso y.GetBool2()\r\n            System.Console.WriteLine(\"In If\")\r\n\tEnd If\r\n        System.Console.WriteLine(\"<-Test5\")\r\n    End Sub\r\n\r\n    Function GetBool1() As Boolean\r\n        Return True\r\n    End Function\r\n    Function GetBool2() As Boolean\r\n        System.Console.WriteLine(\"GetBool2\")\r\n        Return True\r\n    End Function\r\n    Shared Function GetBool3(x as C) As Boolean?\r\n\tif x Is Nothing\r\n             Return Nothing\r\n\tEnd If\r\n\r\n        Return True\r\n    End Function\r\nEnd Class\r\n```\r\n\r\nObserved:\r\n```\r\n->Test1\r\n<-Test1\r\n->Test2\r\n<-Test2\r\n->Test3\r\nGetBool2\r\n<-Test3\r\n->Test4\r\nGetBool2\r\n<-Test4\r\n->Test5\r\nGetBool2\r\n<-Test5\r\n```\r\n\r\nExpected: Proper handling of Null propagation for short circuiting operator. I.e. all test methods should execute GetBool2 method for the provided set of arguments. As it happens for Test3 and Test4, which calculate result of a Boolean expression into a local rather than inlining it into an If. And as it happens for Test5, which doesn't have comparison in the Boolean expression.\r\n```\r\n->Test1\r\nGetBool2\r\n<-Test1\r\n->Test2\r\nGetBool2\r\n<-Test2\r\n->Test3\r\nGetBool2\r\n<-Test3\r\n->Test4\r\nGetBool2\r\n<-Test4\r\n->Test5\r\nGetBool2\r\n<-Test5\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38305","RelatedDescription":"Open issue \"Incorrect code is generated when nullable value is compared to a not nullable in context of a logical short-circuiting operator used as a Boolean expression\" (#38305)"},{"Id":"485537229","IsPullRequest":false,"CreatedAt":"2019-08-27T01:50:09","Actor":"davkean","Number":"38304","RawContent":null,"Title":"Namespace is incorrectly marked as unused in a VB project","State":"open","Body":"**Version Used**: \r\nVersion 16.3.0 Preview 3.0 [29221.207.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\nI tried to break this down to a small repro and failed.\r\n\r\n1. `git clone http://github.com/dotnet/project-system`\r\n2. `cd project-system`\r\n3. `git checkout 0f64eeddeee286f73fabe7d68827b7adfa328d71`\r\n4. `ProjectSystem.sln`\r\n5. Open `src\\Microsoft.VisualStudio.Editors\\PropPages\\CodeAnalysisPropPage.vb`\r\n\r\n**Expected Behavior**:\r\nNo error or greying out of `Import System.Diagnostics`\r\n\r\n**Actual Behavior**:\r\nGreying out of `System.Diagnostics` and if you comment it out:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tBC30456\t'Assert' is not a member of 'Microsoft.VisualStudio.ProjectSystem.Debug'.\tMicrosoft.VisualStudio.Editors\tC:\\project-system\\src\\Microsoft.VisualStudio.Editors\\PropPages\\CodeAnalysisPropPage.vb\t147\tActive\r\nError\tBC30456\t'Assert' is not a member of 'Microsoft.VisualStudio.ProjectSystem.Debug'.\tMicrosoft.VisualStudio.Editors\tC:\\project-system\\src\\Microsoft.VisualStudio.Editors\\PropPages\\CodeAnalysisPropPage.vb\t163\tActive\r\nError\tBC30456\t'Assert' is not a member of 'Microsoft.VisualStudio.ProjectSystem.Debug'.\tMicrosoft.VisualStudio.Editors\tC:\\project-system\\src\\Microsoft.VisualStudio.Editors\\PropPages\\CodeAnalysisPropPage.vb\t164\tActive\r\nError\tBC30456\t'Assert' is not a member of 'Microsoft.VisualStudio.ProjectSystem.Debug'.\tMicrosoft.VisualStudio.Editors\tC:\\project-system\\src\\Microsoft.VisualStudio.Editors\\PropPages\\CodeAnalysisPropPage.vb\t180\tActive\r\n\r\n```\r\n\r\nIf you remove the `Imports Microsoft.VisualStudio.ProjectSystem` import from lower in the imports, then the build errors goes away.","Url":"https://github.com/dotnet/roslyn/issues/38304","RelatedDescription":"Open issue \"Namespace is incorrectly marked as unused in a VB project\" (#38304)"},{"Id":"485519585","IsPullRequest":false,"CreatedAt":"2019-08-27T00:34:55","Actor":"petrroll","Number":"38303","RawContent":null,"Title":"\"View call hierarchy\" silently fails for a lot of (valid) caret locations","State":"open","Body":"**Version Used**: \r\nCurrent master. \r\n\r\n**Steps to Reproduce**:\r\n```csharp\r\nusing System;\r\n\r\nnamespace ConsoleApp5\r\n{\r\n    class Program\r\n    {\r\n        sta[||]tic Pr$$ogram Main(Prog$$ram asdf)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        sta[||]tic v[||]oid Main2(in$$t asdf)\r\n        {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Expected Behavior**:\r\nEither all locations above will trigger \"Cursor must be on member name\" error or none of them does (preferable). \r\n\r\nIdeally the service uses `RefactoringHelper` [helpers](http://source.roslyn.io/#Microsoft.CodeAnalysis.Features/CodeRefactorings/IRefactoringHelpersService.cs,0a897af4d97aaa71) to handle all logical caret positions. \r\n\r\n**Actual Behavior**:\r\n`$$` locations silently fail while `[||]' produces \"Cursor must be on member name\" modal error window.\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/38303","RelatedDescription":"Open issue \"\"View call hierarchy\" silently fails for a lot of (valid) caret locations\" (#38303)"},{"Id":"485512174","IsPullRequest":false,"CreatedAt":"2019-08-27T00:05:23","Actor":"JoeRobich","Number":"38301","RawContent":null,"Title":"Investigate Integration Test Failures","State":"open","Body":"5 integration tests are failing regularly in master and master-vs-deps PRs\r\n\r\n```\r\nCSharpUpgradeProject.CPSProject_GeneralPropertyGroupUpdated - System.InvalidOperationException : Expected a light bulb session to appear.\r\nMSBuildWorkspaceTests.TestParseOptions_CSharp_LanguageVersion_Default - Assert.Equal() Failure\\r\\nExpected: CSharp8\\r\\nActual: CSharp7_3\r\n```\r\n\r\nThe text \"To browse the .NET Framework source code\" is no longer part of the quick info text for System.String:\r\n```\r\nBasicQuickInfo.QuickInfo1 - Assert.Equal() Failure\\r\\n ↓ (pos 72)\\r\\nExpected: ···f UTF-16 code units.To browse the .NET Framework source code ···\\r\\nActual: ···f UTF-16 code units.\\r\\n ↑ (pos 72)\r\nCSharpQuickInfo.QuickInfo_MetadataDocumentation - Assert.Equal() Failure\\r\\n ↓ (pos 72)\\r\\nExpected: ···f UTF-16 code units.To browse the .NET Framework source code ···\\r\\nActual: ···f UTF-16 code units.\\r\\n ↑ (pos 72)\r\n```\r\n\r\nFor Async completion\r\n```\r\nBasicIntelliSense.IntelliSenseTriggersOnParenWithBraceCompletionAndCorrectUndoMerging - System.AggregateException : One or more errors occurred.\\r\\n---- System.InvalidOperationException : Expected exactly one session in the completion list, but found 0\r\n```\r\n\r\n- [ ] Skip the affected tests\r\n- [ ] Update the tests to passing\r\n- [ ] Unskip the tests","Url":"https://github.com/dotnet/roslyn/issues/38301","RelatedDescription":"Open issue \"Investigate Integration Test Failures\" (#38301)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"486141459","IsPullRequest":true,"CreatedAt":"2019-08-28T03:32:58","Actor":"Dotnet-GitSync-Bot","Number":"7743","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @eerhardt","Url":"https://github.com/dotnet/corert/pull/7743","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7743)"},{"Id":"486066464","IsPullRequest":true,"CreatedAt":"2019-08-27T22:32:55","Actor":"trylek","Number":"7742","RawContent":null,"Title":"Fix method token resolution for unboxing thunks","State":"open","Body":"This change fixes the largest compilation failure bucket caused by\r\nJIT passing 0 as the \"pResolvedToken.token\" to the JIT interface.\r\nThe problem was caused by the fact that, when in release mode we\r\ndevirtualized a method on a value type, we emitted an unboxing thunk\r\nas part of the process. When JIT later called\r\ngetMethodDefFromMethod to get the token for the method, we returned\r\n0 because the method was not properly handling unboxing thunks.\r\n\r\nWhile I was there, I also fixed an imprecision in\r\nDevirtualizationManager I noticed while reviewing Michal's\r\npreparatory change for porting CPAOT code to the CoreCLR repo: in\r\nlarge version bubble mode, we should generally query \"VersionsWith\"\r\nrather than \"Contains\", otherwise we lose perf benefits of\r\ncross-module devirtualization within the large version bubble.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7742","RelatedDescription":"Open PR \"Fix method token resolution for unboxing thunks\" (#7742)"},{"Id":"486040729","IsPullRequest":true,"CreatedAt":"2019-08-27T21:29:07","Actor":"Dotnet-GitSync-Bot","Number":"7741","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7741","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7741)"},{"Id":"486027692","IsPullRequest":false,"CreatedAt":"2019-08-27T20:50:59","Actor":"cshung","Number":"7740","RawContent":null,"Title":"[CPAOT] Make sure constructing a delegate from a function pointer to an external method works.","State":"open","Body":"In #7724, I have made a change to ensure we have a `PrecodeMethodImport` for local methods, we should probably do the same for external methods to make sure the same scenario works there.","Url":"https://github.com/dotnet/corert/issues/7740","RelatedDescription":"Open issue \"[CPAOT] Make sure constructing a delegate from a function pointer to an external method works.\" (#7740)"},{"Id":"484253378","IsPullRequest":true,"CreatedAt":"2019-08-27T20:41:57","Actor":"cshung","Number":"7724","RawContent":null,"Title":"Emit Fixup for local method import","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7724","RelatedDescription":"Closed or merged PR \"Emit Fixup for local method import\" (#7724)"},{"Id":"485926047","IsPullRequest":true,"CreatedAt":"2019-08-27T17:00:16","Actor":"MichalStrehovsky","Number":"7739","RawContent":null,"Title":"[WIP] Separate ReadyToRun targeting compiler","State":"open","Body":"Creates `crossgen2` that has the ready to run specific bits.\r\n\r\nSending it out to get some eyes on this.\r\n\r\nCI will not work because we need to redirect the ready to run legs to crossgen2. Hence the WIP tag.\r\n\r\nThe TODO-REFACTOR comments are for a subsequent pull request because they would touch a bunch of other places and I don't enjoy resolving merge conflicts in big commits.","Url":"https://github.com/dotnet/corert/pull/7739","RelatedDescription":"Open PR \"[WIP] Separate ReadyToRun targeting compiler\" (#7739)"},{"Id":"485528440","IsPullRequest":true,"CreatedAt":"2019-08-27T05:31:50","Actor":"Dotnet-GitSync-Bot","Number":"7738","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7738","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7738)"},{"Id":"485400634","IsPullRequest":true,"CreatedAt":"2019-08-26T20:36:35","Actor":"nattress","Number":"7737","RawContent":null,"Title":"Fix R2R test issues file to work on Unix","State":"closed","Body":"The CI was silently not running CoreCLR tests in R2R mode due to all tests getting filtered out.\r\n\r\n* Use .* instead of .cmd so test .sh files will be discovered on Unix\r\n* Fix messed up casing in R2R test filter file","Url":"https://github.com/dotnet/corert/pull/7737","RelatedDescription":"Closed or merged PR \"Fix R2R test issues file to work on Unix\" (#7737)"},{"Id":"485370126","IsPullRequest":true,"CreatedAt":"2019-08-26T19:29:13","Actor":"Dotnet-GitSync-Bot","Number":"7736","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7736","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7736)"},{"Id":"485320051","IsPullRequest":true,"CreatedAt":"2019-08-26T19:05:07","Actor":"jkotas","Number":"7734","RawContent":null,"Title":"Delete unnecessary using Internal.Runtime.Augments","State":"closed","Body":"Helps with potential sharing with CoreCLR - Internal.Runtime.Augments namespace does not exist in CoreCLR.","Url":"https://github.com/dotnet/corert/pull/7734","RelatedDescription":"Closed or merged PR \"Delete unnecessary using Internal.Runtime.Augments\" (#7734)"},{"Id":"485327257","IsPullRequest":true,"CreatedAt":"2019-08-26T18:03:38","Actor":"Dotnet-GitSync-Bot","Number":"7735","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @VSadov","Url":"https://github.com/dotnet/corert/pull/7735","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7735)"},{"Id":"484948906","IsPullRequest":true,"CreatedAt":"2019-08-26T09:43:27","Actor":"MichalStrehovsky","Number":"7728","RawContent":null,"Title":"Use DebugType to decide whether to generate debug info","State":"closed","Body":"Seems like both `DebugSymbols` and `DebugType` play a role. `DebugSymbols` is not defined in release builds for some SDKs.","Url":"https://github.com/dotnet/corert/pull/7728","RelatedDescription":"Closed or merged PR \"Use DebugType to decide whether to generate debug info\" (#7728)"},{"Id":"484963667","IsPullRequest":true,"CreatedAt":"2019-08-26T00:13:10","Actor":"Dotnet-GitSync-Bot","Number":"7733","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @NextTurn @jkotas","Url":"https://github.com/dotnet/corert/pull/7733","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7733)"},{"Id":"484948950","IsPullRequest":true,"CreatedAt":"2019-08-25T18:27:00","Actor":"MichalStrehovsky","Number":"7730","RawContent":null,"Title":"Fix copypaste bug in MethodNameFormatter","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7730","RelatedDescription":"Closed or merged PR \"Fix copypaste bug in MethodNameFormatter\" (#7730)"},{"Id":"484948977","IsPullRequest":true,"CreatedAt":"2019-08-25T18:25:04","Actor":"MichalStrehovsky","Number":"7731","RawContent":null,"Title":"Update TraceEvent NuGet package reference","State":"closed","Body":"It never actually worked for me with 1.0.41...","Url":"https://github.com/dotnet/corert/pull/7731","RelatedDescription":"Closed or merged PR \"Update TraceEvent NuGet package reference\" (#7731)"},{"Id":"484948935","IsPullRequest":true,"CreatedAt":"2019-08-25T18:24:06","Actor":"MichalStrehovsky","Number":"7729","RawContent":null,"Title":"Use BIT64 instead of WIN64","State":"closed","Body":"We don't define WIN64.\r\n\r\nThe EETypeCreator occurence was fun to debug. Kind of wish I hit it for the Assignability occurence instead...","Url":"https://github.com/dotnet/corert/pull/7729","RelatedDescription":"Closed or merged PR \"Use BIT64 instead of WIN64\" (#7729)"},{"Id":"484949276","IsPullRequest":true,"CreatedAt":"2019-08-25T16:24:06","Actor":"MichalStrehovsky","Number":"7732","RawContent":null,"Title":"Add DynamicGenerics test","State":"open","Body":"The commits mostly make sense. The test already found some bugs (see the other pull requests I submitted today). We won't be able to touch the type loader codebase or the dependency analysis within the compiler without this test.","Url":"https://github.com/dotnet/corert/pull/7732","RelatedDescription":"Open PR \"Add DynamicGenerics test\" (#7732)"},{"Id":"484617981","IsPullRequest":false,"CreatedAt":"2019-08-23T16:40:13","Actor":"jkotas","Number":"7727","RawContent":null,"Title":"CPAOT code fails under GCStress","State":"open","Body":"Repro:\r\n\r\n```\r\nusing System;\r\nusing System.Numerics;\r\n\r\nstruct MyValueType\r\n{\r\n    object o;\r\n}\r\n\r\nabstract class Test\r\n{\r\n    public abstract void M(MyValueType v);\r\n\r\n    static void Main()\r\n    {\r\n        new Concrete().M(default);\r\n    }\r\n}\r\n\r\nclass Concrete : Test\r\n{\r\n    public override void M(MyValueType v)\r\n    {\r\n        new Vector<double>().ToString();\r\n    }\r\n}\r\n```\r\n\r\n1. Compile `csc test.cs`\r\n2. Generate native code for test.exe using cpaot\r\n3. Set `set COMPlus_GCStress=1` and run it on checked CoreCLR runtime.\r\n\r\nResult:\r\n\r\nWithout `-O`:\r\n\r\n```\r\nAssert failure(PID 27868 [0x00006cdc], Thread: 34200 [0x8598]): SanityCheck()\r\n\r\nCORECLR! MethodTable::Validate + 0x3F (0x00007ff8`426f3813)\r\nCORECLR! Object::ValidateInner + 0x127 (0x00007ff8`42607c97)\r\nCORECLR! Object::Validate + 0x13A (0x00007ff8`42607a4a)\r\nCORECLR! GcInfoDecoder::ReportStackSlotToGC + 0x128 (0x00007ff8`42a233e0)\r\nCORECLR! GcInfoDecoder::ReportSlotToGC + 0x168 (0x00007ff8`42a2329c)\r\nCORECLR! GcInfoDecoder::ReportUntrackedSlots + 0x69 (0x00007ff8`42a235a5)\r\nCORECLR! GcInfoDecoder::EnumerateLiveSlots + 0xD23 (0x00007ff8`42a224a3)\r\nCORECLR! EECodeManager::EnumGcRefs + 0x39B (0x00007ff8`4268656b)\r\nCORECLR! GcStackCrawlCallBack + 0x2CD (0x00007ff8`42940a1d)\r\nCORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007ff8`423b0932)\r\n    File: D:\\coreclr\\src\\vm\\methodtable.cpp Line: 9902\r\n    Image: D:\\coreclr\\bin\\Product\\Windows_NT.x64.Checked\\CoreRun.exe\r\n```\r\n\r\nWith `-O`:\r\n\r\n```\r\nAssert failure(PID 20768 [0x00005120], Thread: 32368 [0x7e70]): !th.IsNull()\r\n\r\nCORECLR! SigPointer::GetTypeHandleThrowing + 0xB8A (0x00007ff8`3e98c9f2)\r\nCORECLR! SigPointer::PeekElemTypeNormalized + 0x1FF (0x00007ff8`3e9930f3)\r\nCORECLR! ArgIteratorTemplate<ArgIteratorBase>::GetNextOffset + 0xFB (0x00007ff8`3e63ba33)\r\nCORECLR! TransitionFrame::PromoteCallerStackHelper + 0x188 (0x00007ff8`3e8e06ec)\r\nCORECLR! TransitionFrame::PromoteCallerStack + 0x17F (0x00007ff8`3e8e054b)\r\nCORECLR! GcStackCrawlCallBack + 0x37A (0x00007ff8`3eca0aca)\r\nCORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007ff8`3e710932)\r\nCORECLR! Thread::StackWalkFramesEx + 0x17A (0x00007ff8`3e71297e)\r\nCORECLR! Thread::StackWalkFrames + 0x184 (0x00007ff8`3e712764)\r\nCORECLR! ScanStackRoots + 0x284 (0x00007ff8`3ee30158)\r\n    File: D:\\coreclr\\src\\vm\\siginfo.cpp Line: 1111\r\n    Image: D:\\coreclr\\bin\\Product\\Windows_NT.x64.Checked\\CoreRun.exe\r\n```","Url":"https://github.com/dotnet/corert/issues/7727","RelatedDescription":"Open issue \"CPAOT code fails under GCStress\" (#7727)"},{"Id":"484571391","IsPullRequest":true,"CreatedAt":"2019-08-23T16:05:44","Actor":"trylek","Number":"7726","RawContent":null,"Title":"CPAOT: implement CORINFO_HELP_GETREFANY by throwing RequiresRuntimeJIT","State":"closed","Body":"This change fixes about 180 ILC failures in Pri#1 tests.","Url":"https://github.com/dotnet/corert/pull/7726","RelatedDescription":"Closed or merged PR \"CPAOT: implement CORINFO_HELP_GETREFANY by throwing RequiresRuntimeJIT\" (#7726)"},{"Id":"483603606","IsPullRequest":true,"CreatedAt":"2019-08-23T12:51:02","Actor":"trylek","Number":"7718","RawContent":null,"Title":"CPAOT support for inlined PInvokes","State":"closed","Body":"This change adds previously missing implementation of two JIT\r\ninterface methods dealing with inlined PInvokes -\r\ngetAddressOfPinvokeTarget and pInvokeMarshalingRequired.\r\n\r\nFor the MethodRequiresMarshaling check I used the same technique\r\nJanK recommended before for IsManagedSequential - I added an extra\r\ninstrumentation to Crossgen and CPAOT to capture PInvoke methods\r\nand the result of the marshaling check; with this change there are\r\n0 differences in the Pri#1 CoreCLR test suite.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7718","RelatedDescription":"Closed or merged PR \"CPAOT support for inlined PInvokes\" (#7718)"},{"Id":"484394876","IsPullRequest":true,"CreatedAt":"2019-08-23T09:46:56","Actor":"Dotnet-GitSync-Bot","Number":"7725","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7725","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7725)"},{"Id":"484111703","IsPullRequest":true,"CreatedAt":"2019-08-23T08:16:22","Actor":"Dotnet-GitSync-Bot","Number":"7721","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/7721","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7721)"},{"Id":"484223047","IsPullRequest":true,"CreatedAt":"2019-08-23T08:15:52","Actor":"nattress","Number":"7722","RawContent":null,"Title":"Remove CoreCLR test time estimation","State":"closed","Body":"During XUnit wrapper generation, which can take a while on a slow machine, the CoreCLR test harness shows a countdown timer which starts at 5 minutes, polling for the sub-process to quit. `proc.poll()` is unreliable and we end up always waiting 5 minutes on Windows despite the wrappers building in about 30 seconds.\r\n\r\nThis should save us about 4 minutes in our CI (the CI detection also broke after Jenkins was retired).","Url":"https://github.com/dotnet/corert/pull/7722","RelatedDescription":"Closed or merged PR \"Remove CoreCLR test time estimation\" (#7722)"},{"Id":"484241646","IsPullRequest":true,"CreatedAt":"2019-08-22T22:15:30","Actor":"nattress","Number":"7723","RawContent":null,"Title":"[WIP] Cherry pick MSIL sections into output images","State":"open","Body":"Emit CorHeader, metadata, IL method bodies using DependencyNodes so that RVAs can be adjusted more naturally through our reloc fixup mechanism. This has two main benefits:\r\n\r\n* Removes existing R2R tables and compiled code in cases where already\r\ncrossgen'd assemblies are re-compiled with Crossgen2.\r\n\r\n* Required for composite R2R images which will contain many component\r\nassembly Cor headers, metadata, MSIL sections.\r\n\r\nI am still addressing test failures with the CoreCLR test suite but the main changes are ready to review.\r\n\r\n@trylek It looks like RVA fields are the only thing which use the `SectionStartNode` mechanism added in https://github.com/dotnet/corert/commit/b34583dc66abb2a74e0d6dd4ec937294cadc0e76. We shouldn't need this now but I wanted to check with you before I pull it out in case you had plans for it.\r\n","Url":"https://github.com/dotnet/corert/pull/7723","RelatedDescription":"Open PR \"[WIP] Cherry pick MSIL sections into output images\" (#7723)"},{"Id":"483723262","IsPullRequest":true,"CreatedAt":"2019-08-22T11:28:33","Actor":"Dotnet-GitSync-Bot","Number":"7719","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7719","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7719)"},{"Id":"483818734","IsPullRequest":true,"CreatedAt":"2019-08-22T07:29:05","Actor":"MichalStrehovsky","Number":"7720","RawContent":null,"Title":"Add regression test for variant casts","State":"open","Body":"","Url":"https://github.com/dotnet/corert/pull/7720","RelatedDescription":"Open PR \"Add regression test for variant casts\" (#7720)"},{"Id":"483449139","IsPullRequest":true,"CreatedAt":"2019-08-21T15:45:03","Actor":"MichalStrehovsky","Number":"7717","RawContent":null,"Title":"Extend token remapping","State":"closed","Body":"I missed that `resolveToken` is not the only place where we record tokens in CPAOT. We also do it in other places.\r\n\r\nI moved the logic that does token remapping for synthetic method bodies to `HandleModuleToken` to have it in a central location and made sure that I got all the places that touch `.token` this time.\r\n\r\n`constructStringLiteral` might end up needing token remapping too at some point so for now I just put an assert in place so that we don't end up chasing wild tokens if/when that happens.\r\n\r\nUnrelated, I also fixed the Interlocked intrinsics not to be per instantiation (they don't need anything special for their `T`). ","Url":"https://github.com/dotnet/corert/pull/7717","RelatedDescription":"Closed or merged PR \"Extend token remapping\" (#7717)"},{"Id":"483130000","IsPullRequest":false,"CreatedAt":"2019-08-21T07:19:48","Actor":"F-Unction","Number":"7714","RawContent":null,"Title":"Can't Use System.CodeDom NuGet Pakeage","State":"closed","Body":"The release was successful, but when I run the program, a message box \"Unknown Hard Errorr\" pops up, the program displays\r\n\"Unhandled Exception: System.PlatformNotSupportedException: Operation is not supp\r\nOrted on this platform.\r\n    At Microsoft.CSharp.CSharpCodeGenerator.FromFileBatch(CompilerParameters, Str\r\nIng[]) + 0x24\r\n    At Microsoft.CSharp.CSharpCodeGenerator.System.CodeDom.Compiler.ICodeCompiler\r\n.CompileAssemblyFromSourceBatch(CompilerParameters, String[]) + 0x1f\r\n    At CodeDomTest.Program.run(String) + 0x1af\r\n    At CodeDomTest.Program.Main(String[]) + 0x20\r\n    At CodeDomTest!<BaseAddress>+0x204e40\"\r\n(Sorry, I don't know English, so I may have some syntax errors when I use Google Translate)","Url":"https://github.com/dotnet/corert/issues/7714","RelatedDescription":"Closed issue \"Can't Use System.CodeDom NuGet Pakeage\" (#7714)"},{"Id":"483178981","IsPullRequest":true,"CreatedAt":"2019-08-21T03:23:51","Actor":"Lucina","Number":"7716","RawContent":null,"Title":"Add .vsconfig and script","State":"open","Body":"Added a .vsconfig file with dependencies for Visual Studio 2019 Preview (Windows 10 SDK, MSBuild with its dependencies, and `MSVC v142 - VS 2019 C++ x64/x86 build tools (v14.22)` aka `Microsoft.VisualStudio.Component.VC.Tools.x86.x64`), minimum requirement for building with `buildscripts/build.cmd`.\r\nAdded a script at `buildscripts/install-reqs-vs2019preview.cmd` that depends on Visual Studio 2019 Preview and vs_installer.exe being installed at `%ProgramFiles(x86)%\\Microsoft Visual Studio`.\r\nCloses #7417 ","Url":"https://github.com/dotnet/corert/pull/7716","RelatedDescription":"Open PR \"Add .vsconfig and script\" (#7716)"},{"Id":"483142963","IsPullRequest":false,"CreatedAt":"2019-08-21T00:33:04","Actor":"sergiy-k","Number":"7715","RawContent":null,"Title":"ReadyToRun tests do not run in CI jobs on Linux","State":"open","Body":"We do have a job that attempts to run the ReadyToRun tests on Linux and MacOS but it does not execute any test cases. The output from such a test run looks like this:\r\n\r\nGRAND TOTAL: 0          0          0           0        0.000s (2.564s)","Url":"https://github.com/dotnet/corert/issues/7715","RelatedDescription":"Open issue \"ReadyToRun tests do not run in CI jobs on Linux\" (#7715)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"486095529","IsPullRequest":false,"CreatedAt":"2019-08-28T00:12:21","Actor":"dsplaisted","Number":"3582","RawContent":null,"Title":"RID-specific self-contained .NET Core 3 app with dependency on Microsoft.NETCore.App 2.0.0 fails to run","State":"open","Body":"# Repro\r\n\r\nBuild and run the following project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n    <SelfContained>false</SelfContained>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NETCore.App\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n# Expected\r\n\r\nProject runs successfully\r\n\r\n# Actual\r\n\r\nProject fails to run with error messages such as the following:\r\n\r\n- > A fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App\\3.0.0-preview9.19416.11'.\r\n- > The specified framework 'Microsoft.NETCore.App', version '3.0.0-preview9-19409-16' was not found.\r\n\r\nThe output folder also includes the following files, which come from the Microsoft.NETCore.App 2.0.0 package closure:\r\n\r\n- apphost.exe\r\n- hostfxr.dll\r\n- hostpolicy.dll\r\n- System.Private.CoreLib.dll\r\n\r\n# Details\r\n\r\nNuGet/Home#7344 would fix this.  Alternatively, we could try to use conflict resolution to exclude these extra assets.  That would probably require updating the platform manifest in the targeting pack.","Url":"https://github.com/dotnet/sdk/issues/3582","RelatedDescription":"Open issue \"RID-specific self-contained .NET Core 3 app with dependency on Microsoft.NETCore.App 2.0.0 fails to run\" (#3582)"},{"Id":"485985392","IsPullRequest":false,"CreatedAt":"2019-08-27T19:14:13","Actor":"livarcocc","Number":"3581","RawContent":null,"Title":"symbols packages being generated empty","State":"open","Body":"We have turned off symbols package generation for now on this repo.\r\n\r\nThey were generating empty nupkgs and conflicting with the actual nupkgs when the sign tool was repackaging signing assemblies.\r\n\r\nThe fact that symbols are empty here are causing symbol checks to fail on VS insertions.","Url":"https://github.com/dotnet/sdk/issues/3581","RelatedDescription":"Open issue \"symbols packages being generated empty\" (#3581)"},{"Id":"485513070","IsPullRequest":true,"CreatedAt":"2019-08-27T00:17:39","Actor":"JohnTortugo","Number":"3580","RawContent":null,"Title":"Disable symbol creation for now","State":"closed","Body":"The symbol packages getting created were causing conflicts in SignToolTask. Disabling the symbol creation until the proper adjustments are made to prevent inadvertently signing symbol packages.\r\n\r\n/cc @riarenas ","Url":"https://github.com/dotnet/sdk/pull/3580","RelatedDescription":"Closed or merged PR \"Disable symbol creation for now\" (#3580)"},{"Id":"485478158","IsPullRequest":true,"CreatedAt":"2019-08-26T23:35:07","Actor":"JohnTortugo","Number":"3579","RawContent":null,"Title":"Use SignTool with more logging","State":"closed","Body":"This new SignTool will show more information about what's repacking\r\n\r\nRelates to: https://github.com/dotnet/core-eng/issues/7569","Url":"https://github.com/dotnet/sdk/pull/3579","RelatedDescription":"Closed or merged PR \"Use SignTool with more logging\" (#3579)"},{"Id":"485304558","IsPullRequest":true,"CreatedAt":"2019-08-26T15:47:11","Actor":"mmitche","Number":"3578","RawContent":null,"Title":"[release/3.0.100-preview9] add PublishUsingPipelines parameter to publish-build-assets template …","State":"closed","Body":"…(#3569)","Url":"https://github.com/dotnet/sdk/pull/3578","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview9] add PublishUsingPipelines parameter to publish-build-assets template …\" (#3578)"},{"Id":"484653224","IsPullRequest":true,"CreatedAt":"2019-08-26T15:42:10","Actor":"riarenas","Number":"3569","RawContent":null,"Title":"Pass PublishUsingPipelines parameter to publish-build-assets template","State":"closed","Body":"**Description**\r\n\r\nhttps://github.com/dotnet/core-eng/issues/7561\r\nWithout the property, the build gets its channel assigned as soon as it publishes to BAR, and may trigger dependency updates before the packages are available in the feeds.\r\n\r\nInternal test build of the change: https://dev.azure.com/dnceng/internal/_build/results?buildId=322295&view=results\r\n\r\n\r\n**Customer Impact**\r\nInfra-structure change.\r\n\r\n**Regression?**\r\nNo.\r\n\r\n**Risk**\r\nLow","Url":"https://github.com/dotnet/sdk/pull/3569","RelatedDescription":"Closed or merged PR \"Pass PublishUsingPipelines parameter to publish-build-assets template\" (#3569)"},{"Id":"485211681","IsPullRequest":true,"CreatedAt":"2019-08-26T12:30:48","Actor":"dotnet-maestro[bot]","Number":"3577","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190826.11\r\n- **Date Produced**: 8/27/2019 2:26 AM\r\n- **Commit**: b33b6c20d855e7f9fdda6383ad12d849079f9b21\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-rc1-19426-11\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3577","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3577)"},{"Id":"483394306","IsPullRequest":true,"CreatedAt":"2019-08-25T15:44:39","Actor":"dotnet-maestro[bot]","Number":"3556","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190823.11\r\n- **Date Produced**: 8/23/2019 10:56 PM\r\n- **Commit**: abecfcd748e6b8850e1111184bf34c93e9277f90\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-rc1-19423-11\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3556","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3556)"},{"Id":"484749883","IsPullRequest":true,"CreatedAt":"2019-08-24T01:01:14","Actor":"dotnet-maestro[bot]","Number":"3576","RawContent":null,"Title":"[release/3.0.100-preview9] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:99181a82-e62d-4080-a0f9-08d721cca946)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190823.09\r\n- **Date Produced**: 8/23/2019 8:02 PM\r\n- **Commit**: 2be172345a420387413bab7ce9053a52624c4461\r\n- **Branch**: refs/heads/release/3.0-preview9\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19423-09\r\n\r\n[marker]: <> (End:99181a82-e62d-4080-a0f9-08d721cca946)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3576","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview9] Update dependencies from dotnet/core-setup\" (#3576)"},{"Id":"484701489","IsPullRequest":true,"CreatedAt":"2019-08-23T23:20:56","Actor":"wli3","Number":"3572","RawContent":null,"Title":"Correct branding","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3572","RelatedDescription":"Closed or merged PR \"Correct branding\" (#3572)"},{"Id":"484742881","IsPullRequest":true,"CreatedAt":"2019-08-23T23:03:41","Actor":"livarcocc","Number":"3575","RawContent":null,"Title":"Skip tests in official builds. We have no reason to run them again si…","State":"open","Body":"…nce they already ran on CI. This should speed up builds out of the sdk repo.","Url":"https://github.com/dotnet/sdk/pull/3575","RelatedDescription":"Open PR \"Skip tests in official builds. We have no reason to run them again si…\" (#3575)"},{"Id":"484739215","IsPullRequest":true,"CreatedAt":"2019-08-23T22:45:47","Actor":"dsplaisted","Number":"3574","RawContent":null,"Title":"Update a test to skip running for target frameworks not supported by current OS","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3574","RelatedDescription":"Open PR \"Update a test to skip running for target frameworks not supported by current OS\" (#3574)"},{"Id":"484673467","IsPullRequest":true,"CreatedAt":"2019-08-23T22:14:39","Actor":"JohnTortugo","Number":"3570","RawContent":null,"Title":"Don't validate signature for resources files","State":"closed","Body":"Relates to: https://github.com/dotnet/core-eng/issues/7569\r\n\r\nIndependent of the outcome of the current signing issues I believe these files aren't required to be signed.\r\n\r\n/cc @riarenas ","Url":"https://github.com/dotnet/sdk/pull/3570","RelatedDescription":"Closed or merged PR \"Don't validate signature for resources files\" (#3570)"},{"Id":"484721294","IsPullRequest":true,"CreatedAt":"2019-08-23T22:01:01","Actor":"dsplaisted","Number":"3573","RawContent":null,"Title":"Always gather logs","State":"closed","Body":"Even if build succeeded, so we can debug things like signing failures.","Url":"https://github.com/dotnet/sdk/pull/3573","RelatedDescription":"Closed or merged PR \"Always gather logs\" (#3573)"},{"Id":"484693602","IsPullRequest":true,"CreatedAt":"2019-08-23T21:54:37","Actor":"dotnet-maestro[bot]","Number":"3571","RawContent":null,"Title":"[release/3.0.100-preview9] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:67c23412-2e21-4d69-a886-08d7219800a1)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.0.6192\r\n- **Date Produced**: 8/23/2019 7:15 PM\r\n- **Commit**: bb60d6720d24890b8f3e071e70d27ea0f2bef57e\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.0-rtm.6192\r\n\r\n[marker]: <> (End:67c23412-2e21-4d69-a886-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3571","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview9] Update dependencies from nuget/nuget.client\" (#3571)"},{"Id":"484345588","IsPullRequest":false,"CreatedAt":"2019-08-23T17:03:32","Actor":"Sodoshi","Number":"3568","RawContent":null,"Title":"Using aspnetcore3.0 in WindowsDesktop SDK","State":"closed","Body":"Because of the changes to the HostBuilder in aspnetcore3 I want to update my embedded Kestrel, but if I switch to the WindowsDesktop SDK its not available, only aspnetcore 2.2. Is there any way to reference aspnetcore 3? (I'm using Kestrel as a TCP server in my Windows forms app)","Url":"https://github.com/dotnet/sdk/issues/3568","RelatedDescription":"Closed issue \"Using aspnetcore3.0 in WindowsDesktop SDK\" (#3568)"},{"Id":"483670137","IsPullRequest":true,"CreatedAt":"2019-08-23T03:41:57","Actor":"livarcocc","Number":"3559","RawContent":null,"Title":"Updating nuget version and adding it to Version.Details.xml for DARC updates.","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3559","RelatedDescription":"Closed or merged PR \"Updating nuget version and adding it to Version.Details.xml for DARC updates.\" (#3559)"},{"Id":"484269593","IsPullRequest":true,"CreatedAt":"2019-08-23T00:06:18","Actor":"dotnet-bot","Number":"3567","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3567","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3567)"},{"Id":"484269575","IsPullRequest":true,"CreatedAt":"2019-08-23T00:06:11","Actor":"dotnet-bot","Number":"3566","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3566","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3566)"},{"Id":"484269561","IsPullRequest":true,"CreatedAt":"2019-08-23T00:06:04","Actor":"dotnet-bot","Number":"3565","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3565","RelatedDescription":"Open PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3565)"},{"Id":"484269532","IsPullRequest":true,"CreatedAt":"2019-08-23T00:05:56","Actor":"dotnet-bot","Number":"3564","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.100-preview9","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.100-preview9.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.100-preview9\ngit reset --hard upstream/release/3.0.100-preview9\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.100-preview9 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3564","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.100-preview9\" (#3564)"},{"Id":"484159126","IsPullRequest":false,"CreatedAt":"2019-08-22T19:00:07","Actor":"kapilepatel","Number":"3563","RawContent":null,"Title":".NET Core SDK 2.2.108 does not work with Visual Studio 2017 version 15.9.13","State":"open","Body":".NET Core SDK 2.2.108 does not work with Visual Studio 2017 version 15.9.13\r\n\r\nSolved the issue by uninstalling all .NET Core versions and fresh install of .NET Core SDK Version 2.2.107\r\nFind all versions here\r\nhttps://dotnet.microsoft.com/download/dotnet-core/2.2","Url":"https://github.com/dotnet/sdk/issues/3563","RelatedDescription":"Open issue \".NET Core SDK 2.2.108 does not work with Visual Studio 2017 version 15.9.13\" (#3563)"},{"Id":"483996121","IsPullRequest":true,"CreatedAt":"2019-08-22T13:32:39","Actor":"mmitche","Number":"3562","RawContent":null,"Title":"[release/3.0] Rebrand to rc1","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3562","RelatedDescription":"Closed or merged PR \"[release/3.0] Rebrand to rc1\" (#3562)"},{"Id":"483952292","IsPullRequest":true,"CreatedAt":"2019-08-22T12:02:24","Actor":"dotnet-maestro[bot]","Number":"3561","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190824.1\r\n- **Date Produced**: 8/24/2019 12:51 PM\r\n- **Commit**: a7b5eb8de300b6a30bd797c4ecc8769f7028aeec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19424.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19424.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3561","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3561)"},{"Id":"483123322","IsPullRequest":true,"CreatedAt":"2019-08-22T05:23:28","Actor":"dotnet-maestro[bot]","Number":"3554","RawContent":null,"Title":"[release/3.0.100-preview9] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:99181a82-e62d-4080-a0f9-08d721cca946)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190821.20\r\n- **Date Produced**: 8/22/2019 2:44 AM\r\n- **Commit**: 33c773a5c7602e599053fdbb3a12b7ecfda27e2e\r\n- **Branch**: refs/heads/release/3.0-preview9\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19421-20\r\n\r\n[marker]: <> (End:99181a82-e62d-4080-a0f9-08d721cca946)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3554","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview9] Update dependencies from dotnet/core-setup\" (#3554)"},{"Id":"483687538","IsPullRequest":true,"CreatedAt":"2019-08-22T02:02:13","Actor":"dsplaisted","Number":"3560","RawContent":null,"Title":"Support more test config options","State":"closed","Body":"#### Description\r\nAdd more support for specifying tests to run via test config file\r\n\r\n#### Customer Impact\r\nNo direct customer impact, this is a test infrastructure change\r\n\r\n#### Regression?\r\nNo\r\n\r\n#### Risk\r\nLow\r\n\r\nAdds more options for controlling which tests are run.\r\n\r\n- Multiple test config files can be specified (via `-testConfig` or `-testConfigFile`)\r\n- Test config files can have named test lists\r\n- One or more test lists to run can be specified via `-testList` on the command line\r\n- Tests can be specified in test config by method, class, or namespace\r\n- Tests to skip can be put in a `SkippedTests` element in the test config file\r\n\r\nThis should help apply the SDK test assets to other repos, as it will be easier to start by specifying a small set of tests to run instead of trying to skip or fix all the failing tests.  It also may help if we want to have inner / outer loop tests.\r\n\r\nA sample test config file showing the different options:\r\n\r\n```xml\r\n<Tests>\r\n\r\n  <TestList Name=\"BasicBuildTests\">\r\n    <Method Name=\"Microsoft.NET.Build.Tests.GivenThatWeWantToBuildANetCoreApp.It_runs_the_app_from_the_output_folder\" />\r\n    <Class Name=\"Microsoft.NET.Build.Tests.GivenThatWeWantToBuildANetStandard2Library\" />\r\n  </TestList>\r\n\r\n  <TestList Name=\"MoreBuildTests\">\r\n    <Class Name=\"Microsoft.NET.Build.Tests.GivenThatWeWantToSetPropertiesInDirectoryBuildProps\" />\r\n  </TestList>\r\n  \r\n  <SkippedTests>\r\n    <Method Name=\"Microsoft.NET.Build.Tests.GivenThatWeWantToBuildANetStandard2Library.It_resolves_assembly_conflicts\"\r\n            Issue=\"none\"\r\n            Reason=\"Testing\"/>\r\n  </SkippedTests>\r\n\r\n  <TestList Name=\"TestList1\">\r\n    <Method Name=\"MyNamespace.MyClass.MyTestName\" />\r\n    <Class Name=\"MyNamespace.MyClass\" />\r\n  </TestList>\r\n\r\n  <Method Name=\"Microsoft.NET.Build.Tests.GivenThatWeWantToBuildANetStandard2Library.It_builds_a_netstandard2_library_successfully\"\r\n            Skip=\"true\"\r\n            Issue=\"none\"\r\n            Reason=\"Testing\"/>\r\n\r\n</Tests>\r\n```","Url":"https://github.com/dotnet/sdk/pull/3560","RelatedDescription":"Closed or merged PR \"Support more test config options\" (#3560)"},{"Id":"483627407","IsPullRequest":true,"CreatedAt":"2019-08-21T23:40:15","Actor":"nguerrera","Number":"3558","RawContent":null,"Title":"Merge 3.0.1xx to 3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3558","RelatedDescription":"Closed or merged PR \"Merge 3.0.1xx to 3.1.1xx\" (#3558)"},{"Id":"483477457","IsPullRequest":true,"CreatedAt":"2019-08-21T16:59:23","Actor":"dotnet-maestro[bot]","Number":"3557","RawContent":null,"Title":"[release/3.0.100-preview9] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2b934a83-c671-49a8-a874-08d7219800a1)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190821.1\r\n- **Date Produced**: 8/21/2019 12:53 PM\r\n- **Commit**: 7aa107d818fe87e627154c0331d6de5d47f39a45\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19421.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19421.1\r\n\r\n[marker]: <> (End:2b934a83-c671-49a8-a874-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3557","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview9] Update dependencies from dotnet/arcade\" (#3557)"},{"Id":"483378528","IsPullRequest":true,"CreatedAt":"2019-08-21T14:03:53","Actor":"dotnet-maestro[bot]","Number":"3555","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190820.8\r\n- **Date Produced**: 8/21/2019 1:49 AM\r\n- **Commit**: fa168dd690798a683ef0d1e65d60ce5d6918d987\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19420.8\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19420.8\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3555","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3555)"},{"Id":"483046802","IsPullRequest":false,"CreatedAt":"2019-08-20T00:50:06","Actor":"Varorbc","Number":"3553","RawContent":null,"Title":"build and generate package fail","State":"open","Body":"**Version Used**: 3.0.100-preview8-013656\r\n\r\n###  Question 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Directory.Build.props\r\n\r\n```csharp\r\n    <Project>\r\n      <PropertyGroup>\r\n        <TargetFramework>net472</TargetFramework>\r\n      </PropertyGroup>\r\n    </Project>\r\n```\r\n\r\n2. ClassLibrary1.csproj\r\n\r\n```csharp\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net452</TargetFrameworks>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n  </PropertyGroup>\r\n  \r\n</Project>\r\n```\r\n\r\n3. dotnet build ClassLibrary1.csproj\r\n\r\n**Expected Behavior**: build successful\r\n\r\n**Actual Behavior**:`C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-013656\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5): error NETSDK1005: 资产文件“C:\\Users\\PC\\Desktop\\ClassLibrary1\\ClassLibrary1\\obj\\project.assets.json”没有“.NETFramework,Version=v4.7.2”的目标。确保已运行还原，且“net472”已包含在项目的 TargetFrameworks 中。 [C:\\Users\\PC\\Desktop\\ClassLibrary1\\ClassLibrary1\\ClassLibrary1.csproj]`\r\n\r\nPS: build by Visual Studio 16.2.2 is successful\r\n\r\n###  Question 2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Directory.Build.props\r\n\r\n```csharp\r\n    <Project>\r\n      <PropertyGroup>\r\n        <TargetFramework>net472</TargetFramework>\r\n      </PropertyGroup>\r\n    </Project>\r\n```\r\n\r\n2. ClassLibrary1.csproj\r\n\r\n```csharp\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net452;net472</TargetFrameworks>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n  </PropertyGroup>\r\n  \r\n</Project>\r\n```\r\n\r\n3. dotnet build ClassLibrary1.csproj\r\n\r\n**Expected Behavior**: generate package successful\r\n\r\n**Actual Behavior**:build successful but no generate package\r\n\r\nPS: build and generate package  by Visual Studio 16.2.2 is successful\r\n","Url":"https://github.com/dotnet/sdk/issues/3553","RelatedDescription":"Open issue \"build and generate package fail\" (#3553)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1166481079546478592","CreatedAt":"2019-08-27T22:42:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":0,"RawContent":null},{"Id":"1164890935089668099","CreatedAt":"2019-08-23T13:23:36+00:00","UserScreenname":"dotnet","Text":"#OnDotnet @briacht joins @runfaster2000 to talk about training models with ML .NET, AutoML, the ML .NET CLI, and mo… https://t.co/DMmb5OFxUx","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":24,"RawContent":null},{"Id":"1164583310900658176","CreatedAt":"2019-08-22T17:01:12+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1164249816983068673","CreatedAt":"2019-08-21T18:56:01+00:00","UserScreenname":"dotnet","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft wil… https://t.co/sf9vOIaakw","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":308,"FavoriteCount":122,"RawContent":null},{"Id":"1163857322763935745","CreatedAt":"2019-08-20T16:56:23+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1162097146985795584","CreatedAt":"2019-08-15T20:22:05+00:00","UserScreenname":"dotnet","Text":"You know .NET is open source, right? https://t.co/JLsyVeSFfp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2019-08-28T05:30:37.3429064Z","RunDurationInMilliseconds":15697}