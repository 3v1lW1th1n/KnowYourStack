{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework December 2018 Security and Quality Rollup","PublishedOn":"2018-12-11T18:23:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the December 2018 Security and Quality Rollup. Security CVE-2018-8540 – Windows Remote Code Execution Vulnerability This security update resolves a vulnerability in Microsoft...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/11/net-framework-december-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Open Sourcing XAML Behaviors for WPF","PublishedOn":"2018-12-10T19:27:32+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are excited to announce that we are open sourcing XAML Behaviors for WPF. In the past, we open sourced XAML Behaviors for UWP which has been a great success and the Behaviors NuGet package...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/10/open-sourcing-xaml-behaviors-for-wpf/","RawContent":null},{"Title":"Take C# 8.0 for a spin","PublishedOn":"2018-12-05T23:51:33+00:00","CommentsCount":47,"FacebookCount":0,"Summary":"Take C# 8.0 for a spin Yesterday we announced the first preview of both Visual Studio 2019 (Making every developer more productive with Visual Studio 2019) and .NET Core 3.0 (Announcing .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/take-c-8-0-for-a-spin/","RawContent":null},{"Title":".NET Framework December 5, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2018-12-05T22:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the December 5, 2018 Preview of .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/net-framework-december-4-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 1 and Open Sourcing Windows Desktop Frameworks","PublishedOn":"2018-12-04T16:41:34+00:00","CommentsCount":79,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 1. It is the first public release of .NET Core 3. We have some exciting new features to share and would love your feedback. You can develop .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/","RawContent":null},{"Title":"Announcing .NET Core 2.2","PublishedOn":"2018-12-04T16:36:50+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"We’re excited to announce the release of .NET Core 2.2. It includes diagnostic improvements to the runtime, support for ARM32 for Windows and Azure Active Directory for SQL Client. The biggest...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-2-2/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2","PublishedOn":"2018-12-04T16:30:21+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we&#8217;re making the final version of EF Core 2.2 available, alongside ASP.NET Core 2.2 and .NET Core 2.2. This is the latest release of our open-source and cross-platform object-database...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-entity-framework-core-2-2/","RawContent":null},{"Title":"Announcing ML.NET 0.8 – Machine Learning for .NET","PublishedOn":"2018-12-04T16:00:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform framework (Windows, Linux, macOS) which makes machine learning accessible for .NET developers. ML.NET allows you to create and use machine learning models...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-ml-net-0-8-machine-learning-for-net/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3694","PublishedOn":"2018-11-29T00:21:07+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We are happy to let you know that .NET Framework 4.8 is now feature complete and we have an early access build to share with you all! We will continue to stabilize this release and take more fixes...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/28/announcing-net-framework-4-8-early-access-build-3694/","RawContent":null},{"Title":".NET Framework November 2018 Preview of Quality Rollup","PublishedOn":"2018-11-28T01:04:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addressed an issue with...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/27/net-framework-november-2018-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8650911785","Type":"PullRequestEvent","CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Opened pull request \"Add Newtonsoft.Json\" (#121) at dotnet/foundation","RelatedBody":"// @jongalloway "},{"Id":"8645831625","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:50","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Merged pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645829054","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:23","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Merged pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8645355358","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:59:20","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Opened pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645349176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:57:50","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Opened pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8738291778","Type":"PullRequestEvent","CreatedAt":"2018-12-12T02:24:54","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21503","RelatedDescription":"Opened pull request \"Update CoreClr to preview-27212-01 (master)\" (#21503) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"8738068876","Type":"PullRequestEvent","CreatedAt":"2018-12-12T01:19:02","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21502","RelatedDescription":"Opened pull request \"Running and visualizing tests in AzureDevOps (Part 1)\" (#21502) at dotnet/coreclr","RelatedBody":"1. Enable Azure Pipelines reporter so the test results can be seen in-place - TestRunNamePrefix should encode all the needed information for a test run.\r\n1. Scenarios property should use comma (not semi-colon) to work on non-Windows\r\n1. Specify timeout to test jobs (the numbers are taken from netci.groovy)\r\n1. Specify timeout for Helix work items (the number is taken from buildpipeline)\r\n1. Specify helixType and helixRepo properties to the job and use _HelixType and _HelixSource variables in MSBuild project instead of defining them manually\r\n1. Limit Pri0 Checked test jobs to running against pull requests. This also should be limited in the future by build definition name (or an alternative) - so when we have PR workload selection working we can distinguish between default PR validation pipeline and custom PR triggered pipeline.\r\n"},{"Id":"8738023906","Type":"PullRequestEvent","CreatedAt":"2018-12-12T01:05:51","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21501","RelatedDescription":"Opened pull request \"JIT: optimize unbox/unbox.any when type is known\" (#21501) at dotnet/coreclr","RelatedBody":"Optimize away the unbox type test when the jit knows the type of object\r\nbeing unboxed and can resolve the type comparison at jit time.\r\n\r\nCloses #14473."},{"Id":"8738010760","Type":"IssuesEvent","CreatedAt":"2018-12-12T01:01:57","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21500","RelatedDescription":"Opened issue \"[Regression][JitStressRegs=0x2] Assertion failed '!varDsc->lvIsRegCandidate()'\" (#21500) at dotnet/coreclr","RelatedBody":"The test started to fail 4 days ago : [ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstressregs2_tst/61/).\r\n\r\ncc @dotnet/jit-contrib \r\n\r\n\"Don't struct-promote opaque vectors\"  #21314 looks like the most relevant change, @CarolEidt could you please take a look?"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8738291436","Type":"IssuesEvent","CreatedAt":"2018-12-12T02:24:48","Actor":"xavierjohn","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10465","RelatedDescription":"Opened issue \"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work\" (#10465) at dotnet/cli","RelatedBody":"Trying to publish a .net core exe without the runtime using the following command\r\n\r\n## Steps to reproduce\r\ndotnet publish --configuration Release --runtime win7-x64 --self-contained false --output c:\\outputfolder\r\n\r\n## Expected  behavior\r\nProduces a {application}.exe\r\n\r\n## Actual behavior\r\nProduces apphost.exe that does not work.\r\n\r\nI can run the program using\r\ndotnet.exe application.dll\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.17134\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\nVersion: 2.1.6\r\nCommit: 3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n\r\n"},{"Id":"8738044096","Type":"IssuesEvent","CreatedAt":"2018-12-12T01:11:44","Actor":"donhuvy","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10464","RelatedDescription":"Opened issue \"No webpage was found for the web address: https://localhost:5001/\" (#10464) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nUse Windows 10 Pro, Visual studio 2019 Preview\r\n\r\n\r\n## Expected  behavior\r\nhttps://localhost:5001/ Show webpage\r\n\r\n## Actual behavior\r\nhttps://localhost:5001/ Error\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nC:\\Users\\donhuvy>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.600-preview-009426\r\n Commit:    48b4f2105d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.600-preview-009426\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n<img width=\"960\" alt=\"dotnet1\" src=\"https://user-images.githubusercontent.com/1328316/49840337-8d9cc600-fde5-11e8-9969-957e01a3e58a.png\">\r\n<img width=\"800\" alt=\"dotnet2\" src=\"https://user-images.githubusercontent.com/1328316/49840338-8e355c80-fde5-11e8-8c46-d314285e44c2.png\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8737626863","Type":"PullRequestEvent","CreatedAt":"2018-12-11T23:16:47","Actor":"jainaashish","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10463","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10463) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.0.0-preview1.5707 into cli"},{"Id":"8735773069","Type":"PullRequestEvent","CreatedAt":"2018-12-11T17:38:14","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10462","RelatedDescription":"Closed pull request \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10462) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.0.0-preview1.5707 into cli release/2.2.2xx branch"},{"Id":"8735759614","Type":"IssuesEvent","CreatedAt":"2018-12-11T17:36:00","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10454","RelatedDescription":"Closed issue \"CS0118 if folder name ends with \"Application\"\" (#10454) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n- create folder like Company.Desktop.Application\r\n- enter folder\r\n- dotnet new wpf\r\n- dotnet run\r\n\r\n## Expected  behavior\r\nApplication runs\r\n\r\n## Actual behavior\r\nApplication can't compile because of CS0118\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\ndotnet --info\r\n\r\nMicrosoft Windows [Version 6.3.9600]\r\n(c) 2013 Microsoft Corporation. Alle Rechte vorbehalten.\r\n\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8738550884","Type":"PullRequestEvent","CreatedAt":"2018-12-12T03:45:20","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1009","RelatedDescription":"Opened pull request \"Clean-up reference assemblies\" (#1009) at dotnet/standard","RelatedBody":"This aligns the physical representation of the reference assembly with how it look like in .NET Core. No changes to the API surface; it's just to remove noise in future diffs."},{"Id":"8738542514","Type":"PullRequestEvent","CreatedAt":"2018-12-12T03:42:32","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1007","RelatedDescription":"Merged pull request \"Update FWLinks to use https instead of http\" (#1007) at dotnet/standard","RelatedBody":"This change only affects the string for `[Obsolete]` message.\r\n\r\nJustification: It's generally bad to use `http` these day. Plus, it causes noise in the diffs."},{"Id":"8733919347","Type":"PullRequestEvent","CreatedAt":"2018-12-11T13:11:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1008","RelatedDescription":"Merged pull request \"Update dependency files\" (#1008) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18610.4\r\n\r\n"},{"Id":"8733860718","Type":"PullRequestEvent","CreatedAt":"2018-12-11T13:01:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1008","RelatedDescription":"Opened pull request \"Update dependency files\" (#1008) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18610.4\r\n\r\n"},{"Id":"8730211063","Type":"PullRequestEvent","CreatedAt":"2018-12-10T22:41:20","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1007","RelatedDescription":"Opened pull request \"Update FWLinks to use https instead of http\" (#1007) at dotnet/standard","RelatedBody":"It's generally bad to use http these day. Plus, it causes noise in the diffs."},{"Id":"8722501457","Type":"PullRequestEvent","CreatedAt":"2018-12-09T13:10:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1006","RelatedDescription":"Merged pull request \"Update dependency files\" (#1006) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18608.1\r\n\r\n"},{"Id":"8722484078","Type":"PullRequestEvent","CreatedAt":"2018-12-09T13:00:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1006","RelatedDescription":"Opened pull request \"Update dependency files\" (#1006) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18608.1\r\n\r\n"},{"Id":"8720489985","Type":"PullRequestEvent","CreatedAt":"2018-12-08T13:10:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1005","RelatedDescription":"Merged pull request \"Update dependency files\" (#1005) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18607.6\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8738543971","Type":"IssuesEvent","CreatedAt":"2018-12-12T03:43:02","Actor":"halter73","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34014","RelatedDescription":"Opened issue \"PipeWriter.FlushAsync() never completes in some scenarios\" (#34014) at dotnet/corefx","RelatedBody":"There's a regression in PipeWriter.FlushAsync() which can be observed by running Kestrel's LibuvOutputConsumerTests against the 3.0 runtime. See aspnet/AspNetCore#4554.\r\n\r\nThe regression is triggered by flushing more than _pauseWriterThreshold bytes and then calling FlushAsync() again without waiting for backpressure to be relieved.\r\n\r\nBoth before and after 3.0, the second call to FlushAsync() triggers a call _writerAwaitable.Reset(). Starting with PR #33748, which I believe caused the regression, PipeAwaitable.Reset() now clears the _completion callback even if the callback was a continuation that was never invoked. Previously in this case, only the CancelationObserved sate would be cleared and the old callback would remain.\r\n\r\nThis makes it so that when FlushAsync() is called repeatedly without waiting for backpressure to be relieved, only the last awaited FlushAsync() ever completes. Previously, only the *first* awaited FlushAsync() would ever complete, and if you awaited any subsequent flushes, you'd get an exception explaining concurrent operations are not supported.\r\n\r\nThis is important because Kestrel intentionally relies on the old behavior when backing Streams with PipeWriters where there's no guarantee Stream.WriteAsync()/FlushAsync() is being properly awaited.\r\n\r\n\r\n```c#\r\n            // https://github.com/dotnet/corefxlab/issues/1334\r\n            // Pipelines don't support multiple awaiters on flush.\r\n            // While it's acceptable to call PipeWriter.FlushAsync again before the last FlushAsync completes,\r\n            // it is not acceptable to attach a new continuation (via await, AsTask(), etc..). In this case,\r\n            // we find previous flush Task which still accounts for any newly committed bytes and await that.\r\n            lock (_flushLock)\r\n            {\r\n                if (_lastFlushTask.IsCompleted)\r\n                {\r\n                    _lastFlushTask = flushValueTask.AsTask();\r\n                }\r\n\r\n                return TimeFlushAsync(minRate, count, outputAborter, cancellationToken);\r\n            }\r\n```\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/5c1fcd664d39db8fe5c8e38052a3cc29f90322f6/src/Kestrel.Core/Internal/Infrastructure/TimingPipeFlusher.cs#L66-L79\r\n\r\n@pakrym @sebastienros @davidfowl \t\r\n"},{"Id":"8738283957","Type":"PullRequestEvent","CreatedAt":"2018-12-12T02:22:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34013","RelatedDescription":"Opened pull request \"Update CoreClr to preview-27212-01 (master)\" (#34013) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"8738275353","Type":"IssuesEvent","CreatedAt":"2018-12-12T02:19:58","Actor":"xavierjohn","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/34012","RelatedDescription":"Closed issue \"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work\" (#34012) at dotnet/corefx","RelatedBody":"Trying to publish a .net core exe without the runtime using the following command\r\n\r\ndotnet publish --configuration Release --runtime win7-x64  --self-contained false --output c:\\outputfolder\r\n\r\ndoes not produce {binary}.exe. Instead there is an apphost.exe that does not work and gives error.\r\n_This executable is not bound to a managed DLL to execute. The binding value is:_\r\n\r\n\r\nMachine information:\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]"},{"Id":"8738182206","Type":"IssuesEvent","CreatedAt":"2018-12-12T01:51:57","Actor":"xavierjohn","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34012","RelatedDescription":"Opened issue \"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work\" (#34012) at dotnet/corefx","RelatedBody":"Trying to publish a .net core exe without the runtime using the following command\r\n\r\ndotnet publish --configuration Release --runtime win7-x64  --self-contained false --output c:\\outputfolder\r\n\r\ndoes not produce {binary}.exe. Instead there is an apphost.exe that does not work and gives error.\r\n_This executable is not bound to a managed DLL to execute. The binding value is:_\r\n\r\n\r\nMachine information:\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]"},{"Id":"8738154676","Type":"PullRequestEvent","CreatedAt":"2018-12-12T01:43:54","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33939","RelatedDescription":"Merged pull request \"Add DateTime Leap Seconds Tests\" (#33939) at dotnet/corefx","RelatedBody":"https://github.com/dotnet/coreclr/pull/21420"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8738784155","Type":"PullRequestEvent","CreatedAt":"2018-12-12T05:09:32","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31708","RelatedDescription":"Opened pull request \"DeclareAsNullable should handle async returns\" (#31708) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/31699\r\n\r\n@dotnet/roslyn-ide for review. Thanks"},{"Id":"8738759641","Type":"IssuesEvent","CreatedAt":"2018-12-12T05:00:25","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31707","RelatedDescription":"Opened issue \"Missing warning for local function not referenced outside of itself\" (#31707) at dotnet/roslyn","RelatedBody":"I expected a warning for this:\r\n```C#\r\npublic class C \r\n{\r\n    public void M() \r\n    {\r\n        void local() // expecting warning CS8321: The local function 'local' is declared but never used\r\n        {\r\n            local();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n@agocke What do you think? Is this correct? Is this worth tagging for consideration in warning waves?"},{"Id":"8738748950","Type":"PullRequestEvent","CreatedAt":"2018-12-12T04:56:26","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31595","RelatedDescription":"Merged pull request \"Fix couple of bugs in unused private members analyzer\" (#31595) at dotnet/roslyn","RelatedBody":"1. https://github.com/dotnet/roslyn/commit/1196711c981829ba53e4ef307cf79f25b3b0bff2: Fixes #31572. Fix detection of entry point methods to account for `int` return type.\r\n\r\n2. https://github.com/dotnet/roslyn/commit/9cc8b0c5388bff6453c0807b2fbe96f7ef6f0dc8: Fixes #31581. Add a workaround for #19965 to detect references to method/property from method group/property group argument to `nameof` operator. We also provide a different diagnostic message for private methods that have name-only references."},{"Id":"8738748940","Type":"IssuesEvent","CreatedAt":"2018-12-12T04:56:26","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31581","RelatedDescription":"Closed issue \"IDE0051 should not be reported when methods are referenced in nameof() expressions\" (#31581) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 16.0 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Copy the code into a C# file.\r\n\r\n```c#\r\npublic string P => nameof(M);\r\nprivate void M() { }\r\n```\r\n\r\n**Expected Behavior**: IDE0051 is not reported for `M`.\r\n\r\n**Actual Behavior**: IDE0051 is reported for `M`. The code fix breaks any code that references `M`."},{"Id":"8738748934","Type":"IssuesEvent","CreatedAt":"2018-12-12T04:56:26","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31572","RelatedDescription":"Closed issue \"VS2019 thinks `int Main` is unused\" (#31572) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 1.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new .NET Core console project\r\n2. Possibly unrelated, but set language version to 8.0 and enable NRT with `<NullableReferenceTypes>true</NullableReferenceTypes>` in the csproj.\r\n3. Build the following code:\r\n\r\n```csharp\r\nusing System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static int Main(string[] args)\r\n        {\r\n            if (args.Length == 0)\r\n            {\r\n                Console.WriteLine(\"Usage: ConsoleApp1 <text>\");\r\n                return -1;\r\n            }\r\n\r\n            foreach (var arg in args)\r\n            {\r\n                Console.WriteLine(arg);\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo diagnostics\r\n\r\n**Actual Behavior**:\r\n\r\nIDE0051 Private member 'Program.Main' is unused.\r\n"},{"Id":"8738332063","Type":"PullRequestEvent","CreatedAt":"2018-12-12T02:37:11","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31696","RelatedDescription":null,"RelatedBody":""},{"Id":"8738331913","Type":"PullRequestEvent","CreatedAt":"2018-12-12T02:37:08","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31696","RelatedDescription":"Closed pull request \"Report an error if docker execution fails\" (#31696) at dotnet/roslyn","RelatedBody":""},{"Id":"8738330479","Type":"IssuesEvent","CreatedAt":"2018-12-12T02:36:40","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31706","RelatedDescription":"Opened issue \"ValidTagsDuringSimpleRename failed in CI\" (#31706) at dotnet/roslyn","RelatedBody":"https://dnceng.visualstudio.com/public/_build/results?buildId=56656&view=ms.vss-test-web.test-result-details\r\n\r\n```\r\n\r\nAssert.Equal() Failure\\r\\nExpected: WhereSelectEnumerableIterator<TextSpan, Span> [[40..43), [208..211), [220..223)]\\r\\nActual: List<Span> [[40..43), [208..211), [208..211), [220..223), [220..223)]\r\nStack trace\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Rename.RenameTagProducerTests.VB$StateMachine_8_VerifyTaggedSpansCore.MoveNext() in /_/src/EditorFeatures/Test2/Rename/RenameTagProducerTests.vb:line 91\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Rename.RenameTagProducerTests.VB$StateMachine_2_VerifyTaggedSpans.MoveNext() in /_/src/EditorFeatures/Test2/Rename/RenameTagProducerTests.vb:line 26\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Rename.RenameTagProducerTests.VB$StateMachine_10_ValidTagsDuringSimpleRename.MoveNext() in /_/src/EditorFeatures/Test2/Rename/RenameTagProducerTests.vb:line 129\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8738706320","Type":"PullRequestEvent","CreatedAt":"2018-12-12T04:40:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6676","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6676) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"8736995529","Type":"PullRequestEvent","CreatedAt":"2018-12-11T21:12:03","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6676","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6676) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8735113557","Type":"PullRequestEvent","CreatedAt":"2018-12-11T16:03:00","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6675","RelatedDescription":"Opened pull request \"Make it possible to align at 32 byte boundaries\" (#6675) at dotnet/corert","RelatedBody":"This will be necessary to support computing layout for types that embed `Vector256`.\r\n\r\nFollow up on https://github.com/dotnet/corert/pull/6663#issuecomment-445574774.\r\n\r\nThis is foundational work needed to support the new HW intrinsics. We may or may not end up implementing function multiversioning for ready to run for .NET Core 3.0 CPAOT, but being able to compute the layout will let us at least pregenerate method bodies that pass through vector types without actually calling the intrinsics.\r\n\r\nSee individual commits. I'm flexible on whether we should include 47bacbd."},{"Id":"8734196605","Type":"PullRequestEvent","CreatedAt":"2018-12-11T13:55:46","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6674","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#6674) at dotnet/corert","RelatedBody":""},{"Id":"8734195396","Type":"PullRequestEvent","CreatedAt":"2018-12-11T13:55:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6674","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#6674) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8737801259","Type":"PullRequestEvent","CreatedAt":"2018-12-12T00:01:34","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2746","RelatedDescription":"Opened pull request \"Merge release/2.2.2xx to master\" (#2746) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8737605782","Type":"PullRequestEvent","CreatedAt":"2018-12-11T23:11:35","Actor":"jainaashish","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2745","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2745) at dotnet/sdk","RelatedBody":"Keeping it consistent with 2.2.2xx train"},{"Id":"8736605109","Type":"PullRequestEvent","CreatedAt":"2018-12-11T20:00:15","Actor":"dotnet-automerge-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2734","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to master\" (#2734) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"open","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Open PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"279475345","IsPullRequest":true,"CreatedAt":"2018-05-18T19:10:06","Actor":"heiligerdankgesang","Number":"92","RawContent":null,"Title":"Remove contact email from system.drawing.md","State":"closed","Body":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information.","Url":"https://github.com/dotnet/foundation/pull/92","RelatedDescription":"Closed or merged PR \"Remove contact email from system.drawing.md\" (#92)"},{"Id":"285274998","IsPullRequest":true,"CreatedAt":"2018-05-18T19:09:35","Actor":"onovotny","Number":"93","RawContent":null,"Title":"Add Humanizer","State":"closed","Body":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682","Url":"https://github.com/dotnet/foundation/pull/93","RelatedDescription":"Closed or merged PR \"Add Humanizer\" (#93)"},{"Id":"286511421","IsPullRequest":true,"CreatedAt":"2018-05-18T19:07:08","Actor":"ctaggart","Number":"94","RawContent":null,"Title":"add SourceLink","State":"closed","Body":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138","Url":"https://github.com/dotnet/foundation/pull/94","RelatedDescription":"Closed or merged PR \"add SourceLink\" (#94)"},{"Id":"288415599","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:48","Actor":"bfistein","Number":"95","RawContent":null,"Title":"Fix broken logo URL","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/95","RelatedDescription":"Closed or merged PR \"Fix broken logo URL\" (#95)"},{"Id":"288749196","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:24","Actor":"galatrash","Number":"96","RawContent":null,"Title":"Adding DNN Platform.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/96","RelatedDescription":"Closed or merged PR \"Adding DNN Platform.\" (#96)"},{"Id":"294070713","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:02","Actor":"karann-msft","Number":"98","RawContent":null,"Title":"Updates to reflect the latest information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/98","RelatedDescription":"Closed or merged PR \"Updates to reflect the latest information\" (#98)"},{"Id":"316146229","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:34","Actor":"Cheesebaron","Number":"100","RawContent":null,"Title":"Create mvvmcross.md","State":"closed","Body":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415","Url":"https://github.com/dotnet/foundation/pull/100","RelatedDescription":"Closed or merged PR \"Create mvvmcross.md\" (#100)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"},{"Id":"293777118","IsPullRequest":true,"CreatedAt":"2018-03-29T07:03:03","Actor":"mairaw","Number":"97","RawContent":null,"Title":"update CLA PDF link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/97","RelatedDescription":"Closed or merged PR \"update CLA PDF link\" (#97)"},{"Id":"307656482","IsPullRequest":false,"CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Number":"99","RawContent":null,"Title":"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux ","State":"open","Body":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n","Url":"https://github.com/dotnet/foundation/issues/99","RelatedDescription":"Open issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"390037650","IsPullRequest":true,"CreatedAt":"2018-12-12T02:24:53","Actor":"dotnet-maestro-bot","Number":"21503","RawContent":null,"Title":"Update CoreClr to preview-27212-01 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21503","RelatedDescription":"Open PR \"Update CoreClr to preview-27212-01 (master)\" (#21503)"},{"Id":"390024226","IsPullRequest":true,"CreatedAt":"2018-12-12T01:19:01","Actor":"echesakovMSFT","Number":"21502","RawContent":null,"Title":"[WIP] Running and visualizing tests in AzureDevOps (Part 1)","State":"open","Body":"1. Enable Azure Pipelines reporter so the test results can be seen in-place - TestRunNamePrefix should encode all the needed information for a test run.\r\n1. Scenarios property should use comma (not semi-colon) to work on non-Windows\r\n1. Specify timeout to test jobs (the numbers are taken from netci.groovy)\r\n1. Specify timeout for Helix work items (the number is taken from buildpipeline)\r\n1. Specify helixType and helixRepo properties to the job and use _HelixType and _HelixSource variables in MSBuild project instead of defining them manually\r\n1. Limit Pri0 Checked test jobs to running against pull requests. This also should be limited in the future by build definition name (or an alternative) - so when we have PR workload selection working we can distinguish between default PR validation pipeline and custom PR triggered pipeline.\r\n\r\nExamples of the pipeline runs for:\r\n* PullRequest: https://dnceng.visualstudio.com/public/_build/results?buildId=56634\r\n* GitHub push: https://dnceng.visualstudio.com/public/_build/results?buildId=56631\r\n","Url":"https://github.com/dotnet/coreclr/pull/21502","RelatedDescription":"Open PR \"[WIP] Running and visualizing tests in AzureDevOps (Part 1)\" (#21502)"},{"Id":"390021409","IsPullRequest":true,"CreatedAt":"2018-12-12T01:05:50","Actor":"AndyAyersMS","Number":"21501","RawContent":null,"Title":"JIT: optimize unbox/unbox.any when type is known","State":"open","Body":"Optimize away the unbox type test when the jit knows the type of object\r\nbeing unboxed and can resolve the type comparison at jit time.\r\n\r\nCloses #14473.","Url":"https://github.com/dotnet/coreclr/pull/21501","RelatedDescription":"Open PR \"JIT: optimize unbox/unbox.any when type is known\" (#21501)"},{"Id":"390020559","IsPullRequest":false,"CreatedAt":"2018-12-12T01:01:56","Actor":"sandreenko","Number":"21500","RawContent":null,"Title":"[Regression][JitStressRegs=0x2] Assertion failed '!varDsc->lvIsRegCandidate()'","State":"open","Body":"The test started to fail 4 days ago : [ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstressregs2_tst/61/).\r\n\r\ncc @dotnet/jit-contrib \r\n\r\n\"Don't struct-promote opaque vectors\"  #21314 looks like the most relevant change, @CarolEidt could you please take a look?","Url":"https://github.com/dotnet/coreclr/issues/21500","RelatedDescription":"Open issue \"[Regression][JitStressRegs=0x2] Assertion failed '!varDsc->lvIsRegCandidate()'\" (#21500)"},{"Id":"390016982","IsPullRequest":true,"CreatedAt":"2018-12-12T00:44:23","Actor":"tannergooding","Number":"21499","RawContent":null,"Title":"Fixing up configEnableISA and Compiler::compSetProcessor to be consistent with EEJitManager::SetCpuInfo in how ISA support checks are done","State":"open","Body":"We have multiple configuration knobs which control support for the individual HWIntrinsic ISAs and as of https://github.com/dotnet/coreclr/pull/20501, these knobs are available in release mode and meant to match the actual ISA hierarchy (such that disabling `SSE` would also disable anything dependent on `SSE`).\r\n\r\nThis PR fixes up some issues that existed around these configuration knobs to ensure that they properly follow the ISA hierarchy and resolves some issues around the `AVX` configuration knob which was pre-existing and impacted how `S.N.Vector<T>` worked.\r\n\r\nCC. @CarolEidt, @fiigii ","Url":"https://github.com/dotnet/coreclr/pull/21499","RelatedDescription":"Open PR \"Fixing up configEnableISA and Compiler::compSetProcessor to be consistent with EEJitManager::SetCpuInfo in how ISA support checks are done\" (#21499)"},{"Id":"390009112","IsPullRequest":true,"CreatedAt":"2018-12-12T00:08:06","Actor":"cshung","Number":"21498","RawContent":null,"Title":"[WIP] Fix the thread store lock reentrancy issue","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21498","RelatedDescription":"Open PR \"[WIP] Fix the thread store lock reentrancy issue\" (#21498)"},{"Id":"389992510","IsPullRequest":true,"CreatedAt":"2018-12-11T23:03:33","Actor":"fadimounir","Number":"21497","RawContent":null,"Title":"Change CoreLib native image to be R2R by default on all platforms","State":"open","Body":"Aslo disabling partial ngenning for s.p.corelib.","Url":"https://github.com/dotnet/coreclr/pull/21497","RelatedDescription":"Open PR \"Change CoreLib native image to be R2R by default on all platforms\" (#21497)"},{"Id":"389972340","IsPullRequest":true,"CreatedAt":"2018-12-11T22:00:39","Actor":"kouvel","Number":"21496","RawContent":null,"Title":"Update named mutex PAL tests to include case of file locks being inherited by child process","State":"open","Body":"Included case fixed by https://github.com/dotnet/coreclr/pull/21458. Fixes https://github.com/dotnet/coreclr/issues/21494.","Url":"https://github.com/dotnet/coreclr/pull/21496","RelatedDescription":"Open PR \"Update named mutex PAL tests to include case of file locks being inherited by child process\" (#21496)"},{"Id":"389939150","IsPullRequest":false,"CreatedAt":"2018-12-11T20:26:33","Actor":"fadimounir","Number":"21495","RawContent":null,"Title":"Crossgen should emit a warning when compiling assemblies with the partial NGEN flag, and no embedded IBC data","State":"open","Body":"Currently crossgen generates an output image that has no compiled method, and reports that it successfully compiled the image.\r\n\r\nRepro assembly: Microsoft.CodeAnalysis.dll ","Url":"https://github.com/dotnet/coreclr/issues/21495","RelatedDescription":"Open issue \"Crossgen should emit a warning when compiling assemblies with the partial NGEN flag, and no embedded IBC data\" (#21495)"},{"Id":"389937561","IsPullRequest":false,"CreatedAt":"2018-12-11T20:21:58","Actor":"kouvel","Number":"21494","RawContent":null,"Title":"Update named mutex PAL tests to include case of file locks being inherited by child process","State":"open","Body":"Include case fixed by https://github.com/dotnet/coreclr/pull/21458","Url":"https://github.com/dotnet/coreclr/issues/21494","RelatedDescription":"Open issue \"Update named mutex PAL tests to include case of file locks being inherited by child process\" (#21494)"},{"Id":"389937396","IsPullRequest":true,"CreatedAt":"2018-12-11T20:21:26","Actor":"briansull","Number":"21493","RawContent":null,"Title":"[release/2.2] Port the fix for JIT IMPL_LIMITATION for EntityFramework ","State":"open","Body":"Port the following two fixes that address the JIT's IMPL_LIMITATION associated with offsets > 255 for LclVar with LclVar numbers above 32767.\r\n\r\nAllocate the lvaOutgoingArgSpaceVar early #17793 \r\nThe SIMD types must use the struct code path #19065 \r\n","Url":"https://github.com/dotnet/coreclr/pull/21493","RelatedDescription":"Open PR \"[release/2.2] Port the fix for JIT IMPL_LIMITATION for EntityFramework \" (#21493)"},{"Id":"389934350","IsPullRequest":true,"CreatedAt":"2018-12-11T20:12:48","Actor":"hoyosjs","Number":"21492","RawContent":null,"Title":"[WIP][CI test] Building with Arcade initialized tools","State":"open","Body":"Testing tooling fetching with arcade doesn't break different build scenarios.","Url":"https://github.com/dotnet/coreclr/pull/21492","RelatedDescription":"Open PR \"[WIP][CI test] Building with Arcade initialized tools\" (#21492)"},{"Id":"389922464","IsPullRequest":false,"CreatedAt":"2018-12-11T19:41:04","Actor":"AndyAyersMS","Number":"21491","RawContent":null,"Title":"Perf regression in some EqualityComparer tests on Linux","State":"open","Body":"![image](https://user-images.githubusercontent.com/10121823/49825403-2e817780-fd39-11e8-8875-2719b4decd4a.png)\r\n\r\nRegression is the jump in the blue line (Ubuntu x64).\r\n\r\n(Similar slowdowns seen in ValueTupleCompareNoOpt and ValueTupleCompareWrapped).\r\n\r\nBenchview tracking indicates regression was from #20141.\r\n\r\n@sandreenko can you investigate?\r\ncc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/issues/21491","RelatedDescription":"Open issue \"Perf regression in some EqualityComparer tests on Linux\" (#21491)"},{"Id":"389917238","IsPullRequest":false,"CreatedAt":"2018-12-11T19:26:30","Actor":"tannergooding","Number":"21490","RawContent":null,"Title":"JIT_SIMD_VectorCast test fails when both FeatureSIMD and TieredCompilation are disabled","State":"open","Body":"The `JIT_SIMD_VectorCast_r` test is currently failing when both `FeatureSIMD` and `TieredCompilation` are disabled. The assert returned is:\r\n```\r\nAssert failure(PID 13624 [0x00003538], Thread: 9764 [0x2624]): Assertion failed 'vnWx != NoVN' in 'System.Numerics.Vector`1[Byte][System.Byte]:op_Explicit(struct):struct' (IL size 13)\r\n\r\n    File: e:\\users\\tagoo\\repos\\coreclr\\src\\jit\\valuenum.cpp Line: 1320\r\n    Image: E:\\Users\\tagoo\\Repos\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\corerun.exe\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21490","RelatedDescription":"Open issue \"JIT_SIMD_VectorCast test fails when both FeatureSIMD and TieredCompilation are disabled\" (#21490)"},{"Id":"389907707","IsPullRequest":false,"CreatedAt":"2018-12-11T19:00:54","Actor":"actionRadius","Number":"21489","RawContent":null,"Title":"Microsoft.Azure.NotificationHubs throws error when sending notification to a tag with special characters (on linux-arm)","State":"open","Body":"Im using Microsoft.NETCore.App v2.0.0 and Microsoft.Azure.NotificationHubs v2.0.2.\r\nThe code is compiled with cmd: dotnet publish --self-contained -r linux-arm -c Release\r\nRunning on Raspberry PI 3 Model B.\r\n\r\nthe error is thrown at: \r\n`await hub.SendWindowsNativeNotificationAsync(\"<anyValidXml>\", new List<string>{\"Café\"});`\r\n\r\n\r\nStackTrace: \r\n\r\n> at Microsoft.Azure.NotificationHubs.NotificationHubClient.<SendRequestAsync>d__117.MoveNext()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at Microsoft.Azure.NotificationHubs.NotificationHubClient.<SendNotificationImplAsync>d__106.MoveNext()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n>    at CoreApp.Program.<doJob>d__5.MoveNext() in \r\n\r\nMessage:\r\n\r\n> An invalid tag(s) 'CafÃ©' was supplied. Valid tag characters are alphanumeric, _, @, -, ., : and #.TrackingId:\r\n\r\n\r\nThe above error comes up only from the linux environment. Works well on my Windows PC.\r\nCould you please investigate, or advise if im doing something worng?\r\nthank you in advance\r\n","Url":"https://github.com/dotnet/coreclr/issues/21489","RelatedDescription":"Open issue \"Microsoft.Azure.NotificationHubs throws error when sending notification to a tag with special characters (on linux-arm)\" (#21489)"},{"Id":"389785850","IsPullRequest":true,"CreatedAt":"2018-12-11T18:21:13","Actor":"dotnet-maestro-bot","Number":"21488","RawContent":null,"Title":"Update CoreClr to preview-27211-02 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21488","RelatedDescription":"Closed or merged PR \"Update CoreClr to preview-27211-02 (master)\" (#21488)"},{"Id":"389754237","IsPullRequest":true,"CreatedAt":"2018-12-11T13:03:02","Actor":"dotnet-maestro[bot]","Number":"21487","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18610.4\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21487","RelatedDescription":"Open PR \"Update dependency files\" (#21487)"},{"Id":"389569618","IsPullRequest":true,"CreatedAt":"2018-12-11T12:14:53","Actor":"dotnet-maestro-bot","Number":"21481","RawContent":null,"Title":"Update CoreClr to preview-27211-01 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21481","RelatedDescription":"Closed or merged PR \"Update CoreClr to preview-27211-01 (master)\" (#21481)"},{"Id":"389610536","IsPullRequest":true,"CreatedAt":"2018-12-11T12:12:13","Actor":"jkotas","Number":"21482","RawContent":null,"Title":"Delete unnecessary struct initialization","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21482","RelatedDescription":"Closed or merged PR \"Delete unnecessary struct initialization\" (#21482)"},{"Id":"389687412","IsPullRequest":false,"CreatedAt":"2018-12-11T10:14:23","Actor":"johnww89","Number":"21486","RawContent":null,"Title":"how to use definemethod to define a method for a generic method","State":"open","Body":"Hi All,\r\ni use the method DefineMethod from IMetaDataEmit2 to define a token of an exist generic method. but in clr source DefineMethod seems don't insert the parameter to TBL_GenericParam then in the afterward process it can not get the genericparam from TBL_GenericParam then it throw exception. the pvSigBlob parameter of DefineMethod contain the correct data which indicate it is a generic method and indicate the number of generic parameter count.\r\ni find there is a method named DefineGenericParam. should i use this method for define a generic method?","Url":"https://github.com/dotnet/coreclr/issues/21486","RelatedDescription":"Open issue \"how to use definemethod to define a method for a generic method\" (#21486)"},{"Id":"389645966","IsPullRequest":false,"CreatedAt":"2018-12-11T08:27:27","Actor":"knuzk","Number":"21485","RawContent":null,"Title":"EnumProcessModules + GetModuleFileNameExW will crash with hPseudoCurrentProcess","State":"open","Body":"@jkotas @richlander GetProcessModulesFromHandle doesn't call AddReference g_pobjProcess, so the  object will be deleted when the function exits.\r\n\r\nProcess.cpp line 2688:\r\n\r\n   if (hPseudoCurrentProcess == hProcess)\r\n    {\r\n        pobjProcess = g_pobjProcess; // AddReference is missed\r\n    }","Url":"https://github.com/dotnet/coreclr/issues/21485","RelatedDescription":"Open issue \"EnumProcessModules + GetModuleFileNameExW will crash with hPseudoCurrentProcess\" (#21485)"},{"Id":"389629943","IsPullRequest":false,"CreatedAt":"2018-12-11T07:31:27","Actor":"tmds","Number":"21484","RawContent":null,"Title":"createdump segfaults with ASP.NET Core 2.2 applications","State":"open","Body":"Using the 2.2 sdk:\r\n\r\nCreate a new ASP.NET Core app using the `web` template\r\nPublish the app\r\nRun it: `dotnet <myapp.dll>`\r\nFind its pid and run `createdump <pid>`.\r\n\r\ncreatedump segfaults:\r\n```\r\nThread 1 \"createdump\" received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff7b00c43 in ClrDataAccess::EnumWksGlobalMemoryRegions(CLRDataEnumMemoryFlags) ()\r\n   from /home/tmds/Downloads/2.2/shared/Microsoft.NETCore.App/2.2.0/libmscordaccore.so\r\n(gdb) bt\r\n#0  0x00007ffff7b00c43 in ClrDataAccess::EnumWksGlobalMemoryRegions(CLRDataEnumMemoryFlags) () from /home/tmds/Downloads/2.2/shared/Microsoft.NETCore.App/2.2.0/libmscordaccore.so\r\n#1  0x00007ffff7acf557 in ClrDataAccess::EnumMemCLRHeapCrticalStatic(CLRDataEnumMemoryFlags) () from /home/tmds/Downloads/2.2/shared/Microsoft.NETCore.App/2.2.0/libmscordaccore.so\r\n#2  0x00007ffff7ad49ae in ClrDataAccess::EnumMemoryRegionsWorkerHeap(CLRDataEnumMemoryFlags) () from /home/tmds/Downloads/2.2/shared/Microsoft.NETCore.App/2.2.0/libmscordaccore.so\r\n#3  0x00007ffff7adc4ce in ClrDataAccess::EnumMemoryRegionsWrapper(CLRDataEnumMemoryFlags) () from /home/tmds/Downloads/2.2/shared/Microsoft.NETCore.App/2.2.0/libmscordaccore.so\r\n#4  0x00007ffff7adc739 in ClrDataAccess::EnumMemoryRegions(ICLRDataEnumMemoryRegionsCallback*, unsigned int, CLRDataEnumMemoryFlags) ()\r\n   from /home/tmds/Downloads/2.2/shared/Microsoft.NETCore.App/2.2.0/libmscordaccore.so\r\n#5  0x000000000040c16b in CrashInfo::EnumerateMemoryRegionsWithDAC(_MINIDUMP_TYPE) ()\r\n#6  0x000000000040adf7 in CrashInfo::GatherCrashInfo(_MINIDUMP_TYPE) ()\r\n#7  0x000000000040a093 in CreateDumpCommon(char const*, _MINIDUMP_TYPE, CrashInfo*) ()\r\n#8  0x0000000000409bbe in main ()\r\n```\r\n\r\nDotnet info:\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  29\r\n OS Platform: Linux\r\n RID:         fedora.29-x64\r\n Base Path:   /home/tmds/Downloads/2.2/sdk/2.2.100/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.2.100 [/home/tmds/Downloads/2.2/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0 [/home/tmds/Downloads/2.2/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [/home/tmds/Downloads/2.2/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/home/tmds/Downloads/2.2/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21484","RelatedDescription":"Open issue \"createdump segfaults with ASP.NET Core 2.2 applications\" (#21484)"},{"Id":"389546433","IsPullRequest":true,"CreatedAt":"2018-12-11T06:49:19","Actor":"sywhang","Number":"21479","RawContent":null,"Title":"make GC/GCHandle tracing pay-for-play","State":"closed","Body":"This should address https://github.com/dotnet/coreclr/issues/20941. \r\n\r\nNote that there are places in the GC where we do check whether events are enabled before firing them (although very few). I will be following up with subsequent PRs to remove any unnecessary duplicate checks.\r\n\r\ncc @jkotas @Maoni0 @davmason","Url":"https://github.com/dotnet/coreclr/pull/21479","RelatedDescription":"Closed or merged PR \"make GC/GCHandle tracing pay-for-play\" (#21479)"},{"Id":"389538008","IsPullRequest":true,"CreatedAt":"2018-12-11T06:49:04","Actor":"sywhang","Number":"21478","RawContent":null,"Title":"Fix for SetGCHandle event not getting emitted when running under Standalone GC","State":"closed","Body":"Before emitting SetGCHandle events, we were checking the ```MICROSOFT_WINDOWS_DOTNETRUNTIME_PRIVATE_PROVIDER_Context``` to see if it's enabled, but this is not what we check when we are running under Standalone GC. (We need to check the ```GCEventStatus::enabledKeywords``` and ```GCEventStatus::enabledLevels``` instead). ","Url":"https://github.com/dotnet/coreclr/pull/21478","RelatedDescription":"Closed or merged PR \"Fix for SetGCHandle event not getting emitted when running under Standalone GC\" (#21478)"},{"Id":"389613248","IsPullRequest":false,"CreatedAt":"2018-12-11T06:22:02","Actor":"AriNuer","Number":"21483","RawContent":null,"Title":"Assertion failed 'op1->gtIntConCommon.ImmedValCanBeFolded(this, tree->OperGet())'","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_checked_centos7.1_r2r_tst/2767/#showFailuresLink\r\n**Failed tests:**\r\nJIT_Regression._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_sh\r\nJIT_Regression._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_sh\r\n**Failed log:**\r\nJIT_Regression._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_sh\r\n```\r\nJIT_Regression._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_sh [FAIL]\r\n        \r\n        Assert failure(PID 117227 [0x0001c9eb], Thread: 117227 [0x1c9eb]): Assertion failed 'op1->gtIntConCommon.ImmedValCanBeFolded(this, tree->OperGet())' in '<Module>:main():int' (IL size 39)\r\n        \r\n            File: /mnt/resource/j/workspace/dotnet_coreclr/master/checked_centos7.1/src/jit/gentree.cpp Line: 13883\r\n            Image: /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root/crossgen\r\n        \r\n        /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1.2-M01/b18049/b18049/b18049.sh: line 156: 117227 Aborted                 (core dumped) $_DebuggerFullPath \"$CORE_ROOT/crossgen\" /Platform_Assemblies_Paths $CORE_ROOT:$PWD/IL:$PWD /in b18049.org /out b18049.exe\r\n        /n/nReturn code:      1/nRaw output file:      /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/Reports/JIT.Regression/CLR-x86-JIT/V1.2-M01/b18049/b18049/b18049.output.txt/nRaw output:/nBEGIN EXECUTION\r\n        in takeLock\r\n        /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root/crossgen /Platform_Assemblies_Paths /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root:/mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1.2-M01/b18049/b18049/IL:/mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1.2-M01/b18049/b18049 /in b18049.org /out b18049.exe\r\n        Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n        Copyright (c) Microsoft Corporation.  All rights reserved.\r\n        \r\n        Crossgen failed with exitcode: 134\r\n        in ReleaseLock\r\n        Test Harness Exitcode is : 1\r\n        /nTo run the test:/n> set CORE_ROOT=/mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root/n> /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1.2-M01/b18049/b18049/b18049.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/resource/j/workspace/dotnet_coreclr/master/checked_centos7.1/bin/tests/Linux.x64.Checked/TestWrappers/JIT.Regression/JIT.Regression.XUnitWrapper.cs(57999,0): at JIT_Regression._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_._CLR_x86_JIT_V1_2_M01_b18049_b18049_b18049_sh()\r\n```\r\nJIT_Regression._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_sh\r\n```\r\nJIT_Regression._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_sh [FAIL]\r\n        \r\n        Assert failure(PID 19229 [0x00004b1d], Thread: 19229 [0x4b1d]): Assertion failed 'op1->gtIntConCommon.ImmedValCanBeFolded(this, tree->OperGet())' in '<Module>:main():int' (IL size 39)\r\n        \r\n            File: /mnt/resource/j/workspace/dotnet_coreclr/master/checked_centos7.1/src/jit/gentree.cpp Line: 13883\r\n            Image: /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root/crossgen\r\n        \r\n        /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1-QFE/b147816/b147816/b147816.sh: line 156: 19229 Aborted                 (core dumped) $_DebuggerFullPath \"$CORE_ROOT/crossgen\" /Platform_Assemblies_Paths $CORE_ROOT:$PWD/IL:$PWD /in b147816.org /out b147816.exe\r\n        /n/nReturn code:      1/nRaw output file:      /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/Reports/JIT.Regression/CLR-x86-JIT/V1-QFE/b147816/b147816/b147816.output.txt/nRaw output:/nBEGIN EXECUTION\r\n        in takeLock\r\n        /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root/crossgen /Platform_Assemblies_Paths /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root:/mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1-QFE/b147816/b147816/IL:/mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1-QFE/b147816/b147816 /in b147816.org /out b147816.exe\r\n        Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n        Copyright (c) Microsoft Corporation.  All rights reserved.\r\n        \r\n        Crossgen failed with exitcode: 134\r\n        in ReleaseLock\r\n        Test Harness Exitcode is : 1\r\n        /nTo run the test:/n> set CORE_ROOT=/mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/Tests/Core_Root/n> /mnt/resource/j/workspace/dotnet_coreclr/master/x64_checked_centos7.1_r2r_tst/bin/tests/Linux.x64.Checked/JIT/Regression/CLR-x86-JIT/V1-QFE/b147816/b147816/b147816.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/resource/j/workspace/dotnet_coreclr/master/checked_centos7.1/bin/tests/Linux.x64.Checked/TestWrappers/JIT.Regression/JIT.Regression.XUnitWrapper.cs(53939,0): at JIT_Regression._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_._CLR_x86_JIT_V1_QFE_b147816_b147816_b147816_sh()\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/21483","RelatedDescription":"Open issue \"Assertion failed 'op1->gtIntConCommon.ImmedValCanBeFolded(this, tree->OperGet())'\" (#21483)"},{"Id":"389547011","IsPullRequest":true,"CreatedAt":"2018-12-11T00:34:32","Actor":"fiigii","Number":"21480","RawContent":null,"Title":"[WIP]  Implement the remaining BMI1/2 intrinsic","State":"open","Body":"This PR implements the remaining BMI1/2 intrinsic. \r\n\r\nAfter this PR, BMI1 and BMI2 get fully implemented and all the intrinsic APIs proposed in https://github.com/dotnet/corefx/issues/22940 are enabled for .NET Core 3.0.\r\n\r\nClose https://github.com/dotnet/coreclr/issues/18712\r\n\r\n@tannergooding @CarolEidt ","Url":"https://github.com/dotnet/coreclr/pull/21480","RelatedDescription":"Open PR \"[WIP]  Implement the remaining BMI1/2 intrinsic\" (#21480)"},{"Id":"389529634","IsPullRequest":true,"CreatedAt":"2018-12-10T23:19:35","Actor":"AndyAyersMS","Number":"21477","RawContent":null,"Title":"JIT: handle byref-typed immediates in encoding","State":"open","Body":"We may now retype some immediates (for instance RVA statics feeding into Spans)\r\nas byrefs.  These need to be tracked as such during encoding so that the encoder\r\nGC liveness tracking stays current.\r\n\r\nFixes the assert seen in #21466.","Url":"https://github.com/dotnet/coreclr/pull/21477","RelatedDescription":"Open PR \"JIT: handle byref-typed immediates in encoding\" (#21477)"},{"Id":"389519213","IsPullRequest":true,"CreatedAt":"2018-12-10T22:42:33","Actor":"AaronRobinsonMSFT","Number":"21476","RawContent":null,"Title":"Minor cleanup of the interoputil.h API","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21476","RelatedDescription":"Open PR \"Minor cleanup of the interoputil.h API\" (#21476)"},{"Id":"389498261","IsPullRequest":true,"CreatedAt":"2018-12-10T21:40:34","Actor":"odhanson","Number":"21475","RawContent":null,"Title":"[release/2.2] Added Close On Exec Attribute for Mutex files","State":"open","Body":"Fixes: #21455\r\nBackport: bc03ef9aeb\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21475","RelatedDescription":"Open PR \"[release/2.2] Added Close On Exec Attribute for Mutex files\" (#21475)"},{"Id":"389497258","IsPullRequest":true,"CreatedAt":"2018-12-10T21:37:43","Actor":"odhanson","Number":"21474","RawContent":null,"Title":"[release/2.2] Fixed bug where \"DCI_NUMA\" was missing from debug channel names","State":"open","Body":"#### Description\r\nIn commit 48ebab8 the DCI_NUMA entry was added to the list of Debug Channels in dbgmsg.h. However dbg_channel_names array in dbgmsg.cpp was not updated. Thus, when iterating over dbg_channel_names in the DBG_init_channels method, we overrun the array by trying to access index 24.\r\nIn additional to adding \"DCI_NUMA\" to dbg_channel_names, a static assertion was added to verify that  dbg_channel_names length is valid. Also added some comments to help developers not to forget to add corresponding entries in dbg_channel_names.\r\n \t\t\r\n#### Customer Impact\r\nThis impacts developers who try to enable PAL_DBG_CHANNELS to log detailed information on which PAL functions were called with what parameters and what was the outcome. Enabling those causes EXC_BAD_ACCESS Exception.\r\n\r\n#### Regression?\r\nYes\r\n\t\t\r\n#### Risk\r\nNone\r\n\r\nFixes #21454\r\nBackport: 9a59c40788\r\n--\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21474","RelatedDescription":"Open PR \"[release/2.2] Fixed bug where \"DCI_NUMA\" was missing from debug channel names\" (#21474)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"390037621","IsPullRequest":false,"CreatedAt":"2018-12-12T02:24:47","Actor":"xavierjohn","Number":"10465","RawContent":null,"Title":"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work","State":"open","Body":"Trying to publish a .net core exe without the runtime using the following command\r\n\r\n## Steps to reproduce\r\ndotnet publish --configuration Release --runtime win7-x64 --self-contained false --output c:\\outputfolder\r\n\r\n## Expected  behavior\r\nProduces a {application}.exe\r\n\r\n## Actual behavior\r\nProduces apphost.exe that does not work.\r\n\r\nI can run the program using\r\ndotnet.exe application.dll\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.17134\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\nVersion: 2.1.6\r\nCommit: 3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10465","RelatedDescription":"Open issue \"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work\" (#10465)"},{"Id":"390022633","IsPullRequest":false,"CreatedAt":"2018-12-12T01:11:44","Actor":"donhuvy","Number":"10464","RawContent":null,"Title":"No webpage was found for the web address: https://localhost:5001/","State":"open","Body":"## Steps to reproduce\r\nUse Windows 10 Pro, Visual studio 2019 Preview\r\n```\r\ndotnet new webapi\r\ndotnet restore\r\ndotnet run\r\n```\r\n\r\n## Expected  behavior\r\nhttps://localhost:5001/ Show webpage\r\n\r\n## Actual behavior\r\nhttps://localhost:5001/ Error\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nC:\\Users\\donhuvy>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.600-preview-009426\r\n Commit:    48b4f2105d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.600-preview-009426\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n<img width=\"960\" alt=\"dotnet1\" src=\"https://user-images.githubusercontent.com/1328316/49840337-8d9cc600-fde5-11e8-9969-957e01a3e58a.png\">\r\n<img width=\"800\" alt=\"dotnet2\" src=\"https://user-images.githubusercontent.com/1328316/49840338-8e355c80-fde5-11e8-8c46-d314285e44c2.png\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10464","RelatedDescription":"Open issue \"No webpage was found for the web address: https://localhost:5001/\" (#10464)"},{"Id":"389996026","IsPullRequest":true,"CreatedAt":"2018-12-11T23:16:47","Actor":"jainaashish","Number":"10463","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"open","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli","Url":"https://github.com/dotnet/cli/pull/10463","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10463)"},{"Id":"389836381","IsPullRequest":true,"CreatedAt":"2018-12-11T17:38:13","Actor":"nugetlurker","Number":"10462","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10462","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10462)"},{"Id":"388965434","IsPullRequest":false,"CreatedAt":"2018-12-11T17:35:59","Actor":"taori","Number":"10454","RawContent":null,"Title":"CS0118 if folder name ends with \"Application\"","State":"closed","Body":"## Steps to reproduce\r\n- create folder like Company.Desktop.Application\r\n- enter folder\r\n- dotnet new wpf\r\n- dotnet run\r\n\r\n## Expected  behavior\r\nApplication runs\r\n\r\n## Actual behavior\r\nApplication can't compile because of CS0118\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\ndotnet --info\r\n\r\nMicrosoft Windows [Version 6.3.9600]\r\n(c) 2013 Microsoft Corporation. Alle Rechte vorbehalten.\r\n\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10454","RelatedDescription":"Closed issue \"CS0118 if folder name ends with \"Application\"\" (#10454)"},{"Id":"389836363","IsPullRequest":true,"CreatedAt":"2018-12-11T16:05:45","Actor":"nugetlurker","Number":"10461","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"open","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10461","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10461)"},{"Id":"389754456","IsPullRequest":true,"CreatedAt":"2018-12-11T13:03:33","Actor":"dotnet-maestro[bot]","Number":"10460","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10460","RelatedDescription":"Open PR \"Update dependency files\" (#10460)"},{"Id":"389447196","IsPullRequest":false,"CreatedAt":"2018-12-10T19:17:18","Actor":"seancpeters","Number":"10459","RawContent":null,"Title":"dotnet tool aspnet-codegenerator looks for executable at wrong path","State":"open","Body":"_From @tbureck on December 8, 2018 23:16_\n\nI'm currently following [this guide](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&tabs=netcore-cli#scaffold-identity-into-an-empty-project) in order to scaffold Identity in my existing ASP.NET Core project. When trying to run the scaffolder command with the help option, though, I'm getting this error message:\r\n\r\n```\r\n> dotnet aspnet-codegenerator --help\r\nThe application to execute does not exist: 'C:\\Users\\Tim\\.dotnet\\tools\\.store\\dotnet-aspnet-codegenerator\\2.2.0-rtm-35687\\dotnet-aspnet-codegener\r\nator\\2.2.0-rtm-35687\\tools\\netcoreapp2.1\\any\\dotnet-aspnet-codegenerator.dll'.\r\n```\r\n\r\nI've checked the .dotnet\\tools\\.store directory and the tool seems to be installed correctly. BUT, it is installed in a `2.2.0` directory instead of the `2.2.0-rtm-35687` directory, which dotnet tool is looking in.\r\n\r\nI've opened [a thread on Stackoverflow](https://stackoverflow.com/questions/53676499/dotnet-tool-aspnet-codegenerator-looks-for-executable-at-wrong-path) as well and someone else seems to have the same issue, which is why I'm creating this issue.\r\n\r\nWhy is it that `dotnet tool` is looking in the `2.2.0-rtm-35687` sub directory instead of the `2.2.0` where it is actually installed?\r\n\r\nEdit: my dotnet version is `2.2.100`\n\n_Copied from original issue: aspnet/Scaffolding#932_","Url":"https://github.com/dotnet/cli/issues/10459","RelatedDescription":"Open issue \"dotnet tool aspnet-codegenerator looks for executable at wrong path\" (#10459)"},{"Id":"389058322","IsPullRequest":false,"CreatedAt":"2018-12-10T17:28:27","Actor":"taori","Number":"10457","RawContent":null,"Title":"Feature request: dotnet new wpfcontrollib 3.0.0 Preview 1","State":"closed","Body":"I was able to create a control lib using dotnet new classlib, however this project lacks some attributes for wpf to bind to it properly. + at this stage it seems the targetframework has to be locked to .net461+ in order to reference PresentationCore and other relevant assemblies.\r\n\r\nIdeally that option should exist before netcore 3 is RTM","Url":"https://github.com/dotnet/cli/issues/10457","RelatedDescription":"Closed issue \"Feature request: dotnet new wpfcontrollib 3.0.0 Preview 1\" (#10457)"},{"Id":"389061467","IsPullRequest":false,"CreatedAt":"2018-12-09T20:37:20","Actor":"ConnorChristie","Number":"10458","RawContent":null,"Title":"Adding dotnet tool from custom source doesn't work on Ubuntu","State":"open","Body":"## Steps to reproduce\r\nTry installing the following tool from myget pre-release source:\r\n```\r\ndotnet tool install -g Nethereum.Generator.Console --version 1.0.2-CI-20181129-133640 --add-source https://www.myget.org/F/nethereum/api/v3/index.json\r\n```\r\n\r\n## Expected  behavior\r\n```\r\nYou can invoke the tool using the following command: Nethereum.Generator.Console\r\nTool 'nethereum.generator.console' (version '1.0.2-ci-20181129-133640') was successfully installed.\r\n```\r\n\r\n## Actual behavior\r\n```\r\nThe settings file in the tool's NuGet package is invalid: Failed to retrieve tool configuration: Could not find a part of the path '/home/vsts/.dotnet/tools/.store/nethereum.generator.console/1.0.2-ci-20181129-133640/nethereum.generator.console/1.0.2-CI-20181129-133640/tools/netcoreapp2.1/any/DotnetToolSettings.xml'.\r\nTool 'nethereum.generator.console' failed to install. Please contact the tool author for assistance.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n2018-12-09T20:35:08.3469399Z .NET Core SDK (reflecting any global.json):\r\n2018-12-09T20:35:08.3470064Z  Version:   2.1.500\r\n2018-12-09T20:35:08.3476095Z  Commit:    b68b931422\r\n2018-12-09T20:35:08.3476541Z \r\n2018-12-09T20:35:08.3476837Z Runtime Environment:\r\n2018-12-09T20:35:08.3477067Z  OS Name:     ubuntu\r\n2018-12-09T20:35:08.3477314Z  OS Version:  16.04\r\n2018-12-09T20:35:08.3477560Z  OS Platform: Linux\r\n2018-12-09T20:35:08.6814327Z  RID:         ubuntu.16.04-x64\r\n2018-12-09T20:35:08.7161135Z  Base Path:   /usr/share/dotnet/sdk/2.1.500/\r\n2018-12-09T20:35:08.7208165Z \r\n2018-12-09T20:35:08.7208445Z Host (useful for support):\r\n2018-12-09T20:35:08.7208576Z   Version: 2.1.6\r\n2018-12-09T20:35:08.7208682Z   Commit:  3f4f8eebd8\r\n2018-12-09T20:35:08.7208828Z \r\n2018-12-09T20:35:08.7208939Z .NET Core SDKs installed:\r\n2018-12-09T20:35:08.7209048Z   1.0.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209249Z   1.1.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209363Z   1.1.5 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209467Z   1.1.7 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209605Z   1.1.8 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209717Z   1.1.9 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209819Z   1.1.10 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209979Z   1.1.11 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210092Z   2.0.0 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210194Z   2.0.3 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210295Z   2.1.2 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210573Z   2.1.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210733Z   2.1.100 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210769Z   2.1.101 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210859Z   2.1.102 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210934Z   2.1.103 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210966Z   2.1.104 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211014Z   2.1.105 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211045Z   2.1.200 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211123Z   2.1.201 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211156Z   2.1.202 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211185Z   2.1.300 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211214Z   2.1.301 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211296Z   2.1.302 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211326Z   2.1.400 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211355Z   2.1.401 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211603Z   2.1.402 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211640Z   2.1.403 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211676Z   2.1.500 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211700Z \r\n2018-12-09T20:35:08.7211738Z .NET Core runtimes installed:\r\n2018-12-09T20:35:08.7211824Z   Microsoft.AspNetCore.All 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7211867Z   Microsoft.AspNetCore.All 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212087Z   Microsoft.AspNetCore.All 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212174Z   Microsoft.AspNetCore.All 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212215Z   Microsoft.AspNetCore.All 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212365Z   Microsoft.AspNetCore.All 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212451Z   Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212491Z   Microsoft.AspNetCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212529Z   Microsoft.AspNetCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212609Z   Microsoft.AspNetCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212650Z   Microsoft.AspNetCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212697Z   Microsoft.AspNetCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212736Z   Microsoft.AspNetCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212819Z   Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212864Z   Microsoft.NETCore.App 1.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7212904Z   Microsoft.NETCore.App 1.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7212990Z   Microsoft.NETCore.App 1.0.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213029Z   Microsoft.NETCore.App 1.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213067Z   Microsoft.NETCore.App 1.0.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213147Z   Microsoft.NETCore.App 1.0.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213196Z   Microsoft.NETCore.App 1.0.12 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213234Z   Microsoft.NETCore.App 1.0.13 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213311Z   Microsoft.NETCore.App 1.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213351Z   Microsoft.NETCore.App 1.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213397Z   Microsoft.NETCore.App 1.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213507Z   Microsoft.NETCore.App 1.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213547Z   Microsoft.NETCore.App 1.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213585Z   Microsoft.NETCore.App 1.1.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213624Z   Microsoft.NETCore.App 1.1.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213706Z   Microsoft.NETCore.App 1.1.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213753Z   Microsoft.NETCore.App 2.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213791Z   Microsoft.NETCore.App 2.0.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213873Z   Microsoft.NETCore.App 2.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213920Z   Microsoft.NETCore.App 2.0.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213957Z   Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214043Z   Microsoft.NETCore.App 2.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214083Z   Microsoft.NETCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214122Z   Microsoft.NETCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214203Z   Microsoft.NETCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214365Z   Microsoft.NETCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214404Z   Microsoft.NETCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214443Z   Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214527Z   Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\nThis is an Azure hosted Ubuntu-16.04 environment.\r\n\r\nI am only having this problem on Ubuntu 16.04, otherwise it works on macOS Mojave and Windows 10 as expected.","Url":"https://github.com/dotnet/cli/issues/10458","RelatedDescription":"Open issue \"Adding dotnet tool from custom source doesn't work on Ubuntu\" (#10458)"},{"Id":"388920339","IsPullRequest":true,"CreatedAt":"2018-12-09T18:56:21","Actor":"dotnet-maestro[bot]","Number":"10453","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10453","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10453)"},{"Id":"389041633","IsPullRequest":false,"CreatedAt":"2018-12-09T18:47:38","Actor":"rrnewton","Number":"10456","RawContent":null,"Title":"Add Warning? dotnet publish --output of multiple projects corrupts dependencies (DLL hell)","State":"closed","Body":"## Steps to reproduce\r\n\r\nBuild two projects with the same output:\r\n\r\n```\r\ndotnet publish --output <absolutepath> A.csproj\r\ndotnet publish --output <absolutepath> B.csproj\r\n```\r\n\r\n## Expected  behavior\r\n\r\nErrors when the A and B projects attempt to copy conflicting versions of some dependency (`Foo.dll`).\r\n\r\nOR \r\n\r\nTells us that we're being very naughty and not to ever publish two projects to the same directory.\r\n\r\n## Actual behavior\r\n\r\nB's version of `Foo.dll` clobbers the second.  Executables installed by A can run with undefined behavior because they pick up the wrong version of this library (reviving DLL hell).\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nWe're releasing a project that is testing on Mac, Windows, Linux and inside Docker containers.  This is consistent across all the versions of the .NET core SDK we're using (oldest 2.1.202 under Docker, newest is 2.1.500 on Azure DevOps Pipelines hosts).  Here's one example from an ADO run:\r\n\r\n```\r\n .NET Core SDK (reflecting any global.json):\r\nVersion:   2.1.500\r\nCommit:    b68b931422\r\nRuntime Environment:\r\nOS Name:     ubuntu\r\nOS Version:  16.04\r\nOS Platform: Linux\r\nRID:         ubuntu.16.04-x64\r\nBase Path:   /usr/share/dotnet/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\nVersion: 2.1.6\r\nCommit:  3f4f8eebd8\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10456","RelatedDescription":"Closed issue \"Add Warning? dotnet publish --output of multiple projects corrupts dependencies (DLL hell)\" (#10456)"},{"Id":"389037832","IsPullRequest":false,"CreatedAt":"2018-12-09T18:38:21","Actor":"balbarak","Number":"10455","RawContent":null,"Title":"Add command line to upgrade dotnet runtime and SDK","State":"closed","Body":"### Ex:\r\n\r\ndotnet upgrade {version-no}\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10455","RelatedDescription":"Closed issue \"Add command line to upgrade dotnet runtime and SDK\" (#10455)"},{"Id":"388823399","IsPullRequest":false,"CreatedAt":"2018-12-08T17:16:05","Actor":"dsplaisted","Number":"10450","RawContent":null,"Title":"Error when trying to`dotnet run` and using the latest build of .NET Core 3.0 preview","State":"closed","Body":"@pgolebiowski commented on [Mon Nov 26 2018](https://github.com/dotnet/core/issues/2075)\n\n## Steps to reproduce\r\n\r\n1. Go to the page with [daily builds of .NET Core 3.0](https://github.com/dotnet/core-sdk/blob/master/README.md#installers-and-binaries).\r\n2. Download the macOS installer for *Master (3.0.x Runtime)*.\r\n3. Install.\r\n4. Check `dotnet` version and info:\r\n\r\n```bash\r\n↪ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009784\r\n Commit:    d86a1816c4\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.13-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview-009784/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [/usr/local/share/dotnet/sdk]\r\n  2.1.402 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009784 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18572-0018 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n5. Create a new console application:\r\n\r\n```bash\r\ndotnet new console -o Test\r\n```\r\n\r\nwhich by default contains:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n6. Hit `dotnet run`.\r\n\r\n## Error\r\n\r\n```\r\n↪ dotnet run\r\n/usr/local/share/dotnet/sdk/2.1.402/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [/Users/pgolebio/patryk/home/apps/hyperflow/src/Test/Test.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\n## Question\r\n\r\nHow to successfully run this console application? Why does it use 2.1.402 even though when asked for `dotnet --version`, it says `3.0.100-preview-009784`?\n\n---\n\n@karelz commented on [Tue Nov 27 2018](https://github.com/dotnet/core/issues/2075#issuecomment-442176157)\n\n@nguerrera @dsplaisted can you please help route this issue?\n\n---\n\n@pgolebiowski commented on [Fri Dec 07 2018](https://github.com/dotnet/core/issues/2075#issuecomment-445191533)\n\nHey guys, do you have an idea for how to proceed? @karelz @nguerrera @dsplaisted \n\n","Url":"https://github.com/dotnet/cli/issues/10450","RelatedDescription":"Closed issue \"Error when trying to`dotnet run` and using the latest build of .NET Core 3.0 preview\" (#10450)"},{"Id":"388884055","IsPullRequest":false,"CreatedAt":"2018-12-08T04:26:44","Actor":"igormcoelho","Number":"10452","RawContent":null,"Title":"error MSB4018: System.InvalidOperationException: PE image does not have metadata.","State":"open","Body":"## Steps to reproduce\r\nFailure is happening when I try to `dotnet restore` a `.csproj` with the following packages (inside a docker container):\r\n```xml\r\n  <ItemGroup>\r\n    <PackageReference Include=\"FluentAssertions\" Version=\"4.19.4\" />\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.3.0\" />\r\n    <PackageReference Include=\"MSTest.TestAdapter\" Version=\"1.2.0\" />\r\n    <PackageReference Include=\"MSTest.TestFramework\" Version=\"1.2.0\" />\r\n    <PackageReference Include=\"Moq\" Version=\"4.7.63\" />\r\n    <PackageReference Include=\"Akka.MultiNodeTestRunner\" Version=\"1.3.10\" />\r\n    <PackageReference Include=\"Akka.TestKit\" Version=\"1.3.10\" />\r\n    <PackageReference Include=\"Akka.TestKit.Xunit2\" Version=\"1.3.10\" />\r\n  </ItemGroup>\r\n```\r\nIf I remove package `<PackageReference Include=\"Akka.MultiNodeTestRunner\" Version=\"1.3.10\" />` the process goes correctly, so it must be something related to it.\r\n\r\n## Expected  behavior\r\n\r\nSome packages download normally, and it finishes with this error:\r\n`error MSB4018: System.InvalidOperationException: PE image does not have metadata.` (followed by many other errors.\r\nAnother error happens just before this one: `/usr/share/dotnet/sdk/2.1.200/Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018: The \"ResolveAssemblyReference\" task failed unexpectedly.`\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n.NET Command Line Tools (2.1.200)\r\n\r\nProduct Information:\r\n Version:            2.1.200\r\n Commit SHA-1 hash:  2edba8d7f1\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.200/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n\r\n\r\n\r\n(I tried with dotnet core 2.2, but the same happens)\r\n","Url":"https://github.com/dotnet/cli/issues/10452","RelatedDescription":"Open issue \"error MSB4018: System.InvalidOperationException: PE image does not have metadata.\" (#10452)"},{"Id":"388865869","IsPullRequest":false,"CreatedAt":"2018-12-08T00:55:20","Actor":"KirillOsenkov","Number":"10451","RawContent":null,"Title":"Try to avoid first-chance COMException in VSSettings.cs when running outside MSBuild folder","State":"open","Body":"When running outside MSBuild folder there's a first-chance COMException in VSSettings.cs: Element not found (HRESULT 0x80070490).\r\n\r\nIt was introduced here:\r\nhttps://github.com/dotnet/cli/pull/9547\r\n\r\nwith the comment:\r\n```\r\nNeed try/catch around the interop here. Getting COMException when running an msbuild.exe outside of VS folder.\r\n```\r\n\r\nThis is certainly very low pri, but I'd still be curious if there's any way to work around this. Is this because Windows is looking to find the native .dll in the current directory or PATH, and doesn't find it? Wasn't there a trick to add the directory with the .dll to the PATH environment variable to solve this kind of issues?\r\n\r\nWould be nice to fix, but not very blocking or urgent.\r\n\r\nThanks.\r\n\r\nStack:\r\n```\r\n \tMicrosoft.DotNet.MSBuildSdkResolver.dll!Microsoft.DotNet.MSBuildSdkResolver.VSSettings.VSSettings Line 41\tC#\r\n>\tMicrosoft.DotNet.MSBuildSdkResolver.dll!Microsoft.DotNet.MSBuildSdkResolver.VSSettings.VSSettings Line 25\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tMicrosoft.DotNet.MSBuildSdkResolver.dll!Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.DotNetMSBuildSdkResolver Line 38\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tmscorlib.dll!System.RuntimeType.CreateInstanceSlow Line 5430\tC#\r\n \tmscorlib.dll!System.Activator.CreateInstance Line 193\tC#\r\n \tmscorlib.dll!System.Activator.CreateInstance Line 134\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers Line 164\tC#\r\n```","Url":"https://github.com/dotnet/cli/issues/10451","RelatedDescription":"Open issue \"Try to avoid first-chance COMException in VSSettings.cs when running outside MSBuild folder\" (#10451)"},{"Id":"388801696","IsPullRequest":true,"CreatedAt":"2018-12-07T21:25:41","Actor":"nguerrera","Number":"10449","RawContent":null,"Title":"Update roslyn","State":"closed","Body":"Matching dotnet/toolset#53 for 2.1.6xx\r\n","Url":"https://github.com/dotnet/cli/pull/10449","RelatedDescription":"Closed or merged PR \"Update roslyn\" (#10449)"},{"Id":"388646327","IsPullRequest":true,"CreatedAt":"2018-12-07T18:14:36","Actor":"dotnet-maestro[bot]","Number":"10447","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10447","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10447)"},{"Id":"388716372","IsPullRequest":false,"CreatedAt":"2018-12-07T17:30:45","Actor":"DoCode","Number":"10448","RawContent":null,"Title":"dotnet restore failed on private (authenticated) feeds on .NET SDK > v2.2.100","State":"closed","Body":"## Steps to reproduce\r\n`dotnet restore project.proj`\r\n\r\n## Expected  behavior\r\nNuGet restore is successful.\r\n\r\n## Actual behavior\r\n```\r\nRetrying 'FindPackagesByIdAsyncCore' for source 'https://xxx.xxx.xxx/f/core-dev/api/v2/FindPackagesById()?id='xxx'&semVerLevel=2.0.0'.\r\nResponse status code does not indicate success: 401 (Unauthorized).\r\n```\r\n\r\nIt works with all version before 2.2.100!  \r\nAll other versions, also 3.x failed.","Url":"https://github.com/dotnet/cli/issues/10448","RelatedDescription":"Closed issue \"dotnet restore failed on private (authenticated) feeds on .NET SDK > v2.2.100\" (#10448)"},{"Id":"388204756","IsPullRequest":true,"CreatedAt":"2018-12-07T00:44:03","Actor":"dotnet-maestro[bot]","Number":"10444","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10444","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10444)"},{"Id":"388418998","IsPullRequest":false,"CreatedAt":"2018-12-06T22:07:58","Actor":"wli3","Number":"10446","RawContent":null,"Title":"`dotnet new tool-manifest` will put dotnet-tools.json under .config folder","State":"open","Body":"Open this issue for feedback. We hope to use the convention of `.config` folder to avoid the clutter of config file under the repo root. Start from local tools manifest","Url":"https://github.com/dotnet/cli/issues/10446","RelatedDescription":"Open issue \"`dotnet new tool-manifest` will put dotnet-tools.json under .config folder\" (#10446)"},{"Id":"388384314","IsPullRequest":false,"CreatedAt":"2018-12-06T20:26:59","Actor":"aL3891","Number":"10445","RawContent":null,"Title":"Incorrect binding redirect in net471 project with .net core 3 sdk","State":"open","Body":"Hello friends,\r\n\r\nI'm having an odd issue with our existing projects that are targeting net 471. After installing the .net core 3 preview, binding redirects are generated differently, causing runtime exceptions. What's more, setting the sdk version in global.json does not seem to fix the issue, only uninstalling the v3 sdk does the trick. (this seems very strange to me btw, almost to the point that i think i've done something wrong)\r\n\r\nOne webapp that is using signalR on full framework produces this .config snippet without .net core 3 sdk\r\n\r\n```\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Microsoft.Owin.Security\" publicKeyToken=\"31bf3856ad364e35\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.0.0\" newVersion=\"4.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-11.0.0.0\" newVersion=\"11.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n```\r\n\r\nand with the .net 3 sdk installed (exact same source):\r\n\r\n```\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-10.0.0.0\" newVersion=\"10.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Microsoft.Owin\" publicKeyToken=\"31bf3856ad364e35\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-2.1.0.0\" newVersion=\"2.1.0.0\" />\r\n      </dependentAssembly>\r\n```\r\n\r\ni can supply binlog files if it would be helpful but our solution is fairly large so i might have to send them directly to someone\r\n\r\nI was just wondering if anyone else has seen something like this. if i set the binding redirects manually to the correct versions everything works, it's just the auto generated ones that seem fail. These project uses the new format.","Url":"https://github.com/dotnet/cli/issues/10445","RelatedDescription":"Open issue \"Incorrect binding redirect in net471 project with .net core 3 sdk\" (#10445)"},{"Id":"387878638","IsPullRequest":true,"CreatedAt":"2018-12-05T23:02:07","Actor":"livarcocc","Number":"10441","RawContent":null,"Title":"Update SDK to 2.2.101-preview3-63605-02","State":"closed","Body":"Contains a matching nuGet version.\r\n","Url":"https://github.com/dotnet/cli/pull/10441","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.101-preview3-63605-02\" (#10441)"},{"Id":"387968555","IsPullRequest":true,"CreatedAt":"2018-12-05T22:11:17","Actor":"rainersigwald","Number":"10443","RawContent":null,"Title":"MSBuild 16.0.256-preview","State":"open","Body":"This version of MSBuild is in VS `lab/d16.0stg` at the moment.","Url":"https://github.com/dotnet/cli/pull/10443","RelatedDescription":"Open PR \"MSBuild 16.0.256-preview\" (#10443)"},{"Id":"387752546","IsPullRequest":true,"CreatedAt":"2018-12-05T21:47:26","Actor":"singhsarab","Number":"10439","RawContent":null,"Title":"TestPlatform insertion 16.0.0-preview-20181205-02","State":"closed","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.0.0-preview-20181205-02\r\n","Url":"https://github.com/dotnet/cli/pull/10439","RelatedDescription":"Closed or merged PR \"TestPlatform insertion 16.0.0-preview-20181205-02\" (#10439)"},{"Id":"387611038","IsPullRequest":true,"CreatedAt":"2018-12-05T18:56:34","Actor":"livarcocc","Number":"10437","RawContent":null,"Title":"Update SDK to 2.1.501-preview-63605-01","State":"closed","Body":"This SDK version contains a matching NuGet version.\r\n","Url":"https://github.com/dotnet/cli/pull/10437","RelatedDescription":"Closed or merged PR \"Update SDK to 2.1.501-preview-63605-01\" (#10437)"},{"Id":"387879538","IsPullRequest":false,"CreatedAt":"2018-12-05T18:06:51","Actor":"livarcocc","Number":"10442","RawContent":null,"Title":"Use flattened runtime packs","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/10442","RelatedDescription":"Open issue \"Use flattened runtime packs\" (#10442)"},{"Id":"387877676","IsPullRequest":false,"CreatedAt":"2018-12-05T18:01:32","Actor":"livarcocc","Number":"10440","RawContent":null,"Title":"Switching to using Download only packages to acquire runtime packs","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/10440","RelatedDescription":"Open issue \"Switching to using Download only packages to acquire runtime packs\" (#10440)"},{"Id":"387725033","IsPullRequest":true,"CreatedAt":"2018-12-05T12:01:18","Actor":"dotnet-bot","Number":"10438","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10438","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10438)"},{"Id":"387537734","IsPullRequest":true,"CreatedAt":"2018-12-05T05:09:24","Actor":"dsplaisted","Number":"10436","RawContent":null,"Title":"Remove test for scenario which is better covered elsewhere","State":"closed","Body":"The GivenFrameworkDependentApps and GivenSelfContainedAppsRollForward tests do a better job of covering this scenario","Url":"https://github.com/dotnet/cli/pull/10436","RelatedDescription":"Closed or merged PR \"Remove test for scenario which is better covered elsewhere\" (#10436)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"390052989","IsPullRequest":true,"CreatedAt":"2018-12-12T03:45:19","Actor":"terrajobst","Number":"1009","RawContent":null,"Title":"Clean-up reference assembly","State":"open","Body":"This aligns the physical representation of the reference assembly with how it look like in .NET Core. No changes to the API surface; it's just to remove noise in future diffs.","Url":"https://github.com/dotnet/standard/pull/1009","RelatedDescription":"Open PR \"Clean-up reference assembly\" (#1009)"},{"Id":"389518834","IsPullRequest":true,"CreatedAt":"2018-12-12T03:42:31","Actor":"terrajobst","Number":"1007","RawContent":null,"Title":"Update FWLinks to use https instead of http","State":"closed","Body":"This change only affects the string for `[Obsolete]` message.\r\n\r\nJustification: It's generally bad to use `http` these day. Plus, it causes noise in the diffs.","Url":"https://github.com/dotnet/standard/pull/1007","RelatedDescription":"Closed or merged PR \"Update FWLinks to use https instead of http\" (#1007)"},{"Id":"389753658","IsPullRequest":true,"CreatedAt":"2018-12-11T13:11:39","Actor":"dotnet-maestro[bot]","Number":"1008","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18610.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1008","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1008)"},{"Id":"389020595","IsPullRequest":true,"CreatedAt":"2018-12-09T13:10:59","Actor":"dotnet-maestro[bot]","Number":"1006","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1006","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1006)"},{"Id":"388920215","IsPullRequest":true,"CreatedAt":"2018-12-08T13:10:58","Actor":"dotnet-maestro[bot]","Number":"1005","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18607.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1005","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1005)"},{"Id":"388645771","IsPullRequest":true,"CreatedAt":"2018-12-07T13:16:15","Actor":"dotnet-maestro[bot]","Number":"1004","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1004","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1004)"},{"Id":"388551526","IsPullRequest":false,"CreatedAt":"2018-12-07T08:26:51","Actor":"he-dev","Number":"1003","RawContent":null,"Title":"Documentation still not up-to-date","State":"open","Body":"I'd be great if you could keep the documentation up-to-date. Currently the only place where you can find anything about these two _super-secret_ elements:\r\n\r\n- `AppendTargetFrameworkToOutputPath`\r\n- `AppendRuntimeIdentifierToOutputPath `\r\n\r\nis this [comment](https://github.com/dotnet/standard/issues/512#issuecomment-332291043). Are there any more _hidden_ settings? \r\n\r\nDo you think you could improve this and maybe also add other _unofficial_ yet fully supported settings (if there are any)?","Url":"https://github.com/dotnet/standard/issues/1003","RelatedDescription":"Open issue \"Documentation still not up-to-date\" (#1003)"},{"Id":"388402668","IsPullRequest":true,"CreatedAt":"2018-12-06T22:17:23","Actor":"wtgodbe","Number":"1002","RawContent":null,"Title":"Move build output from `bin` to `artifacts`","State":"closed","Body":"This allows Arcade to take over in deciding where we output our build artifacts, so we no longer have everything going into the `bin` dir. I don't believe there's anywhere else that explicitly depends on Standard's `bin` dir, but please let me know if you think I'm missing anything.\r\n\r\n@ericstj @ViktorHofer @weshaggard PTAL\r\n\r\n@danmosemsft CC","Url":"https://github.com/dotnet/standard/pull/1002","RelatedDescription":"Closed or merged PR \"Move build output from `bin` to `artifacts`\" (#1002)"},{"Id":"388373169","IsPullRequest":true,"CreatedAt":"2018-12-06T20:04:55","Actor":"ericstj","Number":"1001","RawContent":null,"Title":"Remove Trimming package from dotnet/standard","State":"closed","Body":"Fixes: https://github.com/dotnet/standard/issues/788\r\n\r\nThose looking for an officially supported trimming tool should try:\r\nhttps://github.com/dotnet/core/blob/master/samples/linker-instructions.md\r\n\r\nThe assembly level linker has moved to:\r\nhttps://github.com/ericstj/Microsoft.Packaging.Tools.Trimming","Url":"https://github.com/dotnet/standard/pull/1001","RelatedDescription":"Closed or merged PR \"Remove Trimming package from dotnet/standard\" (#1001)"},{"Id":"386996248","IsPullRequest":true,"CreatedAt":"2018-12-06T18:57:40","Actor":"wtgodbe","Number":"991","RawContent":null,"Title":"Dummy commit to trigger CI - don't merge","State":"closed","Body":"Attempting to trigger CI again, please don't merge","Url":"https://github.com/dotnet/standard/pull/991","RelatedDescription":"Closed or merged PR \"Dummy commit to trigger CI - don't merge\" (#991)"},{"Id":"388204009","IsPullRequest":true,"CreatedAt":"2018-12-06T13:11:37","Actor":"dotnet-maestro[bot]","Number":"1000","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1000","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1000)"},{"Id":"388028724","IsPullRequest":true,"CreatedAt":"2018-12-06T02:23:11","Actor":"terrajobst","Number":"999","RawContent":null,"Title":"Sync .NET Standard's RefEmit with .NET Framework","State":"open","Body":"Fixes #987\r\n\r\nThe point of the sync is to get increase parity with .NET Framework and thus making it easier to port more existing code to .NET Standard 2.1 (or any platform implementing it).","Url":"https://github.com/dotnet/standard/pull/999","RelatedDescription":"Open PR \"Sync .NET Standard's RefEmit with .NET Framework\" (#999)"},{"Id":"387555933","IsPullRequest":true,"CreatedAt":"2018-12-06T02:14:39","Actor":"terrajobst","Number":"996","RawContent":null,"Title":"List excluded reflection emit APIs","State":"closed","Body":"I did a diff between `System.Reflection.Emit` in .NET Framework and .NET Standard to make sure the APIs we explicitly didn't bring to .NET Standard are listed here. This adds no APIs to .NET Standard, just comments to the source code of the reference assembly.\r\n\r\nI assume the @dotnet/nsboard has no problems with that as it's just book keeping for folks like me. Unless there is push back, I'm going to merge this tomorrow.\r\n\r\n**Update:** I forgot to mention that I plan to add another PR with the APIs we plan to add .NET Standard.","Url":"https://github.com/dotnet/standard/pull/996","RelatedDescription":"Closed or merged PR \"List excluded reflection emit APIs\" (#996)"},{"Id":"387902379","IsPullRequest":true,"CreatedAt":"2018-12-05T20:00:00","Actor":"wtgodbe","Number":"998","RawContent":null,"Title":"Change yml name to azure-pipelines.yml","State":"closed","Body":"In response to https://github.com/dotnet/arcade/issues/690#issuecomment-444562580\r\n\r\nChanges name of our pipeline file to the standard `azure-pipelines.yml`. I'll also update the build defs to reflect this change.\r\n\r\nCC @chcosta ","Url":"https://github.com/dotnet/standard/pull/998","RelatedDescription":"Closed or merged PR \"Change yml name to azure-pipelines.yml\" (#998)"},{"Id":"387746721","IsPullRequest":true,"CreatedAt":"2018-12-05T18:59:29","Actor":"dotnet-maestro[bot]","Number":"997","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18604.15\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/997","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#997)"},{"Id":"387484691","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:23","Actor":"wtgodbe","Number":"995","RawContent":null,"Title":"Output packages into Artifacts dir","State":"closed","Body":"This outputs packages into `ArtifactsPackagesDir`, so that Arcade can easily find them for signing & publishing (with this, we no longer need a custom `Signing.props` to specify where our packages live).\r\n\r\n@chcosta @ericstj PTAL\r\n\r\nShould fix the build error in https://dnceng.visualstudio.com/internal/_build/results?buildId=52052","Url":"https://github.com/dotnet/standard/pull/995","RelatedDescription":"Closed or merged PR \"Output packages into Artifacts dir\" (#995)"},{"Id":"387041262","IsPullRequest":true,"CreatedAt":"2018-12-04T18:10:15","Actor":"wtgodbe","Number":"993","RawContent":null,"Title":"Don't reference FeedTasksPackage","State":"closed","Body":"Arcade already restores this package when trying to publish: https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/tools/Tools.proj#L49\r\n\r\nSince the default version in arcade is currently `2.2-xxx` (https://github.com/dotnet/arcade/blob/069237d9a7e83bed62c9f664228125b95ddf91f6/src/Microsoft.DotNet.Arcade.Sdk/tools/DefaultVersions.props#L71), the build would fail when trying to import files from that package, since only the 3.0.0 version was getting restored: https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/tools/Publish.proj#L30\r\n\r\nCC @safern you'll want to make a similar change in CoreFx if you plan on doing Arcade publishing\r\n\r\n@chcosta PTAL","Url":"https://github.com/dotnet/standard/pull/993","RelatedDescription":"Closed or merged PR \"Don't reference FeedTasksPackage\" (#993)"},{"Id":"387274996","IsPullRequest":true,"CreatedAt":"2018-12-04T13:16:29","Actor":"dotnet-maestro[bot]","Number":"994","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18603.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/994","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#994)"},{"Id":"387011624","IsPullRequest":true,"CreatedAt":"2018-12-03T21:47:39","Actor":"wtgodbe","Number":"992","RawContent":null,"Title":"Fix _SignType, Variable Groups in pipebuild","State":"closed","Body":"This PR makes it so that we only access secrets in internal builds, and passes _SignType to the Windows builds.\r\n\r\n@chcosta PTAL","Url":"https://github.com/dotnet/standard/pull/992","RelatedDescription":"Closed or merged PR \"Fix _SignType, Variable Groups in pipebuild\" (#992)"},{"Id":"386963305","IsPullRequest":true,"CreatedAt":"2018-12-03T20:38:05","Actor":"wtgodbe","Number":"990","RawContent":null,"Title":"Dummy commit to test new CI - DO NOT MERGE","State":"closed","Body":"Testing to see if the new dnceng CI will trigger on this PR, and if it works. Please don't merge this.","Url":"https://github.com/dotnet/standard/pull/990","RelatedDescription":"Closed or merged PR \"Dummy commit to test new CI - DO NOT MERGE\" (#990)"},{"Id":"385881132","IsPullRequest":true,"CreatedAt":"2018-12-03T19:07:06","Actor":"wtgodbe","Number":"986","RawContent":null,"Title":"Convert Standard's CI/Pipebuild to YAML","State":"closed","Body":"This will allow us to move Standard's CI & pipebuild into DNCENG. I already have https://dnceng.visualstudio.com/internal/_build?definitionId=246&_a=summary & https://dnceng.visualstudio.com/public/_build?definitionId=235&_a=summary for the internal & public builds, respectively, which I'll have to point at `master` instead of my testing branch once this is merged. I'll also have to remove the triggers (and maybe delete?) the VSTS Standard pipebuild.\r\n\r\n@chcosta @riarenas @safern PTAL\r\n\r\nCC @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/986","RelatedDescription":"Closed or merged PR \"Convert Standard's CI/Pipebuild to YAML\" (#986)"},{"Id":"386456347","IsPullRequest":true,"CreatedAt":"2018-12-01T13:11:15","Actor":"dotnet-maestro[bot]","Number":"989","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18580.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/989","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#989)"},{"Id":"386178352","IsPullRequest":true,"CreatedAt":"2018-11-30T13:16:26","Actor":"dotnet-maestro[bot]","Number":"988","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18579.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/988","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#988)"},{"Id":"386016375","IsPullRequest":false,"CreatedAt":"2018-11-30T02:55:16","Actor":"terrajobst","Number":"987","RawContent":null,"Title":"System.Reflection.*: we should review differences with .NET Framework","State":"open","Body":"Reflection and Reflection.Emit were heavily subset; we should make sure that we're adding all the APIs back, unless they cause bad dependencies (such as CAS) or not supported on any platform (such as Reflection.Emit persistence).","Url":"https://github.com/dotnet/standard/issues/987","RelatedDescription":"Open issue \"System.Reflection.*: we should review differences with .NET Framework\" (#987)"},{"Id":"385725689","IsPullRequest":true,"CreatedAt":"2018-11-29T13:16:34","Actor":"dotnet-maestro[bot]","Number":"985","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18578.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18578.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18578.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18578.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/985","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#985)"},{"Id":"385257703","IsPullRequest":true,"CreatedAt":"2018-11-28T13:11:41","Actor":"dotnet-maestro[bot]","Number":"984","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18577.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18577.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18577.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18577.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/984","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#984)"},{"Id":"384784248","IsPullRequest":true,"CreatedAt":"2018-11-28T13:01:05","Actor":"dotnet-maestro[bot]","Number":"983","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18576.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18576.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18576.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18576.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/983","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#983)"},{"Id":"384320442","IsPullRequest":true,"CreatedAt":"2018-11-26T13:16:39","Actor":"dotnet-maestro[bot]","Number":"982","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18575.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/982","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#982)"},{"Id":"383526186","IsPullRequest":true,"CreatedAt":"2018-11-22T13:11:28","Actor":"dotnet-maestro[bot]","Number":"980","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#980)"},{"Id":"383107897","IsPullRequest":true,"CreatedAt":"2018-11-21T13:11:28","Actor":"dotnet-maestro[bot]","Number":"979","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#979)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"390052600","IsPullRequest":false,"CreatedAt":"2018-12-12T03:43:01","Actor":"halter73","Number":"34014","RawContent":null,"Title":"PipeWriter.FlushAsync() never completes in some scenarios","State":"open","Body":"There's a regression in PipeWriter.FlushAsync() which can be observed by running Kestrel's LibuvOutputConsumerTests against the 3.0 runtime. See aspnet/AspNetCore#4554.\r\n\r\nThe regression is triggered by flushing more than _pauseWriterThreshold bytes and then calling FlushAsync() again without waiting for backpressure to be relieved.\r\n\r\nBoth before and after 3.0, the second call to FlushAsync() triggers a call _writerAwaitable.Reset(). Starting with PR #33748, which I believe caused the regression, PipeAwaitable.Reset() now clears the _completion callback even if the callback was a continuation that was never invoked. Previously in this case, only the CancelationObserved sate would be cleared and the old callback would remain.\r\n\r\nThis makes it so that when FlushAsync() is called repeatedly without waiting for backpressure to be relieved, only the last awaited FlushAsync() ever completes. Previously, only the *first* awaited FlushAsync() would ever complete, and if you awaited any subsequent flushes, you'd get an exception explaining concurrent operations are not supported.\r\n\r\nThis is important because Kestrel intentionally relies on the old behavior when backing Streams with PipeWriters where there's no guarantee Stream.WriteAsync()/FlushAsync() is being properly awaited.\r\n\r\n\r\n```c#\r\n            // https://github.com/dotnet/corefxlab/issues/1334\r\n            // Pipelines don't support multiple awaiters on flush.\r\n            // While it's acceptable to call PipeWriter.FlushAsync again before the last FlushAsync completes,\r\n            // it is not acceptable to attach a new continuation (via await, AsTask(), etc..). In this case,\r\n            // we find previous flush Task which still accounts for any newly committed bytes and await that.\r\n            lock (_flushLock)\r\n            {\r\n                if (_lastFlushTask.IsCompleted)\r\n                {\r\n                    _lastFlushTask = flushValueTask.AsTask();\r\n                }\r\n\r\n                return TimeFlushAsync(minRate, count, outputAborter, cancellationToken);\r\n            }\r\n```\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/5c1fcd664d39db8fe5c8e38052a3cc29f90322f6/src/Kestrel.Core/Internal/Infrastructure/TimingPipeFlusher.cs#L66-L79\r\n\r\n@pakrym @sebastienros @davidfowl \t\r\n","Url":"https://github.com/dotnet/corefx/issues/34014","RelatedDescription":"Open issue \"PipeWriter.FlushAsync() never completes in some scenarios\" (#34014)"},{"Id":"390037164","IsPullRequest":true,"CreatedAt":"2018-12-12T02:22:32","Actor":"dotnet-maestro-bot","Number":"34013","RawContent":null,"Title":"Update CoreClr to preview-27212-01 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34013","RelatedDescription":"Open PR \"Update CoreClr to preview-27212-01 (master)\" (#34013)"},{"Id":"390031121","IsPullRequest":false,"CreatedAt":"2018-12-12T02:19:58","Actor":"xavierjohn","Number":"34012","RawContent":null,"Title":"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work","State":"closed","Body":"Trying to publish a .net core exe without the runtime using the following command\r\n\r\ndotnet publish --configuration Release --runtime win7-x64  --self-contained false --output c:\\outputfolder\r\n\r\ndoes not produce {binary}.exe. Instead there is an apphost.exe that does not work and gives error.\r\n_This executable is not bound to a managed DLL to execute. The binding value is:_\r\n\r\n\r\nMachine information:\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]","Url":"https://github.com/dotnet/corefx/issues/34012","RelatedDescription":"Closed issue \"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work\" (#34012)"},{"Id":"390023917","IsPullRequest":false,"CreatedAt":"2018-12-12T01:17:38","Actor":"ViktorHofer","Number":"34011","RawContent":null,"Title":"Failing builds with no indication what's failing","State":"open","Body":"Looking at the latest code coverage run I can see the build failed but there is absolutely no info what caused the build to fail: https://ci.dot.net/job/dotnet_corefx/job/master/job/code_coverage_windows/754/consoleText\r\n\r\nError lines (removed htmlpublisher output):\r\n```\r\nBuild Failed (exit code '-1073741819'). See log: D:\\j\\workspace\\code_coverage---b14a30e5\\artifacts\\log\\Debug\\Build.binlog\r\nBuild.cmd ErrorLevel=1\r\nBuild step 'Execute Windows batch command' marked build as failure\r\n[Current build status] check if current [FAILURE] is worse or equals then [SUCCESS] and better or equals then [SUCCESS]\r\nRun condition [Current build status] preventing perform for step [[Archive the artifacts]]\r\n[BFA] Scanning build for known causes...\r\n[BFA] Found failure cause(s):\r\n[BFA] Build step... marked build as failure from category Build\r\n[BFA] Done. 2s\r\n[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done\r\nFinished: FAILURE\r\n```\r\n\r\ncc @ericstj @wtgodbe ","Url":"https://github.com/dotnet/corefx/issues/34011","RelatedDescription":"Open issue \"Failing builds with no indication what's failing\" (#34011)"},{"Id":"390016019","IsPullRequest":true,"CreatedAt":"2018-12-12T00:39:58","Actor":"ericstj","Number":"34010","RawContent":null,"Title":"[Darc-Update] Update dependencies from build 20181211.13 of https://g…","State":"open","Body":"…ithub.com/dotnet/arcade","Url":"https://github.com/dotnet/corefx/pull/34010","RelatedDescription":"Open PR \"[Darc-Update] Update dependencies from build 20181211.13 of https://g…\" (#34010)"},{"Id":"390012036","IsPullRequest":true,"CreatedAt":"2018-12-12T00:28:42","Actor":"ViktorHofer","Number":"34009","RawContent":null,"Title":"Fix official build break helix upload","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/33910\r\n\r\nTest in our internal repo and it finally works.\r\n\r\nRelated issue https://github.com/Microsoft/msbuild/issues/471 for semicolon escapes. Also switched to another task to improve log output.","Url":"https://github.com/dotnet/corefx/pull/34009","RelatedDescription":"Closed or merged PR \"Fix official build break helix upload\" (#34009)"},{"Id":"390010947","IsPullRequest":false,"CreatedAt":"2018-12-12T00:16:51","Actor":"nguerrera","Number":"34008","RawContent":null,"Title":"Assembly(Definition|Reference).GetAssemblyName() do not match handling of neutral culture of AssemblyName.GetAssemblyName()","State":"open","Body":"```\r\nusing System;\r\nusing System.IO;\r\nusing System.Reflection;\r\nusing System.Reflection.Metadata;\r\nusing System.Reflection.PortableExecutable;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        var coreAssemblyPath = typeof(object).Assembly.Location;\r\n\r\n        Console.WriteLine(AssemblyName.GetAssemblyName(coreAssemblyPath));\r\n\r\n        using (var peReader = new PEReader(File.OpenRead(coreAssemblyPath)))\r\n        {\r\n            var mdReader = peReader.GetMetadataReader();\r\n            Console.WriteLine(mdReader.GetAssemblyDefinition().GetAssemblyName());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\nSystem.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\r\nSystem.Private.CoreLib, Version=4.0.0.0, PublicKeyToken=7cec85d7bea7798e\r\n```\r\n\r\nNotice culture=neutral vs culture omitted. ","Url":"https://github.com/dotnet/corefx/issues/34008","RelatedDescription":"Open issue \"Assembly(Definition|Reference).GetAssemblyName() do not match handling of neutral culture of AssemblyName.GetAssemblyName()\" (#34008)"},{"Id":"390009919","IsPullRequest":false,"CreatedAt":"2018-12-12T00:12:09","Actor":"ahsonkhan","Number":"34007","RawContent":null,"Title":"Expose the current context / scope as a property from the Utf8JsonReader.","State":"open","Body":"Split off from https://github.com/dotnet/corefx/issues/33967.\r\nThe JSON Document requires the concept of `in object` or `in array` which the JsonReader tracks and will be made internal to support the document. Should we expose it publically so the caller doesn't have to build their own stack to track this while reading?\r\n\r\nhttps://github.com/dotnet/corefx/blob/c30f2bc75066aeccd610f36c8ce84ae5aaff675a/src/System.Text.Json/src/System/Text/Json/Utf8JsonReader.cs#L31\r\n\r\n\r\n> The other internal detail that the document object needed is `InArray`, but that can be worked around by the caller maintaining their own `Stack<JsonTokenType>`.\r\n\r\n```C#\r\nnamespace System.Text.Json\r\n{\r\n    public ref partial struct Utf8JsonReader\r\n    {\r\n        public JsonContext Context { get; }\r\n        // OR one (or both) of these\r\n        public bool InObject { get; }\r\n        public bool InArray { get; }\r\n    }\r\n\r\n    // OR Scope?\r\n    // Can't call it state, since we already have such a concept and overloading it would be confusing\r\n    public enum JsonContext : byte\r\n    {\r\n        Object,\r\n        Array,\r\n        None,\r\n        Value, // Remove? OR split into specific JSON primitives, like String, Number, etc.?\r\n    }\r\n}\r\n```\r\n\r\ncc @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/34007","RelatedDescription":"Open issue \"Expose the current context / scope as a property from the Utf8JsonReader.\" (#34007)"},{"Id":"390008839","IsPullRequest":true,"CreatedAt":"2018-12-12T00:06:55","Actor":"caesar1995","Number":"34006","RawContent":null,"Title":"Fix CookieContainer memory leak","State":"open","Body":"Cookies are correctly removed based on `Capacity` and `PerDomainCapacity` from `CookieCollection` in each `PathList`, but we forget to clean up the `DomainTable` even when there is no/empty `PathList` associated with a `domainKey`. This can result in memory leak, particularly with these two cases:\r\n1. Add cookies for many distinct domains.\r\n2. Add cookies for the same domain with different paths.\r\n\r\nFix #33712.","Url":"https://github.com/dotnet/corefx/pull/34006","RelatedDescription":"Open PR \"Fix CookieContainer memory leak\" (#34006)"},{"Id":"390008676","IsPullRequest":false,"CreatedAt":"2018-12-12T00:06:13","Actor":"joperezr","Number":"34005","RawContent":null,"Title":"[arm32/Windows] System.Diagnostics.Tracing.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Diagnostics.Tracing.Tests produced the following results: passed 28/36 tests.\r\n\r\nMost of the 8 tests that fail did so with the following message:\r\n```\r\nAssert.NotNull() Failure\r\n   at BasicEventSourceTests.EventTestHarness.<>c__DisplayClass2_0.<RunTests>b__0(Event data) in F:\\git\\corefx\\src\\System.Diagnostics.Tracing\\tests\\BasicEventSourceTest\\Harness\\EventTestHarness.cs:line 108\r\n   at BasicEventSourceTests.EtwListener.OnEventHelper(TraceEvent data) in F:\\git\\corefx\\src\\System.Diagnostics.Tracing\\tests\\BasicEventSourceTest\\Harness\\EtwListener.cs:line 132\r\n   at Microsoft.Diagnostics.Tracing.UnhandledTraceEvent.Dispatch()\r\n   at Microsoft.Diagnostics.Tracing.TraceEventDispatcher.DoDispatch(TraceEvent anEvent)\r\n   at Microsoft.Diagnostics.Tracing.TraceEventDispatcher.Dispatch(TraceEvent anEvent)\r\n   at Microsoft.Diagnostics.Tracing.ETWTraceEventSource.RawDispatch(EVENT_RECORD* rawData)\r\n   at Microsoft.Diagnostics.Tracing.ETWTraceEventSource.ProcessOneFile()\r\n   at Microsoft.Diagnostics.Tracing.ETWTraceEventSource.Process()\r\n   at BasicEventSourceTests.EtwListener.Dispose() in F:\\git\\corefx\\src\\System.Diagnostics.Tracing\\tests\\BasicEventSourceTest\\Harness\\EtwListener.cs:line 112\r\n   at BasicEventSourceTests.EventTestHarness.RunTests(List`1 tests, Listener listener, EventSource source, FilteringOptions options) in F:\\git\\corefx\\src\\System.Diagnostics.Tracing\\tests\\BasicEventSourceTest\\Harness\\EventTestHarness.cs:line 170\r\n   at BasicEventSourceTests.TestsWriteEvent.Test_WriteEvent_ByteArray(Boolean useSelfDescribingEvents, Listener listener) in F:\\git\\corefx\\src\\System.Diagnostics.Tracing\\tests\\BasicEventSourceTest\\TestsWriteEvent.cs:line 657\r\n   at BasicEventSourceTests.TestsWriteEvent.Test_WriteEvent_ByteArray_Manifest_ETW() in F:\\git\\corefx\\src\\System.Diagnostics.Tracing\\tests\\BasicEventSourceTest\\TestsWriteEvent.Etw.cs:line 69\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669925/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34005","RelatedDescription":"Open issue \"[arm32/Windows] System.Diagnostics.Tracing.Tests failures on arm32 windows\" (#34005)"},{"Id":"390005975","IsPullRequest":false,"CreatedAt":"2018-12-11T23:55:20","Actor":"joperezr","Number":"34004","RawContent":null,"Title":"[arm32/Windows] System.Diagnostics.Process.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Diagnostics.Process.Tests produced the following results: passed 257/261 tests.\r\n\r\n4 tests failed the run for different reasons:\r\nSystem.Diagnostics.Tests.ProcessStartInfoTests.Verbs_GetWithExeExtension_ReturnsExpected\r\n```\r\nAssert.Contains() Failure\\r\\nNot found: runas\\r\\nIn value:  String[] [\\\"open\\\"]\r\n   at System.Diagnostics.Tests.ProcessStartInfoTests.Verbs_GetWithExeExtension_ReturnsExpected() in F:\\git\\corefx\\src\\System.Diagnostics.Process\\tests\\ProcessStartInfoTests.cs:line 534\r\n```\r\nSystem.Diagnostics.Tests.ProcessStartInfoTests.StartInfo_BadVerb(useShellExecute: True) and System.Diagnostics.Tests.ProcessStartInfoTests.StartInfo_BadExe(useShellExecute: True)\r\n```\r\nAssert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.Win32Exception)\\r\\nActual:   typeof(System.PlatformNotSupportedException): UseShellExecute is not supported on this platform.\\r\\n---- System.PlatformNotSupportedException : UseShellExecute is not supported on this platform.\r\n   at System.Diagnostics.Process.StartWithShellExecuteEx(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.Win32.cs:line 113\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.Win32.cs:line 24\r\n   at System.Diagnostics.Process.Start() in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.cs:line 1216\r\n   at System.Diagnostics.Process.Start(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.cs:line 1259\r\n   at System.Diagnostics.Tests.ProcessStartInfoTests.<>c__DisplayClass50_0.<StartInfo_BadVerb>b__0() in F:\\git\\corefx\\src\\System.Diagnostics.Process\\tests\\ProcessStartInfoTests.cs:line 1140\r\n----- Inner Stack Trace -----\r\n   at System.Diagnostics.Process.StartWithShellExecuteEx(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.Win32.cs:line 113\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.Win32.cs:line 24\r\n   at System.Diagnostics.Process.Start() in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.cs:line 1216\r\n   at System.Diagnostics.Process.Start(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.cs:line 1259\r\n   at System.Diagnostics.Tests.ProcessStartInfoTests.<>c__DisplayClass50_0.<StartInfo_BadVerb>b__0() in F:\\git\\corefx\\src\\System.Diagnostics.Process\\tests\\ProcessStartInfoTests.cs:line 1140\r\n```\r\n\r\nSystem.Diagnostics.Tests.ProcessStartInfoTests.StartInfo_BadExe(useShellExecute: False)\r\n```\r\nAssert.Equal() Failure\\r\\nExpected: 193\\r\\nActual:   120\r\n   at System.Diagnostics.Tests.ProcessStartInfoTests.StartInfo_BadExe(Boolean useShellExecute) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\tests\\ProcessStartInfoTests.cs:line 1163\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669898/testResults.zip)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34004","RelatedDescription":"Open issue \"[arm32/Windows] System.Diagnostics.Process.Tests failures on arm32 windows\" (#34004)"},{"Id":"390003331","IsPullRequest":true,"CreatedAt":"2018-12-11T23:44:23","Actor":"wfurt","Number":"34003","RawContent":null,"Title":"improve sysctl error reporting","State":"open","Body":"I bump to some \"sysctl returned -1\" messages in build logs. \r\nThat does not help at all with figuring out what was wrong and why. \r\n\r\nThis is attempt to make the exception somewhat more useful. \r\nWith this change we will print sysctl id (int) and errno instead of just returning code.   ","Url":"https://github.com/dotnet/corefx/pull/34003","RelatedDescription":"Open PR \"improve sysctl error reporting\" (#34003)"},{"Id":"390002831","IsPullRequest":false,"CreatedAt":"2018-12-11T23:42:31","Actor":"joperezr","Number":"34002","RawContent":null,"Title":"[arm32/Windows] System.Diagnostics.PerformanceCounter.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Diagnostics.PerformanceCounter.Tests produced the following results: passed 41/93 tests.\r\n\r\nMost of the 52 failures are due to a Win32Exception happening like the following:\r\n```\r\nSystem.AggregateException : One or more errors occurred. (The system cannot find the file specified.) (The following constructor parameters did not have matching fixture data: PerformanceDataTestsFixture fixture)\\r\\n---- System.ComponentModel.Win32Exception : The system cannot find the file specified.\\r\\n---- The following constructor parameters did not have matching fixture data: PerformanceDataTestsFixture fixture\r\n----- Inner Stack Trace #1 (System.ComponentModel.Win32Exception) -----\r\n   at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.Windows.cs:line 598\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.Win32.cs:line 24\r\n   at System.Diagnostics.Process.Start() in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.cs:line 1216\r\n   at System.Diagnostics.Process.Start(ProcessStartInfo startInfo) in F:\\git\\corefx\\src\\System.Diagnostics.Process\\src\\System\\Diagnostics\\Process.cs:line 1259\r\n   at System.Diagnostics.Tests.PerformanceDataTestsFixture.RegisterCounters() in F:\\git\\corefx\\src\\System.Diagnostics.PerformanceCounter\\tests\\PerformanceDataTests.cs:line 219\r\n   at System.Diagnostics.Tests.PerformanceDataTestsFixture..ctor() in F:\\git\\corefx\\src\\System.Diagnostics.PerformanceCounter\\tests\\PerformanceDataTests.cs:line 244\r\n----- Inner Stack Trace #2 (Xunit.Sdk.TestClassException) -----\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669876/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34002","RelatedDescription":"Open issue \"[arm32/Windows] System.Diagnostics.PerformanceCounter.Tests failures on arm32 windows\" (#34002)"},{"Id":"390001292","IsPullRequest":true,"CreatedAt":"2018-12-11T23:36:47","Actor":"ericstj","Number":"34001","RawContent":null,"Title":"[WIP] Remove buildtools imports from Directory.Build.*","State":"open","Body":"Remove buildtools imports and implement remaining functionality in CoreFx.\r\n\r\nI was able to do most of what BuildTools was doing with 3 exceptions, which will be split into separate issues.\r\n1. Test shared framework deps file: GenerateDepsJson.  We need to port this task to arcade or change how we test to not need it.\r\n2. codeOptimization.targets -> should be moved to arcade, work is pending.\r\n3. optionalTooling.targets -> move to a CSProj that is restored by the official build workflow.","Url":"https://github.com/dotnet/corefx/pull/34001","RelatedDescription":"Open PR \"[WIP] Remove buildtools imports from Directory.Build.*\" (#34001)"},{"Id":"389999986","IsPullRequest":false,"CreatedAt":"2018-12-11T23:31:53","Actor":"joperezr","Number":"34000","RawContent":null,"Title":"[arm32/Windows] System.Diagnostics.EventLog.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Diagnostics.EventLog.Tests produced the following results: passed 38/88 tests.\r\n\r\nMost test fail with messages like the following:\r\n```\r\nSystem.InvalidOperationException : Cannot open log SourceExistenceLog on computer '.'. This function is not supported on this system.\r\n   at System.Diagnostics.EventLogInternal.OpenForRead(String currentMachineName) in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\src\\System\\Diagnostics\\EventLogInternal.cs:line 1112\r\n   at System.Diagnostics.EventLogInternal.Clear() in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\src\\System\\Diagnostics\\EventLogInternal.cs:line 481\r\n   at System.Diagnostics.EventLog.Clear() in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\src\\System\\Diagnostics\\EventLog.cs:line 227\r\n   at System.Diagnostics.EventLog.Delete(String logName, String machineName) in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\src\\System\\Diagnostics\\EventLog.cs:line 407\r\n   at System.Diagnostics.EventLog.Delete(String logName) in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\src\\System\\Diagnostics\\EventLog.cs:line 371\r\n   at System.Diagnostics.Tests.EventLogSourceCreationTests.<>c__DisplayClass0_0.<CheckSourceExistenceAndDeletion>b__0() in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\tests\\EventLogTests\\EventLogSourceCreationTests.cs:line 24\r\n   at System.Diagnostics.Tests.Helpers.<>c__DisplayClass4_0.<RetryOnWin7>b__0() in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\tests\\Helpers.cs:line 21\r\n   at System.Diagnostics.Tests.Helpers.RetryOnWin7[T](Func`1 func) in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\tests\\Helpers.cs:line 28\r\n   at System.Diagnostics.Tests.Helpers.RetryOnWin7(Action func) in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\tests\\Helpers.cs:line 21\r\n   at System.Diagnostics.Tests.EventLogSourceCreationTests.CheckSourceExistenceAndDeletion() in F:\\git\\corefx\\src\\System.Diagnostics.EventLog\\tests\\EventLogTests\\EventLogSourceCreationTests.cs:line 24\r\n```\r\nPerhaps all of these should just be skipped since it looks like it is not supported on Windows IoT core.\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669846/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34000","RelatedDescription":"Open issue \"[arm32/Windows] System.Diagnostics.EventLog.Tests failures on arm32 windows\" (#34000)"},{"Id":"389998206","IsPullRequest":false,"CreatedAt":"2018-12-11T23:25:06","Actor":"joperezr","Number":"33999","RawContent":null,"Title":"[arm32/Windows] System.Data.SqlClient.Tests failures on arm32 windows ","State":"open","Body":"Running the arm32 tests on windows for System.Data.SqlClient.Tests produced the following results: passed 142/180 tests.\r\n\r\nMost of the 38 failed tests fail with the following exception:\r\n```\r\nAssert.Throws() Failure\\r\\nExpected: typeof(System.Data.SqlClient.SqlException)\\r\\nActual:   typeof(System.TypeInitializationException): The type initializer for 'System.Data.SqlClient.TdsParser' threw an exception.\\r\\n---- System.TypeInitializationException : The type initializer for 'System.Data.SqlClient.TdsParser' threw an exception.\\r\\n-------- System.TypeInitializationException : The type initializer for 'System.Data.SqlClient.SNILoadHandle' threw an exception.\\r\\n------------ System.DllNotFoundException : Unable to load DLL 'sni.dll' or one of its dependencies: The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n   at System.Data.SqlClient.TdsParser..ctor(Boolean MARS, Boolean fAsynchronous) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\TdsParser.cs:line 56\r\n   at System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlInternalConnectionTds.cs:line 1331\r\n   at System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlInternalConnectionTds.cs:line 1225\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\ProviderBase\\DbConnectionPool.cs:line 1622\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\ProviderBase\\DbConnectionPool.cs:line 1130\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlInternalConnectionTds.cs:line 384\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlConnectionFactory.cs:line 135\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreateNonPooledConnection(DbConnection owningConnection, DbConnectionPoolGroup poolGroup, DbConnectionOptions userOptions) in F:\\git\\corefx\\src\\Common\\src\\System\\Data\\ProviderBase\\DbConnectionFactory.cs:line 96\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\ProviderBase\\DbConnectionFactory.cs:line 140\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions) in F:\\git\\corefx\\src\\Common\\src\\System\\Data\\ProviderBase\\DbConnectionInternal.cs:line 325\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\ProviderBase\\DbConnectionPool.cs:line 1050\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\ProviderBase\\DbConnectionFactory.cs:line 151\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions) in F:\\git\\corefx\\src\\Common\\src\\System\\Data\\ProviderBase\\DbConnectionInternal.cs:line 325\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions) in F:\\git\\corefx\\src\\Common\\src\\System\\Data\\ProviderBase\\DbConnectionClosed.cs:line 37\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlConnection.cs:line 1190\r\n   at System.Data.SqlClient.SqlConnection.Open() in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlConnection.cs:line 757\r\n   at System.Data.SqlClient.Tests.SqlErrorCollectionTest.CreateCollection() in F:\\git\\corefx\\src\\System.Data.SqlClient\\tests\\FunctionalTests\\SqlErrorCollectionTest.cs:line 143\r\n   at System.Data.SqlClient.Tests.SqlErrorCollectionTest.GetEnumerator_Success() in F:\\git\\corefx\\src\\System.Data.SqlClient\\tests\\FunctionalTests\\SqlErrorCollectionTest.cs:line 106\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions) in F:\\git\\corefx\\src\\Common\\src\\System\\Data\\ProviderBase\\DbConnectionClosed.cs:line 37\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry) in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlConnection.cs:line 1190\r\n   at System.Data.SqlClient.SqlConnection.Open() in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\SqlConnection.cs:line 757\r\n   at System.Data.SqlClient.Tests.ExceptionTest.<>c__DisplayClass9_0.<NamedPipeTest>b__0() in F:\\git\\corefx\\src\\System.Data.SqlClient\\tests\\FunctionalTests\\ExceptionTest.cs:line 98\r\n----- Inner Stack Trace -----\r\n\r\n----- Inner Stack Trace -----\r\n   at System.Data.SqlClient.TdsParserStateObjectFactory.get_EncryptionOptions() in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\TdsParserStateObjectFactory.Windows.cs:line 28\r\n   at System.Data.SqlClient.TdsParser..cctor() in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\TdsParser.cs:line 69\r\n----- Inner Stack Trace -----\r\n   at System.Data.SqlClient.SNINativeMethodWrapper.SNIInitialize(IntPtr pmo)\r\n   at System.Data.SqlClient.SNINativeMethodWrapper.SNIInitialize() in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\Interop\\SNINativeMethodWrapper.Windows.cs:line 288\r\n   at System.Data.SqlClient.SNILoadHandle..ctor() in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\TdsParserSafeHandles.cs:line 35\r\n   at System.Data.SqlClient.SNILoadHandle..cctor() in F:\\git\\corefx\\src\\System.Data.SqlClient\\src\\System\\Data\\SqlClient\\TdsParserSafeHandles.cs:line 19\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669833/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33999","RelatedDescription":"Open issue \"[arm32/Windows] System.Data.SqlClient.Tests failures on arm32 windows \" (#33999)"},{"Id":"389991123","IsPullRequest":false,"CreatedAt":"2018-12-11T22:58:44","Actor":"ahsonkhan","Number":"33998","RawContent":null,"Title":"Utf8JsonReader should return default ValueSpan when ValueSequence is set (and vice versa)","State":"open","Body":"When `Utf8JsonReader` accepts a `ReadOnlySpan<byte>` as input, ValueSequence is always set to default. However, if it accepts a `ReadOnlySequence<byte>`, in some cases, `ValueSequence` will contain the data (when the json element straddles). In those cases, `ValueSpan` should be cleared (i.e. set to default). Similarly, in the common case, when `ValueSpan` contains the data, `ValueSequence` should be default.\r\n\r\nAlso, when the reader is at StartObject or StartArray, `ValueSpan` should still point to the token (like `{`, `[`, etc.). This is especially important for something like `JsonDocument` which needs the value span to contain the right value (rather than being empty or still pointing to a previously encountered token).\r\n\r\ncc @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/33998","RelatedDescription":"Open issue \"Utf8JsonReader should return default ValueSpan when ValueSequence is set (and vice versa)\" (#33998)"},{"Id":"389990175","IsPullRequest":false,"CreatedAt":"2018-12-11T22:55:43","Actor":"bartonjs","Number":"33997","RawContent":null,"Title":"Utf8JsonReader.GetDouble: Should it return (+/-) infinity, or throw?","State":"open","Body":"If `Utf8JsonReader` encounters the numeric value `1e+100000002` then GetDouble is returning `double.Infinity`.\r\n\r\nIn a hallway discussion it was believed that this was bad, since the reader would read \"non-infinity\", return \"infinity\" and then the writer would reject it (since Infinity is verboten in the JSON spec).","Url":"https://github.com/dotnet/corefx/issues/33997","RelatedDescription":"Open issue \"Utf8JsonReader.GetDouble: Should it return (+/-) infinity, or throw?\" (#33997)"},{"Id":"389988411","IsPullRequest":false,"CreatedAt":"2018-12-11T22:50:20","Actor":"jayspadie","Number":"33996","RawContent":null,"Title":"CJK Extension B characters cannot be used in Content-Disposition FileNameStar","State":"open","Body":"A file name with [CJK Extension B characters](https://en.wikipedia.org/wiki/List_of_CJK_Unified_Ideographs_Extension_B_(Part_1_of_7)), such as 𠀀𠀁𠀂𠀃𪛑𪛒𪛓𪛔𪛕𪛖​.txt, is not properly encoded for the FileNameStar property of the Content-Disposition header.  These characters are replaced with \\uFFFD, such as ��������������.txt.\r\n\r\nUsing the code below:\r\n\r\n```c#\r\nresponse.Content.Headers.ContentDisposition = new ContentDispositionHeaderValue(\"attachment\")\r\n{\r\n  FileName = fileName,\r\n  FileNameStar = fileName\r\n};\r\n```\r\nWe can observe while debugging in Visual Studio:\r\n![image](https://user-images.githubusercontent.com/5246869/49834953-bf714680-fd6b-11e8-8b5e-71b0883a9372.png)\r\n\r\nThis causes the file download in the browser to be named as ��������������.txt.\r\n\r\nThe encoding appears to be done in [HeaderUtilities.IsInputEncoded5987()](https://github.com/dotnet/corefx/blob/144beee5993051c910410f7e6fd6bdf9cd12e6fa/src/System.Net.Http/src/System/Net/Http/Headers/HeaderUtilities.cs#L79).  Can anything be done to support these characters?\r\n\r\nThanks - Jay\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/33996","RelatedDescription":"Open issue \"CJK Extension B characters cannot be used in Content-Disposition FileNameStar\" (#33996)"},{"Id":"389986391","IsPullRequest":true,"CreatedAt":"2018-12-11T22:43:50","Actor":"geoffkizer","Number":"33995","RawContent":null,"Title":"improve test filter for bogus VPN IPv6 link local addresses","State":"open","Body":"We already filter these out. Make the logic catch more cases, e.g. \"PANGP Virtual Ethernet Adapter #3\" (which is what I'm seeing on my machine now).\r\n\r\nFixes #32493 \r\n\r\n@dotnet/ncl @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/33995","RelatedDescription":"Open PR \"improve test filter for bogus VPN IPv6 link local addresses\" (#33995)"},{"Id":"389978997","IsPullRequest":false,"CreatedAt":"2018-12-11T22:20:15","Actor":"joperezr","Number":"33994","RawContent":null,"Title":"[arm32/Windows] Microsoft.Win32.SystemEvents failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for Microsoft.Win32.SystemEvents produced the following results: passed 1/207 tests.\r\n\r\nAll (but 1) tests fail when running the tests on Windows10 IoT core. Most likely this is because FindWindow PInvoke doesn't work on Windows IoT. Should we generate an arm implementation that just throws PlatformNotSupported?\r\n\r\ncc: @ercistj","Url":"https://github.com/dotnet/corefx/issues/33994","RelatedDescription":"Open issue \"[arm32/Windows] Microsoft.Win32.SystemEvents failures on arm32 windows\" (#33994)"},{"Id":"389958969","IsPullRequest":false,"CreatedAt":"2018-12-11T21:21:47","Actor":"joperezr","Number":"33993","RawContent":null,"Title":"[arm32/Linux] System.ServiceModel.Syndication.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.ServiceModel.Syndication.Tests produced the following results: passed 1108/1211 tests.\r\n\r\nMost of the tests failing here are throwing PlatformNotSupported so they should be skipped on Linux-arm.\r\n\r\nAttaching the testResults.xml in order to have the list of all failing tests:\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669457/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33993","RelatedDescription":"Open issue \"[arm32/Linux] System.ServiceModel.Syndication.Tests failures on arm32 linux\" (#33993)"},{"Id":"389958339","IsPullRequest":true,"CreatedAt":"2018-12-11T21:19:58","Actor":"steveharter","Number":"33992","RawContent":null,"Title":"Address MetadataLoadContext review feedback","State":"open","Body":"Address late feedback from @ahsonkhan on PR https://github.com/dotnet/corefx/pull/33201\r\n","Url":"https://github.com/dotnet/corefx/pull/33992","RelatedDescription":"Open PR \"Address MetadataLoadContext review feedback\" (#33992)"},{"Id":"389956538","IsPullRequest":false,"CreatedAt":"2018-12-11T21:14:52","Actor":"joperezr","Number":"33991","RawContent":null,"Title":"[arm32/Linux] System.Net.Http.Functional.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Net.Http.Functional.Tests produced the following results: passed 5815/5833 tests.\r\n\r\n18 tests failed for different reasons. Attaching the testResults.xml or a better analysis.\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669431/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33991","RelatedDescription":"Open issue \"[arm32/Linux] System.Net.Http.Functional.Tests failures on arm32 linux\" (#33991)"},{"Id":"389956483","IsPullRequest":true,"CreatedAt":"2018-12-11T21:14:41","Actor":"geoffkizer","Number":"33990","RawContent":null,"Title":"HTTP2: rework SendHeader logic","State":"open","Body":"Rework the SendHeader logic a bit to do a couple things: align better with other send logic, ensure correctness of encoded headers across multiple requests, move header buffer management to Http2Connection so there is only one header buffer, and generally simplify the logic a bit.\r\n\r\n@dotnet/ncl @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/33990","RelatedDescription":"Open PR \"HTTP2: rework SendHeader logic\" (#33990)"},{"Id":"389955537","IsPullRequest":true,"CreatedAt":"2018-12-11T21:11:54","Actor":"Dotnet-GitSync-Bot","Number":"33989","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corefx/pull/33989","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#33989)"},{"Id":"389952747","IsPullRequest":true,"CreatedAt":"2018-12-11T21:03:48","Actor":"Marusyk","Number":"33988","RawContent":null,"Title":"System.Security.Cryptography.Csp. Refactor DllImports","State":"open","Body":"Issue #33774\r\n\r\nI'm not sure about some enums. Please suggest. \r\n\r\nPlease review","Url":"https://github.com/dotnet/corefx/pull/33988","RelatedDescription":"Open PR \"System.Security.Cryptography.Csp. Refactor DllImports\" (#33988)"},{"Id":"389943985","IsPullRequest":false,"CreatedAt":"2018-12-11T20:39:50","Actor":"danmosemsft","Number":"33987","RawContent":null,"Title":"SourceLink not working","State":"open","Body":"I downloaded latest bits from core-setup -- these have a hash of 281aba0f2cfcf9e8198145cbda73d8fc9dc2c45e within System.Runtime.dll which is from Wed Dec 5 01:08:52 2018 +0100 and would include my fix 24db8490eb6bdeeb2c4353d5b7f9b786546cfa2b from Nov 28. I got matching symbols both in the VS debugger and also downloading the symbols package.\r\n\r\nApparently https://github.com/dotnet/corefx/pull/33721 did not fix it. There are two problems\r\n\r\n1) Some pdb's still have the internal path eg\r\n```\r\nc:\\bak\\sym>\\t\\strings Microsoft.CSharp.pdb | find /i \"git\"\r\n{\"documents\":{\"E:\\\\A\\\\_work\\\\7\\\\s\\\\corefx\\\\*\":\"https://devdiv.visualstudio.com/DevDiv/_apis/git/repositories/DotNet-CoreFx-Trusted/items?api-version=1.0&versionType=commit&version=281aba0f2cfcf9e8198145cbda73d8fc9dc2c45e&path=/*\"}}\r\n```\r\n2) Some pdb's do not have sourcelink at all - I did not notice this before.  Perhaps CCI is removing the sourcelink. Example: System.Runtime.pdb. It may be the ones where CCI has to inject type forwards.\r\n\r\nThere are presumably different causes and it may be that (2) has existed for some time. (1) is the priority.","Url":"https://github.com/dotnet/corefx/issues/33987","RelatedDescription":"Open issue \"SourceLink not working\" (#33987)"},{"Id":"389935216","IsPullRequest":false,"CreatedAt":"2018-12-11T20:15:10","Actor":"joperezr","Number":"33986","RawContent":null,"Title":"[arm32/Windows] System.Runtime.Extensions.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Runtime.Extensions.Tests produced the following results: passed 6479/6481 tests.\r\n\r\nOne theory failed two cases(AdminTools and CommonAdminTools). The theory that failed was System.Tests.EnvironmentTests.GetFolderPath_Windows. This is the output of the errors:\r\n```\r\nAssert.NotEmpty() Failure\r\n   at System.Tests.EnvironmentTests.GetFolderPath_Windows(SpecialFolder folder) in F:\\git\\corefx\\src\\System.Runtime.Extensions\\tests\\System\\EnvironmentTests.cs:line 493\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669221/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33986","RelatedDescription":"Open issue \"[arm32/Windows] System.Runtime.Extensions.Tests failures on arm32 windows\" (#33986)"},{"Id":"389930980","IsPullRequest":false,"CreatedAt":"2018-12-11T20:03:30","Actor":"joperezr","Number":"33985","RawContent":null,"Title":"[arm32/Windows] System.Globalization.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Globalization.Tests produced the following results: passed 1636/1642 tests.\r\n\r\nThe theory that is failing 6 times is System.Globalization.Tests.TextInfoMiscTests.MiscTest with similar EqualExceptions. Here is an example:\r\n```\r\nAssert.Equal() Failure\\r\\nExpected: 37\\r\\nActual:   65001\r\n   at System.Globalization.Tests.TextInfoMiscTests.MiscTest(String cultureName, Int32 lcid, Int32 ansiCodePage, Int32 ebcdiCCodePage, Int32 macCodePage, Int32 oemCodePage, Boolean isRightToLeft) in F:\\git\\corefx\\src\\System.Globalization\\tests\\TextInfo\\TextInfoTests.cs:line 31\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2669166/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33985","RelatedDescription":"Open issue \"[arm32/Windows] System.Globalization.Tests failures on arm32 windows\" (#33985)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"390067451","IsPullRequest":true,"CreatedAt":"2018-12-12T05:09:31","Actor":"jcouv","Number":"31708","RawContent":null,"Title":"DeclareAsNullable should handle async returns","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/31699\r\n\r\n@dotnet/roslyn-ide for review. Thanks","Url":"https://github.com/dotnet/roslyn/pull/31708","RelatedDescription":"Open PR \"DeclareAsNullable should handle async returns\" (#31708)"},{"Id":"390065889","IsPullRequest":false,"CreatedAt":"2018-12-12T05:00:25","Actor":"jcouv","Number":"31707","RawContent":null,"Title":"Missing warning for local function not referenced outside of itself","State":"open","Body":"I expected a warning for this:\r\n```C#\r\npublic class C \r\n{\r\n    public void M() \r\n    {\r\n        void local() // expecting warning CS8321: The local function 'local' is declared but never used\r\n        {\r\n            local();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n@agocke What do you think? Is this correct? Is this worth tagging for consideration in warning waves?","Url":"https://github.com/dotnet/roslyn/issues/31707","RelatedDescription":"Open issue \"Missing warning for local function not referenced outside of itself\" (#31707)"},{"Id":"390039964","IsPullRequest":false,"CreatedAt":"2018-12-12T02:36:40","Actor":"tmat","Number":"31706","RawContent":null,"Title":"ValidTagsDuringSimpleRename failed in CI","State":"open","Body":"https://dnceng.visualstudio.com/public/_build/results?buildId=56656&view=ms.vss-test-web.test-result-details\r\n\r\n```\r\n\r\nAssert.Equal() Failure\\r\\nExpected: WhereSelectEnumerableIterator<TextSpan, Span> [[40..43), [208..211), [220..223)]\\r\\nActual: List<Span> [[40..43), [208..211), [208..211), [220..223), [220..223)]\r\nStack trace\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Rename.RenameTagProducerTests.VB$StateMachine_8_VerifyTaggedSpansCore.MoveNext() in /_/src/EditorFeatures/Test2/Rename/RenameTagProducerTests.vb:line 91\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Rename.RenameTagProducerTests.VB$StateMachine_2_VerifyTaggedSpans.MoveNext() in /_/src/EditorFeatures/Test2/Rename/RenameTagProducerTests.vb:line 26\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Rename.RenameTagProducerTests.VB$StateMachine_10_ValidTagsDuringSimpleRename.MoveNext() in /_/src/EditorFeatures/Test2/Rename/RenameTagProducerTests.vb:line 129\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31706","RelatedDescription":"Open issue \"ValidTagsDuringSimpleRename failed in CI\" (#31706)"},{"Id":"389906394","IsPullRequest":true,"CreatedAt":"2018-12-12T01:06:23","Actor":"tmat","Number":"31692","RawContent":null,"Title":"Fix directory path in createrunsettings.ps1","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/31692","RelatedDescription":"Closed or merged PR \"Fix directory path in createrunsettings.ps1\" (#31692)"},{"Id":"390007292","IsPullRequest":true,"CreatedAt":"2018-12-12T01:00:09","Actor":"dotnet-bot","Number":"31701","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31701","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#31701)"},{"Id":"390007318","IsPullRequest":true,"CreatedAt":"2018-12-12T01:00:05","Actor":"dotnet-bot","Number":"31702","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31702","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#31702)"},{"Id":"390017304","IsPullRequest":true,"CreatedAt":"2018-12-12T00:46:04","Actor":"cston","Number":"31705","RawContent":null,"Title":"Add SymbolDisplay test for annotations on nested arrays","State":"open","Body":"Fixes #31700.","Url":"https://github.com/dotnet/roslyn/pull/31705","RelatedDescription":"Open PR \"Add SymbolDisplay test for annotations on nested arrays\" (#31705)"},{"Id":"390014342","IsPullRequest":true,"CreatedAt":"2018-12-12T00:32:14","Actor":"333fred","Number":"31704","RawContent":null,"Title":"Document the initial public API design for Nullable Reference Types","State":"open","Body":"Adds a document giving an overview of the public API we're targeting for exposing nullable reference types information from the compiler layer to IDE and analyzer services. This includes the initial API design but is missing some parts, especially around syntax generation. These will come later.\r\n\r\n@dotnet/roslyn-compiler @dotnet/roslyn-ide @CyrusNajmabadi @terrajobst @mattwar please take a look.","Url":"https://github.com/dotnet/roslyn/pull/31704","RelatedDescription":"Open PR \"Document the initial public API design for Nullable Reference Types\" (#31704)"},{"Id":"390008708","IsPullRequest":true,"CreatedAt":"2018-12-12T00:06:20","Actor":"cston","Number":"31703","RawContent":null,"Title":"Track nullability of instance members in lambdas and local functions","State":"open","Body":"Fixes #31620.","Url":"https://github.com/dotnet/roslyn/pull/31703","RelatedDescription":"Open PR \"Track nullability of instance members in lambdas and local functions\" (#31703)"},{"Id":"390005227","IsPullRequest":false,"CreatedAt":"2018-12-11T23:52:04","Actor":"cston","Number":"31700","RawContent":null,"Title":"Add SymbolDisplay test for annotations on nested arrays","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/31700","RelatedDescription":"Open issue \"Add SymbolDisplay test for annotations on nested arrays\" (#31700)"},{"Id":"389628500","IsPullRequest":false,"CreatedAt":"2018-12-11T23:48:51","Actor":"alrz","Number":"31688","RawContent":null,"Title":"Nested collection initializer doesn't capture the collection in a temp","State":"closed","Body":"**Version Used**: 7.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\nusing System.Collections.Generic;\r\npublic class C {\r\n    List<int> P {get;}\r\n    public void M() {\r\n        new C {P={1,2}};\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n```cs\r\nC c = new C();\r\nList<int> p = c.P;\r\np.Add(1);\r\np.Add(2);\r\n```\r\n**Actual Behavior**:\r\n```cs\r\nC c = new C();\r\nc.P.Add(1);\r\nc.P.Add(2);\r\n```\r\n\r\n\r\nThis was surprising to me, because `P` is appeared once in the source, so I'd expect a single call to it.\r\n","Url":"https://github.com/dotnet/roslyn/issues/31688","RelatedDescription":"Closed issue \"Nested collection initializer doesn't capture the collection in a temp\" (#31688)"},{"Id":"390004376","IsPullRequest":false,"CreatedAt":"2018-12-11T23:48:44","Actor":"jcouv","Number":"31699","RawContent":null,"Title":"DeclaredAsNullable adds the `?` annotation in the wrong place in async methods","State":"open","Body":"The `?` should be added on the type argument.\r\n![declare-as-nullable-taskt](https://user-images.githubusercontent.com/12466233/49837663-1707b600-fd5c-11e8-9c87-ddc963a8a2c8.png)\r\n\r\nReported by Damiano Curia","Url":"https://github.com/dotnet/roslyn/issues/31699","RelatedDescription":"Open issue \"DeclaredAsNullable adds the `?` annotation in the wrong place in async methods\" (#31699)"},{"Id":"389998590","IsPullRequest":true,"CreatedAt":"2018-12-11T23:26:30","Actor":"MattGal","Number":"31698","RawContent":null,"Title":"Testing PRs","State":"open","Body":"fixing a couple obvious typos to kick off a PR build","Url":"https://github.com/dotnet/roslyn/pull/31698","RelatedDescription":"Open PR \"Testing PRs\" (#31698)"},{"Id":"389966378","IsPullRequest":true,"CreatedAt":"2018-12-11T22:58:55","Actor":"tmeschter","Number":"31697","RawContent":null,"Title":"Stub out the IAnalyzerConfigFileHost implementation","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/31697","RelatedDescription":"Closed or merged PR \"Stub out the IAnalyzerConfigFileHost implementation\" (#31697)"},{"Id":"389908870","IsPullRequest":true,"CreatedAt":"2018-12-11T22:01:51","Actor":"JoeRobich","Number":"31693","RawContent":null,"Title":"Fix AddImport to not error on awaited extension methods","State":"closed","Body":"This fixes a typo in the `AbstractAddImportFeatureService` where it was passing the wrong node into `syntaxFactsService.GetExpressionOfAwaitExpression`. This would cause a gold bar when trying to find missing imports for an awaited extension method.\r\n\r\nfixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/745490","Url":"https://github.com/dotnet/roslyn/pull/31693","RelatedDescription":"Closed or merged PR \"Fix AddImport to not error on awaited extension methods\" (#31693)"},{"Id":"389919730","IsPullRequest":true,"CreatedAt":"2018-12-11T21:48:20","Actor":"jaredpar","Number":"31695","RawContent":null,"Title":"Use release bootstrap compiler","State":"closed","Body":"The point of using the bootstrap compiler is validating that we can\r\nbuild the C# code base with the latest C# compiler. Unfortunately the\r\ndebug version of the compiler is significantly slower than the Release\r\nversion and it slows down our Debug unit test runs accordingly.\r\n\r\nThis change causes us to prefer a release version of the bootstrap\r\ncompiler. The debug bootstrap compiler is still used in the determinism\r\nleg hence we wont't lose coverage here. This should bring our Release\r\nand Debug desktop tests back to the same run time.","Url":"https://github.com/dotnet/roslyn/pull/31695","RelatedDescription":"Closed or merged PR \"Use release bootstrap compiler\" (#31695)"},{"Id":"389966017","IsPullRequest":true,"CreatedAt":"2018-12-11T21:42:33","Actor":"tmat","Number":"31696","RawContent":null,"Title":"Report an error if docker execution fails","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/31696","RelatedDescription":"Open PR \"Report an error if docker execution fails\" (#31696)"},{"Id":"389539620","IsPullRequest":true,"CreatedAt":"2018-12-11T21:30:07","Actor":"dotnet-bot","Number":"31680","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31680","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#31680)"},{"Id":"389915953","IsPullRequest":false,"CreatedAt":"2018-12-11T19:23:10","Actor":"heejaechang","Number":"31694","RawContent":null,"Title":"support accurate snapshot for error list","State":"open","Body":"currently, even if an errorlist is designed to be immutable, we currently violate that contract by giving them whatever data we have in our cache. since error list and we are updated in different cadency, it is possible to have a time where errorlist ask us old data but we give them newly updated data from cache.\r\n\r\nit works this way since we didn't want to duplicate same data twice or holding onto all errors in memory. but error list team want us to follow the contract. so, it seems we don't have any other alternative but duplicating all errors. at least, we can put those data in temporary storage, and most of time, there is not that many errors.","Url":"https://github.com/dotnet/roslyn/issues/31694","RelatedDescription":"Open issue \"support accurate snapshot for error list\" (#31694)"},{"Id":"389772623","IsPullRequest":false,"CreatedAt":"2018-12-11T13:47:42","Actor":"sharwell","Number":"31691","RawContent":null,"Title":"Design a formatter extension API","State":"open","Body":"Currently the formatter is only configurable by a predefined set of options. We should design a public API allowing extensions to the formatter, so automatic formatting operations triggered by user actions in the IDE are better able to handle uncommon coding patterns. Projects using code formatting styles not supported by the current set of options could install a formatter extension to provide the missing functionality.\r\n\r\n* The extension API should support `FormattingAnalyzer` in the Code Style layer, which runs during compilation without dependencies on the Workspaces layer.\r\n* The extension API should support the following formatting scenarios:\r\n    * Formatting in columns (#28729)\r\n    * Formatting of preprocessor directives (#12306)","Url":"https://github.com/dotnet/roslyn/issues/31691","RelatedDescription":"Open issue \"Design a formatter extension API\" (#31691)"},{"Id":"389731010","IsPullRequest":true,"CreatedAt":"2018-12-11T13:30:05","Actor":"dotnet-bot","Number":"31690","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31690","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#31690)"},{"Id":"389714563","IsPullRequest":false,"CreatedAt":"2018-12-11T11:18:07","Actor":"miloush","Number":"31689","RawContent":null,"Title":"ArgumentOutOfRangeException in Snippet.ExpansionFilter.OnCaretChange","State":"open","Body":"**Version Used**: 16.0.0 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\nI am not entirely sure what the repro is, I was typing a constructor...\r\n```C#\r\npublic ConfidenceEnvelope(double confidence, IEnumerable<Trialre|\r\n```\r\nI probably expected 'TrialResult' to be commited by `>` or Ctrl+Space.\r\n\r\n**Actual Behavior**:\r\nActivityLog:\r\n```\r\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection. Parameter name: index\r\nat System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\r\nat Microsoft.VisualStudio.Editor.Implementation.Snippet.ExpansionFilter.OnCaretChange()\r\nat Microsoft.VisualStudio.Editor.Implementation.Snippet.VsExpansionShim.OnCaretChange()\r\nat Microsoft.VisualStudio.Editor.Implementation.TextDocData.OnCaretChange()\r\nat Microsoft.VisualStudio.Editor.Implementation.SimpleTextViewWindow.Caret_PositionChanged(Object sender, CaretPositionChangedEventArgs e)\r\nat Microsoft.VisualStudio.Text.Utilities.GuardedOperations.RaiseEvent[TArgs](Object sender, EventHandler`1 eventHandlers, TArgs args)\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/31689","RelatedDescription":"Open issue \"ArgumentOutOfRangeException in Snippet.ExpansionFilter.OnCaretChange\" (#31689)"},{"Id":"389619866","IsPullRequest":true,"CreatedAt":"2018-12-11T06:51:18","Actor":"heejaechang","Number":"31687","RawContent":null,"Title":"close sqlite connection when solution is closed","State":"open","Body":"previously, we didn't close the db when a solution is closed, but when a new solution is opened. this makes sure that we release the db when solution is closed.\r\n\r\nuser visible outcome of this is that once solution is closed, user can now delete .vs folder. previously, the user wouldn't be able to delete the folder right after solution is closed.\r\n\r\nwhile looking at this 2 other issues are found. \r\none is issue on IVsSolution - https://devdiv.visualstudio.com/DevDiv/_workitems/edit/746630\r\nthe other issue is - https://github.com/dotnet/roslyn/issues/31686\r\n\r\nthis fix is needed regardless of the above 2 issues. but without fixing those 2, persistent service can still get into wrong state where either persistent service becomes noop or connection stay alive until next new solution is opened.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/31687","RelatedDescription":"Open PR \"close sqlite connection when solution is closed\" (#31687)"},{"Id":"389619287","IsPullRequest":false,"CreatedAt":"2018-12-11T06:48:41","Actor":"heejaechang","Number":"31686","RawContent":null,"Title":"open and reopen same solution doesn't create new solution in Roslyn","State":"open","Body":"repro\r\n\r\n1. create solution1\r\n2. close the solution1\r\n3. reopen the same solution1\r\n\r\nwhen a solution is opened and closed and then reopen, Roslyn used to consider them as 2 different solutions. now we are considering them as the same solution\r\n\r\nwe should tweak code below to make roslyn to consider them as 2 different solutions.\r\nhttp://source.roslyn.io/#Microsoft.VisualStudio.LanguageServices/Implementation/ProjectSystem/VisualStudioProjectFactory.cs,73\r\n\r\nI am not sure what user facing impact this would have. but features/component that tracks solution through solutionId and IVsSolution events will have state tracking messed up since IVsSolution will raise close solution events, but solution id stays same and we will never get SolutionRemoved events.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/31686","RelatedDescription":"Open issue \"open and reopen same solution doesn't create new solution in Roslyn\" (#31686)"},{"Id":"389549507","IsPullRequest":true,"CreatedAt":"2018-12-11T02:30:04","Actor":"dotnet-bot","Number":"31683","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31683","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#31683)"},{"Id":"389564115","IsPullRequest":false,"CreatedAt":"2018-12-11T01:58:43","Actor":"davidwrighton","Number":"31685","RawContent":null,"Title":"Lambda type parameter lowering for implicit cast to ReadOnlySpan<T> appears to be incorrect","State":"open","Body":"**Version Used**: \r\nDon't know. I know it happened as of the build of Roslyn that was used to compile several of the most recently released versions of ML.NET (0.7 and 0.8)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Build the https://github.com/dotnet/machinelearning repo\r\n2. Examine Microsoft.ML.Transforms.dll\r\n3. Examine the  lambda body associated with  Microsoft.ML.Transforms.Conversions.HashJoiningTransform.ComposeGetterVecToVec<TSrc>.\r\n4. The translation of the lambda incorrectly handles the method generic parameter associated with the implicit conversion to a ReadOnlySpan.\r\n\r\nThe problematic line of code is line 563 of HashJoiningTransform.cs ( see https://github.com/dotnet/machinelearning/blob/521acad830408b43175821575f5f774629aeafe7/src/Microsoft.ML.Transforms/HashJoiningTransform.cs ) \r\n\r\n**Expected Behavior**:\r\n\r\nThe above C# line is translated into\r\n```\r\nIL_0084:  call       valuetype [System.Memory]System.ReadOnlySpan`1<!0> valuetype [System.Memory]System.ReadOnlySpan`1<!0>::op_Implicit(!0[])\r\n```\r\n\r\n**Actual Behavior**:\r\n```\r\nIL_0084:  call       valuetype [System.Memory]System.ReadOnlySpan`1<!0> valuetype [System.Memory]System.ReadOnlySpan`1<!!0>::op_Implicit(!0[])\r\n```\r\nNote... the difference is that the broken line specifies a method generic parameter not the necessary type generic parameter.\r\n","Url":"https://github.com/dotnet/roslyn/issues/31685","RelatedDescription":"Open issue \"Lambda type parameter lowering for implicit cast to ReadOnlySpan<T> appears to be incorrect\" (#31685)"},{"Id":"389554580","IsPullRequest":true,"CreatedAt":"2018-12-11T01:11:15","Actor":"gafter","Number":"31684","RawContent":null,"Title":"Merge master into features/recursive-patterns","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/31684","RelatedDescription":"Open PR \"Merge master into features/recursive-patterns\" (#31684)"},{"Id":"389546293","IsPullRequest":true,"CreatedAt":"2018-12-11T00:31:05","Actor":"mavasani","Number":"31682","RawContent":null,"Title":"Find All References 'Kind' column values for Namespaces and Types.","State":"open","Body":"https://github.com/dotnet/roslyn/pull/30155 added a new 'Kind' column to FAR window to indicate if a reference to a method/field/property/event/parameter/local is a value read, write, reference or combination of these values.\r\n\r\nThis PR extends that column to now support rich reference kinds values for Namespaces and Types:\r\n\r\n1. Namespace: Indicates if a namespace is used in a context of a using directive (`Using`), declaration (`Declare`) or a name/member qualification, i.e. left side of dot (`Qualify`).\r\n\r\n![image](https://user-images.githubusercontent.com/10605811/49769809-8dda7b80-fc96-11e8-86c7-944f0d8720b6.png)\r\n\r\n2. Types: Indicates if a named type is used in a context of a using directive (`Using`), base type or interface in base list (`Base`), object creation (`new()`), a generic type argument (`Type Argument`) or a name/member qualification, i.e. left side of dot (`Qualify`).\r\n\r\n![image](https://user-images.githubusercontent.com/10605811/49770029-78198600-fc97-11e8-8214-fa4c23940ebf.png)\r\n\r\n\r\nThe terminology used here is a rough draft, that would go through a design review prior to merge - any suggestions are welcome!","Url":"https://github.com/dotnet/roslyn/pull/31682","RelatedDescription":"Open PR \"Find All References 'Kind' column values for Namespaces and Types.\" (#31682)"},{"Id":"389545009","IsPullRequest":true,"CreatedAt":"2018-12-11T00:24:55","Actor":"tmat","Number":"31681","RawContent":null,"Title":"Eliminate differences between Arcade and Roslyn targets","State":"open","Body":"Also fixes suppression of VSIX deployment via `/p:DeployExtension`.","Url":"https://github.com/dotnet/roslyn/pull/31681","RelatedDescription":"Open PR \"Eliminate differences between Arcade and Roslyn targets\" (#31681)"},{"Id":"389514030","IsPullRequest":true,"CreatedAt":"2018-12-10T22:25:39","Actor":"jcouv","Number":"31679","RawContent":null,"Title":" Embed symbols and source in CompileAndVerify","State":"open","Body":"This PR is not ready for review. \r\nIt is work-in-progress to see the results of CI on different platforms.\r\n\r\nNote: this changes the majority of tests to emitting embedded/portable PDBs, instead of windows PDBs.\r\nFixes https://github.com/dotnet/roslyn/issues/31640","Url":"https://github.com/dotnet/roslyn/pull/31679","RelatedDescription":"Open PR \" Embed symbols and source in CompileAndVerify\" (#31679)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"389955581","IsPullRequest":true,"CreatedAt":"2018-12-12T04:40:26","Actor":"Dotnet-GitSync-Bot","Number":"6676","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6676","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6676)"},{"Id":"389835095","IsPullRequest":true,"CreatedAt":"2018-12-11T16:02:59","Actor":"MichalStrehovsky","Number":"6675","RawContent":null,"Title":"Make it possible to align at 32 byte boundaries","State":"open","Body":"This will be necessary to support computing layout for types that embed `Vector256`.\r\n\r\nFollow up on https://github.com/dotnet/corert/pull/6663#issuecomment-445574774.\r\n\r\nThis is foundational work needed to support the new HW intrinsics. We may or may not end up implementing function multiversioning for ready to run for .NET Core 3.0 CPAOT, but being able to compute the layout will let us at least pregenerate method bodies that pass through vector types without actually calling the intrinsics.\r\n\r\nSee individual commits. I'm flexible on whether we should include 47bacbd.","Url":"https://github.com/dotnet/corert/pull/6675","RelatedDescription":"Open PR \"Make it possible to align at 32 byte boundaries\" (#6675)"},{"Id":"389776056","IsPullRequest":true,"CreatedAt":"2018-12-11T13:55:45","Actor":"MichalStrehovsky","Number":"6674","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6674","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6674)"},{"Id":"389496528","IsPullRequest":true,"CreatedAt":"2018-12-11T12:18:32","Actor":"Dotnet-GitSync-Bot","Number":"6671","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6671","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6671)"},{"Id":"389609642","IsPullRequest":true,"CreatedAt":"2018-12-11T10:03:32","Actor":"jkotas","Number":"6673","RawContent":null,"Title":"Delete unnecessary struct initialization","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6673","RelatedDescription":"Closed or merged PR \"Delete unnecessary struct initialization\" (#6673)"},{"Id":"389401689","IsPullRequest":true,"CreatedAt":"2018-12-11T06:06:22","Actor":"MichalStrehovsky","Number":"6670","RawContent":null,"Title":"Rename IlogB -> ILogB","State":"closed","Body":"This was updated in dotnet/coreclr#20912. Fortunately, ApiCompat found it in dotnet/corefx#33956.","Url":"https://github.com/dotnet/corert/pull/6670","RelatedDescription":"Closed or merged PR \"Rename IlogB -> ILogB\" (#6670)"},{"Id":"389560609","IsPullRequest":true,"CreatedAt":"2018-12-11T06:01:27","Actor":"tarekgh","Number":"6672","RawContent":null,"Title":"Fix leap seconds mirrored code","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6672","RelatedDescription":"Closed or merged PR \"Fix leap seconds mirrored code\" (#6672)"},{"Id":"389384132","IsPullRequest":true,"CreatedAt":"2018-12-10T16:34:55","Actor":"MarcoRossignoli","Number":"6669","RawContent":null,"Title":"[ILVerify]Check interface method implementation","State":"open","Body":"closes https://github.com/dotnet/corert/issues/6203\r\nOutput message:\r\n```\r\n[MD]: Error: Class implements interface but not method, Class: '[InterfaceImplementation]MissingMethod_InvalidType_InterfaceMethodNotImplemented' Interface: '[InterfaceDefinition]Interface' Method: [InterfaceDefinition]Interface.M1()(class:02000004 interface:09000004 method:06000001).\r\n```\r\n\r\n/cc @jkotas @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/6669","RelatedDescription":"Open PR \"[ILVerify]Check interface method implementation\" (#6669)"},{"Id":"389240063","IsPullRequest":true,"CreatedAt":"2018-12-10T15:53:16","Actor":"Dotnet-GitSync-Bot","Number":"6668","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @stephentoub @tarekgh","Url":"https://github.com/dotnet/corert/pull/6668","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6668)"},{"Id":"388845374","IsPullRequest":true,"CreatedAt":"2018-12-10T10:38:08","Actor":"Dotnet-GitSync-Bot","Number":"6663","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6663","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6663)"},{"Id":"389194828","IsPullRequest":true,"CreatedAt":"2018-12-10T09:32:45","Actor":"MichalStrehovsky","Number":"6667","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"Probably needed to unblock #6663.","Url":"https://github.com/dotnet/corert/pull/6667","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#6667)"},{"Id":"389067443","IsPullRequest":true,"CreatedAt":"2018-12-10T03:28:03","Actor":"MichalStrehovsky","Number":"6666","RawContent":null,"Title":"Fix handling of intrinsic types in RyuJIT","State":"closed","Body":"This should unblock integrations from CoreCLR.","Url":"https://github.com/dotnet/corert/pull/6666","RelatedDescription":"Closed or merged PR \"Fix handling of intrinsic types in RyuJIT\" (#6666)"},{"Id":"389067160","IsPullRequest":false,"CreatedAt":"2018-12-09T21:40:30","Actor":"MichalStrehovsky","Number":"6665","RawContent":null,"Title":"Auto layout algorithm doesn't compute the right size","State":"open","Body":"Found when I was running the tests Tanner added in dotnet/coreclr#15961 (while half of the tests focuses on Vector64/128/256, the second half is a general purpose test and we're failing computing the right sizes).\r\n\r\nI have a fix that is halfway there in https://github.com/MichalStrehovsky/corert/commit/7f94460a4a0e2ea550dfdf26c4c5603bfc22faf3.\r\n\r\nWhat it lacks is handling of Align8 and unit tests.\r\n\r\nFor the record, here's the relevant part of the output of Tanner's test:\r\n\r\n```\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Char].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Double].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int16].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int32].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int64].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.IntPtr].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Single].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt16].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt32].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt64].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UIntPtr].\r\n     Expected: 16; Actual: 9\r\n```","Url":"https://github.com/dotnet/corert/issues/6665","RelatedDescription":"Open issue \"Auto layout algorithm doesn't compute the right size\" (#6665)"},{"Id":"388342926","IsPullRequest":true,"CreatedAt":"2018-12-08T00:06:44","Actor":"nattress","Number":"6653","RawContent":null,"Title":"Improvements to R2R Test Harness","State":"closed","Body":"To support multi-core testing, associate the test process's PID with the ETW filter so that only assemblies loaded by the runtime the harness started are considered.\r\n\r\nEmit the assembly name for methods that are jitted to allow grouping of methods by their assembly.\r\n\r\nAdd a new parameter, `--include` which configures the ETW filter to include all assemblies in a given folder, instead of having to specify a large number of assemblies individually.\r\n\r\nBug fixes around path casing causing events to be dropped.","Url":"https://github.com/dotnet/corert/pull/6653","RelatedDescription":"Closed or merged PR \"Improvements to R2R Test Harness\" (#6653)"},{"Id":"388854973","IsPullRequest":true,"CreatedAt":"2018-12-07T23:52:26","Actor":"trylek","Number":"6664","RawContent":null,"Title":"Additional fixes for field placement in CPAOT","State":"open","Body":"After making improvements to R2RDump to let me smoothly diff CPAOT\r\nand Crossgen code I managed to identify tests crashing to obvious\r\ninconsistencies in access to class / struct fields. There were\r\nmultiple reasons for these inconsistencies and, while I cannot claim\r\nthis change fixes all of them, it fixes quite a few.\r\n\r\nWhile our longer-term plan is to start embedding field placement\r\ninformation in the R2R executables, I believe this change is useful\r\nto both provide immediate fixes for some of the previously failing\r\nCoreCLR tests and to seed the CPAOT field placement algorithm with\r\na closer match to what CoreCLR uses - even if we decide to deviate\r\nfrom that at some point, it's still probably a reasonable starting\r\npoint.\r\n\r\n1) My original implementation of the static field layout placement\r\nwas based on the method Module::BuildStaticsOffsets but that's\r\nincorrect - this method is only used to calculate the required space\r\nfor statics of each type in the module and use this information to\r\ncalculate offsets within a big array that subsequently gets allocated\r\nas part of the DomainLocalModule / ThreadLocalModule structures.\r\nFor the actual field placement, MethodTableBuilder uses the same\r\nalgorithm as the dynamic layout placement so I unified these two\r\nand I refactored the code to cater for the two-level field resolution.\r\n\r\n2) Reverse token lookup for fields was incomplete so I fixed that.\r\n\r\n3) For static struct fields, we must set a special flag in CPAOT,\r\nCORINFO_FIELD_FLAGS.CORINFO_FLG_FIELD_STATIC_IN_HEAP, this triggers\r\nthe proper double indirection code in JIT that caters for implicitly\r\nboxed struct statics in CoreCLR.\r\n\r\n4) For extra-bubble statics, we instead use a special helper\r\nREADYTORUN_HELPER_FieldAddress in accordance with the postprocessing\r\nin ZapInfo::getFieldInfo around lines 2940-2990.\r\n\r\n5) For instance fields, it turns out there's a slight difference in\r\nhow CoreRT vs. CoreCLR decides field layout for structs. In CoreRT,\r\nstructs use sequential layout by default. In CoreCLR, structs use\r\nsequential layout only when they are blittable, otherwise they use\r\nauto layout.\r\n\r\n6) As part of this change I have forked out the method\r\n\"MarshalHelpers.IsBlittableType\" into a separate static class\r\nIsBlittable because the MarshalHelpers carry around a ton of\r\ndependencies that wreak havoc when propagating to all places where\r\nthe blittable check is newly used as part of the field placement\r\nlogic. With this surgical separation I managed to make this change\r\nrequire very few changes to other projects.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6664","RelatedDescription":"Open PR \"Additional fixes for field placement in CPAOT\" (#6664)"},{"Id":"388347383","IsPullRequest":true,"CreatedAt":"2018-12-07T21:58:05","Actor":"stephentoub","Number":"6655","RawContent":null,"Title":"Fix CancellationTokenRegistration.Token after CTS.Dispose","State":"closed","Body":"Port https://github.com/dotnet/coreclr/pull/21394 to corert","Url":"https://github.com/dotnet/corert/pull/6655","RelatedDescription":"Closed or merged PR \"Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#6655)"},{"Id":"388775575","IsPullRequest":true,"CreatedAt":"2018-12-07T20:23:02","Actor":"Dotnet-GitSync-Bot","Number":"6662","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6662","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6662)"},{"Id":"388653472","IsPullRequest":true,"CreatedAt":"2018-12-07T14:18:54","Actor":"Dotnet-GitSync-Bot","Number":"6661","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6661","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6661)"},{"Id":"388602491","IsPullRequest":true,"CreatedAt":"2018-12-07T13:20:15","Actor":"Dotnet-GitSync-Bot","Number":"6660","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6660","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6660)"},{"Id":"388400207","IsPullRequest":true,"CreatedAt":"2018-12-07T10:47:49","Actor":"Dotnet-GitSync-Bot","Number":"6657","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6657","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6657)"},{"Id":"388601063","IsPullRequest":true,"CreatedAt":"2018-12-07T10:47:02","Actor":"MichalStrehovsky","Number":"6659","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6659","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6659)"},{"Id":"388588514","IsPullRequest":true,"CreatedAt":"2018-12-07T10:46:28","Actor":"MichalStrehovsky","Number":"6658","RawContent":null,"Title":"Work around an MCG bug","State":"closed","Body":"This is blocking TFS integrations.","Url":"https://github.com/dotnet/corert/pull/6658","RelatedDescription":"Closed or merged PR \"Work around an MCG bug\" (#6658)"},{"Id":"388343215","IsPullRequest":true,"CreatedAt":"2018-12-07T03:23:30","Actor":"nattress","Number":"6654","RawContent":null,"Title":"R2R all methods in entrypoint assemblies","State":"closed","Body":"Our early work retained the split that the classic RyuJit-based CoreRT compiler uses where for assemblies with a `Main` method only the set of methods statically reachable from `Main` were compiled. This was fine for a single-file AOT compiler, because we built the entire call graph across assemblies. For ready-to-run, this can cause methods needed at runtime to not get compiled if they're called in a round-about way (via dependency injection for example).","Url":"https://github.com/dotnet/corert/pull/6654","RelatedDescription":"Closed or merged PR \"R2R all methods in entrypoint assemblies\" (#6654)"},{"Id":"388365422","IsPullRequest":true,"CreatedAt":"2018-12-06T20:56:58","Actor":"Dotnet-GitSync-Bot","Number":"6656","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6656","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6656)"},{"Id":"388329912","IsPullRequest":true,"CreatedAt":"2018-12-06T19:31:58","Actor":"Dotnet-GitSync-Bot","Number":"6652","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkoritzinsky","Url":"https://github.com/dotnet/corert/pull/6652","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6652)"},{"Id":"388164134","IsPullRequest":true,"CreatedAt":"2018-12-06T13:42:11","Actor":"MichalStrehovsky","Number":"6651","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6651","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#6651)"},{"Id":"387989880","IsPullRequest":true,"CreatedAt":"2018-12-06T00:52:47","Actor":"dotnet-bot","Number":"6650","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/6650","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#6650)"},{"Id":"387791081","IsPullRequest":true,"CreatedAt":"2018-12-05T16:23:29","Actor":"MichalStrehovsky","Number":"6649","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"We started getting `warning : Method [System.Memory]System.Buffers.Text.FormattingHelpers.CountHexDigits(uint64) will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: UInt64 System.Runtime.Intrinsics.X86.Lzcnt.LeadingZeroCount(UInt64)` and `warning : Method [System.Numerics.Vectors]System.Numerics.Matrix4x4.op_Multiply(Matrix4x4,float32) will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: System.Runtime.Intrinsics.Vector128_1<Single> System.Runtime.Intrinsics.X86.Sse.SetAllVector128(Single)`.\r\n\r\nMy guess is stale CoreFX.","Url":"https://github.com/dotnet/corert/pull/6649","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#6649)"},{"Id":"387572368","IsPullRequest":true,"CreatedAt":"2018-12-05T06:11:18","Actor":"Dotnet-GitSync-Bot","Number":"6648","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sdmaclea","Url":"https://github.com/dotnet/corert/pull/6648","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6648)"},{"Id":"387541663","IsPullRequest":true,"CreatedAt":"2018-12-05T01:33:49","Actor":"Dotnet-GitSync-Bot","Number":"6647","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @stephentoub @fiigii","Url":"https://github.com/dotnet/corert/pull/6647","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6647)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"390007564","IsPullRequest":true,"CreatedAt":"2018-12-12T00:01:34","Actor":"dotnet-bot","Number":"2746","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2746","RelatedDescription":"Open PR \"Merge release/2.2.2xx to master\" (#2746)"},{"Id":"389994622","IsPullRequest":true,"CreatedAt":"2018-12-11T23:11:35","Actor":"jainaashish","Number":"2745","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"open","Body":"Keeping it consistent with 2.2.2xx train","Url":"https://github.com/dotnet/sdk/pull/2745","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2745)"},{"Id":"388856924","IsPullRequest":true,"CreatedAt":"2018-12-11T20:00:15","Actor":"dotnet-bot","Number":"2734","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2734","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2734)"},{"Id":"389616201","IsPullRequest":true,"CreatedAt":"2018-12-11T18:52:09","Actor":"wli3","Number":"2741","RawContent":null,"Title":"Merge/2.1.6xx to 2.2.2xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2741","RelatedDescription":"Closed or merged PR \"Merge/2.1.6xx to 2.2.2xx\" (#2741)"},{"Id":"389836302","IsPullRequest":true,"CreatedAt":"2018-12-11T17:33:37","Actor":"nugetlurker","Number":"2743","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/2743","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2743)"},{"Id":"389836305","IsPullRequest":true,"CreatedAt":"2018-12-11T17:33:03","Actor":"nugetlurker","Number":"2744","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/2744","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2744)"},{"Id":"389753827","IsPullRequest":true,"CreatedAt":"2018-12-11T13:02:02","Actor":"dotnet-maestro[bot]","Number":"2742","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2742","RelatedDescription":"Open PR \"Update dependency files\" (#2742)"},{"Id":"389095908","IsPullRequest":true,"CreatedAt":"2018-12-11T05:51:42","Actor":"dsplaisted","Number":"2738","RawContent":null,"Title":"Support ASP.NET Core PackageReference when targeting .NET Core 3.0 or higher","State":"closed","Body":"Fixes dotnet/cli#10124\r\n\r\nAlso fixes #2527","Url":"https://github.com/dotnet/sdk/pull/2738","RelatedDescription":"Closed or merged PR \"Support ASP.NET Core PackageReference when targeting .NET Core 3.0 or higher\" (#2738)"},{"Id":"389564061","IsPullRequest":true,"CreatedAt":"2018-12-11T01:58:29","Actor":"nguerrera","Number":"2740","RawContent":null,"Title":"Attempt to fix broken official build and run full msbuild tests only on correct leg","State":"open","Body":"Two severe issues:\r\n\r\n1. Official build is failing, and it's apparently at a line where we are attempting to use undefined $env:VSSDKInstall. It is unclear what this line was accomplishing so I've removed it. I suspect it may have been working around past arcade version issues. Does that ring a bell?\r\n\r\n2. In the port to arcade, the act of running tests against full msbuild was coupled to building with full msbuild whereas before it was a custom build argument. Now the latest arcade is always building with VS when available, which means are tests are not running on core on Windows on any leg. I've opportunistically tied it to an env var instead of the build engine.","Url":"https://github.com/dotnet/sdk/pull/2740","RelatedDescription":"Open PR \"Attempt to fix broken official build and run full msbuild tests only on correct leg\" (#2740)"},{"Id":"389501017","IsPullRequest":true,"CreatedAt":"2018-12-11T01:22:12","Actor":"wli3","Number":"2739","RawContent":null,"Title":"Use PackageVersion for shim gen","State":"closed","Body":"fix #2698\r\nPackageVersion should be the source of truth for nuget layout.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3c9b61826814dc800a2a295f0985ce4f295483d6/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L28","Url":"https://github.com/dotnet/sdk/pull/2739","RelatedDescription":"Closed or merged PR \"Use PackageVersion for shim gen\" (#2739)"},{"Id":"388920248","IsPullRequest":true,"CreatedAt":"2018-12-09T18:55:11","Actor":"dotnet-maestro[bot]","Number":"2736","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2736","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2736)"},{"Id":"389031990","IsPullRequest":false,"CreatedAt":"2018-12-09T15:09:06","Actor":"nguerrera","Number":"2737","RawContent":null,"Title":"NetCore2.1->2.2 Upgrade Issue; TargetFramework dropped/not recognized","State":"open","Body":"_From @pinkfloydx33 on December 5, 2018 13:40_\n\nI'm trying to upgrade my web application from netCore 2.1 to 2.2. I have updated the TargetFramework to netcoreapp2.2 and I receive the following errors upon restore/build/clean:\r\n\r\n```\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.AspNetCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.AspNetCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.AspNetCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / win-x64. Package Microsoft.AspNetCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / win-x64. Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n```\r\n\r\nI have also done a manual clean (deleting obj/bin directories). \r\n\r\nI **can** build if I change from using `<TargetFramework>` to `<TargetFrameworks>`, however I'd rather not do this and attempt to locate the underlying issue. I have two test projects in the same solution that reference the main project. I was able to migrate _them_ to netcoreapp2.2 without switching to TargetFramework**s**, I would like to do the same thing for the main web app.\r\n\r\nWhen I use TargetFramework (singular), Visual Studio updates the dependencies graph and removes the SDK node:\r\n![image](https://user-images.githubusercontent.com/395615/49516771-63d52380-f868-11e8-9f5c-49ac2676585f.png)\r\n\r\nI've tried adding a global.json specifying the SDK version directly as 2.2.100 but that doesn't make any difference.\r\n\r\nHere is my .csproj file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<AssemblyName>MyProduct.Web</AssemblyName>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>netcoreapp2.2</TargetFramework>\r\n\t\t<PreserveCompilationContext>true</PreserveCompilationContext>\r\n\t\t<LangVersion>latest</LangVersion>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup>\r\n\t\t<GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n\t\t<PackageId>$(AssemblyName)</PackageId>\r\n\t\t<Authors>MyCompany</Authors>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup Condition=\"'$(Configuration)' == 'Debug'\">\r\n\t\t<RazorCompileOnBuild>false</RazorCompileOnBuild>\r\n\t\t<RazorCompileOnPublish>false</RazorCompileOnPublish>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup Condition=\"'$(Configuration)'=='Debug'\">\r\n\t  <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<None Update=\"wwwroot\\**\\*\">\r\n\t\t\t<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n\t\t</None>\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.Core\\MyProduct.Web.Core.csproj\" />\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.Api.Contracts\\MyProduct.Web.Api.Contracts.csproj\" />\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.ViewModels\\MyProduct.Web.ViewModels.csproj\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n\t\t<PackageReference Include=\"BeginCollectionItemCore\" Version=\"1.0.4\" />\r\n\t\t<PackageReference Include=\"Novell.Directory.Ldap.NETStandard\" Version=\"2.3.5\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Authentication.Cookies\" Version=\"2.2.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.2.0\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Razor.Design\" Version=\"2.2.0\" PrivateAssets=\"All\" />\r\n\t\t<PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.0\" PrivateAssets=\"All\" />\r\n\t\t<DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.4\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<Content Update=\"Views\\_ViewImports.cshtml\">\r\n\t\t\t<Pack>$(IncludeRazorContentInPack)</Pack>\r\n\t\t</Content>\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n```\n\n_Copied from original issue: dotnet/corefx#33834_","Url":"https://github.com/dotnet/sdk/issues/2737","RelatedDescription":"Open issue \"NetCore2.1->2.2 Upgrade Issue; TargetFramework dropped/not recognized\" (#2737)"},{"Id":"388893591","IsPullRequest":false,"CreatedAt":"2018-12-08T06:49:25","Actor":"yyjdelete","Number":"2735","RawContent":null,"Title":"`Invalid runtimeconfig.json` is produced when duplicate FrameworkReference exists in 3.0preview","State":"open","Body":"Move from aspnet/AspNetCore#4490\r\n\r\n### Step\r\ndotnet sdk 3.0.0-preview-27122-01 is needed.\r\n1. `dotnet new webapi`\r\n2. change the csproj to add an FrameworkReference   `<FrameworkReference Include=\"Microsoft.AspNetCore.App\" />`\r\n3. `dotnet run`\r\n\r\nIt can also be reproduce with `dotnet new console` by add more than one same FrameworkReference\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n***NOTE:***\r\nWhen the number of duplicated FrameworkReference is changed, the `xxx.runtimeconfig.json` only change after an `dotnet clean` and build, seems the cache and build have different rule in this special case? Not sure if it's another issue, or just an part of this.\r\n\r\n### Expected\r\nBuild error, or run successful.\r\n```json\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"framework\": {\r\n      \"name\": \"Microsoft.AspNetCore.App\",\r\n      \"version\": \"3.0.0-preview-18579-0056\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Actual\r\nBuild successful, but run failed with `Invalid runtimeconfig.json`. See the duplicate `Microsoft.AspNetCore.App` in `frameworks` here.\r\n```json\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.AspNetCore.App\",\r\n        \"version\": \"3.0.0-preview-18579-0056\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.AspNetCore.App\",\r\n        \"version\": \"3.0.0-preview-18579-0056\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Details\r\ndotnet --info\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n<details>\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18290\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009404 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100-preview3-009430 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35497 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35497 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27014-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>","Url":"https://github.com/dotnet/sdk/issues/2735","RelatedDescription":"Open issue \"`Invalid runtimeconfig.json` is produced when duplicate FrameworkReference exists in 3.0preview\" (#2735)"},{"Id":"388822770","IsPullRequest":false,"CreatedAt":"2018-12-08T00:32:25","Actor":"dagood","Number":"2733","RawContent":null,"Title":"Incorrect \"repository\" element in Microsoft.NET.Sdk's nuspec","State":"closed","Body":"In this nupkg from a recent build:\r\nhttps://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.net.sdk/3.0.100-preview.18603.1/microsoft.net.sdk.3.0.100-preview.18603.1.nupkg\r\n\r\nThe nuspec contains this line:\r\n\r\n```\r\n<repository type=\"git\" url=\"https://github.com//\" commit=\"7bb277dbfdfe52a71b9decc88897510cc8d6be42\" />\r\n```\r\n\r\n`https://github.com//` should be `https://github.com/dotnet/sdk`\r\n\r\nThis might be an Arcade issue, failure to detect the source? I'm not familiar enough with how packaging works now to quickly find where this is happening.\r\n\r\n(I was only looking for the commit, but figured I should file this issue for the wrong url anyway.)","Url":"https://github.com/dotnet/sdk/issues/2733","RelatedDescription":"Closed issue \"Incorrect \"repository\" element in Microsoft.NET.Sdk's nuspec\" (#2733)"},{"Id":"388114295","IsPullRequest":false,"CreatedAt":"2018-12-07T18:53:58","Actor":"Szer","Number":"2724","RawContent":null,"Title":"FSharp.Core explicit dependency downgraded to implicit one","State":"closed","Body":"**Problem:**\r\n\r\nIf I put explicit dependency on FSharp.Core higher than implicit one (which for 2.1.500 is 4.5.2) it will downgrade it to implicit one no matter what.\r\n\r\n**Steps to reproduce**\r\n* Net SDK 2.1.500\r\n* FSproj:\r\n```fsproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.fs\" />\r\n  </ItemGroup> \r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"FSharp.Core\" Version=\"4.5.4\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n* useless Program.fs\r\n```fsharp\r\nmodule A\r\nlet a = 1\r\n```\r\n* `dotnet restore` or `dotnet build`\r\n* check `FSharp.Core` version in `obj\\project.assets.json`\r\n\r\n**Expected**\r\n\r\n`FSharp.Core` should restore to explicit version, to `4.5.4`\r\n\r\n**Actual**\r\n\r\n`FSharp.Core` is being restored to implicit version, to `4.5.2`\r\n\r\n**Known workarounds**\r\n\r\n* Add `<DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>` to fsproj\r\n* Use VisualStudio 15.9.3 `ctrl-shift-B` (strangely it restores OK)\r\n* Use `Paket`\r\n\r\n**Notes**\r\n\r\nThis behavior is the reason for package degradation warnings in case any other packages require something like `>=4.5.4` or `=4.5.4`","Url":"https://github.com/dotnet/sdk/issues/2724","RelatedDescription":"Closed issue \"FSharp.Core explicit dependency downgraded to implicit one\" (#2724)"},{"Id":"388771076","IsPullRequest":false,"CreatedAt":"2018-12-07T18:47:17","Actor":"jainaashish","Number":"2732","RawContent":null,"Title":"Consume NuGet /embed assets group for interop type assemblies from NuGet package","State":"open","Body":"This is the tracking issue to update dotnet build tasks to consume new `/embed` assets group from NuGet packages for interop type assemblies so that Project System passes it as `link` instead of `ref` to compiler.\r\n\r\nCorresponding NuGet issue# https://github.com/NuGet/Home/issues/2365\r\n\r\n@livarcocc @nguerrera @dsplaisted @rrelyea ","Url":"https://github.com/dotnet/sdk/issues/2732","RelatedDescription":"Open issue \"Consume NuGet /embed assets group for interop type assemblies from NuGet package\" (#2732)"},{"Id":"388449684","IsPullRequest":true,"CreatedAt":"2018-12-07T17:24:32","Actor":"dotnet-bot","Number":"2727","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2727","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2727)"},{"Id":"388645904","IsPullRequest":true,"CreatedAt":"2018-12-07T17:24:10","Actor":"dotnet-maestro[bot]","Number":"2730","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2730","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2730)"},{"Id":"388718371","IsPullRequest":false,"CreatedAt":"2018-12-07T16:17:33","Actor":"AArnott","Number":"2731","RawContent":null,"Title":"Building VB console app fails, unable to find \"%TEMP%\\.NETFramework,Version=v4.6.AssemblyAttributes.vb\" file","State":"closed","Body":"Building [a trivially simple VB console app](https://github.com/AArnott/SPSS.NET/blob/5ac57c55aa10611f0f4290fbd3187375ab95c468/src/SimpleDemo/SimpleDemo.vbproj#L1-L10) fails with:\r\n\r\n>vbc : error BC2001: file 'C:\\Users\\andarno\\AppData\\Local\\Temp\\.NETFramework' could not be found [D:\\git\\SPSS.NET\\src\\SimpleDemo\\SimpleDemo.vbproj]\r\nvbc : error BC2001: file 'D:\\git\\SPSS.NET\\src\\SimpleDemo\\Version=v4.6.AssemblyAttributes.vb' could not be found [D:\\git\\SPSS.NET\\src\\SimpleDemo\\SimpleDemo.vbproj]\r\n\r\nThe VB compiler can't find *two* files, neither of which exist. Looking at the msbuild.binlog file, I can see that *one* file is added with assembly attributes by the SDK, but that file has a comma in it, which isn't properly escaped (somewhere) evidently, since by the time it is fed into the vbc.exe tool, it interprets it as two separate files, as shown here:\r\n\r\n![image](https://user-images.githubusercontent.com/3548/49659001-1e476080-f9f8-11e8-9237-834827fd6794.png)\r\n\r\nThis repros on 15.8, 15.9, and 16.0 Preview 1.","Url":"https://github.com/dotnet/sdk/issues/2731","RelatedDescription":"Closed issue \"Building VB console app fails, unable to find \"%TEMP%\\.NETFramework,Version=v4.6.AssemblyAttributes.vb\" file\" (#2731)"},{"Id":"388449696","IsPullRequest":true,"CreatedAt":"2018-12-07T01:30:08","Actor":"dotnet-bot","Number":"2728","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2728","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2728)"},{"Id":"388461573","IsPullRequest":false,"CreatedAt":"2018-12-07T00:57:37","Actor":"NTaylorMullen","Number":"2729","RawContent":null,"Title":"Represent FrameworkReference of transitive projects and packages in the deps.json file.","State":"open","Body":"Today transitive project/package references aren't properly represented in a deps.json. For instance given this project (Bug4332 is a web app, Bug4332RCL is a Razor class library, both targeting netcoreapp3.0):\r\n![image](https://user-images.githubusercontent.com/2008729/49620733-0f6c9980-f977-11e8-8da3-e2d28605a2e1.png)\r\n\r\nToday you get the following `Bug4332.deps.json` entry for `Bug4332RCL`:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThe min-bar expectation would be for the deps.json to look something like:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"dependencies\": {\r\n          \"Microsoft.AspNetCore.App\": \"3.0.0-preview-18579-0056\"\r\n        },\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThis is blocking [a core scenario](https://github.com/aspnet/AspNetCore/issues/4332) in ASP.NET Core MVC 3.0 of having Razor views in a class library.\r\n\r\nLastly, I imagine this issue depends on the completion of the following (please correct me if i'm wrong):\r\n- **Referencing a shared framework does not flow across ProjectReference** https://github.com/dotnet/sdk/issues/2420 \r\n- **Represent FrameworkReferences in NuGet packages and assets files** https://github.com/NuGet/Home/issues/7342 \r\n\r\n\r\n@livarcocc @dsplaisted @natemcmaster @mkArtakMSFT @rynowak","Url":"https://github.com/dotnet/sdk/issues/2729","RelatedDescription":"Open issue \"Represent FrameworkReference of transitive projects and packages in the deps.json file.\" (#2729)"},{"Id":"387725123","IsPullRequest":true,"CreatedAt":"2018-12-06T19:54:40","Actor":"dotnet-bot","Number":"2718","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2718","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2718)"},{"Id":"387725148","IsPullRequest":true,"CreatedAt":"2018-12-06T19:54:33","Actor":"dotnet-bot","Number":"2719","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2719","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2719)"},{"Id":"388363069","IsPullRequest":false,"CreatedAt":"2018-12-06T19:38:29","Actor":"sarbjithanjra","Number":"2726","RawContent":null,"Title":"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648","State":"closed","Body":"Hi on 5 Dec 2018, I downloaded the .NET Core SDK with version 2.2.100 and after install on my sytem, i checked that there is an existing 2.2.200-preview-009648 version is installed. Please let me know which one latest? it seem 2.2.100 is latest as per download page but from version number it seem 2.2.200 is latest.","Url":"https://github.com/dotnet/sdk/issues/2726","RelatedDescription":"Closed issue \"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648\" (#2726)"},{"Id":"388344039","IsPullRequest":false,"CreatedAt":"2018-12-06T18:38:39","Actor":"zawor","Number":"2725","RawContent":null,"Title":"Uninstalling may be not enough","State":"open","Body":"@KathleenDollard asked me to post dotnet/docs#9412 here so here we go:\r\n\r\nHad a lot of runtimes and sdks accumulated over time on my dev machine. At some point i decided to do the cleanup and uninstalled quite a few from under appwiz.cpl (or add/remove programs). Unfortunately after running `dotnet --list-sdks` or `dotnet --list-runtimes` i still saw those which were uninstalled... Interestingly enough i discovered that installers have left a lot of empty dirs under `C:\\Program Files\\dotnet\\sdk`, `C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All` and `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App`. Removing those made `--list-sdks` and `--list-runtimes` to no longer list uninstalled runtimes/sdks.","Url":"https://github.com/dotnet/sdk/issues/2725","RelatedDescription":"Open issue \"Uninstalling may be not enough\" (#2725)"},{"Id":"387757437","IsPullRequest":false,"CreatedAt":"2018-12-05T19:45:55","Actor":"AArnott","Number":"2720","RawContent":null,"Title":" error NETSDK1005: Assets file 'D:\\a\\1\\s\\...\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'","State":"closed","Body":"Very similar to #1321, except that it works fine on my own machine, but [consistently fails when run in Azure Pipelines](https://dev.azure.com/azure-public/vside/_build/results?buildId=816). \r\n\r\n> C:\\hostedtoolcache\\windows\\dncs\\2.1.500\\x64\\sdk\\2.1.500\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(198,5): error NETSDK1005: Assets file 'D:\\a\\1\\s\\obj\\Microsoft.VisualStudio.Composition.LocalizationShell\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'. Ensure that restore has run and that you have included 'netstandard1.5' in the TargetFrameworks for your project. [D:\\a\\1\\s\\src\\Microsoft.VisualStudio.Composition.LocalizationShell\\Microsoft.VisualStudio.Composition.LocalizationShell.csproj]\r\n\r\nThe [LocalizationShell project targets netstandard1.0](https://github.com/Microsoft/vs-mef/blob/7059adf14349b456c8c9e633dc496b0ee1945b4b/src/Microsoft.VisualStudio.Composition.LocalizationShell/Microsoft.VisualStudio.Composition.LocalizationShell.csproj#L7), and is referenced by [a multitargeting project that targets several frameworks including netstandard1.5](https://github.com/Microsoft/vs-mef/blob/7059adf14349b456c8c9e633dc496b0ee1945b4b/src/Microsoft.VisualStudio.Composition/Microsoft.VisualStudio.Composition.csproj#L3).\r\n\r\nThe odd thing is this works on my machine, on AppVeyor, and even on Azure Pipelines in the past. But now it's consistently failing.\r\n\r\nThis *may* be a dupe of #2563","Url":"https://github.com/dotnet/sdk/issues/2720","RelatedDescription":"Closed issue \" error NETSDK1005: Assets file 'D:\\a\\1\\s\\...\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'\" (#2720)"},{"Id":"387825674","IsPullRequest":false,"CreatedAt":"2018-12-05T16:44:33","Actor":"xoofx","Number":"2723","RawContent":null,"Title":"How to debug msbuild?","State":"closed","Body":"Hey,\r\n\r\nSo I would like to investigate a problem related to [slow RAR in msbuild](https://github.com/Microsoft/msbuild/issues/2015) and while I have been able to initially hack something to debug msbuild, that was very convoluted, copying files around from regular Sdk...etc.\r\n\r\nSo I would like to do this more cleanly and follow a more deterministic procedure to debug directly MsBuild project from MsBuild.sln solution  (so it is issuing a dotnet msbuild.dll or msbuild.exe)  for \r\n1.  new csproj with .NET Sdk\r\n2.  regular old csproj \r\n\r\nWhich repository should I build, variable that I should set...etc.? (Or I could avoid building by reusing maybe an installed dotnet folder?)\r\n\r\n## For new csproj\r\n\r\nLet's try just on the new csproj format for now, starting with a plain `dotnet new --name Helloworld`\r\n\r\nAssuming that I built this repository, and I'm setting the MSBuildSDKsPath to point to the `artifacts\\Debug\\bin\\Sdks`\r\n\r\nI'm getting the following error:\r\n\r\n![image](https://user-images.githubusercontent.com/715038/49525579-5a6eaa00-f8ae-11e8-9220-1c9166120934.png)\r\n\r\n```\r\nProject \"C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj\" on node 1 (default targets).\r\nC:\\Code\\dotnet\\sdk\\artifacts\\Debug\\bin\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.props(33,11): error MSB4226: The imported project\r\n \"C:\\Code\\msbuild\\artifacts\\Debug\\bin\\MSBuild\\net472\\Current\\Microsoft.Common.props\" was not found. Also, tried to find\r\n \"Current\\Microsoft.Common.props\" in the fallback search path(s) for $(MSBuildExtensionsPath) - \"C:\\Program Files (x86)\r\n\\MSBuild\" . These search paths are defined in \"C:\\Code\\msbuild\\artifacts\\Debug\\bin\\MSBuild\\net472\\MSBuild.exe.Config\".\r\nConfirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search pat\r\nhs. [C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj]\r\nDone Building Project \"C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj\" (default targets) -- FAILED.\r\n```\r\n\r\nIt is trying to resolve `artifacts\\Debug\\bin\\MSBuild\\net472\\Current\\Microsoft.Common.props` which is not in this folder.\r\nNot sure why it is trying `Current` by default, while the solution seems to build in this file in `artifacts\\Debug\\bin\\15.0\\Microsoft.Common.props` , so assume that the tooling version should be 15.0... but still, can I setup a MsBuild special variable path for pointing to this folder?\r\n\r\nSo likely after that, it will complain about missing NuGet resolver or similar. How do I pass them through?\r\n\r\ncc: @davkean @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/2723","RelatedDescription":"Closed issue \"How to debug msbuild?\" (#2723)"},{"Id":"387824002","IsPullRequest":false,"CreatedAt":"2018-12-05T15:57:16","Actor":"vitek-karas","Number":"2722","RawContent":null,"Title":"RID publish as framework dependent app produces broken app on Linux","State":"open","Body":"The simplest repro:\r\n\r\nOn Linux (I used Ubuntu 18)\r\ninstall .NET Core SDK 2.2.100\r\nrun:\r\n`mkdir webapp`\r\n`cd webapp`\r\n`dotnet new web`\r\n`dotnet publish -c release -r linux-x64 --self-contained false`\r\n`./bin/release/netcoreapp2.2/linux-x64/publish/webapp`\r\n\r\nThis will fail to find a usable framework to run on.\r\n\r\nThe root cause is that when we publish a RID specific (so with apphost) app as framework dependent, for some reason the SDK includes `hostfxr` and `hostpolicy` libraries in the published folder. The `apphost` searches for `hostfxr` first in the local folder, then in global locations. Since it finds it in the local folder it uses that. Then it tries to resolve a framework, but on Linux where there is no global location for frameworks, it looks only in the local folder... and fails.\r\n\r\nOn Windows to works \"by luck\", we still load the `hostfxr` from the app, but then since we do have global location for frameworks, we end up loading the framework from the global location.\r\n\r\nDeleting the `hostfxr` and `hostpolicy` from the publish folder doesn't help, because for some reason they are listed as native runtime assets in the `.deps.json`. In fact there are native assets for `hostpolicy`, `hostfxr` and `apphost` which won't resolve at runtime either.\r\n\r\nThe SDK should not include `hostfxr`, `hostpolixy` in the publish folder and it should not include dependencies to the `Microsoft.NETCore.DotNetHostPolicy`, `Microsoft.NETCore.DotNetHostResolver` and `Microsoft.NETCore.DotNetAppHost` in the `.deps.json` since those bring wrong native assets.","Url":"https://github.com/dotnet/sdk/issues/2722","RelatedDescription":"Open issue \"RID publish as framework dependent app produces broken app on Linux\" (#2722)"},{"Id":"387804807","IsPullRequest":false,"CreatedAt":"2018-12-05T15:18:16","Actor":"NinoFloris","Number":"2721","RawContent":null,"Title":"Could not upgrade projects to new 2.2.100 sdk getting conflict warnings","State":"open","Body":"Could not upgrade all projects to new 2.2.100 sdk, as we got conflict warnings for among others \r\n\r\n```\r\n1:7>/usr/local/share/dotnet/sdk/2.2.100/Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3277: Found conflicts between different versions of \"Microsoft.AspNetCore.Authentication.Abstractions\" that couldnot be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [/projpath]\r\n```\r\n\r\n- Microsoft.Extensions.Options\r\n- Microsoft.Extensions.DependencyInjection.Abstractions\r\n- Microsoft.AspNetCore.Http.Abstractions\r\n- Microsoft.Extensions.Configuration.Abstractions\r\n- Microsoft.AspNetCore.Hosting\r\n- Microsoft.AspNetCore.Hosting.Abstractions\r\n- Microsoft.EntityFrameworkCore\r\n- Microsoft.AspNetCore.WebUtilities\r\n- Microsoft.AspNetCore.Authentication.Abstractions\r\n\r\nWhat all of these packages have in common is that they list a 2.2.0 release on nuget.org\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Options/2.2.0 and if you look carefully they are all at Downloads: 0. \r\n\r\nWhich is why msbuild detailed logs gives errors like these \r\n\r\n```\r\n         Dependency \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".\r\n             Could not resolve this reference. Could not locate the assembly \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n[...]\r\nThere was a conflict between \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" and \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".\r\n             \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" was chosen because it was primary and \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" was not.\r\n             References which depend on \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" [/Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll].\r\n                 /Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\r\n                   Project file item includes which caused reference \"/Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\".\r\n                     /Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\r\n             References which depend on \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" [].\r\n                 myproj/bin/Debug/netcoreapp2.2/myproj.dll\r\n                   Project file item includes which caused reference \"myproj/bin/Debug/netcoreapp2.2/myproj.dll\".\r\n                     myproj/bin/Debug/netcoreapp2.2/myproj.dll\r\n```\r\n\r\n**Could not resolve this reference. Could not locate the assembly \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".**\r\n\r\nNow that seems like a problem","Url":"https://github.com/dotnet/sdk/issues/2721","RelatedDescription":"Open issue \"Could not upgrade projects to new 2.2.100 sdk getting conflict warnings\" (#2721)"},{"Id":"387707214","IsPullRequest":false,"CreatedAt":"2018-12-05T11:16:12","Actor":"mcm-ham","Number":"2717","RawContent":null,"Title":"2.2.100 causes 2.1.500 build failure: The \"CheckForImplicitPackageReferenceOverrides\" task could not be loaded from the assembly","State":"closed","Body":"If I install 2.2.100, and then add global.json to a project to use 2.1.500 I then get the following build failure:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.500\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.DefaultItems.targets(212,5): error MSB4062: The \"CheckForImplicitPackageReferenceOverrides\" task could not be loaded from the assembly C:\\Program Files\\dotnet\\sdk\\2.1.500\\Sdks\\Microsoft.NET.Sdk\\targets\\..\\tools\\netcoreapp2.0/Microsoft.NET.Build.Tasks.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\repo\\netstandard-lib.csproj] [C:\\repo\\netcoreapp-site.csproj]\r\n```\r\nIf I uninstall 2.2.100 then the project builds fine.","Url":"https://github.com/dotnet/sdk/issues/2717","RelatedDescription":"Closed issue \"2.2.100 causes 2.1.500 build failure: The \"CheckForImplicitPackageReferenceOverrides\" task could not be loaded from the assembly\" (#2717)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":".NET Core November Update - 2.1.6 and SDK 2.1.500","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console apps. ASP.NET Core is not yet functional.\r\n\r\nSee following known issues:\r\n\r\n* [dotnet/core-sdk #75](https://github.com/dotnet/core-sdk/issues/75)\r\n* [dotnet/core-sdk #76](https://github.com/dotnet/core-sdk/issues/76)\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"},{"Id":"319700544","IsPullRequest":false,"CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Number":"65","RawContent":null,"Title":".NET Framework Runtime and Builder Docker repos have merged ","State":"open","Body":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n","Url":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Open issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65)"},{"Id":"315285808","IsPullRequest":false,"CreatedAt":"2018-04-18T00:20:13","Actor":"richlander","Number":"64","RawContent":null,"Title":"April 2018 .NET Updates","State":"open","Body":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [Announcing the .NET Framework 4.7.2](https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/)\r\n* No new patch releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Open issue \"April 2018 .NET Updates\" (#64)"},{"Id":"305721744","IsPullRequest":false,"CreatedAt":"2018-03-15T21:13:36","Actor":"mairaw","Number":"63","RawContent":null,"Title":"Transport Layer Security (TLS) best practices with the .NET Framework article published","State":"open","Body":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices for .NET Framework applications at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675","Url":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Open issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63)"},{"Id":"304852590","IsPullRequest":false,"CreatedAt":"2018-03-13T17:01:52","Actor":"blowdart","Number":"62","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse https://github.com/dotnet/corefx/issues/28010 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be updated to target the updated .NET Core runtime, recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, update your application to target the updated .NET Core runtime, recompile and redeploy. To update your runtime version edit the `RuntimeFrameworkVersion` property in the project's .csproj file to indicate the desired target version. For example:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <RuntimeFrameworkVersion>2.0.6</RuntimeFrameworkVersion>\r\n</PropertyGroup>\r\n```\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `{applicationName}.runtimeconfig.json` file for that application., where `{applicationName}` is the name of the executable, for example `example.exe` would have a runtime configuration file titled `example.runtimeconfig.json`. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `{applicationName}.runtimeconfig.json` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.2 (Mar 26, 2018): Corrected instructions for runtimeconfig.json\r\nV1.1 (Mar 14, 2018): Added instructions for self contained application retargetting.\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.2_\r\n_Last Updated 2018-03-26_","Url":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service\" (#62)"},{"Id":"300505281","IsPullRequest":false,"CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Number":"61","RawContent":null,"Title":"New offline books released for Visual Studio 2017","State":"open","Body":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Help Viewer installation\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Add and Remove Content\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)","Url":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Open issue \"New offline books released for Visual Studio 2017\" (#61)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1072638045227270144","CreatedAt":"2018-12-11T23:43:33+00:00","UserScreenname":"dotnet","Text":"Blogged: .NET Framework December 2018 Security and Quality Rollup https://t.co/5PllosL5i2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1072146418868064256","CreatedAt":"2018-12-10T15:10:00+00:00","UserScreenname":"dotnet","Text":"Learn about writing tests for @AzureFunctions with Senior Program Manager Jeff Hollan (@jeffhollan) in this episode… https://t.co/18tWdVma7r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1070731847620050944","CreatedAt":"2018-12-06T17:29:00+00:00","UserScreenname":"dotnet","Text":"Learn about the latest F# Tooling Updates for Visual Studio 2017 from @_cartermp in this episode of the #OnDotNet s… https://t.co/wSjVH0qlRz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":28,"FavoriteCount":15,"RawContent":null},{"Id":"1070171866193571840","CreatedAt":"2018-12-05T04:23:50+00:00","UserScreenname":"dotnet","Text":"Imagine you could draw an architecture and have it converted to an Azure environment. Silly? You bet.  But also ins… https://t.co/A13GJJ7iEw","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":61,"FavoriteCount":19,"RawContent":null},{"Id":"1070077811283632130","CreatedAt":"2018-12-04T22:10:05+00:00","UserScreenname":"dotnet","Text":"Happening now @ #MSFTConnect - Join @CoolCSH &amp; Mike Harsh as they explore the latest #dotNET Core release. PLUS, yo… https://t.co/0yWWIL76wp","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":19,"FavoriteCount":2,"RawContent":null},{"Id":"1070033626551721989","CreatedAt":"2018-12-04T19:14:31+00:00","UserScreenname":"dotnet","Text":"#MSFTConnect announcement: #dotNET Core 2.2 is now available for download. \n\n...now w/ improvements to #ASPNET Core… https://t.co/lkrvCr12Oc","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":197,"FavoriteCount":128,"RawContent":null}]}},"RunOn":"2018-12-12T05:30:44.3029571Z","RunDurationInMilliseconds":19778}