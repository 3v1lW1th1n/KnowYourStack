{"Data":{"Vue-Issues":{"Issues":[{"Id":"337339752","IsPullRequest":false,"CreatedAt":"2018-07-02T01:08:42","Actor":"gorkemkinik","Number":"8440","RawContent":null,"Title":"Client bundle script tag gets injected more than once when there are async components with Vue Router","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkrmo99l23](https://codesandbox.io/s/kkrmo99l23)\r\n\r\n### Steps to reproduce\r\n* Configure vue ssr with router and lazy loaded components.\r\n* There should be at least one lazy loaded component, configured in routes\r\n* Use client and server manifest generation.\r\n* Client manifest looks like\r\n\r\n  \"all\": [\r\n    \"about.js\",\r\n    \"client.js\",\r\n    \"register.js\",\r\n    \"0.js\",\r\n    \"1.js\",\r\n    \"manifest.js\",\r\n    \"index.html\"\r\n  ],\r\n  \"initial\": [\r\n    \"client.js\"\r\n  ],`\r\n\r\n\r\n### What is expected?\r\nregister.js is the lazy loaded bundle,\r\nclient.js is the client-entry bundle\r\n\r\nExpected scripts tags in html are:\r\n\r\n```\r\n<script src=\"/client.js\" defer></script>\r\n<script src=\"/register.js\" defer></script>\r\n```\r\n\r\n### What is actually happening?\r\n```\r\n<script src=\"/client.js\" defer></script>\r\n<script src=\"/register.js\" defer></script>\r\n<script type=\"text/javascript\" src=\"/client.js\"></script>\r\n```\r\n\r\n---\r\n\r\n*The repro url does not reproduce the issue. Not sure how to setup server side script tag injection in a sandbox*\r\n\r\nOther related module versions\r\n\r\n\"vue-server-renderer\": \"^2.5.16\",\r\n\"vue-loader\": \"^15.2.4\",\r\n\"vue-router\": \"^3.0.1\",\r\n\r\nnode 8.11.2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8440","RelatedDescription":"Open issue \"Client bundle script tag gets injected more than once when there are async components with Vue Router\" (#8440)"},{"Id":"336927607","IsPullRequest":false,"CreatedAt":"2018-07-01T20:09:10","Actor":"dattn","Number":"8430","RawContent":null,"Title":"$attrs missing property when used with v-model","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/106qozol1j](https://codesandbox.io/s/106qozol1j)\r\n\r\n### Steps to reproduce\r\nIn the component TestA the value is passed as prop => the key value is present in the $attrs variable\r\n\r\nIn the component TestB the value is passed as v-model => $attrs is empty\r\n\r\n### What is expected?\r\nThe key \"value\" should be present in $attrs variable\r\n\r\n### What is actually happening?\r\n$attrs is empty\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8430","RelatedDescription":"Closed issue \"$attrs missing property when used with v-model\" (#8430)"},{"Id":"337237852","IsPullRequest":false,"CreatedAt":"2018-06-30T21:31:42","Actor":"valterbarros","Number":"8439","RawContent":null,"Title":"Erro to import element-ui on vuejs jest test","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://github.com/valterbarros/trackthings](https://github.com/valterbarros/trackthings)\r\n\r\n### Steps to reproduce\r\nrun yarn install and yarn test\r\n\r\n### What is expected?\r\nI'm trying to import element-ui inside my test to compile the template from my newlist component\r\n\r\n### What is actually happening?\r\nThis error is happening\r\n\r\nSyntaxError: Invalid or unexpected token\r\n\r\n    > 1 | import { mount, shallowMount, createLocalVue } from '@vue/test-utils'\r\n      2 | import Vue from 'vue'\r\n      3 | import NewList from '@/components/NewList'\r\n      4 | import ElementUI from 'element-ui'; \r\n      \r\n      at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:316:17)\r\n      at Object.<anonymous> (test/unit/specs/NewLists.spec.js:1:116)\r\n\r\n\r\n---\r\nI tried a bunch of ways to solve this but without success, and I'm very new in vuejs ecosystem but with a good experience in javascript. I'm using the default webpack template from vuejs cli to build this project and jest to test.\r\n\r\nThis error only appear when I add Vue.use(ElementUI)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8439","RelatedDescription":"Closed issue \"Erro to import element-ui on vuejs jest test\" (#8439)"},{"Id":"337203572","IsPullRequest":false,"CreatedAt":"2018-06-30T14:21:07","Actor":"dysol","Number":"8437","RawContent":null,"Title":"V-html to replace containing element","State":"closed","Body":"### What problem does this feature solve?\r\nRedundant element in DOM\r\n\r\n### What does the proposed API look like?\r\nRight now v-html appends rawHTML into the container like this:\r\n```\r\n<div v-html=\"rawHTML\" /> renders into - - - -> <div> <p> ... </p> </div>\r\n```\r\n\r\nHow about an option to \"replace\" container instead of appending? Here's how it looks like:\r\n\r\n```\r\n<div v-html.replace=\"rawHTML\"/> renders into ----> <p> ... </p>\r\n```\r\n\r\nThoughts?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8437","RelatedDescription":"Closed issue \"V-html to replace containing element\" (#8437)"},{"Id":"337214929","IsPullRequest":true,"CreatedAt":"2018-06-30T13:28:22","Actor":"TimurKiyivinski","Number":"8438","RawContent":null,"Title":"types: add AsyncComponentFactory type","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Typescript\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThe current type definition for `ComponentOptions` does not have a definition for [async component factories](https://vuejs.org/v2/guide/components-dynamic-async.html) and as such causes errors when using the syntax with [vue-class-component](https://github.com/vuejs/vue-class-component).","Url":"https://github.com/vuejs/vue/pull/8438","RelatedDescription":"Open PR \"types: add AsyncComponentFactory type\" (#8438)"},{"Id":"337197560","IsPullRequest":false,"CreatedAt":"2018-06-30T08:21:21","Actor":"KaelWD","Number":"8436","RawContent":null,"Title":"functional component wrapping with context.data causes v-model to update twice","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/LrMKMg?editors=1011](https://codepen.io/anon/pen/LrMKMg?editors=1011)\r\n\r\n### Steps to reproduce\r\ntype in the input\r\n\r\n### What is expected?\r\n`'input'` should be logged once\r\n\r\n### What is actually happening?\r\n`'input'` is logged twice\r\n\r\n---\r\nUncomment `delete ctx.data.model` and it works fine\r\n\r\nOriginal pen using vuetify: https://codepen.io/anon/pen/QxzXYK?editors=1011\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8436","RelatedDescription":"Open issue \"functional component wrapping with context.data causes v-model to update twice\" (#8436)"},{"Id":"337170263","IsPullRequest":false,"CreatedAt":"2018-06-30T00:23:04","Actor":"mrr106","Number":"8435","RawContent":null,"Title":"Little problem with vue-cli","State":"closed","Body":"Vue-cli comes with sass-loader by default in simple mode. Why doesn't the complex mode disappear?","Url":"https://github.com/vuejs/vue/issues/8435","RelatedDescription":"Closed issue \"Little problem with vue-cli\" (#8435)"},{"Id":"337138064","IsPullRequest":false,"CreatedAt":"2018-06-29T21:08:34","Actor":"Ne4to777","Number":"8434","RawContent":null,"Title":"Transition tutorial unit jumping till animating","State":"closed","Body":"https://ru.vuejs.org/v2/guide/transitions.html\r\n\r\nTry running the last example and you will see a jumping button while the faders are moving","Url":"https://github.com/vuejs/vue/issues/8434","RelatedDescription":"Closed issue \"Transition tutorial unit jumping till animating\" (#8434)"},{"Id":"337088478","IsPullRequest":false,"CreatedAt":"2018-06-29T18:05:53","Actor":"ArmorDarks","Number":"8433","RawContent":null,"Title":"Allow to call original `errorHandler` when custom one defined","State":"open","Body":"### What problem does this feature solve?\r\nWhen custom `Vue.config.errorHandler` defined by the user, it will stop firing original [`logError `](https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38).\r\n\r\nThe problem is that there is no straight way to recreate `logError ` behavior in custom `Vue.config.errorHandler` without requiring some Vue's internals.\r\n\r\nThis issue is partially related to [raven-js#1416](https://github.com/getsentry/raven-js/issues/1416), which defines custom `errorHandler`... which prevents Vue from login errors to the console.\r\n\r\n### What does the proposed API look like?\r\nI think Vue should by default expose original `errorHandler` under `Vue.config.errorHandler`. In other words, `Vue.config.errorHandler` shouldn't be `undefined` by default.\r\n\r\nIf the user would like to override `errorHandler`, he will reassign it. Otherwise, it would be possible to save original `Vue.config.errorHandler` into some variable and call it within custom `errorHandler`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8433","RelatedDescription":"Open issue \"Allow to call original `errorHandler` when custom one defined\" (#8433)"},{"Id":"336972216","IsPullRequest":false,"CreatedAt":"2018-06-29T12:03:26","Actor":"adriangoransson","Number":"8432","RawContent":null,"Title":"Private properties prefixed with `$_` (dollar underscore) are not available inside component","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jfyLx256/](https://jsfiddle.net/jfyLx256/)\r\n\r\n### Steps to reproduce\r\nPrefix a property with `$_` and try to reference it within the component or template.\r\n\r\n### What is expected?\r\n`$_` prefixed properties should be rendered in template and available within the component.\r\n\r\n### What is actually happening?\r\n`$_` props are undefined. Not rendered in template and `undefined` in component logic.\r\n\r\n---\r\nPrivate property names are described in the Vue style guide and the `$_` form is officially recommended. https://vuejs.org/v2/style-guide/#Private-property-names-essential.\r\n\r\nI first noticed this in a project built with vue-cli@3.0.0-beta.16.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8432","RelatedDescription":"Closed issue \"Private properties prefixed with `$_` (dollar underscore) are not available inside component\" (#8432)"},{"Id":"336931210","IsPullRequest":false,"CreatedAt":"2018-06-29T10:42:53","Actor":"tonila","Number":"8431","RawContent":null,"Title":"v-model.trim on custom components removes whitespaces while text is edited","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6fj0avLy/](https://jsfiddle.net/6fj0avLy/)\r\n\r\n### Steps to reproduce\r\n1. Write text \"aa b\" to Custom input component\r\n2. Delete \"b\"\r\n\r\n### What is expected?\r\nWhitespace after \"aa\" remains intact\r\n\r\n### What is actually happening?\r\nWhitespace is removed\r\n\r\n---\r\nWhen similar test is done to regular input, it is working as expected. \r\nCustom inputs are not usable, because they remove whitespaces, while text is being edited.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8431","RelatedDescription":"Closed issue \"v-model.trim on custom components removes whitespaces while text is edited\" (#8431)"},{"Id":"336893150","IsPullRequest":false,"CreatedAt":"2018-06-29T07:29:38","Actor":"highalps","Number":"8429","RawContent":null,"Title":"keep alive component from v-for directive","State":"closed","Body":"**Version**\r\n^2.5.13 (with Nuxt 1.4.0 version)\r\n\r\n**Reproduction link**\r\nhttps://jsfiddle.net/50wL7mdz/421706/\r\n\r\n**Steps to reproduce**\r\ni want to render component from computed value\r\nbut when array length is different from previous length, then keep-alive doesn't work\r\n\r\n**What is expected?**\r\nonly cOption component created hook is fired once\r\n\r\n**What is actually happening?**\r\nkeep-alive for cOption doesn't work (always log 'cOption created!' message when toggle status)\r\n","Url":"https://github.com/vuejs/vue/issues/8429","RelatedDescription":"Closed issue \"keep alive component from v-for directive\" (#8429)"},{"Id":"336746122","IsPullRequest":false,"CreatedAt":"2018-06-28T19:39:00","Actor":"rayfoss","Number":"8428","RawContent":null,"Title":"v-model on text input doesn't work reliably on phones","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/xk52mqm7o](https://codesandbox.io/s/xk52mqm7o)\r\n\r\n### Steps to reproduce\r\ntype two words on Chrome 66  on an Android phone or emulator. The pixel and pixel images work.\r\n\r\n### What is expected?\r\nWhen you click \"create todo\" validateForm reads form.todo. Unfortunately, it only updates after every space bar press.\r\n\r\n### What is actually happening?\r\nv-model contains everything but the last word\r\n\r\n---\r\nI tried v-model.lazy and initializing form to `form: todo: ''`... same issue\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n![kapture 2018-06-28 at 13 54 57](https://user-images.githubusercontent.com/876076/42055778-bece1a16-7add-11e8-91cf-2a325bb4a7e4.gif)\r\n","Url":"https://github.com/vuejs/vue/issues/8428","RelatedDescription":"Closed issue \"v-model on text input doesn't work reliably on phones\" (#8428)"},{"Id":"336720805","IsPullRequest":false,"CreatedAt":"2018-06-28T17:57:03","Actor":"jakub-wisniewski","Number":"8427","RawContent":null,"Title":"Vue - sibling component communication via VUEX","State":"closed","Body":"I implemented sibling component communication via global state using Vuex. I would like you to review my architecture pattern.\r\n\r\nIn Vuex store I have state: componentsData: []  and actions: \"addData\" and \"getData\"\r\n\r\n**Adding data:**\r\n\r\nIn order to add data to the store we declare object structured like this:\r\n\r\n{\r\n    componentName: 'ComponentA',\r\n    componentData: [\r\n        { testData1: '' },\r\n        { testData2: '' }\r\n        ]\r\n}\r\n\r\n**Getting data**\r\n\r\nIn another component, we get data using \"getData\" method and providing component's name. \r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/8427","RelatedDescription":"Closed issue \"Vue - sibling component communication via VUEX\" (#8427)"},{"Id":"336634449","IsPullRequest":false,"CreatedAt":"2018-06-28T14:31:46","Actor":"mw76","Number":"8426","RawContent":null,"Title":"v-html alters given content","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/5egwu29t/](https://jsfiddle.net/5egwu29t/)\r\n\r\n### Steps to reproduce\r\nWe want a method to render incomplete HTML to be used as inner HTML for an existing DOM element.\r\n\r\nWhen using the `v-html` directive for that, due to some validation magic, Vue renders too many DOM elements.\r\n\r\nThe given snippet shows the code, renders the expected result, and also shows the actual rendering from Vue.\r\n\r\n### What is expected?\r\n`<p class=\"para\">para1</p><p>para2</p> `\r\n\r\n### What is actually happening?\r\n`<p class=\"para\">para1<p></p><p>para2</p></p> `\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8426","RelatedDescription":"Closed issue \"v-html alters given content\" (#8426)"},{"Id":"336556783","IsPullRequest":true,"CreatedAt":"2018-06-28T10:06:38","Actor":"sodatea","Number":"8425","RawContent":null,"Title":"fix(slot): slots should be deep cloned, fix #7975","State":"open","Body":"Partially reverted https://github.com/vuejs/vue/commit/956756b1be7084daf8b6afb92ac0da7c24cde2a5\r\n\r\nHaven't done performance regression tests, should merge with caution.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8425","RelatedDescription":"Open PR \"fix(slot): slots should be deep cloned, fix #7975\" (#8425)"},{"Id":"336494832","IsPullRequest":false,"CreatedAt":"2018-06-28T06:51:07","Actor":"Justineo","Number":"8424","RawContent":null,"Title":"<transition-group> not working as expected on page scroll","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kxkmp9mov3](https://codesandbox.io/s/kxkmp9mov3)\r\n\r\n### Steps to reproduce\r\n1. Create a list using `<transition-group>`.\r\n2. Put the list at the end of a long page.\r\n3. Scroll to the bottom of the page.\r\n4. Trigger some change so that the page height is reduced and force the viewport to scroll upwards a little bit.\r\n\r\n### What is expected?\r\nThe existing items should stick to the container, instantly appear in the final position, without transitions.\r\n\r\n### What is actually happening?\r\nThe existing items jump out of the container because of the sudden change on vertical position and slowly move back to the expected position.\r\n\r\n---\r\nInternally, `<transition-group>` is using `getBoundingClinetRect()` to track the positions of transition items. This works fine when no page scroll is introduced. But when browsers force page scroll on certain situations, the container (and the rest of the page) flashed into the final position while transition items are stuck in the old position based on the viewport, which makes it look like they suddenly jump out of the document and start performing unexpected transitions.\r\n\r\nMaybe we can provide some new prop on `<transition-group>`, say, `origin: 'viewport' | 'document'`, to optionally calculate positions based on the canvas origin instead of the viewport.\r\n\r\nF.Y.I.\r\n\r\nWhen forced page scroll is triggered:\r\n\r\n![jun-28-2018 14-55-05](https://user-images.githubusercontent.com/1726061/42018058-80ecc336-7ae3-11e8-91da-f8774d873946.gif)\r\n\r\nWhen not triggered:\r\n\r\n![jun-28-2018 14-55-12](https://user-images.githubusercontent.com/1726061/42018090-97fb94c6-7ae3-11e8-879c-6212e952ecda.gif)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8424","RelatedDescription":"Open issue \"<transition-group> not working as expected on page scroll\" (#8424)"},{"Id":"336464364","IsPullRequest":false,"CreatedAt":"2018-06-28T03:56:59","Actor":"dchenk","Number":"8423","RawContent":null,"Title":"dynamically setting the wrapping element tag","State":"closed","Body":"I have a situation where I must pick between one of two options:\r\n- a component’s contents are entirely made up of HTML from a source external to the app (e.g., user input), meaning that there is no wrapping tag around the component. This doesn’t seem possible now that you can’t have a component template consisting of simply uninterpreted `{{{ variableHTML }}}`—or is it possible somehow?; or\r\n- a component’s wrapping tag gets dynamically set by something like a `prop`; this seems maybe doable with a custom render function, though I don’t know how to implement that.\r\n\r\nPretty much, I’d like to set the contents of a component dynamically, including the very tags that wrap the component and attributes on those tags. Is this possible? How? Thanks :)","Url":"https://github.com/vuejs/vue/issues/8423","RelatedDescription":"Closed issue \"dynamically setting the wrapping element tag\" (#8423)"},{"Id":"336339320","IsPullRequest":true,"CreatedAt":"2018-06-27T18:27:35","Actor":"sodatea","Number":"8422","RawContent":null,"Title":"fix(transition): check existence of `el.parentNode`, fix #8199","State":"open","Body":"Fix #8199 \r\nIf the new parentNode gets a `textContent` or `innerHTML` property during patching, the `transition` node would have been detached early, which means `el.parentNode` no longer exists.\r\nSo this existential check is necessary.\r\n\r\nThis is an imperfect fix because while errors are suppressed, transition animations still get lost.\r\nIt is due to the different mechanism of `v-html` and VDOM element patching. But fixing that would be much more complex and I don't think we'd bother fixing such an edge case.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8422","RelatedDescription":"Open PR \"fix(transition): check existence of `el.parentNode`, fix #8199\" (#8422)"},{"Id":"336259255","IsPullRequest":false,"CreatedAt":"2018-06-27T17:59:35","Actor":"ondrej-janosik","Number":"8421","RawContent":null,"Title":"Computed properties context broken if prop with type array exist [TypeScript]","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/ondrej-janosik/vue-bug-props/blob/master/src/App.vue](https://github.com/ondrej-janosik/vue-bug-props/blob/master/src/App.vue)\r\n\r\n### Steps to reproduce\r\n1) Create a new project with VUE CLI, just add typescript\r\n![image](https://user-images.githubusercontent.com/18070427/41981037-4a4b4282-7a28-11e8-812b-168bf93f5734.png)\r\n2) Open is VS code\r\n2) Create a property in data in App.vue\r\n![image](https://user-images.githubusercontent.com/18070427/41981060-5765ff02-7a28-11e8-88df-154083375ef4.png)\r\n3) Access this property in a computed method - works\r\n![image](https://user-images.githubusercontent.com/18070427/41981083-62836e10-7a28-11e8-8d61-0a83ee132e93.png)\r\n4) Add prop with type array\r\n![image](https://user-images.githubusercontent.com/18070427/41981104-6ac55822-7a28-11e8-898e-4681c0087410.png)\r\n5) Computed property context is broken - not work\r\n![image](https://user-images.githubusercontent.com/18070427/41981194-9e4c6f78-7a28-11e8-8cf7-c114e3ab36d6.png)\r\n6) Change prop type to for example to object - works\r\n![image](https://user-images.githubusercontent.com/18070427/41981213-a92b4f22-7a28-11e8-89f2-d61da38bc687.png)\r\n\r\n### What is expected?\r\nA computed property should have the same context even if prop with type array is presented\r\n\r\n### What is actually happening?\r\nComputed property context is missing\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8421","RelatedDescription":"Closed issue \"Computed properties context broken if prop with type array exist [TypeScript]\" (#8421)"},{"Id":"336248045","IsPullRequest":false,"CreatedAt":"2018-06-27T14:18:01","Actor":"GurifYuanin","Number":"8420","RawContent":null,"Title":"对存储了对象的数组使用 filter 方法，将结果赋值给数据属性，结果是深拷贝而不是浅拷贝","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/gurifyuanin/o5n0dcx3/](url)\r\n\r\n### Steps to reproduce\r\n大致如链接， store.state.items 是一个对象集合的数组，比如 [{name: 'a'}, {name: 'b'}, {name: 'c'}]\r\ndispatch('pop', item) 是使用 splice 方法将 store.state.items 弹出一个 item 元素\r\n\r\n### What is expected?\r\n当dispatch('pop', item) 时，只有 store.state.items 弹出一个元素，组件内的 this.items 没有弹出元素\r\n\r\n### What is actually happening?\r\n在组件内的 this.items 也应该同步更新，也弹出了一个元素\r\n\r\n---\r\n但是当对数据属性 items 不使用 filter(element => true) 而是直接赋值时\r\n```\r\ndata () {\r\n    return {\r\n        items: this.$store.state.items\r\n    }\r\n}\r\n```\r\n响应正常，对 store.state.items 的操作对组件内的 this.items 也同样有效。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8420","RelatedDescription":"Closed issue \"对存储了对象的数组使用 filter 方法，将结果赋值给数据属性，结果是深拷贝而不是浅拷贝\" (#8420)"},{"Id":"336061971","IsPullRequest":false,"CreatedAt":"2018-06-27T09:10:31","Actor":"liuzeyafzy","Number":"8417","RawContent":null,"Title":"Use 'for loop' instead of 'forEach', maybe we can have better performance.","State":"closed","Body":"### What problem does this feature solve?\r\nTo increase performance. One order of magnitude or more.\r\n\r\nSee:\r\nhttps://jsperf.com/fast-array-foreach\r\nhttps://jsperf.com/loop-test-aamulumi/1\r\n\r\n### What does the proposed API look like?\r\nNone of new API, just better performance\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8417","RelatedDescription":"Closed issue \"Use 'for loop' instead of 'forEach', maybe we can have better performance.\" (#8417)"},{"Id":"336092548","IsPullRequest":false,"CreatedAt":"2018-06-27T06:26:37","Actor":"gms-aws-kyl","Number":"8419","RawContent":null,"Title":"Any workaround to attach a listener when v-html is used?","State":"closed","Body":"Is there any workaround to attach a listener to the elements passed in **v-html**?\r\nFound out that when I include **@ or v-on directive** on **content** variable it will just include it in the element **but event is not bind**.\r\n\r\nSample code snippet:\r\n```\r\n// html\r\n<div v-html=\"menuBuilder(modules)\"></div>\r\n\r\n// script\r\nmethods: {\r\n\tmenuBuilder: function(modules) {\r\n\t\t// for loop\r\n\t\tthis.build(modules[i]);\r\n\t\t// end of for loop\r\n\t},\r\n\r\n\tbuild: function(module) {\r\n\t\tlet content = `\r\n\t\t\t<div>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tid=\"${module.id}\"\r\n\t\t\t\t>\r\n\t\t\t\t<label for=\"${module.id}\">\r\n\t\t\t\t\t${module.name}\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n}\r\n```\r\nOr, is there any dynamic way of using v-for?\r\n\r\nHere's the sample JSON that will be passed in v-for:\r\n\r\n```\r\n    modules: [\r\n                {\r\n                    module_id: 1,\r\n                    module_parent_id: 0,\r\n                    module_name: \"Module 1\"\r\n                    child: \r\n                        [\r\n                            {\r\n                            module_id: 2,\r\n                            module_parent_id: 1,\r\n                            module_name: \"Module 2\"\r\n                            child: \r\n                                [\r\n                                    {\r\n                                    module_id: 3,\r\n                                    module_parent_id: 1,\r\n                                    module_name: \"Module 3\"\r\n                                    },\r\n                                    {\r\n                                        module_id: 4,\r\n                                        module_parent_id: 1,\r\n                                        module_name: \"Module 4\"\r\n                                    },\r\n                                ]\r\n                            },\r\n                            {\r\n                                module_id: 5,\r\n                                module_parent_id: 1,\r\n                                module_name: \"Module 5\"\r\n                            },\r\n                        ]\r\n                },\r\n                {\r\n                    module_id: 6,\r\n                    module_parent_id: 0,\r\n                    module_name: \"Module 6\"\r\n                }\r\n            ]\r\n```\r\n\r\nWhen I used v-for in the sample JSON format above, all I can do is to define all v-fors based on the JSON:\r\n\r\nSample:\r\n```\r\n<ul v-for=\"module in modules\">\r\n    <li>\r\n        {{module.module_name}}\r\n    </li>\r\n    <ul v-for=\"module_child in module.child\" v-if=\"module.child\">\r\n        <li>\r\n            {{module_child.module_name}}\r\n        </li>\r\n        <ul v-for=\"module_sub_child in module_child.child\" v-if=\"module_child.child\">\r\n            <li>\r\n                {{module_sub_child.module_name}}\r\n            </li>\r\n        </ul>\r\n    </ul>\r\n</ul>\r\n```\r\nIt is not dynamic since it only supports (3 levels):\r\n_Parent -> child -> sub-child_\r\nExpected is in multiple levels.\r\n\r\nPlease see image below for reference of what I'm trying to achieve using the JSON provided.\r\n![a](https://user-images.githubusercontent.com/39820576/41956358-f09c436a-7a15-11e8-87cb-d0d198730f56.PNG)\r\n","Url":"https://github.com/vuejs/vue/issues/8419","RelatedDescription":"Closed issue \"Any workaround to attach a listener when v-html is used?\" (#8419)"},{"Id":"336085107","IsPullRequest":false,"CreatedAt":"2018-06-27T05:48:46","Actor":"starstaysky","Number":"8418","RawContent":null,"Title":"@size-change can not be triggered when change pageSize manually","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\nWhen I use Pagination component, I found it could not trigger @size-change event, but current-change can. Maybe it can be optimized in your next modified version.\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8418","RelatedDescription":"Closed issue \"@size-change can not be triggered when change pageSize manually\" (#8418)"},{"Id":"335994252","IsPullRequest":false,"CreatedAt":"2018-06-26T21:20:50","Actor":"kayandrae07","Number":"8416","RawContent":null,"Title":"Updating the docs around scoped slots and the render function","State":"closed","Body":"### What problem does this feature solve?\r\nI have been using scoped slots during development a lot lately and noticed that a lot is missing from the documentation regarding them.\r\n\r\nFor example, it's not immediately obvious you can name scoped slots. I'd also like to add more on working with the render function.\r\n\r\nShould I go ahead and make a PR for this?\r\n\r\n### What does the proposed API look like?\r\nWell, i'll update the docs.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8416","RelatedDescription":"Closed issue \"Updating the docs around scoped slots and the render function\" (#8416)"},{"Id":"335972673","IsPullRequest":false,"CreatedAt":"2018-06-26T20:10:43","Actor":"superMDguy","Number":"8415","RawContent":null,"Title":"Style bindings with !important don't work properly in IE 11.540","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/QxVRyW?editors=1010](https://codepen.io/anon/pen/QxVRyW?editors=1010)\r\n\r\n### Steps to reproduce\r\nI've only seen this occur in IE 11.540 (through BrowserStack). The issue is not present in IE 11.0.\r\n\r\n1. Click \"toggle\" button\r\n2. \"Surprise!!\" should show up\r\n3. Click \"toggle\" button again\r\n4. \"Surprise!!\" is still visible\r\n\r\n### What is expected?\r\nClicking \"toggle\" should hide the message. This works properly in chrome, and probably other browsers as well.\r\n\r\n### What is actually happening?\r\nThe message is still visible, and has the `display: block !important` styling applied.\r\n\r\n---\r\nThis causes problems with modals in semantic ui vue. See Semantic-UI-Vue/Semantic-UI-Vue#191\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8415","RelatedDescription":"Open issue \"Style bindings with !important don't work properly in IE 11.540\" (#8415)"},{"Id":"335855695","IsPullRequest":false,"CreatedAt":"2018-06-26T14:46:02","Actor":"lixinchuang","Number":"8414","RawContent":null,"Title":"提个意见","State":"closed","Body":" \r\n\r\n![tim 20180626224438](https://user-images.githubusercontent.com/13194227/41920006-5be388e2-7992-11e8-882f-095c0e85ba3f.png)\r\n\r\n尊敬的vue团队，我有个想法，图中大括号的用法，v-if里边那个不用，还有一个地方用了一个大括号，另一个地方用双重大括号。。能否简单粗暴一点，全都用双层大括号啊，就像微信小程序开发的语法那样。。。","Url":"https://github.com/vuejs/vue/issues/8414","RelatedDescription":"Closed issue \"提个意见\" (#8414)"},{"Id":"335774874","IsPullRequest":false,"CreatedAt":"2018-06-26T11:27:59","Actor":"nicooprat","Number":"8413","RawContent":null,"Title":"Transitions classes are added after `before-enter` or `before-leave`","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/zq5mw2zk9x](https://codesandbox.io/s/zq5mw2zk9x)\r\n\r\n### Steps to reproduce\r\n1. Open browser console (to trigger the debugger)\r\n2. Click on \"Page 2\"\r\n3. Inspect elements inside `<main`>`\r\n\r\n### What is expected?\r\nThe two children `<sections>` are supposed to have the transitions classes.\r\n\r\n### What is actually happening?\r\nThe two children`<sections>` are already added but without any transition class, which are added on next tick. So the new `<section>` is visible on top on the old one for 1 frame, causing a flickering effect.\r\n\r\n---\r\nRemove this fix in `App.vue`:\r\n\r\n```css\r\nmain > :first-child {\r\n  z-index: 1; /* Prevent flickering on first frame when transition classes not added yet */\r\n}\r\n```\r\n\r\nAnd navigate through the app to see the flicker effect.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8413","RelatedDescription":"Open issue \"Transitions classes are added after `before-enter` or `before-leave`\" (#8413)"},{"Id":"335726837","IsPullRequest":false,"CreatedAt":"2018-06-26T09:33:08","Actor":"plehnen","Number":"8412","RawContent":null,"Title":"Event hooks for components inside of transitions","State":"closed","Body":"### What problem does this feature solve?\r\nPlease have a look at this jsfiddle:\r\nhttps://jsfiddle.net/4m70p3hr/\r\n\r\nIn my project I have components inside of transitions. And I need to know inside of the component when the transition is done.\r\n\r\nI've read somewhere else that \"Reusable Transitions\" might help, and it's actually working for this event approach I've implemented in the fiddle. Yet directly mutating the prop would be less code. But that gives me a warning \"`[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders.`\" when I try to directly access the prop of the slot. Meh.\r\nAnyway: both approaches doesn't look nice to me.\r\n\r\nSo I wonder what's the best way to achieve this, or if it wouldn't be nice to have some dedicated hooks for that already inside the children components:\r\n\r\n### What does the proposed API look like?\r\nInside of my-component just fire the transition events of the direct parent transition, so we can use `$on('afterEnter')`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8412","RelatedDescription":"Closed issue \"Event hooks for components inside of transitions\" (#8412)"},{"Id":"335634050","IsPullRequest":false,"CreatedAt":"2018-06-26T07:54:15","Actor":"jialj","Number":"8411","RawContent":null,"Title":"v-if syntax enhancement","State":"closed","Body":"### What problem does this feature solve?\r\nI can add different events, attributes, etc. based on conditions on an element instead of writing multiple elements.\r\n\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<div v-if=\"condition\"  @change=\"fun()\" v-if-end  .....>...</div>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8411","RelatedDescription":"Closed issue \"v-if syntax enhancement\" (#8411)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"336900820","IsPullRequest":false,"CreatedAt":"2018-06-29T09:04:19","Actor":"doppelreim","Number":"2272","RawContent":null,"Title":"route.params are not always strings","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/doppelreim/vue-test-app/tree/test-route-params-type](https://github.com/doppelreim/vue-test-app/tree/test-route-params-type)\r\n\r\n### Steps to reproduce\r\n- `$ npm run serve`\r\n- Open the app in a browser, open the dev-tools\r\n- Click the \"About\"-link (links to /about/3)\r\n- Click the \"Take 5\"-link (links to /about/5)\r\n- Observe the console output\r\n\r\n### What is expected?\r\n```\r\noldRoute 3 string\r\nnewRoute 5 string\r\n```\r\n\r\n### What is actually happening?\r\n```\r\noldRoute 3 number\r\nnewRoute 5 string\r\n```\r\n\r\nThe type of the id-param in the oldRoute is number, instead of string.\r\n\r\n---\r\nThe signature according to (VSCode) is:\r\n```\r\n(property) Route.params: {\r\n    [key: string]: string;\r\n}\r\n```\r\n\r\nThe link from the main-page to the about-page is:\r\n```\r\n<router-link :to=\"{ name: 'about', params: { id: 3 }}\">About</router-link>\r\n```\r\nIf I pass the `3` not as a number, but as a string instead, then the issue does not occur:\r\n```\r\n<router-link :to=\"{ name: 'about', params: { id: '3' }}\">About</router-link>\r\n```\r\n\r\nIf I do not use the link, but instead use a deep-link to the about-page, then the issue does not occur.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2272","RelatedDescription":"Closed issue \"route.params are not always strings\" (#2272)"},{"Id":"336341344","IsPullRequest":false,"CreatedAt":"2018-06-27T20:30:20","Actor":"sam-araiza","Number":"2271","RawContent":null,"Title":"History Mode Still Responds to #","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, using 'history' mode relieves the app of being routed via an anchor tag. Great! However, when an anchor tag is appended to trigger an app behavior (e.g. www.my-vue-spa.com/playlist-1234#fullview), the router pushes this as part of the history so that the back-button undoes the anchor state instead of returning to the previous page.\r\n\r\n### What does the proposed API look like?\r\nThe proposed solution would be to enforce what the current documentation currently suggests: to not let anchor tags drive routing history. The descriptions for 'hash' mode is \"uses the URL hash for routing\" and since history mode is not hash mode, the anchor tag would not affect $router.hash.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2271","RelatedDescription":"Closed issue \"History Mode Still Responds to #\" (#2271)"},{"Id":"336002684","IsPullRequest":false,"CreatedAt":"2018-06-27T09:12:42","Actor":"preese13","Number":"2270","RawContent":null,"Title":"Add scrolling transition effect to scrollBehavior","State":"closed","Body":"### What problem does this feature solve?\r\nMy team are currently building a vue based progressive web app.  As such, we have put much effort into creating a user environment that most imitates that of a native app.  Every aspect of the application has been designed to allow for transitions/transforms to make the user experience as smooth as possible.  The only action in our entire application that does not have such effects is our scroll to effect.  As it is the only transition-free state change, it often is jarring to users when it occurs.  Adding a simple scroll effect to the scroll behavior would go a long way to making the user experience for many Vue applications more seamless.\r\n\r\n### What does the proposed API look like?\r\nHonestly I have no idea what this would look like as I have only just begun looking into your docs today.  I am a firm believer in keeping the Vue api surface small and straightforward, so I don't think it's a big enough feature to necessitate adding if it is too clunky.  Its just something I wanted to put in front of you, as it could be an easy way to enhance the user experience for users of Vue applications across the globe\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2270","RelatedDescription":"Closed issue \"Add scrolling transition effect to scrollBehavior\" (#2270)"},{"Id":"335985883","IsPullRequest":true,"CreatedAt":"2018-06-26T20:51:39","Actor":"YuJianrong","Number":"2269","RawContent":null,"Title":"Fix an error on the document: ","State":"open","Body":"param value should be string instead of number\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2269","RelatedDescription":"Open PR \"Fix an error on the document: \" (#2269)"},{"Id":"335652014","IsPullRequest":false,"CreatedAt":"2018-06-26T08:13:09","Actor":"zaoyu63","Number":"2266","RawContent":null,"Title":"Useing Lazy Loading when subroute path is empty, match parent route is blocked","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/405076/](https://jsfiddle.net/50wL7mdz/405076/)\r\n\r\n### Steps to reproduce\r\n{\r\npath: ‘/’,\r\ncomponent: require(’./components/index.vue’),\r\nchildren: [\r\n{\r\npath: ‘’,\r\ncomponent: resolve => require([’./components/dashboard.vue’], resolve),\r\nchildren: []\r\n}\r\n}\r\nuse this.$router.push(’/’),  'index.vue' is render until to 'dashboard.vue' is loaded;\r\n\r\n### What is expected?\r\nuse this.$router.push(’/’),  'index.vue' is render, next  'dashboard.vue' is loading\r\n\r\n### What is actually happening?\r\nuse this.$router.push(’/’),  'index.vue' is render until to 'dashboard.vue' is loaded;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2266","RelatedDescription":"Closed issue \"Useing Lazy Loading when subroute path is empty, match parent route is blocked\" (#2266)"},{"Id":"335659614","IsPullRequest":false,"CreatedAt":"2018-06-26T07:43:14","Actor":"hxkuc","Number":"2268","RawContent":null,"Title":"可以增加一个全局钩子函数吗，监听路由dom加载完成后触发回调函数","State":"closed","Body":"### What problem does this feature solve?\r\n我正在做一个功能，就是给路由加上动画跳转，类似于如下代码\r\n```\r\n<transition :name=\"transitionGroup.trransitionName\" :mode=\"transitionGroup.mode\">\r\n  <router-view :class=\"transitionGroup.routerClass\"></router-view>\r\n</transition>\r\n```\r\n每次在动画完成之后我要清除上次跳转的动画，或者说把transitionGroup设置成默认的动画，保证每次在写跳转的时候在没有规定动画的前提下使用默认动画而不是使用上一次跳转的动画\r\n问题在于：\r\n当我使用afterEach的时候，afterEach其实是在dom渲染之前触发的，那么我改变transitionGroup也是在dom渲染之前触发的，所以这么做就会导致动画调用出问题\r\n\r\n所以想问下有没有类似dom渲染之后触发的回调函数，我知道有个beforeRouteEnter但是这个是在组件内的，我不可能在每个组件里都写一个这个方法，所以想问下有没有什么好的方式去实现\r\n\r\n### What does the proposed API look like?\r\n```\r\nrouter.afterDomReady(function() {\r\n  store.dispatch('changeTransition', 'flipx')\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2268","RelatedDescription":"Closed issue \"可以增加一个全局钩子函数吗，监听路由dom加载完成后触发回调函数\" (#2268)"},{"Id":"335658894","IsPullRequest":false,"CreatedAt":"2018-06-26T04:54:31","Actor":"hxkuc","Number":"2267","RawContent":null,"Title":"did have method like this router.afterDomReady？","State":"closed","Body":"先用中文描述一下，我英文不好\r\n我正在做一个功能，就是给路由加上动画跳转，类似于如下代码\r\n<transition :name=\"transitionGroup.trransitionName\" :mode=\"transitionGroup.mode\">\r\n  <router-view :class=\"transitionGroup.routerClass\"></router-view>\r\n</transition>\r\n每次在动画完成之后我要清除上次跳转的动画，或者说把transitionGroup设置成默认的动画，保证每次在写跳转的时候在没有规定动画的前提下使用默认动画而不是使用上一次跳转的动画\r\n问题在于：\r\n当我使用afterEach的时候，afterEach其实是在dom渲染之前触发的，那么我改变transitionGroup也是在dom渲染之前触发的，所以这么做就会导致动画调用出问题\r\n\r\n所以想问下有没有类似dom渲染之后触发的回调函数，我知道有个beforeRouteEnter但是这个是在组件内的，我不可能在每个组件里都写一个这个方法，所以想问下有没有什么好的方式去实现","Url":"https://github.com/vuejs/vue-router/issues/2267","RelatedDescription":"Closed issue \"did have method like this router.afterDomReady？\" (#2267)"},{"Id":"334758627","IsPullRequest":false,"CreatedAt":"2018-06-22T06:15:52","Actor":"suryadana","Number":"2265","RawContent":null,"Title":"Watch route object does't work","State":"closed","Body":"I want to watch object $route.params and i try with deep watch still does't working.\r\nParams has been changed but watch not work.\r\nHere my code example [sanbox](https://codesandbox.io/embed/xvx81l9wrw)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2265","RelatedDescription":"Closed issue \"Watch route object does't work\" (#2265)"},{"Id":"331242492","IsPullRequest":true,"CreatedAt":"2018-06-21T22:06:29","Actor":"djbrento","Number":"2253","RawContent":null,"Title":"Fix \"#\" placed incorrectly when query string is present on load (#2125)","State":"closed","Body":"When navigating to a URL with a query string like `myapp.com?foo=bar` in hash mode, the hash is currently placed after the query string `myapp.com?foo=bar#/`\r\n\r\nThis fix correctly parses URLs with query strings so that the above URL will be `myapp.com/#/?foo=bar` after loading.","Url":"https://github.com/vuejs/vue-router/pull/2253","RelatedDescription":"Closed or merged PR \"Fix \"#\" placed incorrectly when query string is present on load (#2125)\" (#2253)"},{"Id":"333724292","IsPullRequest":false,"CreatedAt":"2018-06-20T17:32:51","Actor":"DawidCyron","Number":"2263","RawContent":null,"Title":"Facebook/Instagram like main route","State":"closed","Body":"### What problem does this feature solve?\r\nRight now, when you want to create Facebook like login system, where both login page and timeline are on the same route, it's really hard or impossible. I think it should be easier to do, as it's a really important feature for many developers.\r\n\r\n### What does the proposed API look like?\r\nTo be honest, I have no idea. But to make it simple, it should be available as a simple option in vue router\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2263","RelatedDescription":"Closed issue \"Facebook/Instagram like main route\" (#2263)"},{"Id":"334138282","IsPullRequest":false,"CreatedAt":"2018-06-20T17:20:49","Actor":"BerniWittmann","Number":"2264","RawContent":null,"Title":"Problem with beforeRouteUpdate in-Component Guard Test","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/BerniWittmann/vue-test-navigation-guard-reproduction](https://github.com/BerniWittmann/vue-test-navigation-guard-reproduction)\r\n\r\n### Steps to reproduce\r\nRun the tests with `npm run test:unit`\r\n\r\n### What is expected?\r\nThe specs in `tests/unit/Home.spec.js` should pass and calling `wrapper.vm.beforeRouteUpdate` should call the component navigation guard `beforeRouteUpdate`\r\n\r\n### What is actually happening?\r\nThe specs fail, because  `wrapper.vm.beforeRouteUpdate` yiels undefined\r\n\r\n---\r\nI already asked a question on [stackoverflow](https://stackoverflow.com/questions/50913421/testing-vue-router-in-component-navigation-guard) (without any solution). After providing the minimal reproduction this appears to be a bug, that only happens with `mocha   chai` (and maybe `karma   jasmine`) , but not with `jest`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2264","RelatedDescription":"Closed issue \"Problem with beforeRouteUpdate in-Component Guard Test\" (#2264)"},{"Id":"333579767","IsPullRequest":true,"CreatedAt":"2018-06-19T08:59:49","Actor":"emanuelmutschlechner","Number":"2262","RawContent":null,"Title":"Fix hash mode deep links (#2125)","State":"open","Body":"Fixes #2125 \r\n\r\n@posva can you confirm it doesn't introduce some weird side effects?","Url":"https://github.com/vuejs/vue-router/pull/2262","RelatedDescription":"Open PR \"Fix hash mode deep links (#2125)\" (#2262)"},{"Id":"333230586","IsPullRequest":false,"CreatedAt":"2018-06-18T18:43:50","Actor":"aitchnyu","Number":"2260","RawContent":null,"Title":"The website https://router.vuejs.org does not work","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[https://ibb.co/jDXPed](https://ibb.co/jDXPed)\r\n\r\n### Steps to reproduce\r\nNot really sure. I use Firefox 60 in Ubuntu 17.10\r\n\r\n### What is expected?\r\nThe website should download its assets and display a website with design\r\n\r\n### What is actually happening?\r\nThe website assets all 404 and a barebones site shows up\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2260","RelatedDescription":"Closed issue \"The website https://router.vuejs.org does not work\" (#2260)"},{"Id":"333327179","IsPullRequest":false,"CreatedAt":"2018-06-18T18:42:48","Actor":"plehnen","Number":"2261","RawContent":null,"Title":"Replace boolean params with string placeholders","State":"closed","Body":"### What problem does this feature solve?\r\nImagine a route path like this: \r\n`{ path: '/thanks/:polite/:foo?', component: Thanks } `\r\n...with one or more boolean parameters.\r\n\r\nThe URL would look like this `/thanks/true/true`\r\n\r\nit would be nice to be able to substitute the \"true\" state by a string-placeholder, so the URL would look like this:\r\n`/thanks/polite/foo` or `/thanks/polite` (or even `/thanks/foo/` if \"polite\" is false)\r\n\r\n### What does the proposed API look like?\r\nSyntax could be:\r\n`{ path: '/thanks/:!polite/:!foo?', component: Thanks } `\r\n... if a parameter name starts with \"`!`\" it is considered to be a boolean value, and its name will be the substitution of the true value or it will be left out if false.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2261","RelatedDescription":"Closed issue \"Replace boolean params with string placeholders\" (#2261)"},{"Id":"332663591","IsPullRequest":false,"CreatedAt":"2018-06-15T10:13:54","Actor":"srinivasaleti","Number":"2259","RawContent":null,"Title":"Please provide pop option in vue router.","State":"closed","Body":"### What problem does this feature solve?\r\nRight now my app routing history is\r\nA -> B -> C -> D -> E\r\nNow I am on page E, If I click back button then my router should be :\r\nA <- B <- C <- E\r\n\r\nHow to do that?\r\n\r\n### What does the proposed API look like?\r\n.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2259","RelatedDescription":"Closed issue \"Please provide pop option in vue router.\" (#2259)"},{"Id":"332663178","IsPullRequest":false,"CreatedAt":"2018-06-15T06:46:09","Actor":"srinivasaleti","Number":"2258","RawContent":null,"Title":"Please provide pop option in router.","State":"closed","Body":"Right now routing history is \r\nA -> B -> C -> D -> E\r\nNow I am on page E, If I click back button then my router should be :\r\nA <- B <- C <- E \r\n\r\nIf we provide pop option we can pop D.","Url":"https://github.com/vuejs/vue-router/issues/2258","RelatedDescription":"Closed issue \"Please provide pop option in router.\" (#2258)"},{"Id":"332397649","IsPullRequest":true,"CreatedAt":"2018-06-14T14:49:10","Actor":"Alex-Sokolov","Number":"2257","RawContent":null,"Title":"docs: [RU] Update navigation-guards.md","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/pull/2256","Url":"https://github.com/vuejs/vue-router/pull/2257","RelatedDescription":"Closed or merged PR \"docs: [RU] Update navigation-guards.md\" (#2257)"},{"Id":"332388085","IsPullRequest":true,"CreatedAt":"2018-06-14T14:48:47","Actor":"hootlex","Number":"2256","RawContent":null,"Title":"docs: remove extra space","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2256","RelatedDescription":"Closed or merged PR \"docs: remove extra space\" (#2256)"},{"Id":"332098171","IsPullRequest":false,"CreatedAt":"2018-06-13T17:49:06","Actor":"coxy","Number":"2255","RawContent":null,"Title":"beforeRouteEnter not calling next callback and beforeRouteEnter and beforeRouteUpdate not called","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/qqoy3zox0j](https://codesandbox.io/s/qqoy3zox0j)\r\n\r\n### Steps to reproduce\r\nClick on each of the links in order in the example and also check the console.\r\n\r\n### What is expected?\r\nI would expect the _beforeRouteUpdate_ to be called after each page transition as all the routes share the same component.\r\n\r\n### What is actually happening?\r\nFirstly, the route transition from **Page 2** to **Nested Page 1** calls the _beforeRouteEnter_ hook, but doesn't execute the next callback (hence why count doesn't update). Secondly, the route transition from **Nested Page 1** to **Nested Page 2** doesn't call either the _beforeRouteEnter_ or the _beforeRouteUpdate_ hooks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2255","RelatedDescription":"Open issue \"beforeRouteEnter not calling next callback and beforeRouteEnter and beforeRouteUpdate not called\" (#2255)"},{"Id":"331161998","IsPullRequest":true,"CreatedAt":"2018-06-13T16:45:44","Actor":"lex111","Number":"2251","RawContent":null,"Title":"Russian docs: translate menu item \"Languages\"","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2251","RelatedDescription":"Closed or merged PR \"Russian docs: translate menu item \"Languages\"\" (#2251)"},{"Id":"331533503","IsPullRequest":true,"CreatedAt":"2018-06-12T11:31:05","Actor":"fralonra","Number":"2254","RawContent":null,"Title":"[docs:zh] Fix typo in README.md","State":"closed","Body":"this.$route -> this.$router","Url":"https://github.com/vuejs/vue-router/pull/2254","RelatedDescription":"Closed or merged PR \"[docs:zh] Fix typo in README.md\" (#2254)"},{"Id":"331112462","IsPullRequest":true,"CreatedAt":"2018-06-12T01:57:23","Actor":"mikkame","Number":"2250","RawContent":null,"Title":"I found broken link in Doc (ja)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2250","RelatedDescription":"Closed or merged PR \"I found broken link in Doc (ja)\" (#2250)"},{"Id":"331234867","IsPullRequest":false,"CreatedAt":"2018-06-11T15:19:41","Actor":"tpinne","Number":"2252","RawContent":null,"Title":"Typescript Typings: PositionResult and Position are not exported","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nrseLmca/2/](https://jsfiddle.net/nrseLmca/2/)\r\n\r\n### Steps to reproduce\r\nThere is nothing special to reproduce. The provided fiddle just demonstrates the code we used.\r\n\r\n### What is expected?\r\nIt is expected that all types needed to configure or use vue-router are directly exported from index.d.ts.\r\n\r\n### What is actually happening?\r\nOnly the main types are directly exported.\r\n\r\nIf you want to create a new Router instance with a custom scrollBehaviour function in Typescript you cannot type it correctly with the types that are exported directly from the module. You have to import them explicitly from the router.d.ts file (where there aren't exported either but somehow it works).\r\n\r\nBut this raises \"no-submodule-imports\" from tslint.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2252","RelatedDescription":"Open issue \"Typescript Typings: PositionResult and Position are not exported\" (#2252)"},{"Id":"330935878","IsPullRequest":false,"CreatedAt":"2018-06-10T03:16:38","Actor":"libp","Number":"2249","RawContent":null,"Title":"console show error:Uncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'app' of undefined","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/libp/littleweb](https://github.com/libp/littleweb)\r\n\r\n### Steps to reproduce\r\nfirst click is true.when i click subroute to return main route  ,i have the error.\r\nbut the error  not make my web bad.\r\njust console has error\r\nthe web show is ok\r\n\r\n### What is expected?\r\nconsole not show error\r\n\r\n### What is actually happening?\r\nconsole show error:Uncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'app' of undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2249","RelatedDescription":"Closed issue \"console show error:Uncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'app' of undefined\" (#2249)"},{"Id":"330934538","IsPullRequest":false,"CreatedAt":"2018-06-10T02:28:21","Actor":"carltierney","Number":"2248","RawContent":null,"Title":"is not assignable to type 'RouterOptions' because of computed property on component","State":"closed","Body":"So I have two components, one works with computed properties the other one does not.   If I remove computed from the component vue-router will compile without an error.   \r\n\r\n\r\nOtherwise it throws the following error: \r\nTS2345: Argument of type '{ routes: ({ name: string; path: string; components: { default: { name: string; props: string[]; ...' is not assignable to parameter of type 'RouterOptions | undefined'.\r\n  Type '{ routes: ({ name: string; path: string; components: { default: { name: string; props: string[]; ...' is not assignable to type 'RouterOptions'.\r\n    Types of property 'routes' are incompatible.\r\n      Type '({ name: string; path: string; components: { default: { name: string; props: string[]; methods: {...' is not assignable to type 'RouteConfig[] | undefined'.\r\n        Type '({ name: string; path: string; components: { default: { name: string; props: string[]; methods: {...' is not assignable to type 'RouteConfig[]'.\r\n          Type '{ name: string; path: string; components: { default: { name: string; props: string[]; methods: { ...' is not assignable to type 'RouteConfig'.\r\n            Type '{ name: string; path: string; components: { default: { name: string; props: string[]; methods: { ...' is not assignable to type 'RouteConfig'.\r\n              Types of property 'components' are incompatible.\r\n                Type '{ default: { name: string; props: string[]; methods: { [x: string]: ActionMethod | MutationMethod...' is not assignable to type 'Dictionary<Component> | undefined'.\r\n                  Type '{ default: { name: string; props: string[]; methods: { [x: string]: ActionMethod | MutationMethod...' is not assignable to type 'Dictionary<Component>'.\r\n                    Property 'default' is incompatible with index signature.\r\n                      Type '{ name: string; props: string[]; methods: { [x: string]: ActionMethod | MutationMethod | Computed...' is not assignable to type 'Component'.\r\n                        Type '{ name: string; props: string[]; methods: { [x: string]: ActionMethod | MutationMethod | Computed...' is not assignable to type 'AsyncComponent<DefaultData<never>, DefaultMethods<never>, DefaultComputed, Record<string, any>>'.\r\n                          Type '{ name: string; props: string[]; methods: { [x: string]: ActionMethod | MutationMethod | Computed...' provides no match for the signature '(resolve: (component: Component<DefaultData<never>, DefaultMethods<never>, DefaultComputed, Record<string, any>>) => void, reject: (reason?: any) => void): void | Promise<VueConstructor<Vue> | FunctionalComponentOptions<Record<string, any>, PropsDefinition<Record<string, any>>> | ComponentOptions<never, DefaultData<never>, DefaultMethods<never>, DefaultComputed, Record<string, any>, Record<string, any>> | EsModuleComponent>'.\r\n\r\n**Router Code:\r\n\r\n```\r\nimport designationSearchComponent from './modules/designation/designationSearch.vue';\r\nimport designationDetailComponent from './modules/designation/designationdetailcomponent.vue';\r\nimport givebuttonComponent from './modules/giving/givebutton.vue';\r\n\r\n\r\nexport const routes = [\r\n\r\n    { name: 'fundabledetail', path: '/designationdetail/:id', components: { default: designationDetailComponent, givebutton: givebuttonComponent }, props: { default: true, givebutton: false } },\r\n    { name: 'searchandbrowse', path: '/searchandbrowse', components: { default: designationSearchComponent, givebutton: givebuttonComponent } },\r\n    \r\n]\r\n```\r\n\r\n\r\n\r\n**Component Code: DesignationDetailComponent.vue**\r\n```\r\n\r\n\r\n<template>\r\n    <div id=\"myApplication\">\r\n        <div v-if=\"loading===false\">\r\n            <h1>Designation Detail Preview for {{id}}</h1>\r\n\r\n            <p></p>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\n   \r\n    import { mapActions, mapGetters, mapMutations, mapState } from 'Vuex';\r\n    import { FundableDetail } from '../api/api';\r\n    import { IPage } from '../api/parents.ts';\r\n    import givebutton from '../giving/givebutton.vue';\r\n    import store from '../store/store';\r\n\r\n    export default {\r\n\r\n        name: 'designation-detail',\r\n        props: ['id'],\r\n        methods: {\r\n            ...mapActions({\r\n                getServerDetail: 'designationDetail/getDesignation'\r\n            }),\r\n            ...mapMutations({ setId: 'designationDetail/setId' }),\r\n            ...mapState({\r\n                designation: state => store.state.designationDetail.designation,\r\n                designationId: state => store.state.designationDetail.id\r\n            }),\r\n            ...mapGetters({\r\n                getData: 'designationDetail/designation'\r\n            })\r\n        },\r\n        computed: {\r\n\r\n        },\r\n        data: function() {\r\n            return {\r\n                photoUrl: '__PHOTOURL__',\r\n                loading: false\r\n               \r\n            };\r\n        },\r\n        created() {\r\n            //this['setId'](this['id']);\r\n            //this['loading'] = true\r\n            //this['getServerDetail']().then(() => {\r\n            //    console.log('this', this);\r\n            //    this['loading'] = false;\r\n            //})\r\n        }\r\n       \r\n       \r\n};\r\n\r\n</script>\r\n\r\n<style>\r\n    #app {\r\n      text-align: center;\r\n      color: #2c3e50;\r\n      margin-top: 60px;\r\n    }\r\n</style>\r\n```\r\n```\r\n","Url":"https://github.com/vuejs/vue-router/issues/2248","RelatedDescription":"Closed issue \"is not assignable to type 'RouterOptions' because of computed property on component\" (#2248)"},{"Id":"330569157","IsPullRequest":false,"CreatedAt":"2018-06-09T15:52:47","Actor":"kbouh320","Number":"2247","RawContent":null,"Title":"route containing prop and using a same component is not updated","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/b7mj1Lkt/](https://jsfiddle.net/b7mj1Lkt/)\r\n\r\n### Steps to reproduce\r\n```javascript\r\n{\r\n    path: '/documents/:collectionSlug',\r\n    component: PageListDocuments,\r\n    name: 'list-documents',\r\n    props: true,\r\n    meta: {\r\n        title: 'Documents'\r\n    }\r\n},\r\n```\r\nNavigating through different urls such as /documents/groundschool and /documents/administration does not update the url with the new prop, it will always stays on the first url selected even though  the beforeRouteUpdate hook is called in my component PageListDocuments.\r\n\r\nTo navigate through the different urls I use that code \r\n```html\r\n<v-list-tile v-for=\"(item, index) in userMenuItems\" :key=\"index\" @click=\"clickMenu(item)\">\r\n    <v-list-tile-action><v-icon>{{ item.icon }}</v-icon></v-list-tile-action>\r\n     <v-list-tile-title>{{ item.text }}</v-list-tile-title>\r\n</v-list-tile>\r\n```\r\n\r\n```javascript\r\nclickMenu(item) {\r\n    if (_.has(item, 'link')) {\r\n        if(item.link.indexOf('http') == 0) {\r\n            window.open(item.link)\r\n        }\r\n        else {\r\n            this.$router.push({ path: item.link })\r\n        }\r\n    }\r\n     else if (_.has(item, 'action')) {\r\n        item.action()\r\n    }\r\n}\r\n```\r\n\r\nMy navigation guard shows the correct from and to object.\r\n\r\n```log\r\nchange route to {name: \"list-documents\", meta: {…}, path: \"/documents/flying\", hash: \"\", query: {…}, …}\r\nchange route from {name: \"list-documents\", meta: {…}, path: \"/documents/ground-school\", hash: \"\", query: {…}, …}\r\n```\r\n\r\n### What is expected?\r\nThe url should be updated with the new subroute\r\n\r\n### What is actually happening?\r\nThe url stays the same\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2247","RelatedDescription":"Closed issue \"route containing prop and using a same component is not updated\" (#2247)"},{"Id":"330204925","IsPullRequest":false,"CreatedAt":"2018-06-07T10:39:46","Actor":"wpsumsun","Number":"2246","RawContent":null,"Title":"`this.router.go(-1)` doesn't work only on Chrome 67","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[http://jsbin.com/?html,css,js,output;I don't know how to show this question in  editor such as JSBin,  you can try it on you page.](http://jsbin.com/?html,css,js,output;I don't know how to show this question in  editor such as JSBin,  you can try it on you page.)\r\n\r\n### Steps to reproduce\r\nuse `this.router.go(-1)`   return to previous page\r\n\r\n### What is expected?\r\nreturn to previous page\r\n\r\n### What is actually happening?\r\nnothing, it doesn't work. horever, it worked  well on Chrome 66.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2246","RelatedDescription":"Closed issue \"`this.router.go(-1)` doesn't work only on Chrome 67\" (#2246)"},{"Id":"329761677","IsPullRequest":false,"CreatedAt":"2018-06-06T18:17:00","Actor":"EugeneHerasymchuk","Number":"2244","RawContent":null,"Title":"Router doesn't render link properly if hash tag is defined","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/5njn5pry4](https://codesandbox.io/s/5njn5pry4)\r\n\r\n### Steps to reproduce\r\nThere are some cases where I have to render `a` or `router-link` based on some condition. So both `to` and `href` tags want to be applied. In this case, router link doesn't render the link properly. \r\nHover mouse over the link and see where you'll be directed.       \r\n`<a href=\"[object Object]\" class=\"\">Link</a>`\r\n\r\n### What is expected?\r\nExpected to render A tag properly with the link formed from `to` tag.   This can be achieved by removing `href` tag from `router-link`.     \r\n`<a href=\"/link/3450\" class=\"\">Link</a>`\r\n\r\n### What is actually happening?\r\nIt renders the `[object Object]` in the place of `href`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2244","RelatedDescription":"Closed issue \"Router doesn't render link properly if hash tag is defined\" (#2244)"},{"Id":"329872710","IsPullRequest":false,"CreatedAt":"2018-06-06T18:14:20","Actor":"mangoooooo","Number":"2245","RawContent":null,"Title":"The page does not display correctly after changing the path","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/9jr1zry2k4](https://codesandbox.io/s/9jr1zry2k4)\r\n\r\n### Steps to reproduce\r\n1. click \"to desinger home\" then return, and then click \"to designer detail\"\r\n\r\n2. The detail page shows the content of the home page\r\n\r\n3. then refresh the detail page, it shows the correct content\r\n\r\n![](https://ws1.sinaimg.cn/large/005wMh0ngy1fs1t21tbykg308l0fa4qp.gif)\r\n\r\n\r\n### What is expected?\r\n shows the correct content\r\n\r\n### What is actually happening?\r\n shows the wrong content\r\n\r\n---\r\nPlease forgive me for my poor English\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2245","RelatedDescription":"Closed issue \"The page does not display correctly after changing the path\" (#2245)"},{"Id":"329513249","IsPullRequest":false,"CreatedAt":"2018-06-05T15:37:02","Actor":"crswll","Number":"2243","RawContent":null,"Title":"Allow a user to read and write state on history entries","State":"open","Body":"### What problem does this feature solve?\r\n\r\nMobile apps that want to save scroll position for elements besides window.\r\n\r\nThis would also allow the user to save whatever they want to history state. A project I'm working on now needs to keep track of what's \"focused\" per page and this seems like the correct place for it. It could also be a nice place for temporary form data. I'm sure there's a lot of use cases outside of this.\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\nI'm still thinking about it, though I think someone else thinking about it would be better. :)\r\n\r\nI checked out `react-router` a bit and it looks like we can make state part of the Location object, so we can set it in `$router.push|replace({...})` or `next({...})` calls. They use an additional argument but we might not need to?\r\n\r\nI took a quick look at react-router and it seems to allow for this: https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/api/history.md\r\n\r\nAlso, this seems to talk directly to the situation we're facing with scrolling:\r\nhttps://reacttraining.com/react-router/web/guides/scroll-restoration\r\n\r\nAlso some additional reading: https://github.com/ReactTraining/history#properties\r\n\r\nHopefully this is useful and doesn't seem like useless rambling.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2243","RelatedDescription":"Open issue \"Allow a user to read and write state on history entries\" (#2243)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"337200528","IsPullRequest":false,"CreatedAt":"2018-06-30T09:14:52","Actor":"aComputerGeek","Number":"1326","RawContent":null,"Title":"After refreshing the web page, the value type has changed","State":"closed","Body":"![](https://s1.ax2x.com/2018/06/30/nLMbe.jpg)\r\n\r\n**before**\r\n![](https://s1.ax2x.com/2018/06/30/nLdNO.jpg)\r\n\r\n**after**\r\n\r\n![](https://s1.ax2x.com/2018/06/30/nLG9q.jpg)","Url":"https://github.com/vuejs/vuex/issues/1326","RelatedDescription":"Closed issue \"After refreshing the web page, the value type has changed\" (#1326)"},{"Id":"336844595","IsPullRequest":false,"CreatedAt":"2018-06-29T02:50:11","Actor":"owey0312","Number":"1325","RawContent":null,"Title":"variable of state changed for 3 times, but the getters use it only triggered for once when app init.","State":"open","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[http://www.baidu.com](http://www.baidu.com)\r\n\r\n### Steps to reproduce\r\n1、start app;  we can see shoppedGoodsList getter triggered once.\r\n2、see shopping cart page: empty now;\r\n3、add 2 goods to cart, commit has changed state variable goodsInfo as we can see it from console;\r\n       but at this time, we can not see  shoppedGoodsList getter triggered any more;\r\n4、see shopping cart page: empty as before;\r\n\r\n### What is expected?\r\ngetter triggered for 3 times\r\n\r\n### What is actually happening?\r\ngetter triggered for 1 times at app startup.\r\n\r\n---\r\n/********store info as below******************/\r\nconst state = {\r\n   goodsInfo: {}\r\n};\r\n\r\nconst getters = {\r\n    shoppedGoodsInfo(state){\r\n        return state.goodsInfo;\r\n    },\r\n    shoppedGoodsList(state){\r\n        let info = UTILS.object.map(state.goodsInfo, (k, v)=>{\r\n            let rs = {\r\n                id: k,\r\n                name: v.info.prodName,\r\n                price: v.info.price,\r\n                media: v.info.thumbnailList[0],\r\n                feature: v.info.feature,\r\n                count: v.count,\r\n                maxCount: v.info.limit\r\n            };\r\n            return rs;\r\n        });\r\n        console.log('triggered', info);\r\n        return info;\r\n    }\r\n};\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    mutations,\r\n    actions\r\n}\r\n\r\n/******vue info as below************/\r\ncomputed: {\r\n        ...mapGetters('shoppingCart', ['shoppedGoodsList']),\r\n    }\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1325","RelatedDescription":"Open issue \"variable of state changed for 3 times, but the getters use it only triggered for once when app init.\" (#1325)"},{"Id":"336750488","IsPullRequest":false,"CreatedAt":"2018-06-28T19:29:50","Actor":"exe-dealer","Number":"1324","RawContent":null,"Title":"dispatch root action with leading slash","State":"open","Body":"### What problem does this feature solve?\r\ntrailing `{ root: true }` object is verbose and spoils code style\r\n\r\n### What does the proposed API look like?\r\n```js\r\ndispatch('api/foo', {\r\n  bar: 'buz',\r\n  quz: 'qux',\r\n}, { root: true }) // ugly trailing options object\r\n\r\n// leading slash makes it look better\r\ndispatch('/api/foo', {\r\n  bar: 'buz',\r\n  quz: 'qux',\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1324","RelatedDescription":"Open issue \"dispatch root action with leading slash\" (#1324)"},{"Id":"336214607","IsPullRequest":false,"CreatedAt":"2018-06-27T12:47:19","Actor":"hnzxb","Number":"1323","RawContent":null,"Title":"介绍网站样式挂了","State":"closed","Body":"https://vuex.vuejs.org/  错乱","Url":"https://github.com/vuejs/vuex/issues/1323","RelatedDescription":"Closed issue \"介绍网站样式挂了\" (#1323)"},{"Id":"336148815","IsPullRequest":true,"CreatedAt":"2018-06-27T09:29:48","Actor":"sue71","Number":"1322","RawContent":null,"Title":"feat: add type annotation for the context of actions and mutations","State":"open","Body":"The handlers for actions and mutations are bound to the store, but there is no type annotation for this behavior. \r\n\r\nThis PR will enable us to use `this` as Store in the handlers.","Url":"https://github.com/vuejs/vuex/pull/1322","RelatedDescription":"Open PR \"feat: add type annotation for the context of actions and mutations\" (#1322)"},{"Id":"336006104","IsPullRequest":true,"CreatedAt":"2018-06-26T21:58:36","Actor":"Titiaiev","Number":"1321","RawContent":null,"Title":"fixed bugs in links to guide","State":"open","Body":"now the Russian documentation does not work links \"more\",\r\nfor example this link  -  https://vuex.vuejs.org/ru/api/mutations.html\r\n\r\nI fixed it\r\n","Url":"https://github.com/vuejs/vuex/pull/1321","RelatedDescription":"Open PR \"fixed bugs in links to guide\" (#1321)"},{"Id":"335955707","IsPullRequest":false,"CreatedAt":"2018-06-26T19:15:04","Actor":"savaf","Number":"1320","RawContent":null,"Title":"Is Vuex 3 compatible with Vue.js 1?","State":"closed","Body":"Is Vuex 3 compatible with Vue.js 1?\r\n","Url":"https://github.com/vuejs/vuex/issues/1320","RelatedDescription":"Closed issue \"Is Vuex 3 compatible with Vue.js 1?\" (#1320)"},{"Id":"335112181","IsPullRequest":true,"CreatedAt":"2018-06-25T00:39:11","Actor":"zjfeng1223","Number":"1319","RawContent":null,"Title":"modify shopping-cart modules cart.js","State":"closed","Body":"Code reduction","Url":"https://github.com/vuejs/vuex/pull/1319","RelatedDescription":"Closed or merged PR \"modify shopping-cart modules cart.js\" (#1319)"},{"Id":"335110761","IsPullRequest":false,"CreatedAt":"2018-06-23T15:53:00","Actor":"zjfeng1223","Number":"1318","RawContent":null,"Title":"shopping-cart modules","State":"closed","Body":"cart.js\r\n\r\n```\r\n incrementItemQuantity (state, { id }) {\r\n    const cartItem = state.items.find(item => item.id === id)\r\n    cartItem.quantity++\r\n  },\r\n```\r\n\r\nmodify\r\n\r\n```\r\nincrementItemQuantity (state, cartItem) {\r\n    cartItem.quantity++\r\n  },\r\n```","Url":"https://github.com/vuejs/vuex/issues/1318","RelatedDescription":"Closed issue \"shopping-cart modules\" (#1318)"},{"Id":"334861466","IsPullRequest":false,"CreatedAt":"2018-06-22T12:32:08","Actor":"lsqswl","Number":"1317","RawContent":null,"Title":"Dead cycle","State":"closed","Body":"dist/logger.js\r\n\r\nlogger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\r\n\r\nDead cycle","Url":"https://github.com/vuejs/vuex/issues/1317","RelatedDescription":"Closed issue \"Dead cycle\" (#1317)"},{"Id":"334795574","IsPullRequest":false,"CreatedAt":"2018-06-22T08:45:07","Actor":"miaulightouch","Number":"1316","RawContent":null,"Title":"replaceState should trigger subscribe callbacks","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/zajRgg?editors=1010](https://codepen.io/anon/pen/zajRgg?editors=1010)\r\n\r\n### Steps to reproduce\r\n1. `subscribe` a callback\r\n2. `replaceState` with any object, and `subscribe` wouldn't be triggered\r\n\r\n\r\n### What is expected?\r\n`subscribe` should be triggered\r\n\r\n### What is actually happening?\r\nit's not.\r\n\r\n---\r\nif `replaceState` won't fire `subscribe` callback, vue-devtools would not work properly.\r\n\r\nref: vuejs/vue-devtools#690\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1316","RelatedDescription":"Open issue \"replaceState should trigger subscribe callbacks\" (#1316)"},{"Id":"334762514","IsPullRequest":false,"CreatedAt":"2018-06-22T06:36:59","Actor":"rajeev1690","Number":"1315","RawContent":null,"Title":"Computed Property Is not Updating from child component","State":"closed","Body":"Hello Sir\r\n\r\n I have one component which display all the students list and i have fetch the data using computed property from state. Since i have created one more component for editing the student details. After updating the student information its getting updated to state also but its not getting updated at my student component where i am the displaying students list\r\n\r\nI have used below computed property to get the students\r\n\r\n computed:{\r\n    \tstudents(){\r\n    \t\tthis.load = true\r\n    \t\treturn this.$store.getters.all_students;\r\n    \t},","Url":"https://github.com/vuejs/vuex/issues/1315","RelatedDescription":"Closed issue \"Computed Property Is not Updating from child component\" (#1315)"},{"Id":"331996480","IsPullRequest":true,"CreatedAt":"2018-06-21T00:46:31","Actor":"Alex-Sokolov","Number":"1306","RawContent":null,"Title":"docs: [RU] Localized images","State":"closed","Body":"Ready to merge","Url":"https://github.com/vuejs/vuex/pull/1306","RelatedDescription":"Closed or merged PR \"docs: [RU] Localized images\" (#1306)"},{"Id":"333048536","IsPullRequest":true,"CreatedAt":"2018-06-17T11:33:02","Actor":"ktsn","Number":"1313","RawContent":null,"Title":"docs: update outdated link and redirects","State":"closed","Body":"fix #1283 \r\nfix #1310","Url":"https://github.com/vuejs/vuex/pull/1313","RelatedDescription":"Closed or merged PR \"docs: update outdated link and redirects\" (#1313)"},{"Id":"332900531","IsPullRequest":false,"CreatedAt":"2018-06-17T11:33:02","Actor":"roryokane","Number":"1310","RawContent":null,"Title":"Broken link on “What is Vuex?” page in documentation","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/#when-should-i-use-it](https://vuex.vuejs.org/#when-should-i-use-it)\r\n\r\n### Steps to reproduce\r\n1. Open https://vuex.vuejs.org/#when-should-i-use-it.\r\n1. In the “When Should I Use It?” section, find the sentence “A simple [**global event bus**](https://vuejs.org/v2/guide/components.html#Non-Parent-Child-Communication) may be all you need.” and click on the link.\r\n\r\n### What is expected?\r\nI am taken to some documentation about non-parent-child communication in Vue and an explanation of how to implement it using an event bus.\r\n\r\n### What is actually happening?\r\nThe page https://vuejs.org/v2/guide/components.html#Non-Parent-Child-Communication redirects to https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function, which immediately redirects to https://vuejs.org/v2/guide/state-management.html. The page doesn't mention a global event bus.\r\n\r\n---\r\nI tried searching for where that documentation might have moved to, but didn't find it after a few minutes. Maybe it was deleted.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1310","RelatedDescription":"Closed issue \"Broken link on “What is Vuex?” page in documentation\" (#1310)"},{"Id":"333048763","IsPullRequest":true,"CreatedAt":"2018-06-17T11:31:03","Actor":"ktsn","Number":"1314","RawContent":null,"Title":"docs(ja): update outdated link","State":"closed","Body":"Translated #1313 into Japanese.","Url":"https://github.com/vuejs/vuex/pull/1314","RelatedDescription":"Closed or merged PR \"docs(ja): update outdated link\" (#1314)"},{"Id":"333047550","IsPullRequest":true,"CreatedAt":"2018-06-17T09:02:27","Actor":"hakatashi","Number":"1312","RawContent":null,"Title":"[docs-ja] Fix small mistranslation","State":"closed","Body":"Original:\r\n\r\n> By default, actions, mutations and getters inside modules are still registered under the **global namespace** - this allows multiple modules to react to the same mutation/action type.","Url":"https://github.com/vuejs/vuex/pull/1312","RelatedDescription":"Closed or merged PR \"[docs-ja] Fix small mistranslation\" (#1312)"},{"Id":"333043541","IsPullRequest":false,"CreatedAt":"2018-06-17T08:36:33","Actor":"kingRayhan","Number":"1311","RawContent":null,"Title":"views don't update on vuex state an getters changed","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/kingRayhan/vuex-problem-repo](https://github.com/kingRayhan/vuex-problem-repo)\r\n\r\n### Steps to reproduce\r\n```\r\ngit cone https://github.com/kingRayhan/vuex-problem-repo.git\r\nnpm install\r\nnpm run serve\r\n```\r\n\r\n### What is expected?\r\nI editing vuex state , state is changing in vuex devtools bit my view is not updating\r\n\r\n### What is actually happening?\r\nState is updating , but front-end not updates\r\n\r\nSee the video plz -> https://www.youtube.com/watch?v=s7iQ59MYuBQ\r\n\r\n---\r\nHi guys,\r\nI was working in a big project, I integrated  vuex on that project in one point of development progress,\r\nEverything was going well but I got one problem, may be it is not any problem , It could be a mis conception of me about vuex.\r\nTo demonstrate that mis conception or issue I created this very simple application, unfortunately I face same issue here also,\r\n\r\nWhen I push to vuex state by commiting a muation, I see state is change but my front-end is not chaning\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1311","RelatedDescription":"Closed issue \"views don't update on vuex state an getters changed\" (#1311)"},{"Id":"332694704","IsPullRequest":false,"CreatedAt":"2018-06-17T08:33:38","Actor":"essenmitsosse","Number":"1309","RawContent":null,"Title":"Warn when adding a function to the state","State":"closed","Body":"### What problem does this feature solve?\r\nRight now Vuex warns you (in dev mode) when changing the state from outside - which is good and important. But right now it can (accidentally) be circumvented with closures, by adding a function to the state.\r\n\r\n```javascript\r\n// Create a closure\r\nconst myFunctionFactory = () => {\r\n\tconst myValues = {\r\n\t\tfoo: 0,\r\n\t};\r\n\r\n\treturn () => {\r\n\t\tmyValues.foo  = 1;\r\n\t\treturn myValues.foo;\r\n\t};\r\n};\r\n\r\n// Get the function inside the closure\r\nconst myFunction = myFunctionFactory();\r\n\r\n// Add the function to the state\r\nVue.set( state, 'myFunction', myFunction );\r\n\r\n// New each time the function is called, a different result is returned\r\nstate.myFunction(); // => 1;\r\nstate.myFunction(); // => 2;\r\nstate.myFunction(); // => 3;\r\nstate.myFunction(); // => 4;\r\n```\r\n\r\nThis can introduce really subtle bugs and also makes time travel unusable. There also seems to be no way to prevent this, except for not allowing functions in state at all.\r\n\r\nIt would be great to hear other peoples opinions on the subject.\r\n\r\n### What does the proposed API look like?\r\nIn my opinion adding functions to the state should be discouraged in docs.\r\n\r\nIn dev mode it would be great if an error could be thrown if a function is discovered in the state - at least if strict mode is enabled or something like that.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1309","RelatedDescription":"Closed issue \"Warn when adding a function to the state\" (#1309)"},{"Id":"332638352","IsPullRequest":true,"CreatedAt":"2018-06-15T03:54:05","Actor":"wferris722","Number":"1308","RawContent":null,"Title":"Reverse compatable setters for mapState #1085","State":"open","Body":"In response to issue #1085\r\n\r\nThis PR adds optional setters to mapState that should be intuitive to people familiar with vue's computed setters and vuex's mapMutations helper function. \r\n\r\nThe change can be made without breaking existing usage of the mapState function.\r\n\r\nSetters mimic rules for mapMutations (a string argument commits a matching mutation, function arguments are dispatched with a context)\r\n\r\nPR includes unit tests for above behaviors including namespaces.\r\n\r\nUnchanged Behavior:\r\n```\r\ncomputed: {\r\n  ...mapState(['count'])\r\n  // -- or --\r\n  ...mapState({\r\n    count: 'count'\r\n  })\r\n  // -- or -- \r\n  ...mapState({\r\n    count: state => state.count\r\n  })\r\n```\r\n\r\nAdded Behavior:\r\n```\r\ncomputed: {\r\n  ...mapState({\r\n    count: {\r\n      get: 'count', //functions identically to ...mapState(['count'])\r\n      set: 'count'  //commit('count', ...args)\r\n    },\r\n    data: {\r\n      get: (state) => state.data,\r\n      set: ({commit}, value) => commit('data', value);\r\n    },\r\n  })\r\n}\r\n```\r\n\r\nThe two behaviors can be mixed:\r\n```\r\ncomputed: {\r\n  ...mapState({\r\n    count: 'count',\r\n    data: {\r\n      get: 'data',\r\n      set: 'data'\r\n    }\r\n  })\r\n}\r\n```","Url":"https://github.com/vuejs/vuex/pull/1308","RelatedDescription":"Open PR \"Reverse compatable setters for mapState #1085\" (#1308)"},{"Id":"330900095","IsPullRequest":false,"CreatedAt":"2018-06-15T01:03:25","Actor":"erichorne","Number":"1300","RawContent":null,"Title":"Dynamic modules that use Namespaces need a way to check if they are already registered","State":"closed","Body":"### What problem does this feature solve?\r\nWhen registering a dynamic module, an error can occur in the console warning that some attributes of the modules are duplicates if the namespace has already been registered. Having a way to check if the namespace path is already occupied would allow the code to either, register to a different namespace (ick!), unregister and re-register the existing namespace or avoid registration of the namespace altogether. \r\n\r\nThis condition can be easily reproduced by dynamically registering a namespaced module and issuing a hotreload or attempting to register that module more than once to the same path. \r\n\r\nEnd users would not see errors on hot-load or, if for some reason, the code attempts multiple registrations in the same session.\r\n\r\nThe only workaround at this point is to check the private member _modulesNamespaceMap. Building a dependency on that private access isn't ideal. I can find no other way to determine if the namespace is already occupied. \r\n\r\n### What does the proposed API look like?\r\nOption A: Provide a boolean method that returns the state of a given namespace:\r\n\r\n    this.$store.isNamespaceRegistered(\"nested/name/space\")\r\n\r\nOption B: Exit from registerModule and provide a false return code from registerModule when the namespace already exists. \r\n\r\n    if (this.$store.registerModule(\"existing/namespace\", myModule) === false) {\r\n       this.$store.unregisterModule(\"existing/namespace\")\r\n       this.$store.registerModule(\"existing/namespace\", myModule)\r\n    }\r\n\r\nI personally like Option A better as it is minimally intrusive on the existing API and gives the developer the means by which to handle the issue with the greatest flexibility.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1300","RelatedDescription":"Closed issue \"Dynamic modules that use Namespaces need a way to check if they are already registered\" (#1300)"},{"Id":"331977787","IsPullRequest":false,"CreatedAt":"2018-06-15T01:01:20","Actor":"lim-enhui","Number":"1305","RawContent":null,"Title":"getters breaks after routing behavior changes","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/moz223wypx](https://codesandbox.io/s/moz223wypx)\r\n\r\n### Steps to reproduce\r\nstep 1: click one of the nodes component and the templates component should toggle.\r\nstep 2: change the route, click router link to 2.\r\nstep 3: repeat step 1\r\nstep 4: change the route, click router link to 1.\r\nstep 5: repeat step 1\r\n\r\n### What is expected?\r\nwhen route changes.. the getters for the template should be able to compute and return filtered states as before route changes applied\r\n\r\n### What is actually happening?\r\nthe state is updated but the getters does not filter in the response changes from the state.\r\n\r\n---\r\nI tested to toggle state in the state frame.. and the getters computes and return this response as intended toggle elements, however when i changes my route, the getters no longer filter the response result and the component on receiving end does not show despite setting its visibility to true.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1305","RelatedDescription":"Closed issue \"getters breaks after routing behavior changes\" (#1305)"},{"Id":"332301340","IsPullRequest":true,"CreatedAt":"2018-06-14T14:47:53","Actor":"luiseok","Number":"1307","RawContent":null,"Title":"Fixed API document (Korean) typo","State":"closed","Body":"In Korean document(API - Vuex.Store Contructor options part), there was an typo (로투).\r\nIt should be fixed as 루트(root).\r\nthanks.\r\n","Url":"https://github.com/vuejs/vuex/pull/1307","RelatedDescription":"Closed or merged PR \"Fixed API document (Korean) typo\" (#1307)"},{"Id":"331185984","IsPullRequest":true,"CreatedAt":"2018-06-13T16:45:27","Actor":"lex111","Number":"1303","RawContent":null,"Title":"Russian docs: translate menu item \"Languages\"","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1303","RelatedDescription":"Closed or merged PR \"Russian docs: translate menu item \"Languages\"\" (#1303)"},{"Id":"331538562","IsPullRequest":false,"CreatedAt":"2018-06-12T10:58:26","Actor":"pkganthali","Number":"1304","RawContent":null,"Title":"Can we use vuex in a Multi Page VueJs App instead of SPA using HtmlWebpackPlugin","State":"closed","Body":"We initially had a Vuejs application which is of Single Page App type. \r\n\r\nWe used Vuex to store data that are used by the Vuejs components.\r\n\r\nRecently we have a requirement to convert the existing Vuejs app into a multi page app.\r\n\r\nWe used Webpack's HtmlWebpackPlugin to convert SPA into a hybrid app.\r\n\r\nSince the pages are now being refreshed(served from the server), **the Vuex store data is emptied even after loading its state from a REST API** using Vue component's created() life cycle hook.","Url":"https://github.com/vuejs/vuex/issues/1304","RelatedDescription":"Closed issue \"Can we use vuex in a Multi Page VueJs App instead of SPA using HtmlWebpackPlugin\" (#1304)"},{"Id":"330937612","IsPullRequest":true,"CreatedAt":"2018-06-10T03:42:12","Actor":"periscuelo","Number":"1302","RawContent":null,"Title":"Portuguese Translation","State":"open","Body":"Hello guys. This time I did a translation with affection looking part by part. Which does not mean that it has no error. So if you can look and let me know if you have something missing, i i'll be glad. @ErickPetru and @ktsn please take a look. Best Regards.","Url":"https://github.com/vuejs/vuex/pull/1302","RelatedDescription":"Open PR \"Portuguese Translation\" (#1302)"},{"Id":"330923962","IsPullRequest":true,"CreatedAt":"2018-06-09T22:34:56","Actor":"Curtis017","Number":"1301","RawContent":null,"Title":"Add parameter types for store's commit and dispatch methods","State":"open","Body":"This will enable users to provide type safe parameters for the commit and dispatch methods.\r\n\r\nExample: \r\n```javascript\r\nimport * as mutations from '@/store/mutation-types';\r\nimport uuid from 'uuid'\r\n\r\ninterface AddTodoRequestPayload {\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\ninterface AddTodoPayload {\r\n  uid: string\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\nconst ADD_TODO_REQUEST = 'ADD_TODO_REQUEST';\r\ntype ADD_TODO_REQUEST = typeof ADD_TODO_REQUEST;\r\n\r\nconst actions = {\r\n  [ADD_TODO_REQUEST]({ commit }: { commit: Commit }, payload: AddTodoRequestPayload) {\r\n    const uid: string = uuid();\r\n    commit<mutations.types, AddTodoPayload>(\r\n      mutations.ADD_TODO,\r\n      { uid: uid,  title: 'todo title', text: 'todo text' },\r\n    );\r\n  },\r\n};\r\n```","Url":"https://github.com/vuejs/vuex/pull/1301","RelatedDescription":"Open PR \"Add parameter types for store's commit and dispatch methods\" (#1301)"},{"Id":"330568007","IsPullRequest":false,"CreatedAt":"2018-06-08T08:35:33","Actor":"trainiac","Number":"1299","RawContent":null,"Title":"store.registerGetters and store.registerActions","State":"open","Body":"### What problem does this feature solve?\r\nTo be able to fully code split all application logic across application routes it would be helpful to have a way to dynamically register getters and actions.  Currently registerModule only supports registering namespaced modules with `store.registerModule`.  \r\n\r\nFor example lets say you have two namespaced modules that you dynamically load into your application: Sandwich and Human.  The two modules shouldn't know anything about each other.  There needs to be some highter level actions and getters that can tie the two together that you can also dynamically load.\r\n\r\n### What does the proposed API look like?\r\n```\r\nstore.registerActions({\r\n  ...newActions\r\n})\r\n\r\nstore.registerGetters({\r\n  ...newGetters\r\n})\r\n```\r\nThese functions would still throw errors if the user tried to register duplicate actions or getters so it would be up the the user to make sure they are not passing in duplicates by checking existing data and making sure their actions and getters are namespaced appropriately.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1299","RelatedDescription":"Open issue \"store.registerGetters and store.registerActions\" (#1299)"},{"Id":"330462305","IsPullRequest":false,"CreatedAt":"2018-06-08T06:17:54","Actor":"trainiac","Number":"1298","RawContent":null,"Title":"Option to namespace a module but not have it localized","State":"closed","Body":"### What problem does this feature solve?\r\nThe `namespaced:true` module feature has two main purposes: \r\n\r\n1. it automatically namespaces your modules API ( e.g store.getters['namespace/myGetter']). \r\n2. it localizes dispatch, commit, getters, and state. \r\n\r\nI'd like is to have an option when defining a module that does 1. but does not do 2. as mentioned above. I understand that there are currently two ways to achieve what I want in user land but neither of them are ideal.\r\n\r\n1. Define modules that are `namespaced` that have actions and getters that only reference rootGetters, rootState and dispatch to root. I've never like using the root features. Seems like it throws encapsulation out of the door.\r\n2. Define modules that are not `namespaced` and manually namespace modules yourself. This is currently what I'm doing.\r\n\r\n### What does the proposed API look like?\r\n\r\nString `namespace` - Setting `namespace` would namespace all actions, getters, and mutations with that value. A \".\" separator to be able to distinguish between a namespaced module that is localized (\"/\") and not localized (\".\"). A module with this setting should never have state as it's only purpose is to group together other modules actions, getters, and mutations to do higher order operations.\r\n\r\nSome validations worth calling out.\r\n- if the namespace option was set, validate that there is no state defined. \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1298","RelatedDescription":"Closed issue \"Option to namespace a module but not have it localized\" (#1298)"},{"Id":"328832227","IsPullRequest":true,"CreatedAt":"2018-06-03T14:14:04","Actor":"EdyHartono","Number":"1297","RawContent":null,"Title":"Should vuex mapState print error message #1093 #1162","State":"open","Body":"- return an empty array when map is not valid\r\n- log an error message when map is not valid","Url":"https://github.com/vuejs/vuex/pull/1297","RelatedDescription":"Open PR \"Should vuex mapState print error message #1093 #1162\" (#1297)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-07-02T05:30:50.2521143Z","RunDurationInMilliseconds":4137}