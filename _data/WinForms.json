{"Data":{"GitHub":{"Issues":[{"Id":"529681697","IsPullRequest":true,"CreatedAt":"2019-11-28T04:08:49","Actor":"gpetrou","Number":"2445","RawContent":null,"Title":"Add WA enum to User32","State":"open","Body":"## Proposed changes\r\n\r\n- Add WA enum to User32\r\n- Remove the corresponding constants and replace their usages with the above enum. \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2445)","Url":"https://github.com/dotnet/winforms/pull/2445","RelatedDescription":"Open PR \"Add WA enum to User32\" (#2445)"},{"Id":"529630392","IsPullRequest":true,"CreatedAt":"2019-11-28T01:00:32","Actor":"RussKie","Number":"2442","RawContent":null,"Title":"fix: Type 'System.Windows.Forms.IWin32Window' is not defined","State":"closed","Body":"Builds randomly fail with \"Type 'System.Windows.Forms.IWin32Window' is not defined\" error, estimated about 10% of builds failed because of this.\r\n\r\nInvestigations suggest that there may be MSBuild bug that `GetCopyToOutputDirectoryItemsDependsOn` property stomps over previous property value without including itself, thus leading to incorrect behaviours later in a build.\r\nMore info: https://github.com/microsoft/msbuild/issues/4923#issuecomment-554265394\r\n\r\nCloses #2107\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2442)","Url":"https://github.com/dotnet/winforms/pull/2442","RelatedDescription":"Closed or merged PR \"fix: Type 'System.Windows.Forms.IWin32Window' is not defined\" (#2442)"},{"Id":"529634030","IsPullRequest":true,"CreatedAt":"2019-11-28T00:58:35","Actor":"dotnet-maestro[bot]","Number":"2444","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2444)","Url":"https://github.com/dotnet/winforms/pull/2444","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#2444)"},{"Id":"529632914","IsPullRequest":true,"CreatedAt":"2019-11-28T00:49:03","Actor":"dotnet-maestro[bot]","Number":"2443","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2443)","Url":"https://github.com/dotnet/winforms/pull/2443","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#2443)"},{"Id":"529109759","IsPullRequest":true,"CreatedAt":"2019-11-27T22:59:54","Actor":"RussKie","Number":"2437","RawContent":null,"Title":"Add tests to verify joint behaviours pertaining to `ThreeState`, `CheckState` and `Checked`","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2437)","Url":"https://github.com/dotnet/winforms/pull/2437","RelatedDescription":"Closed or merged PR \"Add tests to verify joint behaviours pertaining to `ThreeState`, `CheckState` and `Checked`\" (#2437)"},{"Id":"529095944","IsPullRequest":true,"CreatedAt":"2019-11-27T22:58:23","Actor":"RussKie","Number":"2436","RawContent":null,"Title":"Update testing.md","State":"closed","Body":"Update testing guidelines\r\n\r\n@hughbe is there anything else off the top your head worth adding?\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2436)","Url":"https://github.com/dotnet/winforms/pull/2436","RelatedDescription":"Closed or merged PR \"Update testing.md\" (#2436)"},{"Id":"529586282","IsPullRequest":true,"CreatedAt":"2019-11-27T21:45:59","Actor":"hughbe","Number":"2441","RawContent":null,"Title":"Cleanup UpdateWindow interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup UpdateWindow interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2441)","Url":"https://github.com/dotnet/winforms/pull/2441","RelatedDescription":"Open PR \"Cleanup UpdateWindow interop\" (#2441)"},{"Id":"529494724","IsPullRequest":true,"CreatedAt":"2019-11-27T17:55:20","Actor":"mmitche","Number":"2440","RawContent":null,"Title":"Update area paths to be like 3.1","State":"closed","Body":"Bring ci.yml's SDL config in line with 3.1\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2440)","Url":"https://github.com/dotnet/winforms/pull/2440","RelatedDescription":"Closed or merged PR \"Update area paths to be like 3.1\" (#2440)"},{"Id":"529474460","IsPullRequest":true,"CreatedAt":"2019-11-27T17:18:31","Actor":"mmitche","Number":"2439","RawContent":null,"Title":"[release/3.1] Remove stabilize package versions block","State":"closed","Body":"winforms does not stabilize so there is no need to add confusion.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2439)","Url":"https://github.com/dotnet/winforms/pull/2439","RelatedDescription":"Closed or merged PR \"[release/3.1] Remove stabilize package versions block\" (#2439)"},{"Id":"529458967","IsPullRequest":true,"CreatedAt":"2019-11-27T16:47:58","Actor":"mmitche","Number":"2438","RawContent":null,"Title":"[release/3.0] Add internal/release/* ci triggers","State":"closed","Body":"Remove stabilize package version block. winforms never stabilizes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2438)","Url":"https://github.com/dotnet/winforms/pull/2438","RelatedDescription":"Closed or merged PR \"[release/3.0] Add internal/release/* ci triggers\" (#2438)"},{"Id":"528325219","IsPullRequest":true,"CreatedAt":"2019-11-27T02:41:10","Actor":"hughbe","Number":"2428","RawContent":null,"Title":"Cleanup ControlPaint interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup CreateHalftonePalette\r\n- Cleanup CreateDIBSection\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2428)","Url":"https://github.com/dotnet/winforms/pull/2428","RelatedDescription":"Closed or merged PR \"Cleanup ControlPaint interop\" (#2428)"},{"Id":"528894330","IsPullRequest":true,"CreatedAt":"2019-11-27T02:01:19","Actor":"hughbe","Number":"2433","RawContent":null,"Title":"Cleanup CF_ constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup CF_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2433)","Url":"https://github.com/dotnet/winforms/pull/2433","RelatedDescription":"Closed or merged PR \"Cleanup CF_ constants\" (#2433)"},{"Id":"529055691","IsPullRequest":true,"CreatedAt":"2019-11-27T01:21:04","Actor":"RussKie","Number":"2435","RawContent":null,"Title":"Remove remnants of `ToolBar` class","State":"closed","Body":"`ToolBar` implementation was removed in #2157.\r\n\r\nCloses #2372\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2435)","Url":"https://github.com/dotnet/winforms/pull/2435","RelatedDescription":"Closed or merged PR \"Remove remnants of `ToolBar` class\" (#2435)"},{"Id":"528918383","IsPullRequest":true,"CreatedAt":"2019-11-26T19:55:06","Actor":"wtgodbe","Number":"2434","RawContent":null,"Title":"Add dotnet-eng feed to nuget.config","State":"closed","Body":"The dotnet-eng feed is the new feed for arcade bits. Should fix an internal build break.\r\n\r\nCC @mmitche @AdamYoblick @RussKie \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2434)","Url":"https://github.com/dotnet/winforms/pull/2434","RelatedDescription":"Closed or merged PR \"Add dotnet-eng feed to nuget.config\" (#2434)"},{"Id":"528601445","IsPullRequest":false,"CreatedAt":"2019-11-26T09:38:25","Actor":"M-Lipin","Number":"2432","RawContent":null,"Title":"ComboBox initialization/reinitialization fails with NullReferenceException","State":"open","Body":"* .NET Core Version: 3.0\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nThe issue is that the multi-form desktop application or application with complex control appearance behavior may fail with the error caused by NullReference which has ComboBox's origin. ComboBox initializes successfully and the issue does not reproduce in case this is shown initially on the forms and is not recreated while app lifecycle.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n`NullReferenceException` and application crash:\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Windows.Forms.ComboBox.WmParentNotify(Message& m)\r\n   at System.Windows.Forms.ComboBox.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n```\r\n\r\n**Expected behavior:**\r\nNo error.\r\n\r\n**Minimal repro:**\r\nCreate the app with hidden dialog form and ComboBox on this form.\r\nStart the app, trigger dialog form initialization and reinitialization without dialog showing.\r\nObserve the error.\r\n\r\nDevDiv issue: https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1022943","Url":"https://github.com/dotnet/winforms/issues/2432","RelatedDescription":"Open issue \"ComboBox initialization/reinitialization fails with NullReferenceException\" (#2432)"},{"Id":"527567153","IsPullRequest":true,"CreatedAt":"2019-11-26T05:25:03","Actor":"hughbe","Number":"2422","RawContent":null,"Title":"Add WindowsFormsSynchronizationContext tests and remove some dead code","State":"closed","Body":"## Proposed Changes\r\n- Add WindowsFormsSynchronizationContext tests\r\n- Remove WindowsFormsSynchronizationContext dead code\r\n- Remove invalid debug asserts that are already handle\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2422)","Url":"https://github.com/dotnet/winforms/pull/2422","RelatedDescription":"Closed or merged PR \"Add WindowsFormsSynchronizationContext tests and remove some dead code\" (#2422)"},{"Id":"528327604","IsPullRequest":true,"CreatedAt":"2019-11-26T03:47:36","Actor":"hughbe","Number":"2429","RawContent":null,"Title":"Cleanup PatBlt interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup PatBlt interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2429)","Url":"https://github.com/dotnet/winforms/pull/2429","RelatedDescription":"Closed or merged PR \"Cleanup PatBlt interop\" (#2429)"},{"Id":"527915882","IsPullRequest":true,"CreatedAt":"2019-11-26T03:38:36","Actor":"gpetrou","Number":"2425","RawContent":null,"Title":"Remove WS_EX_TRANSPARENT from NativeMethods.cs","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove  WS_EX_TRANSPARENT from NativeMethods.cs and replace its usages with the appropriate enum value.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2425)","Url":"https://github.com/dotnet/winforms/pull/2425","RelatedDescription":"Closed or merged PR \"Remove WS_EX_TRANSPARENT from NativeMethods.cs\" (#2425)"},{"Id":"528332268","IsPullRequest":true,"CreatedAt":"2019-11-26T03:32:22","Actor":"hughbe","Number":"2430","RawContent":null,"Title":"Cleanup IViewObject and IViewObject2 interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup IViewObject\r\n- Cleanup IViewObject2\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2430)","Url":"https://github.com/dotnet/winforms/pull/2430","RelatedDescription":"Closed or merged PR \"Cleanup IViewObject and IViewObject2 interop\" (#2430)"},{"Id":"528392436","IsPullRequest":true,"CreatedAt":"2019-11-25T23:15:11","Actor":"brucremo","Number":"2431","RawContent":null,"Title":"WIP: Add BaseContextMenuStripTests","State":"open","Body":"Issue #721 (Partial) : Add BaseContextMenuStripTests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2431)","Url":"https://github.com/dotnet/winforms/pull/2431","RelatedDescription":"Open PR \"WIP: Add BaseContextMenuStripTests\" (#2431)"},{"Id":"528288843","IsPullRequest":false,"CreatedAt":"2019-11-25T19:25:34","Actor":"OliaG","Number":"2427","RawContent":null,"Title":"Performance issue with localizable controls and forms","State":"open","Body":"* .NET Core Version: .NT Core 3.0 GA\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nRight now switching the Localizable property on control causes a large amount of properties moved to a .resx file. At runtime this is loaded with heavy use of reflection and deserialization which shows up in our performance profiles as the biggest reason for slow startup time. In our scenario all the controls and forms are designed using flexible layout containers that are automatically sized to fit the text. The all-or-nothing approach to localization, however, causes the control locations and sizes to be moved to .resx file as well. This results in unnecessarily high number of resources that we never localize and that also cause unnecessary re-layouts at startup.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2427","RelatedDescription":"Open issue \"Performance issue with localizable controls and forms\" (#2427)"},{"Id":"528009907","IsPullRequest":false,"CreatedAt":"2019-11-25T11:01:06","Actor":"filipnavara","Number":"2426","RawContent":null,"Title":"Self-contained deployment always include WPF assemblies","State":"open","Body":"* .NET Core Version: 3.0; 3.1\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\n- Create a simple WinForms application (either through `dotnet new` or VS)\r\n- Add Publish profile, change it from \"framework dependent\" to \"self-contained\" \r\n\r\n**Actual behavior:**\r\n\r\nPublished output contains large part of WPF stack (eg. PresentationCore.dll, PresentationUI.dll, PresentationFramework*.dll, etc.) which amounts to over 30 Mb (> 10 Mb compressed) of unused assemblies. The files are pulled from the \"runtimepack.Microsoft.WindowsDesktop.App.Runtime.win-x86/3.0.0\" NuGet package.\r\n\r\n**Expected behavior:**\r\n\r\nNo WPF assemblies in the output.\r\n\r\n**Minimal repro:**\r\n\r\n[WindowsFormsApp1.zip](https://github.com/dotnet/winforms/files/3886266/WindowsFormsApp1.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2426","RelatedDescription":"Open issue \"Self-contained deployment always include WPF assemblies\" (#2426)"},{"Id":"527573390","IsPullRequest":true,"CreatedAt":"2019-11-25T06:22:55","Actor":"hughbe","Number":"2423","RawContent":null,"Title":"Cleanup UIS and UISF cues and add ShowFocusCues/ShowKeyboardCues tests ","State":"closed","Body":"## Proposed Changes\r\n- Cleanup UIS and UISF cues\r\n- Add ShowFocusCues/ShowKeyboardCues tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2423)","Url":"https://github.com/dotnet/winforms/pull/2423","RelatedDescription":"Closed or merged PR \"Cleanup UIS and UISF cues and add ShowFocusCues/ShowKeyboardCues tests \" (#2423)"},{"Id":"527691281","IsPullRequest":false,"CreatedAt":"2019-11-24T12:32:51","Actor":"kpreisser","Number":"2424","RawContent":null,"Title":"Issues in User32.GetWindowText() (out-of-bounds write; text length change detection not working)","State":"open","Body":"* .NET Core Version: `master` (e0a1361874fce56f7a4fac2ec527e155e7c76128)\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nWhile working on the task dialog PR, I had a look at the implementation of `User32.GetWindowText()` and noticed it seems to have some issues:\r\n\r\nhttps://github.com/dotnet/winforms/blob/e0a1361874fce56f7a4fac2ec527e155e7c76128/src/Common/src/Interop/User32/Interop.GetWindowText.cs#L26-L53\r\n\r\n* When calling `GetWindowTextW`, the `nMaxCount` parameter is specified as `textLengthWithNullTerminator + 1`, but the call to `ArrayPool<char>.Shared.Rent` specifies `textLengthWithNullTerminator`.\r\n`ArrayPool.Rent` returns a buffer that has at least the specified size, so it might return a buffer that has exact the specified size, in which case it will be 1 char too small to hold the maximum number of chars. This can lead to too many bytes being written (out-of-bounds write) if the text changes after calling `GetWindowTextLengthW`. <br>\r\nFor example, consider the following scenario:\r\n  - The control text is initially `\"AAAABBBBCCCCDDD\"` (15 chars).\r\n  - `GetWindowTextLengthW(hWnd)` returns `15`, so `textLengthWithNullTerminator` is `16`.\r\n  - `ArrayPool<char>.Shared.Rent(textLengthWithNullTerminator)` returns an array with length `16`. \r\n  - Meanwhile, the control text changes to `\"AAAABBBBCCCCDDDx\"` (16 chars).\r\n  - `GetWindowTextW()` is called with `nMaxCount`=`17`. This parameter specifies the maximum buffer size/characers to write, including the terminating null character.\r\n  - As the text has changed to 16 characters, `GetWindowTextW()` writes 17 characters (`\"AAAABBBBCCCCDDDx\\0\"`) to the buffer and returns the value `16`, thus having written one char (2 bytes) too many. <br>\r\n  The issue can be fixed by changing `ArrayPool<char>.Shared.Rent(textLengthWithNullTerminator)` to `ArrayPool<char>.Shared.Rent(textLengthWithNullTerminator + 1)`.<br><br>\r\n* The implementation wants to handle the case when the text length increases between calling `GetWindowTextLengthW` and calling `GetWindowTextW`. However, the condition actually doesn't work, and a truncated text is returned in that case if the text length has increased by 2 or more chars.\r\n  <br>Consider the following scenario:\r\n  - The control text is initially `\"A\"` (1 chars).\r\n  - `GetWindowTextLengthW(hWnd)` returns `1`, so `textLengthWithNullTerminator` is `2`.\r\n  - Meanwhile, the control text changes to `\"ABC\"` (3 chars).\r\n  - `GetWindowTextW()` is called with `nMaxCount`=`3` and therefore writes `\"AB\\0\"` to the buffer and returns `2`.\r\n  - The condition `actualTextLength > textLengthWithNullTerminator` evaluates to `false` because `actualTextLength==2` and `textLengthWithNullTerminator==2`.\r\n  - The string `\"AB\"` is returned, whereas the correct value would be either `\"A\"` or `\"ABC\"` (depending on the timing).<br>\r\n  The issue can be fixed by changing \r\n  `if (actualTextLength > textLengthWithNullTerminator)` to \r\n  `if (actualTextLength > textLengthWithNullTerminator - 1)`.<br><br>\r\n* If the code determines that the text length has increased between the call to `GetWindowTextLengthW` and `GetWindowTextW`, the loop starts again with determining the new length by calling `GetWindowTextLengthW` (but doesn't keep the last length as minimum value).\r\n  However, if the text changed again to a shorter text between the last call to `GetWindowTextW` and the call to `GetWindowTextLengthW`, `textLengthWithNullTerminator` will have the short value again, and if now the text changes again to a longer text and so forth in exact the same rythm, there can be an infinite loop (although that will be very unlikely in practice).<br>\r\n  I think that the length variable (`textLengthWithNullTerminator`) should be set to the maximum of the previous `actualTextLength+1` and the new length returned by `GetWindowTextLengthW` to avoid this (so that the length will always increase in a new interation).\r\n\r\nAnother minor optimization would be to specify the actual buffer size (`windowTitleBuffer.Length`) rather than `textLengthWithNullTerminator + 1` in the call to `GetWindowTextW`, because the returned buffer might actually be longer than `textLengthWithNullTerminator + 1`, so that we can avoid unnecessary loops if the text length increases between the calls but the new text would still fit into the buffer.\r\nIn that case, the condition `if (actualTextLength > textLengthWithNullTerminator - 1)` would also need to be changed to `if (actualTextLength > windowTitleBuffer.Length - 2)`.\r\n\r\nNote: It seems the buffer out-of-bounds issue (and the broken condition) were introduced with commit 162cba46ddbe80c2c1759cbcd3bbafbbf19f3492 (#923).\r\n\r\nThanks!","Url":"https://github.com/dotnet/winforms/issues/2424","RelatedDescription":"Open issue \"Issues in User32.GetWindowText() (out-of-bounds write; text length change detection not working)\" (#2424)"},{"Id":"527465238","IsPullRequest":true,"CreatedAt":"2019-11-23T00:49:50","Actor":"dotnet-maestro[bot]","Number":"2421","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2421)","Url":"https://github.com/dotnet/winforms/pull/2421","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#2421)"},{"Id":"527463549","IsPullRequest":true,"CreatedAt":"2019-11-23T00:14:02","Actor":"dotnet-maestro[bot]","Number":"2420","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19572.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2420)","Url":"https://github.com/dotnet/winforms/pull/2420","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#2420)"},{"Id":"527392150","IsPullRequest":true,"CreatedAt":"2019-11-22T23:18:27","Actor":"mmitche","Number":"2419","RawContent":null,"Title":"suppress nuget package generation warnings NU5131 and NU5128 (#2373)","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2419)","Url":"https://github.com/dotnet/winforms/pull/2419","RelatedDescription":"Closed or merged PR \"suppress nuget package generation warnings NU5131 and NU5128 (#2373)\" (#2419)"},{"Id":"527339402","IsPullRequest":true,"CreatedAt":"2019-11-22T19:26:39","Actor":"mmitche","Number":"2418","RawContent":null,"Title":"suppress nuget package generation warnings NU5131 and NU5128 (#2373)","State":"closed","Body":"Port supression to allow upgrade to 3.0.100 SDK\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2418)","Url":"https://github.com/dotnet/winforms/pull/2418","RelatedDescription":"Closed or merged PR \"suppress nuget package generation warnings NU5131 and NU5128 (#2373)\" (#2418)"},{"Id":"527269440","IsPullRequest":false,"CreatedAt":"2019-11-22T15:42:40","Actor":"weltkante","Number":"2417","RawContent":null,"Title":"Update UITypeEditors to use modern FolderBrowserDialog instead of XP version","State":"open","Body":"During review of PR #2305 it was [noted](https://github.com/dotnet/winforms/pull/2305#issuecomment-551158274)\r\n\r\n> We should file a follow up issue that changes the folder picker to the newer one that Oren enabled way back when we first went open source.\r\n\r\nThe default folder dialog is from pre-Vista era, you have to opt-in to the modern version, which the code does not do (and there is no way for the user to override it either). Since the modern dialog will always be available under the supported operating systems it makes sense to always use it.","Url":"https://github.com/dotnet/winforms/issues/2417","RelatedDescription":"Open issue \"Update UITypeEditors to use modern FolderBrowserDialog instead of XP version\" (#2417)"},{"Id":"527182872","IsPullRequest":true,"CreatedAt":"2019-11-22T13:01:47","Actor":"dotnet-maestro[bot]","Number":"2416","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 5:39 PM\r\n- **Commit**: e1f099bf18a14e8ef5dc50f1a90078839aa102c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19576.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2416)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2416","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#2416)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-28T05:31:00.0098894Z","RunDurationInMilliseconds":951}