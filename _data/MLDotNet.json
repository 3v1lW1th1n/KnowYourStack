{"Data":{"GitHub":{"Issues":[{"Id":"534598675","IsPullRequest":true,"CreatedAt":"2019-12-09T03:06:42","Actor":"sharwell","Number":"4551","RawContent":null,"Title":"Use std::unique_ptr for samplers_ and likelihood_in_iter_","State":"closed","Body":"Fixes an access violation in native code if `LdaEngine` is deleted before `samplers_` is initialized.","Url":"https://github.com/dotnet/machinelearning/pull/4551","RelatedDescription":"Closed or merged PR \"Use std::unique_ptr for samplers_ and likelihood_in_iter_\" (#4551)"},{"Id":"534605298","IsPullRequest":true,"CreatedAt":"2019-12-08T21:31:56","Actor":"sharwell","Number":"4552","RawContent":null,"Title":"Log exceptions thrown within finalizers","State":"open","Body":"Exceptions thrown from a finalizer will terminate the process.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4552","RelatedDescription":"Open PR \"Log exceptions thrown within finalizers\" (#4552)"},{"Id":"534302884","IsPullRequest":true,"CreatedAt":"2019-12-08T20:54:21","Actor":"sharwell","Number":"4537","RawContent":null,"Title":"Enable VSTestBlame to show details for crashes","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4537","RelatedDescription":"Closed or merged PR \"Enable VSTestBlame to show details for crashes\" (#4537)"},{"Id":"534471315","IsPullRequest":true,"CreatedAt":"2019-12-08T20:50:24","Actor":"sharwell","Number":"4544","RawContent":null,"Title":"WIP Safe pointers","State":"closed","Body":"Locally I converted most owned native objects to `std::unique_ptr` and `std::shared_ptr`. This pull request represents a relatively easy-to-review subset of the changes with minimal overall fan-out in the code.\r\n\r\n* Pass by reference when null is not expected (submitted separately as #4546)\r\n* Use `std::unique_ptr` for objects in `LdaEngine` (submitted separately as #4547)\r\n* Use `std::unique_ptr` for `samplers_` and `likelihood_in_iter_`","Url":"https://github.com/dotnet/machinelearning/pull/4544","RelatedDescription":"Closed or merged PR \"WIP Safe pointers\" (#4544)"},{"Id":"534472994","IsPullRequest":true,"CreatedAt":"2019-12-08T20:45:26","Actor":"sharwell","Number":"4547","RawContent":null,"Title":"Use std::unique_ptr for objects in LdaEngine","State":"closed","Body":"Builds on #4546","Url":"https://github.com/dotnet/machinelearning/pull/4547","RelatedDescription":"Closed or merged PR \"Use std::unique_ptr for objects in LdaEngine\" (#4547)"},{"Id":"534447833","IsPullRequest":true,"CreatedAt":"2019-12-08T19:49:57","Actor":"sharwell","Number":"4543","RawContent":null,"Title":"Update code coverage integration","State":"closed","Body":"* Simplifies coverage integration\r\n* Removes the need to define CODECOV_TOKEN during builds","Url":"https://github.com/dotnet/machinelearning/pull/4543","RelatedDescription":"Closed or merged PR \"Update code coverage integration\" (#4543)"},{"Id":"534291967","IsPullRequest":true,"CreatedAt":"2019-12-08T19:47:40","Actor":"sharwell","Number":"4533","RawContent":null,"Title":"Onnx conversion theory","State":"closed","Body":"Use `[Theory]` to break up tests in OnnxConversionTest.\r\n\r\nüìù Builds on #4532 and #4545\r\n\r\nüí° Recommended review strategy is commit-by-commit. The final commit is easier to review with whitespace-only changes hidden.","Url":"https://github.com/dotnet/machinelearning/pull/4533","RelatedDescription":"Closed or merged PR \"Onnx conversion theory\" (#4533)"},{"Id":"534582582","IsPullRequest":true,"CreatedAt":"2019-12-08T18:43:18","Actor":"sharwell","Number":"4550","RawContent":null,"Title":"Add tests for ParameterSet equality","State":"open","Body":"üìù Builds on #4549\r\n\r\nThis change stabilizes test coverage in `ParameterSet.Equals` and `ParameterSet.ContainsParamValue`.","Url":"https://github.com/dotnet/machinelearning/pull/4550","RelatedDescription":"Open PR \"Add tests for ParameterSet equality\" (#4550)"},{"Id":"534580881","IsPullRequest":true,"CreatedAt":"2019-12-08T18:28:27","Actor":"sharwell","Number":"4549","RawContent":null,"Title":"Add tests for IParameterValue implementations","State":"open","Body":"This change provides deterministic coverage for the implementation of `LongParameterValue`, `FloatParameterValue`, and `StringParameterValue`.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4549","RelatedDescription":"Open PR \"Add tests for IParameterValue implementations\" (#4549)"},{"Id":"534472100","IsPullRequest":true,"CreatedAt":"2019-12-08T17:42:36","Actor":"sharwell","Number":"4545","RawContent":null,"Title":"Add Xunit.Combinatorial for test projects","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4545","RelatedDescription":"Closed or merged PR \"Add Xunit.Combinatorial for test projects\" (#4545)"},{"Id":"534472376","IsPullRequest":true,"CreatedAt":"2019-12-08T17:42:19","Actor":"sharwell","Number":"4546","RawContent":null,"Title":"Pass by reference when null is not expected","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4546","RelatedDescription":"Closed or merged PR \"Pass by reference when null is not expected\" (#4546)"},{"Id":"534290426","IsPullRequest":true,"CreatedAt":"2019-12-08T17:35:51","Actor":"sharwell","Number":"4529","RawContent":null,"Title":"Avoid running API Compat for design time builds","State":"closed","Body":"This change prevents the API compat tool from failing design time builds and leaving the IDE project model in a bad state for development.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4529","RelatedDescription":"Closed or merged PR \"Avoid running API Compat for design time builds\" (#4529)"},{"Id":"534535423","IsPullRequest":true,"CreatedAt":"2019-12-08T12:34:36","Actor":"yaeldekel","Number":"4548","RawContent":null,"Title":"Expression estimator/transformer","State":"open","Body":"Fixes #4015 .","Url":"https://github.com/dotnet/machinelearning/pull/4548","RelatedDescription":"Open PR \"Expression estimator/transformer\" (#4548)"},{"Id":"534292296","IsPullRequest":true,"CreatedAt":"2019-12-08T04:08:28","Actor":"sharwell","Number":"4534","RawContent":null,"Title":"Conditionally compile helper code","State":"closed","Body":"Fixes IDE0051 (Private member is unused) in tests.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4534","RelatedDescription":"Closed or merged PR \"Conditionally compile helper code\" (#4534)"},{"Id":"534291627","IsPullRequest":true,"CreatedAt":"2019-12-08T04:08:05","Actor":"sharwell","Number":"4532","RawContent":null,"Title":"Make test methods public","State":"closed","Body":"Fixes IDE0051 (Private member is unused)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4532","RelatedDescription":"Closed or merged PR \"Make test methods public\" (#4532)"},{"Id":"534291193","IsPullRequest":true,"CreatedAt":"2019-12-08T04:07:30","Actor":"sharwell","Number":"4531","RawContent":null,"Title":"Disable CS0649 in OnnxConversionTest","State":"closed","Body":"Fixes an IDE0051 warning (Private member is unused).","Url":"https://github.com/dotnet/machinelearning/pull/4531","RelatedDescription":"Closed or merged PR \"Disable CS0649 in OnnxConversionTest\" (#4531)"},{"Id":"534290511","IsPullRequest":true,"CreatedAt":"2019-12-08T04:06:38","Actor":"sharwell","Number":"4530","RawContent":null,"Title":"Make local functions static where applicable","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4530","RelatedDescription":"Closed or merged PR \"Make local functions static where applicable\" (#4530)"},{"Id":"534294197","IsPullRequest":true,"CreatedAt":"2019-12-08T01:52:54","Actor":"sharwell","Number":"4535","RawContent":null,"Title":"Prevent exceptions from escaping FileSystemWatcher events","State":"closed","Body":"Exceptions in the handler of FileSystemWatcher events will terminate the process. This pull request updates the event handler to use a try/catch block that logs the error instead of crashing the process.\r\n\r\nThis fixes one known cause of test process failures.","Url":"https://github.com/dotnet/machinelearning/pull/4535","RelatedDescription":"Closed or merged PR \"Prevent exceptions from escaping FileSystemWatcher events\" (#4535)"},{"Id":"534340364","IsPullRequest":true,"CreatedAt":"2019-12-07T20:19:39","Actor":"sharwell","Number":"4540","RawContent":null,"Title":"Increase the code coverage run timeout","State":"closed","Body":"Most of the code coverage runs are timing out. Increase the timeout to match the value used for non-code-coverage builds.","Url":"https://github.com/dotnet/machinelearning/pull/4540","RelatedDescription":"Closed or merged PR \"Increase the code coverage run timeout\" (#4540)"},{"Id":"534432183","IsPullRequest":false,"CreatedAt":"2019-12-07T18:00:07","Actor":"CBrauer","Number":"4542","RawContent":null,"Title":"Format error in GetFormattedConfusionTable\"","State":"open","Body":"Hey,\r\n\r\nI'm trying to print a confusion matrix on a binary classification model using:\r\n\r\n`Console.WriteLine(\"Confusion Matrix:\\n{0}\", metrics.ConfusionMatrix.GetFormattedConfusionTable());\r\n`\r\n\r\nI get:\r\n\r\n![image](https://user-images.githubusercontent.com/1317234/70378656-e3f8f380-18d7-11ea-8e96-e96fea095059.png)\r\n\r\nShouldn‚Äôt there be a comma here instead of a space?\r\n\r\nCharles","Url":"https://github.com/dotnet/machinelearning/issues/4542","RelatedDescription":"Open issue \"Format error in GetFormattedConfusionTable\"\" (#4542)"},{"Id":"534366723","IsPullRequest":false,"CreatedAt":"2019-12-07T07:17:51","Actor":"willvelida","Number":"4541","RawContent":null,"Title":"InvalidDataException: End of Central Directory record could not be found. Error when loading custom trained model from Azure Blob Storage in ASP.NET Core Web API ","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nI have trained a regression model and I have uploaded it to a container in Blob Storage. This is the method that I use to upload the model to blob storage:\r\n\r\n`public async Task TrainAndUploadModelAsync(MLContext mlContext, string dataPath, CloudBlobContainer container)\r\n{\r\nIDataView dataView = mlContext.Data.LoadFromTextFile(dataPath, hasHeader: true, separatorChar: ',');\r\n\r\n        var pipeline = mlContext.Transforms.CopyColumns(\"Label\", \"FareAmount\")\r\n            .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"VendorIdEncoded\", \"VendorId\"))\r\n            .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"RateCodeEncoded\", \"RateCode\"))\r\n            .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"PaymentTypeEncoded\", \"PaymentType\"))\r\n            .Append(mlContext.Transforms.Concatenate(\"Features\", \"VendorIdEncoded\", \"RateCodeEncoded\", \"PassengerCount\", \"TripTime\", \"TripDistance\", \"PaymentTypeEncoded\"))\r\n            .Append(mlContext.Regression.Trainers.FastTree());\r\n\r\n        var model = pipeline.Fit(dataView);\r\n\r\n        using (var stream = new MemoryStream())\r\n        {\r\n            mlContext.Model.Save(model, dataView.Schema, stream);\r\n            stream.Position = 0;\r\n            await _azureStorageHelpers.UploadBlobToStorage(container, \"Model.zip\", stream);\r\n        }\r\n    }`\r\nNow I'm trying to consume that model via a ASP.NET Core Web API like so:\r\n\r\nservices.AddPredictionEnginePool<TaxiTrip, TaxiTripFarePrediction>() .FromUri( modelName: \"TaxiTripFarePredictionModel\", uri: \"https://velidastorage.blob.core.windows.net/mlmodels/model.zip\", period: TimeSpan.FromSeconds(15));\r\n\r\nThen I'm calling a POST Method to make a prediction on the following JSON payload\r\n\r\n{ \"VendorId\": \"VTS\", \"RateCode\": \"1\", \"PassengerCount\": 1, \"TripTime\": 1140, \"TripDistance\": 3.75, \"PaymentType\": \"CRD\", \"FareAmount\": 0 }\r\n\r\nAnd the POST Method:\r\n\r\n`[HttpPost]\r\npublic ActionResult Post([FromBody] TaxiTrip input)\r\n{\r\nif (!ModelState.IsValid)\r\n{\r\nreturn BadRequest();\r\n}\r\n\r\n        TaxiTripFarePrediction prediction = _predictionEnginePool.Predict(modelName: \"TaxiTripFarePredictionModel\", example: input);\r\n\r\n        string predictedFareAmount = prediction.FareAmount.ToString();\r\n\r\n        return Ok(predictedFareAmount);\r\n    }`\r\n\r\n\r\n- **What happened?**\r\n\r\nHowever, when I call the PredictionEnginePool.Predict() method, I get the following error:\r\n\r\nSystem.FormatException: 'Failed to open a zip archive'. Inner Exception InvalidDataException: End of Central Directory record could not be found.\r\n\r\n- **What did you expect?**\r\n\r\nExpected the model to be consumed to make a prediction\r\n\r\nI'm not sure where I am going wrong here. I'm wondering whether or not the model has been uploaded correctly, or whether the Web API is having difficulty downloading the blob.\r\n\r\n\r\n### Source code / logs\r\n\r\nSource code for API and Model Trainer can be found here\r\n\r\nhttps://github.com/willvelida/PricePredictor","Url":"https://github.com/dotnet/machinelearning/issues/4541","RelatedDescription":"Open issue \"InvalidDataException: End of Central Directory record could not be found. Error when loading custom trained model from Azure Blob Storage in ASP.NET Core Web API \" (#4541)"},{"Id":"534332024","IsPullRequest":true,"CreatedAt":"2019-12-07T01:14:11","Actor":"sharwell","Number":"4539","RawContent":null,"Title":"Create SafeBoosterHandle and SafeDataSetHandle","State":"open","Body":"These safe handles were created based on the crash data in https://dev.azure.com/dnceng/public/_build/results?buildId=449745&view=logs.","Url":"https://github.com/dotnet/machinelearning/pull/4539","RelatedDescription":"Open PR \"Create SafeBoosterHandle and SafeDataSetHandle\" (#4539)"},{"Id":"534314921","IsPullRequest":true,"CreatedAt":"2019-12-07T00:02:01","Actor":"sharwell","Number":"4538","RawContent":null,"Title":"WIP Convert LdaEngine to a SafeHandle","State":"open","Body":"This pull request follows the test failure observed in https://dev.azure.com/dnceng/public/_build/results?buildId=449759&view=ms.vss-test-web.build-test-results-tab&runId=14347330&resultId=100770&paneView=debug. Converting this object to a SafeHandle has two primary advantages:\r\n\r\n1. The object will not be disposed while there is an ongoing native call\r\n2. Misuse of the object by trying to pass an invalid instance to a native call will throw an exception at the point of the call","Url":"https://github.com/dotnet/machinelearning/pull/4538","RelatedDescription":"Open PR \"WIP Convert LdaEngine to a SafeHandle\" (#4538)"},{"Id":"534297498","IsPullRequest":true,"CreatedAt":"2019-12-06T22:59:12","Actor":"sharwell","Number":"4536","RawContent":null,"Title":"Update Microsoft.Extensions.* to 3.0.1","State":"open","Body":"The 3.0 release includes a fix to cases where `ChangeToken.OnChange` would not unregister callbacks even when disposed.\r\n\r\nSee aspnet/Extensions#558, aspnet/Extensions#869","Url":"https://github.com/dotnet/machinelearning/pull/4536","RelatedDescription":"Open PR \"Update Microsoft.Extensions.* to 3.0.1\" (#4536)"},{"Id":"533958371","IsPullRequest":false,"CreatedAt":"2019-12-06T12:57:03","Actor":"thomasrosdahl","Number":"4528","RawContent":null,"Title":"PredictionEnginePool.GetPredictionEngine is not thread safe","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: Azure Functions Runtime 2.7.1948\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nInvoked `PredictionEnginePool.Predict(\"MyModelName\", example)` from multiple threads.\r\n\r\n- **What happened?**\r\n`System.ArgumentException: 'An item with the same key has already been added. Key: MyModelName'`\r\n\r\n- **What did you expect?**\r\nMethod is thread safe so that multiple named pools cannot be created simultaneously.\r\n\r\n### Source code / logs\r\n\r\n   at System.ThrowHelper.ThrowAddingDuplicateWithKeyArgumentException[T](T key)\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at Microsoft.Extensions.ML.PredictionEnginePool`2.GetPredictionEngine(String modelName)\r\n   at Microsoft.Extensions.ML.PredictionEnginePoolExtensions.Predict[TData,TPrediction](PredictionEnginePool`2 predictionEnginePool, String modelName, TData example)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4528","RelatedDescription":"Open issue \"PredictionEnginePool.GetPredictionEngine is not thread safe\" (#4528)"},{"Id":"533787183","IsPullRequest":false,"CreatedAt":"2019-12-06T07:06:22","Actor":"rauhs","Number":"4527","RawContent":null,"Title":"Missing C# doc string for ChnageModelThreshold","State":"open","Body":"Linky:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/3f98485e887177f2082f027c22f46fd64ebbe246/src/Microsoft.ML.Data/TrainCatalog.cs#L261-L267","Url":"https://github.com/dotnet/machinelearning/issues/4527","RelatedDescription":"Open issue \"Missing C# doc string for ChnageModelThreshold\" (#4527)"},{"Id":"533750579","IsPullRequest":true,"CreatedAt":"2019-12-06T05:13:16","Actor":"frank-dong-ms","Number":"4526","RawContent":null,"Title":"add more log for SsaForecast test","State":"open","Body":"1. add more log for SsaForecast test \r\n2. make TimeSeries test class inherent from BaseTestBaseline for logging\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4526","RelatedDescription":"Open PR \"add more log for SsaForecast test\" (#4526)"},{"Id":"533616068","IsPullRequest":false,"CreatedAt":"2019-12-05T21:43:49","Actor":"natke","Number":"4525","RawContent":null,"Title":"Image links broken","State":"open","Body":"There are two broken image links on this page. One for each metric description.\n\n---\n#### Document Details\n\n‚ö† *Do not edit this section. It is required for docs.microsoft.com ‚ûü GitHub issue linking.*\n\n* ID: c1784ca5-56a4-75ea-ae35-ad29872348cf\n* Version Independent ID: 2084e039-fcb3-61b4-08ae-29f509b8cb30\n* Content: [RankingMetrics Class (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.rankingmetrics?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML.Data/RankingMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/RankingMetrics.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4525","RelatedDescription":"Open issue \"Image links broken\" (#4525)"},{"Id":"533513959","IsPullRequest":false,"CreatedAt":"2019-12-05T18:15:31","Actor":"huy302","Number":"4524","RawContent":null,"Title":"Model fit in Parallel.For is slower than For","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10 64\r\n- **.NET Version (eg., dotnet --info)**: 4.6.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI'm trying to tune hyperparamater and see if I can implement grid search myself. In order to do that, I would like to fit the model in multiple threads by using Parallel.For\r\n\r\n- **What happened?**\r\nHowever, I realized that fitting the model multiple times using Parallel.For takes much longer than a single threaded for loop. In a for loop. my CPU utilization is at around 30% all the time, while using Parallel.For, it spikes to 100% at first, then drops down to 6% for quite some time, then jumps back to 30% and finishes. Am I not supposed to fit in parallel? If that is the case then what is the best way to do grid search?\r\n\r\n### Source code / logs\r\n\r\nSingle threaded for - takes 20 seconds\r\n\r\n```\r\nfor (var i = 0; i < 100; i++) {\r\n    var pipeline = CreatePipeline();\r\n    pipeline.Fit(dataView);\r\n}\r\n```\r\n\r\nParallel.For - takes 56 seconds\r\n\r\n```\r\nParallel.For(0, 100, i => {\r\n    var pipeline = CreatePipeline();\r\n    pipeline.Fit(dataView);\r\n});\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4524","RelatedDescription":"Open issue \"Model fit in Parallel.For is slower than For\" (#4524)"},{"Id":"533292844","IsPullRequest":true,"CreatedAt":"2019-12-05T11:28:53","Actor":"yaeldekel","Number":"4523","RawContent":null,"Title":"Add aka.ms aliases for files downloaded from Azure blobs","State":"open","Body":"Fixes #4445 .","Url":"https://github.com/dotnet/machinelearning/pull/4523","RelatedDescription":"Open PR \"Add aka.ms aliases for files downloaded from Azure blobs\" (#4523)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-09T05:30:41.9817037Z","RunDurationInMilliseconds":646}