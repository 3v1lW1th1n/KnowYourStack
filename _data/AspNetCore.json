{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains a number of changes (including API changes) and improvements. Notable Changes The JSON hub protocol now uses camel casing... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core Alpha 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T01:56:39+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T23:00:07+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T17:02:15+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T19:45:58+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6693261982","Type":"IssuesEvent","CreatedAt":"2017-10-09T19:37:10","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2227","RelatedDescription":"Closed issue \"ComponentRegistrationException:\" (#2227) at aspnet/Home","RelatedBody":" I use castle  Ioc  in my application  ,like [code example ](https://gist.github.com/cwe1ss/050a531e2711f5b62ab0)\r\n\r\nbut An error occurred while starting the application.\r\n\r\nComponentRegistrationException: Component Microsoft.Extensions.Options.OptionsManager`1 could not be registered. There is already a component with that name. Did you want to modify the existing component instead? If not, make sure you specify a unique name.\r\nCastle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem.Register(IHandler handler)\r\n\r\nComponentRegistrationException: Component Microsoft.Extensions.Options.OptionsManager`1 could not be registered. There is already a component with that name. Did you want to modify the existing component instead? If not, make sure you specify a unique name.\r\nCastle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem.Register(IHandler handler)\r\nCastle.MicroKernel.DefaultKernel.AddCustomComponent(ComponentModel model)\r\nCastle.MicroKernel.Registration.ComponentRegistration.Castle.MicroKernel.Registration.IRegistration.Register(IKernelInternal kernel)\r\nCastle.MicroKernel.DefaultKernel.Register(IRegistration[] registrations)\r\nCastle.Windsor.WindsorContainer.Register(IRegistration[] registrations)\r\nBlueBlog.Utility.WindsorRegistration.Register(IWindsorContainer container, IEnumerable<ServiceDescriptor> descriptors) in WindsorRegistration.cs\r\n+\r\n                    container.Register(\r\nBlueBlog.Utility.WindsorRegistration.Populate(IocContainer container, IEnumerable<ServiceDescriptor> descriptors) in WindsorRegistration.cs\r\n+\r\n            Register(container.Container, descriptors);\r\nBlueBlog.Startup.ConfigureServices(IServiceCollection services) in Startup.cs\r\n+\r\n            container.Populate(services);\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection services)\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n"},{"Id":"6691883228","Type":"IssuesEvent","CreatedAt":"2017-10-09T14:35:48","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2237","RelatedDescription":"Closed issue \"The 'Access-Control-Allow-Origin' header contains multiple values '*, *', but only one is allowed\" (#2237) at aspnet/Home","RelatedBody":"I created an angular 1 app which consumes an RESTfull web service (asp net core 1.1).\r\n\r\nI have enabled CORS with the following settings:\r\n\r\n`Startup.cs`\r\n```\r\n public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\t    services.AddCors(options => options.AddPolicy(\"AllowAll\", p => p.AllowAnyOrigin().AllowAnyMethod().WithHeaders(\"accept\", \"content-type\", \"authorization\")));\t\t\r\n\r\n            var mvc = services.AddMvc();\r\n\r\n            mvc.AddFeatureFolders();\r\n\t}\r\n\r\n public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n            app.UseForwardedHeaders(new ForwardedHeadersOptions\r\n            {\r\n                ForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto\r\n            });\r\n\r\n            loggerFactory.AddConsole(Configuration.GetSection(\"Logging\")).AddDebug();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseBrowserLink();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/home/error\");\r\n            }\r\n\r\n            app.UseCors(\"AllowAll\");\r\n\t  }\r\n```\r\n`MetaController.cs`\r\n```\r\n    [Route(\"[controller]/v1/[action]\")]\r\n    [Produces(\"application/json\")]\r\n    [EnableCors(\"AllowAll\")]\r\n    public class MetaController : Controller\r\n    {   }\r\n```\r\nThe angular http method call\r\n```\r\n $http({\r\n                    method: 'POST',\r\n                    url: 'https://www.mydomain.com/api/v1/meta/',\r\n                    data: data,\r\n                    headers:\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Basic mytoken'\r\n                    }\r\n                })\r\n```\r\nAny thoughts?"},{"Id":"6691852095","Type":"IssuesEvent","CreatedAt":"2017-10-09T14:30:02","Actor":"helderboone","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2237","RelatedDescription":"Opened issue \"The 'Access-Control-Allow-Origin' header contains multiple values '*, *', but only one is allowed\" (#2237) at aspnet/Home","RelatedBody":"I created an angular 1 app which consumes an RESTfull web service (asp net core 1.1).\r\n\r\nI have enabled CORS with the following settings:\r\n\r\n`Startup.cs`\r\n```\r\n public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\t    services.AddCors(options => options.AddPolicy(\"AllowAll\", p => p.AllowAnyOrigin().AllowAnyMethod().WithHeaders(\"accept\", \"content-type\", \"authorization\")));\t\t\r\n\r\n            var mvc = services.AddMvc();\r\n\r\n            mvc.AddFeatureFolders();\r\n\t}\r\n\r\n public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n            app.UseForwardedHeaders(new ForwardedHeadersOptions\r\n            {\r\n                ForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto\r\n            });\r\n\r\n            loggerFactory.AddConsole(Configuration.GetSection(\"Logging\")).AddDebug();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseBrowserLink();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/home/error\");\r\n            }\r\n\r\n            app.UseCors(\"AllowAll\");\r\n\t  }\r\n```\r\n`MetaController.cs`\r\n```\r\n    [Route(\"[controller]/v1/[action]\")]\r\n    [Produces(\"application/json\")]\r\n    [EnableCors(\"AllowAll\")]\r\n    public class MetaController : Controller\r\n    {   }\r\n```\r\nThe angular http method call\r\n```\r\n $http({\r\n                    method: 'POST',\r\n                    url: 'https://www.mydomain.com/api/v1/meta/',\r\n                    data: data,\r\n                    headers:\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Basic mytoken'\r\n                    }\r\n                })\r\n```\r\nAny thoughts?"},{"Id":"6689400871","Type":"IssuesEvent","CreatedAt":"2017-10-09T01:43:22","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2236","RelatedDescription":"Closed issue \"ANCM should be available as a standalone installer\" (#2236) at aspnet/Home","RelatedBody":"@jberezanski asked for this.\r\n\r\nFiling this to track the only open issue here: https://github.com/dotnet/core/issues/848\r\n\r\n"},{"Id":"6689349033","Type":"IssuesEvent","CreatedAt":"2017-10-09T01:09:22","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2236","RelatedDescription":"Opened issue \"ANCM should be available as a standalone installer\" (#2236) at aspnet/Home","RelatedBody":"@jberezanski asked for this.\r\n\r\nFiling this to track the only open issue here: https://github.com/dotnet/core/issues/848\r\n\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6699939610","Type":"PullRequestEvent","CreatedAt":"2017-10-11T01:16:12","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1006","RelatedDescription":"Opened pull request \"OnReceived\" (#1006) at aspnet/SignalR","RelatedBody":"Removed the Receive event in favor of an OnReceived method as detailed in https://github.com/aspnet/SignalR/issues/900\r\n\r\nRoast Me"},{"Id":"6699710260","Type":"IssuesEvent","CreatedAt":"2017-10-10T23:43:19","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/813","RelatedDescription":"Closed issue \"Register default functions for observers 'complete', 'error', and 'next' functions\" (#813) at aspnet/SignalR","RelatedBody":"We should register default functions for `complete`, `error`, and `next` in streaming calls for Typescript.\r\n\r\nIf the user doesn't define a method like `error` then when an error occurs we attempt to call a non-existent function. We should instead have a default function that logs a warning if the user didn't provide a function.\r\n\r\nhttps://github.com/aspnet/SignalR/blob/93b6bcc523811e884403d580507893d67d68e2bc/client-ts/Microsoft.AspNetCore.SignalR.Client.TS/Observable.ts#L32-L33"},{"Id":"6699709083","Type":"PullRequestEvent","CreatedAt":"2017-10-10T23:42:51","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1000","RelatedDescription":"Merged pull request \"Optional error and complete functions for observables\" (#1000) at aspnet/SignalR","RelatedBody":"#813"},{"Id":"6698762531","Type":"IssuesEvent","CreatedAt":"2017-10-10T19:36:43","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1005","RelatedDescription":"Opened issue \"NullReferenceException when logging\" (#1005) at aspnet/SignalR","RelatedBody":"```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Object.GetType()\r\n   at Microsoft.AspNetCore.SignalR.Client.Internal.SignalRClientLoggerExtensions.<>c.<IssueInvocation>b__33_0(Object a)\r\n   at System.Linq.Enumerable.SelectArrayIterator`2.MoveNext()\r\n   at System.String.Join(String separator, IEnumerable`1 values)\r\n   at Microsoft.AspNetCore.SignalR.Client.Internal.SignalRClientLoggerExtensions.IssueInvocation(ILogger logger, String invocationId, String returnType, String methodName, Object[] args)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.InvokeCore(String methodName, InvocationRequest irq, Object[] args, Boolean nonBlocking)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.SendAsyncCore(String methodName, Object[] args, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<SendAsync>d__28.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at ChatClient.ChatClient.<SendMessage>d__6.MoveNext() in C:\\source\\SignalR-Samples\\ChatSample\\ChatClient\\ChatClient.cs:line 56\r\n```\r\napparently [here](https://github.com/aspnet/SignalR/blob/786980bc3fc806c0c457d4500f209d52dba4ea09/src/Microsoft.AspNetCore.SignalR.Client.Core/Internal/SignalRClientLoggerExtensions.cs#L125).\r\n\r\nThis might be some kind of an internal race. The code used to send messages looks like this:\r\n```\r\n            try\r\n            {\r\n                await _hubConnection.SendAsync(\"Send\", _name, message);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine($\"Message not sent due to {ex.Message}\");\r\n            }\r\n```\r\nand it works just fine most of the time. But sometimes it throws. I hit it when trying to implement reconnects:\r\n\r\n```\r\nMessage not sent due to Connection has been terminated.\r\n> trce: Microsoft.AspNetCore.SignalR.Client.InvocationRequest.NonStreaming[0]\r\n      Invocation 22 created.\r\nfail: Microsoft.AspNetCore.SignalR.Client.HubConnection[19]\r\n      Invoke for Invocation '22' was called after the connection was terminated.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[2]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Starting transport 'LongPollingTransport' with Url: http://localhost:5000/chat?id=95844461-ca7f-4395-ae8d-44b5238fce9f.\r\ninfo: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[0]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Starting transport. Transfer mode: Text.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[2]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Starting receive loop.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[6]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Starting the send loop.\r\ntrce: Microsoft.AspNetCore.Sockets.Client.HttpConnection[10]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Beginning receive loop.\r\ninfo: Microsoft.AspNetCore.SignalR.Client.HubConnection[22]\r\n      Using HubProtocol 'json'.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[17]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Sending message.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[3]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Raising Connected event.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[9]\r\n      10/10/2017 12:28:23: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Sending 1 message(s) to the server using url: http://localhost:5000/chat?id=95844461-ca7f-4395-ae8d-44b5238fce9f.\r\nReconnected\r\ndbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[10]\r\n      10/10/2017 12:28:24: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Message(s) sent successfully.\r\nasd\r\ntrce: Microsoft.AspNetCore.SignalR.Client.InvocationRequest.NonStreaming[0]\r\n      Invocation 1 created.\r\n> trce: Microsoft.AspNetCore.SignalR.Client.HubConnection[0]\r\n      Preparing non-blocking invocation '1' of 'Send', with 2 argument(s).\r\ntrce: Microsoft.AspNetCore.SignalR.Client.HubConnection[3]\r\n      Issuing Invocation '1': System.Void Send(System.String, System.String).\r\ndbug: Microsoft.AspNetCore.SignalR.Client.HubConnection[4]\r\n      Sending Invocation '1'.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[17]\r\n      10/10/2017 12:28:26: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Sending message.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[9]\r\n      10/10/2017 12:28:26: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Sending 1 message(s) to the server using url: http://localhost:5000/chat?id=95844461-ca7f-4395-ae8d-44b5238fce9f.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[10]\r\n      10/10/2017 12:28:26: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Message(s) sent successfully.\r\ndbug: Microsoft.AspNetCore.SignalR.Client.HubConnection[5]\r\n      Sending Invocation '1' completed.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[14]\r\n      10/10/2017 12:28:26: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Received messages from the server.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[12]\r\n      10/10/2017 12:28:26: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Scheduling raising Received event.\r\ntest: asd\r\n> dbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[13]\r\n      10/10/2017 12:28:26: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Raising Received event.\r\ntrce: Microsoft.AspNetCore.SignalR.Client.HubConnection[7]\r\n      Received Invocation '1': broadcastMessage(System.String, System.String).\r\ntest: sdfa\r\n> dbug: Microsoft.AspNetCore.Sockets.Client.LongPollingTransport[14]\r\n      10/10/2017 12:29:08: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Received messages from the server.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[12]\r\n      10/10/2017 12:29:08: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Scheduling raising Received event.\r\ndbug: Microsoft.AspNetCore.Sockets.Client.HttpConnection[13]\r\n      10/10/2017 12:29:08: Connection Id 95844461-ca7f-4395-ae8d-44b5238fce9f: Raising Received event.\r\ntrce: Microsoft.AspNetCore.SignalR.Client.HubConnection[7]\r\n      Received Invocation '2': broadcastMessage(System.String, System.String).\r\ntrce: Microsoft.AspNetCore.SignalR.Client.InvocationRequest.NonStreaming[0]\r\n      Invocation 2 created.\r\nMessage not sent due to Object reference not set to an instance of an object.\r\n```"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6700082566","Type":"PullRequestEvent","CreatedAt":"2017-10-11T02:15:13","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6936","RelatedDescription":"Opened pull request \"[Design] Add 'profiles' for ApiDescription\" (#6936) at aspnet/Mvc","RelatedBody":"This PR adds infrastructure for 'profiles' that can be matched against\r\nApiDescriptions. Once a profile matches an action/description, it can\r\nmodify the description to fit the application's common practices and\r\nconventions.\r\n\r\nThe idea is that each 'profile' corresponds to a kind of logical\r\noperation (look at the examples) like 'get-by-id' - and will update the\r\nApiDescription to include the kind of things this operation would\r\nnormally need to declare.\r\n\r\nThis should make it easier to customize if you have your own set of\r\nopinionated behaviors, such as using 202-accepted for 'create' operations.\r\n\r\nThis is a design PR, thus I'm looking for feedback on the design and\r\nlayering of the approach. (yes, I know about the functional test\r\nfailures, I haven't updated those yet)."},{"Id":"6698710459","Type":"IssuesEvent","CreatedAt":"2017-10-10T19:25:49","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/756","RelatedDescription":"Closed issue \"Add functional tests for `ApplicationModel`\" (#756) at aspnet/Mvc","RelatedBody":"We need to add tests to fill gaps in `ApplicationModel` functional test coverage\r\n\r\nMissing Features (suggestions for scenario in parens):\r\n- [x] Dynamically cloning/creating controllers\r\n- [x] Dynamically cloning/creating actions\r\n- [x] Manipulating filters (implement filter override)\r\n- [x] Manipulating attribute routes action and controller (auto-generate route name)\r\n- [x] Manipulating action constraints\r\n- [x] Manipulating route-data constraints (auto-area-mapping)\r\n- [x] Manipulating parameter binder-metadata (auto-map a type to `[FromBody]`)\r\n- [x] ActionName/ControllerName (change names, show it affects the route URL with conventional routing)\r\n\r\nUsing MvcOptions to add a convention to influence some of the above (copied from #1623). We already have some tests that use the attributes.\r\n\r\nAdding a sample that is a `[MultiAreaAttribute(...)]` will cover 1 and  6.\r\nManipulating filters is covered by new API (KodKod) features so that takes care of 3\r\nManipulating attribute routes has an existing sample (namespace routing) so that takes care of 4\r\nWebhooks covers number 5\r\nManipulating parameter sources is covered by new API (KodKod) features, so that covers 7\r\n"},{"Id":"6698576230","Type":"IssuesEvent","CreatedAt":"2017-10-10T19:00:00","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6935","RelatedDescription":"Opened issue \"Make IParameterModelConvention execute for page handler parameters\" (#6935) at aspnet/Mvc","RelatedBody":"We have the metadata required to run it, we just don't execute these today. We could consider executing conventions after `IPageApplicationModelConvention` are executed."},{"Id":"6698432669","Type":"PullRequestEvent","CreatedAt":"2017-10-10T18:24:04","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6932","RelatedDescription":"Merged pull request \"Add tests to ApplicationModelTest\" (#6932) at aspnet/Mvc","RelatedBody":"Addresses #756 \r\n\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6698722190","Type":"PullRequestEvent","CreatedAt":"2017-10-10T19:27:45","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1449","RelatedDescription":"Merged pull request \"Use AddHttpContextAccessor\" (#1449) at aspnet/Identity","RelatedBody":"From aspnet/HttpAbstractions#947 💄"},{"Id":"6698717674","Type":"PullRequestEvent","CreatedAt":"2017-10-10T19:27:00","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1455","RelatedDescription":"Closed pull request \"Fixed irritating typo in UserManager-docs\" (#1455) at aspnet/Identity","RelatedBody":"Second try (without a typo in a typo-fix 😄)"},{"Id":"6698710467","Type":"PullRequestEvent","CreatedAt":"2017-10-10T19:25:49","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1446","RelatedDescription":"Closed pull request \"Recognize non-english character casing in PasswordValidator (#1445)\" (#1446) at aspnet/Identity","RelatedBody":""},{"Id":"6698703762","Type":"PullRequestEvent","CreatedAt":"2017-10-10T19:24:40","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1432","RelatedDescription":"Merged pull request \"XML doc comments changes\" (#1432) at aspnet/Identity","RelatedBody":"- Move defaults from remarks to summary for better intellisense.\r\n- Add summary to describe LockoutOptions AllowedForNewUsers.\r\n- Added defaults to xml docs where missing.\r\n\r\nFixes #1426 "},{"Id":"6698699016","Type":"PullRequestEvent","CreatedAt":"2017-10-10T19:23:55","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1391","RelatedDescription":"Merged pull request \"Added RavenDB identity provider.\" (#1391) at aspnet/Identity","RelatedBody":""},{"Id":"6698693297","Type":"PullRequestEvent","CreatedAt":"2017-10-10T19:23:02","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1371","RelatedDescription":"Merged pull request \"Fix ResetPasswordAsync documentation\" (#1371) at aspnet/Identity","RelatedBody":"This seems like it should be the other way around."},{"Id":"6697279459","Type":"IssuesEvent","CreatedAt":"2017-10-10T14:40:32","Actor":"popsovy","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1458","RelatedDescription":"Opened issue \"Multiple calls to userManager result in Disposed error\" (#1458) at aspnet/Identity","RelatedBody":"I have this code that's called from Startup.Configure:\r\n\r\n`public async void Initialize()\r\n        {\r\n            appDbContext.Database.EnsureCreated();\r\n\r\n            var adminGroupName = \"Administrator\";\r\n\r\n            if (appDbContext.Roles.All(i => i.Name != adminGroupName))\r\n            {\r\n                await roleManager.CreateAsync(new IdentityRole(adminGroupName));\r\n            };\r\n            var role = appDbContext.Roles.First(i => i.Name == adminGroupName);\r\n\r\n            if (appDbContext.Users.All(i => i.UserName != adminSettings.Username))\r\n            {\r\n                await userManager.CreateAsync(new ApplicationUser { UserName = adminSettings.Username,\r\n                                                                    Email = adminSettings.Username,\r\n                                                                    FirstName = adminSettings.FirstName,\r\n                                                                    LastName = adminSettings.LastName,\r\n                                                                    EmailConfirmed = true }, adminSettings.Password);\r\n            }\r\n            var adminUser = appDbContext.Users.First(i => i.UserName == adminSettings.Username);\r\n            \r\n            if (!appDbContext.UserRoles.Any(i => i.RoleId == role.Id && i.UserId == adminUser.Id))\r\n            {\r\n                await userManager.AddToRoleAsync(adminUser, role.Name);\r\n            }\r\n        }`\r\n\r\nAt random, I get the Accessing Disposed Exception from userManager.CreateAsync or userManager.AddToRoleAsync\r\n\r\nThe class where Initialize is declared is registered with AddScoped in Startup.ConfiguredServices and is passed as an argument to Startup.Configure.\r\n\r\nWhat am I doing wrong that I am getting the Disposed exceptions?\r\n\r\nThank you."},{"Id":"6696387696","Type":"IssuesEvent","CreatedAt":"2017-10-10T11:45:46","Actor":"ActionJ4ckson","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1457","RelatedDescription":"Opened issue \"Default DataProtectionProvider\" (#1457) at aspnet/Identity","RelatedBody":"I am working on an application built on MVC 5, .Net 4.5, Identity 2.2.1 using Visual Studio 2017. \r\n\r\nAssume that I have started with a fresh application and not altered the default Startup.Auth neither have changed any configuration for ApplicationUserManager.DataproctectionProvider. When I debug the application, in ApplicationUserManager.Create the default value of `options.DataProtectionProvider` is Microsoft.Owin.Host.SystemWeb.DataProtection.MachineKeyDataProtectionProvider. \r\n\r\nBut the articles I have been following since beginning says that by default it will pick DpapiDataProtectionProvider. What I am missing here?\r\n\r\nSince my app will be going on Azure I am really concerned if should I explicitly implement my own MachineKeyDataProtectionProvider? \r\n\r\nP.S - I hate to raise it as an issue, please direct me to the right forum for asking queries"},{"Id":"6693985064","Type":"IssuesEvent","CreatedAt":"2017-10-09T22:52:53","Actor":"pakrym","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1456","RelatedDescription":"Opened issue \"KeyVault extension should provide an overload that takes KeyVaultClient and doesn't require IIdentityBuilder\" (#1456) at aspnet/Identity","RelatedBody":"Required for:\r\nhttps://github.com/aspnet/specs/issues/90\r\n\r\n1. We don't have `TUser, TRole` in light-up so there is no way to call `AddIdentity`.\r\n2. When using MSI (https://docs.microsoft.com/en-us/azure/active-directory/msi-overview) we get auth callback for  `KeyVaultClient` instead of ClientSecret/ClientID\r\n\r\n/cc @javiercn "},{"Id":"6693300867","Type":"PullRequestEvent","CreatedAt":"2017-10-09T19:46:53","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1438","RelatedDescription":"Merged pull request \"Update bootstrappers\" (#1438) at aspnet/Identity","RelatedBody":null}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6699937980","Type":"PullRequestEvent","CreatedAt":"2017-10-11T01:15:32","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2108","RelatedDescription":"Opened pull request \"HTTP/2: add exception error messages\" (#2108) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6699556438","Type":"PullRequestEvent","CreatedAt":"2017-10-10T22:49:12","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2107","RelatedDescription":"Opened pull request \"HTTP/2: support trailers\" (#2107) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6698919208","Type":"PullRequestEvent","CreatedAt":"2017-10-10T20:12:35","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2098","RelatedDescription":"Merged pull request \"HTTP/2: validate request headers prior to starting new stream\" (#2098) at aspnet/KestrelHttpServer","RelatedBody":"Addresses the error cases described in [Section 8.1.2](http://httpwg.org/specs/rfc7540.html#rfc.section.8.1.2).\r\n\r\nThe error cases are:\r\n\r\n* Uppercase characters in header name\r\n* Pseudo-header fields (header names starting with ':') appearing after regular headers (i.e. they should appear first in a header block)\r\n* Missing mandatory request pseudo-header fields (:method, :path and :scheme - :authority is optional)\r\n* Response pseudo-header field (:status) in request headers\r\n* Duplicate pseudo-header fields\r\n* Connection-specific headers (`Connection`, or `TE` with value different than `trailers`)"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6699746940","Type":"IssuesEvent","CreatedAt":"2017-10-10T23:57:32","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1718","RelatedDescription":"Opened issue \"Harvest editor settings from the project and trigger project changes accordingly.\" (#1718) at aspnet/Razor","RelatedBody":"Today the editor settings are hard coded today. We need to enable the ability to read from the editor settings directly or indirectly and then trigger project change/updates to force reparses for Razor documents."},{"Id":"6698901838","Type":"IssuesEvent","CreatedAt":"2017-10-10T20:08:36","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1547","RelatedDescription":"Closed issue \"Span nodes are not linked outside of tests.\" (#1547) at aspnet/Razor","RelatedBody":"This means that each `Span`'s Next member is always null."},{"Id":"6698899185","Type":"PullRequestEvent","CreatedAt":"2017-10-10T20:07:58","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1717","RelatedDescription":"Merged pull request \"Link syntax tree Span nodes\" (#1717) at aspnet/Razor","RelatedBody":"#1547 \r\n\r\n@NTaylorMullen \r\n\r\nTurned out to be an easy fix. "},{"Id":"6698234125","Type":"IssuesEvent","CreatedAt":"2017-10-10T17:42:31","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1716","RelatedDescription":"Closed issue \"[ForegroundFact] decorated tests are not run as part of dotnet test (or found in test explorer).\" (#1716) at aspnet/Razor","RelatedBody":""},{"Id":"6698176324","Type":"PullRequestEvent","CreatedAt":"2017-10-10T17:29:45","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1717","RelatedDescription":"Opened pull request \"Link syntax tree Span nodes\" (#1717) at aspnet/Razor","RelatedBody":"#1547 \r\n\r\n@NTaylorMullen \r\n\r\nTurned out to be an easy fix. "},{"Id":"6698100271","Type":"IssuesEvent","CreatedAt":"2017-10-10T17:12:58","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1716","RelatedDescription":"Opened issue \"[ForegroundFact] decorated tests are not run as part of dotnet test (or found in test explorer).\" (#1716) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6698255499","Type":"PullRequestEvent","CreatedAt":"2017-10-10T17:47:03","Actor":"scottsauber","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Opened pull request \"Change Lockout wording of comment\" (#870) at aspnet/Templates","RelatedBody":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want."},{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"},{"Id":"6532477866","Type":"IssuesEvent","CreatedAt":"2017-08-30T23:19:06","Actor":"andyg8180","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Opened issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"},{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"},{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":6,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-11T05:30:08.8497256Z","RunDurationInMilliseconds":7615}