{"Data":{"Blog":{"FeedItems":[{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel. Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7429945313","Type":"IssuesEvent","CreatedAt":"2018-03-24T19:33:58","Actor":"baseless","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2998","RelatedDescription":"Closed issue \"Azure deployment of net core 2.1 (preview1, VS2017 preview2) does not work\" (#2998) at aspnet/Home","RelatedBody":"Deploying net core 2.1 (preview1) as azure appservice do not work properly.\r\nDefault project templates will fail to deploy properly.\r\n\r\n# General\r\n\r\nThe following procedure do not work when tested:\r\n1. Create net core 2.1 preview1 project without authentication (using Visual Studio 2017 15.7.0 preview 2).\r\n2. Deploy through Visual Studio as new Azure AppService.\r\n3. The root url returns the default page `Your App Service app is up and running` and no pages work (returns `The resource you are looking for has been removed, had its name changed, or is temporarily unavailable.`)\r\n\r\n4. If changing the startup (for example comment out `app.UseHsts();` the site starts throwing `HTTP Error 502.5 - Process Failure` error pages which it continues to do even after startup is restored to original state)\r\n\r\nIs deployment of net core 2.1 to azure not yet supported? \r\n"},{"Id":"7429863285","Type":"IssuesEvent","CreatedAt":"2018-03-24T18:43:30","Actor":"stap123","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2999","RelatedDescription":"Opened issue \"Web Publish Upgraded Project to Azure Web App Failing\" (#2999) at aspnet/Home","RelatedBody":"I upgraded my ASP.NET Core web app from version 2.0.1 of packages to the latest (2.0.3). After completing this the site runs as expected locally. However when publishing to my Azure Web App it breaks and I get a 502.5 Process Failure error. I turned on stdout to investigate and the error is:\r\n\r\n```\r\nUnhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'Microsoft.AspNetCore.Hosting.Abstractions, Version=2.0.2.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n   at Web.Program.Main(String[] args)\r\n```\r\n\r\nThis suggests that the issue is that the newly upgraded packages haven't had their DLLs pushed as part of the publish to the Azure Web App. Sure enough if I manually delete the DLL in the Azure App and add the one from my dotnet\\sdk\\nugetfallbackfolder it seems to move onto the next DDL there is an issue with (in my case the Microsoft.AspNetCore.Hosting).\r\n\r\nDoes anyone know why this could be happening? Have I done something wrong or is it a common issue? How can I stop it happening, obviously not an ideal situation?\r\n\r\nObviously I can replace each one manually but it strikes me that there's a likely underlying reason."},{"Id":"7429853970","Type":"IssuesEvent","CreatedAt":"2018-03-24T18:37:47","Actor":"baseless","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2998","RelatedDescription":"Opened issue \"Azure deployment of net core 2.1 (preview1, VS2017 preview2) does not work\" (#2998) at aspnet/Home","RelatedBody":"Deploying net core 2.1 (preview1) as azure appservice do not work properly.\r\n\r\n project results in the default \"Your App Service app is up and running\" page. No pages works, results in \"\". \"HTTP Error 502.5 - Process Failure\".\r\n\r\n# General\r\n\r\nThe following procedure do not work when tested:\r\n1. Create net core 2.1 project without authentication.\r\n2. Deploy through Visual Studio as new Azure AppService.\r\n3. The root url returns the default page `Your App Service app is up and running` and no pages work (returns `The resource you are looking for has been removed, had its name changed, or is temporarily unavailable.`)\r\n\r\n4. If changing the startup (for example comment out `app.UseHsts();` the site starts throwing `HTTP Error 502.5 - Process Failure` error pages which it continues to do even after startup is restored to original state)\r\n\r\nIs deployment of net core 2.1 to azure not yet supported? \r\n"},{"Id":"7429553996","Type":"IssuesEvent","CreatedAt":"2018-03-24T15:37:49","Actor":"marian-margeta","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2997","RelatedDescription":"Opened issue \"DataProtection - encryption with high-protected capi certificate\" (#2997) at aspnet/Home","RelatedBody":"I have a problem with DataProtection when is used together with `ProtectKeysWithCertificate` to protect the data at rest. If I create highProtected certificate with CryptoAPI, e.g. using `New-SelfSignedCertificate` powershell cmdlet\r\n\r\n```\r\nNew-SelfSignedCertificate `\r\n         -Subject localhost `\r\n         -DnsName localhost `\r\n         -FriendlyName \"ASP.NET Data Protection`\r\n         -NotBefore (Get-Date) `\r\n         -NotAfter (Get-Date).AddYears(10) `\r\n         -CertStoreLocation \"cert:CurrentUser\\My\" `\r\n         -KeyAlgorithm RSA `\r\n         -Provider \"Microsoft Enhanced RSA and AES Cryptographic Provider\" `\r\n         -KeyLength 2048 `\r\n         -KeyUsage KeyEncipherment, DataEncipherment `\r\n         -KeyProtection ProtectHigh\r\n```\r\n\r\nthen the certificate is protected with additional password. Windows will ask for it every time the application is started. It shows modal window like that (in Slovak lang):\r\n\r\n![image](https://user-images.githubusercontent.com/6164767/37865531-1f27fa18-2f7e-11e8-8fc1-ef794bfd3d60.png)\r\n\r\nIf I type correct password, everything is good. However, when I type wrong password for the first time, and then correct one, DataProtection generates new master key, whereas the old one is still active (not expired or revoked). The application don't start until the correct password to the cert is given, but it nevertheless uses newly-generated key. Is there any way how to suppress this behavior? If I use method `DisableAutomaticKeyGeneration`, it also disables the key rotation.\r\n\r\nBtw, the log printed to console every time the incorrect password is given:\r\n\r\n```\r\nfail: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[24]\r\n      An exception occurred while processing the key element '<key id=\"bc5319fd-63a4-45f2-b75e-1ef181f6ec19\" version=\"1\" />'.\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException: Access denied\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(SafeNCryptKeyHandle key, Byte[] input, AsymmetricPaddingMode paddingMode, Void* paddingInfo, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(Byte[] data, RSAEncryptionPadding padding, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.Decrypt(Byte[] data, RSAEncryptionPadding padding)\r\n   at System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.DecryptKeyExchange(Byte[] rgbIn)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[] keyData, RSA rsa, Boolean useOAEP)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey encryptedKey)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData encryptedData, String symmetricAlgorithmUri)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlDecryptor.Decrypt(XElement encryptedElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)\r\nwarn: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver[12]\r\n      Key {bc5319fd-63a4-45f2-b75e-1ef181f6ec19} is ineligible to be the default key because its CreateEncryptor method failed.\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException: Access denied\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(SafeNCryptKeyHandle key, Byte[] input, AsymmetricPaddingMode paddingMode, Void* paddingInfo, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(Byte[] data, RSAEncryptionPadding padding, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.Decrypt(Byte[] data, RSAEncryptionPadding padding)\r\n   at System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.DecryptKeyExchange(Byte[] rgbIn)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[] keyData, RSA rsa, Boolean useOAEP)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey encryptedKey)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData encryptedData, String symmetricAlgorithmUri)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlDecryptor.Decrypt(XElement encryptedElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.DeferredKey.<>c__DisplayClass1_0.<GetLazyDescriptorDelegate>b__0()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\n   at System.Lazy`1.CreateValue()\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.get_Descriptor()\r\n   at Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.CreateEncryptor()\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver.CanCreateAuthenticatedEncryptor(IKey key)\r\n```\r\n"},{"Id":"7428251137","Type":"IssuesEvent","CreatedAt":"2018-03-23T23:50:24","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2908","RelatedDescription":"Closed issue \"Routes question\" (#2908) at aspnet/Home","RelatedBody":"Hello, why when i define routes like this:\r\n\r\n```\r\npublic class Startup\r\n\t{\r\n\t\tpublic void ConfigureServices(IServiceCollection services)\r\n\t\t{\r\n\t\t\tservices.AddMvc();\r\n\t\t}\r\n\t\tpublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n\t\t{\r\n\t\t\tif (env.IsDevelopment())\r\n\t\t\t{\r\n\t\t\t\tapp.UseDeveloperExceptionPage();\r\n\t\t\t}\r\n\r\n\t\t\tapp.UseMvc(routes =>\r\n\t\t\t{\r\n\t\t\t\troutes.MapRoute(\r\n\t\t\t\t\tname: null,\r\n\t\t\t\t\ttemplate: \"{category}\",\r\n\t\t\t\t\tdefaults: new { controller = \"Home\", action = \"Index\" }\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\troutes.MapRoute(\r\n\t\t\t\t\tname: null,\r\n\t\t\t\t\ttemplate: \"\",\r\n\t\t\t\t\tdefaults: new { controller = \"Home\", action = \"Index\" }\r\n\t\t\t\t\t);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n```\r\n\r\n\r\n```\r\n\tpublic class HomeController : Controller\r\n\t{\r\n\t\tstatic private int _calls = 0;\r\n\r\n\t\tpublic string Index()\r\n\t\t{\r\n\t\t\treturn $\"{++_calls}\";\r\n\t\t}\r\n\t}\r\n```\r\n\r\nHome.Index() called two times per request?\r\nproject -> https://github.com/Montigomo/AcTest1"},{"Id":"7427042101","Type":"IssuesEvent","CreatedAt":"2018-03-23T18:24:05","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2995","RelatedDescription":"Closed issue \"Localization: using resource files when switching CurrentUICulture ignores the translations\" (#2995) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI have an issue while trying to work with `CurrentUICulture`. Based on a Pluralsight course, I have created a console app which should use resource files to translate an enum into both English and German. \r\n\r\nHowever, even after changing the `CurrentUICulture` to German, the translation is not picked up by my machine. The weird thing is, that the official source files from the course have the same problem - so I guess my machine is at fault here?\r\n\r\nI've made a [repo](https://github.com/maxmantz/CurrentUICultureDemo) with the source files.\r\nUsing dotnet 2.1.100 on Windows 10."},{"Id":"7427035822","Type":"IssuesEvent","CreatedAt":"2018-03-23T18:22:44","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2996","RelatedDescription":"Closed issue \"Porting AppDomain to AssemblyLoadContext issue with ApplicationBase and PrivateBinPath\" (#2996) at aspnet/Home","RelatedBody":"I'm aware that AppDomain is deprecated and replaced partially by AssemblyLoadContext.\r\nBut I'm facing to a new problem that I'm not able to resolve  :\r\n\r\nI have this code in .Net Framework 4.6.2 :\r\n```\r\n            var childDomain = AppDomain.CreateDomain(\"app\", null, new AppDomainSetup() { ApplicationBase = Path.Combine(adminPath, \"bin\"), PrivateBinPath = Path.Combine(adminPath, \"bin\"), LoaderOptimization = LoaderOptimization.SingleDomain });\r\n            AppDomainHelper.RunInAppDomain(childDomain, \"Alcuin.Admin.Configuration.Services\", \"Alcuin.Admin.Configuration.Services.Application.HttpHandlerService\", \"CreateOrUpdateAppConfig\", new object[] { tenantName, publicDbConnectionString, adminDbConnectionString, provider, dialect, driver, true });\r\n```\r\n\r\nI've replaced this by that :\r\n```\r\n            var assemblyFile = Path.Combine(versionDir, \"admin\", \"bin\", \"Alcuin.Admin.Configuration.Services.dll\");\r\n            (string status, string log) = _runner.RunInThread<Tuple<string, string>>(assemblyFile, \"Alcuin.Admin.Configuration.Services\", \"Alcuin.Admin.Configuration.Services.Application.HttpHandlerService\", \"CreateOrUpdateAppConfig\", data);\r\n```\r\n\r\nRunInThread method call an override of AssemblyLoadContext and proper instanciate method and load dependencies, this is working well.\r\n\r\nBut the invoked code use AppDomain.CurrentDomain.BaseDirectory internally to load some files (related to the assembly we load), this is why we used :\r\n```\r\nnew AppDomainSetup() \r\n{ \r\nApplicationBase = Path.Combine(adminPath, \"bin\"), \r\nPrivateBinPath = Path.Combine(adminPath, \"bin\"), \r\nLoaderOptimization = LoaderOptimization.SingleDomain\r\n}\r\n```\r\n\r\nto make sure invoked code can work without any change.\r\n\r\nDo you know how can I port that into .NET Core with AssemblyLoadContext ?\r\n\r\nThanks\r\n"},{"Id":"7426978277","Type":"IssuesEvent","CreatedAt":"2018-03-23T18:10:52","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2941","RelatedDescription":"Closed issue \"PersistKeysToFileSystem in Docker hosted in Linux fails with \"Unknown error 524\"\" (#2941) at aspnet/Home","RelatedBody":"@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343)\n\nTrying to AddDataProtection for MVC Core app.\r\nservices.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/keys/\"))\r\n                .SetApplicationName(\"AppName\")\r\n\r\nThe Directory is a configured volume mount in the linux host.\r\nIf I dont use the volume mount, it works.\r\nVolume mount is needed as per described in MS Docs since the app is hosted in many Docker containers.\r\nPlease advise.\r\n\r\nWorks locally. But when configured to a Docker container hosted in linux, I get the following exception on startup:\r\n\r\n{\"Timestamp\":\"2018-03-08T20:45:37.4873753+00:00\",\"Level\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC55SODK05P:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC55SODK05P\"}}\r\n\n\n---\n\n@Tratcher commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371634771)\n\n@natemcmaster \n\n---\n\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371636962)\n\nThis appears to be an issue with your Docker host, not with ASP.NET Core. System.IO.File.Move is failing to write into the mounted directory. Can you verify this with a minimal repro like this?\r\n```c#\r\npublic static void Main(string[] args)\r\n{\r\n    var tempFile = Path.Combine(Path.GetTempPath(), \"test.txt\");\r\n    File.WriteAllText(tempFile, \"Hello\");\r\n    File.Move(tempFile, \"etc/keys/test.txt\");\r\n}\r\n```\n\n---\n\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371659784)\n\nWrite and move works, but still getting exception.\r\n\r\nAn error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC597NS53I0\"}}\r\n\r\nAn unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC597NS53I0\",\"TraceIdentifier\":\"0HLC597NS53I0:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\n\n---\n\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371661817)\n\nCan you provide more log info? There should be an INFO log item just before this File.Move\r\n\r\nhttps://github.com/aspnet/DataProtection/blob/8a42c24f46d728b4728e6b20febd0a11c1111df2/src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs#L232-L233\n\n---\n\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371685069)\n\n services.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/talentbrew/keys\"))\r\n                .SetApplicationName(\"XXX\")\r\n                .SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\r\nLevel\":\"Information\",\"MessageTemplate\":\"Writing data to file '{FileName}'.\",\"Properties\":{\"FileName\":\"/app/etc/talentbrew/keys/key-fb6f8187-5606-445b-9591-3c268c59ff84.xml\",\"EventId\":{\"Id\":39},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}\r\n\r\n\"Level\":\"Error\",\"MessageTemplate\":\"Connection id \\\"{ConnectionId}\\\", Request id \\\"{TraceIdentifier}\\\": An unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC5BJ5EVUU9\",\"TraceIdentifier\":\"0HLC5BJ5EVUU9:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\r\n\r\n\"Level\":\"Information\",\"MessageTemplate\":\"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.\",\"Properties\":{\"KeyId\":\"fb6f8187-5606-445b-9591-3c268c59ff84\",\"CreationDate\":\"2018-03-09T01:33:27.3851082+00:00\",\"ActivationDate\":\"2018-03-09T01:33:27.3843013+00:00\",\"ExpirationDate\":\"2019-03-09T01:33:27.3843013+00:00\",\"EventId\":{\"Id\":58},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"},\"Renderings\":{\"KeyId\":[{\"Format\":\"B\",\"Rendering\":\"{fb6f8187-5606-445b-9591-3c268c59ff84}\"}],\"CreationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ActivationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ExpirationDate\":[{\"Format\":\"u\",\"Rendering\":\"2019-03-09 01:33:27Z\"}]}}\r\n\r\nLevel\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}}\n\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7430476843","Type":"IssuesEvent","CreatedAt":"2018-03-25T02:14:11","Actor":"kevin-jing","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1706","RelatedDescription":"Closed issue \"How to download '2.1.0-preview2-26314-02'\" (#1706) at aspnet/SignalR","RelatedBody":"PS C:\\Users\\xxx\\Documents\\SignalR\\samples\\ChatSample> dotnet run -f netcoreapp2.1\r\nUsing launch settings from C:\\Users\\xxx\\Documents\\SignalR\\samples\\ChatSample\\Properties\\launchSettings.json...\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.1.0-preview2-26314-02' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      C:\\Program Files\\dotnet\\\r\n\r\n      https://aka.ms/dotnet-download-runtime\r\n  - The .NET framework and SDK can be installed from:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The following versions are installed:\r\n      1.1.0 at [C:\\Program Files\\dotnet\\shared]\r\n      2.0.6 at [C:\\Program Files\\dotnet\\shared]\r\n      2.1.0-preview1-26216-03 at [C:\\Program Files\\dotnet\\shared]"},{"Id":"7430414594","Type":"PullRequestEvent","CreatedAt":"2018-03-25T01:19:41","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1709","RelatedDescription":"Opened pull request \"Add conditional test attribute for WebSockets\" (#1709) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/1568"},{"Id":"7429937438","Type":"IssuesEvent","CreatedAt":"2018-03-24T19:29:09","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1708","RelatedDescription":"Closed issue \"async streaming methods on hub\" (#1708) at aspnet/SignalR","RelatedBody":"* Versions of Server-Side NuGet Packages:\r\n  - Microsoft.AspNetCore.SignalR 1.0.0-preview1-final\r\n* Versions of Client-Side NuGet/NPM Packages:\r\n  - @aspnet/signalr@1.0.0-preview1-update1\r\n* Are you using the C# client or the JavaScript client:\r\n  - JavaScript\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.):\r\n  - Kestrel\r\n* The Operating System on the Server (Windows/Linux/macOS):\r\n  - Windows\r\n* The Operating System on the Client (Windows/Linux/macOS):\r\n  - Windows\r\n* The Browser on the client, if using the JavaScript client (IE/Chrome/Edge/Firefox/etc.):\r\n  - Chrome\r\n\r\nI was messing around with a typical ChatHub demo. On my hub class, I've defined a streaming method that returns a `ChannelReader` and an async non-streaming method that writes the passed argument to the channel. Things are working great.\r\n\r\nNow, I had the idea to update the streaming method to return `Task<ChannelReader>` to make my hub interface more consistent for clients. However, this causes the following error:\r\n\r\n    Error: The client attempted to invoke the non-streaming 'StreamMessage' method in a streaming fashion.\r\n\r\nDoes SignalR really not support async streaming methods, or am I overlooking something obvious?\r\n\r\n    public class ChatHub : Hub\r\n    {\r\n        private static Channel<string> s_channel = Channel.CreateUnbounded<string>();\r\n\r\n        public async Task<ChannelReader<string>> StreamMessage()\r\n        {\r\n            await s_channel.Writer.WriteAsync(\"hello subscriber\");\r\n\r\n            return s_channel.Reader;\r\n        }\r\n\r\n        public async Task UpdateMessage(string message)\r\n        {\r\n            await s_channel.Writer.WriteAsync(message);\r\n        }\r\n    }"},{"Id":"7429838833","Type":"IssuesEvent","CreatedAt":"2018-03-24T18:28:39","Actor":"bugged84","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1708","RelatedDescription":"Opened issue \"async streaming methods on hub\" (#1708) at aspnet/SignalR","RelatedBody":"* Versions of Server-Side NuGet Packages:\r\n  - Microsoft.AspNetCore.SignalR 1.0.0-preview1-final\r\n* Versions of Client-Side NuGet/NPM Packages:\r\n  - @aspnet/signalr@1.0.0-preview1-update1\r\n* Are you using the C# client or the JavaScript client:\r\n  - JavaScript\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.):\r\n  - Kestrel\r\n* The Operating System on the Server (Windows/Linux/macOS):\r\n  - Windows\r\n* The Operating System on the Client (Windows/Linux/macOS):\r\n  - Windows\r\n* The Browser on the client, if using the JavaScript client (IE/Chrome/Edge/Firefox/etc.):\r\n  - Chrome\r\n\r\nI was messing around with a typical ChatHub demo. On my hub class, I've defined a streaming method that returns a `ChannelReader` and an async non-streaming method that writes the passed argument to the channel. Things are working great.\r\n\r\nNow, I had the idea to update the streaming method to return `Task<ChannelReader>` to make my hub interface more consistent for clients. However, this causes the following error:\r\n\r\n    Error: The client attempted to invoke the non-streaming 'StreamMessage' method in a streaming fashion.\r\n\r\nDoes SignalR really not support async streaming methods, or am I overlooking something obvious?"},{"Id":"7429665228","Type":"IssuesEvent","CreatedAt":"2018-03-24T16:44:50","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1707","RelatedDescription":"Closed issue \"How to Server broadcast means that communications sent to clients are initiated by the server\" (#1707) at aspnet/SignalR","RelatedBody":"In dotnet framework, we can use GlobalHost.ConnectionManager.GetHubContext<StockTickerHub>().Clients), as in https://docs.microsoft.com/en-us/aspnet/signalr/overview/getting-started/tutorial-server-broadcast-with-signalr.\r\n\r\nBut in dotnet core, GlobalHost doesn't exist at all."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7430502202","Type":"IssuesEvent","CreatedAt":"2018-03-25T02:37:30","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7543","RelatedDescription":"Opened issue \"Page descriptors duplicated\" (#7543) at aspnet/Mvc","RelatedBody":"I'm using precompilation for UI in a library and at least one page descriptor is getting duplicated.\r\n@pranavkm @rynowak \r\n\r\n![image](https://user-images.githubusercontent.com/6995051/37871102-a71425a2-2f9a-11e8-81a5-b793594d89ba.png)\r\n"},{"Id":"7430433470","Type":"IssuesEvent","CreatedAt":"2018-03-25T01:35:49","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7541","RelatedDescription":"Closed issue \"Testing: Per-test class customization should not remove global (per-fixture) customization\" (#7541) at aspnet/Mvc","RelatedBody":"Overrides of the `virtual` methods in `WebApplicationFactory<TEntryPoint>` are intended for global customization of a fixture i.e. `WebApplicationFactory<TEntryPoint>` subclass. On the other hand, the `WebApplicationFactory<TEntryPoint>.WithWebHostBuilder(...)` method is intended for per-test class customization of a web site. Unfortunately, `WithWebHostBuilder(...)` `new`s up another `WebApplicationFactory<TEntryPoint>` instance, losing everything about the subclass, including the fixture's `override`s.\r\n\r\nFor example, the `MvcTestFixture` overrides `CreateServer(...)` to ensure the `TestServer` is created with `en-US` and `en-UK` cultures (for consistency). But, MVC functional tests using `WithWebHostBuilder(...)` create the server without this customization. Tests can fail because they're now run in unpredictable cultures."},{"Id":"7430430879","Type":"PullRequestEvent","CreatedAt":"2018-03-25T01:33:49","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7542","RelatedDescription":"Merged pull request \"[Fixes #7541] Per-test class customization should not remove global (per-fixture) customization\" (#7542) at aspnet/Mvc","RelatedBody":""},{"Id":"7430371551","Type":"PullRequestEvent","CreatedAt":"2018-03-25T00:45:46","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7542","RelatedDescription":"Opened pull request \"[Fixes #7541] Per-test class customization should not remove global (per-fixture) customization\" (#7542) at aspnet/Mvc","RelatedBody":""},{"Id":"7430321805","Type":"IssuesEvent","CreatedAt":"2018-03-25T00:03:00","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7541","RelatedDescription":"Opened issue \"Testing: Per-test class customization should not remove global (per-fixture) customization\" (#7541) at aspnet/Mvc","RelatedBody":"Overrides of the `virtual` methods in `WebApplicationFactory<TEntryPoint>` are intended for global customization of a fixture i.e. `WebApplicationFactory<TEntryPoint>` subclass. On the other hand, the `WebApplicationFactory<TEntryPoint>.WithWebHostBuilder(...)` method is intended for per-test class customization of a web site. Unfortunately, `WithWebHostBuilder(...)` `new`s up another `WebApplicationFactory<TEntryPoint>` instance, losing everything about the subclass, including the fixture's `override`s.\r\n\r\nFor example, the `MvcTestFixture` overrides `CreateServer(...)` to ensure the `TestServer` is created with `en-US` and `en-UK` cultures (for consistency). But, MVC functional tests using `WithWebHostBuilder(...)` create the server without this customization. Tests can fail because they're now run in unpredictable cultures."},{"Id":"7430311839","Type":"IssuesEvent","CreatedAt":"2018-03-24T23:54:26","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7486","RelatedDescription":"Closed issue \"Include excluded files from project programatically\" (#7486) at aspnet/Mvc","RelatedBody":"I am trying to build an application that creates an image by Drawing and saves to Temp folder in server. But that file is excluded from project automatically. How to add this file again as I am unable to use the excluded file.\r\nError:  File is being used by another process.\r\n\r\nMy Code:\r\n              `var p = new Microsoft.Build.Evaluation.Project(@\"C:\\projects\\BabDb\\test\\test.csproj\");\r\n                    p.AddItem(\"Folder\", @\"C:\\projects\\BabDb\\test\\test2\");\r\n                    p.AddItem(\"Compile\", @\"C:\\projects\\BabDb\\test\\test2\\Class1.cs\");\r\n                    p.Save();`\r\n\r\nI suppose this function is not valid when the file is in remote server.\r\nHow will I able to resolve this.\r\nPlease comment for any update.\r\nThanks in advance."},{"Id":"7429887575","Type":"IssuesEvent","CreatedAt":"2018-03-24T18:58:22","Actor":"fir3pho3nixx","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7540","RelatedDescription":"Opened issue \"Feature Request/Question: Ability to easily author/inject new directives for Razor?\" (#7540) at aspnet/Mvc","RelatedBody":"Currently, I cannot find an easy way to author/inject custom directives into Razor whilst using ASPNET Core Mvc(Kestrel). \r\n\r\nI can see that the `@Inject` directive gets registered within razor [here](https://github.com/aspnet/Razor/blob/2f79b90af5cbd9499f012c204f5bf4bb413ae61b/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/RazorExtensions.cs#L20). Now if I wanted to inject a custom directive to MVC on startup how would I achieve that easily? Imagining for a second I wanted to create a '@FooInjector'. \r\n\r\nI can see you offer access to [RazorViewEngineOptions](https://github.com/aspnet/Mvc/blob/dfa085afaf4ddb0b1063eed35e070d6189acaca2/src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs) is this potentially where you guys would expose something like this?"},{"Id":"7429476877","Type":"IssuesEvent","CreatedAt":"2018-03-24T14:50:35","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7535","RelatedDescription":"Closed issue \"IRazorViewEngine.FindView can't find precompiled view when application is deployed\" (#7535) at aspnet/Mvc","RelatedBody":"Dear Maintainers,\r\n\r\nI use the following code in an MVC project to render an email to string:\r\n(https://ppolyzos.com/2016/09/09/asp-net-core-render-view-to-string/)\r\n```\r\npublic async Task<string> RenderAsync(string viewName, Model model)\r\n        {\r\n            var httpContext = new DefaultHttpContext { RequestServices = _serviceProvider };\r\n            var actionContext = new ActionContext(httpContext, new RouteData(), new ActionDescriptor());\r\n\r\n            using (var sw = new StringWriter())\r\n            {\r\n                var viewResult = _razorViewEngine.FindView(actionContext, viewName, false);\r\n\r\n                if (viewResult.View == null)\r\n                {\r\n                    throw new ArgumentException($\"{viewName} does not match any available view. searched: {String.Join(\", \", viewResult.SearchedLocations)}\");\r\n                }\r\n```\r\n\r\nWhen running in Debug or Release mode everything works fine, but when I deploy my application, FindView does not find the view. Using dotPeek I can see my views in PrecompiledViews.dll beside my MVC views. \"_Views_Mail_HelloWorld_cshtml\"\r\n\r\nCalling RenderAsync(\"Mail/HelloWorld\", model) throws the ArgumentException shown in the code. FindView has the following SearchedLocations:\r\n\"/Views//Mail/HelloWorld.cshtml\", \"/Views/Shared/Mail/HelloWorld.cshtml\", Notice the double / in the first view.\r\n\r\nI am using AspNetCore.All 2.0.6, I do not know which IIS version I am using at this moment.\r\n\r\nCan FindView be used to find precompiled view? If you can is this the right way? And are the double slashes in the location FindView searches correct?"},{"Id":"7429094862","Type":"IssuesEvent","CreatedAt":"2018-03-24T10:27:01","Actor":"M1991","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7539","RelatedDescription":"Opened issue \"Save an image to client temp folder, shows GDI+ error\" (#7539) at aspnet/Mvc","RelatedBody":"I am developing an application and everything works fine for development server but these codes don not work on remote server, application hosted at www.*****.org\r\n\r\nApplication flow : \r\nI have 2 jpeg files in server temp folder(inside the application). What the code does is takes the 1st image, writes on it(using system.drawing) and saves to client temp folder. Again, that saved image is taken from clients temp folder and with a pdf writer it writes that image to pdf.\r\n\r\nBelow is the provided code for saving to clients temp folder\r\n\r\n` Bitmap bitMapImage = new System.Drawing.Bitmap(Server.MapPath(\"~/images /NextflexAssemblyCustomerFinal.jpg\"));\r\n                Graphics graphicImage = Graphics.FromImage(bitMapImage);\r\n                var resTemp = Path.GetTempPath();\r\n                using (MemoryStream memoryt = new MemoryStream())\r\n                {\r\n                    using (FileStream fs = new FileStream(resTemp, FileMode.Create, FileAccess.ReadWrite))\r\n                    {\r\n///All drawing are done here\r\n                    bitMapImage.Save((resTemp + @\"\\test.jpg\"), ImageFormat.Jpeg);\r\nbyte[] bytes = memory.ToArray();\r\n                        fs.Write(bytes, 0, bytes.Length);\r\n                    }\r\n                }\r\n                     `\r\nI tried saving to application temp folder, but it automatically exclude that newly created image from application and throws an file not found error.\r\nCan anyone look into this code, I might have done some mistake.\r\nThanks.\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7430247184","Type":"IssuesEvent","CreatedAt":"2018-03-24T23:02:04","Actor":"xrkolovos","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1708","RelatedDescription":"Opened issue \"Add an option in Identity System, so we can define the length of TFA Recovery codes\" (#1708) at aspnet/Identity","RelatedBody":"As, i see in method [TwoFactorRecoveryCodeSignInAsync](https://github.com/aspnet/Identity/blob/c6a82ad19a0bdb80b7358dc843b66664bbf33f96/src/Identity/SignInManager.cs), they don't protect against brute force attacks.\r\n8 char long strings are venerable to brute force attacks.\r\n\r\nAdd an option in Identity System, so we can define the length of TFA Recovery codes, and i thing you should raise the number. Normally the recovery codes are larger strings.\r\n\r\nThat's issue comes from discussion #1700"},{"Id":"7426498757","Type":"PullRequestEvent","CreatedAt":"2018-03-23T16:39:25","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1707","RelatedDescription":"Merged pull request \"Release/2.1\" (#1707) at aspnet/Identity","RelatedBody":""},{"Id":"7426497978","Type":"PullRequestEvent","CreatedAt":"2018-03-23T16:39:17","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1707","RelatedDescription":"Opened pull request \"Release/2.1\" (#1707) at aspnet/Identity","RelatedBody":""},{"Id":"7426495385","Type":"PullRequestEvent","CreatedAt":"2018-03-23T16:38:50","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1704","RelatedDescription":"Merged pull request \"ApplicationPartFactory part 3\" (#1704) at aspnet/Identity","RelatedBody":""},{"Id":"7426319002","Type":"IssuesEvent","CreatedAt":"2018-03-23T16:07:48","Actor":"baseless","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1706","RelatedDescription":"Opened issue \"Unable to disable the defaultUI in asp.net core 2.1\" (#1706) at aspnet/Identity","RelatedBody":"Hi!\r\n\r\nI am uncertain if im missing soemthing but removing the default UI should be as simple as removing `AddDefaultUI()` but it odes not seem to be enough. \r\nIf i remove this line from the default template and  try to access /Identity/Account/Register i recieve \"InvalidOperationException: A suitable constructor for type 'Microsoft.AspNetCore.Identity.UI.Pages.Account.Internal.RegisterModel' could not be located\" when i should logically recieve a 404.\r\n\r\nAnyone happen to know if im missing ssomething here or if this is an active issue?"},{"Id":"7423160221","Type":"IssuesEvent","CreatedAt":"2018-03-23T03:33:21","Actor":"binhghi5","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1691","RelatedDescription":"Closed issue \"Asp identity not working without https\" (#1691) at aspnet/Identity","RelatedBody":"- Open Visual Studio 2017\r\n- Create new ASP Web App (net core 2.0) with Individual User Account (Authentication)\r\n- Run the app with default url (https://localhost:44330)\r\n- Create new user (UserName: user1@gmail.com | Password: Abc@1234) and login ==> success!!\r\n- Stop the app\r\n- Open Properties tab -> Debug -> uncheck \"Enable SSL\" -> copy text from \"App URL\" textbox to \"Launch browser\" textbox\r\n- Run the app again (http://localhost:12421/)\r\n- Login using user1@gmail.com ===> FAIL!! (This page isn’t working HTTP ERROR 400)\r\n\r\nWithout https, some Asp identity cookies and antiforgerytoken cookies couldn't be created.\r\nAnd............................ HOW TO FIX IT?????????????????????????????????"},{"Id":"7421306695","Type":"PullRequestEvent","CreatedAt":"2018-03-22T19:09:49","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1678","RelatedDescription":"Merged pull request \"Skip flaky tests\" (#1678) at aspnet/Identity","RelatedBody":""}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7429212025","Type":"PullRequestEvent","CreatedAt":"2018-03-24T11:57:25","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2428","RelatedDescription":"Opened pull request \"Move DuplexPipe into Kestrel.Core as internal\" (#2428) at aspnet/KestrelHttpServer","RelatedBody":"Fixes #2419 "},{"Id":"7429172507","Type":"IssuesEvent","CreatedAt":"2018-03-24T11:26:54","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2412","RelatedDescription":"Closed issue \"Bedrock API review\" (#2412) at aspnet/KestrelHttpServer","RelatedBody":"## Protocol abstractions renamed\r\n\r\nMicrosoft.AspNetCore.Connections.Abstractions\r\n\r\n```C#\r\npublic abstract ConnectionHandler\r\n{\r\n    Task OnConnectionAsync(ConnectionContext connectionContext);\r\n}\r\n```"},{"Id":"7429076891","Type":"PullRequestEvent","CreatedAt":"2018-03-24T10:12:54","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2421","RelatedDescription":"Merged pull request \"Expose DefaultConnectionContext POCO\" (#2421) at aspnet/KestrelHttpServer","RelatedBody":"- Made TransportConnecton derive from ConnectionContext\r\n- Less objects, less opinions about what the ConnectionContext is. This diverges from what we do with HttpContext but it seems better overall."},{"Id":"7428443626","Type":"IssuesEvent","CreatedAt":"2018-03-24T01:35:27","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2427","RelatedDescription":"Opened issue \"Remove use of TestSink in functional tests\" (#2427) at aspnet/KestrelHttpServer","RelatedBody":"Use the TestApplicationLogger"},{"Id":"7428221507","Type":"PullRequestEvent","CreatedAt":"2018-03-23T23:37:54","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2426","RelatedDescription":"Opened pull request \"Make LibuvTransport(Factory) pubinternal\" (#2426) at aspnet/KestrelHttpServer","RelatedBody":"This enables the ApiCheck for the Libuv transport.\r\n\r\nThe ApiCheck was [previously disabled for the Libuv project](https://github.com/aspnet/KestrelHttpServer/pull/2418#issuecomment-375769339) because the already-pubternal IConnectionHandler got renamed IConnectionDispatcher last night, but it was required to invoke a method on the should-have-never-been-public LibuvTransportFactory type.\r\n\r\nThere were never any methods on LibuvTransportFactory that could be called *without* pubternal types, and LibuvTransport could never even be constructed without pubternal types.\r\n\r\n@Eilon @davidfowl So I looked at this more deeply and I found that apparently what happened is there was a glitch in the baseline department, so I just went ahead and fixed the glitch.'\r\n\r\nSeriously though, does this really require a breaking change announcement given neither type could ever be used without other pubternal types?"},{"Id":"7428180321","Type":"PullRequestEvent","CreatedAt":"2018-03-23T23:20:36","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2425","RelatedDescription":"Opened pull request \"[WIP] Outline SNI APIs\" (#2425) at aspnet/KestrelHttpServer","RelatedBody":" #2357 Here's what Kestrel's SNI support might look like.\r\nThis is based on the initial CoreFx design in https://github.com/dotnet/corefx/pull/28278."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7428273159","Type":"PullRequestEvent","CreatedAt":"2018-03-24T00:00:29","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2218","RelatedDescription":"Opened pull request \"Make `TestProject.GetProjectDirectory` more thorough when finding project directory.\" (#2218) at aspnet/Razor","RelatedBody":"**Big Note:** I was unable to reproduce this issue and after digging through the code really can't see how things could be going wrong other than in our test project directory creation. Basically, in this PR i make our `GetProjectDirectory` a little more reliable in unknown scenarios and added some logic to help us diagnose future errors if they arise.\r\n\r\n- Relaxed some restrictions to find project directory\r\n- Added some logic to make future debugging/test failures more diagnosable.\r\n\r\n#2184 "},{"Id":"7428190226","Type":"PullRequestEvent","CreatedAt":"2018-03-23T23:24:40","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2217","RelatedDescription":"Opened pull request \"Use tool assembly path for computing default pipe name\" (#2217) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/issues/2216\r\n\r\n"},{"Id":"7428117417","Type":"IssuesEvent","CreatedAt":"2018-03-23T22:56:44","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2216","RelatedDescription":"Opened issue \"Building on Visual Studio doesn't reuse existing build server\" (#2216) at aspnet/Razor","RelatedBody":"This is because we use `AppDomain.CurrentDomain.BaseDirectory` to compute the default pipe name. We should be using path to rzc instead."},{"Id":"7427979824","Type":"IssuesEvent","CreatedAt":"2018-03-23T22:10:25","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2215","RelatedDescription":"Opened issue \"Missing pdb inside Microsoft.AspNetCore.Razor.Design.symbols.nupkg\" (#2215) at aspnet/Razor","RelatedBody":"For some reason, the symbols nupkg we create for this assembly doesn't contain any pdb files.\r\n\r\ncc @pranavkm "},{"Id":"7427365890","Type":"PullRequestEvent","CreatedAt":"2018-03-23T19:37:26","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/2213","RelatedDescription":"Closed pull request \"Register missed directives in RazorPageGenerator\" (#2213) at aspnet/Razor","RelatedBody":""},{"Id":"7427353485","Type":"PullRequestEvent","CreatedAt":"2018-03-23T19:34:23","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2213","RelatedDescription":"Opened pull request \"Register missed directives in RazorPageGenerator\" (#2213) at aspnet/Razor","RelatedBody":""},{"Id":"7422928715","Type":"IssuesEvent","CreatedAt":"2018-03-23T02:12:29","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2205","RelatedDescription":"Closed issue \"Razor extension does not report the right version number in Help->About\" (#2205) at aspnet/Razor","RelatedBody":"![image](https://user-images.githubusercontent.com/1430011/37742327-6aadcb06-2d22-11e8-8d81-b4b482476aba.png)\r\n\r\n\r\nWe will likely need to do something like : https://github.com/dotnet/roslyn/blob/14aed138a01c448143b9acf0fe77a662e3dfe2f4/src/VisualStudio/Core/Def/Utilities/ProvideRoslynVersionRegistration.cs\r\n\r\nThe code that VS gives you out of the box only provides you the ability to pass a hardcoded version, and so that's what we've always done."},{"Id":"7422797412","Type":"PullRequestEvent","CreatedAt":"2018-03-23T01:25:14","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2210","RelatedDescription":"Merged pull request \"Add a version to the Razor about dialog entry\" (#2210) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7369868082","Type":"IssuesEvent","CreatedAt":"2018-03-13T05:33:42","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."},{"Id":"7364725434","Type":"IssuesEvent","CreatedAt":"2018-03-12T10:19:58","Actor":"RehanSaeed","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Opened issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."},{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":119,"FavoriteCount":80,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":3,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":12,"RawContent":null},{"Id":"973553523186159621","CreatedAt":"2018-03-13T13:37:02+00:00","UserScreenname":"aspnet","Text":"Today, Jeff shows you how to use dependency injection with web forms... check it out! https://t.co/viqZ28DBrV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":9,"RawContent":null},{"Id":"973350716046626816","CreatedAt":"2018-03-13T00:11:09+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"972484011556818945","CreatedAt":"2018-03-10T14:47:10+00:00","UserScreenname":"aspnet","Text":"Be sure to check out Jeff's live coding stream this morning to see more about our #ASP.NET Core 2.1 preview release. https://t.co/EtKk0fMOgU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null},{"Id":"971084152693866496","CreatedAt":"2018-03-06T18:04:38+00:00","UserScreenname":"aspnet","Text":"We are live at https://t.co/4Ioo9jNSN2 ! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"971075755168841728","CreatedAt":"2018-03-06T17:31:16+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup starts at 10 AM  Pacific / 1800 GMT. Ryan Nowak will be showing Web API 2.1 f… https://t.co/OW0zeYZPyq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesd… https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":6,"RawContent":null},{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":69,"FavoriteCount":54,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Ra… https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2018-03-25T05:30:09.7177334Z","RunDurationInMilliseconds":8475}