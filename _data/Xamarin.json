{"Data":{"Blog":{"FeedItems":[{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7034589746","Type":"IssuesEvent","CreatedAt":"2017-12-27T17:42:32","Actor":"peteschmitz","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1143","RelatedDescription":"Opened issue \"FormsAppCompatActivity.OnDestroy occasionally throws \"No view found for id\" exception for Android N devices\" (#1143) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI could not reproduce this from our development environment. We've received infrequent and non-critical reports from our bug reporting.\r\n\r\n### Expected Behavior\r\n- App gracefully closes\r\n\r\n### Actual Behavior\r\n- App crashes with the below exception\r\n\r\n### Version Information\r\nAffected Form versions:\r\n2.4.0.38779\r\n2.5.0.91635\r\n\r\nAffected Device Platforms:\r\nAndroid N (7.x)\r\n\r\nAffected Devices:\r\nGalaxy S7, S7 Edge, S8, S8+\r\nGalaxy Note 5\r\nLG Aristo, G6, Stylo 3\r\n\r\n### Related\r\n- https://forums.xamarin.com/discussion/104160/issue-with-forms-2-4-0-280-on-an-android-no-view-found-for-id-0x1-unknown-for-fragment (our app only initializes during FormsAppCompatActivity.OnCreate)\r\n\r\n\r\n### Stacktrace \r\nJava.Interop.JniEnvironment No view found for id 0x1 (unknown) for fragment FragmentContainer{460ecc1 #1 id=0x1}\r\nRaw\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()<b5f2483a551b45a99f04c68f14fc2c14>:0\r\nJava.Interop.JniEnvironment.InstanceMethods.CallNonvirtualVoidMethod(JniObjectReference instance, JniObjectReference type, JniMethodInfo method, JniArgumentValue* args)<eba4edc4e27949518f7bf237cb1196cc>:0\r\nJava.Interop.JniPeerMembers.JniInstanceMethods.InvokeVirtualVoidMethod(string encodedMember, IJavaPeerable self, JniArgumentValue* parameters)<eba4edc4e27949518f7bf237cb1196cc>:0\r\nAndroid.App.Activity.OnDestroy()<bec3773976364d6f966ebdab5e7a8df3>:0\r\nXamarin.Forms.Platform.Android.FormsAppCompatActivity.OnDestroy()<8d6936257ac5419f8be9df07a9bb5129>:0\r\niSurvey.Android.MainActivity.OnDestroy()<8d9b18b497204292ba1e24a705032810>:0\r\nAndroid.App.Activity.n_OnDestroy(IntPtr jnienv, IntPtr native__this)<bec3773976364d6f966ebdab5e7a8df3>:0\r\nat (wrapper dynamic-method) System.Object:ee7a2513-7ba6-47d4-b295-16c9cfe08d94 (intptr,intptr)\r\n--- End of managed Java.Lang.IllegalArgumentException stack trace ---\r\njava.lang.IllegalArgumentException: No view found for id 0x1 (unknown) for fragment FragmentContainer{460ecc1 #1 id=0x1}\r\nat android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1334)\r\nat android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1569)\r\nat android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1636)\r\nat android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\nat android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2415)\r\nat android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2201)\r\nat android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2155)\r\nat android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2064)\r\nat android.support.v4.app.FragmentManagerImpl.dispatchDestroy(FragmentManager.java:3026)\r\nat android.support.v4.app.FragmentController.dispatchDestroy(FragmentController.java:262)\r\nat android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:390)\r\nat android.support.v7.app.AppCompatActivity.onDestroy(AppCompatActivity.java:209)\r\niSurvey.Android.MainActivity.n_onDestroy(Native Method)\r\nat iSurvey.Android.MainActivity.onDestroy(MainActivity.java:114)\r\nat android.app.Activity.performDestroy(Activity.java:6959)\r\nat android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1154)\r\nat android.app.ActivityThread.performDestroyActivity(ActivityThread.java:4289)\r\nat android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:4320)\r\nat android.app.ActivityThread.-wrap6(ActivityThread.java)\r\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1589)\r\nat android.os.Handler.dispatchMessage(Handler.java:102)\r\nat android.os.Looper.loop(Looper.java:154)\r\nat android.app.ActivityThread.main(ActivityThread.java:6310)\r\njava.lang.reflect.Method.invoke(Native Method)\r\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)\r\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7025150122","Type":"PullRequestEvent","CreatedAt":"2017-12-23T05:26:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1142","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix classes-zip inception\" (#1142) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=61073\r\nContext: a296784\r\n\r\nWhen we added the new `classes.zip` functionality, there was one oddity\r\npresent. On the first build, everything appears to be normal. On the\r\nsecond build, `classes.zip` appeared to contain itself inside itself???\r\n\r\nTo make things even stranger, I wrote a unit test that contains a\r\n`Java.Lang.Object` subclass in which its type and namespace names change\r\non each write. This worked fine on macOS, even with the oddity of\r\n`classes.zip` continually zipping itself inside itself... The new java\r\nsources would appear at the bottom of the list within the zip file.\r\n\r\nEverything broke down when I tried my unit test on Windows, the case of\r\n`classes.zip` trying to compress itself inside itself was silently\r\nfailing. It was not processing any further files after the failing zip\r\nentry, and so *in theory* this situation would cause many Java stubs to\r\nbe missing from the zip.\r\n\r\nSolution? Let's just put `classes.zip` up one directory.\r\n\r\nSo instead of:\r\n```\r\nobj/Debug/android/bin/classes/classes.zip\r\n```\r\nMove it to:\r\n```\r\nobj/Debug/android/bin/classes.zip\r\n```\r\n\r\nThis prevents the `classes` directory from containing `classes.zip`, and\r\nour strange case of `classes.zip` inception.\r\n\r\nMerry Christmas! I'm going to go play Skylanders now."},{"Id":"7024569616","Type":"PullRequestEvent","CreatedAt":"2017-12-22T21:51:16","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1141","RelatedDescription":"Opened pull request \"Fix MonoAndroid path resolution on Linux\" (#1141) at xamarin/xamarin-android","RelatedBody":"Currently, we indiscriminately set TargetFrameworkRootPath in a way that breaks on Linux, so make that setting Windows-specific and add a more generic one for Linux. As for OSX, it's not clear to me why OSX was never affected by the issue."},{"Id":"7024231749","Type":"IssuesEvent","CreatedAt":"2017-12-22T19:37:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1140","RelatedDescription":"Closed issue \"Cannot change TimePicker format\" (#1140) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Turn the \"Use 24-hour format\" device setting off on your test device\r\n2. Create a TimePicker\r\n3. Change the format sometime later on (e.g. when the user clicks a button)\r\n\r\n### Expected Behavior\r\nTimePicker displays time in new format\r\n\r\n### Actual Behavior\r\nTimePicker still displays time in original format\r\n\r\n### Version Information\r\nXamarin.Forms 2.5.0.91635\r\n\r\n### Proposed Fix\r\nI can see the problem in Xamarin.Forms.Platform.Android.TimePickerRenderer. The format is cached in OnElementChanged then never gets updated. Presumably, the format just needs to be refreshed in OnElementPropertyChanged if FormatProperty has changed."},{"Id":"7023896102","Type":"IssuesEvent","CreatedAt":"2017-12-22T17:46:41","Actor":"mattavadine","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1140","RelatedDescription":"Opened issue \"Cannot change TimePicker format\" (#1140) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Create a TimePicker\r\n2. Change the format sometime later on (e.g. when the user clicks a button)\r\n\r\n### Expected Behavior\r\nTimePicker displays time with new format\r\n\r\n### Actual Behavior\r\nTimePicker still displays time with original format\r\n\r\n### Version Information\r\nXamarin.Forms 2.5.0.91635\r\n\r\n### Proposed Fix\r\nI can see the problem in Xamarin.Forms.Platform.Android.TimePickerRenderer. The format is cached in OnElementChanged then never gets updated. Presumably, the format just needs to be refreshed in OnElementPropertyChanged when if FormatProperty has changed."},{"Id":"7023664688","Type":"PullRequestEvent","CreatedAt":"2017-12-22T16:34:07","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1139","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] <Aapt /> task showing warnings as errors\" (#1139) at xamarin/xamarin-android","RelatedBody":"Fixes: #1134\r\nContext: 2135856e\r\n\r\nDean’s changes in 2135856e were more accurate at picking out warnings\r\n& errors, but if the `level` value from the `Regex` was blank, it was\r\ncounting the message as an error. The `level` value is matching against\r\nthe words `warning` or `error`, ignoring case.\r\n\r\nI think the fix here is to count the message as a warning if the\r\n`level` is blank.\r\n\r\nI added a Regex test case of what was on #1134. I added another test case\r\nthat verifies a message with a blank `level` comes through the build output\r\nas a `warning`."},{"Id":"7023229946","Type":"PullRequestEvent","CreatedAt":"2017-12-22T14:34:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1137","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] ProGuard/MultiDex fix parentheses in path\" (#1137) at xamarin/xamarin-android","RelatedBody":"Fixes: #1135\r\nContext: #1068\r\n\r\nWhen making changes in #1068, I added a unit test that builds an\r\napplication with both spaces and parentheses in its path. However, this\r\nwas not enough to test everything; the test also needed an\r\n`AndroidJavaLibrary` build item with spaces and parentheses in its name!\r\n\r\nChanges:\r\n- Made a `Hello (World).jar` file, that has a single class in it\r\n- Added the jar file as a `AndroidJavaLibrary`, in\r\nthe `BuildApplicationWithSpacesInPath` test\r\n- Reverted `Proguard.cs` and `CreateMultiDexMainDexClassList.cs` from\r\nwhat I did in #1068 -- Dean tried to warn me\r\n- Move the `(!META-INF/MANIFEST.MF)` filter expression outside the\r\nsingle quotes\r\n- For the `-injars` expression to work on *both* macOS and Windows,\r\nI had to enclose the entire expression in double-quotes\r\n\r\nPR #1068 was a good attempt at trying to cleanup the code, but I could\r\nnot get the manifest filter to work along with a path including a\r\nparentheses."},{"Id":"7023229941","Type":"IssuesEvent","CreatedAt":"2017-12-22T14:34:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1135","RelatedDescription":"Closed issue \"Encountering new path escaping issues when using multidex/proguard on Windows\" (#1135) at xamarin/xamarin-android","RelatedBody":"I'm encountering new path escaping issues on Windows due when using proguard and/or multidex in certain projects. I see a recent and seemingly related change in this area in this commit https://github.com/xamarin/xamarin-android/commit/2c2d47c4a28eeb398500a8c0a9a0a803324de014.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Attempt to build a project with multidex and or proguard enabled.\r\n2. msbuild /t:SignAndroidPackage KitKat.csproj /p:Configuration=Release /p:AndroidEnableProguard=true\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/KitKat\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProguard and multidex tool invocations succeed without issue on Windows.\r\n\r\n### Actual Behavior\r\nVarious path escaping issues are preventing proguard and multidex from executing successfully:\r\n```\r\n Environment Variables passed to tool: (TaskId:339)\r\n    PROGUARD_HOME=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard (TaskId:339)\r\n    JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8 (TaskId:339)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -include \"C:\\Program Files (x86)\\Android\\android-sdk\\\\tools\\proguard\\proguard-android.txt\" -include \"obj\\Release\\proguard\\proguard_xamarin.cfg\" -include \"obj\\Release\\proguard\\proguard_project_references.cfg\" -include \"obj\\Release\\proguard\\proguard_project_primary.cfg\" -injars \"obj\\Release\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v8.0\\mono.android.jar(!META-INF/MANIFEST.MF)\" -libraryjars \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-26\\android.jar\" -outjars obj\\Release\\proguard\\__proguard_output__.jar -optimizations !code/allocation/variable  (TaskId:339)\r\nPROGUARD : error : C:\\Program Files (Access is denied) [C:\\xqatmp\\b1b545ee\\KitKat\\KitKat.csproj]\r\n  Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 (TaskId:339)\r\n  The command exited with code 1. (TaskId:339)\r\nDone executing task \"Proguard\" -- FAILED. (TaskId:339)\r\n```\r\n```\r\nToolPath: C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin (TaskId:1130)\r\n    ProguardJarPath: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar (TaskId:1130)\r\n    ProguardInputJarFilter: (!META-INF/MANIFEST.MF) (TaskId:1130)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -injars \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v7.1\\mono.android.jar(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\android-support-multidex.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\0\\jl\\formsviewgroup.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\10\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\11\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\12\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\13\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\14\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\15\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\16\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\17\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\18\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\19\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\20\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\21\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\27\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\28\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\29\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\30\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\31\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\32\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\33\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\34\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\35\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\36\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\37\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\38\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\6\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\8\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\9\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\" -dontwarn -forceprocessing -outjars C:\\agent\\_work\\_temp\\h24rcf4d.bej.jar -libraryjars \"\\\"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\lib\\shrinkedAndroid.jar\\\"\" -dontoptimize -dontobfuscate -dontpreverify -include \"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\mainDexClasses.rules\"  (TaskId:1130)\r\nCREATEMULTIDEXMAINDEXCLASSLIST : error : Expecting class path separator ';' before '\\Microsoft' in argument number 2 [C:\\xqatmp\\Bug15162\\Bug15162\\Bug15162.csproj]\r\n  The command exited with code 1. (TaskId:1130)\r\nDone executing task \"CreateMultiDexMainDexClassList\" -- FAILED. (TaskId:1130)\r\n```\r\n\r\n### Version Information\r\nXA 8.0.0.2 (d15-6)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\nhttp://xqa.blob.core.windows.net/gist/log-7c8201b17c434ec9bee20eac7ddb8f93.txt\r\nhttp://xqa.blob.core.windows.net/gist/log-33e409f0ca854d3c93c92f4a9849df57.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7021599561","Type":"IssuesEvent","CreatedAt":"2017-12-22T05:50:15","Actor":"sushihangover","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1138","RelatedDescription":"Opened issue \"Android Binding Library using `class-parse` (Error CS1519: Invalid token 'params')\" (#1138) at xamarin/xamarin-android","RelatedBody":"**Error CS1519: Invalid token 'params' in class, struct, or interface member declaration (CS1519)** \r\n\r\n### Steps to Reproduce\r\n\r\n1) Create Xamarin.Android binding library of the `.aar` : https://github.com/michael-rapp/AndroidUtil\r\n\r\nVia Maven: http://central.maven.org/maven2/com/github/michael-rapp/android-util/1.18.2/android-util-1.18.2.aar\r\n\r\n2) Use `class-parse`\r\n\r\n`<AndroidClassParser>class-parse</AndroidClassParser>`\r\n\r\n### Repro project:\r\n\r\n[android-util-1.18.2.zip](https://github.com/xamarin/xamarin-android/files/1581521/android-util-1.18.2.zip)\r\n\r\n\r\n### Expected Behavior\r\n\r\nA beautifully generated binding project with no errors 😺 🍣 \r\n\r\n### Actual Behavior\r\n\r\nGenerated code includes `params` keyword incorrectly, i.e. `params global:: Java.Lang.Object[] p2;`\r\n\r\n### Example:\r\n```\r\npublic partial class LoadDataEventArgs : global::System.EventArgs {\r\n\r\n\tpublic LoadDataEventArgs (bool handled, global::DE.Mrapp.Android.Util.Multithreading.AbstractDataBinder p0, global::Java.Lang.Object p1, params global:: Java.Lang.Object[] p2)\r\n\t{\r\n\t\tthis.handled = handled;\r\n\t\tthis.p0 = p0;\r\n\t\tthis.p1 = p1;\r\n\t\tthis.p2 = p2;\r\n\t}\r\n\r\n\tbool handled;\r\n\tpublic bool Handled {\r\n\t\tget { return handled; }\r\n\t\tset { handled = value; }\r\n\t}\r\n\r\n\tglobal::DE.Mrapp.Android.Util.Multithreading.AbstractDataBinder p0;\r\n\tpublic global::DE.Mrapp.Android.Util.Multithreading.AbstractDataBinder P0 {\r\n\t\tget { return p0; }\r\n\t}\r\n\r\n\tglobal::Java.Lang.Object p1;\r\n\tpublic global::Java.Lang.Object P1 {\r\n\t\tget { return p1; }\r\n\t}\r\n\r\n\tparams global:: Java.Lang.Object[] p2;\r\n\tpublic params global:: Java.Lang.Object[] P2 {\r\n\t\tget { return p2; }\r\n\t}\r\n}\r\n\r\n```\r\n\r\n### Version Information\r\n\r\n* Xamarin.Android Version: 8.1.0.25 \r\n* Mono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)"},{"Id":"7020728204","Type":"PullRequestEvent","CreatedAt":"2017-12-21T23:06:34","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1137","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] ProGuard/MultiDex fix parentheses in path\" (#1137) at xamarin/xamarin-android","RelatedBody":"Fixes: #1135\r\nContext: #1068\r\n\r\nWhen making changes in #1068, I added a unit test that builds an\r\napplication with both spaces and parentheses in its path. However, this\r\nwas not enough to test everything; the test also needed an\r\n`AndroidJavaLibrary` build item with spaces and parentheses in its name!\r\n\r\nChanges:\r\n- Made a `Hello (World).jar` file, that has a single class in it\r\n- Added the jar file as a `AndroidJavaLibrary`, in\r\nthe `BuildApplicationWithSpacesInPath` test\r\n- Reverted `Proguard.cs` and `CreateMultiDexMainDexClassList.cs` from\r\nwhat I did in #1068 -- Dean tried to warn me\r\n- Move the `(!META-INF/MANIFEST.MF)` filter expression outside the\r\nsingle quotes\r\n- For the `-injars` expression to work on *both* macOS and Windows,\r\nI had to enclose the entire expression in double-quotes\r\n\r\nPR #1068 was a good attempt at trying to cleanup the code, but I could\r\nnot get the manifest filter to work along with a path including a\r\nparentheses."},{"Id":"7020290806","Type":"IssuesEvent","CreatedAt":"2017-12-21T20:56:18","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1135","RelatedDescription":"Opened issue \"Encountering new path escaping issues when using multidex/proguard on Windows\" (#1135) at xamarin/xamarin-android","RelatedBody":"I'm encountering new path escaping issues on Windows due when using proguard and/or multidex in certain projects. I see a recent and seemingly related change in this area in this commit https://github.com/xamarin/xamarin-android/commit/2c2d47c4a28eeb398500a8c0a9a0a803324de014.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Attempt to build a project with multidex and or proguard enabled.\r\n2. msbuild /t:SignAndroidPackage KitKat.csproj /p:Configuration=Release /p:AndroidEnableProguard=true\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/KitKat\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProguard and multidex tool invocations succeed without issue on Windows.\r\n\r\n### Actual Behavior\r\nVarious path escaping issues are preventing proguard and multidex from executing successfully:\r\n```\r\n Environment Variables passed to tool: (TaskId:339)\r\n    PROGUARD_HOME=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard (TaskId:339)\r\n    JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8 (TaskId:339)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -include \"C:\\Program Files (x86)\\Android\\android-sdk\\\\tools\\proguard\\proguard-android.txt\" -include \"obj\\Release\\proguard\\proguard_xamarin.cfg\" -include \"obj\\Release\\proguard\\proguard_project_references.cfg\" -include \"obj\\Release\\proguard\\proguard_project_primary.cfg\" -injars \"obj\\Release\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v8.0\\mono.android.jar(!META-INF/MANIFEST.MF)\" -libraryjars \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-26\\android.jar\" -outjars obj\\Release\\proguard\\__proguard_output__.jar -optimizations !code/allocation/variable  (TaskId:339)\r\nPROGUARD : error : C:\\Program Files (Access is denied) [C:\\xqatmp\\b1b545ee\\KitKat\\KitKat.csproj]\r\n  Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 (TaskId:339)\r\n  The command exited with code 1. (TaskId:339)\r\nDone executing task \"Proguard\" -- FAILED. (TaskId:339)\r\n```\r\n```\r\nToolPath: C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin (TaskId:1130)\r\n    ProguardJarPath: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar (TaskId:1130)\r\n    ProguardInputJarFilter: (!META-INF/MANIFEST.MF) (TaskId:1130)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -injars \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v7.1\\mono.android.jar(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\android-support-multidex.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\0\\jl\\formsviewgroup.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\10\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\11\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\12\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\13\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\14\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\15\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\16\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\17\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\18\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\19\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\20\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\21\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\27\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\28\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\29\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\30\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\31\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\32\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\33\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\34\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\35\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\36\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\37\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\38\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\6\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\8\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\9\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\" -dontwarn -forceprocessing -outjars C:\\agent\\_work\\_temp\\h24rcf4d.bej.jar -libraryjars \"\\\"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\lib\\shrinkedAndroid.jar\\\"\" -dontoptimize -dontobfuscate -dontpreverify -include \"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\mainDexClasses.rules\"  (TaskId:1130)\r\nCREATEMULTIDEXMAINDEXCLASSLIST : error : Expecting class path separator ';' before '\\Microsoft' in argument number 2 [C:\\xqatmp\\Bug15162\\Bug15162\\Bug15162.csproj]\r\n  The command exited with code 1. (TaskId:1130)\r\nDone executing task \"CreateMultiDexMainDexClassList\" -- FAILED. (TaskId:1130)\r\n```\r\n\r\n### Version Information\r\nXA 8.0.0.2 (d15-6)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\nhttp://xqa.blob.core.windows.net/gist/log-7c8201b17c434ec9bee20eac7ddb8f93.txt\r\nhttp://xqa.blob.core.windows.net/gist/log-33e409f0ca854d3c93c92f4a9849df57.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7038864469","Type":"PullRequestEvent","CreatedAt":"2017-12-29T00:19:51","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/661","RelatedDescription":null,"RelatedBody":"### Description of Change ###\r\n\r\nAs of now, when the navigation stack is being navigated back, Fragments are being removed which does not allow for custom transition animations. This change attempts to hide them first and remove them when the transition is done.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=50787\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `protected virtual int TransitionDuration { get; set; } = 220;`\r\n This seems to be the time interval before the transition timer triggers. By default, it's set to 220ms but the custom animations I provided use 500ms.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7038138672","Type":"IssuesEvent","CreatedAt":"2017-12-28T18:53:23","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1356","RelatedDescription":"Closed issue \"[UWP] The SelectedItem in a ListView is not highlighted when set while constructing a page\" (#1356) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nSetting a SelectedItem on a ListView when constructing a page doesn't select the item in the list on UWP.\r\n\r\n### Steps to Reproduce\r\n\r\nThis should simply require unzipping and running the reproduction -- the MainPage has a ListView which already does the work of setting the SelcetedItem.\r\n\r\n### Expected Behavior\r\n\r\nThe selected item is visually highlighted in the list.\r\n\r\n### Actual Behavior\r\n\r\nThe selected item is not visually highlighted on UWP. It is on Android and iOS.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.191934\r\n- Last known good version: Uncertain. This may have worked at some point, or maybe not.\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n  - Android: 8.0\r\n  - UWP:  16299\r\n- Android Support Library Version: (Not applicable)\r\n- Nuget Packages: (Not Applicable -- baseline Forms project/updated packages)\r\n- Affected Devices: Devices/machines running Windows 10\r\n\r\n### Screenshots\r\n\r\n\r\n### Reproduction Link\r\n\r\n[App1.zip](https://github.com/xamarin/Xamarin.Forms/files/1543316/App1.zip)\r\n\r\n"},{"Id":"7038134317","Type":"IssuesEvent","CreatedAt":"2017-12-28T18:51:41","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1476","RelatedDescription":"Closed issue \"UWP: No way to allow ListView to select first item by default \" (#1476) at xamarin/Xamarin.Forms","RelatedBody":"\r\n###  I can't get the first item in my listview to be selected by default in UWP Xamarin.Forms app. \r\n\r\n### Steps to Reproduce\r\n\r\nHere's a SO post detailing the same behavior/issue with UWP: https://stackoverflow.com/questions/47373040/no-way-to-get-listview-to-show-initial-selected-item/47386238#47386238\r\n\r\n### Expected Behavior\r\n\r\nIf I set the SelectedItem in my listview to index 0 item, then the item should be selected by default when the view first loads. \r\n\r\n### Actual Behavior\r\n\r\nCurrently, it does not appear selected even though it's set to be selected. \r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n- Last known good version:\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - UWP: 10.0.14393.0\r\n- Nuget Packages:\r\nXamarin.Forms: 2.4.0.282\r\n\r\n- Affected Devices:\r\nPanasonic FZ-E1\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nhttps://stackoverflow.com/questions/47373040/no-way-to-get-listview-to-show-initial-selected-item/47386238#47386238\r\n\r\n"},{"Id":"7038117073","Type":"IssuesEvent","CreatedAt":"2017-12-28T18:44:54","Actor":"owlstack","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1476","RelatedDescription":"Opened issue \"UWP: No way to allow ListView to select first item by default \" (#1476) at xamarin/Xamarin.Forms","RelatedBody":"\r\n###  I can't get the first item in my listview to be selected by default in UWP Xamarin.Forms app. \r\n\r\n### Steps to Reproduce\r\n\r\nHere's a SO post detailing the same behavior/issue with UWP: https://stackoverflow.com/questions/47373040/no-way-to-get-listview-to-show-initial-selected-item/47386238#47386238\r\n\r\n### Expected Behavior\r\n\r\nIf I set the SelectedItem in my listview to index 0 item, then the item should be selected by default when the view first loads. \r\n\r\n### Actual Behavior\r\n\r\nCurrently, it does not appear selected even though it's set to be selected. \r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n- Last known good version:\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - UWP: 10.0.14393.0\r\n- Nuget Packages:\r\nXamarin.Forms: 2.4.0.282\r\n\r\n- Affected Devices:\r\nPanasonic FZ-E1\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nhttps://stackoverflow.com/questions/47373040/no-way-to-get-listview-to-show-initial-selected-item/47386238#47386238\r\n\r\n"},{"Id":"7037795901","Type":"IssuesEvent","CreatedAt":"2017-12-28T16:45:51","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1432","RelatedDescription":"Closed issue \"[UWP] ListView ItemSelected event & SelectedItem property only fires once \" (#1432) at xamarin/Xamarin.Forms","RelatedBody":"Migrated from https://bugzilla.xamarin.com/show_bug.cgi?id=28520\r\n\r\n### Description\r\nThe ItemSelected event only fires once. If a navigation occurs, going back still does not trigger the event.\r\n\r\nThis is more of a problem of the ListView not being able to update the view when the SelectedItem binding property is set to null.\r\n\r\nFrom @pauldipietro:\r\n\r\nUsing that reproduction (moving the code into a new project to be used against UWP in particular) it seems like this is still a thing where setting it to null isn't firing off the ListView's PropertyChanged event. Checked against the latest 2.3.6-nightly.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.3.5\r\n\r\n### Reproduction Link\r\n\r\n[Microsoft.Band.Portable.Sample.zip](https://github.com/xamarin/Xamarin.Forms/files/1573761/Microsoft.Band.Portable.Sample.zip)\r\n"},{"Id":"7037644007","Type":"IssuesEvent","CreatedAt":"2017-12-28T15:56:22","Actor":"keithnicholson","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1475","RelatedDescription":"Opened issue \"Live Player Build Does Not Access Xamarin Namespace\" (#1475) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nCreating a new  CrossPlatform App does not build without errors when using Live Player.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use Visual Studio (currently 15.5.2) to create a new Cros-Platform App\r\n2. On template select Blank App (choose Platform iOS only, UI Tech Xamarin.Forms, and Code Sharing Strategy (either presents similar but slightly different errors).\r\n3. Creates App\r\n4. From shared project App, open MainPage.xaml.\r\n5. Select the 'Live Run' Option\r\n6. During the build the errors start\r\n\r\n### Expected Behavior\r\nI expect to see the app execute\r\n\r\n### Actual Behavior\r\nI get the following set of errors at a minimum:]\r\n* The type or namespace name 'Xamarin' could not be found in the global namespace (are you missing an assembly reference?) --  AppDelegate.cs (Line: 1)\r\n* The name 'LoadApplication' does not exist in the current context -- AppDelegate.cs (Line: 1)\r\n* 'AppDelegate.FinishedLaunching (UIApplicaton, NSDictionary)': no suitable method found to override -- AppDelegate.cs (Line: 1)\r\n* 'App.OnStart()': no suitable method found to override -- App.xaml.cs (Line: 1)\r\n* The type or namespace name 'Xamarin' could not be found in the global namespace (are you missing an assembly reference?) --  App.xaml.cs (Line: 1)\r\n\r\n- Other items\r\n* The iOS project's packages.config file shows an earlier version of \"2.4.0.266-pre1\".  Could this have anything to do with it?  I changed the number, but that did not seem to do anything different.\r\n* Where should the Xamarin.Forms Package items be installed for the app?  \r\n* I've packaged the project for your review.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:   current\r\n- Last known good version:  have not tried before\r\n- IDE: VS 2017 15.5.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  iOS 11.2.1\r\n- Nuget Packages: At solution level - Xamarin.Forms v2.5.0.121934\r\n\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide\r\n[App4.zip](https://github.com/xamarin/Xamarin.Forms/files/1591539/App4.zip)\r\n a link to a reproduction case -->\r\n"},{"Id":"7035570725","Type":"IssuesEvent","CreatedAt":"2017-12-28T01:13:21","Actor":"kentcb","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1474","RelatedDescription":"Opened issue \"[Android] FormsApplicationActivity with singleton App no longer works 2.4 onwards\" (#1474) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nUsing a `FormsApplicationActivity` in conjunction with a singleton `App` instance no longer works correctly from 2.4 onwards. If the user hits the hardware back button, then returns to the app, a blank screen is shown instead of the current view.\r\n\r\n### Steps to Reproduce\r\n\r\nAll this is listed in the attached repros, but I'll list it here for good measure:\r\n\r\n1. Extend `FormsApplicationActivity` instead of `FormsAppCompatActivity`.\r\n2. Make the `App` instance a static singleton.\r\n3. Use XF 2.4 or higher.\r\n4. After starting the app, hit the hardware back button.\r\n5. Return to the app via the application icon.\r\n\r\nThe app will appear, but its main view will be empty.\r\n\r\n### Expected Behavior\r\n\r\nShould continue to work as it does in XF 2.3.\r\n\r\n### Actual Behavior\r\n\r\nBlank screen shown. According to my investigations, it seems like `OnAttachedToWindow` isn't being called.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.4 onwards\r\n- Last known good version: `2.3.4.214-pre5` (I wanted to try very latest 2.3 but am unable due to poor Internet right now)\r\n- IDE: VS 2017\r\n- Platform Target Frameworks:\r\n  - Android: `8.0`\r\n- Android Support Library Version: `25.4.0.2`\r\n- Affected Devices: observed on Pixel and Samsung devices\r\n\r\n### Screenshots\r\n\r\nAfter repro steps with XF 2.3 (works as expected):\r\n\r\n![xf_2 3](https://user-images.githubusercontent.com/1901832/34397107-ba086c24-ebbe-11e7-9a89-4eb87e0b9ddb.png)\r\n\r\nAfter repro steps with XF 2.5 (blank screen):\r\n\r\n![xf_2 5](https://user-images.githubusercontent.com/1901832/34397109-be978ba8-ebbe-11e7-901a-999a38fd6892.png)\r\n\r\n### Reproduction Link\r\n\r\n[XF 2.3](https://github.com/xamarin/Xamarin.Forms/files/1590155/XFRepro_XF_2.3.zip)\r\n\r\n[XF 2.5](https://github.com/xamarin/Xamarin.Forms/files/1590156/XFRepro_XF_2.5.zip)"},{"Id":"7035097579","Type":"IssuesEvent","CreatedAt":"2017-12-27T21:06:49","Actor":"enusbaum","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1473","RelatedDescription":"Opened issue \"Invalid XAML renders in Preview, passes XAML compilation then fails at runtime\" (#1473) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nRan into an issue where I had an errant character in my XAML which resulted in runtime issues. This took a while to troubleshoot because the XAML itself renders in preview and even passes compilation checks when XAML compilation is enabled. The resulting runtime experience is just a blank form with no exceptions being thrown.\r\n\r\nI have only tested this on iOS, I do not know the experience on Android\r\n\r\n### Steps to Reproduce\r\n1. Place Invalid Character after ContentPage declaration in XAML file\r\nThe following example has an invalid character on line 3\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" x:Class=\"Mobile.Example.InvalidXaml\">\r\n    >\r\n    <ContentPage.Content>\r\n        <StackLayout>\r\n            <Label Text=\"Will not render at runtime\" />\r\n        </StackLayout>\r\n\t</ContentPage.Content>\r\n</ContentPage>\r\n```\r\n\r\n### Expected Behavior\r\n\r\n- XAML preview should replicate the same experience rendering the XAML as it does at runtime\r\n- XAML compilation should throw an error\r\n\r\n### Actual Behavior\r\n\r\nXAML preview displays the form without issue, XAML passes compilation checks and runtime displays a blank form\r\n\r\n### Basic Information\r\n\r\n- Xamarin.Forms 2.5.0.121934\r\n- IDE: Visual Studio for Mac Community 7.3.2 (build 12)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS: 11.2\r\n\r\n### Screenshots\r\n\r\n#### Preview Screenshot: \r\n![Preview Screenshot](https://d3vv6lp55qjaqc.cloudfront.net/items/1F2V2Y1X3K0X3k1Y0j12/Screen%20Shot%202017-12-27%20at%203.56.07%20PM.png)\r\n#### Runtime Screenshot:\r\n![Runtime Screenshot](https://d3vv6lp55qjaqc.cloudfront.net/items/1B1d3i1r160T0P1Q470o/Screen%20Shot%202017-12-27%20at%203.56.37%20PM.png)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7038548451","Type":"PullRequestEvent","CreatedAt":"2017-12-28T21:37:14","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3142","RelatedDescription":"Merged pull request \"[src] Properly annotate designated initializers in many frameworks\" (#3142) at xamarin/xamarin-macios","RelatedBody":"Correspond to xtro `!missing-designated-initializer!` errors"},{"Id":"7038038838","Type":"PullRequestEvent","CreatedAt":"2017-12-28T18:14:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3132","RelatedDescription":"Merged pull request \"[social] Enable SLComposeServiceViewController on macOS and fix other xtro reported issues\" (#3132) at xamarin/xamarin-macios","RelatedBody":"* SLComposeServiceViewController has [Mac] specific stuff but was\nexcluded under a (too large) `#if !MONOMAC`\n\n* SLComposeSheetConfigurationItem::init is a designated initializer\n\n* SLRequest::addMultipartData:withName:type: is macOS-only and missing\n\nxtro results:\n!missing-designated-initializer! SLComposeSheetConfigurationItem::init is missing an [DesignatedInitializer] attribute\n!missing-selector! SLComposeServiceViewController::charactersRemaining not bound\n!missing-selector! SLComposeServiceViewController::contentText not bound\n!missing-selector! SLComposeServiceViewController::placeholder not bound\n!missing-selector! SLComposeServiceViewController::setCharactersRemaining: not bound\n!missing-selector! SLComposeServiceViewController::setPlaceholder: not bound\n!missing-selector! SLComposeServiceViewController::textView not bound\n!missing-selector! SLRequest::addMultipartData:withName:type: not bound\n!missing-type! SLComposeServiceViewController not bound"},{"Id":"7037842718","Type":"PullRequestEvent","CreatedAt":"2017-12-28T17:01:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3142","RelatedDescription":"Opened pull request \"[src] Properly annotate designated initializers in many frameworks\" (#3142) at xamarin/xamarin-macios","RelatedBody":"Correspond to xtro `!missing-designated-initializer!` errors"},{"Id":"7037395231","Type":"PullRequestEvent","CreatedAt":"2017-12-28T14:36:55","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3141","RelatedDescription":"Opened pull request \"[tests][intro] Start cleaning up old *and* non-required availability attributes (WIP)\" (#3141) at xamarin/xamarin-macios","RelatedBody":"We normally frown on large scale _cosmetic_ changes, mostly because it breaks git's history (very useful) and makes merging branches harder and more error prone (very annoying).\n\nHowever we require, right now, such changes to remove our old, mcs-based, pre-processor (pmcs) so it's a _good_ time to address the old, unneeded availability attributes - since most of them are re-written for our next milestone.\n\nThis won't change the final application size in most cases, as the linker removes them, but it will make the (unlinked) platform assemblies smaller. This means they will load faster (e.g. by mtouch, mmp, IDE, workbooks...) and will reduce the time/memory needed to reflect them."},{"Id":"7037261654","Type":"PullRequestEvent","CreatedAt":"2017-12-28T13:51:35","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3136","RelatedDescription":"Merged pull request \"[macos][photosui] Make PHLivePhotoView available on macOS\" (#3136) at xamarin/xamarin-macios","RelatedBody":"xtro results:\n!missing-enum! PHLivePhotoViewContentMode not bound\n!missing-enum! PHLivePhotoViewPlaybackStyle not bound\n!missing-protocol! PHLivePhotoViewDelegate not bound\n!missing-selector! PHLivePhotoView::audioVolume not bound\n!missing-selector! PHLivePhotoView::contentMode not bound\n!missing-selector! PHLivePhotoView::delegate not bound\n!missing-selector! PHLivePhotoView::isMuted not bound\n!missing-selector! PHLivePhotoView::livePhoto not bound\n!missing-selector! PHLivePhotoView::livePhotoBadgeView not bound\n!missing-selector! PHLivePhotoView::setAudioVolume: not bound\n!missing-selector! PHLivePhotoView::setContentMode: not bound\n!missing-selector! PHLivePhotoView::setDelegate: not bound\n!missing-selector! PHLivePhotoView::setLivePhoto: not bound\n!missing-selector! PHLivePhotoView::setMuted: not bound\n!missing-selector! PHLivePhotoView::startPlaybackWithStyle: not bound\n!missing-selector! PHLivePhotoView::stopPlaybackAnimated: not bound\n!missing-type! PHLivePhotoView not bound"},{"Id":"7036572801","Type":"IssuesEvent","CreatedAt":"2017-12-28T09:36:28","Actor":"sushihangover","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3140","RelatedDescription":"Opened issue \"VNDetectBarcodesRequest is incorrectly tagged as `[Abstract]` in binding\" (#3140) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nTry to instance a VNDetectBarcodesRequest class\r\n\r\nRe: https://stackoverflow.com/a/48004821/4984832\r\n\r\n> var detectBarcodesRequest = new VNDetectBarcodesRequest((request, error) => { });\r\n \r\n### Expected Behavior\r\n\r\nCompiles and creates Instance var.\r\n\r\n### Actual Behavior\r\n\r\nAbstract compile error due to  `[Abstract]` attribute : [vision.cs#L156](https://github.com/xamarin/xamarin-macios/blob/1690ccbc991ab59835f76a15ef510cd182259915/src/vision.cs#L156)\r\n\r\nApple Docs: [VNDetectBarcodesRequest](https://developer.apple.com/documentation/vision/vndetectbarcodesrequest) \r\n\r\n### Environment\r\n\r\n```\r\nXamarin.iOS Version: 11.6.1.2\r\n```\r\n\r\n"},{"Id":"7034095163","Type":"PullRequestEvent","CreatedAt":"2017-12-27T14:52:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3134","RelatedDescription":"Merged pull request \"Fix behaviour of NSMenuItem.Activated on top of modal windows.\" (#3134) at xamarin/xamarin-macios","RelatedBody":"https://github.com/xamarin/xamarin-macios/pull/3091 with an additional [Preserve]"},{"Id":"7031994457","Type":"IssuesEvent","CreatedAt":"2017-12-26T22:45:04","Actor":"emaf","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3139","RelatedDescription":"Opened issue \"Unable to launch app on device connected via network\" (#3139) at xamarin/xamarin-macios","RelatedBody":"\r\nThis issue does not always happen, I was able to run apps on devices connected via network before. \r\nWhile I wasn't able to run apps on device wirelessly, it did work using USB. @spouliot asked me to try running an app from Xcode and it fixed the issue, after that, I was able to run apps on a device connected via network from VS.\r\n\r\nThis issue happened on both VS and VSfM.\r\n\r\n### Steps to Reproduce\r\nTry to run an iOS app on a device connected via network\r\n\r\n### Expected Behavior\r\nThe app is launched on the device connected via network\r\n\r\n### Actual Behavior\r\nmlaunch throws an error:\r\nerror HE0032: Could not mount developer tools on 'Ema's iPhone': Object reference not set to an instance of an object\r\n\r\n### Environment\r\nRuntime:\r\n\tMono 5.4.1.6 (2017-06/1f4613aa1ac) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010006\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.1.0.555 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.0.2 (Visual Studio Community)\r\nHash: 76ea46e3\r\nBranch: master\r\nBuild date: 2017-12-22 10:25:26-0500\r\n\r\n### Build Logs\r\nhttps://gist.github.com/emaf/7066a9098c9822fb55380aac0000b37a\r\n\r\n"},{"Id":"7028013951","Type":"IssuesEvent","CreatedAt":"2017-12-25T05:51:29","Actor":"HobDev","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3138","RelatedDescription":"Opened issue \"Unable to Install System.Threading.Overlapped\" (#3138) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new xamarin.forms project\r\n2. Add Xamarin.Mac cocoa project\r\n3. Install SerialPortStreamCore nuget to it.\r\n\r\n### Expected Behavior\r\nThe nuget should be added successfully to the project\r\n\r\n### Actual Behavior\r\nThe nuget adds itself successfully to netstandard shared project. But fails to add to Xamarin.Mac. I need this package for Serial port programming. \r\n\r\n### Environment\r\nVisual Studio for Mac Community version 7.3.2(build 12)\r\nXamarin.Mac Version: 4.0.0.214 (Visual Studio Community)\r\nOperating System: Mac OS X 10.13.2\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.2 (build 12)\r\nInstallation UUID: ff0b8bd1-b591-48e7-8748-666f21ab8827\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.3/Sdks\r\nSDK Versions:\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/paramjit/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.214 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703020012\r\nGit revision: 7d0c9d7ad46b125cf4b7bbf9532c0531b6433ce6\r\nBuild date: 2017-12-12 14:03:18-05\r\nXamarin addins: 6dddaa49fbecb2695fcdcd6b712eb269e288518c\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nMFractor 3.03.00\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nPackage 'System.Threading.Overlapped.4.3.0 : Microsoft.NETCore.Platforms [1.1.0, ), System.Resources.ResourceManager [4.3.0, ), System.Runtime [4.3.0, ), System.Runtime.Handles [4.3.0, )' does not exist in project 'CallTech.MacOS'\r\n\r\nCould not install package 'System.Threading.Overlapped 4.3.0'. You are trying to install this package into a project that targets 'Xamarin.Mac,Version=v2.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"946472572895588353","CreatedAt":"2017-12-28T20:07:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with C# 7 with @jamesmontemagno in the 4th post in our #12DaysofXamarin countdown: https://t.co/nWuAmDsr0R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"946430293401067521","CreatedAt":"2017-12-28T17:19:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/VlbopDlbd6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":16,"RawContent":null},{"Id":"946110438961541121","CreatedAt":"2017-12-27T20:08:01+00:00","UserScreenname":"xamarinhq","Text":"Our eBook on building \"Enterprise Application Patterns using #XamarinForms\" takes the 5th spot in our… https://t.co/HPidr9WU7g","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":108,"FavoriteCount":51,"RawContent":null},{"Id":"946049788914683905","CreatedAt":"2017-12-27T16:07:01+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/YpY9vtHgsp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":16,"RawContent":null},{"Id":"945745033117995009","CreatedAt":"2017-12-26T19:56:01+00:00","UserScreenname":"xamarinhq","Text":"\"5 Ways to Boost #XamarinForms App Startup Time\" from David Ortinau marks the halfway point at No. 6 the… https://t.co/ch9JL4J1fe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":35,"RawContent":null},{"Id":"944704928630693888","CreatedAt":"2017-12-23T23:03:01+00:00","UserScreenname":"xamarinhq","Text":"Today in the #12DaysofXamarin, learn how to make your UIs adaptive with #XamarinForms with the 7th most popular… https://t.co/0g7tgzIrEZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":54,"RawContent":null},{"Id":"944297266629705728","CreatedAt":"2017-12-22T20:03:07+00:00","UserScreenname":"xamarinhq","Text":"Get started with async/await in the 8th post of the #12DaysofXamarin: https://t.co/MgpLPtLd2z https://t.co/Yt2iACcgfI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":13,"RawContent":null},{"Id":"944251690777284608","CreatedAt":"2017-12-22T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss your chance to win a three-month @XamarinU subscription just for checking out our new Getting Started Gu… https://t.co/QhYiE3ZQJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"943931836278935554","CreatedAt":"2017-12-21T19:51:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add face tracking and live recognition to your Android apps with this tutorial from @nishanil, coming… https://t.co/hAo63TPY8D","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":24,"RawContent":null},{"Id":"943888044314255360","CreatedAt":"2017-12-21T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/hAQHh5mO3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":24,"RawContent":null},{"Id":"943570956777414656","CreatedAt":"2017-12-20T19:57:01+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin continues, with @pierceboggan explaining how to build #XamarinForms apps with #dotNET Standard… https://t.co/ITkVs5QaQ6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":26,"RawContent":null},{"Id":"943522130012057600","CreatedAt":"2017-12-20T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":37,"RawContent":null},{"Id":"943210078836023297","CreatedAt":"2017-12-19T20:03:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to \"Build Android Apps with Entity Framework\" in post 11 of our #12DaysofXamarin countdown:… https://t.co/RWQ4wzrunW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":28,"RawContent":null},{"Id":"943165786780258304","CreatedAt":"2017-12-19T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"#dotNET Standard comes to the #XamarinForms project templates: https://t.co/ZSlHPxw0IV https://t.co/N9tLs5p3hh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":122,"FavoriteCount":58,"RawContent":null},{"Id":"942806196209307649","CreatedAt":"2017-12-18T17:18:08+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin is back for the 4th year in a row, counting down the top blog posts of 2017! Will your favorit… https://t.co/pwK3cBUg2s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"942789304971091968","CreatedAt":"2017-12-18T16:11:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/pXSan0xaif","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":20,"RawContent":null},{"Id":"942545953113935872","CreatedAt":"2017-12-18T00:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/GSLirxwKNb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":32,"RawContent":null},{"Id":"942199665780551680","CreatedAt":"2017-12-17T01:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":22,"RawContent":null},{"Id":"941775247119921152","CreatedAt":"2017-12-15T21:01:30+00:00","UserScreenname":"xamarinhq","Text":"Win a three-month @XamarinU subscription just for checking out our new Getting Started Guide! Details on how to ent… https://t.co/At0addXQsO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null},{"Id":"941710442497441798","CreatedAt":"2017-12-15T16:44:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @nishanil shows you how to add #facetracking and live recognition to your Android app: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2017-12-29T05:30:38.3867427Z","RunDurationInMilliseconds":3904}