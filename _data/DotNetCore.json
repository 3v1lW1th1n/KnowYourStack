{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":3,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":23,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":47,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null},{"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","PublishedOn":"2017-08-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current blog post focuses on &#8220;Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance&#8220;. Just as a reminder, the four introductory blog posts of this series are (or... <a aria-label=\"read more about Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","RawContent":null},{"Title":"The week in .NET – Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!","PublishedOn":"2017-08-23T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previous posts: .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore Visual Studio extension of the week: Project File Tools The Project File Tools Visual Studio extension provides package name and version IntelliSense, tooltips for... <a aria-label=\"read more about The week in .NET &#8211; Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/","RawContent":null},{"Title":".NET Framework Update for AppContext","PublishedOn":"2017-08-18T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"A new update for .NET Framework is now available for the AppContext class. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10. The AppContext class was introduced in the... <a aria-label=\"read more about .NET Framework Update for AppContext\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6470589367","Type":"PullRequestEvent","CreatedAt":"2017-08-17T09:24:13","Actor":"stefanov-stefan","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Opened pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6404144202","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:09:52","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/84","RelatedDescription":"Opened issue \"How can we embed images into the .NET foundation website?\" (#84) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding images. I'd prefer to _not to adjust CSP_ policy to add the reactiveui.net and instead have some way to pull-request images into this repository.\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6541935607","Type":"IssuesEvent","CreatedAt":"2017-09-01T22:57:04","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/31","RelatedDescription":"Opened issue \"Issues with .NET Standard 2.0 with .NET Framework & NuGet\" (#31) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\nWe've designed .NET Standard & our tooling so that projects targeting .NET Framework 4.6.1 can consume NuGet packages & projects targeting .NET Standard 2.0 or earlier. Unfortunately, we've seen a few issues around that scenario. The purpose of this document is to summarize the issues, outline our plan on addressing them, and providing workarounds you can deploy with today's state of our tooling.\r\n\r\n## Symptoms and root cause\r\n\r\nThe [primary symptom](https:/github.com/dotnet/standard/issues/410) is that applications crash with a `FileLoadException` or a `FileNotFoundException`. Another symptom is warnings at build time regarding assembly versions. This is due to one or both of the following issues:\r\n\r\n1. Missing binding redirects\r\n2. Missing binaries that come from indirect NuGet packages\r\n\r\n### Missing binding redirects\r\n\r\n.NET Standard 1.x was based around contracts. Many of these contracts shipped with .NET Framework 4.5 and later. However, different versions of .NET Framework picked up different versions of these contracts, as by-design of contract versioning. As a side effect of marking .NET Framework 4.6.1 as implementing .NET Standard 2.0, some projects will now start picking up binaries built for .NET Standard 1.5 and 1.6 (as opposed to previously where .NET Framework 4.6.1 was considered as implementing .NET Standard 1.4). This results in mismatches of the assembly versions between what was shipped in .NET Framework and what was part of .NET Standard 1.5/1.6.\r\n\r\nThis can be addressed by binding redirects. As writing them by hand sucks, we added an [Automatic Binding Redirect Generation][abrg] feature in .NET Framework 4.5.1. This feature is opt-in. Unfortunately, it's not enabled based on target framework, but by which target framework was selected when the project was created (as the feature is turned on via an MSBuild property that is conditionally emitted by the template). In practice, this means it's mostly off you often upgrade existing projects, rather than creating new ones.\r\n\r\n[abrg]: https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection\r\n\r\n### Missing binaries\r\n\r\nThere are two primary flavors of NuGet: `packages.config` and `PackageReference`.\r\n\r\n* With `packages.config`, each project has a config file with a flattened graph of all the NuGet dependencies. The project file in turn has direct links to all the assets. The assets are selected at install time. None of this includes indirect NuGet references coming from referenced projects.\r\n\r\n* With `PackageReference` each project contains MSBuild `PackageReference` items. The project file contains no references to any assets as the assets are selected at build time. Package restore will compute the graph of all packages, including indirect NuGet references coming from referenced projects.\r\n\r\nThe default for .NET Framework projects is `packages.config`. This ensures more compatibility because `PackageReference` doesn't support all the features that `packages.config` did, for example, PowerShell install scripts and content.\r\n\r\nThe only supported mode for SDK-style projects (.NET Core/.NET Standard) is `PackageReference`. This means that a .NET Framework project referencing a .NET Standard project ends up crossing the streams between two different NuGet models. When the .NET Standard project references NuGet packages that the .NET Framework project doesn't reference, the application ends up missing all binaries coming from those packages.\r\n\r\nWhy has this worked before? Because with` packages.config`, all dependencies are copied to each project's output folder. MSBuild copies them up from there. With `PackageReference`, we don't copy the binaries because it relies on the consuming project to see its dependencies and extract the proper asset itself. This allows the consuming project to pick up the right assets for packages that use bait & switch (which many of the .NET packages must do).\r\n\r\n### Plan\r\n\r\nThe plan is to address these issues moving forward as follows:\r\n\r\n1. **Converge on `PackageReference` for all project types**, including .NET Framework. The short-term plan for (1) is to start blocking project-to-project references in Visual Studio 15.4 that will end up crossing the streams between `packages.config` and `PackageReference`. This block is UI only; you can still edit the reference by editing the project by hand. The error message will instruct you to switch the .NET Framework project to `PackageReference` if you want to reference a .NET Standard project. Referencing .NET Standard binaries or NuGet packages will not require this, it's only about project-to-project references. In later releases, we plan on providing a converter. The challenge is that `packages.config` has features we can't offer for `PackagReference` across the board, in particular PowerShell install scripts and content. We'll need good guidance and mitigations, if applicable.\r\n\r\n2. **Ensure binding redirects are on by default**. Short term, this means we need to fix our target files to make sure we turn on automatic binding redirect generation. However, binding redirects don't work well in all scenarios, when there is no application project (like unit tests or add-ins). We need to work on a plan to bring the regular “higher wins” binding policy without binding redirects. This needs a proposal and proper vetting, but it seems we've reached the point where this is necessary.\r\n\r\n## Workarounds\r\n\r\n### Regular .NET Framework projects\r\n\r\n1. Enable [automatic binding redirects][abrg] in the root .NET Framework application.\r\n2. Make sure your root application project doesn't use `packages.config` but uses `PackageReference` for NuGet packages\r\n    * If you currently don't have `packages.config`, simply add `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` to your project file\r\n    * If you currently do have a `packages.config`, convert the contents to packages references in the project file. The syntax is like this:\r\n        - `<PackageReference Include=\"package-id\" Version=\"package-version\" />`\r\n\r\n### ASP.NET web applications and web sites\r\n\r\n1. Web applications and web sites don't support automatic binding redirect generation. In order to resolve binding conflicts, you need to double click the warning in the error list and Visual Studio will add them to your `web.config` file.\r\n2. In web application projects, you should enable `PackageReference` like mentioned above. In web sites, you cannot use `PackageReference` as there is no project file. In that case, you need to install all NuGet packages into your web site that any of the direct or indirect project references depend on.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to [https://github.com/dotnet/standard/issues/481]"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6627436397","Type":"IssuesEvent","CreatedAt":"2017-09-23T02:41:27","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14148","RelatedDescription":"Opened issue \"[Arm64/Unix] New failure -- eventpipesmoke\" (#14148) at dotnet/coreclr","RelatedBody":"tracing/eventpipesmoke/eventpipesmoke/eventpipesmoke.sh\r\n\r\n```\r\n./corerun eventpipesmoke.exe\r\nStart: Enable tracing.\r\nEnd: Enable tracing.\r\n\r\nStart: Allocation.\r\nEnd: Allocation.\r\n\r\nStart: Disable tracing.\r\nEnd: Disable tracing.\r\n\r\nCreated 387 bytes of data\r\nExpected: 100\r\nActual: 0\r\n```\r\n\r\n@dotnet/arm64-contrib "},{"Id":"6627381189","Type":"PullRequestEvent","CreatedAt":"2017-09-23T01:50:32","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14147","RelatedDescription":"Opened pull request \"Fix for a special CoreRT helper CORINFO_HELP_JIT_PINVOKE_BEGIN\" (#14147) at dotnet/coreclr","RelatedBody":"There is special CoreRT helper that is not unmanaged call itself, but requires all GC refs to be spilled before it.\r\n\r\nFix dotnet/corert#4214."},{"Id":"6627333568","Type":"PullRequestEvent","CreatedAt":"2017-09-23T01:09:32","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14146","RelatedDescription":"Opened pull request \"﻿Remove Monitor asm helpers\" (#14146) at dotnet/coreclr","RelatedBody":"- Removed asm helpers on Windows and used portable C++ helpers instead\r\n- Rearranged fast path code to improve them a bit and match the asm more closely\r\n\r\nPerf:\r\n- The asm helpers are a bit faster. The code generated for the portable helpers is almost the same now, the remaining differences are:\r\n  - There were some layout issues where hot paths were in the wrong place and return paths were not cloned. Instrumenting some of the tests below with PGO on x64 resolved all of the layout issues. I couldn't get PGO instrumentation to work on x86 but I imagine it would be the same there.\r\n  - Register usage\r\n    - x64: All of the Enter functions are using one or two (TryEnter is using two) callee-saved registers for no apparent reason, forcing them to be saved and restored. r10 and r11 seem to be available but they're not being used.\r\n    - x86: Similarly to x64, the compiled functions are pushing and popping 2-3 additional registers in the hottest fast paths.\r\n    - I believe this is the main remaining gap and PGO is not helping with this\r\n- On Linux, perf is >= before for the most part\r\n- Perf tests used for below are updated in PR https://github.com/dotnet/coreclr/pull/13670\r\n\r\nNumbers (no PGO):\r\n\r\nWindows x64\r\n\r\n```\r\nSpin                                              Left score       Right score      ∆ Score %\r\n------------------------------------------------  ---------------  ---------------  ---------\r\nMonitorEnterExitLatency 2T                          800.56 ±0.33%    821.97 ±0.30%      2.67%\r\nMonitorEnterExitLatency 4T                         1533.25 ±0.34%   1553.82 ±0.13%      1.34%\r\nMonitorEnterExitLatency 7T                         1676.14 ±0.26%   1678.14 ±0.18%      0.12%\r\nMonitorEnterExitThroughput Delay 1T                5174.77 ±0.25%   5125.56 ±0.27%     -0.95%\r\nMonitorEnterExitThroughput Delay 2T                4982.38 ±0.22%   4937.79 ±0.19%     -0.90%\r\nMonitorEnterExitThroughput Delay 4T                4720.41 ±0.37%   4694.09 ±0.24%     -0.56%\r\nMonitorEnterExitThroughput Delay 7T                3741.20 ±0.33%   3778.06 ±0.20%      0.99%\r\nMonitorEnterExitThroughput_AwareLock 1T           63445.04 ±0.20%  61540.28 ±0.23%     -3.00%\r\nMonitorEnterExitThroughput_ThinLock 1T            59720.83 ±0.20%  59754.62 ±0.12%      0.06%\r\nMonitorReliableEnterExitLatency 2T                  809.31 ±0.23%    809.58 ±0.41%      0.03%\r\nMonitorReliableEnterExitLatency 4T                 1569.47 ±0.45%   1577.43 ±0.71%      0.51%\r\nMonitorReliableEnterExitLatency 7T                 1681.65 ±0.25%   1678.01 ±0.20%     -0.22%\r\nMonitorReliableEnterExitThroughput Delay 1T        4956.40 ±0.41%   4957.46 ±0.24%      0.02%\r\nMonitorReliableEnterExitThroughput Delay 2T        4794.52 ±0.18%   4756.23 ±0.25%     -0.80%\r\nMonitorReliableEnterExitThroughput Delay 4T        4560.22 ±0.25%   4522.03 ±0.35%     -0.84%\r\nMonitorReliableEnterExitThroughput Delay 7T        3902.19 ±0.55%   3875.81 ±0.13%     -0.68%\r\nMonitorReliableEnterExitThroughput_AwareLock 1T   61944.11 ±0.20%  58083.95 ±0.08%     -6.23%\r\nMonitorReliableEnterExitThroughput_ThinLock 1T    59632.31 ±0.25%  58972.48 ±0.07%     -1.11%\r\nMonitorTryEnterExitThroughput_AwareLock 1T        62345.13 ±0.14%  57159.99 ±0.14%     -8.32%\r\nMonitorTryEnterExitThroughput_ThinLock 1T         59725.76 ±0.15%  58050.35 ±0.16%     -2.81%\r\n------------------------------------------------  ---------------  ---------------  ---------\r\nTotal                                              6795.49 ±0.28%   6723.21 ±0.23%     -1.06%\r\n```\r\n\r\nWindows x86\r\n\r\n```\r\nSpin                                              Left score       Right score      ∆ Score %\r\n------------------------------------------------  ---------------  ---------------  ---------\r\nMonitorEnterExitLatency 2T                          958.97 ±0.37%    987.28 ±0.32%      2.95%\r\nMonitorEnterExitLatency 4T                         1675.18 ±0.41%   1704.64 ±0.08%      1.76%\r\nMonitorEnterExitLatency 7T                         1825.49 ±0.09%   1769.50 ±0.12%     -3.07%\r\nMonitorEnterExitThroughput Delay 1T                5083.01 ±0.27%   5047.10 ±0.37%     -0.71%\r\nMonitorEnterExitThroughput Delay 2T                4854.54 ±0.13%   4825.31 ±0.14%     -0.60%\r\nMonitorEnterExitThroughput Delay 4T                4628.89 ±0.17%   4579.92 ±0.56%     -1.06%\r\nMonitorEnterExitThroughput Delay 7T                4125.52 ±0.48%   4096.78 ±0.20%     -0.70%\r\nMonitorEnterExitThroughput_AwareLock 1T           61841.28 ±0.13%  57429.31 ±0.44%     -7.13%\r\nMonitorEnterExitThroughput_ThinLock 1T            59746.69 ±0.19%  57971.43 ±0.10%     -2.97%\r\nMonitorReliableEnterExitLatency 2T                  983.26 ±0.22%    998.25 ±0.33%      1.52%\r\nMonitorReliableEnterExitLatency 4T                 1758.10 ±0.14%   1723.63 ±0.19%     -1.96%\r\nMonitorReliableEnterExitLatency 7T                 1832.24 ±0.08%   1776.61 ±0.10%     -3.04%\r\nMonitorReliableEnterExitThroughput Delay 1T        5023.19 ±0.05%   4980.49 ±0.08%     -0.85%\r\nMonitorReliableEnterExitThroughput Delay 2T        4846.04 ±0.03%   4792.58 ±0.11%     -1.10%\r\nMonitorReliableEnterExitThroughput Delay 4T        4608.14 ±0.09%   4574.90 ±0.06%     -0.72%\r\nMonitorReliableEnterExitThroughput Delay 7T        4123.20 ±0.10%   4075.92 ±0.11%     -1.15%\r\nMonitorReliableEnterExitThroughput_AwareLock 1T   57951.11 ±0.11%  57006.12 ±0.21%     -1.63%\r\nMonitorReliableEnterExitThroughput_ThinLock 1T    58006.06 ±0.18%  58018.28 ±0.07%      0.02%\r\nMonitorTryEnterExitThroughput_AwareLock 1T        60701.63 ±0.04%  53374.77 ±0.15%    -12.07%\r\nMonitorTryEnterExitThroughput_ThinLock 1T         58169.82 ±0.05%  56023.58 ±0.69%     -3.69%\r\n------------------------------------------------  ---------------  ---------------  ---------\r\nTotal                                              7037.46 ±0.17%   6906.42 ±0.22%     -1.86%\r\n```\r\n\r\nLinux x64\r\n\r\n```\r\nSpin repeater                                    Left score       Right score      ∆ Score %\r\n-----------------------------------------------  ---------------  ---------------  ---------\r\nMonitorEnterExitLatency 2T                        3755.92 ±1.51%   3802.80 ±0.62%      1.25%\r\nMonitorEnterExitLatency 4T                        3448.14 ±1.69%   3493.84 ±1.58%      1.33%\r\nMonitorEnterExitLatency 7T                        2593.97 ±0.13%   2655.21 ±0.15%      2.36%\r\nMonitorEnterExitThroughput Delay 1T               4854.52 ±0.12%   4873.08 ±0.11%      0.38%\r\nMonitorEnterExitThroughput Delay 2T               4659.19 ±0.85%   4695.61 ±0.38%      0.78%\r\nMonitorEnterExitThroughput Delay 4T               4163.01 ±1.46%   4190.94 ±1.37%      0.67%\r\nMonitorEnterExitThroughput Delay 7T               3012.69 ±0.45%   3123.75 ±0.32%      3.69%\r\nMonitorEnterExitThroughput_AwareLock 1T          56665.09 ±0.16%  58524.86 ±0.24%      3.28%\r\nMonitorEnterExitThroughput_ThinLock 1T           57476.36 ±0.68%  57573.08 ±0.61%      0.17%\r\nMonitorReliableEnterExitLatency 2T                3952.35 ±0.45%   3937.80 ±0.49%     -0.37%\r\nMonitorReliableEnterExitLatency 4T                3001.75 ±1.02%   3008.55 ±0.76%      0.23%\r\nMonitorReliableEnterExitLatency 7T                2456.20 ±0.65%   2479.78 ±0.09%      0.96%\r\nMonitorReliableEnterExitThroughput Delay 1T       4907.10 ±0.85%   4940.83 ±0.23%      0.69%\r\nMonitorReliableEnterExitThroughput Delay 2T       4750.81 ±0.62%   4725.81 ±0.87%     -0.53%\r\nMonitorReliableEnterExitThroughput Delay 4T       4329.93 ±1.18%   4360.67 ±1.04%      0.71%\r\nMonitorReliableEnterExitThroughput Delay 7T       3180.52 ±0.27%   3255.88 ±0.51%      2.37%\r\nMonitorReliableEnterExitThroughput_AwareLock 1T  54559.89 ±0.09%  55785.74 ±0.20%      2.25%\r\nMonitorReliableEnterExitThroughput_ThinLock 1T   55936.06 ±0.36%  55519.74 ±0.80%     -0.74%\r\nMonitorTryEnterExitThroughput_AwareLock 1T       52694.96 ±0.18%  54282.77 ±0.12%      3.01%\r\nMonitorTryEnterExitThroughput_ThinLock 1T        54942.18 ±0.24%  55031.84 ±0.38%      0.16%\r\n-----------------------------------------------  ---------------  ---------------  ---------\r\nTotal                                             8326.45 ±0.65%   8420.07 ±0.54%      1.12%\r\n```"},{"Id":"6627329648","Type":"PullRequestEvent","CreatedAt":"2017-09-23T01:06:08","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14143","RelatedDescription":"Merged pull request \"Respond to Feedback #14139\" (#14143) at dotnet/coreclr","RelatedBody":"@BruceForstall PTAL"},{"Id":"6627326781","Type":"PullRequestEvent","CreatedAt":"2017-09-23T01:03:42","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14046","RelatedDescription":"Merged pull request \"[Arm64/Arm] Favor emitActualTypeSize for non-memory\" (#14046) at dotnet/coreclr","RelatedBody":"In general, for ARM/ARM64 emitActualTypeSize should be used for register operations, while emitTypeSize() should be used for memory operations.\r\n\r\nThis PR, fixes all Arm64 cases and shared Arm64 & Arm cases.  Arm only cases are not touched.\r\n\r\nAlso remove bogus CQ ToDo\r\n\r\nFixes #13917"},{"Id":"6627326779","Type":"IssuesEvent","CreatedAt":"2017-09-23T01:03:42","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13917","RelatedDescription":"Closed issue \"[Arm64] JIT/opt/Enum/hasflag/hasflag.sh fails\" (#13917) at dotnet/coreclr","RelatedBody":"```\r\ncorerun hasflag.exe\r\n\r\nAssert failure(PID 19790 [0x00004d4e], Thread: 19790 [0x4d4e]): Assertion failed 'isValidGeneralDatasize(size)' in 'P:ByrefG(byref,ubyte):bool' (IL size 19)\r\n\r\n    File: src/jit/emitarm64.cpp Line: 5160\r\n    Image: bin/tests/pr1/Tests/coreoverlay/corerun\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6626722521","Type":"IssuesEvent","CreatedAt":"2017-09-22T20:49:48","Actor":"randomizedthinking","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7678","RelatedDescription":"Closed issue \"dotnet: failed to create a F# project on Debian with SDK 2.0.0\" (#7678) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n    dotnet new console -lang F#\r\n\r\n## Expected  behavior\r\n\r\nA F# project is created.\r\n\r\n## Actual behavior\r\n\r\nThe following error is received.\r\n\r\n    The template \"Console Application\" was created successfully.                                                                                                                                                                                  \r\n    \r\n    Processing post-creation actions...\r\n    Running 'dotnet restore' on /home/xxx/fsharp/fsharp.fsproj...\r\n      Restoring packages for /home/xxx/fsharp/fsharp.fsproj...\r\n    \r\n    Restore failed.\r\n    Post action failed.\r\n    Description: Restore NuGet packages required by this project.\r\n    Manual instructions: Run 'dotnet restore'\r\n\r\nAlso, a manual call of `dotnet restore` does nothing. Build and run will fail as well.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n    .NET Command Line Tools (2.0.0)\r\n    \r\n    Product Information:\r\n     Version:            2.0.0\r\n     Commit SHA-1 hash:  cdcd1928c9\r\n    \r\n    Runtime Environment:\r\n     OS Name:     debian\r\n     OS Version:  9\r\n     OS Platform: Linux\r\n     RID:         linux-x64\r\n     Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n    \r\n    Microsoft .NET Core Shared Framework Host\r\n    \r\n      Version  : 2.0.0\r\n      Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d"},{"Id":"6626705457","Type":"IssuesEvent","CreatedAt":"2017-09-22T20:45:13","Actor":"jcouv","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7704","RelatedDescription":"Opened issue \"CLI: namespace error on fresh VB project\" (#7704) at dotnet/cli","RelatedBody":"@jcouv commented on [Fri Sep 22 2017](https://github.com/dotnet/roslyn/issues/22292)\n\nRepro:\r\n\r\n1. `mkdir 22227-cli-vb`\r\n2. `cd 22227-cli-vb`\r\n3. `dotnet new console --language=vb`\r\n4. `dotnet build` produces the namespace error below\r\n\r\n```\r\n> dotnet --version\r\n2.0.2-vspre-006949\r\n```\r\n\r\n```\r\n> dotnet build\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nvbc : error BC30113: '22227-cli-vb' is not a valid name and cannot be used as the root namespace name. [D:\\issues\\22227-cli-vb\\22227-cli-vb.vbproj]\r\n\r\nBuild FAILED.\r\n\r\nvbc : error BC30113: '22227-cli-vb' is not a valid name and cannot be used as the root namespace name. [D:\\issues\\22227-cli-vb\\22227-cli-vb.vbproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/22227\n\n---\n\n@am11 commented on [Fri Sep 22 2017](https://github.com/dotnet/roslyn/issues/22292#issuecomment-331551793)\n\nDoes vb.exe by design considers the directory name to be the root namespace unless we explicitly add normalized name in `<RootNamespace>_22227_cli_vb</RootNamespace>` in vbproj?\r\n\r\ncsc doesn't seem to rely on dirname, even when there is no namespace in the program.cs code, actual dirname has invalid (hyphen) character and `<RootNamespace>` is set to `22227-cli-vb` (with same invalid chars) in csproj.\r\n\r\nIf it's not a breaking change, would be cool if vb.exe and csc.exe behave the same way.\r\n\n\n---\n\n@jcouv commented on [Fri Sep 22 2017](https://github.com/dotnet/roslyn/issues/22292#issuecomment-331556102)\n\nIt looks like the problem is not with `vbc.exe`, but with the arguments it receives. If the `vbproj` file is named A, then there is a `/rootnamespace:A` command-line option.\r\n\r\nI'll move the issue to the CLI repo.\n\n"},{"Id":"6626338219","Type":"PullRequestEvent","CreatedAt":"2017-09-22T19:06:41","Actor":"janvorli","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7702","RelatedDescription":"Merged pull request \"Fix issues caused by adding RHEL6 support\" (#7702) at dotnet/cli","RelatedBody":"There were two issues. One was that additional arguments that are not\r\nrecognized by the build.sh script were incorrectly passed as a single\r\nargument in single-quotes to msbuild.\r\nThe second issue was that when LD_LIBRARY_PATH was not set, the\r\ndotnet-install.sh script was failing due to its using of the \"set -u\"\r\noption that prevents usage of unset variables.\r\n\r\nFix https://github.com/dotnet/cli/issues/7698"},{"Id":"6626338201","Type":"IssuesEvent","CreatedAt":"2017-09-22T19:06:41","Actor":"janvorli","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7698","RelatedDescription":"Closed issue \"dotnet-install.sh fails if LD_LIBRARY_PATH doesn't exist\" (#7698) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n```bash\r\nunset LD_LIBRARY_PATH\r\ncurl -O https://raw.githubusercontent.com/dotnet/cli/master/scripts/obtain/dotnet-install.sh\r\nchmod +x ./dotnet-install.sh\r\n./dotnet-install.sh\r\n```\r\n\r\n## Expected  behavior\r\ndotnet installed\r\n\r\n## Actual behavior\r\n\r\n```bash\r\n./dotnet-install.sh: line 210: LD_LIBRARY_PATH: unbound variable\r\n```\r\n\r\n## Workaround\r\n\r\n```bash\r\nexport LD_LIBRARY_PATH=\r\n```\r\n\r\nIt appears on Ubuntu 16.04, this env var doesn't exist.  Script should check if it exists before using.\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6626218003","Type":"PullRequestEvent","CreatedAt":"2017-09-22T18:36:12","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7703","RelatedDescription":"Opened pull request \"Update the installation scripts in release/2.0.0 branch.\" (#7703) at dotnet/cli","RelatedBody":"dotnet/cli - master has the most current scripts - updating release/2.0.0 branch.\r\n"},{"Id":"6626044250","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:52:49","Actor":"janvorli","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7702","RelatedDescription":"Opened pull request \"Fix issues caused by adding RHEL6 support\" (#7702) at dotnet/cli","RelatedBody":"There were two issues. One was that additional arguments that are not\r\nrecognized by the build.sh script were incorrectly passed as a single\r\nargument in single-quotes to msbuild.\r\nThe second issue was that when LD_LIBRARY_PATH was not set, the\r\ndotnet-install.sh script was failing due to its using of the \"set -u\"\r\noption that prevents usage of unset variables."},{"Id":"6625899481","Type":"IssuesEvent","CreatedAt":"2017-09-22T17:15:40","Actor":"KoditkarVedant","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7701","RelatedDescription":"Closed issue \"list installed dotnet core sdk versions\" (#7701) at dotnet/cli","RelatedBody":"I do not see any way using CLI tool to list all installed versions on your machine. It will be really great if we have command something like:\r\n\r\n`dotnet --versions `\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6626339968","Type":"PullRequestEvent","CreatedAt":"2017-09-22T19:07:11","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/507","RelatedDescription":"Opened pull request \"Use a file list rather than globbing NETStandard assemblies\" (#507) at dotnet/standard","RelatedBody":"This change minimizes the amount of work done during project evaluation by directly\r\nsetting the reference items to all the files/paths we know are part of the package.\r\n\r\n/cc @weshaggard @davkean \r\n\r\n#442"},{"Id":"6623847683","Type":"IssuesEvent","CreatedAt":"2017-09-22T09:04:13","Actor":"kiran-bobade","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/506","RelatedDescription":"Opened issue \"Can't use System.Configuration.Configuration manager in a .NET Standard2.0 library on .NET FX4.6\" (#506) at dotnet/standard","RelatedBody":"I have an assembly created in **NetStandard2.0**. It reads AppSettings using **System.Configuration.ConfigurationManager**. I have installed nuget package of **System.Configuration.ConfigurationManager** with version 4.4.X which is suitable for NetStandard2.0.\r\n\r\nWhen I refer this assembly in console app (.Net Core) it is reading AppSettings properly, but when I refer this assembly in old .NetFramework(4.6.X) console app it is not working and throwing an exception.\r\n\r\nPlease see the code below.\r\n\r\n**Assembly 1: NetStandard 2.0**\r\n\r\n**Nuget: System.Configuration.ConfigurationManager 4.4.0**\r\n\r\n     using System.Configuration;\r\n\r\n     namespace Bootstrapper.Lib\r\n     {\r\n         public class Bootstrapper\r\n         {           \r\n             public void LoadAppSettings()\r\n             {\r\n                   string serachPattern = ConfigurationManager.AppSettings[\"AssemblySearchPattern\"];\r\n             }\r\n        }\r\n    }\r\n**Console App: NetFx 4.6.X**\r\n\r\n\tusing System;\r\n\tusing Bootstrapper.Lib;\r\n\tnamespace Bootstrapper.Console\r\n\t{\r\n\t  class Program\r\n\t  {\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tnew Bootstrapper().LoadAppSettings();\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n**Exception After Run:**\r\n\r\n\t'Could not load file or assembly 'System.Configuration.ConfigurationManager, \r\n\t Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one \r\n\t of its dependencies. The system cannot find the file specified.'\r\n\r\n**It will work with Console App developed using .NetCore.**\r\n\r\nPlease help!!!"},{"Id":"6623489124","Type":"IssuesEvent","CreatedAt":"2017-09-22T07:27:59","Actor":"dozer75","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/505","RelatedDescription":"Opened issue \"Lots of conflicts when a project references both netstandard1.6 and netstandard2.0 projects\" (#505) at dotnet/standard","RelatedBody":"We have a classic WebApi .NET Framework project that references projects that is either netstandard1.6 and netstandard2.0.\r\n\r\nSome of our core projects uses EF Core 2.0 (which uses netstandard 2.0), while the Microsoft.AspNet.OData library references netstandard1.6. But this genereates lots of conflicts warnings on assemblies within these standards when building like these (there are more warnings than these):\r\n\r\n```\r\n1>          Encountered conflict between 'Reference:C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.0\\build\\netstandard2.0\\\\ref\\System.AppContext.dll' and 'Reference:C:\\Users\\<user>\\.nuget\\packages\\system.appcontext\\4.1.0\\ref\\netstandard1.6\\System.AppContext.dll'.  Choosing 'Reference:C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.0\\build\\netstandard2.0\\\\ref\\System.AppContext.dll' because AssemblyVersion '4.1.2.0' is greater than '4.1.0.0'.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\microsoft.win32.registry\\4.0.0\\runtimes\\unix\\lib\\netstandard1.3\\Microsoft.Win32.Registry.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\microsoft.win32.registry\\4.0.0\\runtimes\\win\\lib\\netstandard1.3\\Microsoft.Win32.Registry.dll'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.fedora.23-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\fedora.23-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.fedora.24-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\fedora.24-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.opensuse.13.2-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\opensuse.13.2-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.opensuse.42.1-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\opensuse.42.1-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.rhel.7-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\rhel.7-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.14.04-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.14.04-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.16.04-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.16.04-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.16.10-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.16.10-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\linux\\lib\\netstandard1.4\\System.Diagnostics.Process.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\osx\\lib\\netstandard1.4\\System.Diagnostics.Process.dll'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\linux\\lib\\netstandard1.4\\System.Diagnostics.Process.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\win\\lib\\netstandard1.4\\System.Diagnostics.Process.dll'.  Could not determine winner due to equal file and assembly versions.\r\n\r\n```\r\n\r\nWhat impact does these have? \r\n\r\nI thought that the idea with these standards was that they should be backward compatible? There shouldn't be any warnings for this at all. \r\n\r\nI find the whole standard thing very non-standard compatible, this is one of the problems I have mixing projects that uses different standards. So it is quite frustrating now."},{"Id":"6621338567","Type":"IssuesEvent","CreatedAt":"2017-09-21T18:47:05","Actor":"daveh101","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/504","RelatedDescription":"Opened issue \"ASP.NET 4.7.1 - The type 'Enum' is defined in an assembly that is not referenced\" (#504) at dotnet/standard","RelatedBody":"This is likely a very similar issue to #391 & #489.\r\n\r\nThere is a big chance here that I am being an absolute idiot!! But, we are looking at migrating all of our code across to using .NET Standard 2.0 instead of PCL's - this is part of our work with UWP (#489).\r\n\r\nThe issue here is now when looking at one of our websites, I get the follow issue (see image)\r\n![capture](https://user-images.githubusercontent.com/18173195/30712771-0c9b5cfa-9f05-11e7-9bba-2220e9a506db.PNG)\r\n> CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n\r\nThere is an Enum that is in a .NET Standard 2.0 project that is being referenced `this.Links[i].Type` in the `aspx` file.\r\n\r\nThere is no problem with referencing this enum in the .cs file (or other items in the .NET Standard Projects).\r\n\r\nWhat do I need to do to make this work on an ASPX file.\r\n\r\nI have tried all the bits mentioned in the related issues, but none seem to help.\r\n\r\n@weshaggard - I assume this might be one for you again?\r\n"},{"Id":"6620581246","Type":"IssuesEvent","CreatedAt":"2017-09-21T15:59:41","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/503","RelatedDescription":"Opened issue \"Referencing NETStandard.Library 2.0.0 in net461-net47 project and only using ns1.4 (or lower) libs doesn't work\" (#503) at dotnet/standard","RelatedBody":"NETStandard.Library 2.0.0 package doesn't install netstandard1.x packages in net461-net47 projects.  This is because we expected the support package to always be present on net461 and later, but when that support was implemented we dialed it back to only turn on when a netstandard1.5 or later library was referenced.\r\n\r\nAs a result installing a netstandard1.0-1.4 library in a net461-47 project and referencing NETStandard.Library 2.0.0 package will have missing dependencies.\r\n\r\nOne workaround is to use the NETStandard.Library 1.6.1 package instead.  This still has the dependencies on the individual library packages to bring in the facades.\r\n\r\nAn alternative workaround is to set `ImplicitlyExpandNETStandardFacades=true` in the project file.  This will enable all the facades for ns2.0 assemblies.\r\n"},{"Id":"6620417732","Type":"IssuesEvent","CreatedAt":"2017-09-21T15:28:55","Actor":"Priya-John","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/502","RelatedDescription":"Opened issue \"System.Web.Security is not supported in .NetStandard2.0\" (#502) at dotnet/standard","RelatedBody":"is System.Web.Security not supported in .NetStandard2.0.. I am unable to reference that in my project 2017 @weshaggard  @ericstj "}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6627586031","Type":"PullRequestEvent","CreatedAt":"2017-09-23T05:17:54","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24222","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-25723-00, beta-25723-00, respectively (master)\" (#24222) at dotnet/corefx","RelatedBody":""},{"Id":"6627511680","Type":"PullRequestEvent","CreatedAt":"2017-09-23T03:55:29","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24221","RelatedDescription":"Merged pull request \"SSLStream : Fixed spelling mistake in file name (extra a)\" (#24221) at dotnet/corefx","RelatedBody":"In all the reviews, I seemed to have missed a spelling mistake and the file was in the incorrect folder level for the new classes"},{"Id":"6627362706","Type":"PullRequestEvent","CreatedAt":"2017-09-23T01:34:40","Actor":"Drawaes","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24221","RelatedDescription":"Opened pull request \"SSLStream : Fixed spelling mistake in file name (extra a)\" (#24221) at dotnet/corefx","RelatedBody":""},{"Id":"6627318796","Type":"IssuesEvent","CreatedAt":"2017-09-23T00:58:54","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24211","RelatedDescription":"Closed issue \"HttpClient is not able to send Client certificate unless the cert is in Windows Cert Store\" (#24211) at dotnet/corefx","RelatedBody":"HttpClient is using HttpClientHandler  to attach a client certificate to the request sent to a server.\r\nThe certificate isn't being attached when ClientCertificateOptions is set to `Manual` mode and the client cert is not in the Windows Certificate Store. I looked through the code in GitHub and it looks that the provided client cert is always being verified for WinRT against a \"MY\" local windows cert store.\r\nThe call is made to https://github.com/dotnet/corefx/blob/472b8d8ec212c2afb107dea305b4624c4989a79f/src/Common/src/System/Net/Security/CertificateHelper.Uap.cs \r\nline 35 in from this code https://github.com/dotnet/corefx/blob/f7bc8b413406e94549f21be79e67641f11ae8266/src/System.Net.Http/src/uap/System/Net/HttpClientHandler.cs\r\n\r\nPlease see the sample code below:\r\n\r\n`using System;\r\nusing System.Net.Http;\r\nusing System.Security.Cryptography.X509Certificates;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace CertClient\r\n{\r\n    public class Program\r\n    {\r\n        private static async Task Main(string[] args)\r\n        {\r\n            var result = await GetSecureApiResultsAsync();\r\n            Console.WriteLine(result);\r\n            Console.WriteLine(\"Press any key to continue...\");\r\n            Console.ReadKey();\r\n        }\r\n\r\n        public static async Task<string> GetSecureApiResultsAsync()\r\n        {\r\n            //create an HttpClient handler\r\n            using (var handler = new HttpClientHandler())\r\n            {\r\n                //we need to configure the handler with client certificate. \r\n                //This is where it gets interesting\r\n\r\n                //set client certificate to manual mode so we can provide a client certificate we want.\r\n                handler.ClientCertificateOptions = ClientCertificateOption.Manual;\r\n\r\n                //NOTE: this is a gotcha of the Microsoft implementation requiring client certs to be stored in a cert store.\r\n                var store = new X509Store(StoreName.My, StoreLocation.CurrentUser);\r\n                store.Open(OpenFlags.ReadOnly);\r\n                //for some reason the cert collection .Find(...) method can't find a cert by thumprint so we created our own.\r\n                var clientCert = FindCert(store, \"5162b416b44f854e2571ffa86d4430dcdb83d723\");\r\n                store.Dispose();\r\n\r\n                //add the cert to the handler\r\n                handler.ClientCertificates.Add(clientCert);\r\n\r\n                //create an HttpClient and pass a handler to it\r\n                using (var httpClient = new HttpClient(handler))\r\n                {\r\n                    //make an API call\r\n                    return await httpClient.GetStringAsync(@\"https://localhost:4430/api/values\");\r\n                }\r\n            }\r\n        }\r\n\r\n        private static X509Certificate2 FindCert(X509Store store, string thumbprint)\r\n        {\r\n            foreach (var cert in store.Certificates)\r\n                if (cert.Thumbprint.Equals(thumbprint,\r\n                    StringComparison.CurrentCultureIgnoreCase))\r\n                    return cert;\r\n            return null;\r\n        }\r\n    }\r\n}`"},{"Id":"6627298838","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:44:56","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/23715","RelatedDescription":"Merged pull request \"Ssl Stream Async Write \" (#23715) at dotnet/corefx","RelatedBody":"/cc @stephentoub @geoffkizer @benaadams \r\nThis needs a bit of tidy still, but I want to check the idea, naming, if you are all cool with it I will start benchmarking and checking off any previous issues.\r\n\r\nI used a single struct for the write side as that way I really only need a single pointer in the sync case and a pointer for the sslState and the cancellation token on the async side. It also means I don't have to drag that token around but get cancellation :)"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6627404124","Type":"PullRequestEvent","CreatedAt":"2017-09-23T02:11:04","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22303","RelatedDescription":"Opened pull request \"[WIP] more Exprs\" (#22303) at dotnet/roslyn","RelatedBody":""},{"Id":"6627288512","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:37:10","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22234","RelatedDescription":"Merged pull request \"NormalizeWhitespace introduces a space between in nullable type\" (#22234) at dotnet/roslyn","RelatedBody":"**Customer scenario**\r\n\r\nWrite an analyzer that modifies syntax and makes a nullable type, and calls `NormalizeWhitespace` API. For `int?`, it introduces a space (`int ?`).\r\n\r\n**Bugs this fixes:**\r\nFixes https://github.com/dotnet/roslyn/issues/21231\r\n\r\n**Risk**\r\n**Performance impact**\r\nLow. The method that determines whether a separator is needed between two tokens now has an extra check (among many)\r\n\r\n**Is this a regression from a previous update?**\r\nNo.\r\n\r\n**How was the bug found?**\r\nCustomer.\r\n\r\n**Test documentation updated?**\r\nNot applicable."},{"Id":"6627288507","Type":"IssuesEvent","CreatedAt":"2017-09-23T00:37:10","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21231","RelatedDescription":"Closed issue \"SyntaxFactory generate Nullable values types output int ?(has a space) instead of int?\" (#21231) at dotnet/roslyn","RelatedBody":"**Version Used**: 2.2.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Use SyntaxFactory to generate SystanxTree, for example\r\n```csharp\r\nvar syntaxNode = CompilationUnit()\r\n.WithMembers(\r\n    SingletonList<MemberDeclarationSyntax>(\r\n        ClassDeclaration(\"Pay201707\")\r\n        .WithModifiers(\r\n            TokenList(\r\n                Token(SyntaxKind.PublicKeyword)))\r\n        .WithMembers(\r\n            SingletonList<MemberDeclarationSyntax>(\r\n                PropertyDeclaration(\r\n                    NullableType(\r\n                        PredefinedType(\r\n                            Token(SyntaxKind.IntKeyword))),\r\n                    Identifier(\"RmbMerAmt\"))\r\n                .WithModifiers(\r\n                    TokenList(\r\n                        Token(SyntaxKind.PublicKeyword)))\r\n                .WithAccessorList(\r\n                    AccessorList(\r\n                        List<AccessorDeclarationSyntax>(\r\n                            new AccessorDeclarationSyntax[]{\r\n                                AccessorDeclaration(\r\n                                    SyntaxKind.GetAccessorDeclaration)\r\n                                .WithSemicolonToken(\r\n                                    Token(SyntaxKind.SemicolonToken)),\r\n                                AccessorDeclaration(\r\n                                    SyntaxKind.SetAccessorDeclaration)\r\n                                .WithSemicolonToken(\r\n                                    Token(SyntaxKind.SemicolonToken))})))))))\r\n.NormalizeWhitespace();\r\n\r\nConsole.WriteLine(syntaxNode.ToFullString());\r\n```  \r\n\r\n**Expected Behavior**:\r\n\r\n```csharp\r\npublic class Pay201707\r\n    {\r\n        public int? RmbMerAmt\r\n        {\r\n            get;\r\n            set;\r\n        }\r\n    }\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n```csharp\r\npublic class Pay201707\r\n    {\r\n        public int ? RmbMerAmt\r\n        {\r\n            get;\r\n            set;\r\n        }\r\n    }\r\n```\r\n"},{"Id":"6627260089","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:17:38","Actor":"drognanar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22286","RelatedDescription":"Merged pull request \"Merge dev15.4.x to master\" (#22286) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev15.4.x into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev15.4.x-to-master-20170922-070010\ngit reset --hard upstream/master\ngit merge upstream/dev15.4.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev15.4.x-to-master-20170922-070010 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6627250620","Type":"IssuesEvent","CreatedAt":"2017-09-23T00:11:46","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22302","RelatedDescription":"Opened issue \"SqlConnection.Finalize can cause crashes\" (#22302) at dotnet/roslyn","RelatedBody":"**Version Used**: Builds as new as 15.0.26730.15\r\n\r\n**Steps to Reproduce**:\r\n\r\nUnknown\r\n\r\n**Expected Behavior**:\r\n\r\n`SqlConnection` instances are not finalized.\r\n\r\n**Actual Behavior**:\r\n\r\n`SqlConnection.Finalize()` is getting called on an unknown code path, resulting in a crash.\r\n\r\n:memo: This was supposed to be corrected by #20806, but it's still showing up."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6627449541","Type":"IssuesEvent","CreatedAt":"2017-09-23T02:54:09","Actor":"yinyue200","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4597","RelatedDescription":"Opened issue \".net native failed when a constant contains non-ASCII character(s)\" (#4597) at dotnet/corert","RelatedBody":"\r\n[netnativetestcase923.zip](https://github.com/dotnet/corert/files/1326239/netnativetestcase923.zip)\r\n"},{"Id":"6627008780","Type":"PullRequestEvent","CreatedAt":"2017-09-22T22:17:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4596","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4596) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6626989266","Type":"PullRequestEvent","CreatedAt":"2017-09-22T22:10:13","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4596","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4596) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6626038062","Type":"IssuesEvent","CreatedAt":"2017-09-22T17:51:17","Actor":"fadimounir","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4595","RelatedDescription":"Opened issue \"Use relative pointers in AssociatedMethodDataNodes instead of absolute pointers\" (#4595) at dotnet/corert","RelatedBody":"See #1285 "},{"Id":"6625544790","Type":"PullRequestEvent","CreatedAt":"2017-09-22T15:48:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4575","RelatedDescription":"Merged pull request \"[ILVerify] Fix block re-verification possibly causing endless loop\" (#4575) at dotnet/corert","RelatedBody":"Currently basic-blocks are marked to be re-verified after a stack merge, if they do not contain any identified errors. As described in #4534 this causes an endless loop if this basic block happens to be the next in the pending basic blocks chain.\r\n\r\nTo prevent this, I changed the stack merge to only re-verify blocks, which are not currently in the pending blocks chain. In order to distinguish between blocks which currently are in the chain and blocks which have already been verified, I set the `EndOffset` of BasicBlocks to `-2` in the `EndImportingBasicBlock` method.\r\n\r\nThis fixes #4534."},{"Id":"6625544786","Type":"IssuesEvent","CreatedAt":"2017-09-22T15:48:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4534","RelatedDescription":"Closed issue \"[ILVerify] Fix endless loop when re-verifying blocks after stack merge\" (#4534) at dotnet/corert","RelatedBody":"When the stack is merged in `ImportFallthrough` the target block is marked for verification again, by setting the `EndOffset` of this block to `0`. However, if the next block already happens to be the next block in the pending blocks chain, an endless loop is created.\r\n\r\nI will take care of this as soon as possible."},{"Id":"6625540732","Type":"PullRequestEvent","CreatedAt":"2017-09-22T15:47:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4590","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#4590) at dotnet/corert","RelatedBody":""},{"Id":"6624572867","Type":"IssuesEvent","CreatedAt":"2017-09-22T12:18:24","Actor":"bazzilic","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4594","RelatedDescription":"Opened issue \"CoreRT doesn't build on Debian 9 (Stretch) due to lack of OpenSSL 1.0\" (#4594) at dotnet/corert","RelatedBody":"CoreRT requires OpenSSL 1.0 to build, but this package is not available on Debian Stretch. Hopefully, you guys can update the scripts.\r\n\r\nBuild fails with a message: `\"No usable version of the libssl was found\"`.\r\n\r\n### Steps to Reproduce\r\nDockerfile:\r\n```Dockerfile\r\nFROM microsoft/dotnet:2-sdk\r\n\r\nRUN  apt-get update  && \\\r\n     apt-get -y install cmake build-essential clang-3.9 libicu57 libunwind8 libunwind-dev \\\r\n     uuid-dev nano libssl1.0.2\r\n\r\nRUN  cd / && git clone https://github.com/dotnet/corert.git  && \\\r\n     cd corert && ./build.sh clean Release\r\n\r\nENV  IlcPath /corert/bin/Linux.x64.Release\r\n```\r\n\r\n`$ docker build .`\r\n\r\nSimilar issue: https://github.com/dotnet/core/issues/649\r\n\r\nHere's the full output:\r\n![image](https://user-images.githubusercontent.com/1805832/30744105-26810c22-9fd3-11e7-915f-bf0681b8ab81.png)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"911357565769936896","CreatedAt":"2017-09-22T22:32:30+00:00","UserScreenname":"dotnet","Text":".NET Core September 2017 Update — macOS High Sierra Support https://t.co/k9gJ5jFIN8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":10,"RawContent":null},{"Id":"911015945291919360","CreatedAt":"2017-09-21T23:55:01+00:00","UserScreenname":"dotnet","Text":"Last one! Happening now on .NET Fundamentals Track @ #dotNETConf: Learn how to use #FSharp to write front-end &amp; bac… https://t.co/OH8cMAcq4I","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":24,"FavoriteCount":14,"RawContent":null},{"Id":"911005750410960896","CreatedAt":"2017-09-21T23:14:31+00:00","UserScreenname":"dotnet","Text":"PSA: .NET Framework September Update - known issues published https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":11,"RawContent":null},{"Id":"911000845860458498","CreatedAt":"2017-09-21T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Get started w/ #FSharp, .NET Core &amp; #VSCode. Watch… https://t.co/VRkwBvSNPU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":28,"FavoriteCount":13,"RawContent":null},{"Id":"910988157197344768","CreatedAt":"2017-09-21T22:04:36+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 Accessibility and WPF Improvements https://t.co/eZLFQxhlLj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":50,"RawContent":null},{"Id":"910985746386911237","CreatedAt":"2017-09-21T21:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Introducing Razor Pages - Join the session here:… https://t.co/NTQg6urmhQ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"910970647702065152","CreatedAt":"2017-09-21T20:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: The #CSharp async await workout - a hands-on coding dem… https://t.co/JDvyBkgvww","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":45,"FavoriteCount":17,"RawContent":null},{"Id":"910955546496335873","CreatedAt":"2017-09-21T19:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Solid Design Patterns for Mere Mortals - see some… https://t.co/iFgxAVURUP","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":47,"FavoriteCount":11,"RawContent":null},{"Id":"910940451754188801","CreatedAt":"2017-09-21T18:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: #CSharp Part 2 - What's New. Learn the structure and co… https://t.co/dSPE4e9EUE","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":36,"FavoriteCount":18,"RawContent":null},{"Id":"910925349013348352","CreatedAt":"2017-09-21T17:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: C# Part 1 - Introduction to C# - Join us:… https://t.co/af45Jelz1W","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":41,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2017-09-23T05:30:18.2150727Z","RunDurationInMilliseconds":6779}